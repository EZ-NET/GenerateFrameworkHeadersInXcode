//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct ConversionCandidate {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
};

struct LearningDictionary {
    struct __CFString *_field1;
    int _field2;
    unsigned char _field3;
    unsigned char _field4;
    double _field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
    struct LearningDictionaryTrie *_field7;
    struct vector<EntryField, std::__1::allocator<EntryField>> _field8;
    void *_field9;
    void *_field10;
    void *_field11;
    int _field12;
    void *_field13;
};

struct LearningDictionaryTrie;

struct MecabraCandidateBase {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct vector<EntryField, std::__1::allocator<EntryField>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<EntryField *, std::__1::allocator<EntryField>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libmecabra.dylib
// UUID: C828F71E-A983-3A9E-A115-CA5A43DB82BF
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 660.4.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@interface MecabraDatabaseCacheIdentifierController : NSObject
{
    unsigned long long _counter;
    NSMutableArray *_recycledIdentifiers;
}

@property(retain, nonatomic) NSMutableArray *recycledIdentifiers; // @synthesize recycledIdentifiers=_recycledIdentifiers;
@property(nonatomic) unsigned long long counter; // @synthesize counter=_counter;
- (void)reset;
- (void)recycleIdentifier:(unsigned long long)arg1;
- (unsigned long long)newIdentifier;
- (void)dealloc;
- (id)init;

@end

@interface MecabraDatabaseCache : NSObject
{
    NSMutableDictionary *_entryToIdentifierMapping;
    MecabraDatabaseCacheIdentifierController *_identifierController;
    NSMutableDictionary *_identifierToEntryMapping;
    NSArray *_uniqueKeys;
    unsigned long long _currentSeed;
}

@property(nonatomic) unsigned long long currentSeed; // @synthesize currentSeed=_currentSeed;
@property(retain, nonatomic) NSArray *uniqueKeys; // @synthesize uniqueKeys=_uniqueKeys;
@property(retain, nonatomic) NSMutableDictionary *identifierToEntryMapping; // @synthesize identifierToEntryMapping=_identifierToEntryMapping;
@property(retain, nonatomic) MecabraDatabaseCacheIdentifierController *identifierController; // @synthesize identifierController=_identifierController;
@property(retain, nonatomic) NSMutableDictionary *entryToIdentifierMapping; // @synthesize entryToIdentifierMapping=_entryToIdentifierMapping;
- (void)reset;
- (void)updateSeedNumber:(unsigned long long)arg1;
- (unsigned long long)nextSeed;
- (id)keyStringForEntry:(id)arg1;
- (void)deleteEntry:(id)arg1;
- (void)updateEntry:(id)arg1 keyString:(id)arg2;
- (id)entryForIdentifier:(unsigned long long)arg1;
- (unsigned long long)identifierForEntry:(id)arg1;
- (id)partialEntryForEntry:(id)arg1;
@property(readonly, nonatomic) NSArray *allIdentifiers;
- (void)dealloc;
- (id)init;

@end

@interface MecabraDatabaseImpl : NSObject
{
    double _lastUpdateTime;
    _Bool _sqliteDatabaseMigrated;
    MecabraCoreDataController *_databaseController;
    NSString *_type;
    NSArray *_uniqueKeys;
    NSURL *_URL;
}

@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(nonatomic) _Bool sqliteDatabaseMigrated; // @synthesize sqliteDatabaseMigrated=_sqliteDatabaseMigrated;
@property(nonatomic) double lastUpdateTime; // @synthesize lastUpdateTime=_lastUpdateTime;
@property(retain, nonatomic) NSArray *uniqueKeys; // @synthesize uniqueKeys=_uniqueKeys;
@property(retain, nonatomic) MecabraCoreDataController *databaseController; // @synthesize databaseController=_databaseController;
- (void)clearStoredMergeEntries;
- (id)entriesToMerge;
- (void)save;
- (void)setDatabaseProperty:(id)arg1 forKey:(id)arg2;
- (id)databasePropertyForKey:(id)arg1;
- (void)removeDuplicatesForEntry:(id)arg1 sortDescriptors:(id)arg2 restrictToNumberOfElements:(unsigned long long)arg3 identifierKey:(id)arg4 uniqueKeys:(id)arg5;
- (void)setValuesForEntry:(id)arg1;
- (void)deleteEntry:(id)arg1;
- (void)addEntry:(id)arg1;
@property(readonly, nonatomic) NSArray *allEntries;
- (void)dealloc;
- (id)initWithURL:(id)arg1 type:(id)arg2 uniqueKeys:(id)arg3;

@end

@interface MecabraFacemarkCandidate : NSObject
{
    NSString *_string;
    NSString *_category;
}

+ (id)copyFacemarkCandidatesForLocale:(id)arg1;
@property(readonly) NSString *category; // @synthesize category=_category;
@property(readonly) NSString *string; // @synthesize string=_string;
- (void)dealloc;
- (id)description;
- (id)initWithString:(id)arg1 category:(id)arg2;

@end

@interface MecabraDatabaseListener : NSObject
{
    struct LearningDictionary *target;
}

- (void)databaseShouldRefresh;
- (void)databaseChanged;
- (void)dealloc;
- (id)initWithLearningDictionary:(struct LearningDictionary *)arg1;

@end

@interface MecabraWordProperties : NSObject
{
    NSString *_analysisString;
    NSArray *_characterInformation;
    NSArray *_codeLookupInformation;
    _Bool _emoji;
    int _language;
}

+ (id)sortedRadicalList;
+ (id)searchResultsForString:(id)arg1 dictionary:(struct __IDXIndex *)arg2;
+ (struct __IDXIndex *)codeLookupInformationDictionary;
+ (struct __IDXIndex *)characterInformationDictionary;
+ (struct __IDXIndex *)informationDictionaryAtPath:(struct __CFURL *)arg1;
@property(nonatomic) int language; // @synthesize language=_language;
@property(nonatomic, getter=isEmoji) _Bool emoji; // @synthesize emoji=_emoji;
@property(retain, nonatomic) NSArray *codeLookupInformation; // @synthesize codeLookupInformation=_codeLookupInformation;
@property(retain, nonatomic) NSArray *characterInformation; // @synthesize characterInformation=_characterInformation;
@property(copy, nonatomic) NSString *analysisString; // @synthesize analysisString=_analysisString;
- (id)valueForKey:(int)arg1;
- (id)isIncludedInCurrentLanguage;
- (id)cangjieCodes;
- (id)bihuaCodes;
- (id)wubixingCodes;
- (void)dealloc;
- (id)initWithString:(id)arg1 language:(int)arg2;
- (id)separatedInputCodesForString:(id)arg1;
- (id)tonesForString:(id)arg1;
- (id)initialsForStrings:(id)arg1;
- (id)zhuyinInformationForString:(id)arg1;
- (id)pinyinInformationForString:(id)arg1;
- (id)strokeInformationForString:(id)arg1;
- (id)radicalInformationForString:(id)arg1;

@end

@interface MecabraCandidate : NSObject <NSCopying>
{
    void *_rawCandidate;
}

+ (id)createSyntheticCandidate:(id)arg1 withLexicon:(void *)arg2 language:(int)arg3;
- (void)setWeight:(unsigned long long)arg1;
- (id)wordIDs;
- (id)wordReadings;
- (id)words;
- (id)syllablesInDictionaryReading;
- (id)syllablesInConvertedAnalysisString;
- (id)syllablesInAnalysisString;
- (id)syllablesInString:(id)arg1 syllableLengths:(id)arg2;
- (id)syllabifiedDictionaryReading;
- (id)syllabifiedConvertedAnalysisString;
- (id)syllabifiedAnalysisString;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)convertedAnalysisStringForFirstSyllable;
@property(readonly, nonatomic) struct ConversionCandidate *rawConversionCandidate;
- (id)initWithCandidate:(struct MecabraCandidateBase *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct __CFArray *)copySyllableLengthArrayInDictionaryReading;
- (struct __CFArray *)copySyllableLengthArrayInConvertedAnalysisString;
- (struct __CFArray *)copySyllableLengthArrayInAnalysisString;
- (unsigned short)matchedLengthType;
- (unsigned short)matchType;
- (unsigned short)kind;
- (long long)weight;
- (unsigned short)lastPrefixValue;
- (unsigned long long)trieValueAtIndex:(unsigned long long)arg1;
- (unsigned short)rcAttrAtIndex:(unsigned long long)arg1;
- (unsigned short)lcAttrAtIndex:(unsigned long long)arg1;
- (struct __CFArray *)copySyllableLengthArrayForWordAtIndex:(unsigned long long)arg1;
- (_Bool)wordIsFromSystemDictionaryAtIndex:(unsigned long long)arg1;
- (long long)phraseBoundaryAfterWordAtIndex:(long long)arg1;
- (unsigned short)wordReadingLengthAtIndex:(unsigned long long)arg1;
- (CDStruct_912cb5d2)wordRangeAtIndex:(long long)arg1;
- (unsigned short)wordLengthAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long wordCount;
@property(readonly, nonatomic) NSString *dictionaryReading;
@property(readonly, nonatomic) NSString *convertedAnalysisString;
@property(readonly, nonatomic) NSString *analysisString;
@property(readonly, nonatomic) NSString *surface;
@property(readonly, nonatomic) int type;
@property(readonly, nonatomic) _Bool isAutocorrectedCandidate;
@property(readonly, nonatomic) _Bool isFuzzyMatchCandidate;
@property(readonly, nonatomic) _Bool isPredictionCandidate;
@property(readonly, nonatomic) _Bool isUserWordCandidate;
@property(readonly, nonatomic) _Bool isLearningDictionaryCandidate;
@property(readonly, nonatomic) _Bool isPersonName;
@property(readonly, nonatomic) _Bool isEmojiCandidate;
@property(readonly, nonatomic) _Bool isExtensionCandidate;
@property(readonly, nonatomic) _Bool isConversionCandidate;
- (void)dealloc;
@property(readonly, nonatomic) struct MecabraCandidateBase *rawCandidate;

@end

@interface MecabraCoreDataController : NSObject
{
    NSEntityDescription *_entityDescription;
    NSURL *_localInfoPlistURL;
    NSURL *_localStoreURL;
    NSURL *_localURL;
    NSString *_localURLLastPartOfName;
    NSManagedObjectModel *_managedObjectModel;
    NSManagedObjectContext *_managedObjectContext;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSURL *_storeURL;
    NSString *_type;
    NSArray *_storedElementsForMerge;
}

+ (void)resetDatabaseWithType:(id)arg1 URL:(id)arg2;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSURL *storeURL; // @synthesize storeURL=_storeURL;
@property(retain, nonatomic) NSArray *storedElementsForMerge; // @synthesize storedElementsForMerge=_storedElementsForMerge;
@property(retain, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(retain, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(retain, nonatomic) NSURL *localURL; // @synthesize localURL=_localURL;
@property(retain, nonatomic) NSURL *localStoreURL; // @synthesize localStoreURL=_localStoreURL;
@property(readonly, nonatomic) NSEntityDescription *entityDescription; // @synthesize entityDescription=_entityDescription;
- (void)save;
- (void)sendRemoteNotification;
- (void)databaseSynced:(id)arg1;
- (void)clearStoredMergeEntries;
- (id)entriesToMerge;
- (void)removeCoreDataUbiquitySupportFolder:(id)arg1;
- (_Bool)containsLocalDatabase:(id)arg1;
- (_Bool)containsLegacyUbiquitousInformation:(id)arg1;
- (id)coreDataUbiquityFolderURLforStore:(id)arg1;
- (void)migrateLocallyStoredUbiquitousInformationToLocalDictionary;
- (id)entriesFromStrippedStoreURL:(id)arg1;
- (_Bool)stripUbiquitousInformationFromStore:(id)arg1;
- (id)locallyPresentUbiquitousFiles;
- (id)entityDescriptionForContext:(id)arg1;
@property(retain, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
- (void)prepareURLForDatabaseFile:(id)arg1;
- (_Bool)shouldSyncDatabase;
- (id)newPersistentStoreWithURL:(id)arg1 ubiquityContainerIdentifier:(id)arg2 managedObjectModel:(id)arg3;
@property(readonly, nonatomic) NSURL *localInfoPlistURL; // @synthesize localInfoPlistURL=_localInfoPlistURL;
- (id)databaseName;
- (void)dealloc;
- (id)initWithType:(id)arg1 URL:(id)arg2;
- (void)logMessage:(id)arg1;
- (void)logEntry:(id)arg1 operationType:(id)arg2 extraInformation:(id)arg3;
- (_Bool)isLogging;
- (void)setValuesForEntry:(id)arg1 uniquingKeys:(id)arg2;
- (id)removeDuplicatesForEntry:(id)arg1 uniquingKeys:(id)arg2 sortDescriptors:(id)arg3 restrictToNumberOfElements:(unsigned long long)arg4 identifierKey:(id)arg5;
- (id)dictionaryValuesFromManagedObjects:(id)arg1;
- (id)dictionaryValueFromManagedObject:(id)arg1;
- (id)databasePropertyForKey:(id)arg1;
- (void)setDatabaseProperty:(id)arg1 forKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2 entry:(id)arg3;
- (void)deleteAllMatchingEntries:(id)arg1;
- (void)deleteAllElements;
- (void)deleteEntry:(id)arg1;
- (void)addEntry:(id)arg1;
- (id)searchResultsWithValueDictionary:(id)arg1 managedObjectContext:(id)arg2 sortDescriptors:(id)arg3;
- (id)searchResultsWithValueDictionary:(id)arg1 sortDescriptors:(id)arg2;
- (id)searchResultsWithValueDictionary:(id)arg1;
- (_Bool)dictionaryEntryHasAllRequiredKeys:(id)arg1;

@end

@interface MecabraCoreDataProperties : NSObject
{
    NSMutableDictionary *_descriptionDictionary;
    NSString *_identifier;
    NSString *_type;
}

+ (id)ubiquityContainerURL;
+ (id)defaultDescriptionPath;
+ (void)setDefaultDescriptionPath:(id)arg1;
+ (id)sharedInstanceForType:(id)arg1;
@property(readonly, retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSMutableDictionary *descriptionDictionary; // @synthesize descriptionDictionary=_descriptionDictionary;
@property(readonly, nonatomic) NSString *ubiquityContainerIdentifier;
- (id)valueForKey:(id)arg1;
- (void)forceNoSync;
- (_Bool)databaseSyncs;
- (id)ubiquitousTransactionURLForIdentifier:(id)arg1;
- (id)ubiquitousStoreDirectoryURLForIdentifier:(id)arg1;
- (id)ubiquitousURLWithSuffix:(id)arg1;
- (id)sortDescriptors;
- (id)uniqueKeys;
- (id)requiredKeys;
- (id)entityModelName;
- (id)entityDescriptionURL;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface MecabraAnalysisContextImpl : NSObject
{
    NSMutableArray *_candidateContext;
    NSString *_stringContext;
    NSString *_stringBeforeCaret;
    NSMutableString *_candidateContextString;
    _Bool _rebuildCandidateContextString;
}

@property(retain, nonatomic) NSString *stringBeforeCaret; // @synthesize stringBeforeCaret=_stringBeforeCaret;
@property(retain, nonatomic) NSString *stringContext; // @synthesize stringContext=_stringContext;
@property(nonatomic) _Bool rebuildCandidateContextString; // @synthesize rebuildCandidateContextString=_rebuildCandidateContextString;
@property(retain, nonatomic) NSMutableString *candidateContextString; // @synthesize candidateContextString=_candidateContextString;
@property(retain, nonatomic) NSMutableArray *candidateContext; // @synthesize candidateContext=_candidateContext;
- (void)reset;
@property(readonly, nonatomic) NSString *stringContextForAnalysis;
@property(readonly, nonatomic) NSArray *candidateContextForAnalysis;
- (void)revertLastCommittedCandidate;
- (void)addCandidate:(id)arg1;
- (void)adjustCandidateContext;
- (void)clearContextForAddition;
- (CDStruct_4bcfbbae)positionInContextWithPartialDocumentStringLength:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

@end

@interface NSString (CharacterInformationAdditions)
- (id)strokeStringFromNumberString;
- (id)toneFromPinyinSyllableWithNumber;
- (id)zhuyinSyllableFromPinyinSyllable;
- (id)pinyinStringFromPinyinWithToneNumber;
- (id)stringByStrippingDiacritics;
- (long long)traditionalChineseZhuyinCompare:(id)arg1;
- (long long)traditionalChinesePinyinCompare:(id)arg1;
- (long long)simplifiedChineseCompare:(id)arg1;
- (id)stringByApplyingPinyinToneMarkToFirstSyllableWithToneNumber:(unsigned long long)arg1;
- (id)componentsByLanguage:(int)arg1;
- (id)firstCharacter;
@end

