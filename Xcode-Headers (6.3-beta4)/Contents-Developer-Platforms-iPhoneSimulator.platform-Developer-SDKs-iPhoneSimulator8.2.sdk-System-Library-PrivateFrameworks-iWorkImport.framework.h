//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTNodeArrayArchive;

struct AccumulationData {
    float _field1;
    float _field2;
    struct RenderState _field3;
};

struct Action;

struct ActionFinder;

struct ActiveLabelsTypeBounds {
    long long _field1;
    struct ObjcSharedPtr<NSMutableIndexSet> _field2;
    struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> _field3;
};

struct AddCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    struct CustomFormatArchive *_field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct AnimationAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    basic_string_a1f69cfb *_field4;
    double _field5;
    double _field6;
    unsigned int _field7;
    _Bool _field8;
    struct Color *_field9;
    int _field10;
    unsigned int _field11[1];
};

struct AnnotationCacheArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    int _field4;
    unsigned int _field5[1];
};

struct ArchiveInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned long long identifier_;
    struct RepeatedPtrField<TSP::MessageInfo> message_infos_;
    int _cached_size_;
    unsigned int _has_bits_[1];
};

struct ArgumentPlaceholderNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ArrayNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct AttributeSpecs {
    unsigned long long stride;
    unsigned long long offset;
    unsigned long long components;
};

struct AxisGridLocation {
    _Bool _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    tvec3_17f03ce0 _field4;
};

struct AxisLabelCacheItem;

struct BarElementInfo {
    _Bool _field1;
    float _field2;
    _Bool _field3;
    unsigned long long _field4;
};

struct BarExtrusionCrossSectionDetails {
    float detail;
    float tension;
    float adaptiveThreshold;
    float creaseAngle;
    int crossType;
};

struct BarExtrusionDetails {
    struct BarExtrusionCrossSectionDetails crossSection;
    struct BarExtrusionSpineDetails spine;
};

struct BarExtrusionSetting {
    float size;
    _Bool hasTopBevel;
    _Bool hasBottomBevel;
    _Bool isCylindrical;
    _Bool isStackedBar;
    struct BarExtrusionDetails details;
};

struct BarExtrusionSpineDetails {
    float bevelHeight;
    long long bevelSlices;
    long long stride;
    float creaseAngle;
};

struct BarIntercept {
    double _field1;
    id _field2;
};

struct BezierPathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Size *_field4;
    struct Path *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct BooleanCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    _Bool _field3;
    int _field4;
    unsigned int _field5[1];
};

struct BooleanNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    _Bool _field4;
    int _field5;
    unsigned int _field6[1];
};

struct BufferStates {
    struct array<TSCH3D::GLSingleState, 2> states;
};

struct BuildArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    basic_string_a1f69cfb *_field4;
    double _field5;
    struct BuildAttributesArchive *_field6;
    int _field7;
    unsigned int _field8[1];
};

struct BuildAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct AnimationAttributesArchive *_field3;
    double _field4;
    unsigned int _field5;
    int _field6;
    double _field7;
    double _field8;
    unsigned int _field9;
    unsigned int _field10;
    double _field11;
    double _field12;
    int _field13;
    int _field14;
    double _field15;
    struct PathSourceArchive *_field16;
    int _field17;
    int _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    unsigned int _field22;
    double _field23;
    int _field24;
    unsigned int _field25;
    basic_string_a1f69cfb *_field26;
    basic_string_a1f69cfb *_field27;
    double _field28;
    double _field29;
    struct Color *_field30;
    basic_string_a1f69cfb *_field31;
    int _field32;
    unsigned int _field33[1];
};

struct BuildChunkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    double _field4;
    double _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CFUUIDArchive;

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGColor;

struct CGContext;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CachedLabelBounds {
    tvec3_17f03ce0 _field1;
    box_80622335 _field2;
    tvec2_84d5962d _field3;
    struct ObjcSharedPtr<NSString> _field4;
};

struct CalloutPathSourceArchive;

struct CellCoordinateVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSCE::CellCoordinateArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct CellID;

struct CellMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct RepeatedPtrField<TST::CellMapArchive_CellMapEntry> _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct CellMapTileArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::CellMapTileArchive_CellMapEntry> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct CellMergeInfoArchive;

struct CellRange;

struct CellRegion {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::CellRange> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct CellStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct CellStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct CellStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    struct Deprecated_TableStrokeArchive *_field4;
    struct Deprecated_TableStrokeArchive *_field5;
    _Bool _field6;
    int _field7;
    struct Deprecated_TableStrokeArchive *_field8;
    struct Deprecated_TableStrokeArchive *_field9;
    struct PaddingArchive *_field10;
    struct StrokeArchive *_field11;
    struct StrokeArchive *_field12;
    struct StrokeArchive *_field13;
    struct StrokeArchive *_field14;
    int _field15;
    unsigned int _field16[1];
};

struct CellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct BooleanCellValueArchive *_field3;
    struct DateCellValueArchive *_field4;
    struct NumberCellValueArchive *_field5;
    struct StringCellValueArchive *_field6;
    int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct CharacterStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct CharacterStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct CharacterStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    basic_string_a1f69cfb *_field8;
    struct Color *_field9;
    basic_string_a1f69cfb *_field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    float _field15;
    float _field16;
    int _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    struct Color *_field22;
    struct ShadowArchive *_field23;
    float _field24;
    float _field25;
    struct Color *_field26;
    struct Color *_field27;
    float _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    struct Color *_field33;
    float _field34;
    int _field35;
    struct RepeatedPtrField<TSWP::FontFeatureArchive> _field36;
    basic_string_a1f69cfb *_field37;
    basic_string_a1f69cfb *_field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    int _field42;
    unsigned int _field43[2];
};

struct Chart3DBaseImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DVectorArchive *_field3;
    float _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DDiffuseMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DDirectionalLightArchive;

struct Chart3DEmissiveMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DEnvironmentMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> _field4;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field5;
    _Bool _field6;
    int _field7;
    unsigned int _field8[1];
};

struct Chart3DEnvironmentPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct Chart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DLightingModelArchive *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct Chart3DFixedFunctionLightingModelArchive;

struct Chart3DImageTextureTilingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DBaseImageTextureTilingArchive *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    _Bool _field11;
    int _field12;
    unsigned int _field13[1];
};

struct Chart3DLightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Chart3DVectorArchive *_field4;
    struct Chart3DVectorArchive *_field5;
    struct Chart3DVectorArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    float _field8;
    unsigned int _field9;
    struct Chart3DPointLightArchive *_field10;
    struct Chart3DDirectionalLightArchive *_field11;
    struct Chart3DSpotLightArchive *_field12;
    _Bool _field13;
    int _field14;
    unsigned int _field15[1];
};

struct Chart3DLightingModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DPhongLightingModelArchive *_field3;
    struct Chart3DFixedFunctionLightingModelArchive *_field4;
    struct Chart3DEnvironmentPackageArchive *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct Chart3DLightingPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct RepeatedPtrField<TSCH::Chart3DLightArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DModulateMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DPhongLightingModelArchive;

struct Chart3DPhongMaterialPackageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DEmissiveMaterialArchive *_field3;
    struct Chart3DDiffuseMaterialArchive *_field4;
    struct Chart3DModulateMaterialArchive *_field5;
    struct Chart3DSpecularMaterialArchive *_field6;
    struct Chart3DShininessMaterialArchive *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct Chart3DPointLightArchive;

struct Chart3DShininessMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DSpecularMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DTexturesMaterialArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DSpotLightArchive;

struct Chart3DTSPImageDataTextureArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DataReference *_field3;
    struct DataReference *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    int _field7;
    unsigned int _field8[1];
};

struct Chart3DTexturesMaterialArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Chart3DVectorArchive *_field3;
    struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Chart3DVectorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ChartAnimationElementInfo {
    id _field1;
    id _field2;
    float _field3;
    id _field4;
    id _field5;
    tvec2_3b141483 _field6;
    unsigned long long _field7;
    id _field8;
};

struct ChartAnimationTimeRanges {
    box_e9f23397 elementsRange;
    box_e9f23397 valueLabelsRange;
    box_e9f23397 gridlinesRange;
    box_e9f23397 labelsRange;
    box_e9f23397 shadowBlendRange;
    _Bool gridlinesEaseInEaseOut;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> growPerElementInterpolation;
    _Bool blendDynamicShadows;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> labelsInterpolation;
    struct ObjcSharedPtr<TSCH3DAnimationInterpolation> valueLabelsInterpolation;
};

struct ChartArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    int _field4;
    int _field5;
    struct RectArchive *_field6;
    struct Reference *_field7;
    struct ChartGridArchive *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    int _field12;
    _Bool _field13;
    _Bool _field14;
    struct Reference *_field15;
    struct Reference *_field16;
    RepeatedPtrField_a0d2dbe7 _field17;
    RepeatedPtrField_a0d2dbe7 _field18;
    RepeatedPtrField_a0d2dbe7 _field19;
    RepeatedPtrField_a0d2dbe7 _field20;
    RepeatedPtrField_a0d2dbe7 _field21;
    struct SparseReferenceArrayArchive *_field22;
    struct SparseReferenceArrayArchive *_field23;
    RepeatedPtrField_a0d2dbe7 _field24;
    unsigned int _field25;
    int _field26;
    unsigned int _field27[1];
};

struct ChartAxisGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FormatStructArchive *_field3;
    struct FormatStructArchive *_field4;
    struct FormatStructArchive *_field5;
    int _field6;
    int _field7;
    struct FormatStructArchive *_field8;
    struct FormatStructArchive *_field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    float _field18;
    basic_string_a1f69cfb *_field19;
    struct ChartsNSNumberDoubleArchive *_field20;
    struct ChartsNSNumberDoubleArchive *_field21;
    struct StrokeArchive *_field22;
    int _field23;
    int _field24;
    float _field25;
    float _field26;
    struct ShadowArchive *_field27;
    struct StrokeArchive *_field28;
    struct ShadowArchive *_field29;
    struct StrokeArchive *_field30;
    float _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    unsigned int _field43[2];
};

struct ChartAxisIDArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct ChartGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    float _field4;
    struct Chart3DVectorArchive *_field5;
    struct Chart3DVectorArchive *_field6;
    struct Chart3DVectorArchive *_field7;
    float _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    basic_string_a1f69cfb *_field13;
    int _field14;
    int _field15;
    struct Chart3DLightingPackageArchive *_field16;
    float _field17;
    float _field18;
    struct FillArchive *_field19;
    struct StrokeArchive *_field20;
    struct ShadowArchive *_field21;
    struct StrokeArchive *_field22;
    struct FillArchive *_field23;
    float _field24;
    _Bool _field25;
    _Bool _field26;
    float _field27;
    float _field28;
    struct Color *_field29;
    int _field30;
    int _field31;
    int _field32;
    unsigned int _field33[1];
};

struct ChartGridArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_236b8a23 _field3;
    RepeatedPtrField_236b8a23 _field4;
    int _field5;
    _Bool _field6;
    struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> _field7;
    int _field8;
    unsigned int _field9[1];
};

struct ChartGrowAnimationState {
    float _field1;
    struct ClipPlaneState _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    tmat4x4_3074befe _field6;
    tmat4x4_3074befe _field7;
};

struct ChartInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct ChartModelArchive *_field4;
    struct Reference *_field5;
    struct LegendModelArchive *_field6;
    struct RectArchive *_field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    RepeatedPtrField_a0d2dbe7 _field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
    int _field13;
    int _field14;
    struct SparseReferenceArrayArchive *_field15;
    struct SparseReferenceArrayArchive *_field16;
    struct Reference *_field17;
    struct Reference *_field18;
    struct Point *_field19;
    struct Reference *_field20;
    RepeatedPtrField_a0d2dbe7 _field21;
    int _field22;
    int _field23;
    _Bool _field24;
    int _field25;
    unsigned int _field26[1];
};

struct ChartLabelsContainingLabelRenderInfo {
    id _field1;
    tvec2_3b141483 _field2;
    tvec2_3b141483 _field3;
    id _field4;
    tvec3_17f03ce0 _field5;
    tvec3_17f03ce0 _field6;
    unsigned int _field7;
    tvec2_84d5962d _field8;
    float _field9;
    tvec2_84d5962d _field10;
    float _field11;
};

struct ChartMediatorFormulaStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field3;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field4;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field5;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field6;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field7;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field8;
    struct RepeatedPtrField<TSCE::FormulaArchive> _field9;
    int _field10;
    int _field11;
    unsigned int _field12[1];
};

struct ChartModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    RepeatedField_27dfe32f _field5;
    struct ChartGridArchive *_field6;
    unsigned int _field7;
    unsigned int _field8;
    int _field9;
    unsigned int _field10[1];
};

struct ChartProjectedBoundsConverter {
    struct ChartProjectedBoundsSpaces *_field1;
    float _field2;
    _Bool _field3;
    tvec2_84d5962d _field4;
};

struct ChartProjectedBoundsSpaces {
    box_80622335 mChart;
    box_80622335 mOrient;
    box_80622335 mDrawing;
    box_80622335 mLayout;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayout;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
};

struct ChartRepRenderIndexSet {
    TSCH3DChartRep *rep;
    _Bool built;
    struct ObjcSharedPtr<NSIndexSet> series;
    long long seriesIndex;
    struct ObjcSharedPtr<NSIndexSet> values;
    long long currentChunk;
};

struct ChartSceneInfo {
    TSCH3DScene *scene;
    TSCHChartInfo *chartInfo;
    TSCHChartType *chartType;
    TSCHChartSeriesType *seriesType;
    CDStruct_9aa9521f layoutSettings;
};

struct ChartScenePropertyAccessor {
    id _field1;
    id _field2;
};

struct ChartSelectionPathArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ChartSelectionPathTypeArchive *_field3;
    struct ChartSelectionPathArchive *_field4;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ChartSelectionPathTypeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct ChartSeriesGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field3;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field4;
    float _field5;
    float _field6;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field7;
    struct ChartsNSArrayOfNSNumberDoubleArchive *_field8;
    float _field9;
    float _field10;
    float _field11;
    int _field12;
    int _field13;
    float _field14;
    float _field15;
    int _field16;
    int _field17;
    float _field18;
    struct FormatStructArchive *_field19;
    struct FormatStructArchive *_field20;
    struct FormatStructArchive *_field21;
    int _field22;
    int _field23;
    struct FormatStructArchive *_field24;
    struct FormatStructArchive *_field25;
    struct FormatStructArchive *_field26;
    int _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    int _field36;
    int _field37;
    float _field38;
    basic_string_a1f69cfb *_field39;
    float _field40;
    int _field41;
    int _field42;
    float _field43;
    float _field44;
    int _field45;
    float _field46;
    int _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
    int _field52;
    struct LineEndArchive *_field53;
    struct LineEndArchive *_field54;
    struct ShadowArchive *_field55;
    struct StrokeArchive *_field56;
    struct StrokeArchive *_field57;
    struct FillArchive *_field58;
    int _field59;
    float _field60;
    struct ShadowArchive *_field61;
    struct StrokeArchive *_field62;
    int _field63;
    float _field64;
    struct FillArchive *_field65;
    struct StrokeArchive *_field66;
    float _field67;
    int _field68;
    float _field69;
    _Bool _field70;
    _Bool _field71;
    struct ShadowArchive *_field72;
    int _field73;
    int _field74;
    struct StrokeArchive *_field75;
    int _field76;
    unsigned int _field77[3];
};

struct ChartUIState {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct ChartsNSArrayOfNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedField<double> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct ChartsNSNumberDoubleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    double _field3;
    int _field4;
    unsigned int _field5[1];
};

struct ChartsNumberFormatArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    int _field4;
    unsigned int _field5;
    basic_string_a1f69cfb *_field6;
    int _field7;
    int _field8;
    basic_string_a1f69cfb *_field9;
    unsigned int _field10;
    unsigned int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    unsigned int _field16;
    double _field17;
    RepeatedPtrField_236b8a23 _field18;
    struct IndexSet *_field19;
    _Bool _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    basic_string_a1f69cfb *_field24;
    basic_string_a1f69cfb *_field25;
    unsigned int _field26;
    int _field27;
    unsigned int _field28[1];
};

struct ClassicStylesheetRecordArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct ClassicThemeRecordArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Reference *_field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ClipPlaneState {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tmat4x4_3074befe _field3;
    plane_849e6053 _field4[2];
};

struct ColorResult {
    _Bool _field1;
    struct Color {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field2;
};

struct ColumnStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct ColumnStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ColumnStylePropertiesArchive;

struct ColumnsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ColumnsArchive_EqualColumnsArchive *_field3;
    struct ColumnsArchive_NonEqualColumnsArchive *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct ColumnsArchive_EqualColumnsArchive;

struct ColumnsArchive_NonEqualColumnsArchive;

struct CommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct CommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    struct IndexSet *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct CommandSelectionBehaviorHistoryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSK::CommandSelectionBehaviorHistoryArchive_Entry> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct CommentInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeInfoArchive *_field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct CommentStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Date *_field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct CompletionTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct TokenAttachmentArchive *_field3;
    basic_string_a1f69cfb *_field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ComponentExternalReferenceInfo {
    long long _field1;
    _Bool _field2;
};

struct ComponentInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned long long _field3;
    basic_string_a1f69cfb *_field4;
    basic_string_a1f69cfb *_field5;
    RepeatedField_27dfe32f _field6;
    int _field7;
    RepeatedField_27dfe32f _field8;
    int _field9;
    RepeatedPtrField_1f1a6efb _field10;
    struct RepeatedPtrField<TSP::ComponentDataReference> _field11;
    struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> _field12;
    unsigned long long _field13;
    _Bool _field14;
    int _field15;
    unsigned int _field16[1];
};

struct ConnectionLineArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeArchive *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct ConnectionLinePathSourceArchive;

struct ContactShadowArchive;

struct ContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct GeometryArchive *_field3;
    struct Reference *_field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    int _field6;
    unsigned int _field7[1];
};

struct CopyingFileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
};

struct CopyingOutputStream;

struct CopyingOutputStreamAdaptor {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingOutputStream *_field2;
    _Bool _field3;
    _Bool _field4;
    long long _field5;
    struct scoped_array<unsigned char> _field6;
    int _field7;
    int _field8;
};

struct CurvedShadowArchive;

struct CustomFormatArchive;

struct DEPRECATEDChart3DFillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    struct Chart3DLightingModelArchive *_field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
    unsigned int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct Data {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
};

struct DataBuffer2DDimension {
    tvec2_3b141483 mSize;
    unsigned long long mComponents;
    _Bool mHasLevels;
};

struct DataBuffer3DDimension {
    tvec3_c2818ced mSize;
    unsigned long long mComponents;
};

struct DataBufferInfo {
    int componentType;
    unsigned long long components;
    unsigned long long count;
    unsigned long long byteSize;
    unsigned long long componentByteSize;
    unsigned long long elementByteSize;
};

struct DataBufferLevelData {
    void *_field1;
    tvec3_c2818ced _field2;
};

struct DataInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned long long _field3;
    basic_string_a1f69cfb *_field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    basic_string_a1f69cfb *_field8;
    basic_string_a1f69cfb *_field9;
    int _field10;
    unsigned int _field11[1];
};

struct DataReference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned long long _field3;
    int _field4;
    unsigned int _field5[1];
};

struct DataStore {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct HeaderStorage *_field3;
    struct Reference *_field4;
    struct TileStorage *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    unsigned int _field14;
    unsigned int _field15;
    struct TableRBTree *_field16;
    struct TableRBTree *_field17;
    struct Reference *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    unsigned int _field22;
    int _field23;
    unsigned int _field24[1];
};

struct DatabaseDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    basic_string_a1f69cfb *_field4;
    basic_string_a1f69cfb *_field5;
    unsigned long long _field6;
    unsigned int _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct Date {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    double _field3;
    int _field4;
    unsigned int _field5[1];
};

struct DateCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    double _field3;
    struct FormatStructArchive *_field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct DateNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    basic_string_a1f69cfb *_field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct Deprecated_StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Deprecated_TableStrokeArchive *_field3;
    struct Deprecated_TableStrokeArchive *_field4;
    struct Deprecated_TableStrokeArchive *_field5;
    int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct Deprecated_TableStrokeArchive;

struct Descriptor {
    basic_string_a1f69cfb *_field1;
    basic_string_a1f69cfb *_field2;
    struct FileDescriptor *_field3;
    struct Descriptor *_field4;
    struct MessageOptions *_field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    struct FieldDescriptor *_field9;
    int _field10;
    struct Descriptor *_field11;
    int _field12;
    struct EnumDescriptor *_field13;
    int _field14;
    struct ExtensionRange *_field15;
    int _field16;
    struct FieldDescriptor *_field17;
};

struct DesktopUILayoutArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    int _field9;
    unsigned int _field10[1];
};

struct DispatchDataInputStream {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    char *_field7;
};

struct DocumentRevision;

struct DrawableArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct GeometryArchive *_field3;
    struct Reference *_field4;
    struct ExteriorTextWrapArchive *_field5;
    basic_string_a1f69cfb *_field6;
    struct Reference *_field7;
    basic_string_a1f69cfb *_field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    unsigned int _field12[1];
};

struct DrawableAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    unsigned int _field4;
    float _field5;
    unsigned int _field6;
    float _field7;
    int _field8;
    unsigned int _field9[1];
};

struct DropShadowArchive;

struct DurationNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    double _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct EdgeDetectionParameters {
    _Bool detectSilhouetteEdges;
    _Bool detectSharpEdges;
    float sharpEdgeThreshold;
};

struct EdgeInsetsArchive;

struct EditableBezierPathSourceArchive;

struct ElementRenderPass {
    int _field1;
};

struct EmptyExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct EnableClipDistances {
    struct array<bool, 8> states;
};

struct EnumDescriptor;

struct ExpressionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ExtensionRange;

struct ExtensionSet {
    struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> _field1;
};

struct ExteriorTextWrapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    float _field6;
    float _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct ExternalLabelAttribute {
    id _field1;
    tvec2_84d5962d _field2;
};

struct ExternalReferenceCompletionInfo;

struct ExternalReferenceInfo {
    long long _field1;
    struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> _field2;
};

struct FieldDescriptor;

struct FieldInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    struct FieldPath *path_;
    int type_;
    int rule_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    int _cached_size_;
    unsigned int _has_bits_[1];
};

struct FieldInfoNode {
    struct FieldInfo *_field1;
    _Bool _field2;
    struct map<int, std::__1::shared_ptr<TSP::FieldInfoNode>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<TSP::FieldInfoNode>>>> _field3;
};

struct FieldInfoTree {
    struct FieldInfoNode _field1;
};

struct FieldPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedField_27dfe32f _field3;
    int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct FileDescriptor;

struct FileOutputStream {
    CDUnknownFunctionPointerType *_field1;
    struct CopyingFileOutputStream _field2;
    struct CopyingOutputStreamAdaptor _field3;
};

struct FillArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    struct Color *_field4;
    struct GradientArchive *_field5;
    struct ImageFillArchive *_field6;
    int _field7;
    unsigned int _field8[1];
};

struct FilterRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FormulaPredicateArchive *_field3;
    _Bool _field4;
    int _field5;
    unsigned int _field6[1];
};

struct FilterSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    struct RepeatedPtrField<TST::FilterRuleArchive> _field6;
    RepeatedField_27dfe32f _field7;
    RepeatedField_12b14242 _field8;
    int _field9;
    unsigned int _field10[1];
};

struct FinalizeHandlerItem {
    vector_667badbd _field1;
    long long _field2;
    struct vector<long long, std::__1::allocator<long long>> _field3;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _field4;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field5;
};

struct FindLinesContext {
    _Bool _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct __CFArray *_field4;
    _Bool _field5;
    int _field6;
};

struct FlushResult {
    _Bool _field1;
    _Bool _field2;
};

struct FormatStructArchive {
    CDUnknownFunctionPointerType *_field1;
    struct ExtensionSet _field2;
    struct UnknownFieldSet _field3;
    unsigned int _field4;
    unsigned int _field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    unsigned int _field14;
    unsigned int _field15;
    basic_string_a1f69cfb *_field16;
    unsigned int _field17;
    unsigned int _field18;
    basic_string_a1f69cfb *_field19;
    double _field20;
    unsigned int _field21;
    unsigned int _field22;
    double _field23;
    double _field24;
    double _field25;
    unsigned int _field26;
    unsigned int _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    unsigned int _field32;
    unsigned int _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned int _field36;
    RepeatedPtrField_236b8a23 _field37;
    struct IndexSet *_field38;
    unsigned int _field39;
    unsigned int _field40;
    unsigned int _field41;
    unsigned int _field42;
    _Bool _field43;
    int _field44;
    unsigned int _field45[2];
};

struct FormulaArchive;

struct FormulaEqualsTokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct UIGraphicalAttachment *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct FormulaPredicateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FormulaArchive *_field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    unsigned int _field11[1];
};

struct FormulaRewriteSpecArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct TectonicShiftArchive *_field3;
    struct RewriteSortMappingArchive *_field4;
    struct RangeMovedInfoArchive *_field5;
    struct CFUUIDArchive *_field6;
    struct TableResizedInfoArchive *_field7;
    struct CellMergeInfoArchive *_field8;
    struct TableTransposeInfoArchive *_field9;
    int _field10;
    int _field11;
    unsigned int _field12[1];
};

struct FrameArchive;

struct FramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct FramebufferAttributes {
    int type;
    long long samples;
    int colorDataType;
    int colorFormat;
    int depthDataType;
    _Bool linearFilter;
    _Bool discardHint;
};

struct FramebufferBounds {
    id _field1;
    box_80622335 _field2;
    box_80622335 _field3;
    box_80622335 _field4;
};

struct FrustumRect {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct FrustumSlice {
    line_190fbfc7 _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
};

struct FunctionEndNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct FunctionNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    basic_string_a1f69cfb *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct GLSingleState {
    unsigned int target;
    struct UpdatableValue<unsigned int> handle;
};

struct GQHPathEndPointInfo {
    _Bool _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    int _field6;
};

struct GQZEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct GeometryArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Point *_field3;
    struct Size *_field4;
    unsigned int _field5;
    float _field6;
    int _field7;
    unsigned int _field8[1];
};

struct GeometryArrays {
    unsigned int offset;
    unsigned int count;
    unsigned int capoffset;
    unsigned int capcount;
};

struct GeometryResource {
    int _field1;
    struct ObjcSharedPtr<TSCH3DResource> _field2;
    struct GeometryArrays _field3;
    struct ObjcSharedPtr<TSCH3DGeometry> _field4;
};

struct GradientArchive;

struct GradientArchive_GradientStop {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Color *_field3;
    float _field4;
    float _field5;
    int _field6;
    unsigned int _field7[1];
};

struct GroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    int _field5;
    unsigned int _field6[1];
};

struct HeaderStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct HighlightArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct HyperlinkFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct SmartFieldArchive *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct IdentifierNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct ImageAdjustmentsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    float _field14;
    _Bool _field15;
    _Bool _field16;
    int _field17;
    unsigned int _field18[1];
};

struct ImageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct DataReference *_field4;
    struct Reference *_field5;
    struct Size *_field6;
    struct Reference *_field7;
    struct DataReference *_field8;
    struct DataReference *_field9;
    struct Size *_field10;
    struct Path *_field11;
    struct ImageAdjustmentsArchive *_field12;
    unsigned int _field13;
    _Bool _field14;
    struct DataReference *_field15;
    struct DataReference *_field16;
    struct DataReference *_field17;
    struct Reference *_field18;
    struct Reference *_field19;
    struct Reference *_field20;
    int _field21;
    unsigned int _field22[1];
};

struct ImageFillArchive;

struct ImportWarningSetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ImportWarningSetArchive_FormulaImportWarning *_field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    basic_string_a1f69cfb *_field17;
    int _field18;
    unsigned int _field19[1];
};

struct ImportWarningSetArchive_FormulaImportWarning;

struct ImportWarningSetByCoordinateMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct IndexSet {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSP::Range> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
};

struct LabelRenderInfo {
    tvec2_84d5962d sampledLabelSize;
    tvec2_84d5962d sampledLabelFullSize;
    tvec2_84d5962d sampledLabelRenderOffset;
    tvec2_84d5962d sampledAlignmentPadding;
};

struct LabelTransform {
    tvec3_17f03ce0 _field1;
    tvec2_84d5962d _field2;
    unsigned int _field3;
    float _field4;
    _Bool _field5;
};

struct LabelsMeshRendererLabelInfo {
    id _field1;
    tvec3_17f03ce0 _field2;
    tvec3_17f03ce0 _field3;
    tvec3_17f03ce0 _field4;
    float _field5;
    tvec2_84d5962d _field6;
    tvec2_84d5962d _field7;
    struct ExternalLabelAttribute *_field8;
};

struct LayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CellRange *_field3;
    struct CellID *_field4;
    struct Size *_field5;
    _Bool _field6;
    _Bool _field7;
    unsigned int _field8;
    struct Size *_field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12[1];
};

struct LegendGenericPropertyMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    int _field4;
    float _field5;
    struct ShadowArchive *_field6;
    struct StrokeArchive *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct LegendModelArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct RectArchive *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    int _field7;
    unsigned int _field8[1];
};

struct LightingPackageShaderEffectState {
    struct array<glm::detail::tmat4x4<float>, 2> transforms;
};

struct LineEndArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Path *_field3;
    struct Point *_field4;
    int _field5;
    _Bool _field6;
    basic_string_a1f69cfb *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct LineExtrusionGeometryXRangeInfo {
    tvec2_84d5962d _field1;
    _Bool _field2;
};

struct LineSpacingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    float _field4;
    float _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ListNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct ListStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    RepeatedField_c2891982 _field4;
    RepeatedField_324622b8 _field5;
    RepeatedField_324622b8 _field6;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> _field7;
    RepeatedField_c2891982 _field8;
    RepeatedPtrField_236b8a23 _field9;
    struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> _field10;
    unsigned int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    struct ShadowArchive *_field15;
    struct Color *_field16;
    basic_string_a1f69cfb *_field17;
    RepeatedField_12b14242 _field18;
    int _field19;
    int _field20;
    unsigned int _field21[1];
};

struct Lookup;

struct MaskArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct PathSourceArchive *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct MasterChangeBlobArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    int _field10;
    unsigned int _field11[1];
};

struct MaterialShaderVariables {
    TSCH3DShaderVariable *texture;
    TSCH3DShaderVariable *intensity;
    TSCH3DShaderVariable *factor;
    TSCH3DShaderVariable *textureColor;
    TSCH3DShaderVariable *color;
    TSCH3DShaderVariable *modulation;
    TSCH3DShaderVariable *texcoords;
    TSCH3DShaderVariable *textureMatrix;
};

struct MediaStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct MediaStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct MediaStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StrokeArchive *_field3;
    struct ShadowArchive *_field4;
    struct ReflectionArchive *_field5;
    float _field6;
    int _field7;
    unsigned int _field8[1];
};

struct MeshData {
    id _field1;
    id _field2;
};

struct Message {
    CDUnknownFunctionPointerType *_field1;
};

struct MessageInfo {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    unsigned int type_;
    unsigned int length_;
    struct RepeatedPtrField<TSP::FieldInfo> field_infos_;
    struct RepeatedField<unsigned long long> object_references_;
    int _object_references_cached_byte_size_;
    struct RepeatedField<unsigned long long> data_references_;
    int _data_references_cached_byte_size_;
    int _cached_size_;
    unsigned int _has_bits_[1];
};

struct MessageOptions;

struct MovieArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct DataReference *_field4;
    struct DataReference *_field5;
    basic_string_a1f69cfb *_field6;
    float _field7;
    float _field8;
    float _field9;
    unsigned int _field10;
    int _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    unsigned int _field17;
    struct DataReference *_field18;
    struct DataReference *_field19;
    struct Reference *_field20;
    struct Reference *_field21;
    struct Reference *_field22;
    struct Reference *_field23;
    struct Size *_field24;
    struct Size *_field25;
    unsigned int _field26;
    int _field27;
    unsigned int _field28[1];
};

struct MovieSegmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DataReference *_field3;
    double _field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct NSObject {
    Class _field1;
};

struct NSObjectComparator<GQDWrapPoint> {
    SEL _field1;
};

struct NSString {
    Class _field1;
};

struct NoteArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct NumberAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct TextualAttachmentArchive *_field3;
    basic_string_a1f69cfb *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct NumberCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    double _field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    _Bool _field6;
    struct FormatStructArchive *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct NumberNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    double _field4;
    int _field5;
    unsigned int _field6[1];
};

struct ObjcSharedPtr<GQDWrapPoint>;

struct ObjcSharedPtr<NSIndexSet> {
    NSIndexSet *mValue;
};

struct ObjcSharedPtr<NSMutableIndexSet> {
    id _field1;
};

struct ObjcSharedPtr<NSMutableSet> {
    id _field1;
};

struct ObjcSharedPtr<NSObject> {
    NSObject *mValue;
};

struct ObjcSharedPtr<NSSet> {
    NSSet *mValue;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DAnimationInterpolation> {
    TSCH3DAnimationInterpolation *mValue;
};

struct ObjcSharedPtr<TSCH3DGeometry> {
    id _field1;
};

struct ObjcSharedPtr<TSCH3DResource> {
    id _field1;
};

struct ObjectBounds {
    box_a3bd9649 mBounds;
    box_a3bd9649 mProjected;
    box_a3bd9649 m2DProjected;
    struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> mBoxes;
};

struct ObjectInfo {
    struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> _field1;
};

struct ObjectLocation {
    long long _field1;
    long long _field2;
};

struct ObjectStackEntry;

struct ObjectState {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> mAttributes;
    struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> mTextures;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
};

struct ObjectStateIdentifier {
    _Bool _field1;
    long long _field2;
    _Bool _field3;
    id _field4;
};

struct ObjectStateMatchObject {
    struct ObjcSharedPtr<NSSet> mEffects;
    struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> mAttributes;
    struct array<TSCH3D::TextureAttributes, 8> mTextureAttributes;
    struct array<NSObject *, 8> mTextures;
};

struct ObjectTransforms {
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field1;
    struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> _field2;
};

struct OperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct OwnerFormulaMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct PODType<unsigned char>;

struct PODType<unsigned short>;

struct PackageMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    unsigned long long last_object_identifier_;
    struct DocumentRevision *revision_;
    struct RepeatedPtrField<TSP::ComponentInfo> components_;
    struct RepeatedPtrField<TSP::DataInfo> datas_;
    RepeatedField_27dfe32f read_version_;
    int _read_version_cached_byte_size_;
    RepeatedField_27dfe32f write_version_;
    int _write_version_cached_byte_size_;
    RepeatedField_27dfe32f file_format_version_;
    int _file_format_version_cached_byte_size_;
    unsigned long long save_token_;
    int preferred_package_type_;
    int _cached_size_;
    unsigned int _has_bits_[1];
};

struct PaddingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    int _field7;
    unsigned int _field8[1];
};

struct PageHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TP::TargetHintArchive> _field3;
    struct Range *_field4;
    struct Range *_field5;
    struct Reference *_field6;
    int _field7;
    unsigned int _field8;
    struct Reference *_field9;
    struct RepeatedPtrField<TP::AnchorPosArchive> _field10;
    struct TopicNumberHintsArchive *_field11;
    unsigned int _field12;
    int _field13;
    unsigned int _field14[1];
};

struct ParagraphStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct CharacterStylePropertiesArchive *_field4;
    struct ParagraphStylePropertiesArchive *_field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ParagraphStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    float _field4;
    basic_string_a1f69cfb *_field5;
    struct Color *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    float _field11;
    float _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    struct LineSpacingArchive *_field17;
    int _field18;
    float _field19;
    struct Point *_field20;
    float _field21;
    float _field22;
    float _field23;
    unsigned int _field24;
    struct TabsArchive *_field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    int _field30;
    basic_string_a1f69cfb *_field31;
    struct StrokeArchive *_field32;
    basic_string_a1f69cfb *_field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    int _field38;
    struct Reference *_field39;
    struct Reference *_field40;
    int _field41;
    unsigned int _field42[2];
};

struct PasteboardMetadata {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct UnknownFieldSet _unknown_fields_;
    RepeatedField_27dfe32f version_;
    int _version_cached_byte_size_;
    basic_string_a1f69cfb *app_name_;
    struct RepeatedPtrField<TSP::DataInfo> datas_;
    basic_string_a1f69cfb *source_document_uuid_;
    int _cached_size_;
    unsigned int _has_bits_[1];
};

struct PasteboardNativeStorageArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    struct RepeatedPtrField<KN::BuildChunkArchive> _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    struct Size *_field8;
    struct RepeatedPtrField<TSP::Range> _field9;
    RepeatedPtrField_45e8210e _field10;
    basic_string_a1f69cfb *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct PathSourceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct PointPathSourceArchive *_field3;
    struct ScalarPathSourceArchive *_field4;
    struct BezierPathSourceArchive *_field5;
    struct CalloutPathSourceArchive *_field6;
    struct ConnectionLinePathSourceArchive *_field7;
    struct EditableBezierPathSourceArchive *_field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    unsigned int _field12[1];
};

struct PatternedStrokeArchive;

struct PlaceholderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeInfoArchive *_field3;
    int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct PlaceholderSmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct SmartFieldArchive *_field3;
    basic_string_a1f69cfb *_field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct Point;

struct PointPathSourceArchive;

struct PopUpMenuModel {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> _field3;
    struct RepeatedPtrField<TSCE::CellValueArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct PostfixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct OperatorNodeArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct PrefilteredLineVertexProperties {
    tvec3_17f03ce0 *_field1;
    tvec3_17f03ce0 *_field2;
    tvec4_ac57c72d *_field3;
    int _field4;
    box_80622335 _field5;
};

struct PrefixOperatorNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct OperatorNodeArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct PresenterInfo {
    id _field1;
    struct CGContext *_field2;
    float _field3;
    id _field4;
    _Bool _field5;
};

struct PrimitiveInfo {
    int _field1;
    int _field2;
    int _field3;
    id _field4;
};

struct ProgressiveCommandGroupArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandGroupArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct PropertyValueStorageContainerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct SparseReferenceArrayArchive *_field7;
    struct SparseReferenceArrayArchive *_field8;
    struct SparseReferenceArrayArchive *_field9;
    struct SparseReferenceArrayArchive *_field10;
    struct SparseReferenceArrayArchive *_field11;
    struct SparseReferenceArrayArchive *_field12;
    struct SparseReferenceArrayArchive *_field13;
    struct SparseReferenceArrayArchive *_field14;
    int _field15;
    unsigned int _field16[1];
};

struct Range {
    tvec2_84d5962d _field1;
    _Bool _field2;
};

struct RangeCoordinateArchive;

struct RangeMovedInfoArchive;

struct RangeReferenceArchive;

struct RecordingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct Reference *_field4;
    double _field5;
    struct Date *_field6;
    int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct RecordingEventArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    double _field3;
    struct RecordingNavigationEventArchive *_field4;
    struct RecordingLaserEventArchive *_field5;
    struct RecordingPauseEventArchive *_field6;
    struct RecordingMovieEventArchive *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct RecordingEventTrackArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct RepeatedPtrField<KN::RecordingEventArchive> _field4;
    int _field5;
    unsigned int _field6[1];
};

struct RecordingLaserEventArchive;

struct RecordingMovieEventArchive;

struct RecordingMovieTrackArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<KN::MovieSegmentArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct RecordingNavigationEventArchive;

struct RecordingPauseEventArchive;

struct RectArchive;

struct Reference {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned long long _field3;
    int _field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct ReferenceCompletionInfo;

struct ReferenceNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    struct RangeReferenceArchive *_field4;
    basic_string_a1f69cfb *_field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ReferencePrinter {
    int _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    CDUnknownBlockType _field6;
    CDUnknownBlockType _field7;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> *_field8;
    struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> _field9;
};

struct ReflectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    int _field4;
    unsigned int _field5[1];
};

struct RenderCycleInfo {
    id _field1;
    id _field2;
    id _field3;
};

struct RenderElementInfo {
    id _field1;
    id _field2;
    id _field3;
    tvec2_3b141483 _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
};

struct RenderHints {
    struct TextureSizeHint textureSizeHint;
};

struct RenderState {
    _Bool mBlend;
    int blendMode;
    _Bool depthTest;
    _Bool depthMask;
    _Bool culling;
    _Bool cullBack;
    _Bool polygonOffset;
    float polygonOffsetFactor;
    float polygonOffsetUnits;
    struct EnableClipDistances enableClipDistances;
};

struct RenderbufferAllocatorInfo {
    struct FramebufferAttributes *_field1;
    tvec2_3b141483 *_field2;
    id _field3;
};

struct RepeatedExternalReferenceCompletionInfo;

struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<double> {
    double *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
};

struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedField<unsigned long long> {
    unsigned long long *elements_;
    int current_size_;
    int total_size_;
};

struct RepeatedPtrField<KN::BuildChunkArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::MovieSegmentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::RecordingEventArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::AnchorPosArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::PageHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TP::TargetHintArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellCoordinateFormulaPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::CellValueArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCE::FormulaArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DBaseImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DEnvironmentMaterialArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DImageTextureTilingArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DLightArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::Chart3DTSPImageDataTextureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartSelectionPathArgumentArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::ChartUIState> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::PreUFF::ChartGridArchive_ValueRow> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSCH::SparseReferenceArrayArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSD::GuideArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::CommandSelectionBehaviorHistoryArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentDataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::ComponentInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::FieldInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::MessageInfo> {
    void **elements_;
    int current_size_;
    int allocated_size_;
    int total_size_;
};

struct RepeatedPtrField<TSP::ObjectUUIDMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Path_Element> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Range> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::Size> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSP::UUID> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellCoordinateImportWarningSetPairArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellMapArchive_CellMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellMapTileArchive_CellMapEntry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::CellRange> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::FilterRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::PopUpMenuModel_CellValue> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::StrokePresetDataArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TST::TileStorage_Tile> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::FontFeatureArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelGeometry> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::ListStyleArchive_LabelImage> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TabArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
};

struct ReplaceAllChildCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct ReplaceCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    struct CustomFormatArchive *_field4;
    struct FormatStructArchive *_field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct ResizeData {
    tvec2_84d5962d size;
    tvec3_17f03ce0 scale;
    tvec2_84d5962d delta;
    tvec2_84d5962d steps;
    tvec2_84d5962d unrotatedSize;
    tvec2_84d5962d chartOnlySize;
};

struct ResizingSize {
    tvec2_84d5962d _field1;
    tvec2_84d5962d _field2;
    tvec2_84d5962d _field3;
};

struct ResourceAttributeState;

struct RewriteSortMappingArchive;

struct RubyFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct SmartFieldArchive *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct SFUZipEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct ScalarPathSourceArchive;

struct SectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    float _field13;
    float _field14;
    float _field15;
    float _field16;
    float _field17;
    RepeatedPtrField_a0d2dbe7 _field18;
    float _field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    struct Reference *_field25;
    struct Reference *_field26;
    struct Reference *_field27;
    basic_string_a1f69cfb *_field28;
    struct Reference *_field29;
    unsigned int _field30;
    int _field31;
    unsigned int _field32[1];
};

struct SectionHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TP::PageHintArchive> _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct SessionLoadResourceResult {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    id _field4;
    id _field5;
};

struct ShadowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Color *_field3;
    float _field4;
    float _field5;
    int _field6;
    float _field7;
    _Bool _field8;
    int _field9;
    struct DropShadowArchive *_field10;
    struct ContactShadowArchive *_field11;
    struct CurvedShadowArchive *_field12;
    int _field13;
    unsigned int _field14[1];
};

struct ShapeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct Reference *_field4;
    struct PathSourceArchive *_field5;
    struct LineEndArchive *_field6;
    struct LineEndArchive *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct ShapeInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeArchive *_field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct ShapeStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeStyleArchive *_field3;
    struct ShapeStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct SheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    struct EdgeInsetsArchive *_field10;
    int _field11;
    int _field12;
    float _field13;
    float _field14;
    struct Reference *_field15;
    struct Reference *_field16;
    struct Reference *_field17;
    RepeatedPtrField_a0d2dbe7 _field18;
    RepeatedPtrField_a0d2dbe7 _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
    unsigned int _field23[1];
};

struct SheetUIStateArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Point *_field3;
    float _field4;
    float _field5;
    struct Point *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    unsigned int _field10;
    struct Size *_field11;
    struct Size *_field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    unsigned int _field16[1];
};

struct ShortcutCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    basic_string_a1f69cfb *_field6;
    basic_string_a1f69cfb *_field7;
    int _field8;
    unsigned int _field9[1];
};

struct ShortcutControllerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSA::ShortcutControllerArchive_ShortcutMapEntry> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct ShowArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    struct SlideTreeArchive *_field5;
    struct Size *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    double _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    double _field15;
    double _field16;
    struct Reference *_field17;
    int _field18;
    unsigned int _field19[1];
};

struct ShuffleMappingArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct RepeatedPtrField<TSK::ShuffleMappingArchive_Entry> _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12[1];
};

struct Size;

struct SlideArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    struct RepeatedPtrField<KN::BuildChunkArchive> _field5;
    struct TransitionArchive *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    RepeatedPtrField_a0d2dbe7 _field11;
    RepeatedPtrField_a0d2dbe7 _field12;
    struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> _field13;
    basic_string_a1f69cfb *_field14;
    struct GeometryArchive *_field15;
    unsigned int _field16;
    unsigned int _field17;
    struct ShapeStylePropertiesArchive *_field18;
    struct GeometryArchive *_field19;
    unsigned int _field20;
    unsigned int _field21;
    struct ShapeStylePropertiesArchive *_field22;
    struct GeometryArchive *_field23;
    unsigned int _field24;
    unsigned int _field25;
    struct ShapeStylePropertiesArchive *_field26;
    struct Reference *_field27;
    RepeatedPtrField_a0d2dbe7 _field28;
    RepeatedPtrField_a0d2dbe7 _field29;
    basic_string_a1f69cfb *_field30;
    basic_string_a1f69cfb *_field31;
    struct Reference *_field32;
    struct RepeatedPtrField<TSD::GuideArchive> _field33;
    struct Reference *_field34;
    struct Reference *_field35;
    struct Reference *_field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    int _field41;
    unsigned int _field42[2];
};

struct SlideCollectionSelectionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct Reference *_field4;
    struct RepeatedPtrField<KN::SlideCollectionSelectionArchive_OutlineSelection> _field5;
    struct Range *_field6;
    int _field7;
    unsigned int _field8[1];
};

struct SlideNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct Reference *_field4;
    RepeatedPtrField_5fb0b506 _field5;
    struct RepeatedPtrField<TSP::Size> _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    basic_string_a1f69cfb *_field15;
    basic_string_a1f69cfb *_field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    struct Reference *_field20;
    RepeatedPtrField_a0d2dbe7 _field21;
    unsigned int _field22;
    int _field23;
    unsigned int _field24[1];
};

struct SlideStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StyleArchive *_field3;
    struct SlideStylePropertiesArchive *_field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct SlideStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    struct TransitionAttributesArchive *_field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    int _field10;
    unsigned int _field11[1];
};

struct SlideTreeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct SmartFieldArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    unsigned int _field4[1];
};

struct SmartStrokeArchive;

struct SnappySource {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    id _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    char *_field8;
};

struct SortRuleReferenceTrackerArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct SparseReferenceArrayArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSCH::SparseReferenceArrayArchive_Entry> _field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct StateSpec {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    int _field4;
    struct Action *_field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    struct ActionFinder *_field9;
};

struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
};

struct StateStack<TSCH3D::RenderState, 10> {
    unsigned long long mIndex;
    struct RenderState mCurrent;
    struct RenderState mStack[10];
};

struct StateStack<glm::detail::tmat4x4<float>, 8> {
    unsigned long long mIndex;
    tmat4x4_3074befe mCurrent;
    tmat4x4_3074befe mStack[8];
};

struct StringCellValueArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct FormatStructArchive *_field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct StringNodeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ExpressionNodeArchive *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct StrokeArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Color *_field3;
    float _field4;
    int _field5;
    int _field6;
    float _field7;
    struct StrokePatternArchive *_field8;
    struct SmartStrokeArchive *_field9;
    struct FrameArchive *_field10;
    struct PatternedStrokeArchive *_field11;
    int _field12;
    unsigned int _field13[1];
};

struct StrokePatternArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    float _field4;
    RepeatedField_324622b8 _field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct StrokePresetDataArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct StrokeArchive *_field3;
    struct StrokeArchive *_field4;
    struct StrokeArchive *_field5;
    int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct StrokePresetListArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::Deprecated_StrokePresetDataArchive> _field3;
    struct RepeatedPtrField<TST::StrokePresetDataArchive> _field4;
    int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct StyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    basic_string_a1f69cfb *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    _Bool _field7;
    int _field8;
    unsigned int _field9[1];
};

struct StylesheetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct RepeatedPtrField<TSS::StylesheetArchive_IdentifiedStyleEntry> _field4;
    struct Reference *_field5;
    struct RepeatedPtrField<TSS::StylesheetArchive_StyleChildrenEntry> _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    unsigned int _field10[1];
};

struct TNChartRangeNode {
    struct TNChartRangeNode *_field1;
    struct {
        CDStruct_0441cfb5 _field1;
        CDStruct_0441cfb5 _field2;
    } _field2;
};

struct TOCAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableAttachmentArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct TOCEntryInstanceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    unsigned int _field7;
    unsigned int _field8;
    struct Reference *_field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12[1];
};

struct TOCEntryStyleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ParagraphStyleArchive *_field3;
    struct TOCEntryStylePropertiesArchive *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct TOCEntryStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
    unsigned int _field7[1];
};

struct TOCInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ShapeInfoArchive *_field3;
    struct Reference *_field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    struct RepeatedPtrField<TSP::Range> _field6;
    int _field7;
    unsigned int _field8[1];
};

struct TOCLayoutHintArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Range *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct TOCSettingsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct RepeatedPtrField<TSWP::TOCSettingsArchive_TOCEntryData> _field4;
    unsigned int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct TPSectionEnumerator {
    id _field1;
    unsigned long long _field2;
    struct _NSRange _field3;
    struct _NSRange _field4;
};

struct TSCEASTNodeArray {
    char *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    id _field4;
};

struct TSCEASTNodeArrayIterator {
    struct TSCEASTNodeArray *_field1;
    struct TSCEASTNodeFunction *_field2;
    unsigned long long _field3;
};

struct TSCEASTNodeArrayReferenceIteratorState {
    struct TSCEASTNodeReferenceExtractionFunction _field1;
    struct TSCEASTNodeArrayIterator _field2;
    CDStruct_39788696 _field3;
};

struct TSCEASTNodeFunction;

struct TSCEASTNodeReferenceExtractionFunction {
    CDUnknownFunctionPointerType *_field1;
    struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> _field2;
    struct vector<TSCECReference, std::__1::allocator<TSCECReference>> _field3;
    _Bool _field4;
    struct __CFUUID *_field5;
    id _field6;
    CDStruct_0441cfb5 _field7;
};

struct TSCEAbstractVector;

struct TSCEBooleanValue {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct TSCEDateValue {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    struct TSUFormat _field3;
};

struct TSCEDependencyTracker {
    struct _opaque_pthread_mutex_t _field1;
    id _field2;
    struct hash_map<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, TSCEDependencyTrackerFormulaOwnerInfo>>> _field3;
    struct TSCEIDMap _field4;
    _Bool _field5;
    struct _opaque_pthread_mutex_t _field6;
    struct vector<TSCERetainedCellReference, std::__1::allocator<TSCERetainedCellReference>> _field7;
    struct vector<TSCERetainedCellReference, std::__1::allocator<TSCERetainedCellReference>> _field8;
    struct hash_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> _field9;
    struct vector<TSCERetainedCellReference, std::__1::allocator<TSCERetainedCellReference>> _field10;
    struct vector<TSCERetainedCellReference, std::__1::allocator<TSCERetainedCellReference>> _field11;
    CDStruct_78b871e1 _field12;
};

struct TSCEEvaluationContext {
    id _field1;
    struct TSCEEvaluationStack _field2;
    _Bool _field3;
    _Bool _field4;
    struct TSCEWarningReportingContext _field5;
    struct __CFUUID *_field6;
    CDStruct_0441cfb5 _field7;
    hash_set_946ba02d *_field8;
    id _field9;
};

struct TSCEEvaluationStack {
    vector_10088e46 _field1;
    int _field2;
};

struct TSCEFormula {
    struct TSCEASTNodeArray *mASTNodeArray;
    struct TSCEFormulaTranslationFlags mTranslationFlags;
};

struct TSCEFormulaTranslationFlags {
    unsigned int mExcelImportTranslation:1;
    unsigned int mNumberToDateCoercionRemovalTranslation:1;
};

struct TSCEIDAllocator<unsigned short> {
    unsigned short _field1;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> _field2;
};

struct TSCEIDMap {
    struct TSCEIDAllocator<unsigned short> _field1;
    struct hash_map<unsigned short, const __CFUUID *, __gnu_cxx::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, const __CFUUID *>>> _field2;
    struct hash_map<const __CFUUID *, unsigned short, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, unsigned short>>> _field3;
};

struct TSCENamedReferenceTrieNode {
    struct __CFDictionary *mTrackedReferencesByOwnerID;
    struct hash_map<unsigned short, TSCENamedReferenceTrieNode *, __gnu_cxx::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> mChildren;
};

struct TSCENumberValue {
    CDUnknownFunctionPointerType *_vptr$TSCEAbstractValue;
    double mDouble;
    int mBaseUnits[1];
    struct TSUFormat mFormat;
    _Bool mIsUnitlessZero;
};

struct TSCEReferenceValue {
    CDUnknownFunctionPointerType *_field1;
    struct {
        id _field1;
        CDStruct_0441cfb5 _field2;
        CDStruct_0441cfb5 _field3;
    } _field2;
    CDStruct_0441cfb5 _field3;
    struct shared_ptr<TSCEValue> _field4;
    _Bool _field5;
    _Bool _field6;
    unsigned char _field7;
    _Bool _field8;
    struct TSCEWarningReportingContext *_field9;
};

struct TSCERegionNode {
    unsigned long long _field1;
    struct TSCERegionNode *_field2;
    void *_field3;
};

struct TSCERetainedCellReference;

struct TSCEStringValue {
    CDUnknownFunctionPointerType *_field1;
    struct ObjcSharedPtr<NSString> _field2;
    struct TSUFormat _field3;
};

struct TSCETableReferenceInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct TSCEValue {
    unsigned long long mBuff[88];
    int mType;
};

struct TSCEVector {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<TSCEAbstractVector> _field2;
    struct TSUFormat _field3;
};

struct TSCEVectorIndexPair {
    unsigned short column;
    unsigned short row;
};

struct TSCEWarningReportingContext {
    _Bool _field1;
    _Bool _field2;
    struct ObjcSharedPtr<NSMutableSet> _field3;
};

struct TSCH3DChartSceneAreaLayoutItemCacheValues {
    tvec4_ac57c72d infoChartScale;
    tvec2_3b141483 containingViewport;
    tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
    struct CGSize layoutSize;
    struct CGSize requestLayoutSize;
    struct CGSize chartBodyLayoutSize;
    struct CGSize requestChartBodyLayoutSize;
    tvec2_3b141483 modelSize;
    CDStruct_9aa9521f layoutSettings;
    _Bool forcedValid;
};

struct TSCH3DGLTextureFormat {
    int _field1;
};

struct TSCH3DPrecalculatedLayoutCacheType {
    int platform;
    int target;
    _Bool isLandscape;
};

struct TSCH3DScenePart {
    id _field1;
    id _field2;
};

struct TSCH3DShaderType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopeType {
    unsigned long long mValue;
};

struct TSCH3DShaderVariableScopes {
    struct array<TSCH3DShaderVariableScopeType, 2> mScopes;
};

struct TSCHChartDrawableLayoutLegendResizerFrames {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
};

struct TSCHLegendAnchorLine {
    struct CGPoint normal;
    double distance;
};

struct TSCHLegendAnchorRange {
    double _field1;
    double _field2;
};

struct TSDBrushVertexData;

struct TSMTraceRecordHeader_s {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct timeval _field4;
};

struct TSMTraceRecord_s {
    struct TSMTraceRecordHeader_s _field1;
    char _field2[0];
};

struct TSTCellStorage {
    struct {
        unsigned char _field1;
        unsigned int :8;
        unsigned int :8;
        unsigned char _field2;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
        unsigned int :16;
    } _field1;
    unsigned char _field2[0];
};

struct TSTColumnOrRowMap {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    _Bool _field4;
};

struct TSTDurationWrapper {
    double timeInterval;
    CDStruct_b1177b60 durationFormat;
};

struct TSTImportFormulaWarning {
    long long mType;
    NSString *mOriginalFormula;
    NSString *mSupplementaryText;
};

struct TSTImportWarningSetCellWarningFlags {
    unsigned int mCondFormatAboveAvgEqualAverageImportWarning:1;
    unsigned int mCondFormatAboveAvgStdDevImportWarning:1;
    unsigned int mCondFormatComplexFormulaImportWarning:1;
    unsigned int mCondFormatContainsErrorsImportWarning:1;
    unsigned int mCondFormatExprImportWarning:1;
    unsigned int mCondFormatNotContainsErrorsImportWarning:1;
    unsigned int mCondFormatParametersNotAllTheSameTypeImportWarning:1;
    unsigned int mCondFormatStopIfTrueImportWarning:1;
    unsigned int mCondFormatUnsupportedOperatorImportWarning:1;
    unsigned int mCondFormatUnsupportedStylingImportWarning:1;
    unsigned int mCondFormatUnsupportedTimePeriodImportWarning:1;
    unsigned int mUnsupportedConditionalFormatImportWarning:1;
    unsigned int mUnsupportedDataFormatImportWarning:1;
};

struct TSTSimpleRange {
    long long origin;
    unsigned long long length;
};

struct TSTStrokeLayerRun;

struct TSTTableRBTreeNode_s {
    unsigned short _field1;
    unsigned short _field2;
    struct TSTTableRBTreeNode_s *_field3;
    struct TSTTableRBTreeNode_s *_field4;
    struct TSTTableRBTreeNode_s *_field5;
    char _field6;
};

struct TSUCustomFormat {
    struct ObjcSharedPtr<NSString> _field1;
    id _field2;
    int _field3;
    CDStruct_b87b2d04 _field4;
    struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> _field5;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUFormat {
    CDUnknownFunctionPointerType *_vptr$TSUFormat;
    int mFormatType;
    _Bool mIsImplicitFormat;
    union {
        CDStruct_50447d3e mNumberStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b44fd3ce mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        CDStruct_1127e784 mCustomFormatStruct;
        CDStruct_8374e35e mControlFormatStruct;
        CDStruct_4edf9c0c mMultipleChoiceListFormatStruct;
    } mData;
    struct TSUCustomFormat *mCustomFormat;
};

struct TSUOpstat_s {
    _Bool running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TSWPAdornmentLine {
    struct CGPoint _field1;
    double _field2;
    struct CGColor *_field3;
    double _field4;
    unsigned int _field5;
    int _field6;
    int _field7;
    double _field8;
    _Bool _field9;
    id _field10;
};

struct TSWPAdornmentRect {
    int _field1;
    id _field2;
    id _field3;
    struct CGRect _field4;
};

struct TSWPAdornments {
    int _field1;
    int _field2;
    double _field3;
    struct CGColor *_field4;
    struct __CTFont *_field5;
    vector_88016b54 _field6;
    vector_eef16772 _field7;
    struct vector<CGRect, std::__1::allocator<CGRect>> _field8;
    struct vector<CGPoint, std::__1::allocator<CGPoint>> _field9;
    struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> _field10;
    double _field11;
    double _field12;
    double _field13;
    struct CGPoint _field14;
    _Bool _field15;
};

struct TSWPAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
};

struct TSWPAttributeEnumerator {
    id _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    struct TSWPAttributeArray *_field4;
    _Bool _field5;
    unsigned long long _field6;
    _Bool _field7;
    struct TSWPAttributeRecord _field8;
};

struct TSWPAttributeRecord {
    unsigned long long _field1;
    union {
        id _field1;
        CDStruct_8a5ee6e3 _field2;
    } _field2;
};

struct TSWPChangeAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    id _field9;
    int _field10;
};

struct TSWPDrawingState {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
    struct CGColor *_field7;
    double _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct _NSRange _field16;
    struct TSWPRangeVector *_field17;
    struct TSWPRangeVector *_field18;
    struct _NSRange _field19;
    struct _NSRange _field20;
    unsigned long long _field21;
    struct _NSRange _field22;
    id _field23;
    id _field24;
};

struct TSWPLineFragment {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    double _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    CDStruct_a6fa95e6 _field8;
    struct TSWPListLabel *_field9;
    id _field10;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field11;
    double _field12;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field13;
    struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> _field14;
    vector_5a1d2cc3 _field15;
    vector_5a1d2cc3 _field16;
    vector_5a1d2cc3 _field17;
    vector_5a1d2cc3 _field18;
    struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> _field19;
    struct TSWPTypesettingState *_field20;
    double _field21;
    id _field22;
    id _field23;
    struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> _field24;
    struct TSWPAdornmentLine *_field25;
    id _field26;
    unsigned int _field27;
    struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> _field28;
    id _field29;
    double _field30;
};

struct TSWPLineFragmentArray;

struct TSWPLineRef;

struct TSWPListLabel;

struct TSWPLoadableFontInfo {
    id _field1;
    id _field2;
    id _field3;
    _Bool _field4;
};

struct TSWPParagraphAttributeArray {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct TSWPAttributeRecord *_field5;
    id _field6;
    unsigned long long _field7;
    _Bool _field8;
    unsigned long long _field9;
    unsigned long long _field10;
};

struct TSWPParagraphEnumerator {
    id _field1;
    id _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct TSWPParagraphTypesetter;

struct TSWPRangeVector {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> __end_cap_;
};

struct TSWPStorageTransaction {
    struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct TSWPStorageTransactionObject {
    unsigned short _field1;
    union {
        unsigned int _field1;
        unsigned int _field2;
    } _field2;
    union {
        CDStruct_3144a3ae _field1;
        CDStruct_3144a3ae _field2;
        CDStruct_3144a3ae _field3;
        CDStruct_3144a3ae _field4;
        CDStruct_3144a3ae _field5;
        CDStruct_3144a3ae _field6;
        struct {
            unsigned int _field1;
            unsigned int _field2;
            int _field3;
        } _field7;
        struct {
            unsigned int _field1;
            CDStruct_8a5ee6e3 _field2;
            unsigned int _field3;
        } _field8;
        CDStruct_3144a3ae _field9;
        struct {
            unsigned int _field1;
            id _field2;
            unsigned int _field3;
        } _field10;
    } _field3;
};

struct TSWPTopicNumberHints {
    struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> _numbersForListStyle;
    unsigned long long _charIndex;
    unsigned long long _validThroughCharIndex;
};

struct TSWPTypesettingState;

struct TSWPUIAttachmentData;

struct TabArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    float _field3;
    int _field4;
    basic_string_a1f69cfb *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct TableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DrawableArchive *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct TableRBTree;

struct TableResizedInfoArchive;

struct TableSortOrderArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::TableSortOrderArchive_SortRuleArchive> _field3;
    int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct TableSortOrderArchive_SortRuleArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct TableStrokePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    int _field4;
    unsigned int _field5[1];
};

struct TableStyleNetworkArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    struct Reference *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    struct Reference *_field13;
    unsigned int _field14;
    int _field15;
    unsigned int _field16[1];
};

struct TableStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    int _field5;
    int _field6;
    unsigned int _field7[1];
};

struct TableStylePropertiesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    struct Deprecated_TableStrokeArchive *_field4;
    struct Deprecated_TableStrokeArchive *_field5;
    struct Deprecated_TableStrokeArchive *_field6;
    struct Deprecated_TableStrokeArchive *_field7;
    struct Deprecated_TableStrokeArchive *_field8;
    struct Deprecated_TableStrokeArchive *_field9;
    struct Deprecated_TableStrokeArchive *_field10;
    struct Deprecated_TableStrokeArchive *_field11;
    struct Deprecated_TableStrokeArchive *_field12;
    struct Deprecated_TableStrokeArchive *_field13;
    struct Deprecated_TableStrokeArchive *_field14;
    struct Deprecated_TableStrokeArchive *_field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    struct Deprecated_TableStrokeArchive *_field24;
    struct Deprecated_TableStrokeArchive *_field25;
    struct Deprecated_TableStrokeArchive *_field26;
    struct Deprecated_TableStrokeArchive *_field27;
    struct StrokePresetListArchive *_field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    int _field34;
    int _field35;
    basic_string_a1f69cfb *_field36;
    struct StrokeArchive *_field37;
    struct StrokeArchive *_field38;
    struct StrokeArchive *_field39;
    struct StrokeArchive *_field40;
    struct StrokeArchive *_field41;
    struct StrokeArchive *_field42;
    struct StrokeArchive *_field43;
    struct StrokeArchive *_field44;
    struct StrokeArchive *_field45;
    struct StrokeArchive *_field46;
    struct StrokeArchive *_field47;
    struct StrokeArchive *_field48;
    struct StrokeArchive *_field49;
    struct StrokeArchive *_field50;
    struct StrokeArchive *_field51;
    struct StrokeArchive *_field52;
    int _field53;
    unsigned int _field54[2];
};

struct TableTransposeInfoArchive;

struct TabsArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSWP::TabArchive> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct TectonicShiftArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct RangeCoordinateArchive *_field5;
    struct RangeCoordinateArchive *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    struct RangeCoordinateArchive *_field12;
    struct RangeCoordinateArchive *_field13;
    struct CFUUIDArchive *_field14;
    int _field15;
    unsigned int _field16[1];
};

struct TexCoordTilingShaderEffectState {
    struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> _field1;
};

struct TextPresetDisplayItemArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    basic_string_a1f69cfb *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct TextStylePresetArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
};

struct TextualAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct TextureAttributes {
    int object;
    int format;
    _Bool mipmap;
    _Bool repeat;
    _Bool nearest;
    long long unit;
    struct TextureSizeHint textureSizeHint;
    _Bool is3DTexture;
};

struct TextureCoordinateConverter {
    box_80622335 _field1;
};

struct TextureSizeHint {
    int loadOptimizedMipmaps;
    tvec2_3b141483 sizeLODHint;
};

struct TextureUnitStates {
    struct UpdatableValue<unsigned long> activeTexture;
    struct array<TSCH3D::GLSingleState, 4> states;
};

struct TextureVariables {
    id _field1;
    id _field2;
    id _field3;
};

struct TileFramebufferAllocationInfo {
    id _field1;
    struct CGRect _field2;
};

struct TileRowInfo {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned int _field3;
    unsigned int _field4;
    basic_string_a1f69cfb *_field5;
    basic_string_a1f69cfb *_field6;
    unsigned int _field7;
    int _field8;
    unsigned int _field9[1];
};

struct TileStorage {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TST::TileStorage_Tile> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct TiledCellMapArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
    unsigned int _field8[1];
};

struct TokenAttachmentArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct UIGraphicalAttachment *_field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct TopicNumberHintsArchive;

struct TrackedReferenceArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ASTNodeArrayArchive *_field3;
    unsigned int _field4;
    int _field5;
    unsigned int _field6[1];
};

struct Transform {
    tvec3_17f03ce0 _field1;
    tvec3_17f03ce0 _field2;
    tquat_f3d6c8fe _field3;
    tvec3_17f03ce0 _field4;
    _Bool _field5;
};

struct TransitionArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct TransitionAttributesArchive *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct TransitionAttributesArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct AnimationAttributesArchive *_field3;
    float _field4;
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    int _field12;
    basic_string_a1f69cfb *_field13;
    basic_string_a1f69cfb *_field14;
    double _field15;
    unsigned int _field16;
    float _field17;
    struct Color *_field18;
    int _field19;
    unsigned int _field20[1];
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIGraphicalAttachment {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    unsigned int _field4[1];
};

struct UUID {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    int _field5;
    unsigned int _field6[1];
};

struct UUIDPath {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSP::UUID> _field3;
    int _field4;
    unsigned int _field5[1];
};

struct UnarchiverReference;

struct UnarchiverRepeatedReference;

struct UndoRedoStateCommandSelectionBehaviorArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    int _field4;
    unsigned int _field5[1];
};

struct UnknownFieldSet {
    struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>> *fields_;
};

struct UpdatableValue<unsigned int> {
    unsigned int value;
};

struct UpdatableValue<unsigned long> {
    unsigned long long value;
};

struct UpdateCustomFormatCommandArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct CommandArchive *_field3;
    struct CustomFormatArchive *_field4;
    struct CustomFormatArchive *_field5;
    unsigned int _field6;
    int _field7;
    unsigned int _field8[1];
};

struct VAOLoadResult {
    _Bool _field1;
    _Bool _field2;
    id _field3;
};

struct ValueEnumerator {
    _Bool mForward;
    unsigned long long mIndex;
    unsigned long long mMax;
    double mValue;
};

struct Vector3 {
    float _field1;
    float _field2;
    float _field3;
};

struct WHCCol;

struct WHCRow;

struct WPTableInfoArchive {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct TableInfoArchive *_field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
};

struct WrittenComponentInfo {
    id _field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
    id _field5;
    _Bool _field6;
    _Bool _field7;
    id _field8;
    id _field9;
    _Bool _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
};

struct WrittenObjectInfo;

struct ZeroCopyInputStream {
    CDUnknownFunctionPointerType *_field1;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TSDStrokeOutsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct _TSKThreadInfo {
    struct _opaque_pthread_t *threadId;
    unsigned int count;
};

struct _TSKThreadTicketInfo {
    unsigned int useCount;
    id ticket;
};

struct _TSTDefaultCellBlock {
    TSTCell *defaultBodyCell;
    TSTCell *defaultHeaderRowCell;
    TSTCell *defaultHeaderColumnCell;
    TSTCell *defaultFooterRowCell;
};

struct _TSWPCharIndexAndAffinity;

struct _TSWPCharIndexAndPosition {
    unsigned long long _field1;
    int _field2;
    double _field3;
    int _field4;
    double _field5;
};

struct __CFUUID;

struct __CTFont;

struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> {
    struct _NSRange *__first_;
};

struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>>> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*> {
        struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *> *__next_;
    } __first_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __hash_node<TSCECReference, void *>;

struct __hash_node<TSCECellReference, void *>;

struct __hash_node<TSUColumnRowCoordinate, void *>;

struct __hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>;

struct __hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>;

struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>;

struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>;

struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>;

struct __hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>;

struct __hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>;

struct __hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>;

struct __hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>;

struct __hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>;

struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>;

struct __hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>;

struct __hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>;

struct __hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>;

struct __hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>;

struct __hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>;

struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>;

struct __hash_node<std::__1::pair<const long long, bool>, void *>;

struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>;

struct __hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>;

struct __hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>;

struct __hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>;

struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>;

struct __hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>;

struct __hash_node<std::__1::pair<unsigned int, const char *>, void *>;

struct __hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>;

struct __hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>;

struct __hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>;

struct __list_node<unsigned long, void *>;

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<TSTColumnOrRowMap, void *>;

struct __tree_node<TSTMergeRangeElem, void *>;

struct __tree_node<TSUColumnRowRect, void *>;

struct __tree_node<TSUFlushableObjectInfo *, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_rwlock_t {
    long long __sig;
    char __opaque[192];
};

struct _xmlBuf;

struct _xmlCharEncodingHandler;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct array<(null)<anonymous>::TextureVariables, 2> {
    struct TextureVariables _field1[2];
};

struct array<NSObject *, 8> {
    NSObject *__elems_[8];
};

struct array<SFUtility::ObjcSharedPtr<NSObject>, 8> {
    struct ObjcSharedPtr<NSObject> __elems_[8];
};

struct array<TSCH3D::BarExtrusionDetails, 2> {
    struct BarExtrusionDetails __elems_[2];
};

struct array<TSCH3D::GLSingleState, 2> {
    struct GLSingleState __elems_[2];
};

struct array<TSCH3D::GLSingleState, 4> {
    struct GLSingleState __elems_[4];
};

struct array<TSCH3D::TexCoordTilingShaderEffectState::Data, 3> {
    struct Data _field1[3];
};

struct array<TSCH3D::TextureAttributes, 8> {
    struct TextureAttributes __elems_[8];
};

struct array<TSCH3DShaderVariableScopeType, 2> {
    struct TSCH3DShaderVariableScopeType __elems_[2];
};

struct array<bool, 8> {
    _Bool __elems_[8];
};

struct array<glm::detail::tmat4x4<float>, 2> {
    tmat4x4_3074befe __elems_[2];
};

struct array<unsigned char, 20> {
    unsigned char __elems_[20];
};

struct auto_ptr<TSP::FieldInfoTree> {
    struct FieldInfoTree *_field1;
};

struct auto_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    hash_map_43d567e3 *__ptr_;
};

struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bitset<5> {
    unsigned long long __first_;
};

struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
};

struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
};

struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
};

struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
};

struct deque<TSCH3D::Transform, std::__1::allocator<TSCH3D::Transform>> {
    struct __split_buffer<TSCH3D::Transform *, std::__1::allocator<TSCH3D::Transform *>> {
        struct Transform **_field1;
        struct Transform **_field2;
        struct Transform **_field3;
        struct __compressed_pair<TSCH3D::Transform **, std::__1::allocator<TSCH3D::Transform *>> {
            struct Transform **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSCH3D::Transform>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> {
    struct __split_buffer<TSP::WrittenObjectInfo *, std::__1::allocator<TSP::WrittenObjectInfo *>> {
        struct WrittenObjectInfo **__first_;
        struct WrittenObjectInfo **__begin_;
        struct WrittenObjectInfo **__end_;
        struct __compressed_pair<TSP::WrittenObjectInfo **, std::__1::allocator<TSP::WrittenObjectInfo *>> {
            struct WrittenObjectInfo **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<TSP::WrittenObjectInfo>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> {
    struct __split_buffer<std::__1::pair<const Action *, int>*, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
        struct pair<const Action *, int> **_field1;
        struct pair<const Action *, int> **_field2;
        struct pair<const Action *, int> **_field3;
        struct __compressed_pair<std::__1::pair<const Action *, int>**, std::__1::allocator<std::__1::pair<const Action *, int>*>> {
            struct pair<const Action *, int> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::pair<const Action *, int>>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
    struct __split_buffer<std::__1::shared_ptr<StateSpec>*, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
        struct shared_ptr<StateSpec> **_field1;
        struct shared_ptr<StateSpec> **_field2;
        struct shared_ptr<StateSpec> **_field3;
        struct __compressed_pair<std::__1::shared_ptr<StateSpec>**, std::__1::allocator<std::__1::shared_ptr<StateSpec>*>> {
            struct shared_ptr<StateSpec> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> {
        unsigned long long _field1;
    } _field3;
};

struct hash_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> {
    struct __hash_table<std::__1::pair<NSUUID *, TSP::ObjectLocation>, __gnu_cxx::__hash_map_hasher<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>, std::__1::allocator<std::__1::pair<NSUUID *, TSP::ObjectLocation>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*> {
                struct __hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<NSUUID *, TSP::ObjectLocation>, TSP::NSUUIDEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
    struct __hash_table<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>, std::__1::allocator<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*> {
                struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, TSTTableDataObjectEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateEqual, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>>> __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateEqual, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSTCellIDHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>>> __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSTCellIDHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<TSUColumnRowCoordinate, TSUColumnRowSize, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowSize>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, TSTCellIDHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, std::__1::equal_to<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*> {
                struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, TSTCellIDHasher, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, std::__1::equal_to<TSUColumnRowCoordinate>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
    struct __hash_table<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*> {
                struct __hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, TSP::FieldPathEqualTo, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, TSCEDependencyTrackerFormulaOwnerInfo>>> {
    struct __hash_table<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*> {
                struct __hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, TSCEFormulaOwnerIDEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>>> {
    struct __hash_table<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, TSCEFormulaOwnerIDHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*> {
                struct __hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, TSCEFormulaOwnerIDHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, TSCEFormulaOwnerIDEqual, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const __CFUUID *, unsigned short, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, unsigned short>>> {
    struct __hash_table<std::__1::pair<const __CFUUID *, unsigned short>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDEqual, true>, std::__1::allocator<std::__1::pair<const __CFUUID *, unsigned short>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*> {
                struct __hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const __CFUUID *, unsigned short>, TSCEFormulaOwnerIDEqual, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> {
    struct __hash_table<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*> {
                struct __hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, TSP::DescriptorHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, std::__1::equal_to<const google::protobuf::Descriptor *>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
    struct __hash_table<std::__1::pair<const long long, NSMutableArray *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, NSMutableArray *>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, NSMutableArray *>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
    struct __hash_table<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, std::__1::equal_to<const long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
    struct __hash_table<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
    struct __hash_table<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
    struct __hash_table<std::__1::pair<const long long, TSP::WrittenComponentInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::WrittenComponentInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::WrittenComponentInfo>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
    struct __hash_table<std::__1::pair<const long long, TSP::WrittenObjectInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSP::WrittenObjectInfo>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSP::WrittenObjectInfo>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
    struct __hash_table<std::__1::pair<const long long, TSPData *__weak>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, TSPData *__weak>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, TSPData *__weak>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::pair<const long long, bool>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, bool>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, bool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DataDigestHash, TSP::DataDigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
    struct __hash_table<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestEqualTo, true>, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*> {
                struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, TSP::DataDigestEqualTo, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<long long, TSP::DataInfo, TSP::DataIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DataInfo>>> {
    struct __hash_table<std::__1::pair<long long, TSP::DataInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::DataInfo>, TSP::DataIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::DataInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::pair<long long, TSP::DataInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*> {
                struct __hash_node<std::__1::pair<long long, TSP::DataInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::DataInfo>, TSP::DataIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::DataInfo>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> {
    struct __hash_table<std::__1::pair<long long, TSP::ExternalReferenceInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::pair<long long, TSP::ExternalReferenceInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*> {
                struct __hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::ExternalReferenceInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::ExternalReferenceInfo>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> {
    struct __hash_table<std::__1::pair<long long, TSP::ObjectInfo>, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::pair<long long, TSP::ObjectInfo>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*> {
                struct __hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<long long, TSP::ObjectInfo>, TSP::ObjectIdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<long long, TSP::ObjectInfo>, std::__1::equal_to<long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __hash_table<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, TSTIntHasher, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::equal_to<unsigned int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_map<unsigned int, __unsafe_unretained Class, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> {
    struct __hash_table<std::__1::pair<unsigned int, __unsafe_unretained Class>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, __unsafe_unretained Class>, __gnu_cxx::hash<unsigned int>, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, __unsafe_unretained Class>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, __unsafe_unretained Class>, __gnu_cxx::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, __unsafe_unretained Class>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned int, const char *, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> {
    struct __hash_table<std::__1::pair<unsigned int, const char *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, const char *>, __gnu_cxx::hash<unsigned int>, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, const char *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, const char *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, const char *>, __gnu_cxx::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, const char *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned int, const google::protobuf::Message *, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> {
    struct __hash_table<std::__1::pair<unsigned int, const google::protobuf::Message *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, const google::protobuf::Message *>, __gnu_cxx::hash<unsigned int>, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::pair<unsigned int, const google::protobuf::Message *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned int, const google::protobuf::Message *>, __gnu_cxx::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned int, const google::protobuf::Message *>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned short, TSCENamedReferenceTrieNode *, __gnu_cxx::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, TSCENamedReferenceTrieNode *>>> {
    struct __hash_table<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, __gnu_cxx::hash<unsigned short>, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, __gnu_cxx::hash<unsigned short>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, std::__1::equal_to<unsigned short>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct hash_map<unsigned short, const __CFUUID *, __gnu_cxx::hash<unsigned short>, std::__1::equal_to<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, const __CFUUID *>>> {
    struct __hash_table<std::__1::pair<unsigned short, const __CFUUID *>, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned short, const __CFUUID *>, __gnu_cxx::hash<unsigned short>, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned short, const __CFUUID *>, std::__1::equal_to<unsigned short>, true>, std::__1::allocator<std::__1::pair<unsigned short, const __CFUUID *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*> {
                struct __hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<unsigned short, const __CFUUID *>, __gnu_cxx::hash<unsigned short>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<unsigned short, const __CFUUID *>, std::__1::equal_to<unsigned short>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_set<TSCECReference, TSCECReferenceHash, TSCECReferenceEqual, std::__1::allocator<TSCECReference>> {
    struct __hash_table<TSCECReference, TSCECReferenceHash, TSCECReferenceEqual, std::__1::allocator<TSCECReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCECReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECReference, void *>*> {
                struct __hash_node<TSCECReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECReferenceHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECReferenceEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_set<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
    struct __hash_table<TSCECellReference, TSCECellReferenceHash, TSCECellReferenceEqual, std::__1::allocator<TSCECellReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECellReference, void *>*> {
                struct __hash_node<TSCECellReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECellReferenceHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellReferenceEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct hash_set<TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUColumnRowCoordinate>> {
    struct __hash_table<TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUColumnRowCoordinate>> {
        struct unique_ptr<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*> {
                struct __hash_node<TSUColumnRowCoordinate, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct internal_state;

struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
};

struct list<unsigned long, std::__1::allocator<unsigned long>> {
    struct __list_node_base<unsigned long, void *> {
        struct __list_node<unsigned long, void *> *__prev_;
        struct __list_node<unsigned long, void *> *__next_;
    } __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned long, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds, std::__1::less<TSCH3D::SceneObjectSharedPointer>, std::__1::allocator<std::__1::pair<const TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
    struct __tree<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>, std::__1::allocator<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> {
        struct __tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSCH3D::SceneObjectSharedPointer, std::__1::__value_type<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>, std::__1::less<TSCH3D::SceneObjectSharedPointer>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<TSUColumnRowCoordinate, std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<TSUColumnRowCoordinate, std::__1::__value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<TSUColumnRowCoordinate>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>, std::__1::less<const TSWPListStyle *>, std::__1::allocator<std::__1::pair<const TSWPListStyle *const, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
    struct __tree<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>, std::__1::allocator<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>>> {
        struct __tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const TSWPListStyle *, std::__1::__value_type<const TSWPListStyle *, std::__1::vector<TSWPTopicNumberEntry, std::__1::allocator<TSWPTopicNumberEntry>>>, std::__1::less<const TSWPListStyle *>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, TSPUnknownFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPUnknownFieldTreeNode *>>> {
    struct __tree<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>>> {
        struct __tree_node<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, TSPUnknownFieldTreeNode *>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension>>> {
    struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>>> {
        struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, std::__1::shared_ptr<TSP::FieldInfoNode>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<TSP::FieldInfoNode>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::shared_ptr<TSP::FieldInfoNode>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> {
    struct __tree<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>>> {
        struct __tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, TSP::DescriptionPrinterMessage>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::pair<long long, long long>>>> {
        struct __tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::pair<long long, long long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::pair<long long, long long>>, std::__1::less<long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long, TSCH3D::CachedLabelBoundsArray, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, TSCH3D::CachedLabelBoundsArray>>> {
    struct __tree<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>>> {
        struct __tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, TSCH3D::CachedLabelBoundsArray>, std::__1::less<long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
    struct __tree<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> {
    struct __tree<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TSWPFontHeightCacheEntry>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>>> {
    struct __tree<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> {
    struct __tree<std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, TPPageLayout *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, TPPageLayout *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, TPPageLayout *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<TSCECReference, bool>;

struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
};

struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
};

struct pair<TSUColumnRowCoordinate, TSCEFormula>;

struct pair<TSUColumnRowCoordinate, double>;

struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
};

struct pair<const Action *, int>;

struct pair<const char *, const char *> {
    char *_field1;
    char *_field2;
};

struct pair<unsigned long, unsigned short>;

struct pair<unsigned short, bool>;

struct path_descr;

struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
};

struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> {
    struct deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>> c;
};

struct range<double> {
    double _field1;
    double _field2;
};

struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
};

struct scoped_array<unsigned char> {
    char *_field1;
};

struct segment_data<double>;

struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
};

struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
    struct __tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> {
        struct __tree_node<TSTMergeRangeElem, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTMergeRangeElem, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSTMergeRangeElemCompare> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
    struct __tree<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> {
        struct __tree_node<id<TSWPStorageObserver>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<TSWPStorageObserver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<id<TSWPStorageObserver>>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_node<long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_node<unsigned long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_node<unsigned short, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_count {
    struct sp_counted_base *pi_;
};

struct shared_ptr<StateSpec>;

struct shared_ptr<TSCEAbstractVector> {
    struct TSCEAbstractVector *_field1;
    struct shared_count _field2;
};

struct shared_ptr<TSCEValue> {
    struct TSCEValue *_field1;
    struct shared_count _field2;
};

struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<TSUStringChunk>;

struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *px;
    struct shared_count pn;
};

struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct shared_count _field2;
};

struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sp_counted_base;

struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>>> {
    struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> _field1;
};

struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
};

struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
};

struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
};

struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
};

struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
};

struct tvec1<float> {
    CDUnion_d07f0a1e ;
};

struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
};

struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
};

struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
};

struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
};

struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
};

struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
};

struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
};

struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
};

struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
};

struct unique_ptr<std::__1::__hash_node<TSCECReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCECReference, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>>> {
        struct __hash_node<TSCECReference, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSCECellReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSCECellReference, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>>> {
        struct __hash_node<TSCECellReference, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSCECellReference, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<TSUColumnRowCoordinate, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>>> {
        struct __hash_node<TSUColumnRowCoordinate, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>>> {
        struct __hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<NSUUID *, TSP::ObjectLocation>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> {
        struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>>> {
        struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>>> {
        struct __hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, TSCEDependencyTrackerFormulaOwnerInfo>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>>> {
        struct __hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>>> {
        struct __hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, unsigned short>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const google::protobuf::Descriptor *, unsigned int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, NSMutableArray *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, NSMutableArray *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::FinalizeHandlerItem>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenComponentInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSP::WrittenObjectInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>>> {
        struct __hash_node<std::__1::pair<const long long, bool>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>>> {
        struct __hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<long long, TSP::DataInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::DataInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ExternalReferenceInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>>> {
        struct __hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<long long, TSP::ObjectInfo>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, SFUtility::ObjcSharedPtr<NSObject>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, __unsafe_unretained Class>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, const char *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const char *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned int, const google::protobuf::Message *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, TSCENamedReferenceTrieNode *>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>>> {
        struct __hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::pair<unsigned short, const __CFUUID *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>, std::__1::hash<TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
    struct __hash_table<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::__unordered_map_hasher<TSUColumnRowCoordinate, std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUColumnRowCoordinate>, true>, std::__1::__unordered_map_equal<TSUColumnRowCoordinate, std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUColumnRowCoordinate>, true>, std::__1::allocator<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<TSUColumnRowCoordinate, std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::hash<TSUColumnRowCoordinate>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<TSUColumnRowCoordinate, std::__1::__hash_value_type<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>, std::__1::equal_to<TSUColumnRowCoordinate>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<(null)<anonymous>::Range, std::__1::allocator<(null)<anonymous>::Range>> {
    struct Range *__begin_;
    struct Range *__end_;
    struct __compressed_pair<(null)<anonymous>::Range *, std::__1::allocator<(null)<anonymous>::Range>> {
        struct Range *__first_;
    } __end_cap_;
};

struct vector<CGPoint, std::__1::allocator<CGPoint>> {
    struct CGPoint *_field1;
    struct CGPoint *_field2;
    struct __compressed_pair<CGPoint *, std::__1::allocator<CGPoint>> {
        struct CGPoint *_field1;
    } _field3;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *__begin_;
    struct CGRect *__end_;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *__first_;
    } __end_cap_;
};

struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
};

struct vector<TSCECReference, std::__1::allocator<TSCECReference>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSCECReference *, std::__1::allocator<TSCECReference>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
};

struct vector<TSCERetainedCellReference, std::__1::allocator<TSCERetainedCellReference>> {
    struct TSCERetainedCellReference *_field1;
    struct TSCERetainedCellReference *_field2;
    struct __compressed_pair<TSCERetainedCellReference *, std::__1::allocator<TSCERetainedCellReference>> {
        struct TSCERetainedCellReference *_field1;
    } _field3;
};

struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *_field1;
    struct TSCEValue *_field2;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *_field1;
    } _field3;
};

struct vector<TSCH3D::AxisLabelCacheItem, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
    struct AxisLabelCacheItem *__begin_;
    struct AxisLabelCacheItem *__end_;
    struct __compressed_pair<TSCH3D::AxisLabelCacheItem *, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> {
        struct AxisLabelCacheItem *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> {
    struct BarElementInfo *__begin_;
    struct BarElementInfo *__end_;
    struct __compressed_pair<TSCH3D::BarElementInfo *, std::__1::allocator<TSCH3D::BarElementInfo>> {
        struct BarElementInfo *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
    box_a3bd9649 *__begin_;
    box_a3bd9649 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::box<glm::detail::tvec3<float>>>> {
        box_a3bd9649 *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::ObjectState::Lookup, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
    struct Lookup *__begin_;
    struct Lookup *__end_;
    struct __compressed_pair<TSCH3D::ObjectState::Lookup *, std::__1::allocator<TSCH3D::ObjectState::Lookup>> {
        struct Lookup *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__first_;
    } __end_cap_;
};

struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
    struct ResourceAttributeState *__begin_;
    struct ResourceAttributeState *__end_;
    struct __compressed_pair<TSCH3D::ResourceAttributeState *, std::__1::allocator<TSCH3D::ResourceAttributeState>> {
        struct ResourceAttributeState *__first_;
    } __end_cap_;
};

struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__first_;
    } __end_cap_;
};

struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
};

struct vector<TSP::ExternalReferenceCompletionInfo, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
    struct ExternalReferenceCompletionInfo *_field1;
    struct ExternalReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ExternalReferenceCompletionInfo *, std::__1::allocator<TSP::ExternalReferenceCompletionInfo>> {
        struct ExternalReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
    struct FinalizeHandlerItem **__begin_;
    struct FinalizeHandlerItem **__end_;
    struct __compressed_pair<TSP::FinalizeHandlerItem **, std::__1::allocator<TSP::FinalizeHandlerItem *>> {
        struct FinalizeHandlerItem **__first_;
    } __end_cap_;
};

struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> {
    struct ObjectStackEntry *__begin_;
    struct ObjectStackEntry *__end_;
    struct __compressed_pair<TSP::ObjectStackEntry *, std::__1::allocator<TSP::ObjectStackEntry>> {
        struct ObjectStackEntry *__first_;
    } __end_cap_;
};

struct vector<TSP::ReferenceCompletionInfo, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
    struct ReferenceCompletionInfo *_field1;
    struct ReferenceCompletionInfo *_field2;
    struct __compressed_pair<TSP::ReferenceCompletionInfo *, std::__1::allocator<TSP::ReferenceCompletionInfo>> {
        struct ReferenceCompletionInfo *_field1;
    } _field3;
};

struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
    struct RepeatedExternalReferenceCompletionInfo *__begin_;
    struct RepeatedExternalReferenceCompletionInfo *__end_;
    struct __compressed_pair<TSP::RepeatedExternalReferenceCompletionInfo *, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> {
        struct RepeatedExternalReferenceCompletionInfo *__first_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__first_;
    } __end_cap_;
};

struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__first_;
    } __end_cap_;
};

struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> {
    struct TSTStrokeLayerRun *__begin_;
    struct TSTStrokeLayerRun *__end_;
    struct __compressed_pair<TSTStrokeLayerRun *, std::__1::allocator<TSTStrokeLayerRun>> {
        struct TSTStrokeLayerRun *__first_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
    struct WHCCol *__begin_;
    struct WHCCol *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCCol *, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> {
        struct WHCCol *__first_;
    } __end_cap_;
};

struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
    struct WHCRow *__begin_;
    struct WHCRow *__end_;
    struct __compressed_pair<TSTWidthHeightCache_Private::WHCRow *, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> {
        struct WHCRow *__first_;
    } __end_cap_;
};

struct vector<TSUColumnRowCoordinate, std::__1::allocator<TSUColumnRowCoordinate>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSUColumnRowCoordinate *, std::__1::allocator<TSUColumnRowCoordinate>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSUColumnRowRect, std::__1::allocator<TSUColumnRowRect>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSUColumnRowRect *, std::__1::allocator<TSUColumnRowRect>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
};

struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
};

struct vector<TSWPAdornments, std::__1::allocator<TSWPAdornments>> {
    struct TSWPAdornments *_field1;
    struct TSWPAdornments *_field2;
    struct __compressed_pair<TSWPAdornments *, std::__1::allocator<TSWPAdornments>> {
        struct TSWPAdornments *_field1;
    } _field3;
};

struct vector<TSWPAttachmentPosition, std::__1::allocator<TSWPAttachmentPosition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPAttachmentPosition *, std::__1::allocator<TSWPAttachmentPosition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLFCharIndexData, std::__1::allocator<TSWPLFCharIndexData>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSWPLFCharIndexData *, std::__1::allocator<TSWPLFCharIndexData>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<TSWPLineRef, std::__1::allocator<TSWPLineRef>> {
    struct TSWPLineRef *_field1;
    struct TSWPLineRef *_field2;
    struct __compressed_pair<TSWPLineRef *, std::__1::allocator<TSWPLineRef>> {
        struct TSWPLineRef *_field1;
    } _field3;
};

struct vector<TSWPStorageTransactionObject, std::__1::allocator<TSWPStorageTransactionObject>> {
    struct TSWPStorageTransactionObject *_field1;
    struct TSWPStorageTransactionObject *_field2;
    struct __compressed_pair<TSWPStorageTransactionObject *, std::__1::allocator<TSWPStorageTransactionObject>> {
        struct TSWPStorageTransactionObject *_field1;
    } _field3;
};

struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
};

struct vector<TSWPUIAttachmentData, std::__1::allocator<TSWPUIAttachmentData>> {
    struct TSWPUIAttachmentData *_field1;
    struct TSWPUIAttachmentData *_field2;
    struct __compressed_pair<TSWPUIAttachmentData *, std::__1::allocator<TSWPUIAttachmentData>> {
        struct TSWPUIAttachmentData *_field1;
    } _field3;
};

struct vector<_NSRange, std::__1::allocator<_NSRange>> {
    struct _NSRange *__begin_;
    struct _NSRange *__end_;
    struct __compressed_pair<_NSRange *, std::__1::allocator<_NSRange>> __end_cap_;
};

struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
    struct _TSWPCharIndexAndAffinity *__begin_;
    struct _TSWPCharIndexAndAffinity *__end_;
    struct __compressed_pair<_TSWPCharIndexAndAffinity *, std::__1::allocator<_TSWPCharIndexAndAffinity>> {
        struct _TSWPCharIndexAndAffinity *__first_;
    } __end_cap_;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
};

struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
};

struct vector<boost::shared_ptr<TSUStringChunk>, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> *__begin_;
    struct shared_ptr<TSUStringChunk> *__end_;
    struct __compressed_pair<boost::shared_ptr<TSUStringChunk>*, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> *__first_;
    } __end_cap_;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
};

struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
};

struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__first_;
    } __end_cap_;
};

struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
};

struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField>>;

struct vector<long long, std::__1::allocator<long long>> {
    long long *_field1;
    long long *_field2;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *_field1;
    } _field3;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
    struct pair<TSCECReference, bool> *_field1;
    struct pair<TSCECReference, bool> *_field2;
    struct __compressed_pair<std::__1::pair<TSCECReference, bool>*, std::__1::allocator<std::__1::pair<TSCECReference, bool>>> {
        struct pair<TSCECReference, bool> *_field1;
    } _field3;
};

struct vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>> {
    struct pair<TSUColumnRowCoordinate, TSCEFormula> *__begin_;
    struct pair<TSUColumnRowCoordinate, TSCEFormula> *__end_;
    struct __compressed_pair<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>*, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>> {
        struct pair<TSUColumnRowCoordinate, TSCEFormula> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<TSUColumnRowCoordinate, double>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, double>>> {
    struct pair<TSUColumnRowCoordinate, double> *__begin_;
    struct pair<TSUColumnRowCoordinate, double> *__end_;
    struct __compressed_pair<std::__1::pair<TSUColumnRowCoordinate, double>*, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, double>>> {
        struct pair<TSUColumnRowCoordinate, double> *__first_;
    } __end_cap_;
};

struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
};

struct vector<std::__1::pair<unsigned short, bool>, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
    struct pair<unsigned short, bool> *__begin_;
    struct pair<unsigned short, bool> *__end_;
    struct __compressed_pair<std::__1::pair<unsigned short, bool>*, std::__1::allocator<std::__1::pair<unsigned short, bool>>> {
        struct pair<unsigned short, bool> *__first_;
    } __end_cap_;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
};

struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__first_;
    } __end_cap_;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} Color_1703f521;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct path_descr *_field4;
    int _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    int _field11;
    char *_field12;
} Path_1b135553;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ChartMediatorArchive *_field3;
    basic_string_a1f69cfb *_field4;
    struct ChartMediatorFormulaStorage *_field5;
    _Bool _field6;
    _Bool _field7;
    int _field8;
    unsigned int _field9[1];
} ChartMediatorArchive_7a155ad7;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DocumentArchive *_field3;
    struct Reference *_field4;
    struct Reference *_field5;
    int _field6;
    unsigned int _field7[1];
} DocumentArchive_0d50d32f;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct DocumentArchive *_field3;
    struct RepeatedPtrField<TSWP::TextPresetDisplayItemArchive> _field4;
    basic_string_a1f69cfb *_field5;
    struct Reference *_field6;
    struct Reference *_field7;
    struct Reference *_field8;
    struct Reference *_field9;
    basic_string_a1f69cfb *_field10;
    struct Reference *_field11;
    struct Reference *_field12;
    _Bool _field13;
    int _field14;
    unsigned int _field15[1];
} DocumentArchive_8daaf9ed;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct FillArchive *_field3;
    struct StrokeArchive *_field4;
    struct ShadowArchive *_field5;
    struct ReflectionArchive *_field6;
    float _field7;
    int _field8;
    unsigned int _field9[1];
} ShapeStylePropertiesArchive_6a358b19;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RangeReferenceArchive *_field3;
    struct ChartSelectionArchive *_field4;
    int _field5;
    unsigned int _field6[1];
} ChartSelectionArchive_81b6d018;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Range *_field3;
    int _field4;
    int _field5;
    struct Range *_field6;
    int _field7;
    int _field8;
    unsigned int _field9[1];
} SelectionArchive_0e4458ed;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Range *_field3;
    int _field4;
    int _field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    RepeatedPtrField_a0d2dbe7 _field7;
    RepeatedPtrField_a0d2dbe7 _field8;
    struct Reference *_field9;
    int _field10;
    int _field11;
    unsigned int _field12[1];
} CanvasSelectionArchive_7bb3ac2c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct CellID *_field4;
    struct RepeatedPtrField<TST::CellRange> _field5;
    struct RepeatedPtrField<TST::CellRange> _field6;
    struct CellID *_field7;
    int _field8;
    int _field9;
    unsigned int _field10[1];
} SelectionArchive_c14254ac;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct Reference *_field4;
    struct Size *_field5;
    struct Point *_field6;
    float _field7;
    float _field8;
    RepeatedPtrField_a0d2dbe7 _field9;
    struct Point *_field10;
    struct Point *_field11;
    struct Reference *_field12;
    float _field13;
    float _field14;
    struct Point *_field15;
    struct RepeatedPtrField<TSCH::ChartUIState> _field16;
    float _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    RepeatedPtrField_a0d2dbe7 _field22;
    float _field23;
    float _field24;
    struct Size *_field25;
    _Bool _field26;
    _Bool _field27;
    float _field28;
    struct Point *_field29;
    int _field30;
    unsigned int _field31[1];
} UIStateArchive_682b8dea;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    RepeatedField_27dfe32f _field4;
    RepeatedField_27dfe32f _field5;
    int _field6;
    unsigned int _field7[1];
} ChartMediatorArchive_d638dd8d;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct Reference *_field3;
    struct RepeatedPtrField<TSCH::ChartSelectionPathArchive> _field4;
    int _field5;
    unsigned int _field6[1];
} ChartSelectionArchive_b9bf733c;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ThemeArchive *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    basic_string_a1f69cfb *_field5;
    RepeatedPtrField_a0d2dbe7 _field6;
    struct Reference *_field7;
    struct Reference *_field8;
    _Bool _field9;
    int _field10;
    unsigned int _field11[1];
} ThemeArchive_83b84640;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct ThemeArchive *_field3;
    RepeatedPtrField_a0d2dbe7 _field4;
    int _field5;
    unsigned int _field6[1];
} ThemeArchive_307ccdc4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    basic_string_a1f69cfb *_field3;
    struct Reference *_field4;
    RepeatedPtrField_a0d2dbe7 _field5;
    int _field6;
    unsigned int _field7[1];
} DocumentArchive_5b94e0f5;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ColumnsArchive *_field8;
    struct PaddingArchive *_field9;
    unsigned int _field10;
    _Bool _field11;
    struct Reference *_field12;
    int _field13;
    unsigned int _field14[1];
} ShapeStylePropertiesArchive_ab8a200a;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    int _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    int _field13;
    unsigned int _field14[1];
} Color_6c087495;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    struct RepeatedPtrField<TSP::Path_Element> _field3;
    int _field4;
    unsigned int _field5[1];
} Path_58853701;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct Reference *_field4;
    int _field5;
    unsigned int _field6[1];
} CanvasSelectionArchive_c8ae9c50;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct UnknownFieldSet _field2;
    RepeatedPtrField_a0d2dbe7 _field3;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field4;
    unsigned int _field5;
    unsigned int _field6;
    struct SelectionArchive *_field7;
    struct RepeatedPtrField<TN::SheetUIStateDictionaryEntryArchive> _field8;
    int _field9;
    int _field10;
    unsigned int _field11;
    unsigned int _field12;
    struct ChartSelectionArchive *_field13;
    struct Reference *_field14;
    int _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    RepeatedField_27dfe32f _field20;
    struct Point *_field21;
    struct Size *_field22;
    struct Size *_field23;
    _Bool _field24;
    int _field25;
    unsigned int _field26[1];
} UIStateArchive_9f9741c4;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    double _field5;
    unsigned int :8;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned short _field13;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_b87b2d04;

typedef struct {
    id _field1;
    id _field2;
} CDStruct_a70f6672;

typedef struct {
    _Bool forceOmitLegend;
    _Bool forceOmitTitle;
    _Bool forceOmitAxisTitle;
    _Bool enable3DTightBounds;
    _Bool enable3DScaledDepthBounds;
    _Bool enable3DSageMaxDepthRatio;
    unsigned long long max3DLimitingSeries;
} CDStruct_9aa9521f;

typedef struct {
    _Bool applicationExists;
    _Bool oldPluginExists;
    _Bool currentPluginExists;
} CDStruct_22e7ec3e;

typedef struct {
    _Bool _field1;
    _Bool _field2;
} CDStruct_3d581f42;

typedef struct {
    _Bool _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_7bd98050;

typedef struct {
    unsigned char byte0;
    unsigned char byte1;
    unsigned char byte2;
    unsigned char byte3;
    unsigned char byte4;
    unsigned char byte5;
    unsigned char byte6;
    unsigned char byte7;
    unsigned char byte8;
    unsigned char byte9;
    unsigned char byte10;
    unsigned char byte11;
    unsigned char byte12;
    unsigned char byte13;
    unsigned char byte14;
    unsigned char byte15;
} CDStruct_e6eac3cb;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    id _field3;
} CDStruct_3144a3ae;

typedef struct {
    unsigned int x;
    unsigned int y;
    _Bool xIsNegative;
    _Bool yIsNegative;
} CDStruct_d2bcd96c;

typedef struct {
    unsigned int column;
    unsigned int row;
} CDStruct_e5a208c7;

typedef struct {
    unsigned int _field1;
    long long _field2;
} CDStruct_31de062f;

typedef struct {
    unsigned long long _field1;
    CDUnknownFunctionPointerType _field2;
    void *_field3;
} CDStruct_188655c5;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
    double _field2;
} CDStruct_316206b0;

typedef struct {
    unsigned short row;
    unsigned char column;
    unsigned char reserved;
} CDStruct_0441cfb5;

typedef struct {
    unsigned short _field1;
    unsigned char _field2;
    unsigned int :1;
    unsigned int :1;
} CDStruct_f2a491fb;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_ba543347;

typedef struct {
    unsigned int mCurrencyCodeIndex:16;
    unsigned int mDecimalPlaces:8;
    unsigned int mNegativeStyle:3;
    unsigned int mShowThousandsSeparator:1;
    unsigned int mUseAccountingStyle:1;
} CDStruct_50447d3e;

typedef struct {
    unsigned int mSuppressDateFormat:1;
    unsigned int mSuppressTimeFormat:1;
    NSString *mDateTimeFormat;
} CDStruct_b44fd3ce;

typedef struct {
    unsigned int mUseAutomaticUnits:1;
    int mDurationUnitSmallest;
    int mDurationUnitLargest;
    int mDurationStyle;
} CDStruct_b1177b60;

typedef struct {
    unsigned int formulaID:24;
    unsigned int reserved:8;
} CDStruct_a91f2c80;

typedef struct {
    unsigned int mBase:8;
    unsigned int mBasePlaces:8;
    unsigned int mBaseUseMinusSign:1;
} CDStruct_c5e3a123;

typedef struct {
    unsigned int mFractionAccuracy:8;
} CDStruct_7ef9dbe9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    unsigned long long _field4;
} CDStruct_41cea37a;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
} CDStruct_a6fa95e6;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double mMinimum;
    double mMaximum;
    double mIncrement;
    int mDisplayFormatType;
    unsigned int mOrientation:2;
    unsigned int mPosition:2;
} CDStruct_8374e35e;

typedef struct {
    double skew;
    double skewOffset;
    double scale;
} CDStruct_d6fcdff4;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

typedef struct {
    int mInitialValue;
    unsigned int mMultipleChoiceListFormatID;
    id mData;
} CDStruct_4edf9c0c;

typedef struct {
    int _field1;
    unsigned long long _field2;
    _Bool _field3;
} CDStruct_b9fbe577;

typedef struct {
    int x;
    int y;
    int width;
    int height;
} CDStruct_bf95b13b;

typedef struct {
    int width;
    int height;
} CDStruct_79c71658;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned int mCustomFormatID;
    CDStruct_183601bc *mData;
} CDStruct_1127e784;

typedef struct {
    unsigned int column:15;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
} CDStruct_41fa97f4;

typedef struct {
    unsigned int row:21;
    unsigned int column:15;
    unsigned int rowIsAbsolute:1;
    unsigned int columnIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
} CDStruct_4ceb3147;

typedef struct {
    unsigned int row:21;
    unsigned int rowIsAbsolute:1;
    CDStruct_e6eac3cb tableID;
} CDStruct_29631068;

typedef struct {
    int _field1;
    unsigned long long _field2;
    _Bool _field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    _Bool _field8;
    struct _NSRange _field9;
    unsigned long long _field10;
} CDStruct_c6084d62;

typedef struct {
    int _field1;
    int *_field2;
    CDStruct_183601bc *_field3;
} CDStruct_727a4eeb;

typedef struct {
    CDStruct_e5a208c7 topLeft;
    CDStruct_e5a208c7 bottomRight;
} CDStruct_58eae27c;

typedef struct {
    CDStruct_73b5d383 topLeft;
    CDStruct_73b5d383 bottomRight;
} CDStruct_2d1207dd;

typedef struct {
    CDStruct_0441cfb5 coordinate;
    struct __CFUUID *tableID;
} CDStruct_78b871e1;

typedef struct {
    CDStruct_0441cfb5 origin;
    struct {
        unsigned short numberOfColumns;
        unsigned short numberOfRows;
    } size;
} CDStruct_5f1f7aa9;

typedef struct {
    struct CGAffineTransform _field1;
    struct CGPoint _field2;
} CDStruct_71493e60;

typedef struct {
    struct CGPoint _field1;
    _Bool _field2;
} CDStruct_40a92360;

typedef struct {
    struct CGPoint _field1;
    double _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_460b8ffe;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct _NSRange _field1;
    id _field2;
    double _field3;
    id _field4[3];
    unsigned int _field5;
    struct TSWPDrawingState *_field6;
    id _field7;
    id _field8;
    id _field9;
    struct __CTFont *_field10;
    struct CGColor *_field11;
    id _field12;
    _Bool _field13;
    int _field14;
    double _field15;
    struct CGColor *_field16;
    double _field17;
} CDStruct_3b6efdb6;

typedef struct {
    union {
        struct {
            unsigned int listStart;
        } ;
        struct {
            unsigned short level;
            unsigned short flags;
        } ;
        struct {
            unsigned short row;
            unsigned short column;
        } ;
        struct {
            int writingDirection;
        } ;
        struct {
            unsigned int _singleValue;
        } ;
        struct {
            unsigned short _first;
            unsigned short _second;
        } ;
    } ;
} CDStruct_8a5ee6e3;

typedef struct {
    id _field1;
    id _field2;
    struct CGRect _field3;
    id _field4;
    id _field5;
} CDStruct_e0d92598;

typedef struct {
    CDStruct_0441cfb5 mPreviousCellID;
    CDStruct_0441cfb5 mCellID;
    TSTCell *mCell;
    struct TSTCellStorage *mCellRef;
    CDStruct_5f1f7aa9 mMergeRange;
    _Bool mStyleOnly;
    _Bool mCommentStorageOnly;
    _Bool mHidden;
    _Bool mHiddenRow;
    _Bool mHiddenColumn;
} CDStruct_6188ab8e;

typedef struct {
    CDStruct_0ea164f0 range;
    struct __CFUUID *tableID;
} CDStruct_5744d895;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    _Bool _field6;
} CDStruct_7e4c5a1e;

typedef struct {
    struct CGRect _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} CDStruct_50f584da;

typedef struct {
    struct CGRect _field1;
    struct _NSRange _field2;
    unsigned long long _field3;
    struct _NSRange _field4;
    unsigned long long _field5;
} CDStruct_6026ced1;

typedef struct {
    int type;
    union {
        NSNumber *number;
        NSDate *date;
        NSString *string;
        struct {
            unsigned char column;
            unsigned short row;
            struct __CFUUID *tableID;
            _Bool columnIsAbsolute;
            _Bool rowIsAbsolute;
        } reference;
        struct {
            double value;
            int units;
        } duration;
    } ;
} CDStruct_9527dae1;

typedef struct {
    int mFormatType;
    union {
        CDStruct_50447d3e mNumberFormatStruct;
        CDStruct_7ef9dbe9 mFractionFormatStruct;
        CDStruct_c5e3a123 mBaseFormatStruct;
        CDStruct_b44fd3ce mDateFormatStruct;
        CDStruct_b1177b60 mDurationFormatStruct;
        CDStruct_1127e784 mCustomFormatStruct;
        CDStruct_8374e35e mControlFormatStruct;
        CDStruct_4edf9c0c mMultipleChoiceListFormatStruct;
    } ;
} CDStruct_bfed0e84;

typedef struct {
    int referenceType;
    union {
        CDStruct_78b871e1 cellReference;
        CDStruct_5744d895 rangeReference;
        struct {
            CDStruct_5744d895 rangeReference;
            int rangeContext;
        } spanningRangeReference;
        struct __CFUUID *tableID;
    } referenceUnion;
} CDStruct_39788696;

// Ambiguous groups
typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long x;
    unsigned long long y;
} CDStruct_73b5d383;

typedef struct {
    unsigned short _field1;
    unsigned short _field2;
} CDStruct_d65e47c4;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float start;
    float duration;
} CDStruct_083b1a49;

typedef struct {
    float x;
    float y;
} CDStruct_6e3f967a;

typedef struct {
    CDStruct_0441cfb5 _field1;
    CDStruct_0441cfb5 _field2;
} CDStruct_db54a1d4;

typedef struct {
    CDStruct_0441cfb5 mTopLeft;
    CDStruct_0441cfb5 mBottomRight;
} CDStruct_0ea164f0;

typedef struct IteratorRange<const char *> {
    struct pair<const char *, const char *> _field1;
} IteratorRange_617e5e79;

typedef struct RepeatedField<bool> {
    _Bool *_field1;
    int _field2;
    int _field3;
} RepeatedField_12b14242;

typedef struct RepeatedField<float> {
    float *_field1;
    int _field2;
    int _field3;
} RepeatedField_324622b8;

typedef struct RepeatedField<int> {
    int *_field1;
    int _field2;
    int _field3;
} RepeatedField_c2891982;

typedef struct RepeatedField<unsigned int> {
    unsigned int *elements_;
    int current_size_;
    int total_size_;
} RepeatedField_27dfe32f;

typedef struct RepeatedPtrField<TSD::GeometryArchive> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_45e8210e;

typedef struct RepeatedPtrField<TSP::Color> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_634a5f45;

typedef struct RepeatedPtrField<TSP::ComponentExternalReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_1f1a6efb;

typedef struct RepeatedPtrField<TSP::DataReference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_5fb0b506;

typedef struct RepeatedPtrField<TSP::Reference> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_a0d2dbe7;

typedef struct RepeatedPtrField<std::__1::basic_string<char>> {
    void **_field1;
    int _field2;
    int _field3;
    int _field4;
} RepeatedPtrField_236b8a23;

typedef struct StateStack<TSCH3D::ObjectState, 6> {
    unsigned long long mIndex;
    struct ObjectState mCurrent;
    struct ObjectState mStack[6];
} StateStack_22d3dc01;

typedef struct array<(null)<anonymous>::TextureVariables, 2> {
    struct TextureVariables _field1[2];
} array_6b0ddbad;

typedef struct array<unsigned char, 20> {
    unsigned char __elems_[20];
} array_019f9a10;

typedef struct auto_ptr<TSP::FieldInfoTree> {
    struct FieldInfoTree *_field1;
} auto_ptr_40e77785;

typedef struct auto_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>> {
    hash_map_43d567e3 *__ptr_;
} auto_ptr_c01b630f;

typedef struct auto_ptr<google::protobuf::Message> {
    struct Message *__ptr_;
} auto_ptr_4370f086;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct box<glm::detail::tvec1<float>> {
    tvec1_1f665138 mMin;
    tvec1_1f665138 mMax;
} box_e9f23397;

typedef struct box<glm::detail::tvec2<float>> {
    tvec2_84d5962d mMin;
    tvec2_84d5962d mMax;
} box_80622335;

typedef struct box<glm::detail::tvec2<int>> {
    tvec2_3b141483 mMin;
    tvec2_3b141483 mMax;
} box_0260e9b3;

typedef struct box<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mMin;
    tvec3_17f03ce0 mMax;
} box_a3bd9649;

typedef struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
    struct __hash_table<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateEqual, true>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, void *>>> __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowCoordinate>, TSCECellCoordinateEqual, true>> {
            float __first_;
        } __p3_;
    } __table_;
} hash_map_a5107d4c;

typedef struct hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
    struct __hash_table<std::__1::pair<const long long, bool>, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, bool>, TSP::IdentifierHash, true>, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, bool>, std::__1::equal_to<const long long>, true>, std::__1::allocator<std::__1::pair<const long long, bool>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::pair<const long long, bool>, void *>*> {
                struct __hash_node<std::__1::pair<const long long, bool>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, __gnu_cxx::__hash_map_hasher<std::__1::pair<const long long, bool>, TSP::IdentifierHash, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, __gnu_cxx::__hash_map_equal<std::__1::pair<const long long, bool>, std::__1::equal_to<const long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
} hash_map_43d567e3;

typedef struct hash_set<TSCECReference, TSCECReferenceHash, TSCECReferenceEqual, std::__1::allocator<TSCECReference>> {
    struct __hash_table<TSCECReference, TSCECReferenceHash, TSCECReferenceEqual, std::__1::allocator<TSCECReference>> {
        struct unique_ptr<std::__1::__hash_node<TSCECReference, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSCECReference, void *>*>, std::__1::allocator<std::__1::__hash_node<TSCECReference, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSCECReference, void *>*> {
                struct __hash_node<TSCECReference, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECReferenceHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECReferenceEqual> {
            float _field1;
        } _field4;
    } _field1;
} hash_set_946ba02d;

typedef struct hash_set<TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUColumnRowCoordinate>> {
    struct __hash_table<TSUColumnRowCoordinate, TSCECellCoordinateHash, TSCECellCoordinateEqual, std::__1::allocator<TSUColumnRowCoordinate>> {
        struct unique_ptr<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*>, std::__1::allocator<std::__1::__hash_node<TSUColumnRowCoordinate, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<TSUColumnRowCoordinate, void *>*> {
                struct __hash_node<TSUColumnRowCoordinate, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, TSCECellCoordinateHash> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, TSCECellCoordinateEqual> {
            float _field1;
        } _field4;
    } _field1;
} hash_set_d1f8f196;

typedef struct line<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
} line_190fbfc7;

typedef struct map<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
    struct __tree<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>>> {
        struct __tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::tuple<std::__1::shared_ptr<google::protobuf::Message>, std::__1::shared_ptr<__gnu_cxx::hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>>>, std::__1::shared_ptr<__gnu_cxx::hash_map<const long long, bool, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, bool>>>>>>, std::__1::less<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_b332c0f2;

typedef struct map<unsigned long, NSMutableIndexSet *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, NSMutableIndexSet *>>> {
    struct __tree<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, NSMutableIndexSet *>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, NSMutableIndexSet *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, NSMutableIndexSet *>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} map_7ba5c2fb;

typedef struct multiset<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapPbLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapPbLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} multiset_5f6ec4d0;

typedef struct pair<TSCH3D::IteratorRange<const char *>, TSCH3D::IteratorRange<const char *>> {
    IteratorRange_617e5e79 _field1;
    IteratorRange_617e5e79 _field2;
} pair_10e2d813;

typedef struct pair<TSCH3DAxisLabelEnumerator *, TSCH3DAxisLabelEnumerator *> {
    id _field1;
    id _field2;
} pair_952e027e;

typedef struct pair<bool, TSCH3DShaderVariableLinkage *> {
    _Bool _field1;
    id _field2;
} pair_64bf96b1;

typedef struct plane<glm::detail::tvec3<float>> {
    tvec3_17f03ce0 mNormal;
    float mDistance;
} plane_849e6053;

typedef struct range<double> {
    double _field1;
    double _field2;
} range_2a4e38ce;

typedef struct range<unsigned int> {
    unsigned int _field1;
    unsigned int _field2;
} range_f61e6b34;

typedef struct set<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct __tree<GQUtility::ObjcSharedPtr<GQDWrapPoint>, GQUtility::NSObjectComparator<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct __tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GQUtility::ObjcSharedPtr<GQDWrapPoint>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, GQUtility::NSObjectComparator<GQDWrapPoint>> {
            unsigned long long _field1;
            struct NSObjectComparator<GQDWrapPoint> _field2;
        } _field3;
    } _field1;
} set_80ec8016;

typedef struct set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
    struct __tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::__1::allocator<TSTColumnOrRowMap>> {
        struct __tree_node<TSTColumnOrRowMap, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSTColumnOrRowMap, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_d5b49e31;

typedef struct set<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeColumnMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeColumnMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_1b864098;

typedef struct set<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
    struct __tree<TSUColumnRowRect, TSTCellRangeRowMajorLess, std::__1::allocator<TSUColumnRowRect>> {
        struct __tree_node<TSUColumnRowRect, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUColumnRowRect, void *>>> __pair1_;
        struct __compressed_pair<unsigned long, TSTCellRangeRowMajorLess> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} set_bf64ed85;

typedef struct set<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
    struct __tree<long long, std::__1::less<long long>, std::__1::allocator<long long>> {
        struct __tree_node<long long, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_6550bfbd;

typedef struct shared_ptr<TSP::ArchiveInfo> {
    struct ArchiveInfo *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bafc106c;

typedef struct shared_ptr<TSWPLineFragmentArray> {
    struct TSWPLineFragmentArray *px;
    struct shared_count pn;
} shared_ptr_72f95721;

typedef struct shared_ptr<TSWPParagraphTypesetter> {
    struct TSWPParagraphTypesetter *_field1;
    struct shared_count _field2;
} shared_ptr_6f812b7d;

typedef struct shared_ptr<google::protobuf::UnknownFieldSet> {
    struct UnknownFieldSet *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b9bbcad9;

typedef struct stack<std::__1::pair<const Action *, int>, std::__1::deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>>> {
    struct deque<std::__1::pair<const Action *, int>, std::__1::allocator<std::__1::pair<const Action *, int>>> _field1;
} stack_00018fe6;

typedef struct stack<std::__1::shared_ptr<StateSpec>, std::__1::deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>>> {
    struct deque<std::__1::shared_ptr<StateSpec>, std::__1::allocator<std::__1::shared_ptr<StateSpec>>> _field1;
} stack_e5003a0d;

typedef struct tmat2x2<float> {
    tvec2_84d5962d _field1[2];
} tmat2x2_6cc53533;

typedef struct tmat3x3<float> {
    tvec3_17f03ce0 value[3];
} tmat3x3_b39cd897;

typedef struct tmat4x4<float> {
    tvec4_ac57c72d value[4];
} tmat4x4_3074befe;

typedef struct tquat<float> {
    float x;
    float y;
    float z;
    float w;
} tquat_f3d6c8fe;

typedef struct tvec1<float> {
    CDUnion_d07f0a1e ;
} tvec1_1f665138;

typedef struct tvec1<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
} tvec1_dad7e00b;

typedef struct tvec2<bool> {
    union {
        _Bool x;
        _Bool r;
        _Bool s;
    } ;
    union {
        _Bool y;
        _Bool g;
        _Bool t;
    } ;
} tvec2_01ee4891;

typedef struct tvec2<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
} tvec2_84d5962d;

typedef struct tvec2<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
} tvec2_3b141483;

typedef struct tvec3<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
} tvec3_17f03ce0;

typedef struct tvec3<int> {
    CDUnion_55b6007a ;
    CDUnion_020eeea2 ;
    union {
        int z;
        int b;
        int p;
    } ;
} tvec3_c2818ced;

typedef struct tvec4<bool> {
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field1;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field2;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field3;
    union {
        _Bool _field1;
        _Bool _field2;
        _Bool _field3;
    } _field4;
} tvec4_d23a2b6e;

typedef struct tvec4<float> {
    CDUnion_d07f0a1e ;
    CDUnion_58f8d4fa ;
    CDUnion_47fe3727 ;
    union {
        float w;
        float a;
        float q;
    } ;
} tvec4_ac57c72d;

typedef struct tvec4<int> {
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field1;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field2;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field3;
    union {
        int _field1;
        int _field2;
        int _field3;
    } _field4;
} tvec4_f99fd489;

typedef struct vector<GQUtility::ObjcSharedPtr<GQDWrapPoint>, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
    struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    struct ObjcSharedPtr<GQDWrapPoint> *_field2;
    struct __compressed_pair<GQUtility::ObjcSharedPtr<GQDWrapPoint>*, std::__1::allocator<GQUtility::ObjcSharedPtr<GQDWrapPoint>>> {
        struct ObjcSharedPtr<GQDWrapPoint> *_field1;
    } _field3;
} vector_dadce35e;

typedef struct vector<TSCEReferenceValue, std::__1::allocator<TSCEReferenceValue>> {
    struct TSCEReferenceValue *_field1;
    struct TSCEReferenceValue *_field2;
    struct __compressed_pair<TSCEReferenceValue *, std::__1::allocator<TSCEReferenceValue>> {
        struct TSCEReferenceValue *_field1;
    } _field3;
} vector_99ef3555;

typedef struct vector<TSCEValue, std::__1::allocator<TSCEValue>> {
    struct TSCEValue *_field1;
    struct TSCEValue *_field2;
    struct __compressed_pair<TSCEValue *, std::__1::allocator<TSCEValue>> {
        struct TSCEValue *_field1;
    } _field3;
} vector_10088e46;

typedef struct vector<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
    plane_849e6053 *__begin_;
    plane_849e6053 *__end_;
    struct __compressed_pair<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>*, std::__1::allocator<TSCH3D::Math::ExtendedTypesDetails::plane<glm::detail::tvec3<float>>>> {
        plane_849e6053 *__first_;
    } __end_cap_;
} vector_a9ee3a08;

typedef struct vector<TSCH3D::PODType<unsigned char>, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
    struct PODType<unsigned char> *__begin_;
    struct PODType<unsigned char> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned char>*, std::__1::allocator<TSCH3D::PODType<unsigned char>>> {
        struct PODType<unsigned char> *__first_;
    } __end_cap_;
} vector_4c74e494;

typedef struct vector<TSCH3D::PODType<unsigned short>, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
    struct PODType<unsigned short> *__begin_;
    struct PODType<unsigned short> *__end_;
    struct __compressed_pair<TSCH3D::PODType<unsigned short>*, std::__1::allocator<TSCH3D::PODType<unsigned short>>> {
        struct PODType<unsigned short> *__first_;
    } __end_cap_;
} vector_a3e57ab7;

typedef struct vector<TSCH3D::RenderElementInfo, std::__1::allocator<TSCH3D::RenderElementInfo>> {
    struct RenderElementInfo *__begin_;
    struct RenderElementInfo *__end_;
    struct __compressed_pair<TSCH3D::RenderElementInfo *, std::__1::allocator<TSCH3D::RenderElementInfo>> {
        struct RenderElementInfo *__first_;
    } __end_cap_;
} vector_cd7372eb;

typedef struct vector<TSCH3DShaderVariableScopeType, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
    struct TSCH3DShaderVariableScopeType *__begin_;
    struct TSCH3DShaderVariableScopeType *__end_;
    struct __compressed_pair<TSCH3DShaderVariableScopeType *, std::__1::allocator<TSCH3DShaderVariableScopeType>> {
        struct TSCH3DShaderVariableScopeType *__first_;
    } __end_cap_;
} vector_aeadf634;

typedef struct vector<TSDBrushVertexData, std::__1::allocator<TSDBrushVertexData>> {
    struct TSDBrushVertexData *_field1;
    struct TSDBrushVertexData *_field2;
    struct __compressed_pair<TSDBrushVertexData *, std::__1::allocator<TSDBrushVertexData>> {
        struct TSDBrushVertexData *_field1;
    } _field3;
} vector_b5dead7b;

typedef struct vector<TSP::UnarchiverReference, std::__1::allocator<TSP::UnarchiverReference>> {
    struct UnarchiverReference *__begin_;
    struct UnarchiverReference *__end_;
    struct __compressed_pair<TSP::UnarchiverReference *, std::__1::allocator<TSP::UnarchiverReference>> {
        struct UnarchiverReference *__first_;
    } __end_cap_;
} vector_029d225a;

typedef struct vector<TSP::UnarchiverRepeatedReference, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
    struct UnarchiverRepeatedReference *__begin_;
    struct UnarchiverRepeatedReference *__end_;
    struct __compressed_pair<TSP::UnarchiverRepeatedReference *, std::__1::allocator<TSP::UnarchiverRepeatedReference>> {
        struct UnarchiverRepeatedReference *__first_;
    } __end_cap_;
} vector_8ef431c5;

typedef struct vector<TSUColumnRowCoordinate, std::__1::allocator<TSUColumnRowCoordinate>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSUColumnRowCoordinate *, std::__1::allocator<TSUColumnRowCoordinate>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_40b16ab8;

typedef struct vector<TSUColumnRowRect, std::__1::allocator<TSUColumnRowRect>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSUColumnRowRect *, std::__1::allocator<TSUColumnRowRect>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_764b4ef2;

typedef struct vector<TSWPAdornmentLine, std::__1::allocator<TSWPAdornmentLine>> {
    struct TSWPAdornmentLine *_field1;
    struct TSWPAdornmentLine *_field2;
    struct __compressed_pair<TSWPAdornmentLine *, std::__1::allocator<TSWPAdornmentLine>> {
        struct TSWPAdornmentLine *_field1;
    } _field3;
} vector_5a1d2cc3;

typedef struct vector<TSWPAdornmentRect, std::__1::allocator<TSWPAdornmentRect>> {
    struct TSWPAdornmentRect *_field1;
    struct TSWPAdornmentRect *_field2;
    struct __compressed_pair<TSWPAdornmentRect *, std::__1::allocator<TSWPAdornmentRect>> {
        struct TSWPAdornmentRect *_field1;
    } _field3;
} vector_e65b05c3;

typedef struct vector<TSWPTargetHint, std::__1::allocator<TSWPTargetHint>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<TSWPTargetHint *, std::__1::allocator<TSWPTargetHint>> {
        CDStruct_183601bc *__first_;
    } __end_cap_;
} vector_b76bc591;

typedef struct vector<bool, std::__1::allocator<bool>> {
    unsigned long long *__begin_;
    unsigned long long __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long long __first_;
    } __cap_alloc_;
} vector_277e069e;

typedef struct vector<boost::polygon::segment_data<double>, std::__1::allocator<boost::polygon::segment_data<double>>> {
    struct segment_data<double> *_field1;
    struct segment_data<double> *_field2;
    struct __compressed_pair<boost::polygon::segment_data<double>*, std::__1::allocator<boost::polygon::segment_data<double>>> {
        struct segment_data<double> *_field1;
    } _field3;
} vector_5a9f1b73;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__first_;
    } __end_cap_;
} vector_3f7ffb82;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__first_;
    } __end_cap_;
} vector_ec52ae8c;

typedef struct vector<glm::detail::tvec1<float>, std::__1::allocator<glm::detail::tvec1<float>>> {
    tvec1_1f665138 *__begin_;
    tvec1_1f665138 *__end_;
    struct __compressed_pair<glm::detail::tvec1<float>*, std::__1::allocator<glm::detail::tvec1<float>>> {
        tvec1_1f665138 *__first_;
    } __end_cap_;
} vector_7cfb452c;

typedef struct vector<glm::detail::tvec1<int>, std::__1::allocator<glm::detail::tvec1<int>>> {
    tvec1_dad7e00b *_field1;
    tvec1_dad7e00b *_field2;
    struct __compressed_pair<glm::detail::tvec1<int>*, std::__1::allocator<glm::detail::tvec1<int>>> {
        tvec1_dad7e00b *_field1;
    } _field3;
} vector_319661ea;

typedef struct vector<glm::detail::tvec2<float>, std::__1::allocator<glm::detail::tvec2<float>>> {
    tvec2_84d5962d *__begin_;
    tvec2_84d5962d *__end_;
    struct __compressed_pair<glm::detail::tvec2<float>*, std::__1::allocator<glm::detail::tvec2<float>>> {
        tvec2_84d5962d *__first_;
    } __end_cap_;
} vector_35283da1;

typedef struct vector<glm::detail::tvec2<int>, std::__1::allocator<glm::detail::tvec2<int>>> {
    tvec2_3b141483 *__begin_;
    tvec2_3b141483 *__end_;
    struct __compressed_pair<glm::detail::tvec2<int>*, std::__1::allocator<glm::detail::tvec2<int>>> {
        tvec2_3b141483 *__first_;
    } __end_cap_;
} vector_56a3751a;

typedef struct vector<glm::detail::tvec3<float>, std::__1::allocator<glm::detail::tvec3<float>>> {
    tvec3_17f03ce0 *__begin_;
    tvec3_17f03ce0 *__end_;
    struct __compressed_pair<glm::detail::tvec3<float>*, std::__1::allocator<glm::detail::tvec3<float>>> {
        tvec3_17f03ce0 *__first_;
    } __end_cap_;
} vector_45b393db;

typedef struct vector<glm::detail::tvec3<int>, std::__1::allocator<glm::detail::tvec3<int>>> {
    tvec3_c2818ced *_field1;
    tvec3_c2818ced *_field2;
    struct __compressed_pair<glm::detail::tvec3<int>*, std::__1::allocator<glm::detail::tvec3<int>>> {
        tvec3_c2818ced *_field1;
    } _field3;
} vector_e600bae4;

typedef struct vector<glm::detail::tvec4<float>, std::__1::allocator<glm::detail::tvec4<float>>> {
    tvec4_ac57c72d *__begin_;
    tvec4_ac57c72d *__end_;
    struct __compressed_pair<glm::detail::tvec4<float>*, std::__1::allocator<glm::detail::tvec4<float>>> {
        tvec4_ac57c72d *__first_;
    } __end_cap_;
} vector_b7abfae3;

typedef struct vector<glm::detail::tvec4<int>, std::__1::allocator<glm::detail::tvec4<int>>> {
    tvec4_f99fd489 *_field1;
    tvec4_f99fd489 *_field2;
    struct __compressed_pair<glm::detail::tvec4<int>*, std::__1::allocator<glm::detail::tvec4<int>>> {
        tvec4_f99fd489 *_field1;
    } _field3;
} vector_50d79d4a;

typedef struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__first_;
    } __end_cap_;
} vector_b5bccc4d;

typedef struct vector<std::__1::pair<unsigned long, unsigned short>, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
    struct pair<unsigned long, unsigned short> *_field1;
    struct pair<unsigned long, unsigned short> *_field2;
    struct __compressed_pair<std::__1::pair<unsigned long, unsigned short>*, std::__1::allocator<std::__1::pair<unsigned long, unsigned short>>> {
        struct pair<unsigned long, unsigned short> *_field1;
    } _field3;
} vector_a36e5995;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__first_;
    } __end_cap_;
} vector_a3426c4e;

typedef struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__first_;
    } __end_cap_;
} vector_88016b54;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__first_;
    } __end_cap_;
} vector_eef16772;

typedef struct vector<void (^)(), std::__1::allocator<void (^)()>> {
    CDUnknownBlockType *__begin_;
    CDUnknownBlockType *__end_;
    struct __compressed_pair<void (^__strong *)(), std::__1::allocator<void (^)()>> {
        CDUnknownBlockType *__first_;
    } __end_cap_;
} vector_667badbd;

#pragma mark Typedef'd Unions

typedef union {
    TSCETectonicShift *mTectonicShift;
    struct {
        struct __CFUUID *mTableID;
        TSKShuffleMapping *mSortMapping;
        _Bool mExplodeRanges;
    } mRemapSortMappingInfo;
    struct {
        CDStruct_5744d895 mFromReference;
        CDStruct_5744d895 mToReference;
    } mRangeMovedInfo;
    struct __CFUUID *mDeletedOwnerID;
    struct {
        struct __CFUUID *mTableID;
        CDStruct_0ea164f0 mOldTableSize;
        CDStruct_0ea164f0 mNewTableSize;
    } mTableResizedInfo;
    struct {
        struct __CFUUID *mTableID;
        CDStruct_0ea164f0 mMergedRange;
    } mCellMergedInfo;
    struct {
        struct __CFUUID *mTableID;
        struct __CFUUID *mTransposedCondStyleOwnerID;
        unsigned short mNumberOfFooterRows;
    } mTransposedInfo;
} CDUnion_003095c3;

// Ambiguous groups
typedef union {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDUnion_2cf95dea;

typedef union {
    float x;
    float r;
    float s;
} CDUnion_d07f0a1e;

typedef union {
    float y;
    float g;
    float t;
} CDUnion_58f8d4fa;

typedef union {
    float z;
    float b;
    float p;
} CDUnion_47fe3727;

typedef union {
    int _field1;
    int _field2;
    int _field3;
} CDUnion_58123c5d;

typedef union {
    int x;
    int r;
    int s;
} CDUnion_55b6007a;

typedef union {
    int y;
    int g;
    int t;
} CDUnion_020eeea2;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
// UUID: A9DF4CAB-6CE7-325C-A0C0-0B757FA3CFD2
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 191.0.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol GQBodyStorageGenerator <NSObject>
+ (int)handleBodyStorage:(GQDWPBodyStorage *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQDNameMappable <NSObject>
+ (const struct StateSpec *)stateForReading;
@end

@protocol GQDNameMappableWithDefault <GQDNameMappable>
+ (NSObject *)createReplacementForMissingObject:(struct _xmlTextReader *)arg1 processor:(GQPProcessor *)arg2;
@end

@protocol GQDrawablesGenerator <NSObject>
+ (int)endDrawables:(GQSDocument *)arg1;
+ (Class)beginTable:(GQSDocument *)arg1;
+ (int)handleDrawable:(GQDDrawable *)arg1 state:(GQSDocument *)arg2;
+ (int)beginDrawables:(GQSDocument *)arg1;
@end

@protocol GQHContext <NSObject>
- (void)translate:(struct CGSize)arg1 state:(GQHState *)arg2;
- (void)setBezierPath:(char *)arg1 state:(GQHState *)arg2;
- (void)setImageFill:(struct __CFURL *)arg1 srcSize:(struct CGSize)arg2 mode:(int)arg3 state:(GQHState *)arg4;
- (void)setGradient:(GQDRGradient *)arg1 state:(GQHState *)arg2;
- (void)setFillColor:(GQDColor *)arg1 state:(GQHState *)arg2;
- (void)setStrokeColor:(GQDColor *)arg1 width:(float)arg2 state:(GQHState *)arg3;
- (void)setContextOpacity:(float)arg1 state:(GQHState *)arg2;
- (void)createMaskedImageWithId:(struct __CFString *)arg1 geometry:(GQDAffineGeometry *)arg2 imageBinary:(GQDImageBinary *)arg3 cropGeometry:(GQDAffineGeometry *)arg4 maskingShapePath:(GQDPath *)arg5 alphaMaskBezier:(struct CGPath *)arg6 graphicStyle:(GQDSStyle *)arg7 isFloating:(_Bool)arg8 state:(GQHState *)arg9;
- (void)createShapeWithId:(struct __CFString *)arg1 path:(GQDPath *)arg2 geometry:(GQDAffineGeometry *)arg3 graphicStyle:(GQDSStyle *)arg4 isFloating:(_Bool)arg5 state:(GQHState *)arg6;
- (void)teardownContext:(GQHState *)arg1;
- (void)prepareContext:(GQHState *)arg1;
- (void)addScriptTagToHtml:(GQHXML *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQHXMLOutput <NSObject>
- (struct __CFData *)createProgressiveHtml;
- (struct __CFData *)createHtmlWithCss:(struct __CFString *)arg1;
- (struct __CFData *)createHtml;
- (void)addCharRef:(const char *)arg1;
- (void)addXmlCharContent:(const char *)arg1;
- (void)setAttribute:(const char *)arg1 value:(const char *)arg2;
- (void)endElementWithExpectedName:(const char *)arg1;
- (void)endElement;
- (void)startElement:(const char *)arg1;
@end

@protocol GQKeynoteGenerator <NSObject>
+ (Class)enterSlideDrawables:(GQDBGAbstractSlide *)arg1 state:(GQSDocument *)arg2;
+ (int)endSlide:(GQDBGSlide *)arg1 state:(GQSDocument *)arg2;
+ (int)beginSlide:(GQDBGSlide *)arg1 state:(GQSDocument *)arg2;
+ (int)handleThemeStylesheet:(GQDSStylesheet *)arg1 state:(GQSDocument *)arg2;
+ (int)handleSlideSize:(GQDBGPresentation *)arg1 state:(GQSDocument *)arg2;
+ (int)endPresentation:(GQDBGPresentation *)arg1 state:(GQSDocument *)arg2;
+ (int)beginPresentation:(GQDBGPresentation *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQLassoGenerator <NSObject>
+ (int)handleDrawableZOrder:(const char *)arg1 state:(GQSDocument *)arg2;
+ (Class)beginWorkspacePage:(GQDLSDocument *)arg1 state:(GQSDocument *)arg2;
+ (int)handleWorkspaceStyle:(GQDSStyle *)arg1 state:(GQSDocument *)arg2;
+ (int)endWorkspace:(GQSDocument *)arg1;
+ (int)beginWorkspace:(const char *)arg1 state:(GQSDocument *)arg2;
+ (int)handleStylesheet:(GQDLSDocument *)arg1 state:(GQSDocument *)arg2;
+ (int)endDocument:(GQDLSDocument *)arg1 state:(GQSDocument *)arg2;
+ (int)beginDocument:(GQDLSDocument *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQPObjectHandler <NSObject>
- (void)handleObject:(id)arg1;
@end

@protocol GQPObjectReader <NSObject>
- (int)doneReading:(GQPProcessor *)arg1;
- (int)beginReadingFromReader:(struct _xmlTextReader *)arg1 processor:(GQPProcessor *)arg2;
@end

@protocol GQPagesGenerator <NSObject>
+ (int)setCurrentPageIndex:(int)arg1 state:(GQSDocument *)arg2;
+ (int)handleSectionStyle:(GQDSStyle *)arg1 pageIndex:(int)arg2 numPages:(int)arg3 state:(GQSDocument *)arg4;
+ (int)handleFooters:(struct __CFArray *)arg1 state:(GQSDocument *)arg2;
+ (int)handleHeaders:(struct __CFArray *)arg1 state:(GQSDocument *)arg2;
+ (Class)enterBodyStorage:(GQSDocument *)arg1;
+ (Class)enterMainDrawablesForPage:(unsigned int)arg1 state:(GQSDocument *)arg2;
+ (int)handleStylesheet:(GQDSLPublication *)arg1 state:(GQSDocument *)arg2;
+ (int)handlePageSetup:(GQDSLPublication *)arg1 state:(GQSDocument *)arg2;
+ (int)endPublication:(GQDSLPublication *)arg1 state:(GQSDocument *)arg2;
+ (int)beginPublication:(GQDSLPublication *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQTableGenerator <NSObject>
+ (int)handleCell:(GQDTCell *)arg1 state:(GQSDocument *)arg2;
+ (int)endCells:(GQDTTable *)arg1 state:(GQSDocument *)arg2;
+ (int)beginCells:(GQDTTable *)arg1 state:(GQSDocument *)arg2;
+ (int)endTable:(GQDTTable *)arg1 state:(GQSDocument *)arg2;
+ (int)beginTable:(GQDTTable *)arg1 state:(GQSDocument *)arg2;
@end

@protocol GQUOutputBundle <NSObject>
- (void)setPageElementXPath:(struct __CFString *)arg1 withThumbnailsOnLeft:(_Bool)arg2;
- (void)setDocumentSize:(struct CGSize)arg1;
- (_Bool)setData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 forNamedResource:(struct __CFString *)arg3;
- (_Bool)setDataForMainHtmlResource:(struct __CFData *)arg1;
- (struct __CFString *)createUriForResource:(struct __CFString *)arg1;
@end

@protocol GQWrapPointGenerator <NSObject>
- (void)clearWrapPoints;
- (vector_dadce35e *)createListOfWrapPointsAlongY:(float)arg1 minX:(float)arg2 maxX:(float)arg3 zIndex:(int)arg4;
- (const set_80ec8016 *)wrapPoints;
- (void)addWrapPoint:(GQDWrapPoint *)arg1;
@end

@protocol GQZArchiveInputStream <NSObject>
- (long long)size;
- (void)readFromOffset:(long long)arg1 size:(unsigned long long)arg2 buffer:(char *)arg3;
- (const char *)dataAtOffset:(long long)arg1 size:(unsigned long long)arg2 end:(long long)arg3 readSize:(unsigned long long *)arg4;
@end

@protocol GQZEntryInputStream <NSObject>
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (void)readToOwnBuffer:(const char **)arg1 size:(unsigned long long *)arg2;
@end

@protocol KNActionEffectBuildAnimator <KNAnimationPlugin>
+ (NSDictionary *)applyActionEffect:(NSDictionary *)arg1 toAttributes:(NSDictionary *)arg2;
+ (NSSet *)actionEffectStyle;
- (NSDictionary *)animationsForTextureSet:(TSDTextureSet *)arg1 finalTextureSet:(TSDTextureSet *)arg2 duration:(double)arg3 attributes:(NSDictionary *)arg4 previousAttributes:(NSDictionary *)arg5;

@optional
+ (_Bool)isEmphasisBuildAnimation;
- (NSDictionary *)animationsForTextureSet:(TSDTextureSet *)arg1 context:(KNAnimationPluginContext *)arg2;
@end

@protocol KNAnimationOpenGLEffect <NSObject>
- (void)teardown;
- (void)renderEffectAtPercent:(double)arg1;
- (void)setupEffectIfNecessary;
@end

@protocol KNAnimationPlugin <NSObject>
+ (NSString *)thumbnailImageNameForType:(int)arg1;
+ (NSDictionary *)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(KNAnimationPluginMenu *)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (NSString *)localizedMenuString:(int)arg1;
+ (NSArray *)supportedTypes;
+ (NSString *)animationFilter;
+ (int)animationCategory;
+ (NSString *)animationName;
- (id)initWithAnimationContext:(KNAnimationContext *)arg1;

@optional
+ (int)rendererTypeForCapabilities:(TSDCapabilities *)arg1;
+ (NSArray *)customAttributes;
- (NSDictionary *)animationInfoForAnimatedBuild:(KNAnimatedBuild *)arg1;
- (void)animationDidEndWithContext:(id <KNAnimationPluginContext>)arg1;
- (void)animationWillBeginWithContext:(id <KNAnimationPluginContext>)arg1;
@end

@protocol KNAnimationPluginAnimationRendering <KNAnimationPlugin>
- (NSDictionary *)animationsWithContext:(id <KNAnimationPluginContext>)arg1;
@end

@protocol KNAnimationPluginArchiving <NSObject>
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(NSString *)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
@end

@protocol KNAnimationPluginContext <NSObject>
@property(readonly, nonatomic) _Bool isWarmingUp;
@property(readonly, nonatomic) TSDGLState *GLState;
@property(readonly, nonatomic) _Bool isPreview;
@property(readonly, nonatomic) _Bool isFrameRenderer;
@property(readonly, nonatomic) _Bool isMagicMove;
@property(readonly, nonatomic) _Bool isTransition;
@property(readonly, nonatomic) _Bool isBuild;
@property(readonly, nonatomic) NSArray *magicMoveMatches;
@property(readonly, nonatomic) NSDictionary *transitionAttributes;
@property(readonly, nonatomic) KNAnimatedBuild *animatedBuild;
@property(nonatomic) struct CGRect boundingRect;
@property(readonly, nonatomic) struct CGRect boundingRectOnCanvas;
@property(readonly, nonatomic) _Bool isMotionBlurred;
@property(readonly, nonatomic) double percent;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) unsigned long long direction;
@property(readonly, nonatomic) NSArray *textures;
@end

@protocol KNAnimationPluginDrift <NSObject>
+ (_Bool)isDriftAnimation;
@end

@protocol KNAnimationPluginFrameRendering <KNAnimationPlugin>
- (void)renderFrameWithContext:(id <KNAnimationPluginContext>)arg1;
@end

@protocol KNAnimationPluginMagicChart <NSObject>
+ (_Bool)isMagicChart;
@end

@protocol KNAnimationPluginObsoleteNames <NSObject>
+ (NSArray *)obsoleteAnimationNames;
@end

@protocol KNChunkableBuildAnimator <KNAnimationPluginAnimationRendering>

@optional
+ (_Bool)requiresSingleTexturePerStage;
+ (unsigned long long)maxChunkCountToAnimate;
@end

@protocol KNContentAwareFrameAnimator <KNAnimationPluginFrameRendering>
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
@end

@protocol KNContentAwareTransitionAnimator <KNAnimationPluginAnimationRendering>
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
@end

@protocol KNCustomFrameBuildAnimator <KNAnimationPluginFrameRendering>
- (TSDGLLayer *)GLLayer;
- (CALayer *)layerWithFrame:(struct CGRect)arg1 context:(id <KNAnimationPluginContext>)arg2;

@optional
+ (unsigned long long)maxChunkCountToAnimate;
- (double)animationFPS;
@end

@protocol KNFrameAnimator <KNAnimationPluginFrameRendering>
@end

@protocol KNFrameBuildAnimator <KNAnimationPluginFrameRendering>
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id <KNAnimationPluginContext>)arg2;

@optional
+ (_Bool)requiresSingleTexturePerStage;
+ (unsigned long long)maxChunkCountToAnimate;
@end

@protocol KNInspectableAnimation
@property(readonly, nonatomic) _Bool canEditAnimations;
@property(readonly, nonatomic) NSSet *inspectableAttributes;
@end

@protocol KNMagicMoveFrameAnimator <KNAnimationPluginFrameRendering>
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
@end

@protocol KNMagicMoveTransitionAnimator <KNAnimationPluginAnimationRendering>
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;

@optional
+ (_Bool)shouldDisableMagicMoveOnText;
+ (_Bool)supportsMorphTextures;
@end

@protocol KNModelVisitor <TSKModelVisitor>
- (void)visitKNSlideNumberPlaceholderInfo:(KNSlideNumberPlaceholderInfo *)arg1;
- (void)visitKNBodyPlaceholderInfo:(KNBodyPlaceholderInfo *)arg1;
- (void)visitKNTitlePlaceholderInfo:(KNTitlePlaceholderInfo *)arg1;
- (void)visitKNSlide:(KNSlide *)arg1;
@end

@protocol KNTransitionAnimator <KNAnimationPluginAnimationRendering>
@end

@protocol NSCacheDelegate <NSObject>

@optional
- (void)cache:(NSCache *)arg1 willEvictObject:(id)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDiscardableContent
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSFilePresenter <NSObject>
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;

@optional
@property(readonly, copy) NSURL *primaryPresentedItemURL;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didResolveConflictVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didLoseVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didGainVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemDidChangeAtURL:(NSURL *)arg1;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didMoveToURL:(NSURL *)arg2;
- (void)presentedSubitemDidAppearAtURL:(NSURL *)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidLoseVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidGainVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(NSURL *)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)relinquishPresentedItemToWriter:(void (^)(void (^)(void)))arg1;
- (void)relinquishPresentedItemToReader:(void (^)(void (^)(void)))arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol SFUBufferedInputStream <SFUInputStream>
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
@end

@protocol SFUInputBundle <NSObject>
- (void)copyEntry:(NSString *)arg1 toFile:(NSString *)arg2;
- (unsigned int)crc32ForEntry:(NSString *)arg1;
- (long long)lengthOfEntry:(NSString *)arg1;
- (SFUBufferedInputStream *)bufferedInputStreamForEntry:(NSString *)arg1;
- (id <SFUInputStream>)inputStreamForEntry:(NSString *)arg1;
- (_Bool)hasEntryWithName:(NSString *)arg1;
@end

@protocol SFUInputStream <NSObject>
- (id <SFUInputStream>)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
@end

@protocol SFUOutputStream <SFUSimpleOutputStream>
- (id <SFUOutputStream>)closeLocalStream;
- (void)close;
- (id <SFUInputStream>)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
@end

@protocol SFUSimpleOutputStream <NSObject>
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
@end

@protocol SFUZipArchiveDataRepresentation <NSObject>
- (id <SFUBufferedInputStream>)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id <SFUInputStream>)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
@end

@protocol TPArchivedLayoutStateProtocol
@end

@protocol TPAttachmentLayoutParent
- (void)addAttachmentLayout:(TSDLayout *)arg1;
- (TSDLayout *)existingAttachmentLayoutForInfo:(id <TSDInfo>)arg1;
@end

@protocol TPLayoutStateConsumer <NSObject>
- (_Bool)archivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1 setSectionHints:(NSArray *)arg2;
- (void)archivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1 setLastPageCount:(unsigned long long)arg2;
- (void)archivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1 setDocumentPageIndex:(unsigned long long)arg2;
- (void)archivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1 setSectionPageIndex:(unsigned long long)arg2;
- (void)archivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1 setSectionIndex:(unsigned long long)arg2;
@end

@protocol TPLayoutStateProvider <NSObject>
- (NSArray *)sectionHintsForArchivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1;
- (unsigned long long)lastPageCountForArchivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1;
- (unsigned long long)documentPageIndexForArchivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1;
- (unsigned long long)sectionPageIndexForArchivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1;
- (unsigned long long)sectionIndexForArchivedLayoutState:(id <TPArchivedLayoutStateProtocol>)arg1;
@end

@protocol TPMasterDrawableProvider <NSObject>
- (void)removeMasterDrawable:(TSDDrawableInfo *)arg1 suppressDOLC:(_Bool)arg2;
- (void)addMasterDrawables:(NSArray *)arg1 atIndex:(unsigned long long)arg2 insertContext:(TSKAddedToDocumentContext *)arg3 suppressDOLC:(_Bool)arg4;
- (void)addMasterDrawable:(TSDDrawableInfo *)arg1 atIndex:(unsigned long long)arg2 insertContext:(TSKAddedToDocumentContext *)arg3 suppressDOLC:(_Bool)arg4;
- (unsigned long long)indexOfMasterDrawable:(TSDDrawableInfo *)arg1;
- (NSArray *)masterDrawablesSortedByZOrder:(NSSet *)arg1;
- (NSArray *)masterDrawables;
- (unsigned long long)countOfMasterDrawables;
@end

@protocol TPPageControllerLayoutObserver <NSObject>

@optional
- (void)pageController:(TPPageController *)arg1 didInvalidateFromPageIndex:(unsigned long long)arg2 sectionIndex:(unsigned long long)arg3;
- (void)pageController:(TPPageController *)arg1 didLayoutPageAtIndex:(unsigned long long)arg2 sectionIndex:(unsigned long long)arg3 syncing:(_Bool)arg4;
- (void)pageController:(TPPageController *)arg1 willLayoutPageAtIndex:(unsigned long long)arg2 sectionIndex:(unsigned long long)arg3 syncing:(_Bool)arg4;
@end

@protocol TPPageGenerator <NSObject>
- (void)createOrUpdatePageHintInSectionHint:(TPSectionHint *)arg1 withState:(TPPageLayoutState *)arg2;
- (_Bool)wantsPageInSectionHint:(TPSectionHint *)arg1 withState:(TPPageLayoutState *)arg2;
@end

@protocol TPPageLayoutInfoProvider <NSObject>
- (_Bool)shouldHeaderFooterBeVisibleForPageIndex:(unsigned long long)arg1;
- (int)contentFlagsForPageIndex:(unsigned long long)arg1;
- (unsigned long long)pageCountForPageIndex:(unsigned long long)arg1;
- (unsigned long long)pageNumberForPageIndex:(unsigned long long)arg1;
- (id <TPMasterDrawableProvider>)masterDrawableProviderForPageIndex:(unsigned long long)arg1;
- (id <TSWPHeaderFooterProvider>)headerFooterProviderForPageIndex:(unsigned long long)arg1;
- (_Bool)canProvideNumberingInfoForPageIndex:(unsigned long long)arg1;
- (_Bool)canProvideInfoForPageIndex:(unsigned long long)arg1;
@end

@protocol TSADocumentRootDelegate <TSKAccessControllerDelegate>
@property(readonly, nonatomic) NSString *name;

@optional
@property(readonly, nonatomic) NSString *documentCachePath;
@property(readonly, nonatomic) NSString *defaultDraftName;
- (void)willRemoveICloudTeardownObserver:(id)arg1;
- (void)didAddObserverForICloudTeardown:(id)arg1;
- (void)continueActivityUsingBlock:(void (^)(void))arg1;
- (void)invalidateRestorableState;
@end

@protocol TSADocumentRootLocalizationDelegate <NSObject>
- (_Bool)shouldLocalizeDocumentForRTL;
@end

@protocol TSAImportDelegate <NSObject>

@optional
- (_Bool)areNewExternalReferencesToDataAllowedForImportController:(TSAImportController *)arg1;
- (void)importController:(TSAImportController *)arg1 documentDidMoveToURL:(NSURL *)arg2;
- (void)importControllerDidRunOutOfSpace:(TSAImportController *)arg1;
- (void)importControllerDidCancelImport:(TSAImportController *)arg1;
- (void)willSaveImportedDocument:(TSAImportController *)arg1;
@end

@protocol TSARenderingExporterDelegate
- (_Bool)supportsRenderingQuality;
- (_Bool)supportsPaging;
- (void)releaseCGContext:(struct CGContext *)arg1;
- (struct CGContext *)newCGContextForURL:(NSURL *)arg1;
- (double)viewScale;
- (void)teardown;
- (void)setup;

@optional
- (void)setMaxPixels:(double)arg1;
- (int)renderingQuality;
@end

@protocol TSCECalculationEngineRegistration <TSKModel>
- (TSPObject<TSCECalculationEngineRegistration> *)objectToArchiveInDependencyTracker;
- (_Bool)registerLast;
- (void)unregisterFromCalculationEngine:(TSCECalculationEngine *)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(TSCECalculationEngine *)arg1;
@end

@protocol TSCEFormulaOwning <NSObject>
- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(TSCECalculationEngine *)arg1;
- (void)retainForCalculationEngine:(TSCECalculationEngine *)arg1;
- (TSKCommand *)endRewriteForCalculationEngine:(TSCECalculationEngine *)arg1 spec:(TSCEFormulaRewriteSpec *)arg2;
- (void)beginRewriteForCalculationEngine:(TSCECalculationEngine *)arg1 spec:(TSCEFormulaRewriteSpec *)arg2;
- (void)rewriteForCalculationEngine:(TSCECalculationEngine *)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(TSCEFormulaRewriteSpec *)arg3;
- (void)invalidateForCalculationEngine:(TSCECalculationEngine *)arg1;
- (void)writeResultsForCalculationEngine:(TSCECalculationEngine *)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(TSCECalculationEngine *)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;
@end

@protocol TSCEReferenceResolving <NSObject>
- (struct __CFUUID *)resolverID;
@end

@protocol TSCEReferenceTrackerDelegate
- (TSKCommand *)commandForUpdatingWithSpec:(TSCEFormulaRewriteSpec *)arg1 formulas:(NSArray *)arg2;
- (void)trackedReferenceWasDeleted:(TSCETrackedReference *)arg1 fromOwnerID:(struct __CFUUID *)arg2;
- (NSArray *)cellRangeWasInserted:(CDStruct_5744d895)arg1;
- (_Bool)shouldRewriteOnTranspose;
- (_Bool)shouldRewriteOnCellMerge;
- (_Bool)shouldRewriteOnTectonicShift;
- (_Bool)shouldRewriteOnRangeMove;
- (_Bool)shouldRewriteOnSort;
- (void)referencedCellWasModified:(TSCETrackedReference *)arg1;

@optional
- (void)updateTrackedHeaders:(struct __CFUUID *)arg1;
@end

@protocol TSCEResolverContainer <NSObject>
- (unsigned int)nextUntitledResolverIndex;
- (_Bool)resolverNameIsUsed:(NSString *)arg1;
- (NSArray *)resolversMatchingPrefix:(NSString *)arg1;
- (id <TSCEReferenceResolving>)resolverMatchingName:(NSString *)arg1;
@end

@protocol TSCETableModeling <NSObject>
@end

@protocol TSCH3DAnimationInterpolatable
- (float)interpolate:(float)arg1 index:(const tvec2_3b141483 *)arg2;
@end

@protocol TSCH3DAxisLabelPositioner
- (_Bool)isHorizontal;
- (_Bool)hasOffset;
- (float)labelGapForCount:(unsigned long long)arg1;
- (tvec3_17f03ce0)positionForValue:(double)arg1 count:(unsigned long long)arg2 chartDirection:(const tvec3_17f03ce0 *)arg3;
- (unsigned int)alignmentForChartDirection:(const tvec3_17f03ce0 *)arg1;
@end

@protocol TSCH3DBarChartAppearance
- (_Bool)isCircular;
- (float)signedValueForSeries:(TSCHChartSeries *)arg1 index:(const tvec2_3b141483 *)arg2;
- (float)maxValueForSeries:(long long)arg1;
- (float)depthForScene:(TSCH3DScene *)arg1;
- (float)chartMinZForScene:(TSCH3DScene *)arg1;
@end

@protocol TSCH3DChartAllElementSceneObjectDelegate <NSObject, TSCH3DChartElementSceneObjectMainDelegate, TSCH3DChartElementSceneObjectSeriesDelegate, TSCH3DChartElementSceneObjectElementDelegate>
@end

@protocol TSCH3DChartAllSceneObjectDelegate <TSCH3DChartLabelsContainingSceneObjectDelegate, TSCH3DChartAllElementSceneObjectDelegate>
@end

@protocol TSCH3DChartAnimationPlugin
- (int)chartAnimationType;
@end

@protocol TSCH3DChartAnimationRendering
- (void)renderAnimationFrame:(float)arg1 drawingFrame:(struct CGRect)arg2 chunkStage:(long long)arg3;
- (CALayer *)animationLayerWithFrame:(struct CGRect)arg1 untransformedFrame:(struct CGRect)arg2 scale:(double)arg3 colorSpace:(struct CGColorSpace *)arg4 returningDrawingFrame:(struct CGRect *)arg5 TSDGLLayer:(id *)arg6;
- (void)setAnimationType:(int)arg1 chunkStage:(long long)arg2 buildType:(int)arg3 textureDeliveryStyle:(unsigned long long)arg4 attributes:(NSDictionary *)arg5;
- (void)animationDidEndForChunkStage:(long long)arg1;
- (void)animationWillBeginForChunkStage:(long long)arg1;
@end

@protocol TSCH3DChartElementSceneObjectElementDelegate
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2;
- (void)didProcessElements:(TSCH3DChartModelEnumerator *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2 pipeline:(TSCH3DSceneRenderPipeline *)arg3;
- (_Bool)willProcessElements:(TSCH3DChartModelEnumerator *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2 pipeline:(TSCH3DSceneRenderPipeline *)arg3;
@end

@protocol TSCH3DChartElementSceneObjectGeometryDelegate
- (_Bool)willSubmitGeometry:(TSCH3DGeometry *)arg1;
@end

@protocol TSCH3DChartElementSceneObjectMainDelegate
- (struct ElementRenderPass)renderPassForSceneObject:(TSCH3DChartElementSceneObject *)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(TSCH3DChartElementSceneObject *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
- (void)didEndProcessingSceneObject:(TSCH3DChartElementSceneObject *)arg1;
- (_Bool)willBeginProcessingSceneObject:(TSCH3DChartElementSceneObject *)arg1;
@end

@protocol TSCH3DChartElementSceneObjectSeriesDelegate
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(TSCH3DShaderEffects *)arg2 sceneObject:(TSCH3DChartElementSceneObject *)arg3 pipeline:(TSCH3DSceneRenderPipeline *)arg4;
- (_Bool)willProcessSeries:(TSCH3DChartModelEnumerator *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2 pipeline:(TSCH3DSceneRenderPipeline *)arg3;
@end

@protocol TSCH3DChartGeometryArrayCompilerDelegate <NSObject>
- (void)didCompileScene:(TSCH3DScene *)arg1 compiler:(TSCH3DChartGeometryArrayCompiler *)arg2;
- (void)didProcessElementArraysForElements:(TSCH3DChartModelEnumerator *)arg1 sceneObject:(TSCH3DChartElementSceneObject *)arg2 pipeline:(TSCH3DSceneRenderPipeline *)arg3 compiler:(TSCH3DChartGeometryArrayCompiler *)arg4;
- (void)addElementArrays:(TSCH3DGeometryElementArrays *)arg1 compiler:(TSCH3DChartGeometryArrayCompiler *)arg2;
- (_Bool)compileEntireBuffer;
- (_Bool)transformBuffers;
@end

@protocol TSCH3DChartLabelsContainingSceneObjectDelegate <TSCH3DSceneObjectDelegate>
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg5;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg4;
- (void)labelsResourcesSessionWillEndForSceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(TSCH3DChartLabelsContainingSceneObject *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
@end

@protocol TSCH3DFillData
- (Color_1703f521)emissive;
- (Color_1703f521)specular;
- (Color_1703f521)diffuse;
- (float)shininess;
- (float)opacity;
@end

@protocol TSCH3DFramebufferAccumulator
- (void)reset;
- (void)setTexcoords:(TSCH3DResource *)arg1;
- (void)setVertices:(TSCH3DResource *)arg1;
@end

@protocol TSCH3DFramebufferResolver
- (void)setTexcoords:(TSCH3DResource *)arg1;
@end

@protocol TSCH3DGLBindable <NSObject>
- (void)deactivateInContext:(TSCH3DGLContext *)arg1;
- (void)destroyResourcesInContext:(TSCH3DGLContext *)arg1;
- (_Bool)valid;
- (void)bindInSession:(TSCH3DSession *)arg1;
@end

@protocol TSCH3DGLLayer
- (Class)layerDelegateClass;
- (void)setContentsScale:(double)arg1;
- (double)contentsScale;
- (TSCH3DLayerCacheLogic *)cacheLogic;
- (void)presentLayerWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)willDestroyFramebuffer:(TSCH3DGLFramebuffer *)arg1 session:(TSCH3DSession *)arg2;
- (TSCH3DGLFramebuffer *)framebufferFromContext:(TSCH3DGLContext *)arg1 attributes:(const struct FramebufferAttributes *)arg2;
- (id)initWithLayerCacheLogicClass:(Class)arg1;

@optional
- (void)setCGColorSpace:(struct CGColorSpace *)arg1;
@end

@protocol TSCH3DGLLayerProvider
- (CALayer<TSCH3DGLLayer> *)GLLayerWithFrame:(struct CGRect)arg1;
- (CALayer<TSCH3DGLLayer> *)GLLayer;
@end

@protocol TSCH3DGLResolveFramebuffer
- (tvec2_3b141483)resolveFramebufferSize;
- (struct FramebufferAttributes)resolveFramebufferAttributes;
- (TSCH3DGLHandle *)resolveFramebufferHandleForSession:(TSCH3DSession *)arg1;
- (_Bool)resolveFramebufferValidForSession:(TSCH3DSession *)arg1;
- (TSCH3DGLContext *)resolveFramebufferContext;
- (_Bool)activateResolveFramebufferInsideSession:(TSCH3DSession *)arg1;
@end

@protocol TSCH3DLayerCacheLogicProtocol
- (_Bool)isClippedAreaVisibleInRect:(struct CGRect)arg1;
- (_Bool)isClipped;
- (void)setDrawingBounds:(struct CGRect)arg1;
- (void)setContentsIsValid:(_Bool)arg1 highQuality:(_Bool)arg2;
- (void)setContentsIsValid:(_Bool)arg1;
- (_Bool)contentsIsHighQuality;
- (_Bool)contentsIsValid;
@end

@protocol TSCH3DLightDirectional
- (tvec3_17f03ce0)direction;
@end

@protocol TSCH3DLightPositionable
- (tvec3_17f03ce0)position;
@end

@protocol TSCH3DLightingPackageData
- (float)dropOffRateAtIndex:(unsigned long long)arg1;
- (float)cutOffAngleAtIndex:(unsigned long long)arg1;
- (struct Vector3)directionAtIndex:(unsigned long long)arg1;
- (struct Vector3)positionAtIndex:(unsigned long long)arg1;
- (struct Vector3)attenuationAtIndex:(unsigned long long)arg1;
- (_Bool)enabledAtIndex:(unsigned long long)arg1;
- (int)coordinateSpaceAtIndex:(unsigned long long)arg1;
- (float)intensityAtIndex:(unsigned long long)arg1;
- (Color_1703f521)specularColorAtIndex:(unsigned long long)arg1;
- (Color_1703f521)diffuseColorAtIndex:(unsigned long long)arg1;
- (Color_1703f521)ambientColorAtIndex:(unsigned long long)arg1;
- (int)typeAtIndex:(unsigned long long)arg1;
- (NSString *)nameAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (NSString *)packageName;
@end

@protocol TSCH3DMultipassRenderPipeline
- (void)releaseResources;
- (void)resetMultipassRendering;
- (_Bool)multipassRenderingIsDone;
- (_Bool)updatesTargetFramebuffer;
- (void)skipLowQualityPass;
@end

@protocol TSCH3DOptimizedTextureResource
- (TSCH3DDataBuffer *)databufferForDataCache:(TSCH3DDocumentDataCache *)arg1;
- (TSCH3DDataBuffer *)optimizedMipmapBuffer;
- (_Bool)canLoadCachedFullMipmapBufferForDataCache:(TSCH3DDocumentDataCache *)arg1;
@end

@protocol TSCH3DPipelineLinkable <NSObject>
- (TSCH3DGLFramebuffer *)output;
@end

@protocol TSCH3DProtectResourceDelegate
- (void)unprotectResource:(TSCH3DResource *)arg1;
- (void)protectResource:(TSCH3DResource *)arg1;
@end

@protocol TSCH3DRenderBufferAllocator <NSObject>
@property(readonly, nonatomic) _Bool isTexturable;
- (id)depthbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
- (id)colorbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
@end

@protocol TSCH3DSageFillData <TSCH3DFillData>
- (TSCH3DFillSetIdentifier *)fillSetIdentifier;
- (TSCH3DTexture *)textureForIndex:(unsigned long long)arg1;
- (NSNumber *)layerLightenPercentageForIndex:(unsigned long long)arg1;
- (int)layerTilingModeForIndex:(unsigned long long)arg1;
- (long long)layerBlendModeForIndex:(unsigned long long)arg1;
- (_Bool)layerIsEnvironmentMapForIndex:(unsigned long long)arg1;
- (float)layerRotationForIndex:(unsigned long long)arg1;
- (float)layerScaleForIndex:(unsigned long long)arg1;
- (_Bool)isLayerEnabledForIndex:(unsigned long long)arg1;
- (unsigned long long)layerCount;
@end

@protocol TSCH3DSageLightingPackageData <TSCH3DLightingPackageData>
@end

@protocol TSCH3DSceneDelegate
- (void)didRunForScene:(TSCH3DScene *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
- (void)willRunForScene:(TSCH3DScene *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
@end

@protocol TSCH3DSceneObjectDelegate
- (void)didSubmitSceneObject:(TSCH3DSceneObject *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
- (_Bool)willSubmitSceneObject:(TSCH3DSceneObject *)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2;
- (void)didGenerateShaderEffects:(TSCH3DShaderEffects *)arg1 sceneObject:(TSCH3DSceneObject *)arg2 pipeline:(TSCH3DSceneRenderPipeline *)arg3;
@end

@protocol TSCH3DSceneObjectDelegator
- (id)makeDelegateWithSceneObject:(TSCH3DSceneObject *)arg1 scene:(TSCH3DScene *)arg2;
- (id)makeDelegateWithScene:(TSCH3DScene *)arg1;
@end

@protocol TSCH3DShaderDataUploader
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec4s:(const vector_50d79d4a *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec3s:(const vector_e600bae4 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec2s:(const vector_56a3751a *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec1s:(const vector_319661ea *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec4s:(const vector_b7abfae3 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec3s:(const vector_45b393db *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec2s:(const vector_35283da1 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec1s:(const vector_7cfb452c *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec4:(const tvec4_f99fd489 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec3:(const tvec3_c2818ced *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec2:(const tvec2_3b141483 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 ivec1:(const tvec1_dad7e00b *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec4:(const tvec4_ac57c72d *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec3:(const tvec3_17f03ce0 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec2:(const tvec2_84d5962d *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 vec1:(const tvec1_1f665138 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 mat4:(const tmat4x4_3074befe *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 mat3:(const tmat3x3_b39cd897 *)arg2;
- (void)uniform:(TSCH3DShaderVariable *)arg1 mat2:(const tmat2x2_6cc53533 *)arg2;
@end

@protocol TSCH3DShaderEffectStateInfo
- (id)stateSharingID;
- (Class)stateClass;
@end

@protocol TSCH3DShaderStateUpdater
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(NSString *)arg1 resource:(TSCH3DResource *)arg2 specs:(const struct AttributeSpecs *)arg3;
@end

@protocol TSCH3DShaderStatement <NSObject>
- (void)setGeneratedForType:(struct TSCH3DShaderType)arg1;
- (NSString *)string;
- (struct TSCH3DShaderType)linkageType;
- (_Bool)isLinked;
- (NSArray *)resolve;
@end

@protocol TSCH3DShadowsRenderer
- (TSCH3DGLFramebuffer *)shadowsFBOForContext:(TSCH3DGLContext *)arg1;
- (float)blurSlackForQuality:(float)arg1;
- (void)invalidate;
- (void)unprotectShadowInSession:(TSCH3DSession *)arg1;
- (void)protectShadowForQuality:(float)arg1 pipeline:(TSCH3DSceneRenderPipeline *)arg2 renderBlock:(void (^)(TSCH3DGLFramebuffer *))arg3;
@end

@protocol TSCH3DSharegroupDelayCheckerParent
- (void)willCheckCondition;
@end

@protocol TSCH3DSharegroupDelegate
- (void)didFlushCache;
@end

@protocol TSCH3DStringIndexableResource
- (void)setString:(NSString *)arg1;
@end

@protocol TSCH3DValueIndexableResource
- (void)setValue:(double)arg1;
@end

@protocol TSCHChartGridValue <NSObject, NSCopying>
@property(readonly, nonatomic) int chartGridValueType;
- (double)doubleValue;
@end

@protocol TSCHChartMultiDataRendering
- (void)animationDidEndForChunkStage:(long long)arg1;
- (NSDictionary *)createAnimatedLayersDictionaryWithScale:(double)arg1 forBuildStage:(unsigned long long)arg2 buildIn:(_Bool)arg3 duration:(double)arg4 returningAnimatedLayers:(id *)arg5;
@end

@protocol TSCHChartRepPlatformProtocols <UITextFieldDelegate>
@end

@protocol TSCHCompositeRendering <NSObject>
- (_Bool)needsAnySeparateLayers;
- (void)drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
- (NSArray *)transparencyLayers;

@optional
- (void)didEndTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)willEndTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)didBeginTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)willBeginTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol TSCHCustomFormatPasteSupport
- (void)updateAfterPasteForDocumentRoot:(TSKDocumentRoot *)arg1 pasteboardCustomFormatList:(id <TSUCustomFormatList>)arg2;
@end

@protocol TSCHCustomFormatSupport
- (unsigned int)customFormatListKey;
- (_Bool)isCustom;
@end

@protocol TSCHDataFormatter <NSObject>
- (id)convertToSupportedClientFormatObject;
- (id <TSCHDataFormatterPersistableStyleObject>)convertToPersistableStyleObject;
- (_Bool)isCompatibleWithDataFormatter:(id <TSCHDataFormatter>)arg1;
- (NSString *)chartFormattedInspectorStringForValue:(id <TSCHChartGridValue>)arg1;
- (NSString *)chartFormattedStringForValue:(id <TSCHChartGridValue>)arg1;
@end

@protocol TSCHDataFormatterPersistableStyleObject
- (int)formatType;
@end

@protocol TSCHMediatorProvider <NSObject>
- (TSCHChartMediator *)mediator;
@end

@protocol TSCHMultiDataAnimatingFrameLayerProtocol
@property(nonatomic) struct CGPoint presentationPosition;
@property(nonatomic) struct CGRect presentationBounds;
- (struct CGRect)currentFrame;
@end

@protocol TSCHMultiDataAnimatingPathLayerProtocol
@property(nonatomic) struct CGPath *presentationPath;
@end

@protocol TSCHMultiDataElementShapeLayer
- (void)updateElementFrameToNullForSeries:(TSCHChartSeries *)arg1 addingAnimationsToAnimationInfo:(TSCHMultiDataLayerAnimationInfo *)arg2;
- (CALayer *)currentValueLayer;
- (_Bool)aboveIntercept;
- (void)updateElementFrame:(struct CGRect)arg1 forSeries:(TSCHChartSeries *)arg2 addingAnimationsToAnimationInfo:(TSCHMultiDataLayerAnimationInfo *)arg3;
- (void)setFill:(TSDFill *)arg1 stroke:(TSDStroke *)arg2 withViewScale:(double)arg3;
@end

@protocol TSCHNotifyOnModify
- (void)willModify;
@end

@protocol TSCHStyleActAlike <NSObject, TSDMixing>
- (id)boxedDefaultValueForProperty:(int)arg1;
- (float)defaultFloatValueForProperty:(int)arg1;
- (int)defaultIntValueForProperty:(int)arg1;
- (id)defaultValueForProperty:(int)arg1;
- (TSSPropertySet *)properties;
- (id)boxedValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)valueForProperty:(int)arg1;
- (_Bool)overridesProperty:(int)arg1;
- (_Bool)definesProperty:(int)arg1;
@end

@protocol TSCHStyleOwning <NSObject, TSCHStyleVending>
- (NSArray *)defaultProperties;
- (NSArray *)swapTuplesForParagraphStyleMutations:(NSDictionary *)arg1 forReferencingProperty:(int)arg2;
- (NSArray *)swapTuplesForMutationsForImport:(NSDictionary *)arg1;
- (NSArray *)swapTuplesForMutations:(NSDictionary *)arg1;
- (TSSStyle *)nonstyle;
- (TSSStyle *)style;
- (TSPObjectContext *)context;
- (TSCHChartModel *)model;
- (TSCHChartInfo *)chartInfo;
- (id)valueForProperty:(int)arg1;
- (_Bool)hasObjectValueForProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasFloatValueForProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasIntValueForProperty:(int)arg1 value:(int *)arg2;
- (int)defaultPropertyForGeneric:(int)arg1;
- (int)specificPropertyForGeneric:(int)arg1;

@optional
- (void)propertiesWereMutated:(TSSPropertySet *)arg1;
@end

@protocol TSCHStyleSwapSupporting <NSObject>
- (id <TSCHStyleOwning>)styleOwnerFromSwapType:(int)arg1 andIndex:(unsigned long long)arg2;
- (TSCHStyleSwapUndoTuple *)applyStyleSwapTuple:(TSCHStyleSwapUndoTuple *)arg1;
@end

@protocol TSCHStyleVending <NSObject>
- (id)objectValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
@end

@protocol TSCHSupportsRendering <NSObject>
- (void)drawInContext:(struct CGContext *)arg1;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (void)didDrawInLayer:(CALayer *)arg1 context:(struct CGContext *)arg2;
- (void)setupForDrawingInLayer:(CALayer *)arg1 context:(struct CGContext *)arg2;
- (_Bool)requireSeparateLabelLayer;
- (_Bool)renderElementsShadowOnly;
- (_Bool)renderElementsWithoutShadows;
- (_Bool)shouldShowLegendHighlight;
- (_Bool)renderLabels;
- (_Bool)renderElements;
- (_Bool)renderTrendLinesForSeriesIndex:(unsigned long long)arg1;
- (NSIndexSet *)renderValueIndexSetForSeries:(unsigned long long)arg1;
- (NSIndexSet *)renderSeriesIndexSet;
- (_Bool)isDrawingIntoPDF;
- (_Bool)forceRenderBlankBackground;
- (TSKCommandController *)commandController;
- (double)viewScale;
- (struct CGRect)outerShadowFrame;
- (TSDLayoutGeometry *)geometry;
- (_Bool)shadowsEnabled;
- (TSCHChartLayout *)chartLayout;
@end

@protocol TSCHSupportsTextEditing <NSObject>
- (double)frameHeightChangeForPath:(TSCHSelectionPath *)arg1;
- (void)useEditedString:(NSString *)arg1;
- (TSCHTextEditing *)textEditorForSelectionPath:(TSCHSelectionPath *)arg1 chartEditor:(TSCHChartEditor *)arg2;
- (struct CGRect)frameForEditingTextForSelectionPath:(TSCHSelectionPath *)arg1;
- (_Bool)canEditTextForSelectionPath:(TSCHSelectionPath *)arg1;
@end

@protocol TSCHUnretainedParent
- (void)clearParent;
@end

@protocol TSDAdaptiveLayout
- (struct CGPoint)applyAdaptiveLayoutTo:(TSDLayout *)arg1 info:(NSObject<TSDInfo> *)arg2 offset:(struct CGPoint)arg3;
- (void)endDynamicAdaptiveLayout;
- (void)beginDynamicAdaptiveLayout;
@end

@protocol TSDAnimationSession <NSObject>
@property(nonatomic) _Bool shouldUseSourceImage;
@property(nonatomic) _Bool shouldDrawTexturesAsynchronously;
- (double)showScale;
- (_Bool)isOffscreenPlayback;
@end

@protocol TSDAnnotationHosting <NSObject, TSKAnnotation>
@property(nonatomic) id <TSKModel> hostingModel;
@property(readonly, nonatomic) NSDate *date;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
- (void)commitText:(NSString *)arg1;
- (_Bool)isEqual:(id)arg1;

@optional
@property(copy, nonatomic) TSDCommentStorage *storage;
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
- (_Bool)wantsAnnotationPopover;
- (TSKCommand *)commandForDeletingComment;
@end

@protocol TSDArchivedHint <NSObject>
@property(retain, nonatomic) id <TSDHint> hint;
- (id)initWithContext:(TSPObjectContext *)arg1 hint:(id <TSDHint>)arg2;
@end

@protocol TSDAttachmentPositioner
- (TSKCommand *)commandForPositioningLayout:(TSDLayout *)arg1 withNewPosition:(struct CGPoint)arg2 interactiveCanvasController:(TSDInteractiveCanvasController *)arg3 pointIsAlignmentFrameOrigin:(_Bool)arg4;
@end

@protocol TSDAudioHUDControllerDelegate <NSObject>
- (void)setupPlayerControllerForAudioHUDController:(id <TSDAudioHUDController>)arg1;
@end

@protocol TSDBackgroundLayoutAndRenderStateDelegate <NSObject>
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(TSDBackgroundLayoutAndRenderState *)arg1;
- (void)backgroundLayoutAndRenderState:(TSDBackgroundLayoutAndRenderState *)arg1 performWorkInBackgroundTilingOnly:(_Bool)arg2;
@end

@protocol TSDCanvasDelegate <NSObject>
- (TSKDocumentRoot *)documentRoot;

@optional
- (_Bool)supportsAdaptiveLayout;
- (_Bool)isCanvasDrawingIntoPDF:(TSDCanvas *)arg1;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
- (_Bool)isPrintingCanvas;
- (_Bool)isCanvasInteractive;
- (void)canvas:(TSDCanvas *)arg1 createdRep:(TSDRep *)arg2;
- (NSSet *)infosToHideForCanvas:(TSDCanvas *)arg1;
- (NSSet *)additionalVisibleInfosForCanvas:(TSDCanvas *)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(TSDCanvas *)arg1;
- (void)canvasDidUpdateRepsFromLayouts:(TSDCanvas *)arg1;
- (void)canvasWillUpdateRepsFromLayouts:(TSDCanvas *)arg1;
- (void)canvasDidUpdateVisibleBounds:(TSDCanvas *)arg1;
- (void)canvasDidValidateLayoutsWithDependencies:(TSDCanvas *)arg1;
- (void)canvasDidLayout:(TSDCanvas *)arg1;
- (void)canvasDidValidateLayouts:(TSDCanvas *)arg1;
- (void)canvasWillLayout:(TSDCanvas *)arg1;
- (void)canvasLayoutInvalidated:(TSDCanvas *)arg1;
@end

@protocol TSDCanvasSelection <NSObject>
+ (TSKSelection<TSDCanvasSelection> *)emptySelection;
@property(readonly, nonatomic) unsigned long long unlockedInfoCount;
@property(readonly, nonatomic) NSSet *unlockedInfos;
@property(readonly, nonatomic) TSDDrawableInfo<TSDContainerInfo> *container;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long infoCount;
@property(readonly, nonatomic) NSSet *infos;
- (id)copyExcludingInfo:(NSObject<TSDInfo> *)arg1;
- (id)copyIncludingInfo:(NSObject<TSDInfo> *)arg1;
- (NSSet *)infosOfClass:(Class)arg1;
- (_Bool)containsUnlockedKindOfClass:(Class)arg1;
- (_Bool)containsKindOfClass:(Class)arg1;
@end

@protocol TSDChangePropagationMap <NSObject>
- (id <TSDPrototypeChange>)prototypeChangeForPrototype:(id)arg1;
@end

@protocol TSDChangeableInfo <TSDInfo>
@property(readonly, nonatomic) _Bool isUserModifiable;
- (TSSPropertySetChangeDetails *)endCollectingChanges;
- (void)willChangeProperty:(int)arg1;
- (void)beginCollectingChanges;

@optional
@property(readonly, nonatomic) Class editorClass;
- (void)willChangeProperties:(TSSPropertySet *)arg1;
@end

@protocol TSDCommentStorageDelegate <NSObject>
- (void)commentStorageTextDidChange:(TSDCommentStorage *)arg1;
@end

@protocol TSDConnectedInfoReplacing <TSDCanvasDelegate>
- (NSObject<TSDInfo> *)infoToConnectToForConnectionLineConnectedToInfo:(NSObject<TSDInfo> *)arg1;
@end

@protocol TSDContainerInfo <TSDInfo>
- (NSArray *)childInfos;
@end

@protocol TSDContainerRep <NSObject>
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (void)selectChildRep:(TSDRep *)arg1;
- (_Bool)canSelectChildRep:(TSDRep *)arg1;
- (void)addAdditionalChildLayersToArray:(NSMutableArray *)arg1;
- (NSArray *)childReps;

@optional
- (NSArray *)childRepsForHitTesting;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(TSDRep *)arg1;
@end

@protocol TSDDecorator <NSObject>
- (NSArray *)decoratorOverlayLayers;

@optional
- (void)didEndZoomingOperation;
- (void)willBeginZoomingOperation;
- (void)didEndScrollingOperation;
- (void)willBeginScrollingOperation;
- (void)didEndDynamicOperation;
- (void)willBeginDynamicOperation;
- (void)screenScaleDidChange;
@end

@protocol TSDDrawableContainerInfo <TSDMutableContainerInfo>
@end

@protocol TSDEditor <NSObject>
- (TSKDocumentRoot *)documentRoot;

@optional
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(retain, nonatomic) TSKSelection *selection;
- (NSString *)inspectorTabTipKey;
- (struct CGRect)coachingTipManager:(APDCoachingTipsManager *)arg1 coachingTipView:(APDCoachingTipView *)arg2 canvasRectForKey:(NSString *)arg3;
- (NSSet *)canvasCoachingTips;
- (void)addContextualMenuItemsToArray:(NSMutableArray *)arg1;
- (struct CGRect)targetRectForEditMenu;
- (id <TSDTextInput>)editorForTextInput;
- (void)reverseTableDirection:(id)arg1;
- (void)reverseDirection:(id)arg1;
- (_Bool)canBeginEditingRepOnDoubleTap:(TSDRep *)arg1;
- (_Bool)canBeginPathEditing;
- (_Bool)canAddOrShowComment;
- (_Bool)suppressAutozoom;
- (struct CGRect)zoomRectForSelection:(TSKSelection *)arg1;
- (double)targetPointSizeForSelectionWithViewScale:(double)arg1;
- (double)viewScaleForSelectionWithTargetPointSize:(double)arg1;
- (UIViewController *)wrapInspectorController;
- (NSArray *)extraMenuItems;
- (void)delete:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)shouldProhibitAction:(SEL)arg1;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (NSArray *)level2InspectorViewControllers;
- (struct CGSize)topLevelInspectorPreferredPopoverSize;
- (NSString *)topLevelInspectorAutosaveName;
- (NSArray *)topLevelInspectorViewControllers;
- (id <TSKSearchReference>)editingSearchReference;
- (_Bool)wantsToBePushedBackOntoStackForSelection:(TSKSelection<TSDCanvasSelection> *)arg1;
- (_Bool)shouldEndEditingToBeginEditingRep:(TSDRep *)arg1;
- (void)didResignTextInputEditor;
- (void)willResignTextInputEditor;
- (void)didBecomeTextInputEditor;
- (void)willResignCurrentEditor;
- (void)didBecomeCurrentEditor;
- (_Bool)readyToAcceptSelection:(TSKSelection *)arg1 onInfo:(NSObject<TSDInfo> *)arg2;
- (_Bool)ignoreSetSelection:(TSKSelection *)arg1 onInfo:(NSObject<TSDInfo> *)arg2;
- (void)setSelectionWithSearchReference:(id <TSKSearchReference>)arg1;
- (void)setSelection:(TSKSelection *)arg1 withFlags:(unsigned long long)arg2;
- (id <TSKModel>)model;
@end

@protocol TSDErrorPresenter <NSObject>
- (void)presentErrors:(NSArray *)arg1 withLocalizedDescription:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)presentError:(NSError *)arg1 completionHandler:(void (^)(_Bool))arg2;
@end

@protocol TSDGLDataBufferAccessor <NSObject>
- (void)setGLPoint4D:(CDStruct_818bb265)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_818bb265)GLPoint4DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_b2fbf00d)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_b2fbf00d)GLPoint2DForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(TSDGLDataBufferAttribute *)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(TSDGLDataBufferAttribute *)arg1 atIndex:(unsigned long long)arg2;
@end

@protocol TSDGLLayerContext <NSObject>
- (void)presentRenderbuffer;
- (_Bool)makeCurrentContext;
- (void)teardown;
- (_Bool)createFramebufferFromLayer:(TSDGLLayer *)arg1;
- (_Bool)isValid;

@optional
- (void)unlock;
- (void)lock;
@end

@protocol TSDGradientStopContainer <NSObject, NSMutableCopying>
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
@property(retain, nonatomic) NSArray *gradientStops;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(TSUColor *)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (TSDGradientStop *)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(TSDGradientStop *)arg1;
- (TSDGradientStop *)insertStopAtFraction:(double)arg1 withColor:(TSUColor *)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (TSDGradientStop *)insertStopAtFraction:(double)arg1;
- (void)insertGradientStop:(TSDGradientStop *)arg1;
@end

@protocol TSDHint <NSObject>
+ (Class)archivedHintClass;
- (id <TSDHint>)copyForArchiving;
- (id <TSDHint>)lastChildHint;
- (id <TSDHint>)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(TSKSelection *)arg1;

@optional
- (struct CGSize)effectiveSize;
- (struct CGSize)maximumSize;
- (_Bool)isFirstHint;
@end

@protocol TSDInfo <NSObject, TSKModel, TSPCopying, TSDInfoUsingObjectPlaceholderGeometry>
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
- (void)clearBackPointerToParentInfoIfNeeded:(NSObject<TSDContainerInfo> *)arg1;

@optional
- (id <TSDInfoUUIDPathPrefixComponentsProvider>)uuidPathPrefixComponentsProvider;
@end

@protocol TSDInfoUUIDPathPrefixComponentsProvider
- (NSArray *)uuidPathPrefixComponentsForInfo:(TSPObject<TSDInfo> *)arg1;
@end

@protocol TSDInfoUsingObjectPlaceholderGeometry

@optional
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@end

@protocol TSDLayoutManipulatingTracker
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(NSSet *)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(NSSet *)arg1;
- (void)changeDynamicLayoutsForReps:(NSSet *)arg1;

@optional
- (TSDCommandSelectionBehavior *)selectionBehaviorForReps:(NSSet *)arg1;
- (_Bool)suppressesSpacingGuides;
- (_Bool)suppressesCenterGuides;
- (NSSet *)repsForGuidesWhenManipulatingReps:(NSSet *)arg1;
- (void)didEndDynamicOperationForReps:(NSSet *)arg1;
- (void)didChangeCurrentlyTransformingReps;
- (void)willBeginDynamicOperationForReps:(NSSet *)arg1;
@end

@protocol TSDMagicMoveMatching

@optional
+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(TSDRep *)arg1 incomingObject:(TSDRep *)arg2;
+ (NSArray *)magicMoveMatchesBetweenOutgoingObjects:(NSArray *)arg1 andIncomingObjects:(NSArray *)arg2 textureContext:(TSDTextureContext *)arg3;
@end

@protocol TSDMasterDrawableDelegate <NSObject>
- (_Bool)childRepIsMasterDrawable:(TSDRep *)arg1;
- (_Bool)childRepIsOnDocSetupCanvas:(TSDRep *)arg1;
@end

@protocol TSDMatchingAlgorithmMatch
@property(readonly, nonatomic) id outgoingMatchObject;
@property(readonly, nonatomic) id incomingMatchObject;
@property(readonly, nonatomic) long long matchCost;
- (_Bool)conflictsWithMatch:(id <TSDMatchingAlgorithmMatch>)arg1;
- (long long)compareToMatch:(id <TSDMatchingAlgorithmMatch>)arg1;
@end

@protocol TSDMixing
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;

@optional
+ (NSArray *)mixableObjectClasses;
+ (_Bool)canMixWithNilObjects;
- (id)mixedBaseObjectWithObject:(id)arg1;
@end

@protocol TSDMutableContainerInfo <TSDContainerInfo>
- (void)replaceChildInfo:(NSObject<TSDInfo> *)arg1 with:(NSObject<TSDInfo> *)arg2;
- (void)removeChildInfo:(NSObject<TSDInfo> *)arg1;
- (void)moveChildren:(NSArray *)arg1 toIndexes:(NSIndexSet *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 above:(NSObject<TSDInfo> *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 below:(NSObject<TSDInfo> *)arg2;
- (void)insertChildInfo:(NSObject<TSDInfo> *)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(NSObject<TSDInfo> *)arg1;
- (void)setChildInfos:(NSArray *)arg1;
@end

@protocol TSDMutableContainerRep <TSDContainerRep>
@property(readonly, nonatomic) NSObject<TSDMutableContainerInfo> *mutableContainerInfo;
- (void)replaceChildRep:(TSDRep *)arg1 with:(TSDRep *)arg2;
- (void)removeChildRep:(TSDRep *)arg1;
- (void)insertChildRep:(TSDRep *)arg1 above:(TSDRep *)arg2;
- (void)insertChildRep:(TSDRep *)arg1 below:(TSDRep *)arg2;
- (void)insertChildRep:(TSDRep *)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildRep:(TSDRep *)arg1;
- (void)setChildReps:(NSArray *)arg1;
@end

@protocol TSDOwningAttachment <NSObject>
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
@property(readonly, nonatomic) _Bool specifiesEnabledKnobMask;
@property(readonly, nonatomic) _Bool isSearchable;
@property(readonly, nonatomic) Class positionerClass;
@property(readonly, nonatomic) _Bool isAttachedToBodyText;
@property(readonly, nonatomic) _Bool isPartitioned;
@property(readonly, nonatomic) _Bool isAnchored;
@property(readonly, nonatomic) _Bool isDrawable;
- (void)infoChanged;
@end

@protocol TSDPartitioner
- (id <TSDHint>)hintForLayout:(TSDLayout *)arg1;
- (_Bool)didHint:(id <TSDHint>)arg1 syncWithNextHint:(id <TSDHint>)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (TSDLayout *)layoutForHint:(id <TSDHint>)arg1 parentLayout:(TSDLayout *)arg2;
- (id <TSDHint>)nextHintForSize:(struct CGSize)arg1 parentLayout:(TSDLayout *)arg2 previousHint:(id <TSDHint>)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (TSDLayout *)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(TSDLayout *)arg2 previousHint:(id <TSDHint>)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
@end

@protocol TSDPartitioningInteractiveCanvasController
@property(nonatomic) _Bool shouldUseCachedPartitionRendering;
@end

@protocol TSDPathPainter <NSObject>
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

@optional
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 forImage:(struct CGImage *)arg3 swatchRect:(struct CGRect)arg4 wantsStroke:(_Bool)arg5;
@end

@protocol TSDPropagatableCommand <NSObject>
- (void)populateChangePropagationMapAfterCommit:(TSDChangePropagationMap *)arg1;
- (_Bool)modifiesAnyObjectPassingTest:(_Bool (^)(id))arg1;

@optional
- (void)populateChangePropagationMapBeforeCommit:(TSDChangePropagationMap *)arg1;
- (_Bool)shouldBePropagated;
@end

@protocol TSDPrototypeChange <NSObject>
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
@property(readonly, retain) id prototype;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly) _Bool prototypeIsBeingReplaced;
- (_Bool)propertiesAreChanging:(TSSPropertySet *)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@end

@protocol TSDRealignablePathSource
- (void)adjustGeometryForAlignToOrigin:(TSDMutableInfoGeometry *)arg1;
- (void)alignToOrigin;
- (struct CGPath *)pathWithoutFlips;
@end

@protocol TSDReducableInfo
- (TSKCommand *)commandToReplaceImageData:(TSPData *)arg1 withReducedImageData:(TSPData *)arg2 associatedHint:(id <NSObject>)arg3;
- (struct CGSize)targetSizeForImageData:(TSPData *)arg1 associatedHint:(id <NSObject>)arg2;
- (TSUNoCopyDictionary *)imageDatasForReducingFileSizeWithAssociatedHints;
@end

@protocol TSDRepDragTracker
- (_Bool)allowsDelegateToDisplayUIForDragOperation;
- (_Bool)alreadyInCommandGroup;
- (TSDRep *)rep;
@end

@protocol TSDRepTracker
@property(nonatomic) _Bool isInspectorDrivenTracking;
@end

@protocol TSDRepTrackerDelegateCreation

@optional
- (id <TSDRepTrackerDelegate>)repTrackerDelegate;
- (id <TSDRepDragTrackerDelegate>)repDragTrackerDelegateForRep:(TSDRep *)arg1;
@end

@protocol TSDSelectionStatisticsContributor <TSDInfo>
- (void)processSelectedStoragesWithStatisticsController:(NSObject<TSDSelectionStatisticsCalculator> *)arg1;
@end

@protocol TSDShapeControlLayout
@property(readonly, nonatomic) TSDPathSource<TSDSmartPathSource> *smartPathSource;
- (struct CGRect)pathBoundsWithoutStroke;
@end

@protocol TSDShapeControlRep
@end

@protocol TSDSmartPathSource
@property(readonly) unsigned long long numberOfControlKnobs;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (NSString *)getFeedbackStringForKnob:(unsigned long long)arg1;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;

@optional
- (struct CGPoint)fixedPointForControlKnobChange;
@end

@protocol TSDStrokeEditor <TSDEditor>
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
@property(readonly, nonatomic) NSString *strokeColorPickerTitle;
@property(readonly, nonatomic) NSArray *strokeSwatches;
@property(retain, nonatomic) TSUColor *strokeColor;
@property(copy, nonatomic) TSDStroke *stroke;
- (double)pictureFrameAssetScaleForNormalizedWidth:(double)arg1;
- (double)strokeWidthForNormalizedWidth:(double)arg1;
- (void)endChangingStrokeWidth:(NSNumber *)arg1;
- (void)didChangeStrokeWidth:(NSNumber *)arg1;
- (void)beginChangingStrokeWidth:(NSNumber *)arg1;
- (void)takePatternFromStroke:(TSDStroke *)arg1 withDefaultStroke:(TSDStroke *)arg2;
@end

@protocol TSDTextSelection <NSObject>
@property(readonly, nonatomic) _Bool isAtEndOfLine;
@property(readonly, nonatomic) struct _NSRange range;
@end

@protocol TSDThumbnailConsumer <NSObject>
- (void)updateThumbnail:(TSUImage *)arg1 identifier:(id <TSDThumbnailIdentifier>)arg2 continueThumbnailing:(_Bool)arg3;
- (id <TSDThumbnailIdentifier>)nextThumbnailIdentifier;

@optional
- (_Bool)shouldCallCommit;
- (void)commitThumbnail:(TSUImage *)arg1 identifier:(id <TSDThumbnailIdentifier>)arg2;
@end

@protocol TSDThumbnailProducer <NSObject>
- (struct CGRect)unscaledClipRectForIdentifier:(id <TSDThumbnailIdentifier>)arg1;
- (struct CGSize)thumbnailSizeForIdentifier:(id <TSDThumbnailIdentifier>)arg1;
- (NSArray *)rootInfosForIdentifier:(id <TSDThumbnailIdentifier>)arg1;

@optional
- (void)configureImager:(TSDImager *)arg1 forIdentifier:(id <TSDThumbnailIdentifier>)arg2;
- (_Bool)shouldReuseBitmapContext;
- (_Bool)distortedToMatch;
- (_Bool)reuseThumbnailerUntilIdleForIdentifier:(id <TSDThumbnailIdentifier>)arg1;
- (_Bool)suppressOverlayLayerForIdentifier:(id <TSDThumbnailIdentifier>)arg1;
@end

@protocol TSDWrappable <NSObject>
@property(readonly, nonatomic) _Bool hasAlpha;
- (int)wrapFitType;
- (int)wrapDirection;
- (int)wrapType;
- (_Bool)isHTMLWrap;
- (TSDWrapPolygon *)wrapPolygon;
- (struct CGRect)boundsInRoot;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (TSDAbstractLayout *)parent;
@end

@protocol TSDWrappableParent
- (NSArray *)descendentWrappables;
@end

@protocol TSKAccessControllerDelegate <NSObject>

@optional
- (void)willRelinquishReadLock;
- (void)didAcquireReadLock;
@end

@protocol TSKAnnotation <NSObject>
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
@property(readonly, nonatomic) int annotationType;
@end

@protocol TSKApplicationDelegate

@optional
- (long long)maximumFontSize;
@end

@protocol TSKArchivedSelection <NSObject>
@property(retain, nonatomic) TSKSelection *selection;
@end

@protocol TSKCGColorProvider <NSObject>
- (struct CGColor *)cgColor;
@end

@protocol TSKCOOperation
@property(readonly, nonatomic) _Bool isNoop;
@end

@protocol TSKChangeSourceObserver <NSObject>

@optional
- (void)asyncProcessChanges:(NSArray *)arg1 forChangeSource:(id)arg2;
- (void)syncProcessChanges:(NSArray *)arg1 forChangeSource:(id)arg2;
@end

@protocol TSKCommandHistoryDelegate <NSObject>
- (void)commandHistoryChanged:(TSKCommandHistory *)arg1;
@end

@protocol TSKCompatibilityDelegate <NSObject>
- (NSString *)nestedDocumentFilename;
- (NSString *)needNewerVersionIndexXmlContentString;
- (NSString *)indexXmlFilename;
- (_Bool)isSageDocumentType:(NSString *)arg1;
- (_Bool)isTCMessageExceptionErrorDomain:(NSString *)arg1;
- (NSArray *)exportableTypes;
- (Class)exportOptionsControllerClass;
- (Class)exporterClassForType:(NSString *)arg1 options:(NSDictionary *)arg2;
- (Class)importerClassForType:(NSString *)arg1;

@optional
- (NSString *)unsupportedExportMessageStringForType:(NSString *)arg1;
- (NSString *)backwardsCompatibleTypeForType:(NSString *)arg1;
- (_Bool)isExportSupportedForType:(NSString *)arg1 documentRoot:(TSKDocumentRoot *)arg2;
@end

@protocol TSKCustomFormatContainingInfo
- (TSKCommand *)commandToReplaceCustomFormat:(TSUFormatObject *)arg1 withReplacementFormat:(TSUFormatObject *)arg2;
- (id)changeDetailsForCustomFormatListDidUpdateToCustomFormatWrapper:(TSUCustomFormatWrapper *)arg1;
@end

@protocol TSKDocumentObject
- (void)wasRemovedFromDocumentRoot:(TSKDocumentRoot *)arg1;
- (void)willBeRemovedFromDocumentRoot:(TSKDocumentRoot *)arg1;
- (void)wasAddedToDocumentRoot:(TSKDocumentRoot *)arg1 context:(TSKAddedToDocumentContext *)arg2;
- (void)willBeAddedToDocumentRoot:(TSKDocumentRoot *)arg1 context:(TSKAddedToDocumentContext *)arg2;
@end

@protocol TSKEncryptedDocumentExporter <TSKExporter>
- (void)setPassphrase:(NSString *)arg1 hint:(NSString *)arg2;

@optional
- (void)setCopyPassphrase:(NSString *)arg1 hint:(NSString *)arg2;
- (void)setPrintPassphrase:(NSString *)arg1 hint:(NSString *)arg2;
@end

@protocol TSKEncryptedDocumentImporter <TSKImporter, TSPPassphraseConsumer>
- (NSString *)docPassphrase;
- (NSString *)displayName;
- (_Bool)isDocumentEncryptedUnsupportedVersion:(_Bool *)arg1 errorMessage:(id *)arg2;
@end

@protocol TSKExporter <NSObject>
- (void)setProgressContext:(TSUProgressContext *)arg1;
- (TSUProgressContext *)progressContext;
- (_Bool)isCancelled;
- (void)quit;
- (void)cancel;
- (_Bool)exportToURL:(NSURL *)arg1 delegate:(id <TSKImportExportDelegate>)arg2 error:(id *)arg3;
- (id)initWithDocumentRoot:(TSKDocumentRoot *)arg1;

@optional
- (void)enableRenderAllContent;
- (_Bool)isExportSupported;
- (NSString *)documentSpecificTypeUTI;
- (NSString *)savePanelMessage;
- (void)setOptions:(NSDictionary *)arg1;
- (void)setSaveToURL:(NSURL *)arg1;
- (void)setTypeUTI:(NSString *)arg1;
- (NSString *)typeUTI;
- (NSString *)exportPathForOutputPath:(NSString *)arg1;
- (_Bool)needsSupplementalFiles;
- (TSUProgress *)progress;
- (void)setUsePackageFormat:(_Bool)arg1;
- (void)setQuickLookThumbnail:(TSUImage *)arg1;
- (void)setBuildVersionHistory:(NSArray *)arg1;
@end

@protocol TSKFileImporter <TSKImporter>
- (_Bool)importToPath:(NSString *)arg1 delegate:(id <TSKImportExportDelegate>)arg2 error:(id *)arg3;
- (_Bool)canCreateFile;
@end

@protocol TSKHighlightArrayControllerProtocol
- (void)pulseAnimationDidStop:(TSKHighlightArrayController *)arg1;
- (TSUImage *)imageForSearchReference:(id <TSKSearchReference>)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id <TSKSearchReference>)arg1;
@end

@protocol TSKImageExporter <TSKRenderingExporter>
@property(nonatomic) _Bool scaleToFit;
@property(nonatomic) unsigned long long height;
@property(nonatomic) unsigned long long width;
@end

@protocol TSKImportExportDelegate <NSObject>
- (void)removeWarning:(TSKWarning *)arg1;
- (void)addWarning:(TSKWarning *)arg1;
- (NSArray *)warnings;

@optional
@property(readonly, nonatomic) _Bool isBrowsingVersions;
@property(readonly, nonatomic) _Bool importingDesignDemoDoc;
- (void)showDownloadPermissionAlertIfNeededForDownloadingAssetsWithEstimatedDownloadSize:(long long)arg1 isPrecise:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
- (void)addIncompatibleMovieInfo:(TSDMovieInfo *)arg1 withCompatibilityLevel:(long long)arg2;
@end

@protocol TSKImporter <NSObject>
- (void)setProgressContext:(TSUProgressContext *)arg1;
- (TSUProgressContext *)progressContext;
- (_Bool)stylesheetUpdatesRequired;
- (NSString *)initialTemplateName;
- (void)quit;
- (void)cancel;
- (_Bool)importToDocumentRoot:(TSKDocumentRoot *)arg1 delegate:(id <TSKImportExportDelegate>)arg2 error:(id *)arg3;
- (void)setURL:(NSURL *)arg1;
- (id)initWithURL:(NSURL *)arg1;

@optional
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
- (NSUUID *)uuidOfImportedDocument;
- (TSUImage *)thumbnailImage;
- (NSArray *)buildVersionHistory;
- (_Bool)importStartsWithThemeOnly;
- (_Bool)postprocessRegularDocumentRoot:(TSKDocumentRoot *)arg1 delegate:(id <TSKImportExportDelegate>)arg2;
- (unsigned long long)initialVariantIndex;
@end

@protocol TSKInnerCommandsProvider
@end

@protocol TSKMediaPlayerController <NSObject>
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double absoluteDuration;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double absoluteCurrentTime;
@property(nonatomic, getter=isFastForwarding) _Bool fastForwarding;
@property(readonly, nonatomic) _Bool canFastForward;
@property(nonatomic, getter=isFastReversing) _Bool fastReversing;
@property(readonly, nonatomic) _Bool canFastReverse;
@property(readonly, nonatomic, getter=isScrubbing) _Bool scrubbing;
@property(nonatomic) float volume;
@property(nonatomic) long long repeatMode;
@property(nonatomic) double endTime;
@property(nonatomic) double startTime;
@property(nonatomic) float rate;
@property(nonatomic, getter=isPlaying) _Bool playing;
@property(readonly, nonatomic) _Bool canPlay;
@property(readonly, nonatomic) id <TSKMediaPlayerControllerDelegate> delegate;
- (void)removePeriodicTimeObserver:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(void (^)(void))arg2;
- (void)seekToEnd;
- (void)seekToBeginning;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)endScrubbing;
- (void)cancelPendingSeeks;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)beginScrubbing;
- (void)teardown;
- (CALayer *)newLayer;
@end

@protocol TSKMediaPlayerControllerDelegate <NSObject>
- (void)playbackDidStopForPlayerController:(id <TSKMediaPlayerController>)arg1;
- (void)playerController:(id <TSKMediaPlayerController>)arg1 playbackDidFailWithError:(NSError *)arg2;
@end

@protocol TSKModel <NSObject>

@optional
- (void)acceptVisitor:(id <TSKModelVisitor>)arg1;
- (NSString *)modelPathComponentForChild:(id <TSKModel>)arg1;
- (NSEnumerator *)childEnumerator;
@end

@protocol TSKModelVisitor <NSObject>
- (void)visitTSWPTOCInfo:(TSWPTOCInfo *)arg1;
- (void)visitTSWPStorage:(TSWPStorage *)arg1;
- (void)visitTSWPShapeInfo:(TSWPShapeInfo *)arg1;
- (void)visitTSTTableInfo:(TSTTableInfo *)arg1;
- (void)visitTSDShapeInfo:(TSDShapeInfo *)arg1;
- (void)visitTSDMovieInfo:(TSDMovieInfo *)arg1;
- (void)visitTSDImageInfo:(TSDImageInfo *)arg1;
- (void)visitTSDGroupInfo:(TSDGroupInfo *)arg1;
- (void)visitTSDConnectionLineInfo:(TSDConnectionLineInfo *)arg1;
- (void)visitTSCHChartDrawableInfo:(TSCHChartDrawableInfo *)arg1;
@end

@protocol TSKPreflightCommand <NSObject>
- (_Bool)didCoalesceWithNonPreflightCommand;

@optional
- (TSKCommand<TSKPreflightCommand> *)pendingPreflightCommandForUndo;
@end

@protocol TSKPulseAnimationControllerProtocol
- (void)pulseAnimationDidStopForPulse:(TSKPulseAnimationController *)arg1;
@end

@protocol TSKRenderingExporter <TSKExporter>
- (_Bool)hasMoreThanOnePageToPrint;
- (_Bool)paginate;
- (void)setPaginate:(_Bool)arg1;
- (unsigned long long)pageCount;
- (double)progressForCurrentPage;
- (TSDImager *)imager;
- (struct CGRect)unscaledClipRect;
- (struct CGRect)boundsRect;
- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)setInfosToCurrentPage;
- (_Bool)incrementPage;
- (_Bool)preparePage:(unsigned long long)arg1;
- (void)teardown;
- (void)setup;
- (_Bool)exportToURL:(NSURL *)arg1 pageNumber:(unsigned long long)arg2 delegate:(id <TSKImportExportDelegate>)arg3 error:(id *)arg4;

@optional
- (void)setMaxPixels:(double)arg1;
@end

@protocol TSKScrollViewDelegate <UIScrollViewDelegate>

@optional
- (void)scrollView:(TSKScrollView *)arg1 willAnimateToContentOffset:(struct CGPoint)arg2;
- (void)scrollViewDidEndDecelerating:(TSKScrollView *)arg1;
- (void)scrollViewDidEndDragging:(TSKScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(TSKScrollView *)arg1;
- (void)scrollViewDidScroll:(TSKScrollView *)arg1;
- (void)scrollViewWillScroll:(TSKScrollView *)arg1;
- (_Bool)scrollViewShouldAnchorToRightEdge:(TSKScrollView *)arg1;
@end

@protocol TSKSearchReference <NSObject, NSCopying>
@property(retain, nonatomic) id <TSKAnnotation> annotation;
@property(nonatomic) _Bool autohideHighlight;
@property(nonatomic) _Bool pulseHighlight;
@property(retain, nonatomic) NSArray *findHighlights;
@property(nonatomic) struct CGPoint searchReferencePoint;
- (_Bool)isReplaceable;
- (TSKSelection *)selection;
- (id <TSKModel>)model;
- (id <TSKSearchReference>)searchReferenceEnd;
- (id <TSKSearchReference>)searchReferenceStart;
- (id <TSKSearchReference>)searchReferenceForReplacingWithString:(NSString *)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (TSKCommand *)commandForReplacingWithString:(NSString *)arg1 options:(unsigned long long)arg2;
@end

@protocol TSKSearchTarget <NSObject>

@optional
- (void)layoutSearchForSpellingErrorsWithHitBlock:(void (^)(id <TSKSearchReference>))arg1 stop:(_Bool *)arg2;
- (void)layoutSearchForAnnotationWithHitBlock:(void (^)(id <TSKSearchReference>))arg1;
- (NSArray *)childAnnotationSearchTargets;
- (NSArray *)childSearchTargets;
- (void)layoutSearchForString:(NSString *)arg1 options:(unsigned long long)arg2 hitBlock:(void (^)(id <TSKSearchReference>))arg3;
@end

@protocol TSKSearchable <TSKModel>

@optional
- (TSKReplaceAllChildCommand *)childCommandForReplaceAllCommand:(TSKReplaceAllCommand *)arg1;
- (void)continueAnnotationSearch:(TSKSearch *)arg1;
- (void)continueSearch:(TSKSearch *)arg1;
- (TSKSearch *)searchForAnnotationsWithHitBlock:(void (^)(id <TSKSearchReference>))arg1;
- (TSKSearch *)searchForString:(NSString *)arg1 options:(unsigned long long)arg2 onHit:(void (^)(id <TSKSearchReference>))arg3;
@end

@protocol TSKStyleMapper <NSObject>
@property(readonly, nonatomic) _Bool clientsMustRemap;
- (void)varyInThemeStylesheetIf:(_Bool)arg1 forDurationOfBlock:(void (^)(void))arg2;
- (void)varyInThemeStylesheetForDurationOfBlock:(void (^)(void))arg1;
- (TSSStyle *)mappedStyleForStyle:(TSSStyle *)arg1 inThemeStylesheet:(_Bool)arg2;
- (TSSStyle *)mappedStyleForStyle:(TSSStyle *)arg1;
- (void)popMappingContext:(id)arg1;
- (void)pushMappingContext:(id)arg1;
- (TSSStylesheet *)targetStylesheet;
@end

@protocol TSKTransformableObject <NSObject>
- (TSKCommand *)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(TSPObjectContext *)arg2 transformedObjects:(TSUPointerKeyDictionary *)arg3 inBounds:(struct CGRect)arg4;
@end

@protocol TSPArchiverManagerDelegate <NSObject>

@optional
- (_Bool)archiverManager:(TSPArchiverManager *)arg1 shouldDelayArchivingObject:(TSPObject *)arg2;
- (void)archiverManager:(TSPArchiverManager *)arg1 didCreateArchiver:(TSPArchiver *)arg2;
@end

@protocol TSPComponentDelegate <NSObject>
- (void)didModifyFlushedComponent:(TSPComponent *)arg1 forObject:(TSPObject *)arg2;
- (void)flushComponent:(TSPComponent *)arg1 isDiscardingContent:(_Bool)arg2;
- (void)cacheComponent:(TSPComponent *)arg1 isDiscardingContent:(_Bool)arg2;
- (TSPObject *)objectForIdentifier:(long long)arg1;
- (_Bool)shouldKeepAllCachedObjectsInMemory;
- (_Bool)isActive;
@end

@protocol TSPComponentParserDelegate <NSObject>
- (_Bool)componentParser:(TSPComponentParser *)arg1 didReadArchiveInfo:(const struct ArchiveInfo *)arg2 stream:(struct DispatchDataInputStream *)arg3 error:(id *)arg4;
@end

@protocol TSPComponentWriteChannel <NSObject>
- (void)close;
- (void)writeData:(NSObject<OS_dispatch_data> *)arg1;
@end

@protocol TSPComponentWriterDelegate <NSObject>
- (void)componentWriter:(TSPComponentWriter *)arg1 wantsComponentOfObject:(TSPObject *)arg2 queue:(NSObject<OS_dispatch_queue> *)arg3 completion:(void (^)(TSPComponent *))arg4;
- (void)componentWriterWantsDelayedObjects:(TSPComponentWriter *)arg1 queue:(NSObject<OS_dispatch_queue> *)arg2 completion:(void (^)(NSArray *))arg3;
- (void)componentWriter:(TSPComponentWriter *)arg1 canSkipArchivingStronglyReferencedObject:(TSPObject *)arg2 fromComponentRootObject:(TSPObject *)arg3 completion:(void (^)(_Bool))arg4;
- (TSPObject *)componentWriter:(TSPComponentWriter *)arg1 wantsExplicitComponentRootObjectForObject:(TSPObject *)arg2 claimingComponent:(TSPComponent *)arg3;

@optional
- (_Bool)componentWriter:(TSPComponentWriter *)arg1 shouldDelayWritingObject:(TSPObject *)arg2;
- (_Bool)componentWriter:(TSPComponentWriter *)arg1 externalPackageDidWriteObject:(TSPObject *)arg2 claimingComponent:(id *)arg3;
- (_Bool)componentWriter:(TSPComponentWriter *)arg1 object:(TSPObject *)arg2 belongsToLinkedComponent:(TSPComponent *)arg3;
- (void)componentWriter:(TSPComponentWriter *)arg1 locatorForClaimingComponent:(TSPComponent *)arg2 queue:(NSObject<OS_dispatch_queue> *)arg3 completion:(void (^)(NSString *))arg4;
- (void)componentWriterNeedsDocumentRecovery:(TSPComponentWriter *)arg1;
@end

@protocol TSPCopying
- (id)copyWithContext:(TSPObjectContext *)arg1;
@end

@protocol TSPDataArchiver <NSObject>
@property(readonly, nonatomic) NSURL *relativeURLForExternalData;
- (void)addDataFinalizeHandlerForSuccessfulSave:(void (^)(void))arg1;
@end

@protocol TSPDataCullingListener <NSObject>
- (void)willCullData:(TSPData *)arg1;
@end

@protocol TSPDataStorage <NSObject>
@property(readonly, nonatomic) _Bool readOnly;
@property(readonly, nonatomic) unsigned long long encodedLength;
@property(readonly, nonatomic) _Bool isMissingData;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (void)performIOChannelReadWithAccessor:(void (^)(id <TSUReadChannel>))arg1;
- (_Bool)isInPackage:(TSPPackage *)arg1;
- (NSString *)filenameForPreferredFilename:(NSString *)arg1;
- (_Bool)writeData:(TSPData *)arg1 toPackageWriter:(TSPPackageWriter *)arg2 preferredFilename:(NSString *)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id <TSPDataArchiver>)arg2;
- (AVAsset *)AVAssetWithOptions:(NSDictionary *)arg1 usingResourceLoaderWithContentTypeUTI:(NSString *)arg2;
- (AVAsset *)AVAssetWithOptions:(NSDictionary *)arg1 contentTypeUTI:(NSString *)arg2;
- (NSData *)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (NSData *)bookmarkDataWithOptions:(unsigned long long)arg1;

@optional
@property(readonly, nonatomic) unsigned int CRC;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(nonatomic) _Bool gilligan_isRemote;
@property(readonly, nonatomic) _Bool needsDownload;
- (_Bool)bookmarkDataNeedsWriteWithOptions:(unsigned long long)arg1;
- (void)addDownloadObserver:(id)arg1 forData:(TSPData *)arg2 completionHandler:(void (^)(id, TSPData *, long long))arg3;
- (void)setIsMissingData:(_Bool)arg1;
- (_Bool)copyToTemporaryURL:(NSURL *)arg1 encryptionKey:(SFUCryptoKey *)arg2;
- (id)storageForDataCopyFromOtherContext;
- (void)didInitializeFromDocumentURL:(NSURL *)arg1;
@end

@protocol TSPDatabaseReaderDelegate <TSPReaderDelegate>
- (TSPData *)databaseReader:(TSPDatabaseReader *)arg1 wantsDataForAppRelativePath:(NSString *)arg2 filename:(NSString *)arg3;
- (TSPData *)databaseReader:(TSPDatabaseReader *)arg1 wantsDataForDatabaseObjectIdentifier:(long long)arg2 filename:(NSString *)arg3;
@end

@protocol TSPDatabaseUnarchiverDelegate <TSPUnarchiverDelegate>
- (set_6550bfbd *)filterIdentifiers:(const set_6550bfbd *)arg1;
@end

@protocol TSPDocumentResourceDownloadNotificationProtocol
+ (void)didCompleteDocumentResourceDownloadWithDigestString:(NSString *)arg1;
@end

@protocol TSPDocumentResourceDownloader <NSObject>
@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;
@property(readonly, nonatomic) long long estimatedDownloadSize;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)cancelDownloads;
- (TSUDownloadSession *)downloadWithDelegate:(id <TSUDownloadSessionDelegate>)arg1 description:(NSString *)arg2;
@end

@protocol TSPExternalReferenceDelegate
- (long long)componentIdentifierForObjectIdentifier:(long long)arg1 objectOrNil:(TSPObject *)arg2;
- (TSPObject *)objectForIdentifier:(long long)arg1;
@end

@protocol TSPFileCoordinatorDelegate <NSObject>
- (void)performReadUsingAccessor:(void (^)(NSURL *))arg1;
@end

@protocol TSPIdentifiedDataRepresentation <NSObject>
- (_Bool)isLoaded;
- (_Bool)setDataRepresentation:(SFUDataRepresentation *)arg1 shouldCopy:(_Bool)arg2 error:(id *)arg3;
- (long long)identifier;

@optional
- (_Bool)fromExternalReference;
- (void)setRelativeDataPath:(NSString *)arg1;
- (void)setFileStateIdentifier:(NSString *)arg1;
@end

@protocol TSPLazyReferenceDelegate <NSObject>
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(TSPLazyReference *)arg3;
- (_Bool)readLazyReference:(TSPLazyReference *)arg1 object:(id *)arg2 error:(id *)arg3;
- (TSPObject *)objectForIdentifier:(long long)arg1;

@optional
- (void)lazyReference:(TSPLazyReference *)arg1 didCreateCopy:(TSPLazyReference *)arg2;
@end

@protocol TSPObjectContextDelegate <TSPSupportDirectoryDelegate>

@optional
@property(readonly, nonatomic) _Bool preserveDocumentRevisionIdentifierForSequenceZero;
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, nonatomic) _Bool canUpgradeDocumentSupport;
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
- (void)gilligan_data:(TSPData *)arg1 didMoveFromPackageIdentifier:(unsigned char)arg2 packageLocator:(NSString *)arg3 toPackageIdentifier:(unsigned char)arg4 packageLocator:(NSString *)arg5;
- (_Bool)gilligan_isRemoteData:(TSPData *)arg1;
- (void)context:(TSPObjectContext *)arg1 didChangeEstimatedDocumentDataSize:(unsigned long long)arg2;
- (_Bool)isEstimatedDocumentDataSizeNotificationEnabledForContext:(TSPObjectContext *)arg1;
- (void)context:(TSPObjectContext *)arg1 didDownloadDocumentResources:(NSArray *)arg2 failedOrCancelledDocumentResources:(NSArray *)arg3 error:(NSError *)arg4;
- (NSSet *)persistenceWarningsForData:(TSPData *)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
- (_Bool)areExternalReferencesToDataAllowedAtURL:(NSURL *)arg1;
- (NSString *)documentPasswordHintForWrite;
- (NSDictionary *)additionalDocumentPropertiesForWrite;
- (NSDictionary *)packageDataForWrite;
- (_Bool)retrievePassphraseWithConsumer:(id <TSPPassphraseConsumer>)arg1;
- (void)didLoadDocumentWrittenByPreviousVersion;
- (void)makeDocumentReadOnly;
- (void)addPersistenceWarnings:(NSSet *)arg1;
- (void)presentPersistenceError:(NSError *)arg1;
@end

@protocol TSPObjectDelegate <TSPObjectModifyDelegate>
@property(readonly, nonatomic) TSPObjectContext *context;
- (TSPObjectUUIDMap *)objectUUIDMap;
- (NSUUID *)newObjectUUIDForObject:(TSPObject *)arg1;
- (long long)newObjectIdentifier;
- (long long)modifyObjectTokenForNewObject;
@end

@protocol TSPObjectModifyDelegate <NSObject>
- (void)willModifyObject:(TSPObject *)arg1 duringReadOperation:(_Bool)arg2;
@end

@protocol TSPPackageDataWriter <NSObject>
- (struct CGDataConsumer *)newCGDataConsumerAtRelativePath:(NSString *)arg1;
- (_Bool)writeData:(NSData *)arg1 toRelativePath:(NSString *)arg2 allowEncryption:(_Bool)arg3 error:(id *)arg4;
@end

@protocol TSPPassphraseConsumer <NSObject>
- (_Bool)setPassphrase:(NSString *)arg1;

@optional
@property(readonly, nonatomic) NSString *service;
@property(readonly, nonatomic) NSData *keychainGenericItem;
@property(readonly, nonatomic) NSString *passphraseHint;
- (_Bool)setDecryptionKey:(SFUCryptoKey *)arg1;
@end

@protocol TSPPasteboardWriting <NSObject>
- (id)pasteboardPropertyListForType:(NSString *)arg1;
- (NSArray *)writableTypesForPasteboard:(id)arg1;
@end

@protocol TSPProxyObjectManager
- (TSPObject *)proxyForReferencedObject:(TSPObject *)arg1;
@end

@protocol TSPReadCoordinator <NSObject>
@property(readonly, nonatomic) _Bool isReadingFromDocument;
- (void)readComponent:(TSPComponent *)arg1 completionQueue:(NSObject<OS_dispatch_queue> *)arg2 completion:(void (^)(_Bool, TSPObject *, NSMapTable *, NSError *))arg3;
- (void)readRootObjectWithCompletionQueue:(NSObject<OS_dispatch_queue> *)arg1 completion:(void (^)(_Bool, TSPObject *, NSMapTable *, NSError *))arg2;
- (_Bool)endReading;
@end

@protocol TSPReaderDelegate <NSObject>
@property(readonly, nonatomic) _Bool isReadingFromDocument;
@property(readonly, nonatomic) NSUUID *baseObjectUUID;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (void)reader:(TSPReader *)arg1 didReadLazyReference:(TSPLazyReference *)arg2;
- (void)reader:(TSPReader *)arg1 didFindExternalRepeatedReference:(NSArray *)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 fromParentObject:(TSPObject *)arg5 completion:(void (^)(id))arg6;
- (void)reader:(TSPReader *)arg1 didFindExternalReferenceToObjectIdentifier:(long long)arg2 componentIdentifier:(long long)arg3 isWeak:(_Bool)arg4 allowUnknownObject:(_Bool)arg5 fromParentObject:(TSPObject *)arg6 completion:(void (^)(id))arg7;
- (TSPData *)reader:(TSPReader *)arg1 wantsDataForIdentifier:(long long)arg2;
- (id <TSPLazyReferenceDelegate>)lazyReferenceDelegateForReader:(TSPReader *)arg1;
- (id <TSPObjectDelegate>)objectDelegateForReader:(TSPReader *)arg1;
- (TSPObjectContext *)contextForReader:(TSPReader *)arg1;

@optional
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
- (void)reader:(TSPReader *)arg1 didUnarchiveObject:(TSPObject *)arg2;
- (void)reader:(TSPReader *)arg1 didResetObjectUUID:(NSUUID *)arg2 forObjectIdentifier:(long long)arg3 originalObjectUUID:(NSUUID *)arg4;
- (void)reader:(TSPReader *)arg1 didResetObjectIdentifierForObject:(TSPObject *)arg2 originalObjectIdentifier:(long long)arg3;
@end

@protocol TSPSplitableData
- (void)tsp_splitDataWithMaxSize:(unsigned long long)arg1 subdataHandlerBlock:(void (^)(NSData *, unsigned long long, _Bool *))arg2;
@end

@protocol TSPStreamingDistributableUnarchiver <NSObject>
- (_Bool)handleClassInfoWithClassType:(int)arg1 className:(NSString *)arg2 isProtobufClass:(_Bool)arg3 error:(id *)arg4;
- (_Bool)handleFileDescriptorProtoWithInputStream:(id <SFUBufferedInputStream>)arg1 length:(unsigned int)arg2 error:(id *)arg3;
- (_Bool)handleObjectWithIdentifier:(long long)arg1 fileStateIdentifier:(NSString *)arg2 version:(unsigned int)arg3 classType:(int)arg4 stream:(id <SFUBufferedInputStream>)arg5 length:(long long)arg6 relationshipTargets:(long long *)arg7 relationshipCount:(unsigned int)arg8 error:(id *)arg9;
- (_Bool)handleArchivedVersions:(CDStruct_4bcfbbae)arg1 error:(id *)arg2;
@end

@protocol TSPSupportDirectoryDelegate <NSObject>

@optional
- (NSURL *)supportDirectoryURL;
@end

@protocol TSPUnarchiverDelegate <NSObject>
@property(readonly, nonatomic) _Bool didFinishResolvingReferences;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (TSPData *)dataForIdentifier:(long long)arg1;
- (NSUUID *)UUIDForObjectIdentifier:(long long)arg1;
- (void)unarchiver:(TSPUnarchiver *)arg1 didReadLazyReference:(TSPLazyReference *)arg2 isExternal:(_Bool *)arg3;

@optional
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
@end

@protocol TSSPreset <TSSThemeAsset>
@property(readonly, nonatomic) NSString *presetKind;

@optional
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
@end

@protocol TSSPresetSource
+ (void)bootstrapPresetsOfKind:(NSString *)arg1 inTheme:(TSSTheme *)arg2 alternate:(int)arg3;
+ (NSSet *)presetKinds;
@end

@protocol TSSPropertySource <NSObject>
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
@end

@protocol TSSPropertyValueValidator
+ (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
+ (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
+ (TSSPropertySet *)propertiesAllowingNSNull;
- (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
- (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
- (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
@end

@protocol TSSStyleClient <TSKModel>
- (void)replaceReferencedStylesUsingBlock:(TSSStyle * (^)(TSSStyle *))arg1;
- (NSSet *)referencedStyles;
@end

@protocol TSSStyleObject
@end

@protocol TSSThemeAsset
- (_Bool)isThemeEquivalent:(id <TSSThemeAsset>)arg1;

@optional
- (SEL)mapThemePropertyMapSelector;
- (SEL)mapThemeStyleSelector;
- (SEL)mapThemeAssetSelector;
- (SEL)mapThemePresetsSelector;
@end

@protocol TSSThemedObject <TSKModel>
- (TSSApplyThemeChildCommand *)childCommandForApplyThemeCommand:(TSSApplyThemeCommand *)arg1;
@end

@protocol TSTCellDiffing
+ (TSSPropertySet *)properties;
- (TSSPropertyMap *)propertiesMatchingThoseInMap:(TSSPropertyMap *)arg1;
- (NSObject<TSTCellDiffing> *)objectByRemovingPropertiesInMap:(TSSPropertyMap *)arg1 addingPropertiesInMap:(TSSPropertyMap *)arg2;
@end

@protocol TSTCellMap <NSObject>
@property(nonatomic) _Bool appliesToHidden;
- (void)setMayModifyValuesReferencedByFormulas:(_Bool)arg1;
- (_Bool)mayModifyValuesReferencedByFormulas;
- (_Bool)mayModifyFormulasInCells;
- (TSTCell *)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (void)popLastCell;
- (void)addCell:(TSTCell *)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (unsigned long long)count;
@end

@protocol TSTCellRegionIterating <NSObject>
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (id)initWithCellRegion:(TSTCellRegion *)arg1;
@end

@protocol TSTFormulaToken
@property(readonly, retain, nonatomic) TSCEFunctionArgumentSpec *argumentSpec;
@property(readonly, nonatomic) NSString *string;
@property(readonly, nonatomic) int tokenType;
@end

@protocol TSTLayoutContainedEditorPostLayoutProtocol <NSObject>
- (void)tableLayoutDidValidate:(TSTLayout *)arg1;
@end

@protocol TSTLayoutDynamicContentProtocol <NSObject>
- (_Bool)dynamicContentMustDrawOnMainThread;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;

@optional
- (_Bool)mergeRange:(CDStruct_5f1f7aa9 *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
@end

@protocol TSTLayoutDynamicResizeInfoProtocol <NSObject>
- (void)captureNewMinimumRowHeights:(TSTMasterLayout *)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (double)getColumnWidthResize:(unsigned char)arg1;
- (double)getRowHeightResize:(unsigned short)arg1;
- (double)getColumnWidth:(unsigned char)arg1;
- (double)getRowHeight:(unsigned short)arg1;
- (double)getColumnInitialWidth:(unsigned char)arg1;
- (double)getRowInitialHeight:(unsigned short)arg1;
- (_Bool)hasWidthForColumn:(unsigned char)arg1;
- (_Bool)hasHeightForRow:(unsigned short)arg1;
- (void)invalidate;
- (_Bool)valid;
- (id)initWithDynamicResizeInfo:(id <TSTLayoutDynamicResizeInfoProtocol>)arg1;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1 rowRegion:(TSTCellRegion *)arg2;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1 columnRegion:(TSTCellRegion *)arg2;
- (id)initWithMasterLayout:(TSTMasterLayout *)arg1;
@end

@protocol TSTResolverContainerNameProvider <NSObject>
- (NSArray *)resolversMatchingPrefix:(NSString *)arg1;
- (id <TSCEReferenceResolving>)resolverMatchingName:(NSString *)arg1 contextContainerName:(NSString *)arg2;
- (id <TSCEReferenceResolving>)resolverMatchingName:(NSString *)arg1 contextResolver:(id <TSCEReferenceResolving>)arg2;
- (NSArray *)resolverContainerNamesMatchingPrefix:(NSString *)arg1;
- (id <TSCEResolverContainer>)resolverContainerForName:(NSString *)arg1 caseSensitive:(_Bool)arg2;
- (NSString *)nameForResolverContainer:(id <TSCEResolverContainer>)arg1;
- (NSString *)resolverContainerNameForResolver:(id <TSCEReferenceResolving>)arg1;

@optional
- (_Bool)isPendingTableNameUniquification;
@end

@protocol TSTSearchableCellMap <TSTCellMap>
- (TSTCell *)findCellFromCellMap:(CDStruct_0441cfb5)arg1;
@end

@protocol TSTStrokeLayerStrokeAndRange <NSObject>
@property(readonly, nonatomic) struct TSTSimpleRange range;
@property(readonly, nonatomic) TSDStroke *stroke;
@end

@protocol TSTTableHeaderStorage <NSObject>
- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(TSTTableHeaderInfo *)arg1 forKey:(unsigned int)arg2;
- (TSTTableHeaderInfo *)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (TSTTableHeaderInfo *)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
@end

@protocol TSTTableStrokeProviding <NSObject>
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
@end

@protocol TSUCustomFormatList
- (_Bool)rollbackLastCustomFormat:(struct TSUCustomFormat *)arg1;
- (NSArray *)allNumberKeys;
- (TSUCustomFormatWrapper *)customFormatWrapperForKey:(unsigned int)arg1;
- (struct TSUCustomFormat *)customFormatForKey:(unsigned int)arg1;
- (void)restoreCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (void)removeCustomFormatForKey:(unsigned int)arg1;
- (void)updateCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (unsigned int)importCustomFormat:(struct TSUCustomFormat *)arg1;
- (unsigned int)addPastedCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (unsigned int)addCustomFormat:(struct TSUCustomFormat *)arg1 allowNameOverwrite:(_Bool)arg2;
@end

@protocol TSUDataFormat <NSObject, NSCopying>
- (void)setFormatName:(NSString *)arg1;
- (NSString *)formatName;
@end

@protocol TSUDownloadItem <NSObject>
+ (void)downloadManager:(TSUDownloadManager *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
+ (void)downloadManager:(TSUDownloadManager *)arg1 task:(NSURLSessionTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;
+ (_Bool)canHandleDownloadTask:(NSURLSessionTask *)arg1;
@property(readonly, nonatomic) long long totalBytesExpectedToBeDownloaded;
@property(readonly, nonatomic) NSURL *downloadURL;
@property(readonly, nonatomic) NSString *downloadTaskDescription;

@optional
@property(readonly, nonatomic) _Bool needsDownload;
@end

@protocol TSUFlushable <NSObject>
- (void)flush;

@optional
- (int)flushCost;
- (int)reloadCost;
- (void)setFlushingManager:(TSUFlushingManager *)arg1;
@end

@protocol TSUIOChannel <NSObject>
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(void (^)(void))arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (void)close;
@end

@protocol TSUMultipleChoiceListChoiceProviding
- (NSString *)displayStringAtIndex:(unsigned long long)arg1;
- (_Bool)booleanAtIndex:(unsigned long long)arg1;
- (NSDate *)dateAtIndex:(unsigned long long)arg1;
- (NSString *)stringAtIndex:(unsigned long long)arg1;
- (double)numberAtIndex:(unsigned long long)arg1;
- (int)valueTypeOfItemAtIndex:(unsigned long long)arg1;
- (_Bool)isEqualToChoices:(id <TSUMultipleChoiceListChoiceProviding>)arg1;
- (NSArray *)choices;
@end

@protocol TSUNumberFormatting <TSUDataFormat, NSObject>
- (_Bool)isEquivalent:(id)arg1;
- (NSString *)stringFromString:(NSString *)arg1;
- (NSString *)chartLabelStringFromDouble:(double)arg1;
- (NSString *)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3;
- (NSString *)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2;
- (NSString *)stringFromDouble:(double)arg1;
- (_Bool)requiresParensToBeReplacedWithSpacesForDouble:(double)arg1;
- (_Bool)usesTabs;
- (_Bool)hasValidDecimalPlaces;
- (void)setFormatName:(NSString *)arg1;
- (_Bool)baseUseMinusSign;
- (unsigned short)basePlaces;
- (unsigned short)base;
- (_Bool)customFormatShouldAutoInsertPercentSymbol;
- (_Bool)usesTextFormatForValue:(double)arg1;
- (_Bool)canFormatText;
- (_Bool)isTextFormat;
- (double)scaleFactor;
- (_Bool)usesAccountingStyle;
- (int)fractionAccuracy;
- (_Bool)showThousandsSeparator;
- (int)negativeStyle;
- (NSString *)currencyCode;
- (NSString *)formatString;
- (NSString *)suffixString;
- (unsigned short)decimalPlaces;
- (int)valueType;
- (NSArray *)customNumberFormatTokens;
- (_Bool)isCustom;
- (NSString *)formatName;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1 andNegativeStyle:(int)arg2;
- (id)numberFormatBySettingUseAccountingStyle:(_Bool)arg1;
- (id)numberFormatBySettingFractionAccuracy:(int)arg1;
- (id)numberFormatBySettingShowThousandsSeparator:(_Bool)arg1;
- (id)numberFormatBySettingNegativeStyle:(int)arg1;
- (id)numberFormatBySettingSuffixString:(NSString *)arg1;
- (id)numberFormatBySettingCurrencyCode:(NSString *)arg1;
- (id)numberFormatByIncrementingDecimalPlaces:(short)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1;
- (id)numberFormatBySettingValueType:(int)arg1;
@end

@protocol TSURandomWriteChannel <TSUIOChannel>
- (void)writeData:(NSObject<OS_dispatch_data> *)arg1 offset:(long long)arg2 queue:(NSObject<OS_dispatch_queue> *)arg3 handler:(void (^)(_Bool, NSObject<OS_dispatch_data> *, NSError *))arg4;
@end

@protocol TSUReadChannel <TSUIOChannel, TSUStreamReadChannel>
- (void)readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(NSObject<OS_dispatch_queue> *)arg3 handler:(void (^)(_Bool, NSObject<OS_dispatch_data> *, NSError *))arg4;
@end

@protocol TSUStreamReadChannel <NSObject>
- (void)close;
- (void)readWithQueue:(NSObject<OS_dispatch_queue> *)arg1 handler:(void (^)(_Bool, NSObject<OS_dispatch_data> *, NSError *))arg2;
@end

@protocol TSUStreamWriteChannel <TSUIOChannel>
- (void)writeData:(NSObject<OS_dispatch_data> *)arg1 queue:(NSObject<OS_dispatch_queue> *)arg2 handler:(void (^)(_Bool, NSObject<OS_dispatch_data> *, NSError *))arg3;
@end

@protocol TSWPChangeSessionManager
@property(readonly, nonatomic) _Bool isTrackingChanges;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (TSWPChangeSession *)changeSessionAuthorCreatedWithCommand:(id *)arg1;
@end

@protocol TSWPChangeVisibility
- (_Bool)shouldShowMarkupForChangeKind:(int)arg1 date:(NSDate *)arg2;
- (_Bool)shouldShowChangeKind:(int)arg1 date:(NSDate *)arg2;
@end

@protocol TSWPCitationRecordHosting <NSObject>
- (NSArray *)citationRecords;
@end

@protocol TSWPColumnMetrics
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id <TSWPLayoutTarget>)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id <TSWPLayoutTarget>)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;

@optional
@property(readonly, nonatomic) double textScaleFactor;
@end

@protocol TSWPDataDetectorProtocol <NSObject>
+ (NSArray *)scanString:(NSString *)arg1 scanRange:(struct _NSRange)arg2;
+ (struct _NSRange)calculateScanRangeForString:(NSString *)arg1 changedRange:(struct _NSRange)arg2;
+ (NSString *)detectorIdentifier;
@end

@protocol TSWPDrawableOLC

@optional
- (void)didRemoveDrawable:(id <TSDInfo>)arg1;
- (void)willRemoveDrawable:(id <TSDInfo>)arg1;
- (void)didAddDrawable:(id <TSDInfo>)arg1;
- (void)willAddDrawable:(id <TSDInfo>)arg1;
@end

@protocol TSWPFootnoteHeightMeasurer
@end

@protocol TSWPFootnoteMarkProvider <NSObject>
- (NSString *)markStringForFootnoteReferenceStorage:(TSWPStorage *)arg1;
@end

@protocol TSWPGraphicalAttachmentRenderer <NSObject>
- (void)drawAttachment:(TSWPUIGraphicalAttachment *)arg1 inContext:(struct CGContext *)arg2 selection:(TSWPSelection *)arg3;
@end

@protocol TSWPHeaderFooterProvider <NSObject>
- (double)bodyWidth;
- (TSKDocumentRoot *)documentRoot;
- (NSEnumerator *)headerFooterFragmentEnumerator;
- (_Bool)isHeaderFooterEmpty:(int)arg1 fragmentAtIndex:(int)arg2;
- (_Bool)isHeaderFooterEmpty:(int)arg1;
- (int)headerFragmentIndexForModel:(id <TSKModel>)arg1;
- (int)headerFooterTypeForModel:(id <TSKModel>)arg1;
- (TSWPStorage *)headerFooter:(int)arg1 fragmentAtIndex:(int)arg2;
- (_Bool)usesSingleHeaderFooter;
@end

@protocol TSWPHyperlinkHostRepProtocol <NSObject>
- (TSDRep *)hyperlinkContainerRep;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(TSWPHyperlinkField *)arg1 beginEditing:(_Bool)arg2;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(TSWPHyperlinkField *)arg1;
- (void)setHighlightedHyperlinkField:(TSWPHyperlinkField *)arg1;
- (TSWPSmartField *)smartFieldAtPoint:(struct CGPoint)arg1;

@optional
- (_Bool)shouldDismissHyperlinkUIOnApplicationEnterBackground;
- (_Bool)shouldUseHyperlinkHighlight;
- (void)didDismissEditHyperlinkUIForHyperlinkField:(TSWPHyperlinkField *)arg1;
- (TSWPHyperlinkField *)hyperlinkFieldForEditingHyperlinkField:(TSWPHyperlinkField *)arg1;
@end

@protocol TSWPLayoutOwner <NSObject>
- (id <TSWPTextWrap>)textWrapper;
- (void)layoutManager:(TSWPLayoutManager *)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(TSWPLayoutManager *)arg1;
- (_Bool)caresAboutStorageChanges;

@optional
- (TSUColor *)textColorOverride;
- (_Bool)forceWesternLineBreaking;
- (id <TSWPStyleProvider>)styleProvider;
@end

@protocol TSWPLayoutParent
- (Class)repClassForTextLayout:(TSWPLayout *)arg1;
- (id <NSFastEnumeration>)dependentsOfTextLayout:(TSWPLayout *)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(TSWPLayout *)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(TSWPLayout *)arg1;
- (void)invalidateForAutosizingTextLayout:(TSWPLayout *)arg1;
- (int)verticalAlignmentForTextLayout:(TSWPLayout *)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(TSWPLayout *)arg1;

@optional
- (unsigned long long)pageNumberForAttachment:(TSWPAttachment *)arg1;
- (unsigned long long)pageCountForAttachment:(TSWPAttachment *)arg1;
- (struct CGSize)initialTextSize;
- (int)naturalAlignmentForTextLayout:(TSWPLayout *)arg1;
- (struct CGRect)maskRectForTextLayout:(TSWPLayout *)arg1;
- (_Bool)textLayoutShouldLayoutVertically:(TSWPLayout *)arg1;
- (_Bool)textLayoutShouldWrapAroundExternalDrawables:(TSWPLayout *)arg1;
- (unsigned long long)initialCharIndex;
- (double)maxAutoGrowHeightForTextLayout:(TSWPLayout *)arg1;
- (double)maxAutoGrowWidthForTextLayout:(TSWPLayout *)arg1;
- (id <TSWPStyleProvider>)styleProvider;
@end

@protocol TSWPLayoutTarget <NSObject>
@property(readonly, nonatomic) double maxAnchorY;
@property(readonly, nonatomic) _Bool layoutIsValid;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) int naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
@property(readonly, retain, nonatomic) NSMutableArray *columns;
- (_Bool)isLayoutOffscreen;
- (void)addAttachmentLayout:(TSDLayout *)arg1;
- (NSArray *)currentAnchoredDrawableLayouts;
- (NSArray *)currentInlineDrawableLayouts;
- (TSDLayout *)validatedLayoutForAnchoredDrawable:(id <TSDInfo>)arg1;
- (TSDLayout *)validatedLayoutForInlineDrawable:(id <TSDInfo>)arg1;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
- (_Bool)isLastTarget;
- (NSObject<TSWPColumnMetrics> *)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;

@optional
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) struct CGRect maskRect;
- (_Bool)siblingTargetIsManipulatingDrawable:(TSDDrawableInfo *)arg1;
- (TSDBezierPath *)interiorClippingPath;
- (_Bool)invalidateForPageCountChange;
- (unsigned int)pageIndex;
- (struct CGPoint)anchoredAttachmentPositionFromLayoutPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromAnchoredAttachmentPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromInlineAttachmentPosition:(struct CGPoint)arg1;
@end

@protocol TSWPOffscreenColumn <NSObject>
@property(readonly, nonatomic) unsigned long long nextWidowPullsDownFromCharIndex;
@property(readonly, nonatomic) struct _NSRange anchoredRange;
@property(readonly, nonatomic) unsigned long long startAnchoredCharIndex;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) unsigned long long startCharIndex;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id <TSWPLayoutTarget>)arg2 removeFootnoteLayoutCount:(unsigned long long)arg3 removeAutoNumberFootnoteCount:(unsigned long long)arg4;
@end

@protocol TSWPReplaceAction <NSObject>
- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(TSWPStorage *)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(void (^)(TSWPSelection *, NSString *))arg4;
@end

@protocol TSWPSection
- (TSWPStorage *)parentStorage;
- (void)setParentStorage:(TSWPStorage *)arg1;
@end

@protocol TSWPShapeLayoutDelegate
- (void)shapeLayoutDidChangeContainedStorage:(TSWPShapeLayout *)arg1;
- (_Bool)shapeLayoutShouldUpdateInstructionalText:(TSWPShapeLayout *)arg1;
@end

@protocol TSWPStorageObserver
- (void)storage:(TSWPStorage *)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
@end

@protocol TSWPStorageParent
@property(readonly, nonatomic) long long contentWritingDirection;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
@end

@protocol TSWPStyleProvider <NSObject>
- (TSWPParagraphStyle *)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;

@optional
@property(readonly, nonatomic) _Bool supportsBoldItalicUnderlineShortcuts;
@end

@protocol TSWPTextDelegate
@property(readonly, nonatomic) double maxWidthForChildren;
- (TSWPPadding *)padding;
- (int)verticalAlignment;

@optional
- (_Bool)forceWesternLineBreaking;
@end

@protocol TSWPTextEditingHostLayout <NSObject>
@property(retain, nonatomic) TSWPShapeInfo *editingShape;
@end

@protocol TSWPTextEditingHostRep <NSObject>
- (void)tswpTextEditingDidEndEditing:(TSWPTextEditing *)arg1;
@end

@protocol TSWPTextSource <NSObject>
- (unsigned long long)storageLength;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (TSWPCharacterStyle *)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (TSWPParagraphStyle *)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (TSWPAttachment *)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (TSWPAttachment *)attachmentAtCharIndex:(unsigned long long)arg1;
- (TSWPFootnoteReferenceAttachment *)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (NSArray *)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange)arg2;
- (TSWPSmartField *)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (NSString *)string;
- (unsigned long long)length;

@optional
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (void)enumerateWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(void (^)(id, struct _NSRange, _Bool *))arg3;
- (void)enumerateSmartFieldsWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(void (^)(id, struct _NSRange, _Bool *))arg3;
- (NSString *)substringWithRange:(struct _NSRange)arg1;
@end

@protocol TSWPTextStatisticsTracking <NSObject>
- (TSWPTextStatistics *)statistics;
- (void)incrementallyUpdateStatisticsUntil:(NSDate *)arg1;
- (void)tearDown;
- (id)initWithController:(id <TSWPStatisticsControlling>)arg1 andObject:(id)arg2;
@end

@protocol TSWPTextWrap
- (double)nextUnobstructedSpanStartingAt:(struct CGRect)arg1 wrappableAttachments:(NSArray *)arg2 userInfo:(id)arg3;
- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(NSArray *)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)beginWrappingToColumn:(TSWPColumn *)arg1 target:(TSDLayout<TSWPLayoutTarget> *)arg2 hasWrapables:(_Bool *)arg3;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

__attribute__((visibility("hidden")))
@interface GQDAffineGeometry : NSObject <GQDNameMappable>
{
    struct CGSize mNaturalSize;
    struct CGSize mSize;
    _Bool mSizesLocked;
    _Bool mAspectRatioLocked;
    struct CGPoint mPosition;
    float mAngle;
    _Bool mHorizontalFlip;
    _Bool mVerticalFlip;
    float mShearXAngle;
    float mShearYAngle;
}

+ (struct CGRect)boundsOfTransformedRect:(struct CGRect)arg1 transform:(id)arg2;
+ (void)transformRect:(struct CGRect)arg1 transform:(id)arg2 upperLeft:(struct CGPoint *)arg3 lowerLeft:(struct CGPoint *)arg4 lowerRight:(struct CGPoint *)arg5 upperRight:(struct CGPoint *)arg6;
+ (const struct StateSpec *)stateForReading;
- (id).cxx_construct;
- (struct CGAffineTransform)transformHasVFlip:(_Bool)arg1 vFlip:(_Bool)arg2 hasHFlip:(_Bool)arg3 hFlip:(_Bool)arg4;
- (struct CGAffineTransform)transform;
- (struct CGRect)naturalBounds;
- (struct CGPoint)nonrotatedPosition;
- (struct CGSize)sizeOfBoundingBox;
- (void)setShearYAngle:(float)arg1;
- (float)shearYAngle;
- (void)setShearXAngle:(float)arg1;
- (float)shearXAngle;
- (void)setVerticalFlip:(_Bool)arg1;
- (_Bool)verticalFlip;
- (void)setHorizontalFlip:(_Bool)arg1;
- (_Bool)horizontalFlip;
- (void)setAngle:(float)arg1;
- (float)angle;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)position;
- (void)setAspectRatioLocked:(_Bool)arg1;
- (_Bool)aspectRatioLocked;
- (void)setSizesLocked:(_Bool)arg1;
- (_Bool)sizesLocked;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setNaturalSize:(struct CGSize)arg1;
- (struct CGSize)naturalSize;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBezierPath : GQDPath <GQDNameMappable>
{
    struct CGPath *mPath;
    char *mPathStr;
    _Bool mHasVFlip;
    _Bool mVFlip;
    _Bool mHasHFlip;
    _Bool mHFlip;
}

+ (struct __CFString *)createCFStringFromPath:(struct CGPath *)arg1;
+ (const struct StateSpec *)stateForReading;
- (_Bool)horizontalFlip;
- (_Bool)verticalFlip;
- (_Bool)hasHorizontalFlip;
- (_Bool)hasVerticalFlip;
- (struct CGPath *)createBezierPath;
- (char *)pathStr;
- (struct CGPath *)path;
- (_Bool)isRectangular;
- (void)dealloc;
- (id)initWithPathString:(const char *)arg1;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBGAbstractSlide : NSObject
{
    GQDSStylesheet *mStylesheet;
    GQDSStyle *mSlideStyle;
    GQDBGTitlePlaceholder *mTitlePlaceholder;
    GQDBGBodyPlaceholder *mBodyPlaceholder;
    GQDBGObjectPlaceholder *mObjectPlaceholder;
    GQDBGSlideNumberPlaceholder *mSlideNumberPlaceholder;
    _Bool mHidden;
    char *mID;
    _Bool mCallGenerator;
}

- (int)readAttributesForSlide:(struct _xmlTextReader *)arg1;
- (char *)ID;
- (_Bool)isHidden;
- (id)stylesheet;
- (id)slideStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDBGBodyPlaceholder : GQDBGPlaceholder <GQDNameMappable>
{
    GQDWPLayoutFrame *mFrame;
}

+ (const struct StateSpec *)stateForReading;
- (_Bool)isBlank;
- (id)layoutFrame;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBGMasterSlide : GQDBGAbstractSlide
{
}

@end

__attribute__((visibility("hidden")))
@interface GQDBGObjectPlaceholder : GQDBGPlaceholder <GQDNameMappable>
{
    char *mContentType;
    GQDDrawable *mDrawable;
}

+ (const struct StateSpec *)stateForReading;
- (id)drawable;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBGPlaceholder : GQDDrawable
{
    GQDSStyle *mStyle;
    _Bool mIsVisible;
}

- (_Bool)isVisible;
- (id)placeholderStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDBGPresentation : GQDRoot
{
    struct __CFArray *mThemes;
    struct CGSize mSlideSize;
}

+ (id)parseNumberOutOfBasename:(id)arg1 returningNumber:(int *)arg2;
+ (struct _xmlNs *)appNamespace;
+ (void)initialize;
- (id).cxx_construct;
- (void)initializeAppBundleResourcesUrl:(struct __CFURL *)arg1;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 fileUrl:(struct __CFURL *)arg3;
- (id)colorForMissingAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2;
- (void)loadAppBundleResourceToColorMap;
- (struct CGSize)slideSize;
- (void)addTheme:(id)arg1;
- (struct __CFArray *)themes;
- (void)dealloc;
- (id)init;
- (struct __CFString *)createUpgradedAppBundleResourcePath:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDBGSlide : GQDBGAbstractSlide
{
    GQDBGMasterSlide *mMaster;
    GQDWPLayoutFrame *mNoteFrame;
}

- (id)noteFrame;
- (id)master;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQDBGSlideNumberPlaceholder : GQDBGPlaceholder <GQDNameMappable>
{
}

+ (const struct StateSpec *)stateForReading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBGTheme : NSObject
{
    GQDSStylesheet *mStylesheet;
    struct __CFArray *mMasterSlides;
}

- (id)stylesheet;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDBGTitlePlaceholder : GQDBGPlaceholder <GQDNameMappable>
{
    GQDWPLayoutFrame *mFrame;
}

+ (const struct StateSpec *)stateForReading;
- (_Bool)isBlank;
- (id)layoutFrame;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDChartModel : NSObject
{
    struct __CFArray *mChartData;
    struct __CFArray *mColumnNames;
    struct __CFArray *mRowNames;
    struct __CFDictionary *mPropertyBag;
    long long mDirection;
    struct __CFString *mTitle;
    struct __CFString *mCatagoryTitle;
    struct __CFString *mValueTitle;
    struct __CFString *mValue2Title;
    struct __CFBundle *mProcessorBundle;
    _Bool mIsFormulaChart;
}

- (void)dealloc;
- (_Bool)isFormulaChart;
- (struct __CFString *)value2Title;
- (struct __CFString *)valueTitle;
- (struct __CFString *)catagoryTitle;
- (struct __CFString *)title;
- (long long)direction;
- (_Bool)hasFloatValueForProperty:(struct __CFString *)arg1 forSeriesAtIndex:(long long)arg2 value:(float *)arg3;
- (_Bool)hasIntValueForProperty:(struct __CFString *)arg1 forSeriesAtIndex:(long long)arg2 value:(int *)arg3;
- (_Bool)hasStringValueForProperty:(struct __CFString *)arg1 forSeriesAtIndex:(long long)arg2 value:(const struct __CFString **)arg3;
- (_Bool)hasValueForProperty:(struct __CFString *)arg1 forSeriesAtIndex:(long long)arg2 value:(const void **)arg3;
- (struct __CFDictionary *)propertiesForSeriesAtIndex:(long long)arg1;
- (struct __CFArray *)seriesArray;
- (struct __CFDictionary *)propertyBag;
- (struct __CFArray *)rowNames;
- (struct __CFArray *)columnNames;
- (struct __CFArray *)chartData;
- (void)setProcessorBundle:(struct __CFBundle *)arg1;
- (void)transpose;

@end

__attribute__((visibility("hidden")))
@interface GQDChart : GQDGraphic
{
    GQDChartLegend *mLegend;
    _Bool mIsLegendRetained;
    GQDChartModel *mModel;
    GQDSStyle *mStyle;
    long long mType;
}

+ (const struct StateSpec *)stateForReading;
- (void)setLegend:(id)arg1;
- (long long)type;
- (id)graphicStyle;
- (id)style;
- (id)model;
- (id)legend;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDChartLegend : GQDGraphic
{
    GQDChart *mChart;
    _Bool mIsChartRetained;
}

+ (const struct StateSpec *)stateForReading;
- (id)graphicStyle;
- (id)chart;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDClassNameMap : NSObject
{
}

+ (Class)classForName:(const char *)arg1 inRootType:(Class)arg2;
+ (void)registerGlobalClass:(Class)arg1 name:(const char *)arg2;
+ (void)registerClass:(Class)arg1 forName:(const char *)arg2 inRootType:(Class)arg3;
+ (void)initialize;
+ (void)registerDefaults;

@end

__attribute__((visibility("hidden")))
@interface GQDColor : NSObject <GQDNameMappable>
{
    double mRed;
    double mGreen;
    double mBlue;
    double mAlpha;
}

+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (id)blackColor;
+ (const struct StateSpec *)stateForReading;
+ (id)cmykColorFromReader:(struct _xmlTextReader *)arg1;
+ (id)whiteColorFromReader:(struct _xmlTextReader *)arg1 calibrated:(_Bool)arg2;
+ (id)rgbColorFromReader:(struct _xmlTextReader *)arg1 calibrated:(_Bool)arg2;
+ (void)readColorFromProcessor:(id)arg1 reader:(struct _xmlTextReader *)arg2;
- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (double)alphaComponent;
- (double)blueComponent;
- (double)greenComponent;
- (double)redComponent;
- (void)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
@property(readonly, copy) NSString *description;
- (id)initWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (int)htmlBlue;
- (int)htmlGreen;
- (int)htmlRed;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDBezierLine : NSObject
{
    struct CGPoint mUpper;
    struct CGPoint mLower;
    _Bool isOutsideToLeft;
}

- (id).cxx_construct;

@end

__attribute__((visibility("hidden")))
@interface GQDDrawable : NSObject <GQWrapPointGenerator>
{
    GQDAffineGeometry *mGeometry;
    struct __CFURL *mUrl;
    char *mUid;
    GQDBezierPath *mWrapPath;
    GQDAffineGeometry *mWrapGeometry;
    set_80ec8016 *mInnerWrapPoints;
    _Bool mHasPagesOrder;
    long long mPagesOrder;
}

- (int)pagesOrder;
- (_Bool)hasPagesOrder;
- (struct CGPath *)createBezierPath;
- (void)clearWrapPoints;
- (vector_dadce35e *)createListOfWrapPointsAlongY:(float)arg1 minX:(float)arg2 maxX:(float)arg3 zIndex:(int)arg4;
- (const set_80ec8016 *)wrapPoints;
- (void)addWrapPoint:(id)arg1;
- (int)collectWrapPointsForState:(id)arg1 graphicStyle:(id)arg2;
- (const char *)uid;
- (struct __CFString *)urlString;
- (struct __CFURL *)url;
- (id)geometry;
- (void)dealloc;
- (void)collectWrapPoints:(id)arg1 forPath:(struct CGPath *)arg2 context:(struct FindLinesContext *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWrapPoint : NSObject
{
    struct CGPoint mPoint;
    float mDistance;
    GQDDrawable *mDrawable;
    int mFlowType;
    int mZIndex;
}

- (id).cxx_construct;
- (int)zIndex;
- (long long)comparePoint:(id)arg1;
- (id)initWithX:(float)arg1 y:(float)arg2 flowType:(int)arg3 drawable:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface GQDGraphic : GQDDrawable
{
    GQDSStyle *mGraphicStyle;
}

- (id)graphicStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDGroup : GQDDrawable <GQDNameMappable>
{
    struct __CFArray *mDrawables;
    GQDWPExternalTextWrap *mExternalTextWrap;
}

+ (const struct StateSpec *)stateForReading;
- (id)externalTextWrap;
- (struct __CFArray *)drawables;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDImageBinary : NSObject
{
    struct CGSize mSize;
    struct __CFString *mPath;
    struct __CFURL *mAbsoluteUrl;
    int mResourceType;
}

- (id).cxx_construct;
- (struct __CFString *)relativePath;
- (int)resourceType;
- (struct __CFURL *)createAbsoluteUrlForState:(id)arg1;
- (struct CGSize)size;
- (void)dealloc;
- (int)readDataAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDLine : GQDGraphic <GQDNameMappable>
{
}

+ (const struct StateSpec *)stateForReading;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDLSDocument : GQDRoot
{
    GQDSStylesheet *mStylesheet;
}

+ (struct _xmlNs *)appNamespace;
- (void)initializeAppBundleResourcesUrl:(struct __CFURL *)arg1;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 fileUrl:(struct __CFURL *)arg3;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (void)dealloc;
- (struct __CFString *)createUpgradedAppBundleResourcePath:(struct __CFString *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDMedia : GQDGraphic <GQDNameMappable>
{
    GQDFilteredImage *mFilteredImage;
    GQDAffineGeometry *mCropGeometry;
    GQDImageBinary *mOriginalImageBinary;
    GQDPath *mMaskingShapePath;
    struct CGPath *mAlphaMaskBezier;
}

+ (const struct StateSpec *)stateForReading;
- (struct CGPath *)alphaMaskBezier;
- (id)maskingShapePath;
- (id)cropGeometry;
- (id)imageBinary;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDRFrame : GQDRStroke
{
}

+ (const struct StateSpec *)stateForReading;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQDRGradient : NSObject <GQDNameMappable>
{
    struct __CFArray *mStops;
    int mType;
    float mOpacity;
    float mAngle;
    struct CGPoint mStart;
    struct CGPoint mEnd;
}

+ (const struct StateSpec *)stateForReading;
- (id).cxx_construct;
- (struct CGPoint)end;
- (struct CGPoint)start;
- (float)angle;
- (float)opacity;
- (int)type;
- (struct __CFArray *)stops;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDRGradientStop : NSObject
{
    float mFraction;
    GQDColor *mColor;
}

+ (const struct StateSpec *)stateForReading;
- (id)color;
- (float)fraction;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDRoot : NSObject
{
    struct __CFDictionary *mUidToObjectMap;
    _Bool mAppBundleColorMapLoaded;
    struct __CFDictionary *mAppBundleResourceToColorMap;
    _Bool mAppBundleResourcesUrlInitialized;
    struct __CFURL *mAppBundleResourcesUrl;
    _Bool mIsOldAssetNameMapInitialized;
    struct __CFDictionary *mOldAssetNameMap;
    int mAppBundleVersion;
    unsigned long long mDocVersion;
}

+ (struct _xmlNs *)appNamespace;
- (_Bool)appBundleCanProcessCurrentDocVersion;
- (unsigned long long)documentReleaseVersion;
- (_Bool)readDocumentVersion:(struct _xmlTextReader *)arg1 isTooNew:(_Bool *)arg2;
- (_Bool)readDocumentVersion:(struct _xmlTextReader *)arg1;
- (void)loadAppBundleResourceToColorMap;
- (void)initializeAppBundleResourcesUrl:(struct __CFURL *)arg1;
- (struct __CFURL *)appBundleResourcesUrl:(struct __CFURL *)arg1;
- (id)colorForMissingAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 fileUrl:(struct __CFURL *)arg3;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 fileExists:(_Bool *)arg3 fileUrl:(struct __CFURL *)arg4;
- (_Bool)includeStyleWithIdentifier:(const char *)arg1 parentIdentifier:(const char *)arg2 uid:(const char *)arg3;
- (void)forgetAboutObject:(id)arg1 withXmlUid:(const char *)arg2;
- (id)objectWithXmlUid:(const char *)arg1;
- (const char *)addIdentifiedObject:(id)arg1 fromCurrentNode:(struct _xmlTextReader *)arg2;
- (id)uuid;
- (_Bool)addObject:(id)arg1 withOwnedXmlUid:(const char *)arg2;
- (Class)classForName:(const char *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQDRStroke : NSObject <GQDNameMappable>
{
    float mMiterLimit;
    float mWidth;
    int mCap;
    int mJoin;
    GQDColor *mColor;
    GQDRStrokePattern *mPattern;
}

+ (const struct StateSpec *)stateForReading;
- (id)pattern;
- (id)color;
- (int)join;
- (int)cap;
- (float)width;
- (float)miterLimit;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDRStrokePattern : NSObject
{
    int mType;
}

+ (id)solidPattern;
- (int)type;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDScalarPath : GQDPath
{
    int mType;
    double mScalar;
    struct CGSize mSize;
}

- (id).cxx_construct;
- (struct CGPath *)createBezierPath;
- (struct CGSize)size;
- (int)type;
- (double)scalar;
- (_Bool)isRect;
- (_Bool)isRectangular;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDShape : GQDGraphic <GQDNameMappable>
{
    GQDPath *mPath;
    GQDWPLayoutFrame *mLayoutFrame;
}

+ (const struct StateSpec *)stateForReading;
- (struct CGPath *)createBezierPath;
- (id)path;
- (_Bool)isRectangularAndAxisAlignedToAngle:(float)arg1;
- (_Bool)isBlank;
- (id)layoutFrame;
- (void)dealloc;
- (id)initWithGraphic:(id)arg1 path:(id)arg2 geometry:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDSLPublication : GQDRoot
{
    struct CGSize mPageSize;
    GQDSLPageMargins *mPageMargins;
    GQDSStylesheet *mStylesheet;
    _Bool mHasBody;
    _Bool mIsOldTemplateNameMapInitialized;
    struct __CFDictionary *mOldTemplateNameMap;
    _Bool mShowOutliner;
    _Bool mHasHeaders;
    _Bool mHasFooters;
}

+ (struct _xmlNs *)appNamespace;
- (id).cxx_construct;
- (_Bool)hasFooters;
- (_Bool)hasHeaders;
- (_Bool)showOutliner;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 fileUrl:(struct __CFURL *)arg3;
- (void)initializeAppBundleResourcesUrl:(struct __CFURL *)arg1;
- (_Bool)hasBody;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (void)setPageMargins:(id)arg1;
- (id)pageMargins;
- (struct CGSize)pageSize;
- (void)dealloc;
- (id)init;
- (struct __CFString *)createUpgradedPathForOldAssetPath:(struct __CFString *)arg1;
- (struct __CFArray *)createUpgradedPathComponentsFromOldTemplatePathComponents:(struct __CFArray *)arg1;
- (struct __CFString *)createFixedPathForOldAppBundleResourcePath:(struct __CFString *)arg1;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDSLPageMargins : GQDWPPadding
{
    float mHeader;
    float mFooter;
}

- (void)setRight:(float)arg1;
- (void)setLeft:(float)arg1;
- (void)setBottom:(float)arg1;
- (void)setTop:(float)arg1;
- (void)setFooter:(float)arg1;
- (float)footer;
- (void)setHeader:(float)arg1;
- (float)header;

@end

__attribute__((visibility("hidden")))
@interface GQDSStyle : NSObject <GQDNameMappableWithDefault>
{
    GQDSStyle *mParent;
    struct GQDSMap *mPropertyMap;
}

+ (int)styleTypeForNodeName:(const char *)arg1;
+ (id)createReplacementForMissingObject:(struct _xmlTextReader *)arg1 processor:(id)arg2;
+ (struct GQDSMap *)defaultMapForStyleType:(int)arg1;
+ (const struct StateSpec *)stateForReading;
+ (id)createReplacementForMissingStyleOfType:(int)arg1;
- (_Bool)overridesObjectProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasValueForObjectProperty:(int)arg1 value:(id *)arg2 wasOverriddenWithNull:(_Bool *)arg3;
- (_Bool)hasValueForObjectProperty:(int)arg1 value:(id *)arg2;
- (id)valueForObjectProperty:(int)arg1;
- (_Bool)overridesDoubleProperty:(int)arg1 value:(double *)arg2;
- (_Bool)hasValueForDoubleProperty:(int)arg1 value:(double *)arg2 wasOverriddenWithNull:(_Bool *)arg3;
- (_Bool)hasValueForDoubleProperty:(int)arg1 value:(double *)arg2;
- (double)valueForDoubleProperty:(int)arg1;
- (_Bool)overridesFloatProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasValueForFloatProperty:(int)arg1 value:(float *)arg2 wasOverriddenWithNull:(_Bool *)arg3;
- (_Bool)hasValueForFloatProperty:(int)arg1 value:(float *)arg2;
- (float)valueForFloatProperty:(int)arg1;
- (_Bool)overridesIntProperty:(int)arg1 value:(int *)arg2;
- (_Bool)hasValueForIntProperty:(int)arg1 value:(int *)arg2 wasOverriddenWithNull:(_Bool *)arg3;
- (_Bool)hasValueForIntProperty:(int)arg1 value:(int *)arg2;
- (int)valueForIntProperty:(int)arg1;
- (_Bool)overridesBoolProperty:(int)arg1 value:(_Bool *)arg2;
- (_Bool)hasValueForBoolProperty:(int)arg1 value:(_Bool *)arg2 wasOverriddenWithNull:(_Bool *)arg3;
- (_Bool)hasValueForBoolProperty:(int)arg1 value:(_Bool *)arg2;
- (_Bool)valueForBoolProperty:(int)arg1;
- (void)setParent:(id)arg1;
- (id)parent;
- (void)setPropertyMap:(struct GQDSMap *)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDSStyleProperties : NSObject
{
}

+ (int)propertyFromString:(const char *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDSStylesheet : NSObject
{
    GQDRoot *mRoot;
    GQDSStylesheet *mParent;
    struct __CFDictionary *mIdentifiedStyles;
    struct __CFArray *mStylesNeedingParentResolutionInParent;
    struct __CFArray *mStylesNeedingParentResolution;
}

- (struct __CFArray *)retainedArrayOfIdentifiedStyles;
- (void)resolveStyleParents;
- (void)addStyle:(id)arg1 needingParentResolution:(const char *)arg2 resolveInParent:(_Bool)arg3;
- (id)styleWithXmlUid:(const char *)arg1;
- (id)styleWithIdentifier:(const char *)arg1;
- (_Bool)addStyle:(id)arg1 withOwnedXmlUid:(char *)arg2;
- (void)addStyle:(id)arg1 withOwnedIdentifier:(char *)arg2;
- (id)parent;
- (void)dealloc;
- (id)initWithRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDSParentResolutionEntry : NSObject
{
    char *mParentIdentifier;
    GQDSStyle *mStyle;
}

- (const char *)parentIdentifier;
- (id)style;
- (void)dealloc;
- (id)initWithStyle:(id)arg1 parentIdentifier:(const char *)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDTBooleanCell : GQDTNumberCell
{
    struct __CFBundle *mProcessorBundle;
}

- (struct __CFString *)createStringValue;
- (_Bool)boolValue;
- (void)setProcessorBundle:(struct __CFBundle *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDTCell : NSObject
{
    unsigned short mColumnIndex;
    unsigned short mRowIndex;
    unsigned short mColumnSpan;
    unsigned short mRowSpan;
    GQDSStyle *mStyle;
}

- (void)incrementColumnSpan;
- (int)readBaseAttributesForBaseCell:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (int)readAttributesForBaseTabularCell:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (int)readAttributesForBaseCell:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (void)setCellStyle:(id)arg1;
- (id)cellStyle;
- (unsigned short)rowSpan;
- (unsigned short)columnSpan;
- (unsigned short)rowIndex;
- (unsigned short)columnIndex;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDTCheckboxCell : GQDTNumberCell
{
}

- (_Bool)boolValue;

@end

__attribute__((visibility("hidden")))
@interface GQDTDateCell : GQDTCell
{
    struct __CFDate *mDate;
    GQDTComputedFormatSpec *mComputedFormat;
}

- (struct __CFString *)createStringValue;
- (struct __CFString *)getDateFormat;
- (struct __CFDate *)date;
- (void)dealloc;
- (int)readAttributesForDateCell:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDTDCell : GQDTDateCell
{
}

- (struct __CFString *)getDateFormat;

@end

__attribute__((visibility("hidden")))
@interface GQDTexturedImageFill : NSObject <GQDNameMappable>
{
    int mTechnique;
    GQDColor *mColor;
    GQDFilteredImage *mFilteredImage;
}

+ (const struct StateSpec *)stateForReading;
- (id)imageBinary;
- (id)color;
- (int)technique;
- (void)dealloc;
- (void)setColor:(id)arg1;
- (void)invalidateFilteredImage;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUSimpleURLProtocol : NSURLProtocol
{
}

+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)setResourcesDictionary:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

__attribute__((visibility("hidden")))
@interface GQDTFormulaCell : GQDTCell
{
    GQDTCell *mResultCell;
}

- (id)resultCell;
- (void)dealloc;
- (void)setResultCell:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDTNumberCell : GQDTCell
{
    double mValue;
    GQDTComputedFormatSpec *mComputedFormat;
}

- (int)readAttributesForNCell:(struct _xmlTextReader *)arg1;
- (int)readAttributesForNumberCell:(struct _xmlTextReader *)arg1;
- (struct __CFString *)createStringValue;
- (double)value;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDTNumberFormat : NSObject <GQDNameMappable>
{
    char *mUid;
    struct __CFString *mFormatString;
    struct __CFString *mCurrencyCode;
    long long mDecimalPlaces;
    _Bool mUseAccountingStyle;
    _Bool mShowThousandsSeparator;
    int mValueType;
    int mNegativeStyle;
    int mFractionAccuracy;
    _Bool mFormatStringRequiresSuppressionOfMinusSign;
    double mScaleFactor;
    _Bool mIsCustom;
    _Bool mRequiresFractionReplacement;
    unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;
    unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;
    unsigned short mIndexFromRightOfLastDigitPlaceholder;
    unsigned char mBase;
    unsigned short mBasePlaces;
    _Bool mBaseUsesMinusSign;
    _Bool mUseScientificFormattingAutomatically;
    _Bool mIgnoreDecimalPlacesForZeroValue;
    _Bool mIsTextFormat;
    _Bool mFormatContainsSpecialTokens;
    _Bool mFormatContainsIntegerToken;
    NSArray *mInterstitialStrings;
    NSIndexSet *mInterstitialStringInsertionIndexes;
    unsigned char mMinimumIntegerWidth;
    unsigned char mDecimalWidth;
    struct __CFString *mSuffixString;
}

+ (const struct StateSpec *)stateForReading;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(struct __CFString *)arg9;
+ (_Bool)needToSuppressMinusSignForFormatString:(struct __CFString *)arg1;
- (_Bool)useAccountingStyle;
- (int)valueType;
- (struct __CFString *)createStringFromDouble:(double)arg1;
- (id)stringFromDouble:(double)arg1;
- (_Bool)hasValidDecimalPlaces;
- (void)dealloc;
- (int)fractionAccuracy;
- (_Bool)isTextFormat;
- (_Bool)isCustom;
- (id)customNumberFormatTokens;
- (_Bool)showThousandsSeparator;
- (id)currencyCode;
- (id)formatString;
- (id)numberFormatBySettingValueType:(int)arg1;
- (id)numberFormatBySettingNegativeStyle:(int)arg1;
- (void)setUseScientificFormattingAutomatically:(_Bool)arg1;
- (id)baseStringFromDouble:(double)arg1;
- (id)fractionStringFromDouble:(double)arg1;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(struct __CFString *)arg9 scaleFactor:(double)arg10 base:(unsigned short)arg11 basePlaces:(unsigned short)arg12 baseUseMinusSign:(_Bool)arg13 isCustom:(_Bool)arg14 interstitialStrings:(id)arg15 interstitialStringInsertionIndexes:(id)arg16 indexFromRightOfLastDigitPlaceholder:(unsigned short)arg17 minimumIntegerWidth:(unsigned char)arg18 decimalWidth:(unsigned char)arg19 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg20 numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg21 isTextFormat:(_Bool)arg22 formatName:(id)arg23;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDTOverlapCell : GQDTCell
{
}

@end

__attribute__((visibility("hidden")))
@interface GQDTPopupCell : GQDTCell
{
    GQDTCell *mResultCell;
}

- (id)resultCell;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDTSpiceCell : GQDTTextCell
{
}

- (id)initWithStyle:(id)arg1 rowIndex:(unsigned short)arg2 columnIndex:(unsigned short)arg3 rowSpan:(unsigned short)arg4 columnSpan:(unsigned short)arg5 storage:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface GQDTSpiceTableModel : GQDTTableModel
{
}

+ (const struct StateSpec *)stateForReading;
- (struct __CFArray *)createSizeArrayFromPositionVector:(vector_ec52ae8c *)arg1;
- (int)setColumnWidthsFromState:(id)arg1;
- (int)setRowHeightsFromState:(id)arg1;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDTTable : GQDGraphic <GQDNameMappable>
{
    GQDTTableModel *mModel;
    GQDSStyle *mStyle;
    _Bool mIsStreamed;
}

+ (const struct StateSpec *)stateForReading;
- (int)walkTableWithGenerator:(Class)arg1 state:(id)arg2;
- (id)defaultVectorStyleForVectorType:(int)arg1;
- (_Bool)isStreamed;
- (void)setTableStyle:(id)arg1;
- (id)tableStyle;
- (void)setModel:(id)arg1;
- (id)model;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQGroupDisplayInfo : NSObject
{
    int mDisplayType;
    _Bool mIsTypeVisible;
}

@end

__attribute__((visibility("hidden")))
@interface GQDTTableModel : NSObject <GQDNameMappable>
{
    unsigned short mColumnCount;
    unsigned short mRowCount;
    struct __CFString *mName;
    _Bool mNameVisible;
    struct __CFArray *mColumnWidths;
    struct __CFArray *mRowHeights;
    struct __CFArray *mColumnVisibilities;
    struct __CFArray *mRowVisibilities;
    unsigned short mHeaderRowCount;
    unsigned short mHeaderColumnCount;
    unsigned short mFooterRowCount;
    struct __CFArray *mCells;
    struct __CFArray *mColumnGroupDisplayTypes;
    int mNumGroupLevels;
}

+ (const struct StateSpec *)stateForReading;
- (void)setNumGroupLevels:(int)arg1;
- (int)numGroupLevels;
- (unsigned short)firstVisibleColumn;
- (_Bool)hasGroupDisplayType:(unsigned short)arg1 level:(int)arg2 displayType:(int *)arg3 isTypeVisible:(_Bool *)arg4;
- (int)typeOfVectorAlongGridline:(unsigned short)arg1 offset:(unsigned short)arg2 length:(unsigned short)arg3 vertical:(_Bool)arg4;
- (unsigned short)footerRowCount;
- (unsigned short)headerColumnCount;
- (unsigned short)headerRowCount;
- (struct __CFArray *)cells;
- (id)cellAt:(unsigned short)arg1;
- (_Bool)visibilityForRow:(unsigned short)arg1;
- (_Bool)visibilityForColumn:(unsigned short)arg1;
- (float)heightForRow:(unsigned short)arg1;
- (float)widthForColumn:(unsigned short)arg1;
- (_Bool)isNameVisible;
- (struct __CFString *)name;
- (unsigned short)rowCount;
- (unsigned short)columnCount;
- (void)dealloc;
- (void)setCells:(struct __CFArray *)arg1;
- (int)addGroupLevelsFrom:(struct _xmlTextReader *)arg1;
- (int)addRowHeightFrom:(struct _xmlTextReader *)arg1;
- (int)addColumnWidthFrom:(struct _xmlTextReader *)arg1;
- (int)readAttributesForGrid:(struct _xmlTextReader *)arg1;
- (int)readAttributesForModel:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDTTextCell : GQDTCell
{
    struct __CFString *mStringValue;
    GQDWPLayoutStorage *mLayoutStorage;
}

- (id)layoutStorage;
- (struct __CFString *)stringValue;
- (void)dealloc;
- (int)readContentForTCell:(struct _xmlTextReader *)arg1;
- (int)readContentForTextCell:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWebView : GQDGraphic <GQDNameMappable>
{
    GQDImageBinary *mImageBinary;
}

+ (const struct StateSpec *)stateForReading;
- (id)imageBinary;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPAttachment : NSObject
{
    GQDDrawable *mDrawable;
}

- (id)drawable;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPAttachmentRef : GQDWPAttachment
{
    GQDRoot *mRoot;
    char *mUID;
}

- (id)drawable;
- (void)dealloc;
- (id)initWithUID:(char *)arg1 root:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPAutoNumber : NSObject
{
    int mType;
    struct __CFString *mValue;
}

- (struct __CFString *)value;
- (int)type;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPBlockList : NSObject
{
    struct __CFArray *mChildren;
}

- (_Bool)isBlank;
- (struct __CFArray *)children;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPBodyStorage : GQDWPStorage
{
    GQDWPLayoutStorage *mFootnotes;
}

- (void)dealloc;
- (struct __CFArray *)body;
- (id)footnotes;

@end

__attribute__((visibility("hidden")))
@interface GQDWPBookmark : GQDWPInlineList
{
    struct __CFString *mName;
    _Bool mRanged;
    _Bool mHidden;
}

- (_Bool)isHidden;
- (_Bool)isRanged;
- (struct __CFString *)name;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPColumn : NSObject
{
    long long mIndex;
    float mWidth;
    float mSpacing;
    _Bool mHasSpacing;
}

+ (const struct StateSpec *)stateForReading;
- (float)spacing;
- (_Bool)hasSpacing;
- (float)width;
- (long long)index;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPColumns : NSObject <GQDNameMappable>
{
    struct __CFArray *mColumns;
    _Bool mEqualColumns;
}

+ (const struct StateSpec *)stateForReading;
- (_Bool)equalColumns;
- (struct __CFArray *)columns;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPExternalTextWrap : NSObject <GQDNameMappable>
{
    _Bool mFloatingWrapEnabled;
    _Bool mInlineWrapEnabled;
    float mMargin;
    float mAlphaThreshold;
    int mWrapStyle;
    int mWrapDirection;
    int mFloatingWrapType;
    int mAttachmentWrapType;
}

+ (const struct StateSpec *)stateForReading;
- (int)attachmentWrapType;
- (int)floatingWrapType;
- (int)wrapDirection;
- (int)wrapStyle;
- (float)alphaThreshold;
- (float)margin;
- (_Bool)inlineWrapEnabled;
- (_Bool)floatingWrapEnabled;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPFootnote : NSObject
{
    struct __CFString *mValue;
}

- (struct __CFString *)value;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPFootnoteMark : NSObject
{
    struct __CFString *mValue;
}

- (struct __CFString *)value;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPInlineList : GQDWPTextList
{
}

@end

__attribute__((visibility("hidden")))
@interface GQDWPLayout : GQDWPBlockList
{
    GQDSStyle *mLayoutStyle;
}

- (id)layoutStyle;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPLayoutFrame : NSObject
{
    char *mStyleRef;
    GQDSStyle *mStyle;
    GQDWPLayoutStorage *mStorage;
    unsigned int mTextScale;
}

- (_Bool)isBlank;
- (unsigned int)textScale;
- (id)storage;
- (id)layoutStyle;
- (void)dealloc;
- (void)resolveStyleRef;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPLayoutStorage : GQDWPStorage
{
}

- (struct __CFArray *)body;

@end

__attribute__((visibility("hidden")))
@interface GQDWPHeaderFooterStorage : GQDWPLayoutStorage
{
    struct __CFString *mName;
}

- (struct __CFString *)name;
- (void)dealloc;
- (id)initWithName:(struct __CFString *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPLineSpacing : NSObject <GQDNameMappable>
{
    int mMode;
    float mAmount;
}

+ (const struct StateSpec *)stateForReading;
- (float)amount;
- (int)mode;
- (id)init;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUWebViewWaiter : NSObject
{
}

+ (id)waiter;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)waitForWebViewToFinishLoading:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQUWebView : WebView
{
    _Bool mHasAttachments;
}

+ (void)disableFrameScrollingRecursively:(id)arg1;
+ (id)_createWebPreferencesForRendering;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (id)_urlToDownloadFromURL:(id)arg1;
- (_Bool)_validateURL:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)loadDataSynchronously:(id)arg1 textEncodingName:(id)arg2 resources:(id)arg3;
- (void)setHasAttachments:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPLink : GQDWPInlineList
{
    GQDSStyle *mCharStyle;
    struct __CFString *mHref;
}

- (struct __CFString *)href;
- (id)characterStyle;
- (void)dealloc;
- (int)readStyleFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPListLabelGeometry : NSObject <GQDNameMappable>
{
    float mScale;
    float mBaselineOffset;
    _Bool mScaleWithText;
    int mLabelAlignment;
}

+ (const struct StateSpec *)stateForReading;
- (int)labelAlignment;
- (_Bool)scaleWithText;
- (float)baselineOffset;
- (float)scale;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPListLabelTypeInfo : NSObject <GQDNameMappable>
{
    int mType;
    GQDWPTextLabel *mLabel;
}

+ (const struct StateSpec *)stateForReading;
- (id)label;
- (int)type;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPPadding : NSObject <GQDNameMappable>
{
    float mTop;
    float mLeft;
    float mBottom;
    float mRight;
}

+ (const struct StateSpec *)stateForReading;
- (float)right;
- (float)bottom;
- (float)left;
- (float)top;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPPageStart : NSObject
{
    long long mIndex;
}

- (long long)index;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPParagraph : GQDWPInlineList
{
    GQDSStyle *mParaStyle;
    long long mListLevel;
    _Bool mRestartList;
    _Bool mContinue;
    _Bool mIsHidden;
}

- (_Bool)isHidden;
- (_Bool)isBlank;
- (_Bool)cont;
- (_Bool)restartList;
- (long long)listLevel;
- (id)paragraphStyle;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPSection : NSObject
{
    struct __CFArray *mChildren;
    GQDSStyle *mStyle;
}

- (id)style;
- (struct __CFArray *)children;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDWPSpan : GQDWPTextList
{
    GQDSStyle *mCharStyle;
}

- (id)characterStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPStorage : NSObject
{
    GQDSStylesheet *mStylesheet;
    struct __CFArray *mBody;
    struct __CFArray *mAttachments;
}

- (struct __CFArray *)attachments;
- (id)stylesheet;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTab : NSObject <GQDNameMappable>
{
    float mPosition;
    int mAlignment;
    struct __CFString *mLeader;
}

+ (const struct StateSpec *)stateForReading;
- (struct __CFString *)leader;
- (int)alignment;
- (float)position;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPText : NSObject
{
    char *mContent;
}

- (_Bool)isBlank;
- (const char *)content;
- (void)dealloc;
- (id)initWithContent:(const char *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTextLabel : NSObject
{
    struct __CFString *mFormat;
    int mLabelType;
    int mFirst;
}

- (int)first;
- (int)labelType;
- (struct __CFString *)format;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTextList : NSObject
{
    struct __CFArray *mChildren;
}

- (_Bool)isBlank;
- (void)setChildren:(struct __CFArray *)arg1;
- (struct __CFArray *)children;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTextMarker : NSObject
{
    int mType;
}

- (int)type;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTocContent : NSObject
{
    struct __CFArray *mChildren;
}

- (struct __CFArray *)children;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDWPTocEmpty : GQDWPBlockList
{
}

@end

__attribute__((visibility("hidden")))
@interface GQDWPTocEntry : GQDWPBlockList
{
    struct __CFString *mBookmark;
}

- (struct __CFString *)bookmark;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHBodyStorage : NSObject <GQBodyStorageGenerator>
{
}

+ (int)handleTocEntry:(id)arg1 state:(id)arg2;
+ (int)handleTocContent:(id)arg1 state:(id)arg2;
+ (int)handleBodyStorage:(id)arg1 state:(id)arg2;
+ (int)handleContainerHint:(id)arg1 state:(id)arg2;
+ (int)handleFootnotes:(id)arg1 state:(id)arg2;
+ (int)handleLayout:(id)arg1 state:(id)arg2;
+ (int)handlePageStart:(id)arg1 state:(id)arg2;
+ (int)handleSection:(id)arg1 state:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHBounds : NSObject
{
}

+ (void)mapBounds:(struct CGRect)arg1 angle:(float)arg2 srcGraphicStyle:(id)arg3 style:(id)arg4 state:(id)arg5;
+ (void)mapPosition:(struct CGPoint)arg1 srcGraphicStyle:(id)arg2 style:(id)arg3 state:(id)arg4;
+ (void)mapSize:(struct CGSize)arg1 angle:(float)arg2 flipX:(_Bool)arg3 flipY:(_Bool)arg4 srcGraphicStyle:(id)arg5 style:(id)arg6 state:(id)arg7;
+ (void)mapSize:(struct CGSize)arg1 angle:(float)arg2 srcGraphicStyle:(id)arg3 style:(id)arg4 state:(id)arg5;
+ (void)setTransformOriginToZeroInStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHBulletState : NSObject
{
    struct __CFArray *mLevels;
    int mCurrentLevel;
}

+ (struct __CFString *)createLabelStr:(int)arg1 number:(int)arg2;
- (int)currentLevel;
- (void)setCurrentLevel:(int)arg1;
- (struct __CFString *)createTieredNumberStringForLevel:(int)arg1;
- (id)listStyleAtLevel:(int)arg1;
- (void)setListStyle:(id)arg1 atLevel:(int)arg2;
- (int)textIndentForLevel:(int)arg1;
- (void)setTextIndent:(int)arg1 level:(int)arg2;
- (int)bulletIndentForLevel:(int)arg1;
- (void)setBulletIndent:(int)arg1 level:(int)arg2;
- (struct __CFString *)bulletChar:(int)arg1;
- (void)setBulletChar:(struct __CFString *)arg1 level:(int)arg2;
- (int)labelTypeAtLevel:(int)arg1;
- (void)setLabelType:(int)arg1 level:(int)arg2;
- (int)numberAtLevel:(int)arg1;
- (_Bool)hasNumberAtLevel:(int)arg1;
- (void)setNumber:(int)arg1 level:(int)arg2;
- (int)typeAtlevel:(int)arg1;
- (void)setType:(int)arg1 level:(int)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQHBulletInfo : NSObject
{
    int mType;
    int mBulletIndent;
    int mTextIndent;
    struct __CFString *mChar;
    _Bool mHasNumber;
    int mNumber;
    int mLabelType;
    GQDSStyle *mStyle;
}

- (id)style;
- (void)setStyle:(id)arg1;
- (int)textIndent;
- (void)setTextIndent:(int)arg1;
- (int)bulletIndent;
- (void)setBulletIndent:(int)arg1;
- (struct __CFString *)createTierStringNumber;
- (struct __CFString *)bulletChar;
- (void)setBulletChar:(struct __CFString *)arg1;
- (int)type;
- (void)setType:(int)arg1;
- (int)labelType;
- (void)setLabelType:(int)arg1;
- (void)setHasNumber:(_Bool)arg1;
- (_Bool)hasNumber;
- (int)number;
- (void)setNumber:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQHDrawable : NSObject <GQDrawablesGenerator>
{
}

+ (Class)beginTable:(id)arg1;
+ (int)endDrawables:(id)arg1;
+ (int)handleInlineDrawable:(id)arg1 htmlState:(id)arg2;
+ (int)handleFloatingDrawable:(id)arg1 htmlState:(id)arg2;
+ (void)doneGeneratingDrawable:(id)arg1 htmlState:(id)arg2;
+ (void)aboutToGenerateDrawable:(id)arg1 htmlState:(id)arg2;
+ (int)handleDrawable:(id)arg1 state:(id)arg2;
+ (int)beginDrawables:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHGeneratorLookup : NSObject
{
}

+ (Class)generatorForApplication:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHGraphicStyle : GQHTextBox
{
}

+ (int)strokeWidth:(id)arg1;
+ (void)mapStroke:(id)arg1 toBorderType:(int)arg2 style:(id)arg3 state:(id)arg4;
+ (const char *)name;
+ (void)mapFill:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (void)mapExternalWrap:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3 suppressNullFillOverride:(_Bool)arg4;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQHImage : NSObject
{
}

+ (int)handleInlineWebView:(id)arg1 state:(id)arg2;
+ (int)handleFloatingWebView:(id)arg1 state:(id)arg2;
+ (int)handleInlineMedia:(id)arg1 state:(id)arg2;
+ (int)handleFloatingMedia:(id)arg1 state:(id)arg2;
+ (int)handleInlineImageBinary:(id)arg1 geometry:(id)arg2 cropGeometry:(id)arg3 maskingShapePath:(id)arg4 alphaMaskBezier:(struct CGPath *)arg5 style:(id)arg6 state:(id)arg7;
+ (int)handleFloatingImageBinary:(id)arg1 geometry:(id)arg2 style:(id)arg3 cropGeometry:(id)arg4 maskingShapePath:(id)arg5 alphaMaskBezier:(struct CGPath *)arg6 state:(id)arg7;
+ (void)handleSimpleImageBinary:(id)arg1 geometry:(id)arg2 style:(id)arg3 state:(id)arg4;
+ (void)mapMaskedImage:(id)arg1 geometry:(id)arg2 cropGeometry:(id)arg3 maskingShapePath:(id)arg4 alphaMaskBezier:(struct CGPath *)arg5 graphicStyle:(id)arg6 isFloating:(_Bool)arg7 state:(id)arg8;
+ (void)mapCropGeometry:(id)arg1 bounds:(id)arg2 style:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQHKeynote : NSObject <GQKeynoteGenerator>
{
}

+ (Class)enterSlideDrawables:(id)arg1 state:(id)arg2;
+ (int)endSlide:(id)arg1 state:(id)arg2;
+ (int)beginSlide:(id)arg1 state:(id)arg2;
+ (int)handleThemeStylesheet:(id)arg1 state:(id)arg2;
+ (int)handleSlideSize:(id)arg1 state:(id)arg2;
+ (int)endPresentation:(id)arg1 state:(id)arg2;
+ (int)beginPresentation:(id)arg1 state:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHKeynoteState : GQHState
{
    int mCurrentSlide;
    struct CGSize mSlideSize;
    int mProgressiveIndex;
}

- (id).cxx_construct;
- (_Bool)shouldStreamContent;
- (void)setProgressiveIndex:(int)arg1;
- (int)progressiveIndex;
- (_Bool)shouldMapLinkWithUrl:(struct __CFString *)arg1;
- (void)setSlideSize:(struct CGSize)arg1;
- (struct CGSize)slideSize;
- (int)currentSlide;
- (void)incrementCurrentSlide;

@end

__attribute__((visibility("hidden")))
@interface GQHLasso : NSObject <GQLassoGenerator>
{
}

+ (int)handleDrawableZOrder:(const char *)arg1 state:(id)arg2;
+ (Class)beginWorkspacePage:(id)arg1 state:(id)arg2;
+ (int)handleWorkspaceStyle:(id)arg1 state:(id)arg2;
+ (int)endWorkspace:(id)arg1;
+ (int)beginWorkspace:(const char *)arg1 state:(id)arg2;
+ (int)handleStylesheet:(id)arg1 state:(id)arg2;
+ (int)endDocument:(id)arg1 state:(id)arg2;
+ (int)beginDocument:(id)arg1 state:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHLassoState : GQHState
{
    GQHXML *mNavigation;
    int mSheetCount;
    int mTableCount;
    struct __CFString *mCssUri;
    struct __CFString *mCurrentSheetFilename;
    struct __CFString *mCurrentSheetUri;
    struct CGPoint mMaxCanvasPoint;
    unsigned int mCurrentDrawableZOrder;
    unsigned int mZOrderedDrawableCount;
    struct __CFDictionary *mDrawableUidToCssZOrderClassMap;
    struct __CFArray *mSheetCssUriList;
    struct __CFString *mSheetCssFilename;
    struct __CFString *mSheetOneCss;
    struct __CFString *mSheetOneLastCSS;
    char *mFirstWorkspaceName;
    _Bool mIsProgressiveMode;
    GQHXML *mIndex;
    struct __CFArray *mSheetFilenameList;
    struct __CFArray *mSheetUriList;
    struct __CFArray *mSheetCssLastUriList;
    struct __CFString *mSheetCssLastFilename;
}

- (id).cxx_construct;
- (struct __CFString *)writeTabsJS;
- (_Bool)inProgressiveMode;
- (void)writeNavigationPage:(id)arg1;
- (_Bool)writeIndexPageWithIFrame:(id)arg1;
- (void)writeIndexPageWithDocumentSize:(struct CGSize)arg1;
- (unsigned int)currentDrawableZOrder;
- (struct __CFString *)cssZOrderClassForDrawableUid:(const char *)arg1;
- (_Bool)drawablesNeedCssZOrdering;
- (void)addedDrawableWithBounds:(struct CGRect)arg1;
- (struct CGPoint)maxCanvasPoint;
- (_Bool)finishMainHtml;
- (void)addCachedStyle:(struct __CFString *)arg1;
- (struct __CFString *)makeInlineStyle:(struct __CFString *)arg1;
- (void)addStyle:(struct __CFString *)arg1 className:(struct __CFString *)arg2 srcStyle:(id)arg3;
- (int)endSheet;
- (void)cacheAnchorForIndexPage:(char *)arg1;
- (void)writeAnchorInNavigationPage:(char *)arg1;
- (void)beginNewSheet:(const char *)arg1 processorState:(id)arg2;
- (void)dealloc;
- (id)initWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHLine : NSObject
{
}

+ (int)handleInlineLine:(id)arg1 state:(id)arg2;
+ (int)handleFloatingLine:(id)arg1 state:(id)arg2;
+ (int)handleLine:(id)arg1 isFloating:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQHPages : NSObject <GQPagesGenerator>
{
}

+ (void)mapCurrentHiddenPositioningFooterFromPublication:(id)arg1 state:(id)arg2;
+ (void)mapCurrentHeaderAndFooterFromPublication:(id)arg1 state:(id)arg2;
+ (int)setCurrentPageIndex:(int)arg1 state:(id)arg2;
+ (int)handleSectionStyle:(id)arg1 pageIndex:(int)arg2 numPages:(int)arg3 state:(id)arg4;
+ (int)handleFooters:(struct __CFArray *)arg1 state:(id)arg2;
+ (int)handleHeaders:(struct __CFArray *)arg1 state:(id)arg2;
+ (Class)enterBodyStorage:(id)arg1;
+ (Class)enterMainDrawablesForPage:(unsigned int)arg1 state:(id)arg2;
+ (int)handleStylesheet:(id)arg1 state:(id)arg2;
+ (int)handlePageSetup:(id)arg1 state:(id)arg2;
+ (int)endPublication:(id)arg1 state:(id)arg2;
+ (int)beginPublication:(id)arg1 state:(id)arg2;
+ (void)mapHeaderOrFooter:(id)arg1 isHeader:(_Bool)arg2 toPublication:(id)arg3 state:(id)arg4;
+ (void)handlePagesOrders:(id)arg1;
+ (void)handleZOrder:(unsigned int)arg1 cssClassName:(struct __CFString *)arg2 state:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHPagesFloatingDrawable : NSObject <GQDrawablesGenerator>
{
}

+ (int)endDrawables:(id)arg1;
+ (Class)beginTable:(id)arg1;
+ (int)handleDrawable:(id)arg1 state:(id)arg2;
+ (int)beginDrawables:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHPagesWPFloatingTable : NSObject <GQTableGenerator>
{
}

+ (int)handleCell:(id)arg1 state:(id)arg2;
+ (int)endCells:(id)arg1 state:(id)arg2;
+ (int)beginCells:(id)arg1 state:(id)arg2;
+ (int)endTable:(id)arg1 state:(id)arg2;
+ (int)beginTable:(id)arg1 state:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHPagesState : GQHState <GQWrapPointGenerator>
{
    struct __CFDictionary *mFloatingDrawables;
    int mMode;
    struct __CFDictionary *mHeaders;
    struct __CFDictionary *mFooters;
    struct __CFArray *mSectionStyles;
    struct __CFDictionary *mPageWrapPointsMap;
    int mCurrentPageIndex;
    int mStartPageAt;
    int mStartPageAtValueChangedAtPageIndex;
    GQHStyle *mCurrentLayoutStyle;
    GQHStyle *mCurrentParagraphStyle;
    GQDSStyle *mCurrentBaseParagraphStyle;
    struct __CFString *mCurrentCachedParagraphClass;
    GQHStyle *mCurrentSpanStyle;
    GQDSStyle *mCurrentBaseSpanStyle;
    struct __CFString *mCurrentCachedSpanClass;
    GQWrapPointSet *mCurrentWrapPointSet;
    struct CGRect mLastFrame;
    _Bool mMappingFloatingDrawables;
    _Bool mStartedPage;
    _Bool mStartedSection;
    _Bool mDidInsertPageHeader;
    _Bool mDidFindContainerHint;
    GQDWPContainerHint *mLastInsertedContainerHint;
    struct __CFArray *mAttachmentPositions;
    long long mAttachmentIdCounter;
    long long mFirstAttachmentId;
    _Bool mSplitNextAttachment;
    GQDSStyle *mCurrentSectionStyle;
    _Bool mHasLayoutDrawables;
    int mCurrentHintPageIndex;
    int mCurrentHintColumnIndex;
    _Bool mIsMappingHeadersFooters;
    int mHeaderFooterPageNumber;
    struct __CFDictionary *mDrawablePagesOrderToCssZOrderClassMap;
    struct CGSize mPageSize;
    struct __CFArray *mTocHrefStack;
    _Bool mCurrentFrameHasSandbagFloats;
    int mProgressiveIndex;
}

- (id).cxx_construct;
- (_Bool)allowInlineWrap;
- (_Bool)needAbsolutelyPositionedTables;
- (void)endSection;
- (void)popTocHref;
- (void)pushTocHref:(struct __CFString *)arg1;
- (unsigned int)tocDepth;
- (void)setPageSize:(struct CGSize)arg1;
- (struct CGSize)pageSize;
- (struct __CFDictionary *)pagesOrderToCssZOrderClassMapDictionary;
- (struct __CFString *)cssZOrderClassForDrawablePagesOrder:(int)arg1;
- (struct __CFString *)cssZOrderClassForDrawable:(id)arg1;
- (void)addStyle:(struct __CFString *)arg1 className:(struct __CFString *)arg2 srcStyle:(id)arg3;
- (void)setOutlineStyleType:(int)arg1;
- (void)setOutlineLevel:(int)arg1;
- (_Bool)useOutline;
- (int)pageNumberForHeaderOrFooter;
- (_Bool)isMappingHeadersFooters;
- (void)setIsMappingHeadersFooters:(_Bool)arg1;
- (_Bool)hasLayoutDrawables;
- (void)setHasLayoutDrawables:(_Bool)arg1;
- (void)inContent;
- (void)clearWrapPoints;
- (vector_dadce35e *)createListOfWrapPointsAlongY:(float)arg1 minX:(float)arg2 maxX:(float)arg3 zIndex:(int)arg4;
- (const set_80ec8016 *)wrapPoints;
- (void)addWrapPoint:(id)arg1;
- (void)endWrapPointSet;
- (void)beginWrapPointSet;
- (void)resolveHeaderName:(const struct __CFString **)arg1 footerName:(const struct __CFString **)arg2;
- (void)handleContainerHint:(id)arg1;
- (void)insertAttachmentPlaceholder;
- (long long)firstAttachmentId;
- (long long)nextAttachmentId;
- (long long)currentAttachmentId;
- (double)moveToNextAttachmentPosition;
- (double)currentAttachmentPosition;
- (void)addAttachmentPosition:(double)arg1;
- (void)finishedWithSplitAttachment;
- (_Bool)splitNextAttachment;
- (void)mapFloatingDrawablesForPageAtIndex:(unsigned long long)arg1;
- (void)setDidFindContainerHint:(_Bool)arg1;
- (void)setDidInsertPageHeader:(_Bool)arg1;
- (void)setCurrentSpanStyle:(id)arg1 baseStyle:(id)arg2 cachedClass:(struct __CFString *)arg3;
- (void)setCurrentParagraphStyle:(id)arg1 baseStyle:(id)arg2 cachedClass:(struct __CFString *)arg3;
- (void)setCurrentLayoutStyle:(id)arg1;
- (void)setCurrentPageIndex:(int)arg1;
- (int)currentPageIndex;
- (void)overrideSectionStyle:(id)arg1;
- (CDStruct_627e0f85)rangeForSectionStyleAtPageIndex:(int)arg1;
- (id)sectionStyleForPageIndex:(int)arg1;
- (void)addSectionStyle:(id)arg1 pageIndex:(int)arg2 numPages:(int)arg3;
- (void)setFooters:(struct __CFArray *)arg1;
- (id)footerForName:(struct __CFString *)arg1;
- (void)setHeaders:(struct __CFArray *)arg1;
- (id)headerForName:(struct __CFString *)arg1;
- (void)setMode:(int)arg1;
- (int)mode;
- (struct __CFArray *)pageDrawables:(int)arg1;
- (void)clearFloatingDrawables;
- (id)drawableAtIndex:(int)arg1;
- (void)addFloatingDrawable:(id)arg1;
- (int)floatingDrawablesCount;
- (void)dealloc;
- (id)initWithState:(id)arg1 documentSize:(struct CGSize)arg2;
- (id)sectionStyleRunForRunBeforePageIndex:(int)arg1;
- (void)openStateLayoutElementsAndStyles;
- (void)closeStateLayoutElementsAndStyles;
- (void)startLayout;
- (void)startSection;
- (id)wrapPointSetForPage:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQWrapPointSet : NSObject
{
    set_80ec8016 *mWrapPointSet;
}

- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQHSectionStyleRun : NSObject
{
    GQDSStyle *mStyle;
    CDStruct_627e0f85 mPageRange;
}

- (id).cxx_construct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQHParagraph : NSObject
{
}

+ (int)handleInlineList:(id)arg1 state:(id)arg2;
+ (int)handleParagraph:(id)arg1 state:(id)arg2 bulletStates:(struct __CFDictionary *)arg3 isMultiColumn:(_Bool)arg4;
+ (int)mapParagraphStyle:(id)arg1 paragraph:(id)arg2 state:(id)arg3 bulletStates:(struct __CFDictionary *)arg4 isMultiColumn:(_Bool)arg5;
+ (_Bool)retrieveFontSizeForFirstCharacter:(id)arg1 fontSize:(float *)arg2;
+ (id)getBulletStyle:(id)arg1 level:(int)arg2;
+ (void)mapBullet:(struct __CFDictionary *)arg1 state:(id)arg2;
+ (struct __CFDictionary *)prepareBullet:(id)arg1 paragraph:(id)arg2 style:(id)arg3 state:(id)arg4 bulletStates:(struct __CFDictionary *)arg5 showBullet:(_Bool)arg6;
+ (_Bool)setupBulletStatesForParagraphStyle:(id)arg1 paragraph:(id)arg2 state:(id)arg3 bulletStates:(struct __CFDictionary *)arg4;
+ (int)handleBookmark:(id)arg1 state:(id)arg2;
+ (int)handleLink:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHParagraphStyle : GQHTextStyle
{
}

+ (const char *)name;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQHPlaceholder : NSObject
{
}

+ (int)handlePlaceholder:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHState : NSObject
{
    GQHXML *mHtmlDoc;
    struct CGSize mScale;
    struct __CFString *mStyleData;
    GQHTableState *mTableState;
    GQSDocument *mProcessorState;
    struct __CFDictionary *mStyleIndexes;
    struct __CFDictionary *mStyleNameMap;
    struct __CFArray *mImplicitStyles;
    int mColoredBackgroundLayerCount;
    int mMultiColumnedDepth;
    struct __CFArray *mGraphicPropertiesStack;
    int mParagraphCount;
    int mParagraphIndex;
    int mCachedCellStyleIndex;
    struct __CFDictionary *mCachedTableStyles;
    int mCachedTextStyleIndex;
    struct __CFDictionary *mCachedTextStyles;
    int mInlineStyleIndex;
    struct __CFDictionary *mInlineStyles;
    struct __CFDictionary *mColorStrings;
    id <GQHContext> mShapeContext;
    int mOutlineLevel;
    int mOutlineStyleType;
    int mShapeIDCounter;
    unsigned int mTextScale;
}

- (id).cxx_construct;
- (_Bool)allowInlineWrap;
- (_Bool)needAbsolutelyPositionedTables;
- (void)invalidateTextScale;
- (void)setTextScale:(unsigned int)arg1;
- (unsigned int)textScale;
- (struct __CFString *)createUniqueShapeId:(const char *)arg1;
- (void)setOutlineStyleType:(int)arg1;
- (int)outlineStyleType;
- (void)setOutlineLevel:(int)arg1;
- (int)outlineLevel;
- (_Bool)useOutline;
- (id)shapeContext;
- (_Bool)shouldMapLinkWithUrl:(struct __CFString *)arg1;
- (struct __CFString *)getColorString:(id)arg1;
- (struct __CFString *)addCachedClassStringForTextStyle:(id)arg1 implicitStyle:(id)arg2 isColoredBackground:(_Bool)arg3 outlineLevel:(int)arg4 outlineType:(int)arg5 isSpan:(_Bool)arg6 baseClassString:(struct __CFString *)arg7 cssCachedStyle:(id)arg8;
- (struct __CFString *)cachedClassStringForTextStyle:(id)arg1 implicitStyle:(id)arg2 isColoredBackground:(_Bool)arg3 outlineLevel:(int)arg4 outlineType:(int)arg5 isSpan:(_Bool)arg6;
- (struct __CFString *)addCacheForCellStyle:(id)arg1 fillStyle:(id)arg2 cellClass:(Class)arg3 vectorStyles:(id *)arg4 groupLevel:(unsigned short)arg5 hasFormula:(_Bool)arg6 baseClassString:(struct __CFString *)arg7 cssCachedStyle:(id)arg8;
- (struct __CFString *)cachedClassStringForCellStyle:(id)arg1 fillStyle:(id)arg2 cellClass:(Class)arg3 vectorStyles:(id *)arg4 groupLevel:(unsigned short)arg5 hasFormula:(_Bool)arg6;
- (int)paragraphIndex;
- (void)setParagraphIndex:(int)arg1;
- (int)paragraphCount;
- (void)setParagraphCount:(int)arg1;
- (void)leaveGraphicObject;
- (void)enterGraphicObject;
- (_Bool)multiColumned;
- (void)setMultiColumned:(_Bool)arg1;
- (_Bool)coloredBackground;
- (void)setColoredBackground:(_Bool)arg1;
- (void)popImplicitStyle;
- (id)implicitStyle;
- (void)pushImplicitStyle:(id)arg1;
- (struct __CFString *)cssZOrderClassForDrawableUid:(const char *)arg1;
- (struct __CFString *)cssZOrderClassForDrawable:(id)arg1;
- (_Bool)drawablesNeedCssZOrdering;
- (struct __CFString *)createStyleName:(id)arg1 type:(const char *)arg2;
- (void)addedDrawableWithBounds:(struct CGRect)arg1;
- (_Bool)finishMainHtml;
- (id)processorState;
- (id)tableState;
- (struct __CFString *)className:(id)arg1;
- (void)addCachedStyle:(struct __CFString *)arg1;
- (struct __CFString *)makeInlineStyle:(struct __CFString *)arg1 inDocument:(id)arg2;
- (struct __CFString *)makeInlineStyle:(struct __CFString *)arg1;
- (void)addStyle:(struct __CFString *)arg1 className:(struct __CFString *)arg2 srcStyle:(id)arg3;
- (struct CGSize)scale;
- (void)setScale:(struct CGSize)arg1;
- (id)htmlDoc;
- (void)dealloc;
- (id)initWithState:(id)arg1 documentSize:(struct CGSize)arg2;
- (id)initWithState:(id)arg1;
- (id)initWithState:(id)arg1 needIndexFile:(_Bool)arg2 documentSize:(struct CGSize)arg3;
- (int)indexForStyle:(const char *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHStyle : NSObject
{
    struct __CFDictionary *mStyles;
    struct __CFString *mCssClassAttribute;
    struct __CFString *mCachedCssStyleName;
}

+ (void)createBaseStyleClassesString:(struct __CFArray *)arg1 classString:(struct __CFString **)arg2 classTypes:(struct __CFArray *)arg3 state:(id)arg4;
+ (void)createBaseStyleClassString:(id)arg1 classString:(struct __CFString **)arg2 classType:(Class)arg3 state:(id)arg4;
+ (void)appendParentClass:(struct __CFString **)arg1 style:(id)arg2 classType:(Class)arg3 state:(id)arg4;
+ (void)setSingleStyleAttribute:(struct __CFString *)arg1 pxValue:(int)arg2 node:(id)arg3;
+ (void)setSingleStyleAttribute:(struct __CFString *)arg1 intValue:(int)arg2 node:(id)arg3;
+ (void)setSingleStyleAttribute:(struct __CFString *)arg1 value:(struct __CFString *)arg2 node:(id)arg3;
- (void)setStyleOnCurrentNode:(id)arg1 mappingBaseStyleClasses:(struct __CFArray *)arg2 baseClassTypes:(struct __CFArray *)arg3;
- (void)setStyleOnCurrentNode:(id)arg1 mappingBaseStyleClass:(id)arg2 baseClassType:(Class)arg3;
- (void)addClass:(struct __CFString *)arg1;
- (void)setStyleOnCurrentNode:(id)arg1;
- (void)setupCssClassAttribute:(id)arg1;
- (struct __CFString *)createNamedStyle:(struct __CFString *)arg1;
- (_Bool)getAttribute:(struct __CFString *)arg1 trblValue:(id *)arg2;
- (_Bool)getAttribute:(struct __CFString *)arg1 value:(const struct __CFString **)arg2;
- (_Bool)getAttribute:(struct __CFString *)arg1 intValue:(int *)arg2;
- (void)addAttribute:(struct __CFString *)arg1 trblValue:(id)arg2;
- (void)addAttribute:(struct __CFString *)arg1 ptValue:(int)arg2;
- (void)addAttribute:(struct __CFString *)arg1 pxValue:(int)arg2;
- (void)addAttribute:(struct __CFString *)arg1 intValue:(int)arg2;
- (void)addAttribute:(struct __CFString *)arg1 value:(struct __CFString *)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQHIntNumber : NSObject
{
    int mType;
    int mValue;
}

- (struct __CFString *)createStringRef;
- (int)value;
- (int)type;
- (void)setType:(int)arg1 value:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHTrbl : NSObject
{
    int mTop;
    int mRight;
    int mBottom;
    int mLeft;
}

- (struct __CFString *)createStringRef;
- (int)left;
- (void)setLeft:(int)arg1;
- (int)bottom;
- (void)setBottom:(int)arg1;
- (int)right;
- (void)setRight:(int)arg1;
- (int)top;
- (void)setTop:(int)arg1;
- (void)setTop:(int)arg1 right:(int)arg2 bottom:(int)arg3 left:(int)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQHTable : GQHGraphicStyle <GQTableGenerator>
{
}

+ (const char *)name;
+ (int)handleCell:(id)arg1 state:(id)arg2;
+ (int)endCells:(id)arg1 state:(id)arg2;
+ (int)beginCells:(id)arg1 state:(id)arg2;
+ (void)startTableWithTableAnchor:(struct __CFString *)arg1 tableHeight:(float)arg2 state:(id)arg3;
+ (int)endTable:(id)arg1 state:(id)arg2;
+ (int)beginTable:(id)arg1 state:(id)arg2;
+ (void)addMissingCellsUpToRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3;
+ (void)addMissingCellWithRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3;
+ (void)beginRowWithIndex:(unsigned short)arg1 state:(id)arg2;
+ (int)mapCellContent:(id)arg1 xml:(id)arg2 state:(id)arg3;
+ (struct __CFString *)createTableAttachmentIdWithNumber:(long long)arg1;
+ (void)splitTable:(id)arg1;
+ (unsigned short)resolveGroupLevel:(id)arg1 model:(id)arg2 columnIndex:(int)arg3 tableState:(id)arg4;
+ (void)mapVectorStyles:(id *)arg1 toCellStyle:(id)arg2 state:(id)arg3;
+ (void)getVectorStylesForRowIndex:(unsigned short)arg1 rowSpan:(unsigned short)arg2 columnIndex:(unsigned short)arg3 columnSpan:(unsigned short)arg4 vectorStyles:(id *)arg5 state:(id)arg6;
+ (void)mapCellStyle:(id)arg1 rowIndex:(unsigned short)arg2 rowSpan:(unsigned short)arg3 columnIndex:(unsigned short)arg4 columnSpan:(unsigned short)arg5 state:(id)arg6 cell:(id)arg7 level:(unsigned short)arg8;
+ (id)mapBaseFillStyleForRowIndex:(unsigned short)arg1 columnIndex:(unsigned short)arg2 state:(id)arg3 isGroupingCell:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHTableCellStyle : GQHGraphicStyle
{
}

+ (const char *)name;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3 cell:(id)arg4 level:(int)arg5;

@end

__attribute__((visibility("hidden")))
@interface GQHTableState : NSObject
{
    int mPrevRowIndex;
    int mPrevColumnIndex;
    GQDTTable *mTable;
    vector_eef16772 *mCellCountInColumns;
    int mGroupLevel;
    _Bool mSplitTable;
    double mCurrentTablePosition;
    double mLastAttachmentPosition;
    long long mSplitTableIndex;
    double mOriginalTableHeight;
}

- (void)setOriginalTableHeight:(double)arg1;
- (double)originalTableHeight;
- (void)setLastAttachmentPosition:(double)arg1;
- (double)lastAttachmentPosition;
- (void)addRowHeight:(float)arg1;
- (double)currentTablePosition;
- (long long)nextSplitTableIndex;
- (void)setSplitTableIndex:(long long)arg1;
- (void)setSplitTable:(_Bool)arg1;
- (_Bool)splitTable;
- (void)setGroupLevel:(int)arg1;
- (int)groupLevel;
- (vector_eef16772 *)cellCountInColumns;
- (void)setTable:(id)arg1;
- (id)table;
- (void)setPrevRowIndex:(int)arg1 columnIndex:(int)arg2;
- (int)prevColumnIndex;
- (int)prevRowIndex;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQHTextBox : GQHParagraphStyle
{
}

+ (int)outputInnerSandbagsForFrame:(struct CGRect)arg1 drawable:(id)arg2 state:(id)arg3;
+ (_Bool)outputWrapSandbagsForFrame:(struct CGRect)arg1 columnCount:(int)arg2 drawable:(id)arg3 state:(id)arg4 isPageFrame:(_Bool)arg5;
+ (int)outputWrapSandbagsForFrame:(struct CGRect)arg1 columnCount:(int)arg2 drawable:(id)arg3 state:(id)arg4;
+ (void)createExternalWrapSandbagStyles:(id)arg1;
+ (void)mapScaledImageFill:(id)arg1 style:(id)arg2 size:(struct CGSize)arg3;
+ (_Bool)styleNeedsImageFillMapping:(id)arg1;
+ (void)mapLayout:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (const char *)name;
+ (int)handleLayoutStorage:(id)arg1 state:(id)arg2;
+ (int)handleShapeText:(id)arg1 boundsRect:(struct CGRect)arg2 floating:(_Bool)arg3 state:(id)arg4;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (int)outputWrapSandbagsForShape:(id)arg1 layoutStyle:(id)arg2 state:(id)arg3;
+ (int)outputInnerSandbagsForShape:(id)arg1 layoutStyle:(id)arg2 state:(id)arg3;
+ (void)outputSandbag:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHWrapSandbag : NSObject
{
    struct CGSize mSize;
    _Bool mFloatsLeft;
}

- (id).cxx_construct;
- (id)initWithSize:(struct CGSize)arg1 floatsLeft:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHTextSpan : NSObject
{
}

+ (int)nonWhitespaceCount:(struct __CFArray *)arg1;
+ (int)handleTextBackgroundForStyle:(id)arg1 destStyle:(id)arg2 state:(id)arg3;
+ (int)handleTextListChild:(id)arg1 outputBlanks:(_Bool)arg2 state:(id)arg3;
+ (int)handleTextList:(id)arg1 checkForTrailingBlanks:(_Bool)arg2 state:(id)arg3;
+ (int)handleSpan:(id)arg1 checkForTrailingBlanks:(_Bool)arg2 state:(id)arg3;
+ (int)handleContainerHint:(id)arg1 state:(id)arg2;
+ (int)handleAttachment:(id)arg1 state:(id)arg2;
+ (int)handlePageStart:(id)arg1 state:(id)arg2;
+ (int)handleAutoNumber:(id)arg1 state:(id)arg2;
+ (int)handleTextMarker:(id)arg1 outputBlanks:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQHTextStyle : NSObject
{
}

+ (void)reduceFontSizeForSuperscriptedText:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (_Bool)getDefaultLineHeight:(struct __CFString *)arg1 fontSize:(float)arg2 defLineHeight:(int *)arg3;
+ (const char *)name;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3 isSpan:(_Bool)arg4;
+ (void)mapStyle:(id)arg1 style:(id)arg2 state:(id)arg3;
+ (_Bool)platformGetDefaultLineHeight:(struct __CFString *)arg1 fontSize:(float)arg2 defLineHeight:(int *)arg3;
+ (struct __CFString *)platformCreateCssFontFamilyStringFromFontName:(struct __CFString *)arg1;
+ (struct __CTFont *)createFontFromName:(struct __CFString *)arg1 size:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHXML : NSObject
{
    id <GQHXMLOutput> mOutput;
    _Bool mUseExternalCss;
    struct __CFString *mFilename;
    struct __CFString *mCssFilename;
    struct __CFString *mCss;
    struct __CFString *mLastCss;
    _Bool isProgressive;
}

@property(readonly) _Bool isProgressive; // @synthesize isProgressive;
- (struct __CFData *)createProgressiveeCSSwithStyleTags:(unsigned char)arg1;
- (struct __CFData *)createProgressiveHtml;
- (_Bool)writeToOutputBundle:(id)arg1 isThumbnail:(_Bool)arg2;
- (void)addViewportMetaTagForDocumentSize:(struct CGSize)arg1 maximumScale:(float)arg2;
- (void)addViewportMetaTagForDocumentSize:(struct CGSize)arg1;
- (void)addMetaTagWithTextFormat:(struct __CFString *)arg1;
- (struct __CFString *)cssFilename;
- (void)addStyleClassLast:(struct __CFString *)arg1;
- (void)addStyleClass:(struct __CFString *)arg1;
- (void)addCharRef:(const char *)arg1;
- (void)addXmlCharContent:(const char *)arg1;
- (void)addContent:(struct __CFString *)arg1;
- (void)setAttribute:(const char *)arg1 floatValue:(float)arg2;
- (void)setAttribute:(const char *)arg1 intValue:(int)arg2;
- (void)setAttribute:(const char *)arg1 cfStringValue:(struct __CFString *)arg2;
- (void)setAttribute:(const char *)arg1 value:(const char *)arg2;
- (void)endElementWithExpectedName:(const char *)arg1;
- (void)endElement;
- (void)startElement:(const char *)arg1;
- (void)dealloc;
- (id)initWithFilename:(struct __CFString *)arg1 documentSize:(struct CGSize *)arg2 outputBundle:(id)arg3 useExternalCss:(_Bool)arg4;
- (id)initEmptyWithFilename:(struct __CFString *)arg1 useExternalCss:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQPBGProcessor : GQPProcessor
{
    Class mGenerator;
}

- (Class)generator;
- (_Bool)go;
- (void)pushInitialState;
- (id)initWithURL:(struct __CFURL *)arg1 zipArchive:(id)arg2 indexFileName:(id)arg3 outputType:(int)arg4 outputPath:(struct __CFString *)arg5 previewRequest:(struct __QLPreviewRequest *)arg6 progressiveHelper:(id)arg7 generator:(Class)arg8 cryptoKey:(id)arg9;
- (id)initWithURL:(struct __CFURL *)arg1 indexFileName:(id)arg2 outputType:(int)arg3 outputPath:(struct __CFString *)arg4 previewRequest:(struct __QLPreviewRequest *)arg5 progressiveHelper:(id)arg6 generator:(Class)arg7 zipArchive:(id)arg8 cryptoKey:(id)arg9;

@end

__attribute__((visibility("hidden")))
@interface GQPLSProcessor : GQPProcessor
{
    Class mGenerator;
}

- (Class)generator;
- (_Bool)go;
- (void)pushInitialState;
- (id)initWithURL:(struct __CFURL *)arg1 zipArchive:(id)arg2 indexFileName:(id)arg3 outputType:(int)arg4 outputPath:(struct __CFString *)arg5 previewRequest:(struct __QLPreviewRequest *)arg6 progressiveHelper:(id)arg7 generator:(Class)arg8 cryptoKey:(id)arg9;
- (id)initWithURL:(struct __CFURL *)arg1 indexFileName:(id)arg2 outputType:(int)arg3 outputPath:(struct __CFString *)arg4 previewRequest:(struct __QLPreviewRequest *)arg5 progressiveHelper:(id)arg6 generator:(Class)arg7 zipArchive:(id)arg8 cryptoKey:(id)arg9;

@end

__attribute__((visibility("hidden")))
@interface GQPProcessor : NSObject
{
    struct _xmlTextReader *mReader;
    struct _xmlParserInputBuffer {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        struct _xmlCharEncodingHandler *_field4;
        struct _xmlBuf *_field5;
        struct _xmlBuf *_field6;
        int _field7;
        int _field8;
        unsigned long long _field9;
    } *mParserInputBuffer;
    SFUZipArchive *mArchive;
    SFUCryptoKey *mCryptoKey;
    unsigned long long mTotalBytesToConsume;
    SFUZipInflateInputStream *mInputStream;
    stack_e5003a0d *mStateStack;
    stack_00018fe6 *mActionStack;
    GQSDocument *mDocumentState;
    struct __QLPreviewRequest *mOutputPreviewRequest;
    struct __CFBundle *mBundle;
    struct CGSize mThumbnailSize;
    _Bool mWrongFormat;
    unsigned char mIsProgressive;
}

+ (struct _xmlTextReader *)createXmlReaderWithPath:(id)arg1 indexFileName:(id)arg2 cryptoKey:(id)arg3;
+ (struct _xmlTextReader *)createXmlReaderWithZipArchive:(id)arg1 indexFileName:(id)arg2 cryptoKey:(id)arg3 indexEntry:(id *)arg4 zipInputStream:(id *)arg5;
+ (void)initialize;
- (id).cxx_construct;
- (void)setWrongFormat:(_Bool)arg1;
- (_Bool)isWrongFormat;
- (void)setProgressiveMode:(unsigned char)arg1;
- (void)setThumbnailSize:(struct CGSize)arg1;
- (struct CGSize)thumbnailSize;
- (id)cryptoKey;
- (id)documentState;
- (stack_00018fe6 *)actionStack;
- (stack_e5003a0d *)stateStack;
- (_Bool)go;
- (void)setBundle:(struct __CFBundle *)arg1;
- (struct __CFBundle *)bundle;
- (id)archive;
- (void)pushInitialState;
- (void)dealloc;
- (id)initWithZipArchive:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest *)arg3 cryptoKey:(id)arg4;
- (id)initWithZipArchive:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest *)arg3;
- (id)initWithPath:(id)arg1 indexFileName:(id)arg2 previewRequest:(struct __QLPreviewRequest *)arg3 cryptoKey:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface GQPProcessorFactory : NSObject
{
}

+ (id)retainedProcessorForDocument:(struct __CFURL *)arg1 zipArchive:(id)arg2 uti:(struct __CFString *)arg3 outputType:(int)arg4 outputPath:(struct __CFString *)arg5 previewRequest:(struct __QLPreviewRequest *)arg6 progressiveHelper:(id)arg7;
+ (id)retainedProcessorForDocument:(struct __CFURL *)arg1 zipArchive:(id)arg2 uti:(struct __CFString *)arg3 outputType:(int)arg4 outputPath:(struct __CFString *)arg5 previewRequest:(struct __QLPreviewRequest *)arg6 progressiveHelper:(id)arg7 cryptoKey:(id)arg8;
+ (int)applicationForDocumentUti:(struct __CFString *)arg1;
+ (struct __CFString *)createUtiForDocument:(struct __CFString *)arg1;
+ (struct __CFURL *)newEmbeddedSageUrlForTangierDocumentUrl:(struct __CFURL *)arg1 uti:(struct __CFString *)arg2 isBundle:(_Bool *)arg3;
+ (_Bool)isTemplateUti:(struct __CFString *)arg1;
+ (_Bool)isTangierTEFDocumentUti:(struct __CFString *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQPSectionDrawable : NSObject
{
    CDStruct_627e0f85 mPageRange;
    GQDSStyle *mStyle;
}

- (id).cxx_construct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQPSLProcessor : GQPProcessor
{
    Class mGenerator;
}

- (Class)generator;
- (_Bool)go;
- (void)pushInitialState;
- (id)initWithURL:(struct __CFURL *)arg1 zipArchive:(id)arg2 indexFileName:(id)arg3 outputType:(int)arg4 outputPath:(struct __CFString *)arg5 previewRequest:(struct __QLPreviewRequest *)arg6 progressiveHelper:(id)arg7 generator:(Class)arg8 cryptoKey:(id)arg9;
- (id)initWithURL:(struct __CFURL *)arg1 indexFileName:(id)arg2 outputType:(int)arg3 outputPath:(struct __CFString *)arg4 previewRequest:(struct __QLPreviewRequest *)arg5 progressiveHelper:(id)arg6 generator:(Class)arg7 zipArchive:(id)arg8 cryptoKey:(id)arg9;

@end

__attribute__((visibility("hidden")))
@interface GQPStyleReader : NSObject <GQPObjectReader, GQPObjectHandler>
{
    int mStyleType;
    struct __CFArray *mEntries;
    GQDSStylesheet *mStylesheet;
    int mCurrentProperty;
    _Bool mStyleIsIdentified;
    _Bool mStyleIdentiferEqualsParentIdentifier;
    char *mIdentifier;
    char *mUid;
    char *mParentIdentifier;
    GQDSStyle *mStyle;
}

+ (void)initialize;
- (void)handleObject:(id)arg1;
- (int)doneReading:(id)arg1;
- (int)beginReadingFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;
- (void)dealloc;
- (id)initWithStyleType:(int)arg1;
- (void)handleDoubleValue:(double)arg1;
- (void)handleFloatValue:(float)arg1;
- (void)handleIntValue:(int)arg1;
- (void)handleBoolValue:(_Bool)arg1;
- (void)doneProperty;
- (_Bool)beginProperty:(const char *)arg1;
- (id)createStyle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQSDocument : NSObject <GQWrapPointGenerator>
{
    GQPProcessor *mProcessor;
    GQDRoot *mRoot;
    struct __CFURL *mBundleUrl;
    SFUZipArchive *mArchive;
    id <GQUOutputBundle> mOutputBundle;
    struct __CFArray *mObjectStack;
    id mGeneratorState;
    GQSTable *mTableState;
    Class mCurrentDrawablesGenerator;
    Class mCurrentTableGenerator;
    id <GQWrapPointGenerator> mCurrentWrapPointGenerator;
    _Bool mMustRegisterDrawables;
    _Bool mGeneratorBeginWasCalled;
    _Bool mShouldStreamTables;
    _Bool mDoExternalTextWrap;
    _Bool mGeneratingThumbnail;
    _Bool mThumbnailGenerationDone;
    unsigned int mTextScale;
    set_80ec8016 *mWrapPoints;
    struct __CFDictionary *mBundleResourceUriMap;
    GQDSStylesheet *mStylesheet;
    _Bool mIsReadingStorageAttachments;
    struct __CFString *mFilename;
    struct __CFURL *mDocumentUrl;
    _Bool _doCalculateThumbnailSize;
}

@property(nonatomic) _Bool doCalculateThumbnailSize; // @synthesize doCalculateThumbnailSize=_doCalculateThumbnailSize;
- (struct __CFString *)filename;
- (_Bool)isReadingStorageAttachments;
- (void)setIsReadingStorageAttachments:(_Bool)arg1;
- (void)setStylesheet:(id)arg1;
- (id)stylesheet;
- (void)setCurrentWrapPointGenerator:(id)arg1;
- (id)currentWrapPointGenerator;
- (struct __CFString *)uriForBundleResource:(struct __CFString *)arg1 ofType:(struct __CFString *)arg2;
- (void)clearWrapPoints;
- (vector_dadce35e *)createListOfWrapPointsAlongY:(float)arg1 minX:(float)arg2 maxX:(float)arg3 zIndex:(int)arg4;
- (const set_80ec8016 *)wrapPoints;
- (void)addWrapPoint:(id)arg1;
- (void)setThumbnailGenerationDone:(_Bool)arg1;
- (_Bool)isThumbnailGenerationDone;
- (void)setGeneratingThumbnail:(_Bool)arg1;
- (_Bool)isGeneratingThumbnail;
- (void)setGeneratorBeginWasCalled;
- (_Bool)generatorBeginWasCalled;
- (void)setDoExternalTextWrap:(_Bool)arg1;
- (_Bool)doExternalTextWrap;
- (void)setShouldStreamTables:(_Bool)arg1;
- (_Bool)shouldStreamTables;
- (void)setMustRegisterDrawables:(_Bool)arg1;
- (_Bool)mustRegisterDrawables;
- (void)setCurrentTableGenerator:(Class)arg1;
- (Class)currentTableGenerator;
- (void)setCurrentDrawablesGenerator:(Class)arg1;
- (Class)currentDrawablesGenerator;
- (void)setGeneratorState:(id)arg1;
- (id)generatorState;
- (void)setTableState:(id)arg1;
- (id)tableState;
- (int)objectStackDepth;
- (void)pushObject:(id)arg1;
- (id)popRetainedObject;
- (id)topObjectOfClass:(Class)arg1;
- (id)peekObject;
- (id)outputBundle;
- (struct __CFURL *)createUriToDocumentBundleResource:(struct __CFString *)arg1;
- (struct __CFURL *)createUrlToAppBundleResource:(struct __CFString *)arg1 processorBundle:(struct __CFBundle *)arg2 skipCachingPDFAndNoExtentionResources:(_Bool *)arg3;
- (id)root;
- (id)processor;
- (void)dealloc;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 archive:(id)arg3 outputBundle:(id)arg4 fileURL:(struct __CFURL *)arg5;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 bundleUrl:(struct __CFURL *)arg3 archive:(id)arg4 outputBundle:(id)arg5;
- (id)initWithRoot:(id)arg1 processor:(id)arg2 outputBundle:(id)arg3 fileURL:(struct __CFURL *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQSTable : NSObject
{
    GQDTTable *mTable;
    GQDTOverlapCell *mCurrentOverlapCell;
    GQDTCell *mLastCellRead;
    _Bool mIsStreaming;
    _Bool mAlwaysPutReadCellsInArray;
    long long mCellCount;
    _Bool mIsCounting;
}

- (_Bool)isCounting;
- (void)setIsCountingCount:(_Bool)arg1;
- (void)incrementCellPosition;
- (void)skipCells:(long long)arg1;
- (long long)column;
- (long long)row;
- (void)setAlwaysPutReadCellsInArray:(_Bool)arg1;
- (_Bool)alwaysPutReadCellsInArray;
- (id)table;
- (_Bool)isStreaming;
- (void)setLastCellRead:(id)arg1;
- (id)lastCellRead;
- (void)setCurrentOverlapCell:(id)arg1;
- (id)currentOverlapCell;
- (void)dealloc;
- (id)initWithStreaming:(_Bool)arg1 table:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQSSpiceTable : GQSTable
{
    struct __CFDictionary *mVectorUidToAlongMap;
    _Bool mReadingRowVectors;
    vector_ec52ae8c *mRowPositions;
    vector_ec52ae8c *mColumnPositions;
    float mCurrentCellMinX;
    float mCurrentCellMaxX;
    float mCurrentCellMinY;
    float mCurrentCellMaxY;
    id mCurrentCellStorage;
    id mCurrentCellStyle;
}

- (void)setAlongValue:(float)arg1 forOwnedVectorUid:(char *)arg2;
- (float)alongValueForVectorUid:(const char *)arg1;
- (void)aboutToReadCells;
- (void)aboutToReadColumnVectors;
- (void)aboutToReadRowVectors;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GQUCommon : NSObject
{
}

+ (_Bool)fileExistsAtUrl:(struct __CFURL *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQUQuicklookOutputBundle : NSObject <GQUOutputBundle>
{
    struct __CFDictionary *mQuicklookProperties;
    struct __CFDictionary *mAttachments;
    struct __CFData *mMainHtmlData;
    struct __CFString *mUriScheme;
    struct __CFString *mUuidStr;
}

- (void)setPageElementXPath:(struct __CFString *)arg1 withThumbnailsOnLeft:(_Bool)arg2;
- (void)setDocumentSize:(struct CGSize)arg1;
- (_Bool)setData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 forNamedResource:(struct __CFString *)arg3;
- (_Bool)setDataForMainHtmlResource:(struct __CFData *)arg1;
- (struct __CFString *)createUriForResource:(struct __CFString *)arg1;
- (_Bool)giveOutputToPreviewRequest:(struct __QLPreviewRequest *)arg1;
- (struct __CFDictionary *)quicklookDictionary;
- (struct __CFData *)mainHtmlData;
- (void)dealloc;
- (id)initWithUriScheme:(struct __CFString *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUIglooOutputBundle : NSObject <GQUOutputBundle>
{
    struct __CFDictionary *mAttachments;
    struct __CFData *mMainHtmlData;
    struct __CFString *mUriPrefix;
    struct __CFString *mUuidStr;
}

- (void)setPageElementXPath:(struct __CFString *)arg1 withThumbnailsOnLeft:(_Bool)arg2;
- (void)setDocumentSize:(struct CGSize)arg1;
- (struct __CFDictionary *)createOutputDictionary;
- (struct __CFDictionary *)attachments;
- (struct __CFData *)mainHtmlData;
- (_Bool)setData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 forNamedResource:(struct __CFString *)arg3;
- (_Bool)setDataForMainHtmlResource:(struct __CFData *)arg1;
- (struct __CFString *)createUriForResource:(struct __CFString *)arg1;
- (void)setUriPrefix:(struct __CFString *)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUFileOutputBundle : NSObject <GQUOutputBundle>
{
    struct __CFURL *mOutputUrl;
}

- (void)setPageElementXPath:(struct __CFString *)arg1 withThumbnailsOnLeft:(_Bool)arg2;
- (void)setDocumentSize:(struct CGSize)arg1;
- (_Bool)setData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 forNamedResource:(struct __CFString *)arg3;
- (_Bool)setDataForMainHtmlResource:(struct __CFData *)arg1;
- (struct __CFString *)createUriForResource:(struct __CFString *)arg1;
- (void)dealloc;
- (id)initWithOutputPath:(struct __CFString *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUProgressiveOutputBundle : NSObject <GQUOutputBundle>
{
    GQUProgressiveHelper *mHelper;
    struct __CFDictionary *mQuickLookProperties;
    struct __CFDictionary *mAttachmentsURLs;
    struct __CFDictionary *mComputedAttachments;
    struct __CFString *mUuidStr;
    struct __CFString *mUriScheme;
    _Bool mPreviewStarted;
}

- (void)setCurrentSheetUri:(struct __CFString *)arg1;
- (struct __CFURL *)getAttachmentURL:(struct __CFString *)arg1 mimeType:(struct __CFString *)arg2;
- (void)closeAttachment:(struct __CFString *)arg1;
- (void)startProgressiveData;
- (void)setPageElementXPath:(struct __CFString *)arg1 withThumbnailsOnLeft:(_Bool)arg2;
- (void)setDocumentSize:(struct CGSize)arg1;
- (_Bool)setData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 forNamedResource:(struct __CFString *)arg3;
- (_Bool)appendData:(struct __CFData *)arg1 mimeType:(struct __CFString *)arg2 resourceName:(struct __CFString *)arg3;
- (_Bool)setDataForMainHtmlResource:(struct __CFData *)arg1;
- (struct __CFString *)createUriForResource:(struct __CFString *)arg1;
- (void)dealloc;
- (id)initWithHandler:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQUOutputBundleFactory : NSObject
{
}

+ (id)createOutputBundleForType:(int)arg1 outputPath:(struct __CFString *)arg2 progressiveHelper:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQZArchive : NSObject
{
    NSMutableDictionary *mEntries;
    id <GQZArchiveInputStream> mInput;
    _Bool mIsEncrypted;
    NSString *mFilename;
}

- (id)filename;
- (_Bool)isEncrypted;
- (id)entryNames;
- (id)entryWithName:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (id)initWithPath:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (void)readExtraFieldFromBuffer:(const char *)arg1 size:(unsigned long long)arg2 entry:(id)arg3;
- (id)readFilenameFromBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (struct GQZEndOfCentralDirectory)readZip64EndOfCentralDirectoryFromOffset:(long long)arg1;
- (struct GQZEndOfCentralDirectory)readZip64EndOfCentralDirectoryWithEocdOffset:(long long)arg1;
- (const char *)searchForEndOfCentralDirectoryOffset:(long long *)arg1;
- (struct GQZEndOfCentralDirectory)readEndOfCentralDirectory;
- (void)collapseCommonRootDirectory;
- (void)readEntries;

@end

__attribute__((visibility("hidden")))
@interface GQZArchiveFileInputStream : NSObject <GQZArchiveInputStream>
{
    struct __sFILE *mFile;
    char *mBuffer;
    long long mBufferStart;
    long long mBufferEnd;
    long long mSize;
}

- (long long)size;
- (void)readFromOffset:(long long)arg1 size:(unsigned long long)arg2 buffer:(char *)arg3;
- (const char *)dataAtOffset:(long long)arg1 size:(unsigned long long)arg2 end:(long long)arg3 readSize:(unsigned long long *)arg4;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQZArchiveMemoryInputStream : NSObject <GQZArchiveInputStream>
{
    NSData *mData;
    const char *mBytes;
    long long mSize;
}

- (long long)size;
- (void)readFromOffset:(long long)arg1 size:(unsigned long long)arg2 buffer:(char *)arg3;
- (const char *)dataAtOffset:(long long)arg1 size:(unsigned long long)arg2 end:(long long)arg3 readSize:(unsigned long long *)arg4;
- (void)dealloc;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQZEntry : NSObject
{
    id <GQZArchiveInputStream> mInput;
    int mCompressionMethod;
    unsigned long long mCompressedSize;
    unsigned long long mUncompressedSize;
    unsigned long long mOffset;
    unsigned int mCrc;
}

- (void)readZip64ExtraField:(const char *)arg1 size:(unsigned long long)arg2;
- (struct _xmlTextReader *)xmlReader:(_Bool)arg1;
- (struct _xmlDoc *)recoverXmlDocument;
- (struct _xmlDoc *)xmlDocument;
- (id)data;
- (id)inputStream;
- (void)dealloc;
- (id)initFromCentralFileHeader:(const char *)arg1 inputStream:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQZEntryInflateInputStream : NSObject <GQZEntryInputStream>
{
    struct z_stream_s mStream;
    long long mOffset;
    long long mEnd;
    unsigned long long mCalculatedCrc;
    unsigned long long mCheckCrc;
    id <GQZArchiveInputStream> mInput;
    char *mOutBuffer;
    unsigned long long mOutBufferSize;
}

- (id).cxx_construct;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (void)readToOwnBuffer:(const char **)arg1 size:(unsigned long long *)arg2;
- (void)dealloc;
- (id)initWithOffset:(long long)arg1 end:(long long)arg2 uncompressedSize:(unsigned long long)arg3 crc:(unsigned long long)arg4 input:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQZEntryUncompressedInputStream : NSObject <GQZEntryInputStream>
{
    long long mOffset;
    long long mEnd;
    id <GQZArchiveInputStream> mInput;
}

- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (void)readToOwnBuffer:(const char **)arg1 size:(unsigned long long *)arg2;
- (void)dealloc;
- (id)initWithOffset:(long long)arg1 end:(long long)arg2 input:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQZException : NSException
{
}

@end

__attribute__((visibility("hidden")))
@interface GQZInflateInputStream : NSObject <GQZEntryInputStream>
{
    struct z_stream_s mStream;
    id <GQZEntryInputStream> mInput;
}

- (id).cxx_construct;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (void)readToOwnBuffer:(const char **)arg1 size:(unsigned long long *)arg2;
- (void)dealloc;
- (id)initWithInput:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHChart : NSObject
{
}

+ (int)handleInlineChart:(id)arg1 state:(id)arg2;
+ (int)handleFloatingChart:(id)arg1 state:(id)arg2;
+ (id)geometry:(id)arg1;
+ (char *)pdfId:(id)arg1;
+ (int)handleInlineChart:(id)arg1 state:(id)arg2 imageUrl:(struct __CFString *)arg3;
+ (struct __CFString *)createChartImageUrlString:(id)arg1 state:(id)arg2;
+ (struct __CFData *)renderChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHChartLegend : GQHChart
{
}

+ (int)handleInlineLegend:(id)arg1 state:(id)arg2;
+ (int)handleFloatingLegend:(id)arg1 state:(id)arg2;
+ (id)geometry:(id)arg1;
+ (char *)pdfId:(id)arg1;
+ (struct __CFData *)renderChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDWPPageMaster : NSObject <GQDNameMappable>
{
    struct __CFString *mHeaderIdentifier;
    struct __CFString *mFooterIdentifier;
}

+ (const struct StateSpec *)stateForReading;
- (struct __CFString *)footerIdentifier;
- (struct __CFString *)headerIdentifier;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDWPContainerHint : NSObject
{
    long long mPageIndex;
    long long mCIndex;
    long long mSIndex;
    long long mLIndex;
    long long mAnchorLocation;
    double mAttachmentPosition;
    struct CGRect mFrame;
}

- (id).cxx_construct;
- (struct CGRect)frame;
- (double)attachmentPosition;
- (long long)anchorLocation;
- (long long)lIndex;
- (long long)sIndex;
- (long long)cIndex;
- (long long)pageIndex;
- (id)initWithPageIndex:(long long)arg1 cIndex:(long long)arg2 sIndex:(long long)arg3 lIndex:(long long)arg4 anchorLocation:(long long)arg5 frame:(struct CGRect)arg6;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQHShape : NSObject
{
}

+ (int)handleShape:(id)arg1 isFloating:(_Bool)arg2 state:(id)arg3;
+ (void)mapPath:(id)arg1 shapeContext:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GQDPointPath : GQDPath
{
    int mType;
    struct CGPoint mPoint;
    struct CGSize mSize;
}

- (id).cxx_construct;
- (struct CGPath *)createBezierPath;
- (struct CGSize)size;
- (struct CGPoint)point;
- (int)type;
- (int)mapStrType:(struct __CFString *)arg1;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQHCanvasContext : NSObject <GQHContext>
{
    GQDAffineGeometry *mGeometry;
    NSMutableString *mFunctionName;
    _Bool mHasFill;
    _Bool mHasStroke;
    struct __CFString *mBezierStr;
}

- (void)setCGPath:(struct CGPath *)arg1 state:(id)arg2;
- (void)addPathForLineEndStyle:(int)arg1 graphicStyle:(id)arg2 atPoint:(struct CGPoint)arg3 neighboringCP:(struct CGPoint)arg4 filledPath:(struct CGPath **)arg5 strokedPath:(struct CGPath **)arg6;
- (id)strokeColorWithGraphicStyle:(id)arg1;
- (float)strokeWidthWithGraphicStyle:(id)arg1;
- (struct GQHPathEndPointInfo)endPointInfoForPath:(struct CGPath *)arg1;
- (void)mapLineEndStrokeStyle:(id)arg1 state:(id)arg2;
- (void)mapLineEndFillStyle:(id)arg1 state:(id)arg2;
- (void)mapStroke:(id)arg1 state:(id)arg2;
- (void)mapFill:(id)arg1 state:(id)arg2;
- (void)mapStyle:(id)arg1 state:(id)arg2;
- (void)translate:(struct CGSize)arg1 state:(id)arg2;
- (void)setBezierPath:(char *)arg1 state:(id)arg2;
- (void)setImageFill:(struct __CFURL *)arg1 srcSize:(struct CGSize)arg2 mode:(int)arg3 state:(id)arg4;
- (void)setGradient:(id)arg1 state:(id)arg2;
- (void)setFillColor:(id)arg1 state:(id)arg2;
- (void)setStrokeColor:(id)arg1 width:(float)arg2 state:(id)arg3;
- (void)setContextOpacity:(float)arg1 state:(id)arg2;
- (void)createMaskedImageWithId:(struct __CFString *)arg1 geometry:(id)arg2 imageBinary:(id)arg3 cropGeometry:(id)arg4 maskingShapePath:(id)arg5 alphaMaskBezier:(struct CGPath *)arg6 graphicStyle:(id)arg7 isFloating:(_Bool)arg8 state:(id)arg9;
- (void)createShapeWithId:(struct __CFString *)arg1 path:(id)arg2 geometry:(id)arg3 graphicStyle:(id)arg4 isFloating:(_Bool)arg5 state:(id)arg6;
- (void)teardownContext:(id)arg1;
- (void)prepareContext:(id)arg1;
- (void)addScriptTagToHtml:(id)arg1 state:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDPath : NSObject
{
    char *mPathString;
}

- (_Bool)horizontalFlip;
- (_Bool)verticalFlip;
- (_Bool)hasHorizontalFlip;
- (_Bool)hasVerticalFlip;
- (char *)pathStr;
- (struct CGPath *)createBezierPath;
- (_Bool)isRect;
- (_Bool)isRectangular;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDRLineEnd : NSObject <GQDNameMappable>
{
    GQDBezierPath *mPath;
    struct CGPoint mEndPoint;
    _Bool mIsFilled;
    double mScale;
}

+ (const struct StateSpec *)stateForReading;
- (id).cxx_construct;
- (double)scale;
- (_Bool)isFilled;
- (struct CGPoint)endPoint;
- (struct CGPath *)path;
- (char *)pathStr;
- (void)dealloc;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHDOMXML : NSObject <GQHXMLOutput>
{
    struct _xmlDoc *mXMLDoc;
    struct _xmlNode *mCurrentNode;
}

- (struct __CFData *)createProgressiveHtml;
- (struct __CFData *)createHtmlWithCss:(struct __CFString *)arg1;
- (struct __CFData *)createHtml;
- (void)addCharRef:(const char *)arg1;
- (void)addXmlCharContent:(const char *)arg1;
- (void)setAttribute:(const char *)arg1 value:(const char *)arg2;
- (void)endElementWithExpectedName:(const char *)arg1;
- (void)endElement;
- (void)startElement:(const char *)arg1;
- (void)dealloc;
- (id)initWithHead;
- (id)initEmpty;
- (void)removeStyleSheetLinkNodeAndAddStyle:(struct __CFString *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHStreamedXML : NSObject <GQHXMLOutput>
{
    struct _xmlOutputBuffer {
        void *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        struct _xmlCharEncodingHandler *_field4;
        struct _xmlBuf *_field5;
        struct _xmlBuf *_field6;
        int _field7;
        int _field8;
    } *mOutputBuffer;
    struct __CFData *mData;
    struct __CFArray *mElementNameStack;
    int mLastOp;
    _Bool mNeedNewlineBeforeNextElement;
    struct _xmlDoc *mXMLDoc;
}

- (struct __CFData *)createProgressiveHtml;
- (struct __CFData *)createHtml;
- (struct __CFData *)createHtmlWithCss:(struct __CFString *)arg1;
- (void)addCharRef:(const char *)arg1;
- (void)addXmlCharContent:(const char *)arg1;
- (void)setAttribute:(const char *)arg1 value:(const char *)arg2;
- (void)endElementWithExpectedName:(const char *)arg1;
- (void)endElement;
- (void)startElement:(const char *)arg1;
- (void)dealloc;
- (id)initWithHead;
- (id)initEmpty;
- (const char *)peekElementName;
- (char *)popElementName;
- (void)pushElementName:(const char *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQHUtils : NSObject
{
}

+ (struct __CFString *)createHtmlHrefForLinkUri:(struct __CFString *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDTDateFormat : NSObject <GQDNameMappable>
{
    struct __CFString *mFormatString;
}

+ (const struct StateSpec *)stateForReading;
- (struct __CFString *)formatString;
- (void)dealloc;
- (id)initWithFormatString:(struct __CFString *)arg1;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDTDurationCell : GQDTCell
{
    double mValue;
    GQDTComputedFormatSpec *mComputedFormat;
    struct __CFBundle *mProcessorBundle;
}

- (struct __CFString *)createStringValue;
- (void)dealloc;
- (void)setProcessorBundle:(struct __CFBundle *)arg1;
- (int)readAttributesForDurationCell:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDTDurationFormat : NSObject <GQDNameMappable>
{
    struct __CFString *mFormatString;
}

+ (const struct StateSpec *)stateForReading;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1;
- (struct __CFString *)formatString;
- (void)dealloc;
- (id)initWithFormatString:(struct __CFString *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQDTGroupingCell : GQDTCell
{
    unsigned short mLevel;
    unsigned short mRowIdx;
    unsigned short mRowCount;
    _Bool mIsCollapsed;
    id mValue;
    id mFormat;
    struct __CFBundle *mProcessorBundle;
    _Bool mHasValidFormulaValue;
    struct __CFString *mFormulaValue;
}

+ (struct __CFString *)displayTypeString:(int)arg1;
- (_Bool)hasFormulaValue;
- (struct __CFString *)createFormattedValue;
- (id)value;
- (_Bool)isCollapsed;
- (unsigned short)rowCount;
- (unsigned short)rowIdx;
- (unsigned short)level;
- (void)dealloc;
- (int)readAttributes:(struct _xmlTextReader *)arg1;
- (void)setProcessorBundle:(struct __CFBundle *)arg1;
- (int)readRootFormat:(struct _xmlTextReader *)arg1;
- (int)readElement:(struct _xmlTextReader *)arg1;
- (int)readValue:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDCallout2Path : GQDPath
{
    struct CGSize mSize;
    double mCornerRadius;
    struct CGPoint mTailPosition;
    double mTailSize;
    _Bool mTailAtCenter;
}

- (id).cxx_construct;
- (_Bool)tailAtCenter;
- (double)tailSize;
- (struct CGPoint)tailPosition;
- (double)cornerRadius;
- (struct CGSize)size;
- (struct CGPath *)createBezierPath;
- (struct CGPoint)tailCenter;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDTComputedFormatSpec : NSObject
{
    id mFormat;
}

- (_Bool)isNumberFormat;
- (_Bool)isDurationFormat;
- (_Bool)isDateFormat;
- (id)format;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GQDFilteredImage : NSObject <GQDNameMappable>
{
    GQDImageBinary *mOriginalImageBinary;
    GQDImageBinary *mFilteredImageBinary;
}

+ (const struct StateSpec *)stateForReading;
- (void)dealloc;
- (id)imageBinary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GQNumberFormatter : NSObject
{
    struct __CFLocale *mLocale;
    struct __CFArray *mDecimalFormatters;
    struct __CFArray *mCurrencyFormatters;
    struct __CFArray *mPercentageFormatters;
    struct __CFArray *mScientificFormatters;
    struct __CFNumberFormatter *mFractionFormatter;
    NSMutableDictionary *mCurrencyCodeToSymbolMap;
    NSMutableDictionary *mCurrencyCodeToHalfWidthSymbolMap;
    NSString *mCurrencyString;
    NSString *mPercentageString;
    NSString *mScientificString;
    NSString *mDecimalString;
    NSString *mPercentSymbol;
    NSMutableArray *mTransformedDecimalStrings;
    NSMutableArray *mTransformedCurrencyStrings;
    NSMutableArray *mTransformedPercentageStrings;
    NSMutableArray *mTransformedScientificStrings;
    struct __CFString *mAdditionalCurrencyCode;
    struct __CFArray *mAdditionalCurrencyCodeFormatters;
}

+ (id)userVisibleCurrencyCodes;
+ (id)localizedPercentSymbol;
+ (id)defaultFormatStringForValueType:(int)arg1;
+ (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
+ (id)numberFormatStringSpecialSymbols;
+ (id)currentLocaleCurrencyCode;
+ (unsigned short)defaultDecimalPlacesForCurrencyCode:(id)arg1;
+ (id)currencySymbolForCurrencyCode:(id)arg1;
+ (id)displayNameForCurrencyCode:(id)arg1;
+ (id)availableCurrencyCodes;
+ (void)formatString:(id)arg1 replaceOccurencesOfUnescapedString:(id)arg2 withString:(id)arg3;
+ (id)formatString:(id)arg1 transformedForNegativeStyle:(int)arg2;
+ (int)positionOfMinusSignInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfSymbol:(id)arg1 inNumberFormatSubpattern:(id)arg2;
+ (id)formatterForLocale:(struct __CFLocale *)arg1;
- (id)localizedPercentSymbol;
- (id)defaultFormatStringForValueType:(int)arg1;
- (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
- (id)currentLocaleCurrencyCode;
- (id)halfWidthCurrencySymbolForCurrencyCode:(id)arg1;
- (id)currencySymbolForCurrencyCode:(id)arg1;
- (id)displayNameForCurrencyCode:(id)arg1;
- (_Bool)findCurrencySymbolInString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 successfulString:(const struct __CFString **)arg3;
- (_Bool)valueFromString:(struct __CFString *)arg1 formatters:(struct __CFArray *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)fractionFromString:(struct __CFString *)arg1 value:(double *)arg2;
- (_Bool)scientificFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)percentageFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)currencyFromString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)decimalFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (void)numberPreferencesChanged:(id)arg1;
- (void)dealloc;
- (id)initWithLocale:(struct __CFLocale *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GQDConnectionPath : GQDPath
{
    struct CGPoint mPoint;
    struct CGSize mSize;
}

- (id).cxx_construct;
- (struct CGPath *)createBezierPath;
- (struct CGSize)size;
- (struct CGPoint)point;

@end

__attribute__((visibility("hidden")))
@interface GQUProgressiveHelper : NSObject
{
    const void *mClient;
    CDStruct_ba543347 *mCallBacks;
    unsigned char started;
    struct __CFString *mNumbersSheetUri;
    float mPreviewHeight;
    float mPreviewWidth;
    _Bool mStartedMainHTML;
}

- (_Bool)previewHasStreamedMainHTML;
- (void)displayGenericError:(struct __CFError *)arg1;
- (float)getPreviewHeight;
- (float)getPreviewWidth;
- (void)setPreviewHeight:(float)arg1 andWidth:(float)arg2;
- (struct __CFString *)getNumbersSheetUri;
- (void)setNumbersSheetUri:(struct __CFString *)arg1;
- (void)closeAttachment:(struct __CFURL *)arg1;
- (void)appendDataToAttachment:(struct __CFURL *)arg1 chunk:(struct __CFData *)arg2;
- (struct __CFURL *)createAttachment:(struct __CFString *)arg1 options:(struct __CFDictionary *)arg2;
- (_Bool)progressiveStreamStarted;
- (void)startDataWithOptions:(struct __CFDictionary *)arg1;
- (void)dealloc;
- (id)initWithClient:(const void *)arg1 andCallbacks:(CDStruct_ba543347 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface GQDArcPath : GQDPath
{
    struct CGSize mSize;
    double mHeadAngle;
    double mArcWidth;
    double mArrowWidth;
    double mArrowLength;
}

- (id).cxx_construct;
- (struct CGPath *)createBezierPath;
- (double)arrowLength;
- (double)arrowWidth;
- (double)arcWidth;
- (double)headAngle;
- (struct CGSize)size;
- (int)readAttributesFromReader:(struct _xmlTextReader *)arg1 processor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUZipArchive : NSObject
{
    unsigned long long _options;
    NSMutableDictionary *_entriesMap;
    NSMutableSet *_entries;
}

- (void).cxx_destruct;
- (id)debugDescription;
@property(readonly, nonatomic) _Bool isValid;
- (id)newArchiveReadChannel;
@property(readonly, nonatomic) unsigned long long archiveLength;
- (void)collapseCommonRootDirectory;
- (void)enumerateEntriesUsingBlock:(CDUnknownBlockType)arg1;
- (id)entryForName:(id)arg1;
- (id)streamReadChannelForEntry:(id)arg1 validateCRC:(_Bool)arg2;
- (id)streamReadChannelForEntry:(id)arg1;
- (id)readChannelForEntry:(id)arg1 validateCRC:(_Bool)arg2;
- (id)readChannelForEntry:(id)arg1;
- (void)addEntry:(id)arg1;
- (_Bool)readFileCommentFromBuffer:(const void **)arg1 fileCommentLength:(unsigned short)arg2 entry:(id)arg3 dataSize:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)readZip64ExtraFieldFromBuffer:(const void *)arg1 dataLength:(unsigned short)arg2 entry:(id)arg3 error:(id *)arg4;
- (_Bool)readExtraFieldsFromBuffer:(const void **)arg1 extraFieldsLength:(unsigned short)arg2 entry:(id)arg3 dataSize:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)readFilenameFromBuffer:(const void **)arg1 nameLength:(unsigned short)arg2 entry:(id)arg3 dataSize:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)readCentralFileHeaderWithBuffer:(const void **)arg1 dataSize:(unsigned long long *)arg2 error:(id *)arg3;
- (void)readCentralDirectoryData:(id)arg1 entryCount:(unsigned long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readCentralDirectoryWithEntryCount:(unsigned long long)arg1 offset:(long long)arg2 size:(unsigned long long)arg3 channel:(id)arg4 queue:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)readZip64EndOfCentralDirectoryData:(id)arg1 channel:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readZip64EndOfCentralDirectoryWithChannel:(id)arg1 offset:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readZip64EndOfCentralDirectoryLocatorData:(id)arg1 channel:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readZip64EndOfCentralDirectoryLocatorWithChannel:(id)arg1 eocdOffset:(long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readEndOfCentralDirectoryData:(id)arg1 eocdOffset:(long long)arg2 channel:(id)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readArchiveWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)init;
- (id)tsp_dataForEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUZipEntry : NSObject
{
    _Bool _compressed;
    unsigned short _nameLength;
    unsigned short _extraFieldsLength;
    unsigned int _CRC;
    NSString *_name;
    unsigned long long _size;
    unsigned long long _compressedSize;
    unsigned long long _offset;
    unsigned long long _fileHeaderLength;
}

@property(nonatomic) unsigned long long fileHeaderLength; // @synthesize fileHeaderLength=_fileHeaderLength;
@property(nonatomic) unsigned short extraFieldsLength; // @synthesize extraFieldsLength=_extraFieldsLength;
@property(nonatomic) unsigned short nameLength; // @synthesize nameLength=_nameLength;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long compressedSize; // @synthesize compressedSize=_compressedSize;
@property(nonatomic, getter=isCompressed) _Bool compressed; // @synthesize compressed=_compressed;
@property(nonatomic) unsigned int CRC; // @synthesize CRC=_CRC;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSUUUIDPath : NSObject <NSCopying, NSFastEnumeration>
{
    NSArray *_uuids;
}

+ (id)lastUUIDFromUUIDPathString:(id)arg1;
@property(readonly, nonatomic) NSArray *uuids; // @synthesize uuids=_uuids;
- (void).cxx_destruct;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *UUIDPathString;
@property(readonly, nonatomic) NSUUID *lastUUID;
- (id)initWithUUIDPathString:(id)arg1;
- (id)initWithArray:(id)arg1;
- (void)saveToMessage:(struct UUIDPath *)arg1;
- (id)initWithMessage:(const struct UUIDPath *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUZipFileArchive : TSUZipArchive
{
    int _fdDups;
    NSObject<OS_dispatch_queue> *_accessQueue;
    unsigned long long _archiveLength;
    int _fd;
    NSURL *_temporaryDirectoryURL;
}

+ (id)zipArchiveFromURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (void)readArchiveFromURL:(id)arg1 options:(unsigned long long)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (_Bool)isZipArchiveAtFD:(int)arg1;
+ (_Bool)isZipArchiveAtURL:(id)arg1;
- (void).cxx_destruct;
- (id)debugDescription;
- (_Bool)isValid;
- (id)newArchiveReadChannelWithCleanupHandler:(CDUnknownBlockType)arg1;
- (id)newArchiveReadChannel;
- (unsigned long long)archiveLength;
- (_Bool)copyToTemporaryLocationRelativeToURL:(id)arg1 error:(id *)arg2;
- (_Bool)reopenWithTemporaryURL:(id)arg1 error:(id *)arg2;
- (void)removeTemporaryDirectory;
- (void)createTemporaryDirectoryRelativeToURL:(id)arg1;
- (void)dealloc;
- (id)initWithWriter:(id)arg1 forReadingFromURL:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (_Bool)openWithURL:(id)arg1 error:(id *)arg2;
- (id)initForReadingFromURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUDownloadSession : NSObject
{
    _Bool _isCancelled;
    TSUDownloadManager *_manager;
    id <TSUDownloadSessionDelegate> _delegate;
    _Bool _didFinishInitialization;
    NSObject<OS_dispatch_group> *_initializationGroup;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSMutableSet *_remainingTasks;
    NSMutableDictionary *_taskProgress;
    double _lastProgressValue;
    NSObject<OS_dispatch_group> *_completionGroup;
    TSUBasicProgress *_progress;
    NSError *_error;
    NSString *_sessionDescription;
    long long _totalBytesDownloaded;
    long long _totalBytesExpectedToBeDownloaded;
}

@property(readonly, nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) long long totalBytesExpectedToBeDownloaded; // @synthesize totalBytesExpectedToBeDownloaded=_totalBytesExpectedToBeDownloaded;
@property(readonly, nonatomic) long long totalBytesDownloaded; // @synthesize totalBytesDownloaded=_totalBytesDownloaded;
@property(readonly, nonatomic) TSUProgress *progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) NSString *sessionDescription; // @synthesize sessionDescription=_sessionDescription;
- (void).cxx_destruct;
- (void)cancelRemainingTasksNotifyingDelegate:(_Bool)arg1;
- (void)updateProgressAndNotifyDelegate;
- (void)updateTaskProgress:(id)arg1 withTotalBytesWritten:(long long)arg2 totalBytesExpectedToWrite:(long long)arg3;
- (void)taskWithDescription:(id)arg1 didWriteData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)taskWithDescription:(id)arg1 didCompleteWithError:(id)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (_Bool)hasActiveTaskWithDescription:(id)arg1;
- (void)didFinishInitialization;
- (void)headRequestForDownloadItem:(id)arg1 taskProgress:(id)arg2;
- (id)initWithManager:(id)arg1 downloadItems:(id)arg2 description:(id)arg3 willRequestDownload:(_Bool)arg4 delegate:(id)arg5;
- (id)description;
- (void)cancel;
- (id)waitUntilTimeout:(unsigned long long)arg1;
- (void)notifyCompletionWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isActive;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUDownloadTaskProgress : NSObject
{
    _Bool _isActive;
    long long _totalBytesDownloaded;
    long long _totalBytesExpectedToBeDownloaded;
}

@property(nonatomic) long long totalBytesExpectedToBeDownloaded; // @synthesize totalBytesExpectedToBeDownloaded=_totalBytesExpectedToBeDownloaded;
@property(nonatomic) long long totalBytesDownloaded; // @synthesize totalBytesDownloaded=_totalBytesDownloaded;
@property(nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSUDownloadManager : NSObject <NSURLSessionDownloadDelegate>
{
    NSOperationQueue *_downloadSessionsQueue;
    NSHashTable *_downloadSessions;
    NSObject<OS_dispatch_queue> *_activeTasksQueue;
    NSMutableDictionary *_activeTasks;
    NSMutableDictionary *_inProgressDownloadItems;
    NSMutableArray *_inProcessDownloadQueue;
    NSMutableArray *_completionHandlers;
    NSURLSession *_defaultURLSession;
}

+ (id)newFilteredDownloadItems:(id)arg1;
+ (id)sharedManager;
+ (void)wakeUp;
+ (void)registerDownloadItemClass:(Class)arg1;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)notifyWhenAllTasksAreCompletedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancelTasksWithDescriptions:(id)arg1 forDownloadSession:(id)arg2;
- (id)outstandingDownloadSessionForItems:(id)arg1 description:(id)arg2 delegate:(id)arg3;
- (id)downloadItems:(id)arg1 description:(id)arg2 delegate:(id)arg3;
- (_Bool)beginDownloadTaskForDownloadItem:(id)arg1 isInProcessDownloadTask:(_Bool)arg2 taskDescription:(id)arg3 urlOrNil:(id)arg4;
- (id)downloadSessionForItems:(id)arg1 description:(id)arg2 willRequestDownload:(_Bool)arg3 delegate:(id)arg4 taskHandler:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) NSURL *downloadInboxDirectory;
- (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initPrivate;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUZipFileWriter : TSUZipWriter
{
    id <TSURandomWriteChannel> _writeChannel;
}

+ (void)zipDirectoryAtURL:(id)arg1 customDirectoryFilename:(id)arg2 toURL:(id)arg3 queue:(id)arg4 progressHandler:(CDUnknownBlockType)arg5;
+ (void)zipDirectoryAtURL:(id)arg1 toURL:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)writeChannel;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithURL:(id)arg1 error:(id *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUZipReadChannel : NSObject <TSUReadChannel>
{
    TSUZipEntry *_entry;
    TSUZipArchive *_archive;
    _Bool _validateCRC;
    id <TSUReadChannel> _archiveReadChannel;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (void)close;
- (void)handleFailureWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2 error:(id)arg3;
- (_Bool)processData:(id)arg1 CRC:(unsigned int *)arg2 isDone:(_Bool)arg3 queue:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)readWithFileHeaderLength:(unsigned long long)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)readFileHeaderFromData:(id)arg1 headerLength:(unsigned long long *)arg2;
- (void)readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithEntry:(id)arg1 archive:(id)arg2 validateCRC:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUZipWriter : NSObject
{
    unsigned long long _options;
    NSMutableArray *_entries;
    NSMutableDictionary *_entriesMap;
    TSUZipWriterEntry *_currentEntry;
    _Bool _calculateSize;
    _Bool _force32BitSize;
    _Bool _calculateCRC;
    unsigned short _entryTime;
    unsigned short _entryDate;
    long long _currentOffset;
    NSObject<OS_dispatch_data> *_localFileHeaderData;
    NSMutableArray *_entryDatas;
    unsigned long long _entryDataSize;
    NSObject<OS_dispatch_queue> *_writeQueue;
    long long _writtenOffset;
    NSError *_error;
    _Bool _isClosed;
}

- (void).cxx_destruct;
- (unsigned long long)encodedLengthForEntryWithName:(id)arg1;
- (void)enumerateEntriesUsingBlock:(CDUnknownBlockType)arg1;
- (void)initEntryTime;
- (void)handleWriteError:(id)arg1;
@property(readonly, nonatomic) unsigned long long archiveLength;
@property(readonly, nonatomic) id <TSURandomWriteChannel> writeChannel;
- (void)writeData:(id)arg1 offset:(long long)arg2;
- (void)writeData:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)writeData:(id)arg1;
- (void)writeZip64EndOfCentralDirectoryLocatorWithOffset:(long long)arg1;
- (void)writeZip64EndOfCentralDirectoryWithOffset:(long long)arg1 size:(long long)arg2 entryCount:(unsigned long long)arg3;
- (void)writeEndOfCentralDirectoryDataWithOffset:(long long)arg1 size:(long long)arg2 entryCount:(unsigned long long)arg3;
- (void)writeCentralFileHeaderDataForEntry:(id)arg1;
- (id)localFileHeaderDataForEntry:(id)arg1;
- (void)writeCentralDirectory;
- (void)closeWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(_Bool)arg2 fromReadChannel:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(_Bool)arg2 size:(unsigned long long)arg3 CRC:(unsigned int)arg4 fromReadChannel:(id)arg5 writeHandler:(CDUnknownBlockType)arg6;
- (void)writeEntryWithName:(id)arg1 force32BitSize:(_Bool)arg2 size:(unsigned long long)arg3 CRC:(unsigned int)arg4 fromReadChannel:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)finishEntry;
- (void)flushEntryData;
- (void)addDataImpl:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addData:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)addData:(id)arg1;
- (void)beginEntryWithNameImpl:(id)arg1 force32BitSize:(_Bool)arg2 size:(unsigned long long)arg3 CRC:(unsigned int)arg4;
- (void)beginEntryWithName:(id)arg1 force32BitSize:(_Bool)arg2 size:(unsigned long long)arg3 CRC:(unsigned int)arg4;
- (void)beginEntryWithName:(id)arg1 force32BitSize:(_Bool)arg2;
- (id)initWithOptions:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUZipWriterEntry : NSObject
{
    unsigned int _CRC;
    NSString *_name;
    unsigned long long _size;
    unsigned long long _offset;
}

@property(nonatomic) unsigned int CRC; // @synthesize CRC=_CRC;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface TSUZipInflateReadChannel : NSObject <TSUStreamReadChannel>
{
    NSObject<OS_dispatch_queue> *_readQueue;
    id <TSUStreamReadChannel> _readChannel;
    unsigned long long _remainingUncompressedSize;
    unsigned int _CRC;
    _Bool _validateCRC;
    struct z_stream_s _stream;
    unsigned long long _outBufferSize;
    char *_outBuffer;
}

- (void).cxx_destruct;
- (void)close;
- (void)handleFailureWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2 error:(id)arg3;
- (_Bool)processData:(id)arg1 inflateResult:(int *)arg2 CRC:(unsigned int *)arg3 isDone:(_Bool)arg4 handlerQueue:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)prepareBuffer;
- (void)dealloc;
- (id)initWithReadChannel:(id)arg1 uncompressedSize:(unsigned long long)arg2 CRC:(unsigned int)arg3 validateCRC:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUNetworkReachability : NSObject
{
    struct __SCNetworkReachability *_reachabilityRef;
    _Bool _localWiFi;
}

+ (long long)networkReachabilityStatusForLocalWiFi;
+ (long long)networkReachabilityStatusForInternetConnection;
+ (long long)networkReachabilityStatusForDocumentResources;
+ (id)networkReachabilityForLocalWiFi;
+ (id)networkReachabilityForInternetConnection;
+ (id)networkReachabilityForDocumentResources;
+ (id)networkReachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)networkReachabilityWithHostName:(id)arg1;
@property(readonly, nonatomic) long long status;
@property(readonly, nonatomic) _Bool connectionRequired;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (long long)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithReachabilityRef:(struct __SCNetworkReachability *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUFileIOChannel : NSObject <TSUReadChannel, TSUStreamWriteChannel, TSURandomWriteChannel>
{
    NSObject<OS_dispatch_io> *_channel;
    _Bool _isClosed;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (void)close;
- (void)writeData:(id)arg1 offset:(long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)writeData:(id)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)createRandomAccessChannel;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 descriptor:(int)arg2 queue:(id)arg3 cleanupHandler:(CDUnknownBlockType)arg4;
- (id)initWithType:(unsigned long long)arg1 channel:(id)arg2;
- (id)initForRandomWritingURL:(id)arg1 error:(id *)arg2;
- (id)initForStreamWritingURL:(id)arg1 error:(id *)arg2;
- (id)initForReadingDescriptor:(int)arg1 queue:(id)arg2 cleanupHandler:(CDUnknownBlockType)arg3;
- (id)initForReadingURL:(id)arg1 error:(id *)arg2;
- (id)initWithType:(unsigned long long)arg1 URL:(id)arg2 oflag:(int)arg3 mode:(unsigned short)arg4 error:(id *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUReadChannelInputStreamAdapter : NSObject <SFUInputStream>
{
    id <TSUReadChannel> _readChannel;
    id <TSUStreamReadChannel> _streamReadChannel;
    NSObject<OS_dispatch_data> *_leftoverData;
    NSObject<OS_dispatch_queue> *_readQueue;
    long long _offset;
}

- (void).cxx_destruct;
- (id)closeLocalStream;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (void)close;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)_initWithReadChannel:(id)arg1 streamReadChannel:(id)arg2;
- (id)initWithStreamReadChannel:(id)arg1;
- (id)initWithReadChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSURemoteDefaults : NSObject
{
    NSObject<OS_dispatch_queue> *_checkQueue;
    NSObject<OS_dispatch_source> *_updateTimer;
}

+ (id)sharedDefaults;
- (void).cxx_destruct;
- (void)processResponse:(id)arg1 data:(id)arg2 error:(id)arg3;
- (id)URLRequest;
- (double)timeIntervalUntilNextUpdate;
- (void)checkForUpdate;
- (void)registerDefaults;
- (id)dictionaryForKey:(id)arg1;
- (id)URLForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initInternal;
@property(readonly, nonatomic) NSURL *downloadableContentURL;

@end

__attribute__((visibility("hidden")))
@interface TSUBufferedReadChannel : NSObject <TSUReadChannel>
{
    NSObject<OS_dispatch_semaphore> *_readSemaphore;
    id <TSUReadChannel> _sourceReadChannel;
    unsigned long long _sourceReadBufferSize;
    NSObject<OS_dispatch_queue> *_sourceReadQueue;
    long long _sourceOffset;
    NSError *_sourceReadChannelError;
    CDUnknownBlockType _streamReadChannelBlock;
    id <TSUStreamReadChannel> _streamReadChannel;
    NSObject<OS_dispatch_queue> *_streamReadChannelSourceQueue;
    CDUnknownBlockType _streamReadChannelSourceHandler;
    NSObject<OS_dispatch_queue> *_streamReadChannelOutputQueue;
    _Bool _isStreamOutputDone;
    long long _streamOutputOffset;
    unsigned long long _streamOutputLength;
    NSObject<OS_dispatch_data> *_currentStreamOutputData;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (id)_currentDataIntersectionWithOffset:(long long)arg1 length:(unsigned long long)arg2 isReadDone:(_Bool *)arg3;
- (void)_readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)setStreamReadChannelSourceQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_resetStreamReadChannel;
- (void)_closeStreamReadChannel;
- (void)close;
- (void)dealloc;
- (id)initWithReadChannel:(id)arg1 sourceReadBufferSize:(unsigned long long)arg2 streamReadChannelBlock:(CDUnknownBlockType)arg3;
- (id)initWithReadChannel:(id)arg1 streamReadChannelBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUBufferedReadChannelHelper : NSObject <TSUStreamReadChannel>
{
    TSUBufferedReadChannel *_bufferedReadChannel;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithBufferedReadChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUNSProgressObserver : NSObject
{
    NSProgress *_nsProgress;
    TSUProgressContext *_progressContext;
    TSUBasicProgress *_basicProgress;
    double _basicProgressMaxValue;
}

+ (id)observerForNSProgress:(id)arg1 reportingToBasicProgress:(id)arg2 maxValue:(double)arg3;
+ (id)observerForNSProgress:(id)arg1 reportingToProgressContext:(id)arg2;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stop;
- (void)start;
- (id)initWithNSProgress:(id)arg1 progressContext:(id)arg2 basicProgress:(id)arg3 basicProgressMaxValue:(double)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUSafeSaveAssistant : NSObject
{
    NSURL *_saveURL;
    NSURL *_temporaryDirectoryURL;
    NSURL *_writeURL;
}

+ (void)removeTemporaryDirectoryAtURL:(id)arg1;
+ (_Bool)finishWritingToURL:(id)arg1 byMovingItemAtURL:(id)arg2 addingAttributes:(id)arg3 error:(id *)arg4;
+ (void)writeAttributes:(id)arg1 toURL:(id)arg2;
+ (id)temporaryDirectoryURLForWritingToURL:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSURL *writeURL; // @synthesize writeURL=_writeURL;
- (void).cxx_destruct;
- (void)removeTemporaryDirectory;
- (_Bool)endSaveWithSuccess:(_Bool)arg1 toURL:(id)arg2 addingAttributes:(id)arg3 error:(id *)arg4;
- (_Bool)endSaveWithSuccess:(_Bool)arg1 addingAttributes:(id)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initForSavingToURL:(id)arg1 error:(id *)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUDispatchData : NSObject
{
    NSObject<OS_dispatch_data> *_data;
    unsigned long long _size;
    unsigned long long _maxFragmentsCount;
    NSObject<OS_dispatch_data> *_fragmentedData;
    NSObject<OS_dispatch_data> *_defragmentedData;
    unsigned long long _fragmentsCount;
}

@property(readonly, nonatomic) unsigned long long fragmentsCount; // @synthesize fragmentsCount=_fragmentsCount;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *defragmentedData; // @synthesize defragmentedData=_defragmentedData;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *fragmentedData; // @synthesize fragmentedData=_fragmentedData;
@property(nonatomic) unsigned long long maxFragmentsCount; // @synthesize maxFragmentsCount=_maxFragmentsCount;
@property(readonly, nonatomic) unsigned long long size; // @synthesize size=_size;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *data;
- (void)append:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUFlushingManager : NSObject
{
    TSURetainedPointerKeyDictionary *_objects;
    struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> *_sortedObjects;
    struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> *_sortedNewObjects;
    TSUPointerKeyDictionary *_inactiveObjects;
    unsigned int _clock;
    _Bool _alwaysFlushing;
    _Bool _stopFlushing;
    _Bool _stopFlushingWhenQueueEmpty;
    _Bool _isFlushing;
    id <TSUFlushable> _flushingObject;
    NSCondition *_cond;
    NSCondition *_isFlushingCond;
    TSUMemoryWatcher *_memoryWatcher;
    NSThread *_bgThread;
    unsigned long long _backgroundTransitionTaskId;
    unsigned long long _activeBgThreadTask;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
- (void)_bgThreadInactive;
- (void)_bgThreadActive;
- (void)_bgTaskFinished;
- (void)_bgTaskStarted;
- (void)_didUseObject:(id)arg1;
- (_Bool)controlsInactiveObject:(id)arg1;
- (_Bool)controlsActiveObject:(id)arg1;
- (void)advanceClock;
- (void)transferNewObjects;
- (void)insertObjectInfo:(struct TSUFlushableObjectInfo *)arg1;
- (struct TSUFlushableObjectInfo *)eraseInfoForObject:(id)arg1;
- (_Bool)isNewObject:(struct TSUFlushableObjectInfo *)arg1;
- (void)_backgroundThread:(id)arg1;
- (void)_stopFlushingObjects;
- (void)_startFlushingObjects;
- (void)_flushAllEligible;
- (void)memoryLevelDecreased:(int)arg1 was:(int)arg2;
- (void)memoryLevelIncreased:(int)arg1 was:(int)arg2;
- (void)didReceiveMemoryWarning;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)safeToFlush:(id)arg1 wasAccessed:(_Bool)arg2;
- (void)unsafeToFlush:(id)arg1;
- (void)doneWithObject:(id)arg1;
- (void)stopProtectingObject:(id)arg1;
- (void)protectObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSUMemoryWatcher : NSObject
{
    TSUFlushingManager *_flushingManager;
    _Bool _going;
    _Bool _stop;
    int _warningRsizeMb;
    int _urgentRsizeMb;
}

- (void)_simulateMemoryWarning:(id)arg1;
- (void)_periodicallySimulateMemoryWarning:(id)arg1;
- (void)stopObserving;
- (void)beginObserving;
- (void)dealloc;
- (id)initWithFlushingManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUIndexedStringStore : NSObject
{
    int _lock;
    NSMutableDictionary *_indexByString;
    NSMutableArray *_stringByIndex;
}

- (unsigned long long)count;
- (id)stringForIndex:(unsigned long long)arg1;
- (unsigned long long)indexForString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUMutableLinkedPointerSet : NSObject <NSFastEnumeration>
{
    struct __CFDictionary *mDictionary;
    TSULinkedPointerSetEntry *mHead;
    TSULinkedPointerSetEntry *mTail;
}

- (id)array;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)insertFirstObject:(id)arg1;
- (void)addObject:(id)arg1;
- (_Bool)hasObjects;
- (_Bool)containsObject:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)firstObject;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumeratorAfterObject:(id)arg1;
- (id)reverseObjectEnumerator;
- (id)objectEnumerator;
- (void)dealloc;
- (id)init;
- (void)encodeToOwnedReferenceMessage:(RepeatedPtrField_a0d2dbe7 *)arg1 archiver:(id)arg2;
- (void)encodeToReferenceMessage:(RepeatedPtrField_a0d2dbe7 *)arg1 archiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSULinkedPointerSetEntry : NSObject
{
    id mObject;
    TSULinkedPointerSetEntry *mPrevious;
    TSULinkedPointerSetEntry *mNext;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1 previousEntry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSULinkedPointerSetEnumerator : NSEnumerator
{
    TSULinkedPointerSetEntry *mHead;
    TSULinkedPointerSetEntry *mLastUsed;
}

- (id)nextObject;
- (id)initWithFirstEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSULinkedPointerSetReverseEnumerator : NSEnumerator
{
    TSULinkedPointerSetEntry *mTail;
    TSULinkedPointerSetEntry *mLastUsed;
}

- (id)nextObject;
- (id)initWithLastEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSUAssertionHandler : NSAssertionHandler
{
}

+ (id)currentHandler;
+ (id)performBlockIgnoringAssertions:(CDUnknownBlockType)arg1;
+ (void)installAsNSHandler;
- (void)handleFailureWithLocation:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleFailureInFunction:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 file:(id)arg3 lineNumber:(long long)arg4 description:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSUPair : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    id mFirst;
    id mSecond;
}

+ (id)pair;
+ (id)pairWithPair:(id)arg1;
+ (id)pairWithFirst:(id)arg1 second:(id)arg2;
- (void)p_SetSecond:(id)arg1;
- (void)p_SetFirst:(id)arg1;
- (id)second;
- (id)first;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPair:(id)arg1;
- (id)initWithFirst:(id)arg1 second:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUMutablePair : TSUPair
{
}

- (void)setSecond:(id)arg1;
- (void)setFirst:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUPairNonRetainedSecond : TSUPair
{
}

- (void)p_SetSecond:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUShallowCopyPair : TSUPair
{
}

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUMutableShallowCopyPair : TSUShallowCopyPair
{
}

- (void)setSecond:(id)arg1;
- (void)setFirst:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUDateFormat : NSObject <NSCopying, TSUDataFormat>
{
    NSString *mFormat;
    NSString *mName;
}

+ (id)formatWithFormat:(id)arg1 name:(id)arg2;
- (void)setFormatName:(id)arg1;
- (id)formatName;
- (id)format;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFormat:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUDateFormatter : NSObject
{
    NSString *mDateOnlyFormatString;
    NSString *mTimeOnlyFormatString;
    struct __CFDateFormatter *mFullDateFormatter;
}

+ (id)shortMonthNamesForNonCachedCurrentLocale;
+ (id)timePortionOfDateTimeFormatString:(id)arg1;
+ (id)datePortionOfDateTimeFormatString:(id)arg1;
+ (unsigned long long)p_DateTimeSplitLocationInFormatString:(id)arg1;
+ (id)dateFormatStringSpecialSymbols;
+ (id)supportedTimeFormats;
+ (id)supportedDateFormats;
+ (id)defaultDateTimeFormat;
- (void)dealloc;
- (id)init;
- (id)stringFromDate:(id)arg1 format:(id)arg2;
- (id)fullDateString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUDateFormatter_NSFormatter : NSFormatter
{
    NSString *mPreferredFormat;
    _Bool isDateOnly;
    _Bool isTimeOnly;
}

@property(nonatomic) _Bool isTimeOnly; // @synthesize isTimeOnly;
@property(nonatomic) _Bool isDateOnly; // @synthesize isDateOnly;
@property(retain, nonatomic) NSString *preferredFormat; // @synthesize preferredFormat=mPreferredFormat;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSUDateParser : NSObject
{
    NSMutableArray *mFormatCategories;
    struct __CFLocale *mLocale;
    _Bool mIsJapaneseLocale;
    struct __CFDateFormatter *mSpecialCaseFormatter;
}

+ (id)parserForDefaultLocale;
- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 successfulFormatString:(const struct __CFString **)arg2;
- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 preferredFormatString:(struct __CFString *)arg2 successfulFormatString:(const struct __CFString **)arg3 tryAggressiveFormats:(_Bool)arg4;
- (struct __CFDate *)newDateFromStringTryingFormats:(struct __CFString *)arg1 locale:(struct __CFLocale *)arg2 formats:(id)arg3 outSuccessfulFormatString:(const struct __CFString **)arg4;
- (struct __CFDateFormatter *)specialCaseDateFormatterForLocale:(struct __CFLocale *)arg1;
- (void)dealloc;
- (id)formatStringsDictionary;
- (id)initWithLocale:(struct __CFLocale *)arg1;
- (void)datePreferencesChanged:(id)arg1;
- (void)parseFormat:(id)arg1 initialPattern:(id *)arg2 separator:(unsigned short *)arg3;
- (void)addFormat:(id)arg1 locale:(struct __CFLocale *)arg2 formatCategoryMap:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUDateFormatCategory : NSObject
{
    struct __CFDateFormatter *mInitialFormatter;
    NSMutableArray *mEntries;
}

- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 forceAllowAMPM:(_Bool)arg2 successfulFormatString:(const struct __CFString **)arg3 perfect:(_Bool *)arg4;
- (id)entryForSeparator:(unsigned short)arg1;
- (void)addSeparator:(unsigned short)arg1 format:(id)arg2 locale:(struct __CFLocale *)arg3;
- (id)formatStringsDictionary;
- (id)initialPattern;
- (void)dealloc;
- (id)initWithInitialPattern:(id)arg1 locale:(struct __CFLocale *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUDateFormatCategoryEntry : NSObject
{
    unsigned short mSeparator;
    struct __CFArray *mFormatters;
    NSMutableSet *mFormatStrings;
}

- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 forceAllowAMPM:(_Bool)arg2 successfulFormatString:(const struct __CFString **)arg3 perfect:(_Bool *)arg4;
- (void)addFormat:(id)arg1 locale:(struct __CFLocale *)arg2;
- (id)formatStrings;
- (unsigned short)separator;
- (void)dealloc;
- (id)initWithSeparator:(unsigned short)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUDuration : NSObject <NSCopying>
{
    double mTimeInterval;
}

+ (id)durationWithTimeInterval:(double)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)timeInterval;
- (id)initWithTimeInterval:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUDurationFormat : NSObject <NSCopying, TSUDataFormat>
{
    NSString *mFormat;
    NSString *mName;
}

+ (id)formatWithFormat:(id)arg1 name:(id)arg2;
- (void)setFormatName:(id)arg1;
- (id)formatName;
- (id)format;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFormat:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUDurationFormatter : NSFormatter
{
    NSString *mFormat;
    int mCompactStyleStartUnit;
}

@property(nonatomic) int compactStyleStartUnit; // @synthesize compactStyleStartUnit=mCompactStyleStartUnit;
@property(copy, nonatomic) NSString *format; // @synthesize format=mFormat;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (void)dealloc;
- (void)p_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSULocale : NSObject
{
    NSLocale *_locale;
    NSString *_localeIdentifier;
}

+ (id)currentLocale;
+ (id)preferredLanguages;
@property(readonly) NSString *localeIdentifier;
- (void)delloc;
- (id)initWithLocale:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUSharedLocale : NSObject
{
    struct __CFLocale *mCurrentLocale;
    NSArray *mObserverObjects;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedLocale;
+ (id)_singletonAlloc;
- (void)datePreferencesChanged:(id)arg1;
- (struct __CFLocale *)currentLocale;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSUNumberFormat : NSObject <TSUNumberFormatting, NSCopying, NSMutableCopying>
{
    int mValueType;
    NSString *mFormatString;
    unsigned short mDecimalPlaces;
    NSString *mCurrencyCode;
    _Bool mUseAccountingStyle;
    int mNegativeStyle;
    _Bool mShowThousandsSeparator;
    int mFractionAccuracy;
    _Bool mFormatStringRequiresSuppressionOfMinusSign;
    _Bool mUseScientificFormattingAutomatically;
    _Bool mIgnoreDecimalPlacesForZeroValue;
    NSString *mPrefixString;
    NSString *mSuffixString;
    unsigned char mBase;
    unsigned short mBasePlaces;
    _Bool mBaseUseMinusSign;
    _Bool mIsCustom;
    double mScaleFactor;
    _Bool mFormatStringContainsTabCharacter;
    _Bool mFormatContainsSpecialTokens;
    _Bool mFormatContainsIntegerToken;
    unsigned char mNumberOfHashDecimalPlaceholders;
    unsigned char mTotalNumberOfDecimalPlaceholdersInFormat;
    _Bool mRequiresFractionReplacement;
    NSArray *mInterstitialStrings;
    NSIndexSet *mInterstitialStringInsertionIndexes;
    unsigned short mIndexFromRightOfLastDigitPlaceholder;
    _Bool mIsTextFormat;
    unsigned char mMinimumIntegerWidth;
    unsigned char mDecimalWidth;
    unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;
    unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;
    NSString *mFormatName;
    unsigned int mCustomFormatID;
}

+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 prefixString:(id)arg9 suffixString:(id)arg10 scaleFactor:(double)arg11 base:(unsigned char)arg12 basePlaces:(unsigned short)arg13 baseUseMinusSign:(_Bool)arg14 isCustom:(_Bool)arg15 formatName:(id)arg16;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 scaleFactor:(double)arg9 isCustom:(_Bool)arg10 formatName:(id)arg11;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 base:(unsigned char)arg9 basePlaces:(unsigned short)arg10 baseUseMinusSign:(_Bool)arg11;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(id)arg9;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8;
+ (id)instanceWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;
+ (id)numberFormatFromFormatStruct:(CDStruct_bfed0e84)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)customNumberFormatTokens;
- (_Bool)isEquivalent:(id)arg1;
- (id)stringFromString:(id)arg1;
- (id)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3 forceSuppressMinusSign:(_Bool)arg4;
- (id)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3;
- (id)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2;
- (id)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2 forceSuppressMinusSign:(_Bool)arg3;
- (id)stringFromDouble:(double)arg1;
- (id)stringFromDouble:(double)arg1 forceSuppressMinusSign:(_Bool)arg2;
- (id)chartLabelStringFromDouble:(double)arg1 forceSuppressMinusSign:(_Bool)arg2;
- (id)chartLabelStringFromDouble:(double)arg1;
- (id)chartLabelStringNofixFromDouble:(double)arg1;
- (_Bool)requiresParensToBeReplacedWithSpacesForDouble:(double)arg1;
- (_Bool)usesTabs;
- (void)setIgnoreDecimalPlacesForZeroValue:(_Bool)arg1;
- (_Bool)ignoreDecimalPlacesForZeroValue;
- (void)setUseScientificFormattingAutomatically:(_Bool)arg1;
- (_Bool)useScientificFormattingAutomatically;
- (_Bool)customFormatShouldAutoInsertPercentSymbol;
- (_Bool)hasValidDecimalPlaces;
- (_Bool)baseUseMinusSign;
- (unsigned short)basePlaces;
- (unsigned short)base;
- (_Bool)usesTextFormatForValue:(double)arg1;
- (_Bool)canFormatText;
- (_Bool)isTextFormat;
- (double)scaleFactor;
- (_Bool)usesAccountingStyle;
- (int)fractionAccuracy;
- (_Bool)showThousandsSeparator;
- (int)negativeStyle;
- (id)currencyCode;
- (id)formatString;
- (id)suffixString;
- (id)prefixString;
- (unsigned short)decimalPlaces;
- (int)valueType;
- (unsigned int)customFormatID;
- (_Bool)isCustom;
- (id)formatName;
- (void)setFormatName:(id)arg1;
- (void)dealloc;
- (id)numberFormatBySettingBaseRepresentNegativeWithMinus:(_Bool)arg1;
- (id)numberFormatBySettingBasePlaces:(unsigned short)arg1;
- (id)numberFormatBySettingBase:(unsigned char)arg1;
- (id)numberFormatBySettingUseAccountingStyle:(_Bool)arg1;
- (id)numberFormatBySettingFractionAccuracy:(int)arg1;
- (id)numberFormatBySettingShowThousandsSeparator:(_Bool)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1 andNegativeStyle:(int)arg2;
- (id)numberFormatBySettingNegativeStyle:(int)arg1;
- (id)numberFormatBySettingCurrencyCode:(id)arg1;
- (id)numberFormatByIncrementingDecimalPlaces:(short)arg1;
- (id)numberFormatBySettingSuffixString:(id)arg1;
- (id)numberFormatBySettingPrefixString:(id)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1;
- (id)numberFormatBySettingValueType:(int)arg1;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 prefixString:(id)arg9 suffixString:(id)arg10 scaleFactor:(double)arg11 base:(unsigned char)arg12 basePlaces:(unsigned short)arg13 baseUseMinusSign:(_Bool)arg14 isCustom:(_Bool)arg15 interstitialStrings:(id)arg16 interstitialStringInsertionIndexes:(id)arg17 indexFromRightOfLastDigitPlaceholder:(unsigned short)arg18 minimumIntegerWidth:(unsigned char)arg19 decimalWidth:(unsigned char)arg20 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg21 numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg22 isTextFormat:(_Bool)arg23 formatName:(id)arg24 customFormatID:(unsigned int)arg25;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(id)arg9;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 prefixString:(id)arg9 suffixString:(id)arg10 isCustom:(_Bool)arg11;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 base:(unsigned char)arg9 basePlaces:(unsigned short)arg10 baseUseMinusSign:(_Bool)arg11;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8;
- (id)initCustomFormatWithFormatString:(id)arg1 currencyCode:(id)arg2 showThousandsSeparator:(_Bool)arg3 fractionAccuracy:(int)arg4 scaleFactor:(double)arg5 interstitialStrings:(id)arg6 interstitialStringInsertionIndexes:(id)arg7 indexFromRightOfLastDigitPlaceholder:(unsigned short)arg8 minimumIntegerWidth:(unsigned char)arg9 decimalWidth:(unsigned char)arg10 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg11 numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg12 isTextFormat:(_Bool)arg13 formatName:(id)arg14;
- (id)init;
- (id)baseStringFromDouble:(double)arg1;
- (id)fractionStringFromDouble:(double)arg1;
- (id)initWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct FormatStructArchive *)arg1 archiver:(id)arg2;
- (CDStruct_bfed0e84)formatStructAndCustomFormatDataStruct:(CDStruct_b87b2d04 *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUMutableNumberFormat : TSUNumberFormat
{
}

- (void)setCustomFormatID:(unsigned int)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setBasePlaces:(unsigned short)arg1;
- (void)setBase:(unsigned char)arg1;
- (void)setUseAccountingStyle:(_Bool)arg1;
- (void)setFractionAccuracy:(int)arg1;
- (void)setShowThousandsSeparator:(_Bool)arg1;
- (void)setNegativeStyle:(int)arg1;
- (void)setCurrencyCode:(id)arg1;
- (void)setSuffixString:(id)arg1;
- (void)setPrefixString:(id)arg1;
- (void)setDecimalPlaces:(unsigned short)arg1;
- (void)setValueType:(int)arg1;
- (void)p_copyIVarsFromNumberFormat:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUNumberFormatter : NSObject
{
    struct __CFLocale *mLocale;
    struct __CFArray *mDecimalFormatters;
    struct __CFArray *mCurrencyFormatters;
    struct __CFArray *mPercentageFormatters;
    struct __CFArray *mScientificFormatters;
    struct __CFNumberFormatter *mFractionFormatter;
    NSMutableDictionary *mCurrencyCodeToSymbolMap;
    NSMutableDictionary *mCurrencyCodeToHalfWidthSymbolMap;
    NSString *mCurrencyString;
    NSString *mPercentageString;
    NSString *mScientificString;
    NSString *mDecimalString;
    NSString *mPercentSymbol;
    NSMutableArray *mTransformedDecimalStrings;
    NSMutableArray *mTransformedCurrencyStrings;
    NSMutableArray *mTransformedPercentageStrings;
    NSMutableArray *mTransformedScientificStrings;
    struct __CFString *mAdditionalCurrencyCode;
    struct __CFArray *mAdditionalCurrencyCodeFormatters;
}

+ (id)userVisibleCurrencyCodes;
+ (id)localizedPercentSymbol;
+ (id)defaultFormatStringForValueType:(int)arg1;
+ (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
+ (id)numberFormatStringSpecialSymbols;
+ (id)currentLocaleListSeparator;
+ (id)currentNonCachedLocaleCurrencyDecimalSeparator;
+ (id)currentLocaleCurrencyDecimalSeparator;
+ (id)currentNonCachedLocaleDecimalSeparator;
+ (id)currentLocaleDecimalSeparator;
+ (id)currentNonCachedLocaleCurrencyCode;
+ (id)currentLocaleCurrencyCode;
+ (unsigned short)defaultDecimalPlacesForCurrencyCode:(id)arg1;
+ (id)currencySymbolForCurrencyCode:(id)arg1;
+ (id)displayNameForCurrencyCode:(id)arg1;
+ (id)availableCurrencyCodes;
+ (void)formatString:(id)arg1 replaceOccurencesOfUnescapedString:(id)arg2 withString:(id)arg3;
+ (id)formatString:(id)arg1 transformedForNegativeStyle:(int)arg2;
+ (int)positionOfMinusSignInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfSymbol:(id)arg1 inNumberFormatSubpattern:(id)arg2;
+ (void)initialize;
+ (id)formatterForLocale:(struct __CFLocale *)arg1;
- (struct __CFArray *)p_scientificFormatters;
- (struct __CFArray *)p_percentageFormatters;
- (struct __CFArray *)p_currencyFormatters;
- (struct __CFArray *)p_decimalFormatters;
- (id)localizedPercentSymbol;
- (id)defaultFormatStringForValueType:(int)arg1;
- (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
- (id)currentLocaleCurrencyCode;
- (id)halfWidthCurrencySymbolForCurrencyCode:(id)arg1;
- (id)currencySymbolForCurrencyCode:(id)arg1;
- (id)displayNameForCurrencyCode:(id)arg1;
- (_Bool)findCurrencySymbolInString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 successTSUlString:(const struct __CFString **)arg3;
- (_Bool)valueFromString:(struct __CFString *)arg1 formatters:(struct __CFArray *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)fractionFromString:(struct __CFString *)arg1 value:(double *)arg2;
- (_Bool)scientificFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)percentageFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)currencyFromString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)decimalFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (void)numberPreferencesChanged:(id)arg1;
- (void)dealloc;
- (id)initWithLocale:(struct __CFLocale *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUPerformanceTestHarness : NSObject
{
    NSMutableArray *mTestCases;
    _Bool mQuiet;
    long long mPassingTests;
    long long mTotalTests;
    _Bool mPassed;
    struct timeval mSetupTime;
}

+ (id)harness;
@property(readonly, nonatomic) _Bool passed; // @synthesize passed=mPassed;
@property(readonly, nonatomic) long long testCount; // @synthesize testCount=mTotalTests;
@property(readonly, nonatomic) long long passingTestCount; // @synthesize passingTestCount=mPassingTests;
@property(nonatomic) _Bool quiet; // @synthesize quiet=mQuiet;
- (void)report;
- (_Bool)runTests;
- (void)cleanup;
- (void)testSuite;
- (void)setup;
- (void)runTestWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3 precision:(double)arg4;
- (void)runTestWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3;
- (id)testWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3;
- (void)dealloc;
- (id)init;
- (void)p_writeCsvResultsToDirectory:(id)arg1;
- (void)p_writeConsoleMessagesToDirectory:(id)arg1;
- (void)p_writeSystemConfigurationToDirectory:(id)arg1;
- (id)p_createResultDirectory;

@end

__attribute__((visibility("hidden")))
@interface TSUPerformanceTest : NSObject
{
    NSString *mName;
    SEL mSelector;
    id mTarget;
    double mGoalTime;
    double mPrecision;
    _Bool mQuiet;
    struct TSUOpstat_s mTiming;
    _Bool mPassed;
}

+ (id)csvHeader;
@property(readonly, nonatomic) _Bool passed; // @synthesize passed=mPassed;
@property(nonatomic) _Bool quiet; // @synthesize quiet=mQuiet;
@property(nonatomic) double precision; // @synthesize precision=mPrecision;
@property(nonatomic) double goalTime; // @synthesize goalTime=mGoalTime;
@property(nonatomic) struct TSUOpstat_s timing; // @synthesize timing=mTiming;
@property(readonly, nonatomic) NSString *name; // @synthesize name=mName;
- (id)csvString;
- (void)report;
- (void)run;
- (void)dealloc;
- (id)initWithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3 goalTime:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSUNoCopyDictionary : NSMutableDictionary
{
    struct __CFDictionary *mDictionary;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectEnumerator;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (unsigned long long)count;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithCFDictionary:(struct __CFDictionary *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUPointerKeyDictionary : TSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSURetainedPointerKeyDictionary : TSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUIntDictionary : TSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUDatabase : NSObject
{
    struct sqlite3 *_db;
    _Bool _readonly;
    struct sqlite3_stmt *_beginTransactionStatement;
    struct sqlite3_stmt *_commitTransactionStatement;
    struct sqlite3_stmt *_rollbackTransactionStatement;
}

@property(readonly, nonatomic) struct sqlite3 *_sqliteDatabase; // @synthesize _sqliteDatabase=_db;
@property(readonly, nonatomic) _Bool readonly; // @synthesize readonly=_readonly;
- (_Bool)_upgradeSchemaWithError:(id *)arg1;
- (id)_initWithPath:(id)arg1 readonly:(_Bool)arg2 error:(id *)arg3;
- (_Bool)endSingleResultQuery:(struct sqlite3_stmt *)arg1 shouldFinalize:(_Bool)arg2 error:(id *)arg3;
- (_Bool)startSingleResultQuery:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (_Bool)executeUpdateWithSql:(const char *)arg1 error:(id *)arg2;
- (_Bool)executeUpdate:(struct sqlite3_stmt *)arg1 shouldFinalize:(_Bool)arg2 error:(id *)arg3;
- (_Bool)prepareStatement:(struct sqlite3_stmt **)arg1 sql:(const char *)arg2 error:(id *)arg3;
- (_Bool)setSchemaVersion:(int)arg1 error:(id *)arg2;
- (_Bool)upgradeFromSchemaVersion:(int)arg1 error:(id *)arg2;
- (_Bool)needsUpgradeFromSchemaVersion:(int)arg1;
- (_Bool)rollbackTransactionWithError:(id *)arg1;
- (_Bool)commitTransactionWithError:(id *)arg1;
- (_Bool)beginTransactionWithError:(id *)arg1;
- (_Bool)closeWithError:(id *)arg1;
- (_Bool)compactWithError:(id *)arg1;
- (void)dealloc;
- (id)initReadonlyWithPath:(id)arg1 error:(id *)arg2;
- (id)initWithPath:(id)arg1 error:(id *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUCFSetEnumerator : NSObject <NSFastEnumeration>
{
    void *mInlineObjects[16];
    const void **mObjects;
    long long mCount;
    long long mIndex;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)allObjects;
- (id)nextObject;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSUPointerSet : NSSet
{
    struct __CFSet *mSet;
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (id)allObjects;
- (void)getObjects:(id *)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSURetainedPointerSet : TSUPointerSet
{
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)allObjects;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUMutablePointerSet : NSMutableSet
{
    struct __CFSet *mSet;
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (id)allObjects;
- (void)getObjects:(id *)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSUMutableRetainedPointerSet : TSUMutablePointerSet
{
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)allObjects;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUIntegerKeyDictionary : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *mDictionary;
}

- (struct __CFDictionary *)p_cfDictionary;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)valueEnumerator;
- (id)allValues;
- (id)keyEnumerator;
- (void)removeAllObjects;
- (void)setObject:(id)arg1 forKey:(long long)arg2;
- (void)removeObjectForKey:(long long)arg1;
- (id)objectForKey:(long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUIntegerKeyDictionaryKeyEnumerator : NSObject
{
    long long **_keys;
    unsigned long long _count;
    unsigned long long _index;
}

- (long long)nextKey;
- (void)dealloc;
- (id)initWithIntegerKeyDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUTemporaryDirectory : NSObject
{
    NSString *_path;
    _Bool _leak;
}

- (void)_createDirectoryWithSignature:(id)arg1 subdirectory:(id)arg2;
- (void)leakTemporaryDirectory;
- (id)URL;
- (id)path;
- (void)dealloc;
- (id)initWithSignature:(id)arg1 subdirectory:(id)arg2;
- (id)initWithSignature:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUPathSet : NSObject <NSCopying>
{
    NSMutableSet *mPaths;
    NSMutableDictionary *mBasePathToNumberMap;
    TSUPathSet *mUnderlyingSet;
}

+ (void)processPath:(id)arg1 base:(id *)arg2 hasBaseNumber:(_Bool *)arg3 baseNumber:(unsigned int *)arg4 extension:(id *)arg5;
+ (id)parseNumberOutOfBasename:(id)arg1 hasNumber:(_Bool *)arg2 number:(unsigned int *)arg3;
- (void)unionPathSet:(id)arg1;
- (void)setUnderlyingPathSet:(id)arg1;
- (_Bool)isPathUsed:(id)arg1;
- (void)pathIsNoLongerUsed:(id)arg1;
- (void)pathIsUsed:(id)arg1;
- (id)addPath:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithPaths:(id)arg1 basePathToNumberMap:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUDescription : NSObject
{
    NSObject *_object;
    Class _class;
    void *_cfType;
    NSString *_header;
    NSMutableDictionary *_fields;
    NSMutableArray *_fieldOrder;
    unsigned long long _fieldNameWidth;
    _Bool _commaSeparated;
}

+ (id)descriptionWithObject:(id)arg1;
+ (id)descriptionWithCFType:(void *)arg1 format:(id)arg2;
+ (id)descriptionWithObject:(id)arg1 class:(Class)arg2;
+ (id)descriptionWithObject:(id)arg1 format:(id)arg2;
+ (id)descriptionWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3;
- (id)descriptionString;
- (void)setFieldOptionCommaSeparated;
- (void)addSuperDescription;
- (void)addFieldValue:(id)arg1;
- (void)addFieldWithFormat:(id)arg1;
- (void)addField:(id)arg1 format:(id)arg2;
- (void)addField:(id)arg1 value:(id)arg2;
- (id)p_header;
- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (id)initWithObject:(id)arg1 format:(id)arg2;
- (id)initWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3;
- (id)initWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3 arguments:(struct __va_list_tag [1])arg4;
- (id)initWithCFType:(void *)arg1 header:(id)arg2;
- (id)initWithObject:(id)arg1 class:(Class)arg2 header:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUColor : NSObject <TSSPreset, TSSPresetSource, TSSThemeAsset, NSCopying>
{
    struct CGColor *mCGColor;
}

+ (id)brownColor;
+ (id)purpleColor;
+ (id)orangeColor;
+ (id)magentaColor;
+ (id)yellowColor;
+ (id)cyanColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)lightGrayColor;
+ (id)grayColor;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)clearColor;
+ (id)randomColor;
+ (id)colorWithUIColor:(id)arg1;
+ (id)colorWithPatternImage:(id)arg1;
+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)p_defaultPresetColors:(int)arg1;
@property(readonly) struct CGColor *CGColor; // @synthesize CGColor=mCGColor;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)newBlendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (_Bool)isNearlyWhite;
- (_Bool)isOpaque;
- (double)luminance;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)invertedColor;
- (id)grayscaleColor;
- (id)UIColor;
- (void)getRGBAComponents:(double *)arg1;
- (double)alphaComponent;
- (double)blueComponent;
- (double)greenComponent;
- (double)redComponent;
- (double)p_rgbComponentWithIndex:(unsigned char)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isAlmostEqualToColor:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithUIColor:(id)arg1;
- (id)initWithPatternImage:(id)arg1;
- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (void)saveToMessage:(struct Color *)arg1;
- (id)initWithMessage:(const struct Color *)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly, nonatomic) NSString *presetKind;
- (void)saveToArchive:(struct Color *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Color *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUWeakReference : NSObject
{
    id mObject;
}

+ (id)weakReferenceWithObject:(id)arg1;
@property(readonly, nonatomic) id object; // @synthesize object=mObject;
- (void)dealloc;
- (id)init;
- (id)initWithObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUChunkedString : NSMutableString
{
    unsigned long long _length;
    struct vector<boost::shared_ptr<TSUStringChunk>, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> _chunks;
    unsigned long long _chunkLength;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)compact;
- (void)appendString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;
- (id)init;
- (id)initWithChunkLength:(unsigned long long)arg1;
- (void)p_compactChunksInRange:(struct _NSRange)arg1;
- (void)p_deleteCharactersInRange:(struct _NSRange)arg1 chunkIndex:(unsigned long long)arg2;
- (void)p_insertCharactersInRange:(struct _NSRange)arg1 fromString:(id)arg2 atIndex:(unsigned long long)arg3 chunkIndex:(unsigned long long)arg4;
- (void)p_appendRange:(struct _NSRange)arg1 fromString:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUFormatObject : NSObject <TSCHDataFormatter, TSCHDataFormatterPersistableStyleObject, TSCHCustomFormatSupport, NSCopying, NSMutableCopying>
{
    CDStruct_bfed0e84 mFormatStruct;
    _Bool mUseExpandedContents;
}

+ (id)defaultDurationFormat;
+ (id)defaultDateFormat;
+ (id)instanceWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) _Bool useExpandedContents; // @synthesize useExpandedContents=mUseExpandedContents;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)p_setFormatStruct:(CDStruct_bfed0e84)arg1;
@property(readonly, nonatomic) CDStruct_bfed0e84 formatStruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithTSUFormatFormatStruct:(CDStruct_bfed0e84)arg1;
- (id)initWithTSUFormatFormatStruct:(CDStruct_bfed0e84)arg1 useExpandedContents:(_Bool)arg2;
- (id)init;
- (id)initWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct FormatStructArchive *)arg1 archiver:(id)arg2;
- (int)formatType;
- (id)convertToSupportedClientFormatObject;
- (id)convertToPersistableStyleObject;
- (_Bool)isCompatibleWithDataFormatter:(id)arg1;
- (id)chartFormattedInspectorStringForValue:(id)arg1;
- (id)chartFormattedStringForValue:(id)arg1;
- (id)dataFormatterForDocumentRoot:(id)arg1;
- (unsigned int)customFormatListKey;
- (_Bool)isCustom;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUMutableFormatObject : TSUFormatObject <TSCHCustomFormatPasteSupport>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) CDStruct_bfed0e84 formatStruct;
- (void)updateAfterPasteForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUProgressContext : NSObject
{
    TSUProgressStage *m_currentStage;
    NSDate *m_lastReportTime;
    double m_lastProgressReport;
    double m_lastOverallProgress;
}

- (double)overallProgress;
- (double)currentPosition;
- (void)setMessage:(id)arg1;
- (void)setPercentageProgressFromTCProgressContext:(double)arg1;
- (void)setProgress:(double)arg1;
- (void)advanceProgress:(double)arg1;
- (void)endStage;
- (void)nextSubStageWillTakeThisManyOfMySteps:(double)arg1;
- (void)createStageWithSteps:(double)arg1;
- (void)createStageWithSteps:(double)arg1 takingSteps:(double)arg2;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverBlock:(CDUnknownBlockType)arg1;
- (void)addProgressObserver:(id)arg1 selector:(SEL)arg2;
- (void)reset;
- (void)reportProgress:(double)arg1 overallProgress:(double)arg2;
- (id)currentStage;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUProgressStage : NSObject
{
    double m_currentPosition;
    double m_totalSteps;
    double m_stepsInParent;
    double m_startInParent;
    double m_nextSubStageParentSize;
    TSUProgressStage *m_parentStage;
    TSUProgressContext *m_context;
}

- (id)description;
- (void)setNextSubStageParentSize:(double)arg1;
- (double)nextSubStageParentSize;
- (double)overallProgress;
- (double)currentPosition;
- (id)parentStage;
- (void)end;
- (void)setProgressPercentage:(double)arg1;
- (void)setProgress:(double)arg1;
- (void)advanceProgress:(double)arg1;
- (void)dealloc;
- (id)initWithSteps:(double)arg1 takingSteps:(double)arg2 inContext:(id)arg3;
- (id)initRootStageInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUKeychainUtils : NSObject
{
}

+ (_Bool)removeGenericItem:(id)arg1 error:(id *)arg2;
+ (_Bool)lookupGenericItem:(id)arg1 account:(id *)arg2 passphrase:(id *)arg3 error:(id *)arg4;
+ (_Bool)lookupGenericItem:(id)arg1 passphrase:(id *)arg2 error:(id *)arg3;
+ (_Bool)setPassphrase:(id)arg1 forGenericItem:(id)arg2 service:(id)arg3 description:(id)arg4 label:(id)arg5 account:(id)arg6 error:(id *)arg7;
+ (_Bool)setPassphrase:(id)arg1 forGenericItem:(id)arg2 service:(id)arg3 description:(id)arg4 label:(id)arg5 error:(id *)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSULRUCache : NSObject
{
    TSUNoCopyDictionary *mData;
    NSMutableArray *mOrderedKeys;
    unsigned long long mMax;
    id mCallbackTarget;
    SEL mCallback;
}

@property(readonly, nonatomic) unsigned long long maxSize; // @synthesize maxSize=mMax;
- (void)p_removeOldestObject;
- (void)clearEvictionCallbackTarget;
- (void)setEvictionCallbackTarget:(id)arg1 selector:(SEL)arg2;
@property(readonly, nonatomic) NSArray *allKeys;
@property(readonly, nonatomic) NSArray *allValues;
- (id)objectForKey:(id)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithMaxSize:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUAtomicLRUCache : TSULRUCache
{
}

- (void)clearEvictionCallbackTarget;
- (void)setEvictionCallbackTarget:(id)arg1 selector:(SEL)arg2;
- (id)allKeys;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUDeferredInvocationQueue : NSObject
{
    NSMutableArray *_invocations;
    id _target;
}

- (void)performInvocations;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSUCustomCallBackDictionary : NSMutableDictionary
{
    struct __CFDictionary *mDictionary;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectEnumerator;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (unsigned long long)count;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1 keyCallBacks:(const CDStruct_90be15af *)arg2 valueCallBacks:(const CDStruct_70d275a4 *)arg3;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithCFDictionary:(struct __CFDictionary *)arg1;
- (id)init;
- (id)initForThemeAssetMapperWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSURangeList : NSObject
{
    struct vector<_NSRange, std::__1::allocator<_NSRange>> mRangeList;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)consolidate;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
- (void)reverse;
- (void)replaceWithRange:(struct _NSRange)arg1 atIndex:(unsigned long long)arg2;
- (void)removeRangeAtIndex:(unsigned long long)arg1;
- (void)insertRange:(struct _NSRange)arg1 atIndex:(unsigned long long)arg2;
- (void)addRange:(struct _NSRange)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)initWithRangeList:(id)arg1;
- (id)initWithRange:(struct _NSRange)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUAggregateEnumerator : NSEnumerator
{
    NSMutableArray *_objects;
}

+ (id)aggregateEnumeratorWithObjects:(id)arg1;
- (id)nextObject;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithObjects:(id)arg1;
- (id)initWithFirstObject:(id)arg1 argumentList:(struct __va_list_tag [1])arg2;

@end

__attribute__((visibility("hidden")))
@interface TSURegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (id)regularExpressionWithString:(id)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (const char *)getBytesForString:(id)arg1 lossByte:(unsigned char)arg2;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)matchedRangeForString:(id)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (struct _NSRange)matchedRangeForCString:(const char *)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (id)expressionString;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (unsigned long long)numberOfSubexpressions;
- (id)initWithExpressionString:(id)arg1 options:(unsigned int)arg2;
- (id)initWithExpressionString:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSULinearRegressionModel : TSURegressionModel
{
    double *mCoefficients;
    int mNumCoefficients;
    _Bool mAffine;
    double mIntercept;
    double *mCoefficientsStandardErrors;
    double mRSquared;
    double mStandardError;
    double mFStatistic;
    double mDegreesFreedom;
    double mRegressionSumSquares;
    double mErrorSumSquares;
}

- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)estimateForX:(double *)arg1;
- (double)errorSumSquares;
- (double)regressionSumSquares;
- (double)degreesFreedom;
- (double)fStatistic;
- (double)standardError;
- (double)rSquared;
- (double)coefficientStandardErrorAtIndex:(int)arg1;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 makeAffine:(_Bool)arg5 desiredIntercept:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSURegressionModel : NSObject
{
    _Bool mModelValid;
    int mErrorType;
}

- (id)formattedStringWithCoefficient:(double)arg1;
- (id)equationString;
- (struct _NSRange)superscriptRangeAtIndex:(int)arg1;
- (int)numSuperscriptRanges;
- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)rSquared;
- (double)estimateForX:(double *)arg1;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (_Bool)isModelValid;
- (int)errorType;
- (int)regressionType;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSUIntToIntDictionary : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *mDictionary;
}

- (struct __CFDictionary *)p_cfDictionary;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)allValues;
- (id)allKeys;
- (id)arrayOfBoxedKeys;
- (void)applyFromIntToIntDictionary:(id)arg1;
- (_Bool)containsKey:(long long)arg1;
- (id)keyEnumerator;
- (void)removeAllInts;
- (void)setInt:(long long)arg1 forKey:(long long)arg2;
- (void)removeIntForKey:(long long)arg1;
- (long long)intForKey:(long long)arg1;
- (_Bool)intIsPresentForKey:(long long)arg1 outValue:(long long *)arg2;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUIntToIntDictionaryKeyEnumerator : NSObject
{
    long long **_keys;
    unsigned long long _count;
    unsigned long long _index;
}

- (long long)nextKey;
- (void)dealloc;
- (id)initWithIntegerKeyDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUFlushableCachedImage : TSUFlushableObject
{
    struct CGImage *_image;
    id _delegate;
    SEL _delegateCreateImageSelector;
}

- (struct CGImage *)newImage;
- (_Bool)hasFlushableContent;
- (void)unload;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 createImageSelector:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUFlushableObject : NSObject <TSUFlushable>
{
    int _retainCount;
    int _ownerCount;
    TSUFlushingManager *_flushingManager;
    NSObject<NSLocking> *_flushingManagerIvarLock;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)flush;
- (_Bool)hasFlushableContent;
- (void)unload;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (void)ownerDidAccess;
- (void)ownerWillAccess;
- (id)ownerAutoreleasedAccess;
- (void)ownerRelease;
- (id)ownerRetain;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUSystemInfo : NSObject
{
}

+ (id)systemVersion;
+ (id)operatingSystemName;
+ (id)processorName;
+ (id)macAddress;

@end

__attribute__((visibility("hidden")))
@interface TSUExponentialRegressionModel : TSURegressionModel
{
    double *mCoefficients;
    int mNumCoefficients;
    _Bool mAffine;
    double mIntercept;
    double mRSquared;
    int mNumSuperscriptRanges;
    NSMutableArray *mSuperscriptRangesArray;
}

- (struct _NSRange)superscriptRangeAtIndex:(int)arg1;
- (int)numSuperscriptRanges;
- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)estimateForX:(double *)arg1;
- (double)rSquared;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 makeAffine:(_Bool)arg5 desiredIntercept:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSULogarithmicRegressionModel : TSURegressionModel
{
    double *mCoefficients;
    int mNumCoefficients;
    _Bool mAffine;
    double mIntercept;
    double mRSquared;
}

- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)estimateForX:(double *)arg1;
- (double)rSquared;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 makeAffine:(_Bool)arg5 desiredIntercept:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSUMovingAverageRegressionModel : TSURegressionModel
{
    int mNumTrendPoint;
    double *mTrendXValues;
    double *mTrendYValues;
}

- (double)estimateForX:(double *)arg1;
- (id)equationString;
- (struct _NSRange)superscriptRangeAtIndex:(int)arg1;
- (int)numSuperscriptRanges;
- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)rSquared;
- (double)trendYValueAtIndex:(int)arg1;
- (double)trendXValueAtIndex:(int)arg1;
- (int)numTrendPoint;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(id)arg2 ys:(id)arg3 numPeriod:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSUPolynomialRegressionModel : TSURegressionModel
{
    double *mCoefficients;
    int mNumCoefficients;
    _Bool mAffine;
    double mIntercept;
    double mRSquared;
    int mNumSuperscriptRanges;
    NSMutableArray *mSuperscriptRangesArray;
}

- (struct _NSRange)superscriptRangeAtIndex:(int)arg1;
- (int)numSuperscriptRanges;
- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)estimateFor1DX:(double)arg1;
- (double)estimateForX:(double *)arg1;
- (double)rSquared;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xOrder:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xOrder:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xOrder:(int)arg4 makeAffine:(_Bool)arg5 desiredIntercept:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSUPowerRegressionModel : TSURegressionModel
{
    double *mCoefficients;
    int mNumCoefficients;
    _Bool mAffine;
    double mIntercept;
    double mRSquared;
    int mNumSuperscriptRanges;
    NSMutableArray *mSuperscriptRangesArray;
}

- (struct _NSRange)superscriptRangeAtIndex:(int)arg1;
- (int)numSuperscriptRanges;
- (id)getEquationStringAndBuildSuperscriptRangesArray;
- (double)estimateForX:(double *)arg1;
- (double)rSquared;
- (double)coefficientAtIndex:(int)arg1;
- (int)numCoefficients;
- (int)regressionType;
- (void)dealloc;
- (id)initNonAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 desiredIntercept:(double)arg5;
- (id)initAffineWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4;
- (id)initWithMappings:(int)arg1 xs:(double *)arg2 ys:(double *)arg3 xDimension:(int)arg4 makeAffine:(_Bool)arg5 desiredIntercept:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface _TSUImageM : TSUImage
{
}

+ (id)initWithImageSourceRef:(struct CGImageSource *)arg1;
+ (id)initWithContentsOfFile:(id)arg1;
+ (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)initWithData:(id)arg1;
+ (id)initWithCGImage:(struct CGImage *)arg1;
+ (id)init;
+ (id)allocWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUCGImage : TSUImage
{
    struct CGImage *mCGImage;
    long long mOrientation;
    double mScale;
}

- (void)dealloc;
- (long long)imageOrientation;
- (double)scale;
- (struct CGSize)size;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (struct CGImage *)CGImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUUIImage : TSUImage
{
    UIImage *mUIImage;
}

+ (id)imageNamed:(id)arg1;
- (long long)imageOrientation;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (struct CGImage *)CGImage;
- (double)scale;
- (struct CGSize)size;
- (id)UIImage;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithUIImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUImage : NSObject
{
    struct CGImage *mCachedSliceableImage;
    struct __CFDictionary *mImageSlices;
    long long mImageSliceCacheLock;
    id mCachedSystemImage;
    long long mCachedImageLock;
}

+ (id)imageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)imageWithCGImage:(struct CGImage *)arg1;
+ (id)imageWithData:(id)arg1;
+ (id)imageWithContentsOfFile:(id)arg1;
+ (id)imageNamed:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)imageWithUIImage:(id)arg1;
+ (id)noisePatternWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 factor:(double)arg3;
- (void)drawInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2 stretchingCenterWidthBy:(double)arg3;
- (struct CGImage *)CGImageForContentsScale:(double)arg1;
- (id)stretchedImageOfSize:(struct CGSize)arg1 leftCapWidth:(double)arg2 rightCapWidth:(double)arg3 topCapHeight:(double)arg4 bottomCapHeight:(double)arg5;
- (id)PNGRepresentation;
- (id)JPEGRepresentationWithCompressionQuality:(double)arg1;
- (id)TIFFRepresentation;
- (id)imagePartsWithLeftCapWidth:(double)arg1 rightCapWidth:(double)arg2 topCapHeight:(double)arg3 bottomCapHeight:(double)arg4;
- (_Bool)isEmpty;
@property(readonly, nonatomic) long long imageOrientation;
@property(readonly, nonatomic) struct CGImage *CGImage;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (void)dealloc;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithImageSourceRef:(struct CGImageSource *)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
@property(readonly, nonatomic) UIImage *UIImage;
- (id)initWithUIImage:(id)arg1;
- (id)compositedImageWithColor:(id)arg1 alpha:(double)arg2 blendMode:(int)arg3;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUWidthLimitedQueue : NSObject
{
    int mReaderCount;
    int mLimit;
    NSObject<OS_dispatch_queue> *mManagerQueue;
    NSObject<OS_dispatch_queue> *mTargetQueue;
    int mSpinLock;
}

- (void)performAsync:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithLimit:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUBool : NSObject
{
    _Bool _value;
}

@property(nonatomic) _Bool value; // @synthesize value=_value;

@end

__attribute__((visibility("hidden")))
@interface TSUCache : TSUFlushableObject
{
    NSString *mCacheName;
    NSMutableDictionary *mCache;
}

- (id)description;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)hasFlushableContent;
- (void)unload;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1;
- (id)p_objectsForKeys:(id)arg1 notFoundMarker:(id)arg2;
- (void)p_addEntriesFromDictionary:(id)arg1;
- (id)p_objectForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUFastReadInvalidatingCache : NSObject
{
    CDUnknownBlockType mGenerator;
    id mValue;
    long long mReaderCount;
    NSArray *mToDispose;
    _Bool mReentrant;
    NSCondition *mCondition;
    _Bool mIsGenerating;
}

- (void)invalidate;
- (id)value;
- (void)p_setValue:(id)arg1;
- (void)dealloc;
- (id)initForReentrant:(_Bool)arg1 withGenerator:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSUDateParserLibrary : NSObject
{
    unsigned long long mMaxPermittedParsers;
    unsigned long long mNumberOfUses;
    unsigned long long mParsersCreated;
    NSMutableArray *mAvailableDateParsers;
    NSCondition *mParserLibraryConditionVariable;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDateParserLibrary;
+ (id)_singletonAlloc;
- (void)returnDateParser:(id)arg1;
- (id)checkoutDateParser;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSUCustomFormatWrapper : NSObject <NSCopying>
{
    struct TSUCustomFormat *mCustomFormat;
    _Bool mHasOwnership;
}

- (const CDStruct_b87b2d04 *)conditionalFormatDataForValue:(double)arg1;
- (const CDStruct_b87b2d04 *)defaultFormatData;
- (int)formatType;
- (id)formatName;
- (const struct TSUCustomFormat *)pointerToTSUCustomFormat;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCustomFormat:(struct TSUCustomFormat *)arg1 takeOwnership:(_Bool)arg2;
- (id)initWithCustomFormat:(struct TSUCustomFormat *)arg1;
- (id)formattedBodyStringForDoubleValue:(double)arg1 customFormatListKey:(unsigned int)arg2 formatType:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUConcurrentCache : TSUCache
{
    TSUReadWriteQueue *mReadWriteQueue;
}

@property(readonly, nonatomic) TSUReadWriteQueue *readWriteQueue; // @synthesize readWriteQueue=mReadWriteQueue;
- (id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)hasFlushableContent;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1 andWait:(_Bool)arg2;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)unload;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUReadWriteQueue : NSObject
{
    NSObject<OS_dispatch_semaphore> *mCanEnqueueReaders;
    NSObject<OS_dispatch_queue> *mGlobalQueue;
    NSObject<OS_dispatch_group> *mInFlightReaders;
    NSObject<OS_dispatch_group> *mInFlightWriters;
}

- (void)waitOnInFlightWriters;
- (void)performSyncWrite:(CDUnknownBlockType)arg1;
- (void)performAsyncWrite:(CDUnknownBlockType)arg1;
- (void)performSyncRead:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUQuickTestMeasurement : NSObject
{
    TSMTraceBuffer *mBuffer;
    NSDictionary *mPrevious;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
- (id)displayTime:(unsigned long long)arg1 forClassAndMethodName:(id)arg2;
- (id)p_niceString:(unsigned long long)arg1 withPrefix:(id)arg2;
- (id)getPreviousTimeForKey:(id)arg1;
- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSUProgress : NSObject
{
    NSMutableSet *mProgressObservers;
    NSObject<OS_dispatch_queue> *mProgressObserversQueue;
    NSString *mMessage;
}

@property(copy) NSString *message; // @synthesize message=mMessage;
- (double)protected_minProgressObserverValueInterval;
- (_Bool)protected_hasProgressObservers;
- (void)protected_progressDidChange;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
@property(readonly, getter=isIndeterminate) _Bool indeterminate;
@property(readonly) double maxValue;
@property(readonly) double value;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUBasicProgress : TSUProgress
{
    TSUBasicProgressStorage *mStorage;
}

@property(getter=isIndeterminate) _Bool indeterminate;
- (double)maxValue;
@property double value;
- (void)dealloc;
- (id)init;
- (id)initWithMaxValue:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUScaledProgress : TSUProgress
{
    TSUScaledProgressStorage *mStorage;
    TSUProgress *mProgress;
    id mProgressObserver;
    NSObject<OS_dispatch_queue> *mProgressQueue;
}

- (void)p_removeProgressObserverFromProgressInQueue;
- (void)p_addProgressObserverToProgressInQueue;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
@property double maxValue;
- (double)value;
@property(retain) TSUProgress *progress;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUProgressGroup : TSUProgress
{
    NSArray *mChildren;
    NSArray *mChildrenProgressObservers;
    NSObject<OS_dispatch_queue> *mChildrenProgressObserversQueue;
}

- (void)p_updateChildrenProgressObservers;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
- (double)maxValue;
- (double)value;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUProgressContextProgress : TSUProgress
{
    TSUProgressContext *mProgressContext;
    NSObject<OS_dispatch_queue> *mProgressContextObserverQueue;
    _Bool hasAddedProgressContextObserver;
}

- (void)p_progressDidChange:(id)arg1;
- (void)p_updateProgressContextObserver;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
- (double)maxValue;
- (double)value;
- (void)dealloc;
- (id)init;
- (id)initWithProgressContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUProgressObserver : NSObject
{
    double mValueInterval;
    NSObject<OS_dispatch_queue> *mQueue;
    CDUnknownBlockType mHandler;
    double mLastHandledValue;
    _Bool mLastHandledIndeterminate;
}

@property(readonly, nonatomic) double valueInterval; // @synthesize valueInterval=mValueInterval;
- (void)handleValue:(double)arg1 maxValue:(double)arg2 isIndeterminate:(_Bool)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSUBasicProgressStorage : NSObject
{
    double mValue;
    double mMaxValue;
    _Bool mIndeterminate;
}

@property(getter=isIndeterminate) _Bool indeterminate; // @synthesize indeterminate=mIndeterminate;
@property double maxValue; // @synthesize maxValue=mMaxValue;
@property double value; // @synthesize value=mValue;

@end

__attribute__((visibility("hidden")))
@interface TSUScaledProgressStorage : NSObject
{
    double mMaxValue;
}

@property double maxValue; // @synthesize maxValue=mMaxValue;

@end

__attribute__((visibility("hidden")))
@interface TSUObjectSnapshot : NSObject
{
    unsigned long long mEntryCount;
    void **mSnapshot;
    NSArray *mCompared;
}

- (void)dealloc;
- (void)p_clear;
- (void)compare;
- (void)calibrate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface SFURegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (id)regularExpressionWithString:(id)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (const char *)getBytesForString:(id)arg1 lossByte:(unsigned char)arg2;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)matchedRangeForString:(id)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (struct _NSRange)matchedRangeForCString:(const char *)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (id)expressionString;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (unsigned long long)numberOfSubexpressions;
- (id)initWithExpressionString:(id)arg1 options:(unsigned int)arg2;
- (id)initWithExpressionString:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface SFUCryptoInputStream : NSObject <SFUInputStream>
{
    id <SFUInputStream> mBaseStream;
    SFUCryptor *mCryptor;
    long long mOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initForDecryptionWithInputStream:(id)arg1 key:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUCryptoKey : NSObject
{
    unsigned int mIterationCount;
    char *mKey;
    unsigned long long mKeyLength;
    NSData *mSaltData;
    NSString *_passphrase;
}

@property(readonly, nonatomic) NSString *passphrase; // @synthesize passphrase=_passphrase;
- (id)saltData;
- (unsigned long long)keyLength;
- (const char *)keyData;
- (unsigned int)iterationCount;
- (int)keyType;
- (void)dealloc;
- (id)initAes128Key:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3;
- (id)initAes128KeyFromPassphrase:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3 saltData:(id)arg4;
- (id)initAes128KeyFromPassphrase:(id)arg1 iterationCount:(unsigned int)arg2 saltData:(id)arg3;
- (id)initAes128KeyFromPassphrase:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3;
- (id)initAes128KeyFromPassphrase:(id)arg1 withIterationCountAndSaltDataFromCryptoKey:(id)arg2;
- (id)initAes128KeyFromPassphrase:(id)arg1 iterationCount:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface SFUCryptoOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mBaseStream;
    SFUCryptor *mCryptor;
    _Bool mIsClosed;
    _Bool mComputeCrc32;
    unsigned int mCrc32;
}

+ (unsigned long long)encodedLengthForDataLength:(unsigned long long)arg1 key:(id)arg2;
- (id)closeLocalStream;
- (void)close;
- (unsigned int)crc32;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initForEncryptionWithOutputStream:(id)arg1 key:(id)arg2 computeCrc32:(_Bool)arg3;
- (id)initForEncryptionWithOutputStream:(id)arg1 key:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUCryptor : NSObject
{
    int mOperation;
    struct _CCCryptor *mCryptor;
    unsigned long long mBlockSize;
    _Bool mFinished;
    char *mDecryptionInputBuffer;
    char *mOutputBuffer;
    char *mOutputBufferPos;
    unsigned long long mOutputBufferAvailable;
}

- (_Bool)cryptDataFromStream:(id)arg1 toBuffer:(char *)arg2 length:(unsigned long long)arg3 bytesRead:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)cryptDataFromBuffer:(const char *)arg1 length:(unsigned long long)arg2 toStream:(id)arg3 finished:(_Bool)arg4 crc32:(unsigned int *)arg5 error:(id *)arg6;
- (_Bool)cryptDataFromBuffer:(const char *)arg1 length:(unsigned long long)arg2 toStream:(id)arg3 finished:(_Bool)arg4 error:(id *)arg5;
- (void)dealloc;
- (id)initWithKey:(id)arg1 operation:(int)arg2 iv:(const char *)arg3 ivLength:(unsigned long long)arg4 usePKCS7Padding:(_Bool)arg5;
- (id)initWithKey:(id)arg1 operation:(int)arg2 iv:(const char *)arg3 ivLength:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface SFUCryptoUtils : NSObject
{
}

+ (id)sha1HashFromStorage:(id)arg1;
+ (id)sha256HashFromString:(id)arg1;
+ (id)sha256HashFromStorage:(id)arg1;
+ (id)sha256HashFromData:(id)arg1;
+ (id)decodePassphraseHint:(id)arg1;
+ (id)encodePassphraseHint:(id)arg1;
+ (id)newBufferedInputStreamForDecryptingZippedBundle:(id)arg1 key:(id)arg2 zipArchive:(id)arg3 isDeflated:(_Bool)arg4 zipStream:(id *)arg5;
+ (id)newBufferedInputStreamForDecryptingFile:(id)arg1 key:(id)arg2 isDeflated:(_Bool)arg3 zipStream:(id *)arg4;
+ (_Bool)isEncryptionVersionAndFormatSupportedInPassphraseVerifier:(id)arg1;
+ (_Bool)checkKey:(id)arg1 againstPassphraseVerifier:(id)arg2;
+ (id)saltForSageFiles;
+ (id)saltFromVerifier:(id)arg1 saltLength:(unsigned long long)arg2;
+ (unsigned int)iterationCountFromPassphraseVerifier:(id)arg1;
+ (id)generatePassphraseVerifierForKey:(id)arg1 verifierVersion:(unsigned short)arg2;
+ (unsigned int)ivLengthForKey:(id)arg1;
+ (id)hashForPassphrase:(id)arg1 withSalt:(id)arg2;
+ (id)generateRandomSaltWithLength:(unsigned long long)arg1;
+ (id)generateRandomSalt;
+ (_Bool)generateRandomDataInBuffer:(char *)arg1 length:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface SFUBufferedInputStream : NSObject <SFUBufferedInputStream>
{
    id <SFUInputStream> mStream;
    char *mBuffer;
    unsigned long long mBufferSize;
    long long mBufferOffset;
    long long mBufferStart;
    long long mBufferEnd;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithStream:(id)arg1 dataLength:(long long)arg2;
- (id)initWithStream:(id)arg1 bufferSize:(unsigned long long)arg2;
- (id)initWithStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUDataRepresentation : NSObject
{
    _Bool mHasHash;
    unsigned int mHash;
    _Bool mHasSha1Hash;
    NSData *mSha1Hash;
}

- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)sha1Hash;
- (unsigned int)uint32Hash;
- (unsigned long long)hash;
- (unsigned long long)readIntoData:(id)arg1;
- (struct CGDataProvider *)cgDataProvider;
- (struct _xmlTextReader *)xmlReaderForGzippedDataWithInputStream:(id *)arg1;
- (struct _xmlTextReader *)xmlReaderForGzippedData;
- (struct _xmlTextReader *)xmlReaderWithReadCallback:(CDUnknownFunctionPointerType)arg1;
- (struct _xmlTextReader *)xmlReader;
- (struct _xmlDoc *)xmlDocument;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (_Bool)isEncrypted;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;

@end

__attribute__((visibility("hidden")))
@interface SFUFileDataRepresentation : SFUDataRepresentation
{
    NSString *mPath;
    int mSharedFd;
    long long mFileLength;
    unsigned int mFileType;
    _Bool mHasFileAttributes;
    long long mPlaintextDataLength;
    SFUCryptoKey *mCryptoKey;
    id <SFUInputStream> mInputStream;
    _Bool mDeleteFileWhenDone;
}

- (void)deleteFileWhenDone;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)inputStream;
- (_Bool)isCryptoKeyIdenticalToKey:(id)arg1;
- (_Bool)isEncrypted;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)setFileType:(unsigned int)arg1;
- (unsigned int)fileType;
- (id)path;
- (id)description;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 cryptoKey:(id)arg2 dataLength:(long long)arg3;
- (id)initWithCopyOfData:(id)arg1 path:(id)arg2 cryptoKey:(id)arg3;
- (id)initWithCopyOfData:(id)arg1 path:(id)arg2;
- (id)initWithPath:(id)arg1 sharedFileDescriptor:(int)arg2 cryptoKey:(id)arg3 dataLength:(long long)arg4;
- (id)initWithPath:(id)arg1 cryptoKey:(id)arg2 dataLength:(long long)arg3;
- (id)initWithPath:(id)arg1 sharedFileDescriptor:(int)arg2;
- (id)initWithPath:(id)arg1;
- (void)readFileAttributes;

@end

__attribute__((visibility("hidden")))
@interface SFUFileInputStream : NSObject <SFUInputStream>
{
    int mFd;
    _Bool mIsCachingDisabled;
    long long mStartOffset;
    long long mCurrentOffset;
    long long mEndOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithPath:(id)arg1 offset:(long long)arg2;
- (id)initWithPath:(id)arg1 offset:(long long)arg2 length:(long long)arg3;
- (id)initWithFileDescriptor:(int)arg1 offset:(long long)arg2 length:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUFileOutputStream : NSObject <SFUOutputStream>
{
    struct __sFILE *mFile;
    NSString *mPath;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUGZipFileInputStream : NSObject <SFUInputStream>
{
    int _fd;
    void *_file;
    _Bool _isCachingDisabled;
    long long _offset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUGZipFileOutputStream : NSObject <SFUOutputStream>
{
    void *_file;
    long long _offset;
    NSString *_path;
}

+ (id)gzipExtension;
- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUMemoryDataRepresentation : SFUDataRepresentation
{
    NSData *mData;
}

- (unsigned long long)readIntoData:(id)arg1;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (long long)dataLength;
- (_Bool)isReadable;
- (id)data;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1;
- (id)initWithDataNoCopy:(id)arg1;
- (id)initWithData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFUMemoryInputStream : NSObject <SFUBufferedInputStream>
{
    NSData *mData;
    const char *mStart;
    const char *mCurrent;
    const char *mEnd;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithData:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUMemoryOutputStream : NSObject <SFUOutputStream>
{
    NSMutableData *mData;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUMoveableFileOutputStream : NSObject <SFUOutputStream>
{
    int mFd;
    NSString *mPath;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)flush;
- (void)truncateToLength:(long long)arg1;
- (_Bool)moveToPath:(id)arg1;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)initWithTemporaryFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUOffsetInputStream : NSObject <SFUInputStream>
{
    id <SFUInputStream> mInputStream;
    long long mInitialOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 initialOffset:(long long)arg2;
- (id)initWithInputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUOffsetOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mOutputStream;
    long long mInitialOffset;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipInputBundle : NSObject <SFUInputBundle>
{
    SFUZipArchive *_zipArchive;
}

- (void)copyEntry:(id)arg1 toFile:(id)arg2;
- (unsigned int)crc32ForEntry:(id)arg1;
- (long long)lengthOfEntry:(id)arg1;
- (id)bufferedInputStreamForEntry:(id)arg1;
- (id)inputStreamForEntry:(id)arg1;
- (_Bool)hasEntryWithName:(id)arg1;
- (void)dealloc;
- (id)initWithZipArchive:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUPackageInputBundle : NSObject <SFUInputBundle>
{
    NSString *_rootPath;
}

- (void)copyEntry:(id)arg1 toFile:(id)arg2;
- (unsigned int)crc32ForEntry:(id)arg1;
- (long long)lengthOfEntry:(id)arg1;
- (id)bufferedInputStreamForEntry:(id)arg1;
- (id)inputStreamForEntry:(id)arg1;
- (_Bool)hasEntryWithName:(id)arg1;
- (id)_existingPathForEntryName:(id)arg1 isGz:(_Bool *)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipArchive : NSObject
{
    NSMutableDictionary *mEntries;
    SFUDataRepresentation<SFUZipArchiveDataRepresentation> *mDataRepresentation;
    NSData *mPassphraseVerifier;
    NSString *mPassphraseHint;
    SFUCryptoKey *mCryptoKey;
    NSData *mEncryptedDocumentUuid;
}

+ (_Bool)isZipArchiveAtPath:(id)arg1;
- (_Bool)decompressAtPath:(id)arg1;
- (void)setCryptoKey:(id)arg1;
- (id)encryptedDocumentUuid;
- (id)passphraseHint;
- (id)passphraseVerifier;
- (_Bool)isEncrypted;
- (id)allEntryNames;
- (id)entryWithName:(id)arg1 dataLength:(long long)arg2;
- (id)entryWithName:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2 ignoreCase:(_Bool)arg3;
- (id)initWithData:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (id)initWithPath:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2 ignoreCase:(_Bool)arg3;
- (id)initWithPath:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (void)readExtraFieldFromBuffer:(const char *)arg1 size:(unsigned long long)arg2 entry:(id)arg3;
- (id)readFilenameFromBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (struct SFUZipEndOfCentralDirectory)readZip64EndOfCentralDirectoryFromInputStream:(id)arg1 offset:(long long)arg2;
- (struct SFUZipEndOfCentralDirectory)readZip64EndOfCentralDirectoryFromInputStream:(id)arg1 eocdOffset:(long long)arg2;
- (const char *)searchForEndOfCentralDirectoryFromInputStream:(id)arg1 offset:(long long *)arg2;
- (struct SFUZipEndOfCentralDirectory)readEndOfCentralDirectoryFromInputStream:(id)arg1;
- (void)collapseCommonRootDirectoryIgnoreCase:(_Bool)arg1;
- (void)readEntries;

@end

__attribute__((visibility("hidden")))
@interface SFUZipRecordInputStream : NSObject
{
    id <SFUBufferedInputStream> mInput;
    const char *mBuffer;
    long long mBufferStart;
    long long mBufferEnd;
}

- (const char *)dataAtOffset:(long long)arg1 size:(unsigned long long)arg2 end:(long long)arg3;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFUZipArchiveFileDataRepresentation : SFUDataRepresentation <SFUZipArchiveDataRepresentation>
{
    SFUFileDataRepresentation *mFileRepresentation;
    int mFd;
}

- (id)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)path;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)inputStream;
- (_Bool)isEncrypted;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipArchiveMemoryDataRepresentation : SFUDataRepresentation <SFUZipArchiveDataRepresentation>
{
    NSData *mData;
}

- (id)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (long long)dataLength;
- (_Bool)isReadable;
- (id)data;
- (void)dealloc;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipArchiveOutputStream : NSObject <SFUSimpleOutputStream>
{
    SFUMoveableFileOutputStream *mOutputStream;
    SFUCryptoKey *mCryptoKey;
    NSData *mPassphraseHint;
    NSData *mEncryptedDocumentUuid;
    NSMutableArray *mEntries;
    SFUZipOutputEntry *mCurrentEntry;
    SFUZipOutputEntry *mLastEntryInFile;
    id <SFUOutputStream> mEntryOutputStream;
    char *mBuffer;
    NSMutableArray *mFreeList;
    SFUZipFreeSpaceEntry *mCurrentFreeSpace;
    unsigned long long mFreeBytes;
}

+ (unsigned long long)approximateBytesForEntryHeaderWithName:(id)arg1;
- (unsigned int)crc32ForEntry:(id)arg1;
- (void)reset;
- (unsigned long long)freeBytes;
- (void)flush;
- (id)entriesAtPath:(id)arg1;
- (id)entryNames;
- (void)moveToPath:(id)arg1;
- (void)close;
- (void)setEncryptedDocumentUuid:(id)arg1;
- (void)removeEntryWithName:(id)arg1;
- (_Bool)canRemoveEntryWithName:(id)arg1;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)setCrc32ForCurrentEntry:(unsigned int)arg1;
- (id)beginUncompressedUnknownSizeEntryWithName:(id)arg1;
- (void)beginUnknownSizeEntryWithName:(id)arg1 isCompressed:(_Bool)arg2;
- (void)beginEntryWithName:(id)arg1 isCompressed:(_Bool)arg2 uncompressedSize:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithPath:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (id)initWithPath:(id)arg1;
- (id)initWithOutputStream:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (void)writeZip64EndOfCentralDirectoryLocatorWithOffset:(long long)arg1;
- (void)writeZip64EndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)writeEndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)writeCentralFileHeaderUsingEntry:(id)arg1 isFirstEntry:(_Bool)arg2;
- (unsigned long long)writeLocalFileHeaderForEntry:(id)arg1;
- (void)coalesceAndTruncateFreeSpace;
- (void)finishEntry;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipOutputEntry : NSObject
{
    NSString *name;
    unsigned long long utf8NameLength;
    _Bool isCompressed;
    _Bool isEncrypted;
    unsigned int time;
    unsigned long long compressedSize;
    unsigned long long uncompressedSize;
    unsigned long long offset;
    unsigned long long compressedDataOffset;
    unsigned int crc;
    _Bool isWrittenDirectlyToFile;
    _Bool is64Bit;
}

- (long long)compareByOffset:(id)arg1;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface SFUZipFreeSpaceEntry : NSObject
{
    unsigned long long offset;
    unsigned long long length;
}

- (long long)compareByOffset:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFUZipDeflateOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mOutputStream;
    struct z_stream_s mDeflateStream;
    char *mOutBuffer;
}

- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)close;
- (id)closeLocalStream;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUZipEntry : SFUDataRepresentation
{
    SFUDataRepresentation<SFUZipArchiveDataRepresentation> *mArchiveDataRepresentation;
    int mCompressionMethod;
    unsigned long long mCompressedSize;
    unsigned long long mUncompressedSize;
    unsigned long long mOffset;
    unsigned int mCrc;
    unsigned long long mDataOffset;
    _Bool mHasDataOffset;
    unsigned long long mEncodedLength;
    _Bool mHasEncodedLength;
    SFUCryptoKey *mCryptoKey;
}

- (void)setDataLength:(long long)arg1;
- (void)setCryptoKey:(id)arg1;
- (void)setCompressionFlags:(unsigned short)arg1;
- (void)readZip64ExtraField:(const char *)arg1 size:(unsigned long long)arg2;
- (unsigned int)crc;
- (unsigned long long)backingFileDataOffset;
- (id)backingFilePath;
- (_Bool)isBackedByFile;
- (_Bool)isEncrypted;
- (_Bool)isCompressed;
- (void)copyToFile:(id)arg1;
- (id)data;
- (id)inputStream;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1 compressionMethod:(int)arg2 compressedSize:(unsigned long long)arg3 uncompressedSize:(unsigned long long)arg4 offset:(unsigned long long)arg5 crc:(unsigned int)arg6;
- (id)initFromCentralFileHeader:(const char *)arg1 dataRepresentation:(id)arg2;
- (unsigned long long)calculateEncodedLength;
- (unsigned long long)dataOffset;

@end

__attribute__((visibility("hidden")))
@interface TSUQuicklookResource : NSObject
{
}

+ (id)imagePathForQuicklookResource:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFUZipException : NSException
{
}

@end

__attribute__((visibility("hidden")))
@interface SFUZipInflateInputStream : NSObject <SFUInputStream>
{
    struct z_stream_s mStream;
    long long mOffset;
    id <SFUBufferedInputStream> mInput;
    char *mOutBuffer;
    unsigned long long mOutBufferSize;
    _Bool mReachedEnd;
    _Bool mIsFromZip;
    unsigned long long mCalculatedCrc;
    unsigned long long mCheckCrc;
}

- (long long)totalCompressedBytesConsumed;
- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (long long)offset;
- (_Bool)canSeek;
- (void)seekToOffset:(long long)arg1;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithInput:(id)arg1;
- (id)initWithOffset:(long long)arg1 end:(long long)arg2 uncompressedSize:(unsigned long long)arg3 crc:(unsigned long long)arg4 dataRepresentation:(id)arg5;
- (void)setupInflateStream;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFUJson : NSObject
{
}

+ (id)dictionaryFromString:(id)arg1;
+ (id)arrayFromString:(id)arg1;
+ (id)objectFromString:(id)arg1;
+ (id)stringFromObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFUJsonScanner : NSObject
{
    NSString *mString;
    unsigned short *mCharacters;
    unsigned long long mLength;
    unsigned long long mOffset;
    NSCharacterSet *mWhitespaceCharacterSet;
    NSCharacterSet *mDecimalDigitCharacterSet;
}

- (id)parseObjectWithMaxDepth:(int)arg1;
- (id)parseNumber;
- (id)parseFalse;
- (id)parseTrue;
- (id)parseNull;
- (_Bool)parseConstantString:(const char *)arg1;
- (id)parseArrayWithMaxDepth:(int)arg1;
- (id)parseDictionaryWithMaxDepth:(int)arg1;
- (id)parseString;
- (void)appendCharactersInRange:(struct _NSRange)arg1 toString:(id)arg2;
- (id)parseHexCharacter;
- (void)skipWhitespace;
- (unsigned short)nextCharacter;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSURectList : NSObject
{
    struct vector<CGRect, std::__1::allocator<CGRect>> mRectList;
}

+ (id)rectListWithDifference:(struct CGRect)arg1 withRect:(struct CGRect)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct CGRect)rectAtIndex:(unsigned long long)arg1;
- (void)insertRect:(struct CGRect)arg1 atIndex:(unsigned long long)arg2;
- (void)addRect:(struct CGRect)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)initWithRectList:(id)arg1;
- (id)initWithRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUQuicklookAssetColorMap : NSObject
{
    NSMutableDictionary *mAssetMap;
    NSString *mAppAssetPath;
}

+ (id)colorForResource:(id)arg1;
+ (_Bool)hasAppAssets;
+ (id)quicklookAssetMap;
@property(retain, nonatomic) NSString *appAssetPath; // @synthesize appAssetPath=mAppAssetPath;
@property(retain, nonatomic) NSMutableDictionary *assetMap; // @synthesize assetMap=mAssetMap;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSULocalizationUtility : NSObject
{
}

+ (id)displayStringForStrings:(id)arg1 itemSeparator:(id)arg2 lastItemSeparator:(id)arg3;
+ (id)displayStringForStrings:(id)arg1 itemSeparator:(id)arg2;
+ (id)displayStringForStrings:(id)arg1;
+ (id)displayStringForIndexSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUBacktrace : NSObject
{
    void **_callstack;
    int _frames;
    int _initAdjustment;
}

+ (id)callee;
+ (id)caller;
+ (id)new;
+ (id)backtrace;
- (_Bool)isEqual:(id)arg1;
- (id)callee;
- (id)caller;
- (id)callerAtIndex:(long long)arg1;
- (id)backtraceString;
- (void)dealloc;
- (id)init;
- (id)initWithAdjustment:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUHTMLTable : NSObject
{
    NSMutableDictionary *_columnAttributes;
    NSMutableDictionary *_rowClasses;
    NSMutableDictionary *_cellAttributes;
    NSMutableArray *_columnHeaders;
    NSMutableArray *_rows;
    unsigned long long _rowClassStride;
}

+ (id)_attributesStringFromAttributes:(id)arg1;
+ (id)_keyForCell:(unsigned long long)arg1:(unsigned long long)arg2;
+ (id)htmlTable;
@property(nonatomic) unsigned long long rowClassStride; // @synthesize rowClassStride=_rowClassStride;
- (void)deleteColumnWithTitle:(id)arg1;
- (unsigned long long)indexOfColumnWithTitle:(id)arg1;
- (void)enumerateRowsUsingBlock:(CDUnknownBlockType)arg1;
- (void)setCellAttributes:(id)arg1 rowIndex:(unsigned long long)arg2 columnIndex:(unsigned long long)arg3;
- (void)setCellMarkup:(id)arg1 atRowIndex:(unsigned long long)arg2 columnIndex:(unsigned long long)arg3;
- (void)setClass:(id)arg1 ofColumnIndex:(unsigned long long)arg2;
- (void)setColumnHeaders:(id)arg1;
- (void)setRowClass:(id)arg1 atRowIndex:(unsigned long long)arg2;
- (void)setColumnClasses:(id)arg1;
- (void)addRowWithCellText:(id)arg1;
- (void)addRowWithCellMarkup:(id)arg1;
- (id)markup;
@property(readonly, nonatomic) unsigned long long lastRowIndex;
@property(readonly, nonatomic) unsigned long long count;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUHTMLLog : NSObject
{
    NSString *_path;
    NSString *_title;
    NSString *_stylesheet;
    NSString *_script;
    NSFileHandle *_handle;
    _Bool _logStarted;
    unsigned long long _uniquifier;
    unsigned long long _tableRow;
}

@property(copy, nonatomic) NSString *script; // @synthesize script=_script;
@property(copy, nonatomic) NSString *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (void)openInBrowser;
- (void)logEnd;
- (void)logBegin;
- (void)clear;
- (void)close;
- (void)writeText:(id)arg1;
- (void)writeMarkup:(id)arg1;
- (void)_writeMarkupData:(id)arg1;
- (id)uniqueIdentifierWithPrefix:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPObject : NSObject
{
    long long _identifier;
    long long _modifyObjectToken;
    NSUUID *_UUID;
    long long _unarchiverIdentifier;
    TSPUnknownContent *_unknownContent;
    TSPComponent *_component;
    id <TSPObjectDelegate> _delegate;
}

+ (_Bool)tsp_isTransientObjectIdentifier:(long long)arg1;
+ (_Bool)needsObjectUUID;
+ (id)newObjectForUnarchiver:(id)arg1;
@property(nonatomic) __weak id <TSPObjectDelegate> tsp_delegate; // @synthesize tsp_delegate=_delegate;
@property(nonatomic) __weak TSPComponent *tsp_component; // @synthesize tsp_component=_component;
@property(nonatomic) long long tsp_modifyObjectToken; // @synthesize tsp_modifyObjectToken=_modifyObjectToken;
@property(readonly, nonatomic) TSPUnknownContent *tsp_unknownContent; // @synthesize tsp_unknownContent=_unknownContent;
@property(readonly, nonatomic) long long tsp_unarchiverIdentifier; // @synthesize tsp_unarchiverIdentifier=_unarchiverIdentifier;
@property(nonatomic) long long tsp_identifier; // @synthesize tsp_identifier=_identifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool needsArchiving;
- (id)tsp_descriptionWithDepth:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *tsp_description;
@property(copy, nonatomic) NSUUID *objectUUID;
- (void)didFinishUnarchiving;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
@property(readonly, nonatomic) _Bool isCommandObject;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
@property(readonly, nonatomic) unsigned int delayedArchivingPriority;
@property(readonly, nonatomic) _Bool shouldDelayArchiving;
@property(readonly, nonatomic) _Bool allowsImplicitComponentOwnership;
@property(readonly, nonatomic) TSPObject *componentRootObject;
@property(readonly, nonatomic) _Bool storeOutsideObjectArchive;
@property(readonly, nonatomic) _Bool isComponentRoot;
@property(readonly, nonatomic) NSString *packageLocator;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initDocumentObjectWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
@property(readonly, nonatomic) TSPObjectContext *context;
- (id)init;
- (void)willBeRemovedFromDocument;
- (void)wasAddedToDocumentDuringImport;
- (void)wasAddedToDocumentDuringUnarchive;
- (void)wasAddedToDocument;
- (void)wasAddedToDocumentWithOptions:(unsigned long long)arg1;
@property(readonly, nonatomic) TSUUUIDPath *objectUUIDPath;
- (id)documentRoot;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)owningDocument;

@end

__attribute__((visibility("hidden")))
@interface TSPObjectContext : NSObject <TSPFileCoordinatorDelegate, TSPObjectDelegate, TSPLazyReferenceDelegate, TSPSupportDirectoryDelegate, TSPDocumentResourceDownloader, TSPPassphraseConsumer>
{
    long long _lastObjectIdentifier;
    long long _modifyObjectToken;
    int _modifyObjectCount;
    unsigned int _mode;
    SFUCryptoKey *_decryptionKey;
    NSURL *_documentURL;
    NSURL *_supportURL;
    TSPDocumentProperties *_documentProperties;
    NSMapTable *_objects;
    TSPObjectUUIDMap *_objectUUIDMap;
    TSPDocumentRevision *_documentRevision;
    long long _preferredPackageType;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSRecursiveLock *_readLock;
    NSObject<OS_dispatch_queue> *_documentStateQueue;
    NSObject<OS_dispatch_queue> *_loadObserversQueue;
    NSObject<OS_dispatch_queue> *_runLoadObserversQueue;
    NSObject<OS_dispatch_queue> *_runLoadObserversForKnownObjectQueue;
    NSObject<OS_dispatch_queue> *_documentResourceDataProviderQueue;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    TSPDocumentResourceDataProvider *_documentResourceDataProvider;
    NSProgress *_nextSaveProgress;
    TSPDocumentSaveOperationState *_saveOperationState;
    TSPPackageWriteCoordinator *_packageWriteCoordinator;
    NSHashTable *_objectModifyDelegates;
    _Bool _isWaitingForEndSave;
    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;
    NSObject<OS_dispatch_group> *_outstandingReadsGroup;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    TSUTemporaryDirectory *_temporaryDirectory;
    struct hash_map<const long long, NSMutableArray *, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, NSMutableArray *>>> _loadObservers;
    TSPObject *_supportObject;
    TSPPackageWriteCoordinator *_supportWriteCoordinator;
    NSString *_savedPassphrase;
    _Bool _shouldSavePassphrase;
    struct {
        unsigned int delegateRespondsToAdditionalDocumentPropertiesForWrite:1;
        unsigned int delegateRespondsToDocumentPasswordHintForWrite:1;
        unsigned int delegateRespondsToPackageDataForWrite:1;
        unsigned int delegateRespondsToAreNewExternalReferencesToDataAllowed:1;
        unsigned int delegateRespondsToAreExternalReferencesToDataAllowedAtURL:1;
        unsigned int delegateRespondsToBaseUUIDForObjectUUID:1;
        unsigned int delegateRespondsToPreserveDocumentRevisionIdentifierForSequenceZero:1;
        unsigned int delegateRespondsToIsEstimatedDocumentDataSizeNotificationEnabled:1;
        unsigned int delegateRespondsToDidChangeEstimatedDocumentDataSize:1;
        unsigned int delegateRespondsToFilePresenter:1;
        unsigned int delegateRespondsToSupportDirectoryURL:1;
        unsigned int delegateRespondsToIgnoreDocumentSupport:1;
        unsigned int delegateRespondsToIsDocumentSupportTemporary:1;
    } _flags;
    NSString *_documentPasswordHint;
    TSPObject *_documentObject;
    id <TSPObjectContextDelegate> _delegate;
    TSPDocumentResourceDataProvider *_gilligan_documentResourceDataProvider;
    TSPDocumentResourceManager *_documentResourceManager;
    TSPComponentManager *_componentManager;
    TSPDataManager *_dataManager;
    TSPSupportManager *_supportManager;
    TSPPackage *_documentPackage;
    TSPPackage *_supportPackage;
    TSPObjectContainer *_documentObjectContainer;
    TSPObjectContainer *_supportObjectContainer;
    unsigned long long _saveToken;
    NSData *_passwordVerifier;
}

+ (void)waitForPendingEndSaveGroup:(id)arg1;
+ (_Bool)dumpMessagesForDocument:(id)arg1 decryptionKey:(id)arg2 toURL:(id)arg3;
+ (id)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2;
+ (_Bool)requestDownloadingDocumentResourcesForURL:(id)arg1 decryptionKey:(id)arg2 usingDataProvider:(id)arg3;
+ (void)garbageCollectDocumentSupportWithKnownDocumentUUIDs:(id)arg1 delegate:(id)arg2;
+ (id)supportBundleURLForUUID:(id)arg1 delegate:(id)arg2;
+ (id)supportURLForDocumentURL:(id)arg1 coordinateRead:(_Bool)arg2 delegate:(id)arg3 error:(id *)arg4;
+ (void)removeDefaultSupportDirectory;
+ (_Bool)isTangierEditingFormatURL:(id)arg1;
+ (_Bool)isNativeDirectoryFormatURL:(id)arg1;
+ (_Bool)isNativeOrTangierEditingFormatURL:(id)arg1;
@property(readonly, nonatomic) NSData *passwordVerifier; // @synthesize passwordVerifier=_passwordVerifier;
@property(readonly, nonatomic) unsigned long long saveToken; // @synthesize saveToken=_saveToken;
@property(retain, nonatomic) TSPObjectContainer *supportObjectContainer; // @synthesize supportObjectContainer=_supportObjectContainer;
@property(retain, nonatomic) TSPObjectContainer *documentObjectContainer; // @synthesize documentObjectContainer=_documentObjectContainer;
@property(readonly, nonatomic) TSPPackage *supportPackage; // @synthesize supportPackage=_supportPackage;
@property(readonly, nonatomic) TSPPackage *documentPackage; // @synthesize documentPackage=_documentPackage;
@property(readonly, nonatomic) TSPSupportManager *supportManager; // @synthesize supportManager=_supportManager;
@property(readonly, nonatomic) TSPDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(readonly, nonatomic) TSPComponentManager *componentManager; // @synthesize componentManager=_componentManager;
@property(readonly, nonatomic) TSPDocumentResourceManager *documentResourceManager; // @synthesize documentResourceManager=_documentResourceManager;
@property(retain, nonatomic) TSPDocumentResourceDataProvider *gilligan_documentResourceDataProvider; // @synthesize gilligan_documentResourceDataProvider=_gilligan_documentResourceDataProvider;
@property(nonatomic) __weak id <TSPObjectContextDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TSPObject *documentObject; // @synthesize documentObject=_documentObject;
@property(readonly, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(id)arg3;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forObjectIdentifier:(long long)arg3 objectOrNil:(id)arg4;
- (id)addLoadedObjectsAndEnqueueNotifications:(id)arg1;
- (long long)updateModifyObjectToken;
- (id)objectUUIDMap;
- (id)newObjectUUIDForObject:(id)arg1;
- (long long)incrementLastObjectIdentifier:(long long)arg1;
@property(nonatomic) long long lastObjectIdentifier;
- (long long)newObjectIdentifier;
- (id)baseUUIDForObjectUUID;
@property(readonly, nonatomic) NSUUID *versionUUID;
- (_Bool)updateDocumentUUIDPreserveOriginalDocumentSupport:(_Bool)arg1 preserveShareUUID:(_Bool)arg2 error:(id *)arg3;
@property(readonly, nonatomic) NSUUID *documentUUID;
- (void)didReadDocumentObject:(id)arg1;
- (void)setDocumentObject:(id)arg1;
@property(readonly, nonatomic) _Bool ignoreDocumentResourcesWhileReading;
@property(readonly, nonatomic) _Bool ignoreVersionCheckingWhileReading;
@property(readonly, nonatomic) _Bool ignoreUnknownContentWhileReading;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
- (id)dataOrNilForIdentifier:(long long)arg1;
- (id)peekNextVersionUUID;
- (id)supportDirectoryURL;
- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;
- (long long)modifyObjectTokenForNewObject;
@property(readonly, nonatomic) TSPObjectContext *context;
- (void)performReadUsingAccessorImpl:(CDUnknownBlockType)arg1;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (void)prepareForDocumentReplacementWithSuccess:(_Bool)arg1 forSafeSave:(_Bool)arg2;
- (void)prepareForDocumentReplacement;
- (void)waitForSaveToFinishIfNeeded;
- (id)initForQuickLookWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3 passphrase:(id)arg4;
- (id)initForSpotlightWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (void)didAddData:(id)arg1;
- (void)notifyEstimatedDocumentDataSizeChanged;
- (void)removeObjectModifyDelegate:(id)arg1;
- (void)addObjectModifyDelegate:(id)arg1;
- (_Bool)containsDataConformingToUTI:(id)arg1;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, nonatomic) _Bool isPasswordProtected;
- (void)cancelDownloads;
- (id)downloadWithDelegate:(id)arg1 description:(id)arg2;
@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;
@property(readonly, nonatomic) long long estimatedDownloadSize;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)enumerateDocumentResourcesUsingBlock:(CDUnknownBlockType)arg1;
- (void)didFinishUsingDocumentResourceDataProvider:(id)arg1 withSuccess:(_Bool)arg2;
- (id)newDocumentResourceDataProvider;
- (_Bool)areExternalReferencesToDataAllowedAtURL:(id)arg1;
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
- (_Bool)areExternalReferencesSupported;
- (_Bool)readObjectForIdentifier:(long long)arg1 isWeakReference:(_Bool)arg2 rootObjectComponent:(id)arg3 object:(id *)arg4 error:(id *)arg5;
- (id)readObjectIfNeededForIdentifier:(long long)arg1 isWeakReference:(_Bool)arg2 componentIdentifier:(long long)arg3;
- (_Bool)readLazyReference:(id)arg1 object:(id *)arg2 error:(id *)arg3;
- (_Bool)readComponent:(id)arg1 isWeakReference:(_Bool)arg2 rootObject:(id *)arg3 allObjects:(id *)arg4 error:(id *)arg5;
- (_Bool)readComponent:(id)arg1 isWeakReference:(_Bool)arg2 documentPackage:(id)arg3 supportPackage:(id)arg4 rootObject:(id *)arg5 allObjects:(id *)arg6 error:(id *)arg7;
- (void)resumeLoadingModifiedFlushedComponents;
- (void)suspendLoadingModifiedFlushedComponentsAndWait;
- (void)prepareToReadSupportObjectWithDocumentResourceDataProvider:(id)arg1 areExternalDataReferencesAllowed:(_Bool)arg2 accessor:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) _Bool isSupportModified;
@property(readonly, nonatomic) _Bool isDocumentModified;
- (void)setSupportObjectImpl:(id)arg1;
@property(retain, nonatomic) TSPObject *supportObject;
@property long long preferredPackageType;
- (void)resetDocumentRevision;
- (id)incrementDocumentRevisionWithIdentifier:(id)arg1;
@property(retain) TSPDocumentRevision *documentRevision;
- (void)didMoveSupportToURL:(id)arg1;
- (void)didMoveToURL:(id)arg1;
@property(readonly, nonatomic) NSURL *documentURL;
- (void)endIgnoringCachedObjectEviction;
- (void)beginIgnoringCachedObjectEviction;
- (id)dataWithContentsOfPackagePath:(id)arg1;
- (void)checkforDataWarningsWithPackageURL:(id)arg1;
- (id)temporaryDirectory;
- (void)performReadOperationOnKnownObjects:(CDUnknownBlockType)arg1;
- (id)objectForIdentifier:(long long)arg1;
- (_Bool)didFinishSuccessfullyReadingObjects:(id)arg1 readCoordinator:(id)arg2 finalizeHandlerQueue:(id)arg3;
- (_Bool)readWithReadCoordinator:(id)arg1 finalizeHandlerQueue:(id)arg2 rootObject:(id *)arg3 error:(id *)arg4 readCompletion:(CDUnknownBlockType)arg5;
- (_Bool)readDocumentObjectFromDatabasePackageURL:(id)arg1 error:(id *)arg2;
- (_Bool)continueReadingDocumentObjectFromPackageURL:(id)arg1 documentResourceDataProvider:(id)arg2 areExternalDataReferencesAllowed:(_Bool)arg3 error:(id *)arg4;
- (_Bool)readDocumentObjectFromPackageURL:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) unsigned long long estimatedDocumentDataSize;
- (unsigned long long)estimatedDocumentSize;
@property(readonly, nonatomic) long long packageType;
@property(readonly, nonatomic) TSPDocumentProperties *documentProperties;
@property(readonly, nonatomic) NSString *passphraseHint;
@property(readonly, nonatomic) NSString *service;
@property(readonly, nonatomic) NSData *keychainGenericItem;
- (_Bool)setPassphrase:(id)arg1;
- (_Bool)setDecryptionKey:(id)arg1;
- (void)endAssertOnModify;
- (void)beginAssertOnModify;
- (void)replaceDocumentObject:(id)arg1;
- (_Bool)saveToURL:(id)arg1 packageType:(long long)arg2 encryptionKey:(id)arg3 originalURL:(id)arg4 error:(id *)arg5;
- (void)endSaveWithSuccess:(_Bool)arg1;
- (_Bool)endWriteWithSuccess:(_Bool)arg1 error:(id *)arg2;
- (id)currentPackageDataWriter;
- (_Bool)writeToURL:(id)arg1 originalPackage:(id)arg2 supportURL:(id)arg3 originalSupportPackage:(id)arg4 encryptionKey:(id)arg5 error:(id *)arg6;
- (_Bool)writeToURL:(id)arg1 encryptionKey:(id)arg2 error:(id *)arg3;
- (void)beginWriteWithOriginalURL:(id)arg1 relativeURLForExternalData:(id)arg2;
- (void)beginWriteWithOriginalURL:(id)arg1;
- (void)beginSaveToURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3 documentUUID:(id)arg4;
- (void)beginSaveToURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3;
- (id)prepareSaveProgress;
- (void)performReadOperation:(CDUnknownBlockType)arg1;
- (void)endWriteOperation;
- (void)beginWriteOperation;
- (void)close;
- (void)dealloc;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 documentResourceManager:(id)arg3 mode:(unsigned int)arg4 error:(id *)arg5 passphrase:(id)arg6;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 mode:(unsigned int)arg3 error:(id *)arg4 passphrase:(id)arg5;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3 passphrase:(id)arg4;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)initWithDelegate:(id)arg1 documentResourceManager:(id)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;
- (id)deterministicObjectUUIDRelativeToObject:(id)arg1 offset:(unsigned long long)arg2;
- (id)objectWithUUIDPath:(id)arg1;
- (id)objectWithUUID:(id)arg1;
- (id)documentRoot;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPObjectContextObserver : NSObject
{
    id _target;
    SEL _action;
}

@property(readonly, nonatomic) SEL action; // @synthesize action=_action;
@property(readonly, nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPArchiverBase : NSObject
{
    TSPObject *_object;
    auto_ptr_4370f086 _message;
    unsigned long long _messageVersion;
    struct hash_map<const TSP::FieldPath, TSP::FieldInfo_Rule, TSP::FieldPathHash, TSP::FieldPathEqualTo, std::__1::allocator<std::__1::pair<const TSP::FieldPath, TSP::FieldInfo_Rule>>> *_fieldRules;
    struct FieldPath *_currentFieldPath;
    NSHashTable *_strongReferences;
    NSHashTable *_weakReferences;
    NSHashTable *_commandToModelReferences;
    NSHashTable *_lazyReferences;
    NSHashTable *_dataReferences;
}

@property(readonly, nonatomic) NSHashTable *dataReferences; // @synthesize dataReferences=_dataReferences;
@property(readonly, nonatomic) NSHashTable *lazyReferences; // @synthesize lazyReferences=_lazyReferences;
@property(readonly, nonatomic) NSHashTable *commandToModelReferences; // @synthesize commandToModelReferences=_commandToModelReferences;
@property(readonly, nonatomic) NSHashTable *weakReferences; // @synthesize weakReferences=_weakReferences;
@property(readonly, nonatomic) NSHashTable *strongReferences; // @synthesize strongReferences=_strongReferences;
@property(nonatomic) unsigned long long messageVersion; // @synthesize messageVersion=_messageVersion;
@property(readonly, nonatomic) TSPObject *object; // @synthesize object=_object;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)enumerateRulesUsingBlock:(CDUnknownBlockType)arg1;
- (void)scopedRulesForField:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)setRule:(int)arg1 forFieldPath:(int *)arg2;
- (void)setIgnoreAndDropRuleForFieldPath:(int *)arg1;
- (void)setIgnoreAndDropRuleForField:(int)arg1;
- (void)setIgnoreAndPreserveRuleForFieldPath:(int *)arg1;
- (void)setIgnoreAndPreserveRuleForField:(int)arg1;
- (void)setMustUnderstandRuleForFieldPath:(int *)arg1;
- (void)setMustUnderstandRuleForField:(int)arg1;
- (void)cleanup;
- (void)setDataReferenceArray:(id)arg1 message:(RepeatedPtrField_5fb0b506 *)arg2;
- (void)setDataReference:(id)arg1 message:(struct DataReference *)arg2;
- (void)setWeakLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongLazyReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setStrongLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setWeakReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setStrongReferenceArray:(id)arg1 message:(RepeatedPtrField_a0d2dbe7 *)arg2;
- (void)setWeakReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongReference:(id)arg1 message:(struct Reference *)arg2;
@property(readonly, nonatomic) _Bool forPasteboard;
- (void)releaseMessage;
- (struct Message *)messageWithNewFunction:(CDUnknownFunctionPointerType)arg1;
- (struct Message *)message;
- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPUnarchiver : NSObject
{
    unsigned int _messageType;
    auto_ptr_4370f086 _message;
    long long _objectIdentifier;
    auto_ptr_c01b630f _strongReferences;
    unsigned long long _messageVersion;
    TSPUnknownContent *_unknownContent;
    id <TSPObjectDelegate> _objectDelegate;
    id <TSPLazyReferenceDelegate> _lazyReferenceDelegate;
    id <TSPUnarchiverDelegate> _delegate;
    vector_029d225a _references;
    vector_8ef431c5 _repeatedReferences;
    vector_667badbd _finalizeHandlers;
}

@property(readonly, nonatomic) __weak id <TSPUnarchiverDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak id <TSPObjectDelegate> objectDelegate; // @synthesize objectDelegate=_objectDelegate;
@property(readonly, nonatomic) TSPUnknownContent *unknownContent; // @synthesize unknownContent=_unknownContent;
@property(readonly, nonatomic) long long objectIdentifier; // @synthesize objectIdentifier=_objectIdentifier;
@property(readonly, nonatomic) unsigned long long messageVersion; // @synthesize messageVersion=_messageVersion;
@property(readonly, nonatomic) unsigned int messageType; // @synthesize messageType=_messageType;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool canValidateReferences;
- (vector_667badbd *)finalizeHandlers;
- (vector_8ef431c5 *)repeatedReferences;
- (vector_029d225a *)references;
- (hash_map_43d567e3 *)strongReferences;
@property(readonly, nonatomic) NSUUID *objectUUID;
- (id)initWithMessageType:(unsigned int)arg1 message:(auto_ptr_4370f086)arg2 identifier:(long long)arg3 strongReferences:(auto_ptr_c01b630f)arg4 fieldInfos:(auto_ptr_40e77785)arg5 messageVersion:(unsigned long long)arg6 unknownMessages:(id)arg7 ignoreVersionChecking:(_Bool)arg8 objectDelegate:(id)arg9 lazyReferenceDelegate:(id)arg10 delegate:(id)arg11 error:(id *)arg12;
- (void)addFinalizeHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool documentHasCurrentFileFormatVersion;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (id)readDataReferenceMessage:(const struct DataReference *)arg1;
- (void)readRepeatedLazyReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 isWeak:(_Bool)arg2 shouldValidate:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readRepeatedWeakLazyReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readRepeatedLazyReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readLazyReferenceMessage:(const struct Reference *)arg1 isWeak:(_Bool)arg2 shouldValidate:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readWeakLazyReferenceMessage:(const struct Reference *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readLazyReferenceMessage:(const struct Reference *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readRepeatedReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 isWeak:(_Bool)arg2 allowUnknownObject:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)readRepeatedWeakReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readRepeatedReferenceMessage:(const RepeatedPtrField_a0d2dbe7 *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readReferenceMessage:(const struct Reference *)arg1 isWeak:(_Bool)arg2 shouldValidate:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readWeakReferenceMessage:(const struct Reference *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)readReferenceMessage:(const struct Reference *)arg1 completion:(CDUnknownBlockType)arg2;
- (const struct Message *)message;
- (void)readWeakReferenceMessage:(const struct Reference *)arg1 repeatedMessage:(const RepeatedPtrField_a0d2dbe7 *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readReferenceMessage:(const struct Reference *)arg1 repeatedMessage:(const RepeatedPtrField_a0d2dbe7 *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readWeakReferenceMessage1:(const struct Reference *)arg1 message2:(const struct Reference *)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readReferenceMessage1:(const struct Reference *)arg1 message2:(const struct Reference *)arg2 completion:(CDUnknownBlockType)arg3;
- (set_6550bfbd *)filterIdentifiers:(const set_6550bfbd *)arg1;
@property(readonly, nonatomic) unsigned long long preUFFVersion;
@property(readonly, nonatomic) _Bool hasPreUFFVersion;
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
- (void)readSparseReferenceArchive:(const struct SparseReferenceArrayArchive *)arg1 class:(Class)arg2 completion:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSPArchiver : TSPArchiverBase
{
    BOOL _flags;
    NSHashTable *_alternates;
    NSArray *_unknownMessages;
    NSObject<OS_dispatch_group> *_archiveGroup;
    NSObject<OS_dispatch_group> *_serializeGroup;
    NSObject<OS_dispatch_data> *_serializedData;
    unsigned long long _documentReadVersion;
    unsigned long long _documentWriteVersion;
    NSHashTable *_aggregatedStrongReferences;
    NSHashTable *_aggregatedWeakReferences;
    NSHashTable *_aggregatedCommandToModelReferences;
    NSHashTable *_aggregatedLazyReferences;
    NSHashTable *_aggregatedDataReferences;
    NSUUID *_objectUUID;
}

@property(readonly, nonatomic) NSHashTable *alternates; // @synthesize alternates=_alternates;
@property(readonly, nonatomic) NSHashTable *aggregatedDataReferences; // @synthesize aggregatedDataReferences=_aggregatedDataReferences;
@property(readonly, nonatomic) NSHashTable *aggregatedLazyReferences; // @synthesize aggregatedLazyReferences=_aggregatedLazyReferences;
@property(readonly, nonatomic) NSHashTable *aggregatedCommandToModelReferences; // @synthesize aggregatedCommandToModelReferences=_aggregatedCommandToModelReferences;
@property(readonly, nonatomic) NSHashTable *aggregatedWeakReferences; // @synthesize aggregatedWeakReferences=_aggregatedWeakReferences;
@property(readonly, nonatomic) NSHashTable *aggregatedStrongReferences; // @synthesize aggregatedStrongReferences=_aggregatedStrongReferences;
@property(readonly, nonatomic) unsigned long long documentWriteVersion; // @synthesize documentWriteVersion=_documentWriteVersion;
@property(readonly, nonatomic) unsigned long long documentReadVersion; // @synthesize documentReadVersion=_documentReadVersion;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *serializedData; // @synthesize serializedData=_serializedData;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *serializeGroup; // @synthesize serializeGroup=_serializeGroup;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *archiveGroup; // @synthesize archiveGroup=_archiveGroup;
@property(readonly, nonatomic) NSUUID *objectUUID; // @synthesize objectUUID=_objectUUID;
- (void).cxx_destruct;
- (void)cleanup;
- (void)serialize;
- (_Bool)updateMessageInfo:(struct MessageInfo *)arg1 withArchiver:(id)arg2;
- (void)aggregateReferencesFromArchiver:(id)arg1;
- (void)archive;
@property(readonly, nonatomic) _Bool success;
- (void)fail;
- (_Bool)beginWrite;
@property(readonly, nonatomic) _Bool needsArchive;
- (_Bool)beginArchive;
- (id)addAlternateForMessageVersion:(unsigned long long)arg1;
- (void)requiresDocumentVersion:(unsigned long long)arg1;
- (void)requiresDocumentReadVersion:(unsigned long long)arg1 writeVersion:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool shouldSaveAlternates;
- (id)initWithObject:(id)arg1;
- (void)addOwnedSparseReferenceArray:(id)arg1 toArchive:(struct SparseReferenceArrayArchive *)arg2;
- (void)addSparseReferenceArray:(id)arg1 toArchive:(struct SparseReferenceArrayArchive *)arg2;
- (void)addSparseReferenceArray:(id)arg1 toArchive:(struct SparseReferenceArrayArchive *)arg2 owned:(_Bool)arg3;

// Remaining properties
@property(nonatomic) unsigned long long messageVersion;

@end

__attribute__((visibility("hidden")))
@interface TSPArchivingUtility : NSObject
{
}

+ (int)tagNumberForLastExtensionFieldInMessage:(const struct Message *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPAlternateArchiver : TSPArchiverBase
{
}

- (id)initWithObject:(id)arg1 messageVersion:(unsigned long long)arg2;
- (id)initWithObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPDataManager : NSObject
{
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_datasQueue;
    long long _nextNewIdentifier;
    struct hash_map<const long long, TSPData *__weak, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSPData *__weak>>> _identifierToDataMap;
    struct hash_map<const std::__1::array<unsigned char, 20>, TSPData *__weak, TSP::DataDigestHash, TSP::DataDigestEqualTo, std::__1::allocator<std::__1::pair<const std::__1::array<unsigned char, 20>, TSPData *__weak>>> _digestToDataMap;
    NSObject<OS_dispatch_queue> *_temporaryDirectoryQueue;
    TSUTemporaryDirectory *_temporaryDirectory;
    TSUPathSet *_temporaryDirectoryPathSet;
    _Bool _hasExternalReferences;
    NSObject<OS_dispatch_queue> *_externalReferenceRemovalQueue;
    NSObject<OS_dispatch_group> *_externalReferenceRemovalGroup;
}

+ (id)stringForDigest:(const array_019f9a10 *)arg1;
+ (_Bool)requestDocumentResourcesUsingDataProvider:(id)arg1 packageMetadata:(id)arg2;
+ (void)readWithChannel:(id)arg1 handler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) __weak TSPObjectContext *context; // @synthesize context=_context;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)removeFileAtPath:(id)arg1;
- (id)checkForPersistenceWarningsWithPackageURL:(id)arg1;
- (void)addData:(id)arg1;
- (id)addNewDataForStorage:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3;
- (id)dataWithStorage:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 skipDocumentResourcesLookup:(_Bool)arg4 accessorBlock:(CDUnknownBlockType)arg5;
- (void)dataForDigest:(const array_019f9a10 *)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)dataForDigest:(const array_019f9a10 *)arg1;
- (id)dataForDigestImpl:(const array_019f9a10 *)arg1 skipDocumentResourcesLookup:(_Bool)arg2 accessorBlock:(CDUnknownBlockType)arg3;
- (id)dataForDigestImpl:(const array_019f9a10 *)arg1 accessorBlock:(CDUnknownBlockType)arg2;
- (void)removeExternalReferenceForData:(id)arg1 storage:(id)arg2;
- (void)waitForRemoveExternalReferencesToComplete;
- (void)removeExternalReferences;
- (id)dataFromExternalReferenceURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (id)dataWithTemporaryPath:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3;
- (id)temporaryPathForFilename:(id)arg1;
- (_Bool)linkTemporaryPath:(id)arg1 fromURL:(id)arg2;
- (int)openTemporaryPath:(id)arg1;
- (id)dataForIdentifierImpl:(long long)arg1;
- (id)dataForIdentifier:(long long)arg1;
- (id)dataOrNilForIdentifier:(long long)arg1;
- (void)enumerateDatasUsingBlock:(CDUnknownBlockType)arg1;
- (void)addDataFromPackage:(id)arg1 packageURL:(id)arg2 documentResourceDataProvider:(id)arg3 info:(const struct DataInfo *)arg4 areExternalReferencesAllowed:(_Bool)arg5;
- (void)didSaveWithSaveOperationState:(id)arg1;
- (_Bool)prepareSaveWithOldPackage:(id)arg1 saveOperationState:(id)arg2;
- (void)loadFromPackage:(id)arg1 packageURL:(id)arg2 documentResourceDataProvider:(id)arg3 packageMetadata:(id)arg4 areExternalReferencesAllowed:(_Bool)arg5;
- (id)copyData:(id)arg1;
- (id)documentResourceDataWithStorage:(id)arg1 digestString:(id)arg2 filename:(id)arg3;
- (id)dataFromNSData:(id)arg1 filename:(id)arg2;
- (void)findExistingDataForReadChannel:(id)arg1 dataURL:(id)arg2 readHandler:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)findExistingDataForReadChannel:(id)arg1 dataURL:(id)arg2 temporaryPath:(id)arg3 shouldWriteIfFound:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (id)dataForExistingData:(id)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 temporaryPath:(id)arg4;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 temporaryPath:(id)arg3;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 linkURLOrNil:(id)arg3;
- (id)dataFromReadChannel:(id)arg1 filename:(id)arg2;
- (void)dataFromAssetsLibraryURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)dataFromAssetsLibraryURL:(id)arg1;
- (void)coordinateReadingNewFileURL:(id)arg1 byAccessor:(CDUnknownBlockType)arg2;
- (id)dataFromFileURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (id)dataFromURL:(id)arg1 useFileCoordination:(_Bool)arg2;
- (void)didCloseDocument;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPBundle : TSPPackage
{
}

+ (unsigned long long)zipArchiveOptions;
+ (id)zipArchiveURLFromPackageURL:(id)arg1;
+ (_Bool)isBundleFormatURL:(id)arg1;
+ (id)componentFileURLForPackageURL:(id)arg1 packageLocator:(id)arg2;
+ (id)objectArchiveURLForPackageURL:(id)arg1;
- (void)prepareForDocumentReplacementWithSuccess:(_Bool)arg1 forSafeSave:(_Bool)arg2 originalURL:(id)arg3;
- (id)newDocumentPropertiesWithURL:(id)arg1 zipProvider:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (_Bool)hasDataAtRelativePath:(id)arg1;
- (id)newRawDataReadChannelAtRelativePath:(id)arg1;
- (id)dataAtRelativePath:(id)arg1 allowDecryption:(_Bool)arg2 error:(id *)arg3;
- (id)newDataStorageAtRelativePath:(id)arg1;
- (void)copyComponent:(id)arg1 toPackageURL:(id)arg2 packageLocator:(id)arg3 zipFileWriter:(id)arg4 encryptionKey:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (id)newRawReadChannelForComponent:(id)arg1;
- (unsigned long long)encodedLengthForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(_Bool)arg2;
- (long long)packageType;

@end

__attribute__((visibility("hidden")))
@interface TSPBundleWriter : TSPPackageWriter
{
    NSObject<OS_dispatch_queue> *_componentFileIOQueue;
    TSPDirectoryPackageDataWriter *_dataWriter;
}

+ (_Bool)createDirectoryAtURL:(id)arg1 withIntermediateDirectories:(_Bool)arg2;
- (void).cxx_destruct;
- (id)newRawDataWriteChannelForRelativePath:(id)arg1 originalSize:(unsigned long long)arg2 originalCRC:(unsigned int)arg3;
- (id)newPackageWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5;
- (struct CGDataConsumer *)newCGDataConsumerAtRelativePath:(id)arg1;
- (_Bool)writeData:(id)arg1 toRelativePath:(id)arg2 allowEncryption:(_Bool)arg3 error:(id *)arg4;
- (id)linkOrCopyData:(id)arg1 fromURL:(id)arg2 decryptionKey:(id)arg3 preferredFilename:(id)arg4 error:(id *)arg5;
- (id)targetDataURLForPath:(id)arg1;
- (id)newRawComponentWriteChannelWithPackageLocator:(id)arg1 storeOutsideObjectArchive:(_Bool)arg2;
- (unsigned long long)encodedLengthForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(_Bool)arg2;
- (id)initWithURL:(id)arg1 documentTargetURL:(id)arg2 relativeURLForExternalData:(id)arg3 packageIdentifier:(unsigned char)arg4 documentProperties:(id)arg5 fileFormatVersion:(unsigned long long)arg6 updateType:(long long)arg7 encryptionKey:(id)arg8 originalDocumentPackage:(id)arg9 originalSuppportPackage:(id)arg10 fileCoordinatorDelegate:(id)arg11 progress:(id)arg12 error:(id *)arg13;

@end

__attribute__((visibility("hidden")))
@interface TSPBundleWriterComponentFileWriteChannel : NSObject <TSPComponentWriteChannel>
{
    NSURL *_URL;
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _handler;
    TSUFileIOChannel *_writeChannel;
    _Bool _isClosed;
}

- (void).cxx_destruct;
- (void)close;
- (void)writeData:(id)arg1;
- (id)initWithURL:(id)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPAVAssetResourceLoaderDelegate : NSObject <AVAssetResourceLoaderDelegate>
{
    id <TSPDataStorage> _dataStorage;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    id <TSUReadChannel> _readChannel;
    NSObject<OS_dispatch_queue> *_concurrentRequestQueue;
    NSString *_contentTypeUTI;
}

- (void).cxx_destruct;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)dealloc;
- (void)_provideData:(id)arg1 untilRequestCancelledForResourceLoadingRequest:(id)arg2;
- (id)delegateQueue;
- (id)initWithDataStorage:(id)arg1 contentTypeUTI:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPReadChannelUtils : NSObject
{
}

+ (id)dataFromReadChannel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPStreamDataStorage : NSObject <TSPDataStorage>
{
}

- (_Bool)isInPackage:(id)arg1;
@property(readonly, nonatomic) _Bool readOnly;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id)arg2;
- (id)filenameForPreferredFilename:(id)arg1;
@property(readonly, nonatomic) _Bool isMissingData;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (id)AVAssetWithOptions:(id)arg1 usingResourceLoaderWithContentTypeUTI:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (id)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, nonatomic) unsigned int CRC;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool gilligan_isRemote;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPData : NSObject <TSPSplitableData>
{
    int _didCull;
    long long _identifier;
    NSObject<OS_dispatch_queue> *_accessQueue;
    id <TSPDataStorage> _storage;
    NSString *_filename;
    TSPDataManager *_manager;
    array_019f9a10 _digest;
    _Bool _isDeallocating;
}

+ (_Bool)updateDigest:(array_019f9a10 *)arg1 withProtobufString:(const basic_string_a1f69cfb *)arg2;
+ (_Bool)writeStorage:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)requiredAVAssetOptions;
+ (id)cullingListeners;
+ (void)removeCullingListener:(id)arg1;
+ (void)addCullingListener:(id)arg1;
+ (id)cullingListenersQueue;
+ (id)null;
+ (id)readOnlyDataFromNSData:(id)arg1 filename:(id)arg2;
+ (id)readOnlyDataFromURL:(id)arg1;
+ (id)dataFromReadChannel:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromDataRep:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromNSData:(id)arg1 filename:(id)arg2 context:(id)arg3;
+ (id)dataFromURL:(id)arg1 useExternalReferenceIfAllowed:(_Bool)arg2 useFileCoordination:(_Bool)arg3 context:(id)arg4;
+ (id)dataFromURL:(id)arg1 useExternalReferenceIfAllowed:(_Bool)arg2 context:(id)arg3;
+ (id)dataFromURL:(id)arg1 context:(id)arg2;
+ (void)dataForAssetsLibraryURL:(id)arg1 context:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)pasteboardTypeForIdentifier:(long long)arg1;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool gilligan_isRemote;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id)arg2;
- (_Bool)isStorageInPackage:(id)arg1;
- (const array_019f9a10 *)digest;
- (id)preferredFilename;
- (void)setFilename:(id)arg1 storage:(id)arg2;
@property(retain, nonatomic) id <TSPDataStorage> storage;
- (id)initWithIdentifier:(long long)arg1 digest:(const array_019f9a10 *)arg2 filename:(id)arg3 storage:(id)arg4 manager:(id)arg5;
@property(readonly, nonatomic) unsigned long long encodedLengthIfLocal;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (_Bool)isLengthLikelyToBeGreaterThan:(unsigned long long)arg1;
- (_Bool)writeToURL:(id)arg1 error:(id *)arg2;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)addDownloadObserver:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)performInputStreamReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)copyWithContext:(id)arg1;
@property(readonly, nonatomic) NSString *uniqueName;
@property(readonly, nonatomic) TSPObjectContext *context;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
@property(readonly, nonatomic) _Bool isEncrypted;
@property(readonly, nonatomic) _Bool isExternalData;
@property(readonly, nonatomic) _Bool isApplicationData;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) NSString *type;
@property(readonly, nonatomic) NSString *filename;
- (id)AVAssetWithOptions:(id)arg1;
- (id)AVAsset;
- (struct CGImage *)newCGImage;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)NSData;
- (_Bool)bookmarkDataNeedsWrite;
- (id)bookmarkData;
- (void)willCull;
- (void)dealloc;
- (id)UIImage;
- (void)tsp_splitDataWithMaxSize:(unsigned long long)arg1 subdataHandlerBlock:(CDUnknownBlockType)arg2;
- (id)pasteboardType;

@end

__attribute__((visibility("hidden")))
@interface TSPBundleDataStorage : TSPFileDataStorage
{
    NSString *_path;
    unsigned char _packageIdentifier;
    _Bool _isMissingData;
    TSPBundle *_bundle;
    _Bool _gilligan_isRemote;
}

- (void)setGilligan_isRemote:(_Bool)arg1;
- (_Bool)gilligan_isRemote;
- (void).cxx_destruct;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (_Bool)copyToTemporaryURL:(id)arg1 encryptionKey:(id)arg2;
- (_Bool)isInPackage:(id)arg1;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)setIsMissingData:(_Bool)arg1;
- (_Bool)isMissingData;
- (id)decryptionKey;
- (unsigned char)packageIdentifier;
- (id)packageLocator;
- (void)didInitializeFromDocumentURL:(id)arg1;
- (id)initWithPath:(id)arg1 bundle:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPFileDataStorage : TSPStreamDataStorage
{
}

- (unsigned long long)encodedLength;
- (_Bool)isReadable;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageDataReader : NSObject <TSPFileCoordinatorDelegate>
{
    NSURL *_URL;
    TSPPackage *_package;
}

- (void).cxx_destruct;
- (struct CGImage *)newCGImageAtRelativePath:(id)arg1;
- (struct CGImageSource *)newCGImageSourceAtRelativePath:(id)arg1;
- (struct CGDataProvider *)newCGDataProviderAtRelativePath:(id)arg1;
- (_Bool)hasDataAtRelativePath:(id)arg1;
- (_Bool)checkPassword:(id)arg1;
@property(readonly, nonatomic) _Bool isPasswordProtected;
@property(readonly, nonatomic) TSPDocumentProperties *documentProperties;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, nonatomic) long long packageType;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (id)initWithURL:(id)arg1 decryptionKey:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPApplicationDataStorage : TSPDocumentResourceDataStorage
{
    _Bool _isValidated;
}

- (void)validateIfNeeded;
- (id)fileURLForInfo:(id)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)filenameForPreferredFilename:(id)arg1;
- (_Bool)isReadable;
- (id)initWithManager:(id)arg1 documentResourceInfo:(id)arg2 isValidated:(_Bool)arg3;
- (id)initWithManager:(id)arg1 documentResourceInfo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPPersistedObjectUUIDMap : NSObject
{
    struct hash_map<NSUUID *, TSP::ObjectLocation, TSP::NSUUIDHash, TSP::NSUUIDEqualTo, std::__1::allocator<std::__1::pair<NSUUID *const, TSP::ObjectLocation>>> *_map;
}

- (void)didUpdateUUIDDuringRead:(id)arg1 forComponentIdentifier:(long long)arg2 objectIdentifier:(long long)arg3 originalUUID:(id)arg4;
- (struct ObjectLocation)objectLocationForUUID:(id)arg1;
- (void)setObjectLocation:(struct ObjectLocation)arg1 forUUID:(id)arg2;
- (void)dealloc;
- (id)initWithComponents:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPTemporaryDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
    SFUCryptoKey *_decryptionKey;
    _Bool _isMissingData;
    _Bool _gilligan_isRemote;
    _Bool _isMissingOriginalData;
}

@property(nonatomic) _Bool isMissingOriginalData; // @synthesize isMissingOriginalData=_isMissingOriginalData;
- (void)setGilligan_isRemote:(_Bool)arg1;
- (_Bool)gilligan_isRemote;
@property(nonatomic) _Bool isMissingData; // @synthesize isMissingData=_isMissingData;
- (void).cxx_destruct;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)decryptionKey;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 decryptionKey:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPFilePackageWriter : TSPPackageWriter
{
}

- (id)newRawDataWriteChannelForRelativePath:(id)arg1 originalSize:(unsigned long long)arg2 originalCRC:(unsigned int)arg3;
- (id)newPackageWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageMetadata : TSPObject
{
    struct PackageMetadata _message;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)tsp_identifier;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (struct PackageMetadata *)message;

@end

__attribute__((visibility("hidden")))
@interface TSPLazyReference : NSObject <NSCopying>
{
    TSPObject *_strongObject;
    TSPObject *_weakObject;
    _Bool _isWeak;
    _Bool _allowUnknownObject;
    id <TSPLazyReferenceDelegate> _delegate;
    long long _identifier;
    TSPComponent *_component;
}

+ (id)weakReferenceForObject:(id)arg1;
+ (id)referenceForObject:(id)arg1;
@property(readonly, nonatomic) _Bool isWeak; // @synthesize isWeak=_isWeak;
@property(nonatomic) __weak TSPComponent *component; // @synthesize component=_component;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(nonatomic) __weak id <TSPLazyReferenceDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)resetIdentifier;
- (_Bool)discardStrongObjectIfPossible;
@property(retain, nonatomic) TSPObject *strongObject;
@property(readonly, nonatomic) TSPObject *weakObject;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2;
- (_Bool)referencesObject:(id)arg1;
- (_Bool)isEqualToLazyReference:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly, nonatomic) id objectIfLoaded;
@property(readonly, nonatomic) id object;
- (id)initWithObject:(id)arg1 isWeak:(_Bool)arg2;
- (id)initWeakReferenceWithObject:(id)arg1;
- (id)initWithObject:(id)arg1;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPRegistry : NSObject
{
    struct hash_map<unsigned int, const google::protobuf::Message *, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const google::protobuf::Message *>>> _messageTypeToPrototypeMap;
    struct hash_map<const google::protobuf::Descriptor *, unsigned int, TSP::DescriptorHash, std::__1::equal_to<const google::protobuf::Descriptor *>, std::__1::allocator<std::__1::pair<const google::protobuf::Descriptor *const, unsigned int>>> _descriptorToMessageTypeMap;
    struct hash_map<unsigned int, const char *, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const char *>>> _messageTypeToClassnameMap;
    struct hash_map<unsigned int, __unsafe_unretained Class, __gnu_cxx::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, __unsafe_unretained Class>>> _messageTypeToClassMap;
}

+ (void)setInitializationHandler:(CDUnknownBlockType)arg1;
+ (id)sharedRegistry;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (void)setOverrideMessageType:(unsigned int)arg1 messagePrototype:(const struct Message *)arg2 descriptor:(const struct Descriptor *)arg3;
- (void)setUpgradeMessageType:(unsigned int)arg1 messagePrototype:(const struct Message *)arg2 unarchiveClass:(Class)arg3;
- (void)setUpgradeMessageType:(unsigned int)arg1 messagePrototype:(const struct Message *)arg2 unarchiveClassname:(const char *)arg3;
- (void)setOverrideMessageType:(unsigned int)arg1 messagePrototype:(const struct Message *)arg2 descriptor:(const struct Descriptor *)arg3 unarchiveClassname:(const char *)arg4;
- (void)setMessageType:(unsigned int)arg1 messagePrototype:(const struct Message *)arg2 descriptor:(const struct Descriptor *)arg3 unarchiveClassname:(const char *)arg4;
- (void)resetForMessageType:(unsigned int)arg1 descriptor:(const struct Descriptor *)arg2;
- (Class)unarchiveClassForMessageType:(unsigned int)arg1;
- (unsigned int)messageTypeForDescriptor:(const struct Descriptor *)arg1;
- (const struct Message *)messagePrototypeForMessageType:(unsigned int)arg1;
- (void)registerPersistenceMessages;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPContainedObject : NSObject
{
    TSPObject *_owner;
}

@property(nonatomic) __weak TSPObject *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initWithOwner:(id)arg1;
- (id)documentRoot;

@end

__attribute__((visibility("hidden")))
@interface TSPAssetReadChannel : NSObject <TSUStreamReadChannel>
{
    ALAssetRepresentation *_representation;
    ALAssetsLibrary *_library;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithRepresentation:(id)arg1 library:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPLazyReferenceArray : NSMutableArray
{
    NSMutableArray *_references;
    unsigned long long _mutations;
}

@property(readonly, nonatomic) NSArray *references; // @synthesize references=_references;
- (void).cxx_destruct;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceObjectsInRange:(struct _NSRange)arg1 withObjectsFromArray:(id)arg2;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeObjectsInRange:(struct _NSRange)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)removeLastObject;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObjectsFromArray:(id)arg1;
- (void)addReference:(id)arg1;
- (void)addObject:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)subarrayWithRange:(struct _NSRange)arg1;
- (id)objectsAtIndexes:(id)arg1;
- (id)referenceAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPObjectContainer : TSPObject
{
    unsigned char _packageIdentifier;
    NSArray *_childObjects;
}

+ (long long)objectIdentifierForPackageIdentifier:(unsigned char)arg1;
- (void).cxx_destruct;
- (void)saveToArchiver:(id)arg1;
- (void)prepareForComponentWriteWithDelayedObjects:(id)arg1;
- (unsigned int)delayedArchivingPriority;
- (_Bool)shouldDelayArchiving;
- (id)packageLocator;
- (long long)tsp_identifier;
- (void)didFinishUnarchiving;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 packageIdentifier:(unsigned char)arg2;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPDataRepReadChannel : NSObject <TSUStreamReadChannel>
{
    SFUDataRepresentation *_representation;
    id <SFUInputStream> _inputStream;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithRepresentation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceInfo : NSObject
{
    _Bool _isDownloadable;
    NSString *_digestString;
    NSString *_locator;
    NSString *_extension;
    long long _fileSize;
}

@property(readonly, nonatomic) _Bool isDownloadable; // @synthesize isDownloadable=_isDownloadable;
@property(readonly, nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(readonly, nonatomic) NSString *extension; // @synthesize extension=_extension;
@property(readonly, nonatomic) NSString *locator; // @synthesize locator=_locator;
@property(readonly, nonatomic) NSString *digestString; // @synthesize digestString=_digestString;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDigestString:(id)arg1 locator:(id)arg2 extension:(id)arg3 fileSize:(long long)arg4 isDownloadable:(_Bool)arg5;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPZipFileWriteChannel : NSObject <TSUStreamWriteChannel>
{
    TSUZipFileWriter *_archiveWriter;
    _Bool _isClosed;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (void)close;
- (void)writeData:(id)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)initWithArchiveWriter:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDescriptionGenerator : NSObject
{
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableOrderedSet *_components;
    struct map<long long, TSP::DescriptionPrinterMessage, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DescriptionPrinterMessage>>> _messageMap;
    NSMutableDictionary *_objects;
    NSMutableDictionary *_uuidMap;
    NSMutableDictionary *_inverseUUIDMap;
}

+ (_Bool)dumpMessagesForDocument:(id)arg1 decryptionKey:(id)arg2 toURL:(id)arg3;
+ (id)filenameForPackageIdentifier:(unsigned char)arg1;
+ (id)directoryForDocumentUUID:(id)arg1 versionUUID:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)descriptionForIdentifier:(long long)arg1;
- (_Bool)dumpComponentMessages:(id)arg1 printNewLine:(_Bool)arg2 withPrinter:(struct ReferencePrinter *)arg3 outputStream:(struct FileOutputStream *)arg4;
- (struct ReferencePrinter *)newReferencePrinter;
- (void)performPrintOperationBlock:(CDUnknownBlockType)arg1;
- (_Bool)dumpMessagesToFilePath:(id)arg1;
- (_Bool)dumpMessagesForDocumentUUID:(id)arg1 versionUUID:(id)arg2 packageIdentifier:(unsigned char)arg3;
- (void)addUUIDMapEntriesForComponent:(id)arg1;
- (void)addComponent:(id)arg1;
- (CDUnknownBlockType)newPrinterCustomPropertiesHandler;
- (CDUnknownBlockType)newObjectIdentifierForUUIDHandler;
- (void)addObject:(id)arg1;
- (void)addMessage:(const struct Message *)arg1 withStrongReferencesMap:(hash_map_43d567e3 *)arg2 forObjectIdentifier:(long long)arg3;
- (void)addArchiver:(id)arg1;
- (map_b332c0f2 *)_messageAlternateMapFromAlternateArchivers:(id)arg1;
- (hash_map_43d567e3 *)_strongReferencesFromArchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDescriptionComponentReader : TSPComponentReader
{
    TSPDescriptionGenerator *_descriptionGenerator;
}

- (void).cxx_destruct;
- (id)unknownObjectUnarchiverArchiveInfo:(const struct ArchiveInfo *)arg1 stream:(struct DispatchDataInputStream *)arg2;
- (id)newUnarchiverWithObjectIdentifier:(long long)arg1 messageInfo:(const struct MessageInfo *)arg2 message:(auto_ptr_4370f086 *)arg3 messageVersion:(unsigned long long)arg4 strongReferences:(auto_ptr_c01b630f)arg5 unknownMessages:(id)arg6 error:(id *)arg7;
- (_Bool)shouldProceedParsingOnFailure;
- (void)read;
- (id)initWithComponent:(id)arg1 readChannel:(id)arg2 descriptionGenerator:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentWriteChannelAdapter : NSObject <TSPComponentWriteChannel>
{
    NSObject<OS_dispatch_queue> *_queue;
    TSUFileIOChannel *_channel;
    CDUnknownBlockType _handler;
    NSError *_error;
}

- (void).cxx_destruct;
- (void)close;
- (void)setError:(id)arg1;
- (void)writeData:(id)arg1;
- (id)initWithQueue:(id)arg1 channel:(id)arg2 handler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabase : TSUDatabase
{
    NSURL *_packageURL;
    _Bool _incrementalVacuum;
    struct sqlite3_stmt *_insertObjectStatement;
    struct sqlite3_stmt *_insertDataStateStatement;
    struct sqlite3_stmt *_updateDataStateStatement;
    struct sqlite3_stmt *_insertRelationshipStatement;
    struct sqlite3_stmt *_relationshipTargetsStatement;
}

- (void).cxx_destruct;
- (set_6550bfbd *)newRelationshipTargetsForSourceIdentifier:(long long)arg1 error:(id *)arg2;
- (_Bool)insertRelationshipWithSourceIdentifier:(long long)arg1 targetIdentifier:(long long)arg2 error:(id *)arg3;
- (struct sqlite3_blob *)openDataStateBlobWithIdentifier:(long long)arg1 willWrite:(_Bool)arg2 error:(id *)arg3;
- (_Bool)updateDataStateWithIdentifier:(long long)arg1 size:(int)arg2 error:(id *)arg3;
- (_Bool)insertDataStateWithSize:(int)arg1 identifier:(long long *)arg2 error:(id *)arg3;
- (_Bool)insertObjectWithIdentifier:(long long)arg1 stateIdentifier:(const struct ObjectStateIdentifier *)arg2 classType:(int)arg3 error:(id *)arg4;
- (_Bool)documentVersion:(CDStruct_4bcfbbae *)arg1 closedCleanlyToken:(long long *)arg2 error:(id *)arg3;
- (_Bool)setClosedCleanlyToken:(long long)arg1 error:(id *)arg2;
- (_Bool)setDocumentVersion:(CDStruct_4bcfbbae)arg1 error:(id *)arg2;
- (_Bool)upgradeFromSchemaVersion:(int)arg1 error:(id *)arg2;
- (_Bool)needsUpgradeFromSchemaVersion:(int)arg1;
- (id)objectFromStatement:(struct sqlite3_stmt *)arg1;
- (id)queryFirstObjectWithStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (id)queryObjectWithIdentifier:(long long)arg1 error:(id *)arg2;
- (struct sqlite3_blob *)openBlobForObject:(id)arg1 error:(id *)arg2;
- (struct sqlite3_blob *)openDataStateBlobWithIdentifier:(long long)arg1 error:(id *)arg2;
- (set_6550bfbd *)filterIdentifiers:(const set_6550bfbd *)arg1 error:(id *)arg2;
- (_Bool)numberOfDatabaseObjects:(unsigned long long *)arg1 error:(id *)arg2;
- (_Bool)lastObjectIdentifier:(long long *)arg1 error:(id *)arg2;
- (_Bool)documentVersion:(unsigned long long *)arg1 error:(id *)arg2;
- (_Bool)closeWithError:(id *)arg1;
- (id)initReadonlyWithPath:(id)arg1 error:(id *)arg2;
- (id)initWithPath:(id)arg1 error:(id *)arg2;
- (id)init;
- (_Bool)parseArchive:(struct Message *)arg1 forObject:(id)arg2 error:(id *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseInputStream : NSObject <TSUStreamReadChannel, SFUInputStream>
{
    struct sqlite3_blob *_blob;
    int _offset;
    int _length;
}

- (id)closeLocalStream;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithBlob:(struct sqlite3_blob *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCopyAssistant : TSPPasteboardWriteAssistant
{
    TSPPasteboard *_pasteboard;
    _Bool _didAttemptToCopy;
}

- (void).cxx_destruct;
- (void)copyToPasteboardIsSmartCopy:(_Bool)arg1;
- (void)copyToPasteboard;
- (void)loadData;
- (id)initWithPasteboard:(id)arg1 sourceContext:(id)arg2;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardReadAssistant : NSObject
{
    TSPObjectContext *_pasteboardContext;
    TSPPasteboardObject *_pasteboardObject;
}

+ (id)contentDescriptionFromPasteboard:(id)arg1;
@property(readonly, nonatomic) TSPPasteboardObject *pasteboardObject; // @synthesize pasteboardObject=_pasteboardObject;
@property(readonly, nonatomic) TSPObjectContext *pasteboardContext; // @synthesize pasteboardContext=_pasteboardContext;
- (void).cxx_destruct;
- (id)initWithPasteboard:(id)arg1 targetContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboard : NSObject
{
    id _pasteboard;
}

+ (id)pasteboardWithPasteboard:(id)arg1;
+ (id)pasteboardWithUniqueName;
+ (id)pasteboardWithName:(id)arg1 create:(_Bool)arg2;
+ (id)generalPasteboard;
+ (Class)pasteboardClass;
+ (id)activePasteboardForName:(id)arg1;
+ (id)activePasteboards;
+ (id)activePasteboardsQueue;
+ (id)stylePasteboard;
- (void).cxx_destruct;
- (id)description;
- (oneway void)invalidate;
@property(readonly, nonatomic) _Bool isSmartCopy;
- (_Bool)containsImportableTextTypes;
- (_Bool)containsImportableRichTextTypes;
- (_Bool)containsNativePasteboardTypes;
- (id)importablePlainTextTypes;
- (id)importableImageTypes;
- (id)importableRichTextTypes;
- (long long)clearContents;
@property(readonly, nonatomic) long long changeCount;
@property(readonly, nonatomic) NSString *name;
- (id)valuesForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (id)dataForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (id)pasteboardTypesForItemSet:(id)arg1;
- (void)addData:(id)arg1 forPasteboardType:(id)arg2;
- (void)addItems:(id)arg1 isSmartCopy:(_Bool)arg2;
- (void)addItems:(id)arg1;
- (void)performAsynchronousWriteUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long numberOfItems;
- (id)valueForPasteboardType:(id)arg1;
- (id)dataForPasteboardType:(id)arg1;
- (_Bool)containsAnyPasteboardTypeInArray:(id)arg1;
- (_Bool)containsPasteboardTypes:(id)arg1;
- (id)pasteboardTypes;
@property(readonly, nonatomic) NSArray *URLs;
@property(readonly, nonatomic) NSArray *richTextStrings;
@property(readonly, nonatomic) NSArray *strings;
@property(copy, nonatomic) NSString *string;
- (id)initWithNativePasteboard:(id)arg1;
- (id)initWithUniquePasteboardName;
- (id)initWithPasteboardName:(id)arg1 create:(_Bool)arg2;
- (id)initWithGeneralPasteboard;
- (_Bool)fromIWorkSageDataSource;
- (_Bool)fromExcelDataSource;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardUIPasteboard : TSPPasteboard
{
    NSArray *_cachedPasteboardTypes;
    NSMutableDictionary *_pasteboardItemIndexCache;
    unsigned long long _pasteboardItemCount;
    long long _cachedChangeCount;
}

- (void).cxx_destruct;
- (oneway void)invalidate;
- (_Bool)containsImportableTextTypes;
- (id)importablePlainTextTypes;
- (long long)clearContents;
- (id)valuesForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (id)dataForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (void)addData:(id)arg1 forPasteboardType:(id)arg2;
- (void)addItems:(id)arg1 isSmartCopy:(_Bool)arg2;
- (id)pasteboardTypesForItemSet:(id)arg1;
- (long long)numberOfItems;
- (id)valueForPasteboardType:(id)arg1;
- (id)dataForPasteboardType:(id)arg1;
- (id)pasteboardTypes;
- (id)strings;
- (void)setString:(id)arg1;
- (id)string;
- (id)URLs;
- (id)propertyListForValue:(id)arg1;
- (void)updateCachedChangeCount;
- (void)reloadPasteboardItemIndexCacheIfNeeded;
- (void)invalidatePasteboardCache;
- (void)invalidatePasteboardCacheIfNeeded;
- (void)addPasteboardItemIndex:(unsigned long long)arg1 forType:(id)arg2;
- (void)addPasteboardItem:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addPasteboardItem:(id)arg1;
- (void)addPasteboardItemForObject:(id)arg1 type:(id)arg2;
- (id)initWithNativePasteboard:(id)arg1;
- (id)initWithUniquePasteboardName;
- (id)initWithPasteboardName:(id)arg1 create:(_Bool)arg2;
- (id)initWithGeneralPasteboard;

@end

__attribute__((visibility("hidden")))
@interface TSPObjectUUIDMap : NSObject
{
    int _assertOnReadCount;
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_inMemoryUUIDDictionary;
    NSMutableSet *_UUIDsWithSuppressedAssertions;
    TSPPersistedObjectUUIDMap *_persistedUUIDMap;
}

- (void).cxx_destruct;
- (void)endAssertOnRead;
- (void)beginAssertOnRead;
- (void)object:(id)arg1 didChangeUUIDToValue:(id)arg2 fromValue:(id)arg3;
- (id)objectWithUUID:(id)arg1;
- (void)objectWillBeRemovedFromDocument:(id)arg1;
- (void)objectWasAddedToDocument:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)shouldSuppressAssertionForObjectUUID:(id)arg1;
- (_Bool)objectUUIDIsInDocument:(id)arg1;
- (void)setPersistedUUIDMap:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPMemoryReadChannel : NSObject <TSUReadChannel>
{
    NSObject<OS_dispatch_data> *_dispatchData;
    NSObject<OS_dispatch_queue> *_accessQueue;
}

- (void).cxx_destruct;
- (void)close;
@property(readonly, nonatomic) _Bool isValid;
- (void)addBarrier:(CDUnknownBlockType)arg1;
- (void)setLowWater:(unsigned long long)arg1;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)readFromOffset:(long long)arg1 length:(unsigned long long)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)initWithNSData:(id)arg1;
- (id)initWithDispatchData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardObject : TSPObject
{
    _Bool _isCrossAppPaste;
    _Bool _isCrossDocumentPaste;
    _Bool _isTextPrimary;
    _Bool _isSmartCopyPaste;
    NSArray *_drawables;
    NSArray *_styles;
    TSPObject *_stylesheet;
    TSPObject *_theme;
    TSPObject *_wpStorage;
    TSPObject *_guideStorage;
    TSPObject *_appNativeObject;
}

@property(nonatomic) _Bool isSmartCopyPaste; // @synthesize isSmartCopyPaste=_isSmartCopyPaste;
@property(nonatomic) _Bool isTextPrimary; // @synthesize isTextPrimary=_isTextPrimary;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste; // @synthesize isCrossDocumentPaste=_isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isCrossAppPaste; // @synthesize isCrossAppPaste=_isCrossAppPaste;
@property(retain, nonatomic) TSPObject *appNativeObject; // @synthesize appNativeObject=_appNativeObject;
@property(retain, nonatomic) TSPObject *guideStorage; // @synthesize guideStorage=_guideStorage;
@property(retain, nonatomic) TSPObject *wpStorage; // @synthesize wpStorage=_wpStorage;
@property(retain, nonatomic) TSPObject *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) TSPObject *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(copy, nonatomic) NSArray *styles; // @synthesize styles=_styles;
@property(copy, nonatomic) NSArray *drawables; // @synthesize drawables=_drawables;
- (void).cxx_destruct;
- (long long)tsp_identifier;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPTemporaryObjectContextDelegate : NSObject <TSPFileCoordinatorDelegate, TSPObjectContextDelegate>
{
    NSMutableSet *_persistenceWarnings;
    _Bool _ignoreDocumentSupport;
    NSURL *_packageURL;
    NSError *_error;
}

@property(nonatomic) _Bool ignoreDocumentSupport; // @synthesize ignoreDocumentSupport=_ignoreDocumentSupport;
@property(readonly, nonatomic) NSSet *persistenceWarnings; // @synthesize persistenceWarnings=_persistenceWarnings;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSURL *packageURL; // @synthesize packageURL=_packageURL;
- (void).cxx_destruct;
- (id)persistenceWarningsForData:(id)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (void)addPersistenceWarnings:(id)arg1;
- (void)presentPersistenceError:(id)arg1;
- (id)initWithPackageURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, nonatomic) _Bool canUpgradeDocumentSupport;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool preserveDocumentRevisionIdentifierForSequenceZero;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPFilePackageDataStorage : TSPStreamDataStorage
{
    NSString *_path;
    TSPFilePackage *_package;
    unsigned long long _encodedLength;
    unsigned int _CRC;
    struct {
        unsigned int didCalculateIsReadable:1;
        unsigned int didCalculateEncodedLength:1;
        unsigned int didCalculateCRC:1;
        unsigned int isReadable:1;
        unsigned int isMissingData:1;
    } _flags;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)copyToTemporaryURL:(id)arg1 encryptionKey:(id)arg2;
- (_Bool)isInPackage:(id)arg1;
- (unsigned int)CRC;
- (unsigned long long)encodedLength;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (_Bool)bookmarkDataNeedsWriteWithOptions:(unsigned long long)arg1;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (id)streamReadChannel;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
- (void)setIsMissingData:(_Bool)arg1;
- (_Bool)isMissingData;
- (_Bool)isReadable;
- (void)resetFlags;
- (id)decryptionKey;
- (unsigned char)packageIdentifier;
- (id)packageLocator;
- (void)didInitializeFromDocumentURL:(id)arg1;
- (id)initWithPath:(id)arg1 package:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardArchiver : TSPArchiver
{
    id <TSPProxyObjectManager> _proxyManager;
}

@property(nonatomic) __weak id <TSPProxyObjectManager> proxyManager; // @synthesize proxyManager=_proxyManager;
- (void).cxx_destruct;
- (void)setWeakLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongLazyReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setWeakReference:(id)arg1 message:(struct Reference *)arg2;
- (void)setStrongReference:(id)arg1 message:(struct Reference *)arg2;
- (_Bool)forPasteboard;

@end

__attribute__((visibility("hidden")))
@interface TSPMemoryComponentWriteChannel : NSObject <TSPComponentWriteChannel>
{
    NSObject<OS_dispatch_queue> *_streamQueue;
    TSUDispatchData *_streamData;
    _Bool _isClosed;
}

- (void).cxx_destruct;
- (id)serializedData;
- (void)close;
- (void)writeData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardReadChannel : NSObject <TSUStreamReadChannel>
{
    TSPPasteboard *_pasteboard;
    NSString *_pasteboardType;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithPasteboard:(id)arg1 pasteboardType:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageReadCoordinator : TSPReadCoordinatorBase <TSPReadCoordinator>
{
    TSPObjectContext *_context;
    NSUUID *_documentUUID;
    TSPObject *_documentObject;
    TSPPackage *_package;
    NSURL *_packageURL;
    TSPFinalizeHandlerQueue *_finalizeHandlerQueue;
    TSPDocumentResourceDataProvider *_documentResourceDataProvider;
    _Bool _areExternalDataReferencesAllowed;
    TSPPackageMetadata *_cachedMetadata;
    unsigned long long _readVersion;
    unsigned long long _writeVersion;
    TSPPersistedObjectUUIDMap *_persistedUUIDMap;
    NSObject<OS_dispatch_queue> *_errorQueue;
    NSError *_error;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSObject<OS_dispatch_queue> *_ioCompletionQueue;
    NSObject<OS_dispatch_queue> *_readCompletionQueue;
    NSObject<OS_dispatch_queue> *_componentQueue;
    hash_map_43d567e3 _readIdentifiers;
    NSMutableArray *_componentsToUpgrade;
    NSObject<OS_dispatch_queue> *_objectQueue;
    NSMapTable *_objects;
    hash_map_43d567e3 _readExternalObjects;
    _Bool _didRequireUpgrade;
    TSPDocumentRevision *_documentRevision;
    unsigned long long _saveToken;
    long long _preferredPackageType;
}

@property(readonly, nonatomic) _Bool didRequireUpgrade; // @synthesize didRequireUpgrade=_didRequireUpgrade;
@property(readonly, nonatomic) long long preferredPackageType; // @synthesize preferredPackageType=_preferredPackageType;
@property(readonly, nonatomic) unsigned long long saveToken; // @synthesize saveToken=_saveToken;
@property(readonly, nonatomic) TSPDocumentRevision *documentRevision; // @synthesize documentRevision=_documentRevision;
@property(readonly, nonatomic) unsigned long long writeVersion; // @synthesize writeVersion=_writeVersion;
@property(readonly, nonatomic) unsigned long long readVersion; // @synthesize readVersion=_readVersion;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reader:(id)arg1 didResetObjectUUID:(id)arg2 forObjectIdentifier:(long long)arg3 originalObjectUUID:(id)arg4;
- (void)reader:(id)arg1 didResetObjectIdentifierForObject:(id)arg2 originalObjectIdentifier:(long long)arg3;
- (void)reader:(id)arg1 didFindExternalRepeatedReference:(id)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 fromParentObject:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)reader:(id)arg1 didFindExternalReferenceToObjectIdentifier:(long long)arg2 componentIdentifier:(long long)arg3 isWeak:(_Bool)arg4 allowUnknownObject:(_Bool)arg5 fromParentObject:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (id)reader:(id)arg1 wantsDataForIdentifier:(long long)arg2;
- (void)didReferenceExternalObject:(id)arg1 withIdentifier:(long long)arg2;
- (id)externalObjectForIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isReadFinished:(_Bool)arg3;
- (id)unarchivedObjectForIdentifier:(long long)arg1 isReadFinished:(_Bool)arg2;
- (id)context;
@property(readonly, nonatomic) _Bool isReadingFromDocument;
- (id)baseObjectUUID;
- (unsigned long long)fileFormatVersion;
- (void)prepareForFullDocumentUpgradeImpl;
- (void)prepareForFullDocumentUpgrade;
- (void)updateObjectContextForSuccessfulRead;
- (void)processMetadata:(id)arg1;
- (void)didReadMetadata:(id)arg1;
- (_Bool)requestDocumentResourcesUsingDataProvider:(id)arg1;
- (id)readPackageMetadataWithError:(id *)arg1;
- (void)readPackageMetadataWithComponent:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)prepareToReadComponentWithIdentifier:(long long)arg1 forObjectIdentifier:(long long)arg2 isWeakReference:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readExternalReferenceComponentIfNeededAsyncForObjectIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isWeak:(_Bool)arg3 fromComponent:(id)arg4;
- (void)didReadObjects:(id)arg1 forComponent:(id)arg2 packageIdentifier:(unsigned char)arg3;
- (void)readComponentAsync:(id)arg1;
- (_Bool)readComponentIfNeededAsync:(id)arg1;
- (void)readComponent:(id)arg1 additionalComponents:(id)arg2 requireUpgrade:(_Bool)arg3 completionQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)readComponent:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readRootObjectWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)didUpdateLazyReferenceDelegate:(id)arg1;
- (_Bool)endReading;
- (id)error;
- (void)setError:(id)arg1;
- (id)initWithContext:(id)arg1 package:(id)arg2 packageURLOrNil:(id)arg3 finalizeHandlerQueue:(id)arg4 documentResourceDataProvider:(id)arg5 areExternalDataReferencesAllowed:(_Bool)arg6;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPSupportPackageReadCoordinator : TSPPackageReadCoordinator
{
    TSPPackage *_documentPackage;
    NSObject<OS_dispatch_queue> *_documentComponentReadQueue;
}

- (void).cxx_destruct;
- (void)prepareToReadComponentWithIdentifier:(long long)arg1 forObjectIdentifier:(long long)arg2 isWeakReference:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)endReading;
- (id)initWithContext:(id)arg1 package:(id)arg2 packageURLOrNil:(id)arg3 finalizeHandlerQueue:(id)arg4 documentResourceDataProvider:(id)arg5 areExternalDataReferencesAllowed:(_Bool)arg6 documentPackage:(id)arg7;
- (id)initWithContext:(id)arg1 package:(id)arg2 packageURLOrNil:(id)arg3 finalizeHandlerQueue:(id)arg4 documentResourceDataProvider:(id)arg5 areExternalDataReferencesAllowed:(_Bool)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentReader : TSPReader <TSPComponentParserDelegate>
{
    id <TSUStreamReadChannel> _readChannel;
    TSPObjectContext *_context;
    struct {
        unsigned int isReadingFromDocument:1;
        unsigned int ignoreUnknownContent:1;
        unsigned int ignoreVersionChecking:1;
        unsigned int acceptUnknownDocumentObject:1;
    } _flags;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)unknownObjectUnarchiverArchiveInfo:(const struct ArchiveInfo *)arg1 stream:(struct DispatchDataInputStream *)arg2;
- (id)unknownMessageFromMessageInfo:(const struct MessageInfo *)arg1 stream:(struct DispatchDataInputStream *)arg2;
- (const struct MessageInfo *)unknownObjectMessageInfo;
- (void)didUnarchiveObject:(id)arg1 withUnarchiver:(id)arg2;
- (id)newUnarchiverWithObjectIdentifier:(long long)arg1 messageInfo:(const struct MessageInfo *)arg2 message:(auto_ptr_4370f086 *)arg3 messageVersion:(unsigned long long)arg4 strongReferences:(auto_ptr_c01b630f)arg5 unknownMessages:(id)arg6 error:(id *)arg7;
- (id)newUnarchiverWithArchiveInfo:(const struct ArchiveInfo *)arg1 stream:(struct DispatchDataInputStream *)arg2 isUnknownObject:(_Bool *)arg3;
- (_Bool)componentParser:(id)arg1 didReadArchiveInfo:(const struct ArchiveInfo *)arg2 stream:(struct DispatchDataInputStream *)arg3 error:(id *)arg4;
- (_Bool)shouldProceedParsingOnFailure;
- (void)beginReadingWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3 readChannel:(id)arg4;
- (id)initWithComponent:(id)arg1 delegate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentParser : NSObject
{
    id <TSPComponentParserDelegate> _delegate;
    unsigned long long _state;
    unsigned int _archiveInfoLength;
    struct ArchiveInfo _archiveInfo;
    unsigned int _messagesLength;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)readArchiveFromStream:(struct DispatchDataInputStream *)arg1 error:(id *)arg2;
- (unsigned long long)readArchiveInfoFromStream:(struct DispatchDataInputStream *)arg1 error:(id *)arg2;
- (unsigned long long)readArchiveInfoLengthFromStream:(struct DispatchDataInputStream *)arg1 error:(id *)arg2;
- (_Bool)readFromStream:(struct DispatchDataInputStream *)arg1 error:(id *)arg2;
- (void)readWithChannel:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageWriter : NSObject <TSPPackageDataWriter>
{
    TSPPackage *_originalDocumentPackage;
    TSPPackage *_originalSupportPackage;
    id <TSPComponentWriteChannel> _componentWriteChannel;
    NSObject<OS_dispatch_queue> *_errorQueue;
    NSError *_error;
    TSPPackage *_writtenPackage;
    _Bool _isOpened;
    NSURL *_URL;
    NSURL *_documentTargetURL;
    NSURL *_relativeURLForExternalData;
    long long _updateType;
    SFUCryptoKey *_encryptionKey;
    TSUZipFileWriter *_zipArchiveWriter;
    NSProgress *_progress;
}

+ (id)newPackageWriterWithPackageType:(long long)arg1 URL:(id)arg2 documentTargetURL:(id)arg3 relativeURLForExternalData:(id)arg4 packageIdentifier:(unsigned char)arg5 documentProperties:(id)arg6 fileFormatVersion:(unsigned long long)arg7 updateType:(long long)arg8 encryptionKey:(id)arg9 originalDocumentPackage:(id)arg10 originalSuppportPackage:(id)arg11 fileCoordinatorDelegate:(id)arg12 progress:(id)arg13 error:(id *)arg14;
@property(readonly, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) TSUZipFileWriter *zipArchiveWriter; // @synthesize zipArchiveWriter=_zipArchiveWriter;
@property(readonly, nonatomic) SFUCryptoKey *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(readonly, nonatomic) long long updateType; // @synthesize updateType=_updateType;
@property(readonly, nonatomic) NSURL *relativeURLForExternalData; // @synthesize relativeURLForExternalData=_relativeURLForExternalData;
@property(readonly, nonatomic) NSURL *documentTargetURL; // @synthesize documentTargetURL=_documentTargetURL;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)newRawDataWriteChannelForRelativePath:(id)arg1 originalSize:(unsigned long long)arg2 originalCRC:(unsigned int)arg3;
- (id)newPackageWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5;
- (id)writtenPackageWithURL:(id)arg1;
- (_Bool)closeAndReturnError:(id *)arg1;
- (void)closeWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (struct CGDataConsumer *)newCGDataConsumerAtRelativePath:(id)arg1;
- (_Bool)writeData:(id)arg1 toRelativePath:(id)arg2 allowEncryption:(_Bool)arg3 error:(id *)arg4;
- (id)copyData:(id)arg1 withReadChannel:(id)arg2 decryptionKey:(id)arg3 size:(unsigned long long)arg4 preferredFilename:(id)arg5 error:(id *)arg6;
- (id)linkOrCopyData:(id)arg1 fromURL:(id)arg2 decryptionKey:(id)arg3 preferredFilename:(id)arg4 error:(id *)arg5;
- (_Bool)addData:(id)arg1 infoMessage:(struct DataInfo *)arg2 saveOperationState:(id)arg3;
- (id)filenameForData:(id)arg1 preferredFilename:(id)arg2;
- (void)copyComponent:(id)arg1 locator:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)newRawComponentWriteChannelWithPackageLocator:(id)arg1 storeOutsideObjectArchive:(_Bool)arg2;
- (id)newComponentWriteChannelWithPackageLocator:(id)arg1 storeOutsideObjectArchive:(_Bool)arg2;
- (void)closeCurrentChannel;
- (unsigned long long)encodedLengthForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(_Bool)arg2;
- (void)setError:(id)arg1;
@property(readonly, nonatomic) TSPPackage *originalPackage;
- (void)dealloc;
- (id)initWithURL:(id)arg1 documentTargetURL:(id)arg2 relativeURLForExternalData:(id)arg3 packageIdentifier:(unsigned char)arg4 documentProperties:(id)arg5 fileFormatVersion:(unsigned long long)arg6 updateType:(long long)arg7 encryptionKey:(id)arg8 originalDocumentPackage:(id)arg9 originalSuppportPackage:(id)arg10 fileCoordinatorDelegate:(id)arg11 progress:(id)arg12 error:(id *)arg13;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageWriterComponentWriteChannel : NSObject <TSPComponentWriteChannel>
{
    TSUZipFileWriter *_archiveWriter;
    _Bool _isClosed;
}

- (void).cxx_destruct;
- (void)close;
- (void)writeData:(id)arg1;
- (id)initWithArchiveWriter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardReadCoordinator : TSPReadCoordinatorBase <TSPReadCoordinator>
{
    TSPPasteboard *_pasteboard;
    TSPObjectContext *_targetContext;
    TSPFinalizeHandlerQueue *_finalizeHandlerQueue;
    unsigned long long _version;
    _Bool _isCrossAppPaste;
    _Bool _isCrossDocumentPaste;
    NSMapTable *_objects;
    NSObject<OS_dispatch_queue> *_dataQueue;
    struct hash_map<long long, TSP::DataInfo, TSP::DataIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::DataInfo>>> _dataInfoMap;
}

@property(readonly, nonatomic) unsigned long long version; // @synthesize version=_version;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)readLazyReference:(id)arg1 object:(id *)arg2 error:(id *)arg3;
- (id)objectForIdentifier:(long long)arg1;
- (_Bool)isCrossAppPaste;
- (_Bool)isCrossDocumentPaste;
- (_Bool)isFromPasteboard;
- (void)reader:(id)arg1 didUnarchiveObject:(id)arg2;
- (void)reader:(id)arg1 didFindExternalRepeatedReference:(id)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 fromParentObject:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)reader:(id)arg1 didFindExternalReferenceToObjectIdentifier:(long long)arg2 componentIdentifier:(long long)arg3 isWeak:(_Bool)arg4 allowUnknownObject:(_Bool)arg5 fromParentObject:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (id)reader:(id)arg1 wantsDataForIdentifier:(long long)arg2;
- (void)didReferenceExternalObject:(id)arg1 withIdentifier:(long long)arg2;
- (id)externalObjectForIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isReadFinished:(_Bool)arg3;
- (id)unarchivedObjectForIdentifier:(long long)arg1 isReadFinished:(_Bool)arg2;
- (id)context;
@property(readonly, nonatomic) _Bool isReadingFromDocument;
- (id)baseObjectUUID;
- (unsigned long long)fileFormatVersion;
- (void)processMetadata:(id)arg1;
- (void)readComponent:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)readRootObjectWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)didUpdateLazyReferenceDelegate:(id)arg1;
- (_Bool)endReading;
- (id)initWithPasteboard:(id)arg1 targetContext:(id)arg2 finalizeHandlerQueue:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseReader : TSPReader <TSPDatabaseUnarchiverDelegate>
{
    NSObject<OS_dispatch_queue> *_databaseQueue;
    TSPDatabase *_database;
    unsigned long long _databaseVersion;
    hash_map_43d567e3 _readIdentifiers;
    NSHashTable *_datas;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (set_6550bfbd *)filterIdentifiers:(const set_6550bfbd *)arg1;
- (id)objectUUIDMap;
- (id)filenameFromOldDataArchive:(const struct DatabaseDataArchive *)arg1;
- (id)dataForOldDataArchive:(const struct DatabaseDataArchive *)arg1;
- (struct Message *)newImageDataMessageForDatabaseObject:(id)arg1;
- (struct Message *)newDataMessageForDatabaseObject:(id)arg1;
- (_Bool)validateObjectIdentifierForObject:(id)arg1;
- (void)didUnarchiveObject:(id)arg1 withUnarchiver:(id)arg2;
- (id)newUnarchiverWithDatabaseObject:(id)arg1;
- (void)unarchiveObjectWithIdentifierAsync:(long long)arg1;
- (void)beginReadingWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3 database:(id)arg4 databaseVersion:(unsigned long long)arg5;
- (id)initWithComponent:(id)arg1 delegate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool didFinishResolvingReferences;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPReadCoordinatorBase : NSObject <TSPReaderDelegate, TSPLazyReferenceDelegate>
{
    NSObject<OS_dispatch_queue> *_lazyReferenceQueue;
    NSHashTable *_lazyReferences;
    NSHashTable *_lazyReferenceCopies;
    NSMutableArray *_lazyReferenceObserverBlocks;
    NSObject<OS_dispatch_queue> *_externalReferenceQueue;
    struct hash_map<long long, TSP::ExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ExternalReferenceInfo>>> _externalReferences;
    struct vector<TSP::RepeatedExternalReferenceCompletionInfo, std::__1::allocator<TSP::RepeatedExternalReferenceCompletionInfo>> _repeatedExternalReferences;
    _Bool _success;
}

@property(readonly, nonatomic) _Bool success; // @synthesize success=_success;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)lazyReference:(id)arg1 didCreateCopy:(id)arg2;
- (void)addLoadObserver:(id)arg1 action:(SEL)arg2 forLazyReference:(id)arg3;
- (_Bool)readLazyReference:(id)arg1 object:(id *)arg2 error:(id *)arg3;
- (id)objectForIdentifier:(long long)arg1;
- (void)reader:(id)arg1 didReadLazyReference:(id)arg2;
- (void)reader:(id)arg1 didFindExternalRepeatedReference:(id)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 fromParentObject:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)reader:(id)arg1 didFindExternalReferenceToObjectIdentifier:(long long)arg2 componentIdentifier:(long long)arg3 isWeak:(_Bool)arg4 allowUnknownObject:(_Bool)arg5 fromParentObject:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (struct ExternalReferenceInfo *)externalReferenceInfoForObjectIdentifier:(long long)arg1 componentIdentifier:(long long)arg2;
- (id)reader:(id)arg1 wantsDataForIdentifier:(long long)arg2;
- (id)lazyReferenceDelegateForReader:(id)arg1;
- (id)objectDelegateForReader:(id)arg1;
- (id)contextForReader:(id)arg1;
@property(readonly, nonatomic) _Bool isReadingFromDocument;
@property(readonly, nonatomic) NSUUID *baseObjectUUID;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (void)didReferenceExternalObject:(id)arg1 withIdentifier:(long long)arg2;
- (id)externalObjectForIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isReadFinished:(_Bool)arg3;
- (id)unarchivedObjectForIdentifier:(long long)arg1 isReadFinished:(_Bool)arg2;
- (id)context;
- (void)didUpdateLazyReferenceDelegate:(id)arg1;
- (void)setLazyReferencesDelegateToObjectContext;
- (_Bool)resolveExternalReferences;
- (void)readDidFail;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCGDataConsumer : NSObject
{
    NSObject<OS_dispatch_queue> *_writeQueue;
    id <TSUStreamWriteChannel> _writeChannel;
    NSError *_error;
}

+ (struct CGDataConsumer *)newCGDataConsumerForWriteChannel:(id)arg1;
- (void).cxx_destruct;
- (void)close;
- (unsigned long long)putBytes:(const void *)arg1 count:(unsigned long long)arg2;
- (id)initWithWriteChannel:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseObject : NSObject
{
    int _classType;
    long long _identifier;
}

+ (id)databaseObjectWithIdentifier:(long long)arg1 classType:(int)arg2 fileState:(id)arg3 packageURL:(id)arg4;
+ (id)databaseObjectWithIdentifier:(long long)arg1 classType:(int)arg2 dataState:(long long)arg3;
@property(readonly, nonatomic) int classType; // @synthesize classType=_classType;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSURL *fileURL;
@property(readonly, nonatomic) NSString *fileState;
@property(readonly, nonatomic) _Bool hasFileState;
@property(readonly, nonatomic) long long dataState;
@property(readonly, nonatomic) _Bool hasDataState;
- (id)initWithIdentifier:(long long)arg1 classType:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseObjectWithDataState : TSPDatabaseObject
{
    long long _dataState;
}

- (id)fileURL;
- (id)fileState;
- (_Bool)hasFileState;
- (long long)dataState;
- (_Bool)hasDataState;
- (id)initWithIdentifier:(long long)arg1 classType:(int)arg2 dataState:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseObjectWithFileState : TSPDatabaseObject
{
    NSString *_fileState;
    NSURL *_packageURL;
}

- (void).cxx_destruct;
- (id)fileURL;
- (id)fileState;
- (_Bool)hasFileState;
- (long long)dataState;
- (_Bool)hasDataState;
- (id)initWithIdentifier:(long long)arg1 classType:(int)arg2 fileState:(id)arg3 packageURL:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseUnarchiver : TSPUnarchiver
{
    unsigned long long _databaseVersion;
}

@property(readonly, nonatomic) unsigned long long preUFFVersion; // @synthesize preUFFVersion=_databaseVersion;
- (_Bool)canValidateReferences;
- (set_6550bfbd *)filterIdentifiers:(const set_6550bfbd *)arg1;
- (id)initWithMessageType:(unsigned int)arg1 message:(auto_ptr_4370f086)arg2 identifier:(long long)arg3 strongReferences:(auto_ptr_c01b630f)arg4 databaseVersion:(unsigned long long)arg5 objectDelegate:(id)arg6 lazyReferenceDelegate:(id)arg7 delegate:(id)arg8 error:(id *)arg9;
- (id)initWithMessageType:(unsigned int)arg1 message:(auto_ptr_4370f086)arg2 identifier:(long long)arg3 strongReferences:(auto_ptr_c01b630f)arg4 fieldInfos:(auto_ptr_40e77785)arg5 version:(unsigned long long)arg6 unknownMessages:(id)arg7 ignoreVersionChecking:(_Bool)arg8 objectDelegate:(id)arg9 lazyReferenceDelegate:(id)arg10 delegate:(id)arg11 error:(id *)arg12;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseReadCoordinator : TSPReadCoordinatorBase <TSPDatabaseReaderDelegate, TSPReadCoordinator>
{
    TSPObjectContext *_context;
    NSUUID *_baseObjectUUID;
    NSURL *_packageURL;
    TSPFinalizeHandlerQueue *_finalizeHandlerQueue;
    TSPDocumentResourceDataProvider *_documentResourceDataProvider;
    TSPDatabase *_database;
    unsigned long long _databaseVersion;
    NSMapTable *_objects;
    NSObject<OS_dispatch_queue> *_dataQueue;
    NSMapTable *_dataDictionary;
    NSObject<OS_dispatch_queue> *_appRelativeDataQueue;
    NSMutableDictionary *_appRelativeDataDictionary;
}

- (void).cxx_destruct;
- (void)reader:(id)arg1 didUnarchiveObject:(id)arg2;
- (void)reader:(id)arg1 didFindExternalRepeatedReference:(id)arg2 isWeak:(_Bool)arg3 allowUnknownObject:(_Bool)arg4 fromParentObject:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)reader:(id)arg1 didFindExternalReferenceToObjectIdentifier:(long long)arg2 componentIdentifier:(long long)arg3 isWeak:(_Bool)arg4 allowUnknownObject:(_Bool)arg5 fromParentObject:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (id)databaseReader:(id)arg1 wantsDataForAppRelativePath:(id)arg2 filename:(id)arg3;
- (id)databaseReader:(id)arg1 wantsDataForDatabaseObjectIdentifier:(long long)arg2 filename:(id)arg3;
- (id)reader:(id)arg1 wantsDataForIdentifier:(long long)arg2;
- (void)didReferenceExternalObject:(id)arg1 withIdentifier:(long long)arg2;
- (id)externalObjectForIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isReadFinished:(_Bool)arg3;
- (id)unarchivedObjectForIdentifier:(long long)arg1 isReadFinished:(_Bool)arg2;
- (id)context;
@property(readonly, nonatomic) _Bool isReadingFromDocument;
@property(readonly, nonatomic) NSUUID *baseObjectUUID;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (id)createUpgradedOldAppBundleResourcePath:(id)arg1;
- (id)dataForAppRelativePath:(id)arg1 filename:(id)arg2;
- (id)documentResourceEntryForAppRelativePath:(id)arg1;
- (id)dataForReadChannel:(id)arg1 filename:(id)arg2 linkURLOrNil:(id)arg3;
- (id)dataForLinkURL:(id)arg1 filename:(id)arg2;
- (id)dataForDatabaseObject:(id)arg1 filename:(id)arg2;
- (void)readComponent:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)didUpdateLazyReferenceDelegate:(id)arg1;
- (void)readRootObjectWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)endReading;
- (id)initWithContext:(id)arg1 packageURL:(id)arg2 finalizeHandlerQueue:(id)arg3 documentResourceDataProvider:(id)arg4 error:(id *)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageWriteCoordinator : NSObject <TSPArchiverManagerDelegate, TSPComponentWriterDelegate, TSPDataArchiver, TSPExternalReferenceDelegate, TSPObjectModifyDelegate>
{
    TSPObjectContext *_context;
    unsigned char _packageIdentifier;
    TSPDocumentRevision *_documentRevision;
    unsigned long long _fileFormatVersion;
    unsigned long long _saveToken;
    long long _preferredPackageType;
    TSPArchiverManager *_archiverManager;
    NSObject<OS_dispatch_group> *_completionGroup;
    struct hash_map<const long long, TSP::ComponentPropertiesSnapshot, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentPropertiesSnapshot>>> _componentPropertiesSnapshot;
    NSObject<OS_dispatch_queue> *_componentQueue;
    struct hash_map<const long long, TSP::WrittenComponentInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenComponentInfo>>> _writtenComponents;
    hash_map_43d567e3 _skippedComponents;
    struct map<unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::queue<TSPComponent *, std::__1::deque<TSPComponent *, std::__1::allocator<TSPComponent *>>>>>> _remainingComponentsQueue;
    TSUPathSet *_packageLocatorPathSet;
    TSPObjectContainer *_objectContainer;
    _Bool _didWriteObjectContainer;
    NSObject<OS_dispatch_queue> *_modifyObjectQueue;
    NSHashTable *_modifiedObjectsDuringWrite;
    _Bool _captureSnapshots;
    NSObject<OS_dispatch_queue> *_externalLazyReferencesQueue;
    TSPComponentExternalReferenceMap *_externalLazyReferencesMap;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    struct hash_map<const long long, TSP::WrittenObjectInfo, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::WrittenObjectInfo>>> _writtenObjects;
    struct queue<TSP::WrittenObjectInfo, std::__1::deque<TSP::WrittenObjectInfo, std::__1::allocator<TSP::WrittenObjectInfo>>> _writtenLazyReferences;
    NSObject<OS_dispatch_queue> *_externalReferenceQueue;
    NSMutableArray *_externalReferenceBlocks;
    NSObject<OS_dispatch_queue> *_metadataQueue;
    unsigned long long _readVersion;
    unsigned long long _writeVersion;
    NSHashTable *_referencedDatas;
    NSMutableArray *_dataFinalizeHandlers;
    _Bool _writeSuccess;
    _Bool _isRecoverableError;
    _Bool _isCancelled;
    _Bool _didWriteRootObject;
    _Bool _didWriteMetadata;
    NSURL *_documentTargetURL;
    NSURL *_relativeURLForExternalData;
    TSPPackageMetadata *_packageMetadata;
}

@property(readonly, nonatomic) TSPPackageMetadata *packageMetadata; // @synthesize packageMetadata=_packageMetadata;
@property(readonly, nonatomic) NSURL *relativeURLForExternalData; // @synthesize relativeURLForExternalData=_relativeURLForExternalData;
- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)componentIdentifierForObjectIdentifier:(long long)arg1 objectOrNil:(id)arg2;
- (id)objectForIdentifier:(long long)arg1;
- (void)addDataFinalizeHandlerForSuccessfulSave:(CDUnknownBlockType)arg1;
- (_Bool)componentWriter:(id)arg1 object:(id)arg2 belongsToLinkedComponent:(id)arg3;
- (void)componentWriter:(id)arg1 locatorForClaimingComponent:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)componentWriterNeedsDocumentRecovery:(id)arg1;
- (void)componentWriter:(id)arg1 wantsComponentOfObject:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)componentWriterWantsDelayedObjects:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)componentWriter:(id)arg1 canSkipArchivingStronglyReferencedObject:(id)arg2 fromComponentRootObject:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)componentWriter:(id)arg1 wantsExplicitComponentRootObjectForObject:(id)arg2 claimingComponent:(id)arg3;
- (void)addDelayedObject:(id)arg1 forComponentRootObject:(id)arg2 claimingComponent:(id)arg3 assertOnFailure:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (id)objectContainerImpl;
- (id)objectContainer;
- (id)explicitComponentRootObjectForObject:(id)arg1 claimingComponent:(id)arg2 isInComponentQueue:(_Bool)arg3;
- (_Bool)didWriteData:(id)arg1;
- (_Bool)didWriteComponent:(id)arg1 wasCopied:(_Bool *)arg2;
- (_Bool)didWriteObject:(id)arg1 claimingComponent:(id *)arg2;
- (id)createPackageMetadataWritingDatasWithPackageWriter:(id)arg1 saveOperationState:(id)arg2;
- (void)didReferenceData:(id)arg1;
- (void)calculateExternalReferences;
- (void)updateExternalReferencesForLinkedComponent:(id)arg1;
- (void)setArchivedObjects:(id)arg1 objectUUIDToIdentifierDictionary:(id)arg2 externalStrongReferences:(id)arg3 externalWeakReferences:(id)arg4 readVersion:(unsigned long long)arg5 writeVersion:(unsigned long long)arg6 dataReferences:(id)arg7 forComponent:(id)arg8;
- (id)componentForObjectIdentifier:(long long)arg1 objectOrNil:(id)arg2;
- (_Bool)isObjectInExternalPackage:(id)arg1 claimingComponent:(id *)arg2;
- (_Bool)isComponentExternal:(id)arg1 wasWritten:(_Bool *)arg2 wasCopied:(_Bool *)arg3;
- (_Bool)shouldEnqueueComponent:(id)arg1;
- (_Bool)shouldLinkComponentOfObject:(id)arg1;
- (_Bool)isComponentPersisted:(id)arg1;
- (_Bool)shouldArchiveComponent:(id)arg1 checkForceArchive:(_Bool)arg2;
- (_Bool)shouldArchiveComponent:(id)arg1;
- (void)copyComponent:(id)arg1 locator:(id)arg2 packageWriter:(id)arg3;
- (void)writeExternalReferences:(id)arg1 andUpdateLazyReferences:(id)arg2 withPackageWriter:(id)arg3 forComponent:(id)arg4 locator:(id)arg5;
- (void)archiveComponent:(id)arg1 locator:(id)arg2 storeOutsideObjectArchive:(_Bool)arg3 rootObject:(id)arg4 withPackageWriter:(id)arg5;
- (void)writeComponent:(id)arg1 rootObjectOrNil:(id)arg2 forceArchive:(_Bool)arg3 withPackageWriter:(id)arg4;
- (void)writeRemainingComponentsWithPackageWriter:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)nextComponentAndRootObjectForComponentWriteWithCompletion:(CDUnknownBlockType)arg1;
- (void)enqueueComponent:(id)arg1 rootObjectOrNil:(id)arg2 forceArchive:(_Bool)arg3;
- (void)enqueueRootObjectImpl:(id)arg1 forceArchive:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)enqueueRootObject:(id)arg1 forceArchive:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)writeRootObjectAndRelatedComponents:(id)arg1 withPackageWriter:(id)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)enumerateWrittenObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)updateObjectContextForSuccessfulSaveWithPackageWriter:(id)arg1;
- (void)writeRootObject:(id)arg1 withPackageWriter:(id)arg2 saveOperationState:(id)arg3 completionQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (unsigned long long)writeRootObject:(id)arg1 withPackageWriter:(id)arg2 saveOperationState:(id)arg3 error:(id *)arg4;
- (void)stopCapturingSnapshots;
- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1 documentRevision:(id)arg2 saveToken:(unsigned long long)arg3 packageIdentifier:(unsigned char)arg4 fileFormatVersion:(unsigned long long)arg5 preferredPackageType:(long long)arg6 packageWriteCoordinator:(id)arg7 captureSnapshots:(_Bool)arg8;
- (id)initWithContext:(id)arg1 documentRevision:(id)arg2 saveToken:(unsigned long long)arg3 packageIdentifier:(unsigned char)arg4 fileFormatVersion:(unsigned long long)arg5 preferredPackageType:(long long)arg6;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSupportPackageWriteCoordinator : TSPPackageWriteCoordinator
{
    TSPPackageWriteCoordinator *_packageWriteCoordinator;
}

- (void).cxx_destruct;
- (long long)componentIdentifierForObjectIdentifier:(long long)arg1 objectOrNil:(id)arg2;
- (id)objectForIdentifier:(long long)arg1;
- (_Bool)componentWriter:(id)arg1 externalPackageDidWriteObject:(id)arg2 claimingComponent:(id *)arg3;
- (void)didReferenceData:(id)arg1;
- (_Bool)isObjectInExternalPackage:(id)arg1 claimingComponent:(id *)arg2;
- (_Bool)isComponentExternal:(id)arg1 wasWritten:(_Bool *)arg2 wasCopied:(_Bool *)arg3;
- (_Bool)shouldEnqueueComponent:(id)arg1;
- (id)initWithContext:(id)arg1 documentRevision:(id)arg2 saveToken:(unsigned long long)arg3 fileFormatVersion:(unsigned long long)arg4 packageWriteCoordinator:(id)arg5;
- (id)initWithContext:(id)arg1 documentRevision:(id)arg2 saveToken:(unsigned long long)arg3 packageIdentifier:(unsigned char)arg4 fileFormatVersion:(unsigned long long)arg5 preferredPackageType:(long long)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentWriter : NSObject
{
    TSPComponent *_component;
    NSString *_locator;
    TSPObject *_rootObject;
    id <TSPComponentWriterDelegate> _delegate;
    long long _mode;
    unsigned char _packageIdentifier;
    id <TSPComponentWriteChannel> _writeChannel;
    TSPArchiverManager *_archiverManager;
    NSObject<OS_dispatch_queue> *_globalConcurrentQueue;
    NSObject<OS_dispatch_semaphore> *_delegateSemaphore;
    NSHashTable *_archivedObjects;
    NSMapTable *_archivedObjectsDictionary;
    NSMutableDictionary *_objectUUIDToIdentifierDictionary;
    struct vector<TSP::ObjectStackEntry, std::__1::allocator<TSP::ObjectStackEntry>> _objectStack;
    NSObject<OS_dispatch_group> *_writeGroup;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSHashTable *_weakReferences;
    NSHashTable *_lazyReferences;
    NSHashTable *_dataReferences;
    unsigned long long _readVersion;
    unsigned long long _writeVersion;
    NSHashTable *_analyzedCommandToModelReferences;
    NSHashTable *_commandToModelReferences;
    NSHashTable *_newCommandToModelReferences;
    NSHashTable *_indirectCommandToModelExternalReferences;
    NSHashTable *_externalReferences;
    struct {
        unsigned int success:1;
        unsigned int isErrorRecoverable:1;
        unsigned int delegateRespondsToNeedsDocumentRecovery:1;
        unsigned int delegateRespondsToLocatorForClaimingComponent:1;
        unsigned int delegateRespondsToObjectBelongsToLinkedComponent:1;
        unsigned int delegateRespondsToExternalPackageDidWriteObject:1;
        unsigned int delegateRespondsToShouldDelayWritingObject:1;
    } _flags;
}

@property(readonly, nonatomic) unsigned long long writeVersion; // @synthesize writeVersion=_writeVersion;
@property(readonly, nonatomic) unsigned long long readVersion; // @synthesize readVersion=_readVersion;
@property(readonly, nonatomic) TSPComponent *component; // @synthesize component=_component;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)analyzeCommandToModelReference:(id)arg1 isAnalyzingExternalComponent:(_Bool)arg2 archiver:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)commandToModelReferencesToWrite;
- (void)addCommandToModelReferences:(id)arg1 parentObject:(id)arg2;
- (void)validateExplicitComponentOwnershipForObject:(id)arg1 parentObject:(id)arg2;
- (void)validateAmbiguousObjectOwnershipForObject:(id)arg1 parentObject:(id)arg2 claimingComponent:(id)arg3 claimingPackageIdentifier:(unsigned char)arg4 claimingComponentWillBeLinked:(_Bool)arg5;
- (_Bool)validateObjectContextForObject:(id)arg1;
- (_Bool)shouldDelayWritingObject:(id)arg1;
- (_Bool)isObjectExternalBecauseItAlreadyBelongsToAnotherComponent:(id)arg1 parentObject:(id)arg2 claimingComponent:(id *)arg3 claimingPackageIdentifier:(unsigned char *)arg4 claimingComponentWillBeLinked:(_Bool *)arg5;
- (_Bool)isObjectExternal:(id)arg1 parentObject:(id)arg2 validateAmbiguousObjectOwnership:(_Bool)arg3 claimingComponent:(id *)arg4 isOwnedByDifferentPackage:(_Bool *)arg5;
- (_Bool)canSkipArchivingStronglyReferencedObject:(id)arg1 fromComponentRootObject:(id)arg2;
- (void)writeArchiver:(id)arg1;
- (void)writeObject:(id)arg1 archiver:(id)arg2 parentObject:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)writeObjects:(id)arg1 parentObject:(id)arg2 isCommandToModelReference:(_Bool)arg3 isAnalyzingExternalComponent:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)shouldAnalyzeCommandToModelReference:(id)arg1 isAnalyzingExternalComponent:(_Bool)arg2;
- (_Bool)shouldWriteObject:(id)arg1;
- (void)writeWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithComponent:(id)arg1 locator:(id)arg2 rootObject:(id)arg3 delegate:(id)arg4 mode:(long long)arg5 packageIdentifier:(unsigned char)arg6 writeChannel:(id)arg7 archiverManager:(id)arg8;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPArchiverManager : NSObject
{
    id <TSPArchiverManagerDelegate> _delegate;
    Class _archiverClass;
    NSMapTable *_archivers;
    NSObject<OS_dispatch_queue> *_archiversHighQueue;
    NSObject<OS_dispatch_queue> *_archiversLowQueue;
    NSObject<OS_dispatch_queue> *_archiveHighQueue;
    NSObject<OS_dispatch_queue> *_archiveDefaultQueue;
    NSObject<OS_dispatch_queue> *_archiveLowQueue;
    NSObject<OS_dispatch_queue> *_archiveCompletionQueue;
    struct {
        unsigned int isStopped:1;
        unsigned int delegateRespondsToDidCreateArchiver:1;
        unsigned int delegateRespondsToShouldDelayArchivingObject:1;
    } _flags;
    TSPDescriptionGenerator *_descriptionGenerator;
}

@property(retain, nonatomic) TSPDescriptionGenerator *descriptionGenerator; // @synthesize descriptionGenerator=_descriptionGenerator;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stop;
- (void)archiveWithArchiver:(id)arg1 queue:(id)arg2 archiveCompletion:(CDUnknownBlockType)arg3;
- (id)archiverForObject:(id)arg1 archiveQueue:(id)arg2 archiveCompletion:(CDUnknownBlockType)arg3;
- (void)archiveObjectWithLowPriority:(id)arg1;
- (void)archiveObjectWithHighPriority:(id)arg1;
- (void)archiverForObject:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 archiverClass:(Class)arg2;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardWriteCoordinator : NSObject <TSPArchiverManagerDelegate, TSPComponentWriterDelegate, TSPDataArchiver, TSPProxyObjectManager, TSPObjectModifyDelegate>
{
    TSPObjectContext *_context;
    id <TSPProxyObjectManager> _proxyManager;
    TSPArchiverManager *_archiverManager;
    NSObject<OS_dispatch_queue> *_delayedObjectsQueue;
    NSHashTable *_delayedObjects;
    NSMutableArray *_dataFinalizeHandlers;
}

@property(nonatomic) __weak id <TSPProxyObjectManager> proxyManager; // @synthesize proxyManager=_proxyManager;
- (void).cxx_destruct;
- (id)proxyForReferencedObject:(id)arg1;
- (void)addDataFinalizeHandlerForSuccessfulSave:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSURL *relativeURLForExternalData;
- (_Bool)componentWriter:(id)arg1 shouldDelayWritingObject:(id)arg2;
- (void)componentWriter:(id)arg1 wantsComponentOfObject:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)componentWriterWantsDelayedObjects:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)componentWriter:(id)arg1 canSkipArchivingStronglyReferencedObject:(id)arg2 fromComponentRootObject:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)componentWriter:(id)arg1 wantsExplicitComponentRootObjectForObject:(id)arg2 claimingComponent:(id)arg3;
- (_Bool)archiverManager:(id)arg1 shouldDelayArchivingObject:(id)arg2;
- (void)archiverManager:(id)arg1 didCreateArchiver:(id)arg2;
- (void)delayArchivingOfObject:(id)arg1;
- (_Bool)shouldDelayArchivingObject:(id)arg1;
- (id)createPackageMetadataWithContext:(id)arg1 writingDatas:(id)arg2 toDictionary:(id)arg3;
- (void)writePasteboardObject:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardMetadata : TSPObject
{
    struct PasteboardMetadata _message;
    _Bool _isCrossAppPaste;
    _Bool _isCrossDocumentPaste;
}

+ (id)appNameAndVersion;
+ (id)bundleIdentifier;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste; // @synthesize isCrossDocumentPaste=_isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isCrossAppPaste; // @synthesize isCrossAppPaste=_isCrossAppPaste;
- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)tsp_identifier;
- (struct PasteboardMetadata *)message;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPFileManager : NSObject
{
}

+ (_Bool)copyReadChannel:(id)arg1 size:(unsigned long long)arg2 toWriteChannel:(id)arg3 error:(id *)arg4;
+ (id)ioQueue;
+ (_Bool)transcodeReadChannel:(id)arg1 decryptionKey:(id)arg2 size:(unsigned long long)arg3 toWriteChannel:(id)arg4 encryptionKey:(id)arg5 error:(id *)arg6;
+ (_Bool)copyReadChannel:(id)arg1 decryptionKey:(id)arg2 size:(unsigned long long)arg3 toWriteChannel:(id)arg4 encryptionKey:(id)arg5 error:(id *)arg6;
+ (_Bool)linkOrCopyURL:(id)arg1 decryptionKey:(id)arg2 toURL:(id)arg3 encryptionKey:(id)arg4 error:(id *)arg5;
+ (_Bool)linkOrCopyURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (_Bool)linkFileAtPath:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
+ (_Bool)linkFileAtURL:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 sourcePath:(id)arg3 targetPath:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageConverter : NSObject
{
    id <TSPFileCoordinatorDelegate> _fileCoordinatorDelegate;
    _Bool _isCancelled;
    TSPPackage *_package;
    NSURL *_URL;
}

+ (id)newPackageConverterWithURL:(id)arg1;
+ (_Bool)convertDocumentAtURL:(id)arg1 toPackageType:(long long)arg2 error:(id *)arg3;
@property(readonly, nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) TSPPackage *package; // @synthesize package=_package;
- (void).cxx_destruct;
- (id)newWriteChannelAtPath:(id)arg1 size:(unsigned long long)arg2 CRC:(unsigned int)arg3 packageWriter:(id)arg4 error:(id *)arg5;
- (_Bool)enumeratePackageEntriesWithZipArchive:(id)arg1 accessor:(CDUnknownBlockType)arg2;
- (unsigned long long)progressTotalUnitCountWithZipArchive:(id)arg1;
- (_Bool)isObjectArchivePath:(id)arg1;
- (_Bool)isDocumentPropertiesPath:(id)arg1;
- (_Bool)writeToURL:(id)arg1 packageType:(long long)arg2 error:(id *)arg3;
- (_Bool)checkPassword:(id)arg1;
@property(readonly, nonatomic) _Bool isPasswordProtected;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, nonatomic) long long packageType;
- (id)initWithURL:(id)arg1 package:(id)arg2 fileCoordinatorDelegate:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDirectoryPackageConverter : TSPPackageConverter
{
}

- (_Bool)isValid;
- (_Bool)enumeratePackageEntriesWithZipArchive:(id)arg1 accessor:(CDUnknownBlockType)arg2;
- (unsigned long long)progressTotalUnitCountWithZipArchive:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPFilePackageConverter : TSPPackageConverter
{
}

- (_Bool)isValid;
- (id)newWriteChannelAtPath:(id)arg1 size:(unsigned long long)arg2 CRC:(unsigned int)arg3 packageWriter:(id)arg4 error:(id *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSPPackageConverterFileCoordinatorDelegate : NSObject <TSPFileCoordinatorDelegate>
{
    NSURL *_URL;
}

- (void).cxx_destruct;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (id)initWithURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPComponent : NSObject <NSDiscardableContent>
{
    int _accessCount;
    id <TSPComponentDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_accessQueue;
    long long _identifier;
    NSString *_preferredLocator;
    NSString *_locator;
    unsigned long long _readVersion;
    unsigned long long _writeVersion;
    unsigned long long _saveToken;
    TSPObject *_strongRootObject;
    TSPObject *_weakRootObject;
    NSHashTable *_writtenObjects;
    TSPComponentExternalReferenceMap *_externalReferenceMap;
    NSMutableSet *_dataReferences;
    struct {
        unsigned int usesDelayedArchiving:1;
        unsigned int modified:1;
        unsigned int persisted:1;
        unsigned int isStoredOutsideObjectArchive:1;
        unsigned int packageIdentifier:2;
        unsigned int discarded:1;
    } _flags;
    NSDictionary *_objectUUIDToIdentifierDictionary;
    unsigned long long _encodedLength;
}

@property(readonly, nonatomic) unsigned long long encodedLength; // @synthesize encodedLength=_encodedLength;
@property(readonly, nonatomic) NSDictionary *objectUUIDToIdentifierDictionary; // @synthesize objectUUIDToIdentifierDictionary=_objectUUIDToIdentifierDictionary;
@property(readonly, nonatomic) NSString *preferredLocator; // @synthesize preferredLocator=_preferredLocator;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) unsigned long long saveToken; // @synthesize saveToken=_saveToken;
@property(readonly, nonatomic) unsigned long long writeVersion; // @synthesize writeVersion=_writeVersion;
@property(readonly, nonatomic) unsigned long long readVersion; // @synthesize readVersion=_readVersion;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)enumerateDataReferences:(CDUnknownBlockType)arg1;
- (id)newUpdatedExternalReferenceMapUsingDelegate:(id)arg1;
- (_Bool)addExternalReferenceToObjectOrLazyReference:(id)arg1 isWeak:(_Bool)arg2 externalReferenceMap:(id)arg3 delegate:(id)arg4;
- (id)newExternalReferenceMapWithStrongReferences:(id)arg1 weakReferences:(id)arg2 delegate:(id)arg3;
- (struct ComponentExternalReferenceInfo)externalReferenceInfoForObjectIdentifier:(long long)arg1;
- (void)enumerateExternalReferences:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isTransientComponent;
@property(readonly) _Bool needsArchiving;
- (_Bool)needsArchivingImpl;
@property(readonly) _Bool persisted;
- (void)markAsDiscarded;
- (void)willDiscardComponent;
- (void)setPackageIdentifier:(unsigned char)arg1 preferredLocator:(id)arg2 locator:(id)arg3 isStoredOutsideObjectArchive:(_Bool)arg4 rootObjectOrNil:(id)arg5 archivedObjects:(id)arg6 externalReferenceMap:(id)arg7 dataReferences:(id)arg8 readVersion:(unsigned long long)arg9 writeVersion:(unsigned long long)arg10 objectUUIDToIdentifierDictionary:(id)arg11 saveToken:(unsigned long long)arg12 encodedLength:(unsigned long long)arg13 wasCopied:(_Bool)arg14 wasModifiedDuringWrite:(_Bool)arg15;
- (void)didReadObjects:(id)arg1;
- (void)setArchivedObjectsImpl:(id)arg1;
- (void)setModifiedImpl:(_Bool)arg1 forObject:(id)arg2;
- (void)setModified:(_Bool)arg1 forObject:(id)arg2 isDocumentUpgrade:(_Bool)arg3;
- (void)setModified:(_Bool)arg1 forObject:(id)arg2;
@property(readonly) _Bool modified;
@property(readonly) unsigned char packageIdentifier;
@property(readonly, nonatomic) _Bool isStoredOutsideObjectArchive;
- (void)setLocator:(id)arg1;
@property(readonly, nonatomic) NSString *locator;
- (_Bool)isContentDiscarded;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (void)discardContentIfPossible;
@property(retain) TSPObject *rootObject;
- (_Bool)shouldKeepStrongObjectImpl;
- (_Bool)shouldForceCaching;
- (_Bool)isCachingEnabled;
- (id)initWithDelegate:(id)arg1 message:(const struct ComponentInfo *)arg2 packageIdentifier:(unsigned char)arg3 encodedLength:(unsigned long long)arg4;
- (id)initWithDelegate:(id)arg1 rootObject:(id)arg2;
- (id)initWithDelegate:(id)arg1 identifier:(long long)arg2 preferredLocator:(id)arg3 packageIdentifier:(unsigned char)arg4 isStoredOutsideObjectArchive:(_Bool)arg5 encodedLength:(unsigned long long)arg6;
- (id)init;
- (void)saveToMessage:(struct ComponentInfo *)arg1 saveToken:(unsigned long long)arg2 writtenComponentInfo:(const struct WrittenComponentInfo *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSPFilePackage : TSPPackage
{
    NSObject<OS_dispatch_queue> *_bookmarkDataQueue;
    TSUTemporaryDirectory *_dataDirectory;
    NSMutableDictionary *_dataURLMap;
}

+ (unsigned long long)zipArchiveOptions;
+ (id)zipArchiveURLFromPackageURL:(id)arg1;
+ (_Bool)isFilePackageFormatURL:(id)arg1;
+ (_Bool)isFilePackageFormatZipArchive:(id)arg1;
- (void).cxx_destruct;
- (void)prepareForDocumentReplacementWithSuccess:(_Bool)arg1 forSafeSave:(_Bool)arg2 originalURL:(id)arg3;
- (id)newDocumentPropertiesWithURL:(id)arg1 zipProvider:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (_Bool)hasDataAtRelativePath:(id)arg1;
- (id)newRawDataReadChannelAtRelativePath:(id)arg1;
- (_Bool)bookmarkDataNeedsWriteForDataStorage:(id)arg1 options:(unsigned long long)arg2;
- (id)bookmarkDataForDataStorage:(id)arg1 options:(unsigned long long)arg2;
- (id)newDataStorageAtRelativePath:(id)arg1;
- (long long)packageType;
- (id)initWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5 isLazyLoading:(_Bool)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentManager : NSObject <TSPComponentDelegate, TSPObjectModifyDelegate>
{
    int _ignoreCachedObjectEvictionCount;
    _Bool _isTornDown;
    NSObject<OS_dispatch_queue> *_componentQueue;
    NSHashTable *_components;
    NSMapTable *_componentDictionary;
    NSCache *_componentCache;
    TSPComponent *_viewStateComponent;
    NSObject<OS_dispatch_queue> *_readFlushedComponentQueue;
    TSPObjectContext *_context;
    TSPComponent *_packageMetadataComponent;
}

@property(readonly, nonatomic) TSPComponent *packageMetadataComponent; // @synthesize packageMetadataComponent=_packageMetadataComponent;
@property(readonly, nonatomic) __weak TSPObjectContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)didModifyFlushedComponent:(id)arg1 forObject:(id)arg2;
- (void)flushComponent:(id)arg1 isDiscardingContent:(_Bool)arg2;
- (void)cacheComponent:(id)arg1 isDiscardingContent:(_Bool)arg2;
- (id)objectForIdentifier:(long long)arg1;
- (void)evictAllCachedObjects;
- (_Bool)shouldKeepAllCachedObjectsInMemory;
- (void)endIgnoringCachedObjectEviction;
- (void)beginIgnoringCachedObjectEviction;
- (void)traverseComponentTreeFromRoot:(id)arg1 accessor:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isSupportComponentTreeModified;
@property(readonly, nonatomic) _Bool isDocumentComponentTreeModified;
- (void)discardOrphanedComponents;
- (id)rootComponentForPackageIdentifier:(unsigned char)arg1;
- (void)resumeLoadingModifiedFlushedComponents;
- (void)suspendLoadingModifiedFlushedComponentsAndWait;
- (void)dirtyAllComponentsForDocumentUpgradeInPackage:(unsigned char)arg1;
- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;
- (void)componentForRootObjectOfLazyReference:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)componentForRootObjectOfLazyReference:(id)arg1;
- (id)componentForRootObjectOfLazyReferenceImpl:(id)arg1;
- (id)componentForRootObjectIdentifier:(long long)arg1;
- (void)componentForRootObjectIdentifier:(long long)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)retrieveOrCreateComponentForRootObject:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)enumerateComponents:(CDUnknownBlockType)arg1;
@property(retain) TSPComponent *viewStateComponent;
@property(readonly, nonatomic) TSPComponent *supportObjectContainerComponent;
@property(readonly, nonatomic) TSPComponent *supportComponent;
@property(readonly, nonatomic) TSPComponent *documentObjectContainerComponent;
@property(readonly, nonatomic) TSPComponent *documentComponent;
- (id)supportComponentImpl;
- (id)documentComponentImpl;
- (id)rootComponentWithIdentifierImpl:(long long)arg1 locator:(id)arg2 packageIdentifier:(unsigned char)arg3;
- (void)loadFromPackage:(id)arg1 metadata:(id)arg2;
- (_Bool)isActive;
- (void)tearDown;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPComponentExternalReferenceMap : NSObject <NSCopying>
{
    struct hash_map<const long long, TSP::ComponentExternalReferenceInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ComponentExternalReferenceInfo>>> *_map;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addExternalReferenceToObjectIdentifier:(long long)arg1 componentIdentifier:(long long)arg2 isWeak:(_Bool)arg3;
- (struct ComponentExternalReferenceInfo)externalReferenceInfoForObjectIdentifier:(long long)arg1;
- (void)enumerateExternalReferences:(CDUnknownBlockType)arg1;
- (void)saveToMessage:(RepeatedPtrField_1f1a6efb *)arg1;
- (void)dealloc;
- (id)initFromMessage:(const RepeatedPtrField_1f1a6efb *)arg1;
- (id)initWithMapSize:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseDataObject : TSPObject
{
    TSPData *_data;
}

@property(readonly, nonatomic) TSPData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPDirectoryPackageDataWriter : NSObject <TSPPackageDataWriter>
{
    NSURL *_URL;
}

- (void).cxx_destruct;
- (struct CGDataConsumer *)newCGDataConsumerAtRelativePath:(id)arg1;
- (_Bool)writeData:(id)arg1 toRelativePath:(id)arg2 allowEncryption:(_Bool)arg3 error:(id *)arg4;
- (id)targetDataURLForPath:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPSupportManager : NSObject <NSFilePresenter, TSPFileCoordinatorDelegate>
{
    TSPObjectContext *_context;
    NSOperationQueue *_presentedItemQueue;
    NSRecursiveLock *_presentedSupportURLLock;
    NSURL *_presentedSupportURL;
    TSPSupportSaveOperationState *_saveOperationState;
    NSObject<OS_dispatch_group> *_pendingEndSaveGroup;
}

+ (void)garbageCollectDocumentSupportWithKnownDocumentUUIDs:(id)arg1 delegate:(id)arg2;
+ (id)supportBundleURLForUUID:(id)arg1 delegate:(id)arg2;
+ (id)supportDirectoryURLWithDelegate:(id)arg1;
+ (id)defaultSupportDirectoryURL;
+ (_Bool)isSupportAtURLValid:(id)arg1 documentUUID:(id)arg2 versionUUID:(id)arg3 documentProperties:(id *)arg4;
- (void).cxx_destruct;
- (_Bool)didUpdateDocumentUUIDWithOriginalDocumentProperties:(id)arg1 newDocumentProperties:(id)arg2 preserveOriginalDocumentSupport:(_Bool)arg3 preserveShareUUID:(_Bool)arg4 originalURL:(id)arg5 newURL:(id *)arg6 error:(id *)arg7;
- (_Bool)copyOrMoveSupportAtURL:(id)arg1 originalDocumentProperties:(id)arg2 toURL:(id)arg3 isCopying:(_Bool)arg4 newDocumentProperties:(id)arg5 error:(id *)arg6;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)relinquishPresentedItemToWriter:(CDUnknownBlockType)arg1;
- (void)presentedItemDidChange;
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
- (void)presentedItemDidMoveToURL:(id)arg1;
@property(readonly, copy) NSURL *presentedItemURL;
@property(copy) NSURL *presentedSupportURL;
- (void)updatePresentedItemURL:(id)arg1;
- (void)removeFilePresenter;
- (void)performReadUsingAccessor:(CDUnknownBlockType)arg1;
- (id)supportURLWithDocumentUUID:(id)arg1;
- (_Bool)endSaveWithSuccess:(_Bool)arg1 packageWriter:(id)arg2 newURL:(id *)arg3 writtenPackage:(id *)arg4;
- (_Bool)writeSupportForDocumentUUID:(id)arg1 error:(id *)arg2 writer:(CDUnknownBlockType)arg3;
- (void)beginSaveWithDocumentUUID:(id)arg1 versionUUID:(id)arg2 originalURL:(id)arg3 updateType:(long long)arg4;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPSupportSaveOperationState : NSObject
{
    _Bool _didWriteSupportBundleSuccessfuly;
    _Bool _shouldLeavePendingEndSave;
    NSUUID *_originalDocumentUUID;
    NSUUID *_originalVersionUUID;
    NSURL *_originalURL;
    long long _updateType;
    TSUSafeSaveAssistant *_safeSaveAssistant;
    NSUUID *_documentUUID;
    NSURL *_URL;
}

@property(nonatomic) _Bool shouldLeavePendingEndSave; // @synthesize shouldLeavePendingEndSave=_shouldLeavePendingEndSave;
@property(nonatomic) _Bool didWriteSupportBundleSuccessfuly; // @synthesize didWriteSupportBundleSuccessfuly=_didWriteSupportBundleSuccessfuly;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(copy, nonatomic) NSUUID *documentUUID; // @synthesize documentUUID=_documentUUID;
@property(retain, nonatomic) TSUSafeSaveAssistant *safeSaveAssistant; // @synthesize safeSaveAssistant=_safeSaveAssistant;
@property(readonly, nonatomic) long long updateType; // @synthesize updateType=_updateType;
@property(readonly, nonatomic) NSURL *originalURL; // @synthesize originalURL=_originalURL;
@property(readonly, nonatomic) NSUUID *originalVersionUUID; // @synthesize originalVersionUUID=_originalVersionUUID;
@property(readonly, nonatomic) NSUUID *originalDocumentUUID; // @synthesize originalDocumentUUID=_originalDocumentUUID;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool preserveDocumentUUID;
@property(readonly, nonatomic) _Bool shouldUpdate;
- (id)initWithOriginalDocumentUUID:(id)arg1 originalVersionUUID:(id)arg2 originalURL:(id)arg3 updateType:(long long)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentRevision : NSObject <NSCopying>
{
    unsigned long long _sequence;
    NSString *_identifier;
}

+ (id)revisionWithRevisionString:(id)arg1;
+ (id)revisionWithSequence:(unsigned long long)arg1 identifier:(id)arg2;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) unsigned long long sequence; // @synthesize sequence=_sequence;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)nextRevisionWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *revisionString;
- (id)initWithRevisionString:(id)arg1;
- (id)initWithSequence:(unsigned long long)arg1 identifier:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentProperties : NSObject <NSCopying>
{
    NSUUID *_versionUUID;
    NSUUID *_nextVersionUUID;
    NSUUID *_shareUUID;
    NSUUID *_documentUUID;
    unsigned long long _fileFormatVersion;
    TSPDocumentRevision *_revision;
    NSDictionary *_additionalProperties;
}

+ (id)shareIdentifierRelativePath;
+ (id)documentPropertiesRelativePath;
+ (_Bool)documentIsEncryptedAtURL:(id)arg1;
+ (id)documentUUIDAtURL:(id)arg1;
@property(copy, nonatomic) NSDictionary *additionalProperties; // @synthesize additionalProperties=_additionalProperties;
@property(copy, nonatomic) TSPDocumentRevision *revision; // @synthesize revision=_revision;
@property(nonatomic) unsigned long long fileFormatVersion; // @synthesize fileFormatVersion=_fileFormatVersion;
@property(copy, nonatomic) NSUUID *documentUUID; // @synthesize documentUUID=_documentUUID;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSUUID *shareUUID;
- (void)updateVersionUUID;
@property(readonly, nonatomic) NSUUID *nextVersionUUID;
@property(readonly, nonatomic) NSUUID *versionUUID;
- (void)updateDocumentAndShareUUID;
- (void)updateDocumentUUID;
- (_Bool)writeToPropertiesURL:(id)arg1 error:(id *)arg2;
- (id)encodedPropertyListWithError:(id *)arg1;
- (_Bool)writeToDocumentBundleURL:(id)arg1 error:(id *)arg2;
- (_Bool)writeToPackageWriter:(id)arg1 error:(id *)arg2;
- (_Bool)writeToDocumentURL:(id)arg1 writerBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)UUIDFromDocumentProperties:(id)arg1 key:(id)arg2;
- (void)readDocumentPropertiesFromDictionary:(id)arg1;
- (id)initWithPropertiesURL:(id)arg1 error:(id *)arg2;
- (id)initWithFilePackageURL:(id)arg1 zipArchive:(id)arg2 allowMissingPropertyList:(_Bool)arg3 error:(id *)arg4;
- (id)initWithDocumentFileURL:(id)arg1 allowMissingPropertyList:(_Bool)arg2 error:(id *)arg3;
- (id)initWithDocumentBundleURL:(id)arg1 allowMissingPropertyList:(_Bool)arg2 error:(id *)arg3;
- (id)initWithDocumentURL:(id)arg1 allowMissingPropertyList:(_Bool)arg2 error:(id *)arg3;
- (id)initWithDocumentURL:(id)arg1 error:(id *)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownMessage : NSObject
{
    struct MessageInfo _messageInfo;
    NSObject<OS_dispatch_data> *_messageData;
    TSPLazyReferenceArray *_objects;
    NSArray *_datas;
}

@property(retain, nonatomic) NSArray *datas; // @synthesize datas=_datas;
@property(retain, nonatomic) TSPLazyReferenceArray *objects; // @synthesize objects=_objects;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *messageData; // @synthesize messageData=_messageData;
- (id).cxx_construct;
- (void).cxx_destruct;
- (const struct MessageInfo *)messageInfo;
- (id)initWithMessageInfo:(const struct MessageInfo *)arg1 data:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownObject : TSPObject
{
    shared_ptr_bafc106c _archiveInfo;
    NSObject<OS_dispatch_data> *_messagesData;
    NSString *_packageLocator;
    TSPLazyReferenceArray *_objects;
    NSArray *_datas;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *serializedData;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (void)willModifyForUpgrade;
- (void)willModify;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownObjectUnarchiver : TSPUnarchiver
{
    shared_ptr_bafc106c _archiveInfo;
    NSObject<OS_dispatch_data> *_messagesData;
    NSString *_packageLocator;
}

@property(readonly, nonatomic) NSString *packageLocator; // @synthesize packageLocator=_packageLocator;
@property(readonly, nonatomic) NSObject<OS_dispatch_data> *messagesData; // @synthesize messagesData=_messagesData;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)canValidateReferences;
- (shared_ptr_bafc106c)archiveInfo;
- (const struct Message *)message;
- (id)initWithIdentifier:(long long)arg1 archiveInfo:(shared_ptr_bafc106c)arg2 messagesData:(id)arg3 packageLocator:(id)arg4 objectDelegate:(id)arg5 lazyReferenceDelegate:(id)arg6 delegate:(id)arg7 error:(id *)arg8;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownContent : NSObject
{
    NSArray *_messages;
    NSArray *_ignoreAndPreserveFields;
    NSArray *_ignoreAndDropFields;
    NSArray *_savedIgnoreAndPreserveFields;
    NSArray *_savedIgnoreAndDropFields;
}

+ (id)unknownContentWithMessage:(struct Message *)arg1 fieldInfos:(struct FieldInfoTree *)arg2 unknownMessages:(id)arg3 foundMustUnderstandFields:(_Bool *)arg4;
@property(readonly, nonatomic) NSArray *messages; // @synthesize messages=_messages;
- (void).cxx_destruct;
- (void)willModifyObject;
- (void)updateMessageInfo:(struct MessageInfo *)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (id)initWithMessages:(id)arg1 ignoreAndPreserveFields:(id)arg2 ignoreAndDropFields:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownField : NSObject
{
    shared_ptr_b9bbcad9 _fieldSet;
    struct FieldInfo _fieldInfo;
}

+ (id)unknownFieldWithFieldSet:(shared_ptr_b9bbcad9 *)arg1 fieldInfo:(const struct FieldInfo *)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)updateMessageInfo:(struct MessageInfo *)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;
- (void)mergeToUnknownFieldSet:(struct UnknownFieldSet *)arg1;
- (const struct FieldInfo *)fieldInfo;
- (id)initWithFieldSet:(shared_ptr_b9bbcad9 *)arg1 fieldInfo:(const struct FieldInfo *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldObjectReference : TSPUnknownField
{
    TSPLazyReferenceArray *_objects;
}

- (void).cxx_destruct;
- (id)debugDescription;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldDataReference : TSPUnknownField
{
    NSArray *_datas;
}

- (void).cxx_destruct;
- (id)debugDescription;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldMessage : TSPUnknownField
{
    TSPLazyReferenceArray *_objects;
    NSArray *_datas;
}

- (void).cxx_destruct;
- (id)debugDescription;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldTree : NSObject
{
    TSPUnknownFieldTreeNodeWithChildren *_rootNode;
}

- (void).cxx_destruct;
- (void)saveToArchiver:(id)arg1;
- (_Bool)addUnknownField:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldTreeNode : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldTreeNodeWithUnknownField : TSPUnknownFieldTreeNode
{
    TSPUnknownField *_unknownField;
}

@property(retain, nonatomic) TSPUnknownField *unknownField; // @synthesize unknownField=_unknownField;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface TSPUnknownFieldTreeNodeWithChildren : TSPUnknownFieldTreeNode
{
    struct map<int, TSPUnknownFieldTreeNode *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, TSPUnknownFieldTreeNode *>>> _children;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchiver:(id)arg1 message:(struct Message *)arg2;
- (_Bool)addChildNode:(id)arg1 forFieldNumber:(int)arg2;
- (id)childNodeForFieldNumber:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPReadOnlyFileDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
}

- (void).cxx_destruct;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (_Bool)readOnly;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)initWithURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPReadOnlyMemoryDataStorage : NSObject <TSPDataStorage>
{
    NSData *_NSData;
}

- (void).cxx_destruct;
- (_Bool)isInPackage:(id)arg1;
@property(readonly, nonatomic) _Bool readOnly;
- (void)performIOChannelReadWithAccessor:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) unsigned long long encodedLength;
- (id)filenameForPreferredFilename:(id)arg1;
@property(readonly, nonatomic) _Bool isMissingData;
@property(readonly, nonatomic) _Bool isReadable;
@property(readonly, nonatomic) unsigned char packageIdentifier;
@property(readonly, nonatomic) NSString *packageLocator;
@property(readonly, nonatomic) NSString *documentResourceLocator;
- (_Bool)writeData:(id)arg1 toPackageWriter:(id)arg2 preferredFilename:(id)arg3 filename:(id *)arg4 didCopyDataToPackage:(_Bool *)arg5 isMissingData:(_Bool *)arg6;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 usingResourceLoaderWithContentTypeUTI:(id)arg2;
- (id)AVAssetWithOptions:(id)arg1 contentTypeUTI:(id)arg2;
- (id)NSDataWithOptions:(unsigned long long)arg1;
- (struct CGImageSource *)newCGImageSource;
- (struct CGDataProvider *)newCGDataProvider;
- (id)bookmarkDataWithOptions:(unsigned long long)arg1;
- (id)initWithNSData:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) unsigned int CRC;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool gilligan_isRemote;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPReader : NSObject <TSPObjectDelegate, TSPUnarchiverDelegate>
{
    _Bool _hasReadFailure;
    id <TSPReaderDelegate> _delegate;
    TSPComponent *_component;
    NSDictionary *_objectIdentifierToUUIDDictionary;
    TSPFinalizeHandlerQueue *_finalizeHandlerQueue;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSObject<OS_dispatch_queue> *_errorQueue;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_unarchiveQueue;
    NSObject<OS_dispatch_queue> *_objectsQueue;
    struct hash_map<long long, TSP::ObjectInfo, TSP::ObjectIdentifierHash, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, TSP::ObjectInfo>>> _objectInfoMap;
    vector_8ef431c5 _repeatedReferences;
    NSMapTable *_objects;
    NSObject<OS_dispatch_queue> *_objectsToModifyQueue;
    NSHashTable *_objectsToModify;
    struct {
        unsigned int didFinishResolvingReferences:1;
        unsigned int needsUpgrade:1;
        unsigned int isFromPasteboard:1;
        unsigned int isCrossDocumentPaste:1;
        unsigned int isCrossAppPaste:1;
        unsigned int delegateRespondsToDidResetObjectIdentifierForObject:1;
        unsigned int delegateRespondsToDidResetObjectUUID:1;
        unsigned int delegateRespondsToDidUnarchiveObject:1;
    } _flags;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_group> *completionGroup; // @synthesize completionGroup=_completionGroup;
@property(readonly, nonatomic) TSPComponent *component; // @synthesize component=_component;
@property(readonly, nonatomic) __weak id <TSPReaderDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (struct ObjectInfo *)objectInfoForIdentifier:(long long)arg1;
@property(readonly, nonatomic) _Bool isCrossAppPaste;
@property(readonly, nonatomic) _Bool isCrossDocumentPaste;
@property(readonly, nonatomic) _Bool isFromPasteboard;
@property(readonly, nonatomic) _Bool didFinishResolvingReferences;
@property(readonly, nonatomic) unsigned long long fileFormatVersion;
- (id)dataForIdentifier:(long long)arg1;
- (id)UUIDForObjectIdentifier:(long long)arg1;
- (void)unarchiver:(id)arg1 didReadLazyReference:(id)arg2 isExternal:(_Bool *)arg3;
- (id)objectUUIDMap;
- (id)newObjectUUIDForObject:(id)arg1;
- (long long)newObjectIdentifier;
- (void)willModifyObject:(id)arg1 duringReadOperation:(_Bool)arg2;
- (long long)modifyObjectTokenForNewObject;
@property(readonly, nonatomic) TSPObjectContext *context;
- (void)processObjectsToModify;
- (void)setObjectDelegatesToContextObjectDelegate;
- (void)resolveReferences;
- (_Bool)finishUnarchiving;
- (void)didUnarchiveObject:(id)arg1 withUnarchiver:(id)arg2;
- (_Bool)validateObjectIdentifierForObject:(id)arg1;
- (void)addUnarchivedObject:(id)arg1 unarchiver:(id)arg2;
- (void)attemptedToReadInMemoryObject:(id)arg1 objectIdentifier:(long long)arg2;
- (void)unarchiveObjectWithUnarchiver:(id)arg1;
- (void)readWithIOCompletionQueue:(id)arg1 ioCompletion:(CDUnknownBlockType)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)beginReadingWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly) _Bool hasReadFailure;
@property(retain, nonatomic) NSError *error;
- (id)initWithComponent:(id)arg1 finalizeHandlerQueue:(id)arg2 delegate:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPReaderReferenceInfo : NSObject
{
    long long _objectIdentifier;
    long long _componentIdentifier;
}

+ (id)newReferenceInfoWithObjectIdentifier:(long long)arg1 componentIdentifier:(long long)arg2;
@property(readonly, nonatomic) long long componentIdentifier; // @synthesize componentIdentifier=_componentIdentifier;
@property(readonly, nonatomic) long long objectIdentifier; // @synthesize objectIdentifier=_objectIdentifier;
- (id)initWithObjectIdentifier:(long long)arg1 componentIdentifier:(long long)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseArchiverWriter : NSObject
{
    long long _dataStateIdentifier;
    NSString *_fileStateIdentifier;
    _Bool _hasDataState;
    _Bool _hasFileState;
    TSPDatabase *_database;
    TSPDistributableFileManager *_fileManager;
    NSString *_filenameHint;
    _Bool _forceFileStorage;
}

@property(nonatomic) _Bool forceFileStorage; // @synthesize forceFileStorage=_forceFileStorage;
@property(retain, nonatomic) NSString *filenameHint; // @synthesize filenameHint=_filenameHint;
@property(readonly, nonatomic) _Bool hasFileState; // @synthesize hasFileState=_hasFileState;
@property(readonly, nonatomic) _Bool hasDataState; // @synthesize hasDataState=_hasDataState;
- (void).cxx_destruct;
- (void)_writeDataFromInputStreamToFile:(id)arg1 length:(long long)arg2;
- (void)_writeDataFromInputStreamToDatabase:(id)arg1 length:(int)arg2;
- (struct sqlite3_blob *)_openDatabaseBlobWithSize:(int)arg1;
- (void)serializeDataFromStream:(id)arg1 length:(long long)arg2;
@property(retain, nonatomic) NSString *fileStateIdentifier;
@property(nonatomic) long long dataStateIdentifier;
- (_Bool)serializeArchive:(const struct Message *)arg1;
- (id)initWithDatabase:(id)arg1 fileManager:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceDownloadObserverManager : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_downloadObserversMap;
}

+ (id)sharedManager;
- (void).cxx_destruct;
- (void)postNotification:(long long)arg1 forDigestString:(id)arg2 wait:(_Bool)arg3;
- (void)addDownloadObserver:(id)arg1 forData:(id)arg2 digestString:(id)arg3 isInternalObserver:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceDownloadObserverInfo : NSObject
{
    id _downloadObserver;
    TSPData *_data;
    CDUnknownBlockType _completionHandler;
    _Bool _isInternalObserver;
}

@property(readonly, nonatomic) _Bool isInternalObserver; // @synthesize isInternalObserver=_isInternalObserver;
- (void).cxx_destruct;
- (void)postNotification:(long long)arg1;
- (id)initWithDownloadObserver:(id)arg1 data:(id)arg2 isInternalObserver:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableArchive : NSObject
{
    struct map<long long, std::__1::pair<long long, long long>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::pair<long long, long long>>>> *_entries;
    SFUFileDataRepresentation *_archiveFileRep;
    SFUMemoryDataRepresentation *_archiveMemoryRep;
    SFUZipEntry *_archiveZipEntryRep;
    struct {
        unsigned long long version;
        unsigned long long compatibleVersion;
    } _archivedVersions;
}

+ (id)_newStringFromUtf8DataInStream:(id)arg1 length:(unsigned long long)arg2;
+ (_Bool)_checkFileHeader:(const char *)arg1 length:(unsigned long long)arg2 dffVersion:(unsigned short *)arg3 archivedVersions:(CDStruct_4bcfbbae *)arg4 defaultObjectVersion:(unsigned int *)arg5 hasDescriptors:(_Bool *)arg6 hasToc:(_Bool *)arg7 otherDataLength:(unsigned int *)arg8 closedCleanly:(_Bool *)arg9;
+ (void)cancelStreaming;
+ (_Bool)streamDistributableArchive:(id)arg1 estimatedDataLength:(long long)arg2 toUnarchiver:(id)arg3 supplementalDataBundle:(id)arg4 closedCleanly:(_Bool *)arg5 context:(id)arg6 error:(id *)arg7;
+ (_Bool)readCheckCrcFromArchiveInputStream:(id)arg1 crc:(unsigned int *)arg2 error:(id *)arg3;
+ (_Bool)readArchivedVersionsFromStream:(id)arg1 versions:(CDStruct_4bcfbbae *)arg2 error:(id *)arg3;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_createInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (_Bool)_readEntriesFromToc:(id)arg1 error:(id *)arg2;
- (_Bool)containsObjectWithIdentifier:(long long)arg1;
- (long long)lengthOfObject:(long long)arg1;
- (id)createStreamForObject:(long long)arg1 length:(long long *)arg2;
- (CDStruct_4bcfbbae)archivedVersions;
- (void)dealloc;
- (id)initWithDffData:(id)arg1 error:(id *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableReader : NSObject <TSPStreamingDistributableUnarchiver>
{
    TSPDatabase *_database;
    TSPDistributableFileManager *_fileManager;
    _Bool _hasReadTangierVersionRoot;
    _Bool _isCancelled;
}

+ (_Bool)readCheckCrcFromArchiveInputStream:(id)arg1 crc:(unsigned int *)arg2 error:(id *)arg3;
- (void).cxx_destruct;
- (_Bool)_initializeNewDocumentDirectory:(id)arg1;
- (_Bool)handleFileDescriptorProtoWithInputStream:(id)arg1 length:(unsigned int)arg2 error:(id *)arg3;
- (_Bool)handleClassInfoWithClassType:(int)arg1 className:(id)arg2 isProtobufClass:(_Bool)arg3 error:(id *)arg4;
- (_Bool)handleObjectWithIdentifier:(long long)arg1 fileStateIdentifier:(id)arg2 version:(unsigned int)arg3 classType:(int)arg4 stream:(id)arg5 length:(long long)arg6 relationshipTargets:(long long *)arg7 relationshipCount:(unsigned int)arg8 error:(id *)arg9;
- (_Bool)handleArchivedVersions:(CDStruct_4bcfbbae)arg1 error:(id *)arg2;
- (_Bool)readFromDistributableArchiveStream:(id)arg1 estimatedDataLength:(long long)arg2 supplementalDataBundle:(id)arg3 error:(id *)arg4;
- (void)cancel;
- (id)initWithDestinationPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableFileManager : NSObject
{
    NSString *_directoryPath;
    _Bool _shouldCreate;
    TSUPathSet *_claimedPaths;
    NSMutableSet *_newIdentifiers;
    NSMutableSet *_modifiedIdentifiers;
    NSMutableSet *_deletedIdentifiers;
    TSUTemporaryDirectory *_modifiedFilesDirectory;
    _Bool _isCullingDisabled;
}

- (void).cxx_destruct;
- (void)_writeDataFromInputStream:(id)arg1 length:(long long)arg2 toPath:(id)arg3;
- (id)_filePathForIdentifier:(id)arg1;
- (id)_filePathForModifiedIdentifier:(id)arg1;
- (id)_modifiedFilesDirectoryPath;
- (id)_claimedPaths;
- (_Bool)rehomeOntoPath:(id)arg1;
- (_Bool)prepareForSaveToPath:(id)arg1 error:(id *)arg2;
- (void)disableFileCulling;
- (void)removeIdentifier:(id)arg1;
- (id)representationForIdentifier:(id)arg1;
- (void)setDataFromInputStream:(id)arg1 length:(long long)arg2 forIdentifier:(id)arg3;
- (void)setDataRepresentation:(id)arg1 forIdentifier:(id)arg2;
- (id)addDataFromInputStream:(id)arg1 length:(long long)arg2 filenameHint:(id)arg3;
- (id)addDataRepresentation:(id)arg1 filenameHint:(id)arg2;
- (_Bool)commitWithError:(id *)arg1;
- (id)initWithPath:(id)arg1 shouldCreate:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableWriter : NSObject
{
    TSPDistributableArchiveOutputStream *_outputStream;
    set_6550bfbd *_encodedIds;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> *_typesSeen;
    _Bool _isCancelled;
    TSPDatabase *_database;
    TSPDistributableFileManager *_fileManager;
    unsigned long long _processedEntriesCount;
}

- (void).cxx_destruct;
- (_Bool)goAndReportProgress:(_Bool)arg1 error:(id *)arg2 context:(id)arg3;
- (void)cancel;
- (void)dealloc;
- (id)initWithTangierPath:(id)arg1 fileManager:(id)arg2 outputStream:(id)arg3 checkCrc:(unsigned int)arg4;
- (_Bool)_processEntry:(id)arg1 tocEntries:(id)arg2 progressContext:(id)arg3 error:(id *)arg4;
- (id)_initWithDatabase:(id)arg1 fileManager:(id)arg2 outputStream:(id)arg3 checkCrc:(unsigned int)arg4 includeToc:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseArchiveManager : NSObject
{
}

+ (_Bool)_processGetRelationships:(id)arg1 database:(id)arg2 error:(id *)arg3;
+ (_Bool)_processDistributableArchiveEntry:(id)arg1 database:(id)arg2 fileManager:(id)arg3 error:(id *)arg4;
+ (_Bool)_processLoad:(id)arg1 classType:(int *)arg2 database:(id)arg3 fileManager:(id)arg4 error:(id *)arg5;
+ (_Bool)populateDistributableArchiveEntry:(id)arg1 database:(id)arg2 fileManager:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSPDatabaseDataRepresentation : SFUDataRepresentation
{
    TSPDatabase *_database;
    long long _identifier;
}

- (void).cxx_destruct;
- (struct sqlite3_blob *)_openBlob;
- (struct ZeroCopyInputStream *)createProtobufInputStream;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)inputStream;
- (long long)dataLength;
- (id)initWithDatabase:(id)arg1 identifier:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableArchiveEntry : NSObject <TSPIdentifiedDataRepresentation>
{
    long long _identifier;
    NSString *_fileStateIdentifier;
    SFUDataRepresentation *_objectData;
    set_6550bfbd *_ownedIds;
    int _classType;
    unsigned int _version;
    NSString *_relativeDataPath;
}

@property(copy, nonatomic) NSString *relativeDataPath; // @synthesize relativeDataPath=_relativeDataPath;
@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(nonatomic) int classType; // @synthesize classType=_classType;
- (void).cxx_destruct;
- (_Bool)isLoaded;
- (id)dataRepresentation;
- (void)setOwnedIds:(const set_6550bfbd *)arg1;
- (const set_6550bfbd *)ownedIds;
- (_Bool)setDataRepresentation:(id)arg1 shouldCopy:(_Bool)arg2 error:(id *)arg3;
- (void)setFileStateIdentifier:(id)arg1;
- (id)fileStateIdentifier;
- (long long)identifier;
- (void)dealloc;
- (id)initWithIdentifier:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDistributableArchiveOutputStream : NSObject
{
    id <SFUSimpleOutputStream> _outputStream;
    long long _offset;
    _Bool _doneWritingObjectEntries;
    _Bool _doneWritingFileDescriptorProtos;
    _Bool _doneWritingClassInfoMap;
    _Bool _descriptorsEnabled;
    _Bool _tocEnabled;
}

- (void).cxx_destruct;
- (_Bool)writeEntry:(id)arg1 offset:(long long *)arg2 headerLength:(unsigned int *)arg3 error:(id *)arg4;
- (id)initWithOutputStream:(id)arg1 checkCrc:(unsigned int)arg2 enableDescriptors:(_Bool)arg3 enableToc:(_Bool)arg4 closedCleanly:(_Bool)arg5 archivedVersions:(CDStruct_4bcfbbae)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSPExternalReferenceDataStorage : TSPFileDataStorage
{
    NSURL *_URL;
    NSData *_bookmarkData;
    TSPObjectContext *_context;
}

- (void).cxx_destruct;
- (_Bool)isReadable;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)bookmarkDataForArchiver:(id)arg1;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id)arg2;
- (id)storageForDataCopyFromOtherContext;
- (id)initWithBookmarkData:(id)arg1 context:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardWriteAssistant : NSObject <TSPPasteboardWriting, TSPProxyObjectManager>
{
    TSPObjectContext *_pasteboardContext;
    TSPPasteboardObject *_pasteboardObject;
    NSMutableDictionary *_dataProviderMap;
    NSMutableOrderedSet *_dataProviderTypes;
    _Bool _shouldRefuseAdditionalDataProviders;
    TSURetainedPointerKeyDictionary *_proxyObjectMap;
    NSHashTable *_delayedObjects;
    TSPPasteboard *_nativeDataPasteboard;
    TSPPasteboardNativeDataProvider *_nativeDataProvider;
    long long _writeNativeDataToPasteboardOnceToken;
    long long _nativeDataOnceToken;
    _Bool _didAttemptToSerializeNativeData;
    NSDictionary *_contentDescription;
}

@property(copy, nonatomic) NSDictionary *contentDescription; // @synthesize contentDescription=_contentDescription;
@property(readonly, nonatomic) TSPPasteboardObject *pasteboardObject; // @synthesize pasteboardObject=_pasteboardObject;
@property(readonly, nonatomic) TSPObjectContext *pasteboardContext; // @synthesize pasteboardContext=_pasteboardContext;
- (void).cxx_destruct;
- (id)proxyForReferencedObject:(id)arg1;
- (void)setProxy:(id)arg1 forReferencedObject:(id)arg2;
- (void)delayArchivingOfObject:(id)arg1;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)loadData;
- (void)waitForNativeDataIfNeeded;
- (void)writeNativeDataToPasteboard:(id)arg1;
- (void)setDataProvider:(id)arg1 forTypes:(id)arg2;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPPackage : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    TSPDocumentProperties *_documentProperties;
    TSUZipFileArchive *_zipArchive;
    NSError *_lastReloadError;
    NSHashTable *_packageDatas;
    id <TSPFileCoordinatorDelegate> _fileCoordinatorDelegate;
    struct {
        unsigned int isLazyLoadingDocumentProperties:1;
        unsigned int isLazyLoadingZip:1;
    } _flags;
    unsigned char _packageIdentifier;
    _Bool _isClosed;
    SFUCryptoKey *_decryptionKey;
    unsigned long long _fileFormatVersion;
}

+ (unsigned long long)zipArchiveOptions;
+ (id)zipArchiveURLFromPackageURL:(id)arg1;
+ (id)newLazyPackageWithURL:(id)arg1 packageIdentifier:(unsigned char)arg2 decryptionKey:(id)arg3 fileCoordinatorDelegate:(id)arg4;
+ (id)newPackageWithURL:(id)arg1 packageIdentifier:(unsigned char)arg2 decryptionKey:(id)arg3 fileCoordinatorDelegate:(id)arg4 error:(id *)arg5;
+ (id)dataEntryPathForFilename:(id)arg1;
+ (id)objectArchiveEntryPathForPackageLocator:(id)arg1;
@property(readonly, nonatomic) unsigned long long fileFormatVersion; // @synthesize fileFormatVersion=_fileFormatVersion;
@property(readonly, nonatomic) _Bool isClosed; // @synthesize isClosed=_isClosed;
@property(readonly, nonatomic) SFUCryptoKey *decryptionKey; // @synthesize decryptionKey=_decryptionKey;
@property(readonly, nonatomic) __weak id <TSPFileCoordinatorDelegate> fileCoordinatorDelegate; // @synthesize fileCoordinatorDelegate=_fileCoordinatorDelegate;
@property(readonly, nonatomic) unsigned char packageIdentifier; // @synthesize packageIdentifier=_packageIdentifier;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)prepareForDocumentReplacementWithSuccess:(_Bool)arg1 forSafeSave:(_Bool)arg2 originalURL:(id)arg3;
- (id)newDocumentPropertiesWithURL:(id)arg1 zipProvider:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)newRawDataReadChannelAtRelativePath:(id)arg1;
- (id)newDataStorageAtRelativePath:(id)arg1;
- (_Bool)checkPassword:(id)arg1;
- (_Bool)isPasswordProtected;
- (_Bool)hasDataAtRelativePath:(id)arg1;
- (id)dataAtRelativePath:(id)arg1 allowDecryption:(_Bool)arg2 error:(id *)arg3;
- (void)enumerateDatasUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)containsData:(id)arg1;
- (void)didReferenceData:(id)arg1;
- (void)copyComponent:(id)arg1 toPackageURL:(id)arg2 packageLocator:(id)arg3 zipFileWriter:(id)arg4 encryptionKey:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (id)newRawReadChannelForComponent:(id)arg1;
- (id)newReadChannelForComponent:(id)arg1;
- (unsigned long long)encodedLengthForComponentLocator:(id)arg1 isStoredOutsideObjectArchive:(_Bool)arg2;
@property(readonly) NSError *lastReloadError;
@property(retain) TSUZipFileArchive *zipArchive;
- (_Bool)reloadZipArchiveIfNeededWithURLImpl:(id)arg1 isLazyLoading:(_Bool)arg2 error:(id *)arg3;
- (id)newZipArchiveFromPackageURL:(id)arg1 isLazyLoading:(_Bool)arg2 error:(id *)arg3;
- (void)didReadFileFormatVersion:(unsigned long long)arg1;
- (void)didCloseDocument;
- (void)didRetrieveDecryptionKey:(id)arg1;
@property(readonly, nonatomic) TSPDocumentProperties *documentProperties;
@property(readonly, nonatomic) long long packageType;
- (id)initWithPackageIdentifier:(unsigned char)arg1 documentProperties:(id)arg2 fileFormatVersion:(unsigned long long)arg3 decryptionKey:(id)arg4 fileCoordinatorDelegate:(id)arg5 isLazyLoading:(_Bool)arg6;
- (id)initWithURL:(id)arg1 zipArchiveOrNil:(id)arg2 packageIdentifier:(unsigned char)arg3 documentProperties:(id)arg4 decryptionKey:(id)arg5 fileCoordinatorDelegate:(id)arg6 error:(id *)arg7;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPFinalizeHandlerQueue : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    struct vector<TSP::FinalizeHandlerItem *, std::__1::allocator<TSP::FinalizeHandlerItem *>> _order;
    struct hash_map<const long long, TSP::FinalizeHandlerItem, TSP::IdentifierHash, std::__1::equal_to<const long long>, std::__1::allocator<std::__1::pair<const long long, TSP::FinalizeHandlerItem>>> _map;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)runFinalizeHandlers;
- (void)runFinalizeHandlerForItem:(struct FinalizeHandlerItem *)arg1;
- (void)visitItemForCycleDetection:(struct FinalizeHandlerItem *)arg1;
- (void)addFinalizeHandlers:(vector_667badbd *)arg1 strongReferencesOrNull:(hash_map_43d567e3 *)arg2 forIdentifier:(long long)arg3;
- (void)reset;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPPasteboardNativeDataProvider : NSObject <TSPPasteboardWriting>
{
    TSPPasteboard *_pasteboard;
    NSMutableDictionary *_nativeData;
    NSMutableDictionary *_tspData;
}

- (void).cxx_destruct;
- (id)pasteboardPropertyListForType:(id)arg1;
- (id)writableTypesForPasteboard:(id)arg1;
- (void)loadNativeData;
- (id)initWithPasteboard:(id)arg1 nativeData:(id)arg2 tspData:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPSaveOperationState : NSObject
{
    NSMapTable *_newDataStorages;
    int _sampleID;
    long long _updateType;
}

@property(nonatomic) int sampleID; // @synthesize sampleID=_sampleID;
@property(readonly, nonatomic) long long updateType; // @synthesize updateType=_updateType;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool preserveDocumentUUID;
@property(readonly, nonatomic) _Bool shouldUpdate;
- (void)enumerateDatasAndStoragesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)hasNewStorageForData:(id)arg1;
- (void)addNewStorage:(id)arg1 forData:(id)arg2;
- (id)initWithUpdateType:(long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentSaveOperationState : TSPSaveOperationState
{
    _Bool _didEndWriteOperation;
    _Bool _shouldLeavePendingEndSave;
    NSURL *_URL;
    long long _packageType;
    NSURL *_relativeURLForExternalData;
    NSProgress *_progress;
    TSPDocumentProperties *_documentProperties;
    TSPDocumentRevision *_documentRevision;
    unsigned long long _saveToken;
    TSPObject *_documentObject;
    TSPObject *_supportObject;
    NSURL *_originalSupportURL;
    SFUCryptoKey *_encryptionKey;
    NSData *_passwordVerifier;
    NSString *_documentPasswordHint;
    TSPPackageWriter *_documentPackageWriter;
    TSPPackageWriter *_supportPackageWriter;
    NSUUID *_documentUUID;
}

@property(nonatomic) _Bool shouldLeavePendingEndSave; // @synthesize shouldLeavePendingEndSave=_shouldLeavePendingEndSave;
@property(nonatomic) _Bool didEndWriteOperation; // @synthesize didEndWriteOperation=_didEndWriteOperation;
@property(copy, nonatomic) NSUUID *documentUUID; // @synthesize documentUUID=_documentUUID;
@property(retain, nonatomic) TSPPackageWriter *supportPackageWriter; // @synthesize supportPackageWriter=_supportPackageWriter;
@property(retain, nonatomic) TSPPackageWriter *documentPackageWriter; // @synthesize documentPackageWriter=_documentPackageWriter;
@property(copy, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;
@property(retain, nonatomic) NSData *passwordVerifier; // @synthesize passwordVerifier=_passwordVerifier;
@property(retain, nonatomic) SFUCryptoKey *encryptionKey; // @synthesize encryptionKey=_encryptionKey;
@property(copy, nonatomic) NSURL *originalSupportURL; // @synthesize originalSupportURL=_originalSupportURL;
@property(retain, nonatomic) TSPObject *supportObject; // @synthesize supportObject=_supportObject;
@property(retain, nonatomic) TSPObject *documentObject; // @synthesize documentObject=_documentObject;
@property(nonatomic) unsigned long long saveToken; // @synthesize saveToken=_saveToken;
@property(retain, nonatomic) TSPDocumentRevision *documentRevision; // @synthesize documentRevision=_documentRevision;
@property(retain, nonatomic) TSPDocumentProperties *documentProperties; // @synthesize documentProperties=_documentProperties;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(copy, nonatomic) NSURL *relativeURLForExternalData; // @synthesize relativeURLForExternalData=_relativeURLForExternalData;
@property(readonly, nonatomic) long long packageType; // @synthesize packageType=_packageType;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1 updateType:(long long)arg2 packageType:(long long)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPSnappyComponentWriteChannel : NSObject <TSPComponentWriteChannel>
{
    char *_uncompressedBuffer;
    unsigned long long _uncompressedLength;
    id <TSPComponentWriteChannel> _writeChannel;
}

- (void).cxx_destruct;
- (void)close;
- (void)writeBlock;
- (void)writeData:(id)arg1;
- (void)dealloc;
- (id)initWithWriteChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPSnappyReadChannel : NSObject <TSUStreamReadChannel>
{
    id <TSUStreamReadChannel> _readChannel;
}

- (void).cxx_destruct;
- (id)uncompressData:(id)arg1;
- (id)uncompressDataFromSource:(struct SnappySource *)arg1;
- (_Bool)processData:(id *)arg1 isDone:(_Bool)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithReadChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCryptoComponentWriteChannel : NSObject <TSPComponentWriteChannel>
{
    id <TSPComponentWriteChannel> _writeChannel;
    struct _CCCryptor *_cryptor;
    char *_buffer;
    struct {
        unsigned int ctx[96];
    } _ccHmacContext;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)close;
- (void)_writeData:(id)arg1 updateHmac:(_Bool)arg2;
- (void)writeData:(id)arg1;
- (void)dealloc;
- (id)initWithWriteChannel:(id)arg1 encryptionKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCryptoReadChannel : NSObject <TSUStreamReadChannel>
{
    id <TSUStreamReadChannel> _readChannel;
    NSObject<OS_dispatch_queue> *_readChannelQueue;
    SFUCryptoKey *_decryptionKey;
    NSObject<OS_dispatch_data> *_holdData;
    char *_iv;
    unsigned long long _ivRead;
    struct _CCCryptor *_cryptor;
    char *_buffer;
    unsigned long long _initialBytesIgnored;
}

- (void).cxx_destruct;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithReadChannel:(id)arg1 decryptionKey:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCryptoTranscodeReadChannel : NSObject <TSUStreamReadChannel>
{
    id <TSUStreamReadChannel> _readChannel;
    SFUCryptoKey *_encryptionKey;
    NSObject<OS_dispatch_queue> *_readQueue;
}

- (void).cxx_destruct;
- (void)close;
- (void)readWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithReadChannel:(id)arg1 decryptionKey:(id)arg2 encryptionKey:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPIOHandlerWriteChannelAdapter : NSObject <TSPComponentWriteChannel>
{
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _handler;
    NSError *_error;
}

- (void).cxx_destruct;
- (void)close;
- (void)setError:(id)arg1;
- (void)writeData:(id)arg1;
- (id)initWithQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceCache : NSObject
{
    NSURL *_cacheURL;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_entries;
    long long _maxCacheSizeInBytes;
}

+ (id)sharedCache;
+ (id)defaultCacheURL;
@property(nonatomic) long long maxCacheSizeInBytes; // @synthesize maxCacheSizeInBytes=_maxCacheSizeInBytes;
- (void).cxx_destruct;
- (void)reloadEntries;
- (void)enumerateEntriesFromCacheURLWithHandler:(CDUnknownBlockType)arg1;
- (void)shrinkCacheWithMaxCacheSizeInBytes:(long long)arg1;
- (void)clearCache;
- (void)shrinkCache;
- (void)endDocumentResourceAccessForDigestString:(id)arg1;
- (_Bool)beginDocumentResourceAccessForDigestString:(id)arg1;
- (_Bool)cacheDocumentResourceDigestString:(id)arg1 extension:(id)arg2 sourceURL:(id)arg3 fileSize:(long long)arg4 wasDownloaded:(_Bool)arg5;
- (id)URLForDocumentResourceDigestString:(id)arg1;
- (id)entryForDigestString:(id)arg1;
- (id)initWithCacheURL:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceCacheEntry : NSObject
{
    _Bool _wasDownloaded;
    NSString *_digestString;
    long long _accessCount;
    NSURL *_URL;
    long long _fileSize;
    NSDate *_contentAccessDate;
}

@property(nonatomic) _Bool wasDownloaded; // @synthesize wasDownloaded=_wasDownloaded;
@property(retain, nonatomic) NSDate *contentAccessDate; // @synthesize contentAccessDate=_contentAccessDate;
@property(nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) long long accessCount; // @synthesize accessCount=_accessCount;
@property(readonly, nonatomic) NSString *digestString; // @synthesize digestString=_digestString;
- (void).cxx_destruct;
- (id)initWithDigestString:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceDataStorage : TSPFileDataStorage
{
    TSPDocumentResourceManager *_manager;
    TSPDocumentResourceInfo *_documentResourceInfo;
}

@property(retain, nonatomic) TSPDocumentResourceInfo *documentResourceInfo; // @synthesize documentResourceInfo=_documentResourceInfo;
@property(readonly, nonatomic) TSPDocumentResourceManager *manager; // @synthesize manager=_manager;
- (void).cxx_destruct;
- (void)archiveInfoMessage:(struct DataInfo *)arg1 archiver:(id)arg2;
- (id)filenameForPreferredFilename:(id)arg1;
- (_Bool)isMissingData;
- (_Bool)isReadable;
- (id)documentResourceLocator;
- (id)storageForDataCopyFromOtherContext;
- (id)initWithManager:(id)arg1 documentResourceInfo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceManager : NSObject
{
    NSURL *_appDocumentResourcesURL;
    NSURL *_appDocumentResourcesMetadataURL;
    long long _documentResourcesConfigurationToken;
    NSObject<OS_dispatch_queue> *_documentResourcesConfigurationQueue;
    NSDictionary *_documentResourcesConfiguration;
    long long _sageDocumentResourcesConfigurationToken;
    NSMutableDictionary *_sageDocumentResourcesConfiguration;
    TSPDocumentResourceCache *_cache;
    TSUDownloadManager *_downloadManager;
}

+ (id)sharedManager;
+ (id)appDocumentResourcesMetadataURL;
+ (id)appDocumentResourcesURL;
+ (void)setSageAppDocumentResourcesURL:(id)arg1;
+ (void)setAppDocumentResourcesMetadataURL:(id)arg1;
+ (void)setAppDocumentResourcesURL:(id)arg1;
@property(readonly, nonatomic) TSUDownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
@property(readonly, nonatomic) TSPDocumentResourceCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)dataStorageForDigestString:(id)arg1 locator:(id)arg2 extension:(id)arg3 infoToDownload:(id *)arg4;
- (id)cachedDocumentResourceDataStorageForInfo:(id)arg1 isValidated:(_Bool)arg2;
- (id)applicationDataStorageForInfo:(id)arg1 isValidated:(_Bool)arg2;
- (void)clearCache;
- (id)newDataProviderForContext:(id)arg1;
- (id)URLForCachedDocumentResourceWithDigestString:(id)arg1;
- (id)URLForAppDocumentResourceWithDigestString:(id)arg1 extension:(id)arg2;
- (id)findDocumentResourceUsingDigestString:(id)arg1 locator:(id)arg2;
- (id)sageAssetURLForLocator:(id)arg1;
- (id)sageDocumentResourcesConfiguration;
- (id)documentResourcesConfiguration;
- (id)initWithAppDocumentResourcesURL:(id)arg1 appDocumentResourcesMetadataURL:(id)arg2 cache:(id)arg3 downloadManager:(id)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSPDocumentResourceDataProvider : NSObject <TSPDocumentResourceDownloadNotificationProtocol, TSPDocumentResourceDownloader>
{
    TSPDocumentResourceManager *_manager;
    TSPObjectContext *_context;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSHashTable *_storagesCache;
    NSMutableArray *_downloadItems;
    NSMutableSet *_infosToDownload;
    long long _estimatedDownloadSize;
    _Bool _isEstimatedDownloadSizePrecise;
    _Bool _didCancelDownloads;
    _Bool _didNotifyObjectContext;
}

+ (void)didCompleteDocumentResourceDownloadWithDigestString:(id)arg1;
+ (void)registerDownloadNotificationClass:(Class)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isEstimatedDownloadSizePrecise;
@property(readonly, nonatomic) long long estimatedDownloadSize;
@property(readonly, nonatomic) _Bool needsDownload;
- (void)cancelDownloads;
- (id)downloadWithDelegate:(id)arg1 description:(id)arg2;
- (id)dataStorageForSageLocator:(id)arg1;
- (id)dataForDigestString:(id)arg1 locator:(id)arg2 filename:(id)arg3 needsDownload:(_Bool *)arg4;
- (id)dataForDigestString:(id)arg1 locator:(id)arg2 filename:(id)arg3;
- (void)cacheDataForDigestString:(id)arg1 locator:(id)arg2 extension:(id)arg3;
- (id)dataStorageForDigestString:(id)arg1 locator:(id)arg2 extension:(id)arg3 needsDownload:(_Bool *)arg4;
- (id)dataStorageForDigestString:(id)arg1 locator:(id)arg2 extension:(id)arg3;
- (id)initWithManager:(id)arg1 context:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSPCachedDocumentResourceDataStorage : TSPDocumentResourceDataStorage
{
    _Bool _isValidated;
}

- (void)addDownloadObserver:(id)arg1 forData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)needsDownload;
- (unsigned long long)encodedLength;
- (void)performReadWithAccessor:(CDUnknownBlockType)arg1;
- (id)fileURL;
- (_Bool)isReadable;
- (void)dealloc;
- (id)initWithManager:(id)arg1 documentResourceInfo:(id)arg2 isValidated:(_Bool)arg3;
- (id)initWithManager:(id)arg1 documentResourceInfo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCEWarning : NSObject
{
    NSDictionary *mMetadata;
    _Bool mIgnored;
}

+ (void)reportComparisonWarningInContext:(struct TSCEWarningReportingContext *)arg1 leftType:(int)arg2 rightType:(int)arg3;
+ (void)reportAutomaticUnitConversionWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportLossOfUnitsWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportMismatchedSizesWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportBoolToNumberConversionWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportDayOutOfRangeWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportMonthOutOfRangeWarningInContext:(struct TSCEWarningReportingContext *)arg1;
+ (void)reportNonNumericCellWarningInContext:(struct TSCEWarningReportingContext *)arg1 reference:(id)arg2;
+ (_Bool)setHasVisibleWarnings:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)displayStringWithCalculationEngine:(id)arg1 forTable:(struct __CFUUID *)arg2 andCellID:(CDStruct_0441cfb5)arg3;
- (void)setIgnored:(_Bool)arg1;
- (_Bool)isIgnored;
- (id)type;
- (void)dealloc;
- (id)copyByRemappingEntityIDs:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEFunctionSpec : NSObject
{
    NSString *mFunctionName;
    short mMinArguments;
    short mMaxArguments;
    short mRepeatingGroupSize;
    NSArray *mArguments;
    NSArray *mRepeatingArguments;
    _Bool mIsOperator;
    int mShipVersion;
    int mFunctionIndex;
}

+ (id)functionSpecForFunctionIndex:(int)arg1;
+ (id)specWithFunctionName:(id)arg1 minArgs:(id)arg2 maxArgs:(id)arg3 repeatingGroupSize:(id)arg4 isOperator:(int)arg5 shipVersion:(int)arg6 arguments:(id)arg7 functionIndex:(int)arg8;
+ (id)specDictionary;
@property(readonly) int functionIndex; // @synthesize functionIndex=mFunctionIndex;
- (id)nativeSyntaxStringForArgument:(int)arg1;
- (id)argumentSpecForIndex:(unsigned long long)arg1;
- (int)versionShippedIn;
- (_Bool)isOperator;
- (unsigned long long)numArguments;
- (short)maxArguments;
- (short)minArguments;
- (id)arguments;
- (id)displayString;
- (id)localizedToolTipString;
- (id)localizedFunctionName;
- (id)functionName;
- (void)dealloc;
- (id)initWithFunctionName:(id)arg1 minArgs:(int)arg2 maxArgs:(int)arg3 repeatingGroupSize:(int)arg4 isOperator:(_Bool)arg5 shipVersion:(int)arg6 arguments:(id)arg7 functionIndex:(int)arg8;
- (id)description;
- (void)p_ValidateArguments;

@end

__attribute__((visibility("hidden")))
@interface TSCEFunctionArgumentSpec : NSObject
{
    int mArgumentType;
    _Bool mForceArrayMode;
    double mMinValue;
    double mMaxValue;
    _Bool mDisallowDuration;
    _Bool mDisallowCurrency;
    short mIndex;
    int mAccessorMode;
    int mArgumentContext;
    int mRangeContext;
    NSArray *mDisallowedTypes;
    vector_10088e46 *mModeValues;
    short mDefaultModeIndex;
    TSCEFunctionSpec *mFunctionSpec;
    _Bool mMinInclusive;
    _Bool mMaxInclusive;
    _Bool mIsInteger;
    _Bool mReferenceForGeometryOnly;
}

+ (id)argumentSpecWithIndex:(short)arg1 type:(int)arg2 accessorMode:(int)arg3 disallowedTypes:(id)arg4 argumentContext:(int)arg5 rangeContext:(int)arg6 minValue:(double)arg7 minInclusive:(_Bool)arg8 maxValue:(double)arg9 maxInclusive:(_Bool)arg10 isInteger:(_Bool)arg11 disallowDuration:(_Bool)arg12 disallowCurrency:(_Bool)arg13 modeValues:(vector_10088e46 *)arg14 defaultModeIndex:(short)arg15 referenceForGeometryOnly:(_Bool)arg16 forceArrayMode:(_Bool)arg17;
@property(nonatomic) TSCEFunctionSpec *functionSpec; // @synthesize functionSpec=mFunctionSpec;
@property(readonly, nonatomic) vector_10088e46 *modeValues; // @synthesize modeValues=mModeValues;
@property(readonly, nonatomic) short defaultModeIndex; // @synthesize defaultModeIndex=mDefaultModeIndex;
- (_Bool)forceArrayMode;
- (_Bool)typeIsDisallowed:(int)arg1 value:(struct TSCEValue *)arg2;
- (id)disallowedTypes;
- (id)localizedFunctionName;
- (id)localizedModeMenuItemStringForModeIndex:(short)arg1;
- (id)localizedModeToolTipStringForModeIndex:(short)arg1;
- (id)localizedModeNameForModeIndex:(short)arg1;
- (id)nativeSyntaxStringForModeIndex:(short)arg1;
- (id)nativeSyntaxString;
- (long long)indexForModeBool:(_Bool)arg1;
- (long long)indexForModeNumber:(double)arg1;
- (long long)indexForModeString:(id)arg1;
- (long long)indexForModeValue:(struct TSCEValue *)arg1;
- (struct TSCEValue)valueForModeIndex:(short)arg1;
- (short)numModes;
- (_Bool)isMode;
- (_Bool)referenceForGeometryOnly;
- (_Bool)isOptional;
- (_Bool)disallowCurrency;
- (_Bool)disallowDuration;
- (_Bool)isInteger;
- (_Bool)maxInclusive;
- (double)maxValue;
- (_Bool)minInclusive;
- (double)minValue;
- (short)index;
- (int)rangeContext;
- (int)argumentContext;
- (int)accessorMode;
- (int)preferredType;
- (id)localizedToolTipString;
- (id)localizedArgumentName;
- (void)dealloc;
- (id)initArgumentSpecWithIndex:(short)arg1 type:(int)arg2 accessorMode:(int)arg3 disallowedTypes:(id)arg4 argumentContext:(int)arg5 rangeContext:(int)arg6 minValue:(double)arg7 minInclusive:(_Bool)arg8 maxValue:(double)arg9 maxInclusive:(_Bool)arg10 isInteger:(_Bool)arg11 disallowDuration:(_Bool)arg12 disallowCurrency:(_Bool)arg13 modeValues:(vector_10088e46 *)arg14 defaultModeIndex:(short)arg15 referenceForGeometryOnly:(_Bool)arg16 forceArrayMode:(_Bool)arg17;

@end

__attribute__((visibility("hidden")))
@interface TSCEBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCEUtilities : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCEUnitRegistry : NSObject
{
}

+ (int)dimensionForUnit:(int)arg1;
+ (double)convert:(double)arg1 fromUnit:(CDStruct_79c71658)arg2 toUnit:(CDStruct_79c71658)arg3;
+ (_Bool)unitIsMetric:(int)arg1;
+ (CDStruct_79c71658)prefixedUnitForString:(id)arg1;
+ (int)unitPrefixForCharacter:(unsigned short)arg1;
+ (double)multiplierForUnitPrefix:(int)arg1;
+ (int)unitForString:(id)arg1;
+ (int)canonicalUnitForDimension:(int)arg1;
+ (id)currencyCodeForUnit:(int)arg1;
+ (int)unitForCurrentLocaleCurrencyCode;
+ (int)unitForCurrencyCode:(id)arg1;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface TSCERegionAllocator : NSObject
{
    struct TSCERegionNode *mHead;
    struct TSCERegionNode *mCurBlock;
    unsigned int mBlockOffset;
    struct _NSZone *mZone;
}

- (void)dealloc;
- (struct _NSZone *)zone;
- (void)reset;
- (void *)calloc:(unsigned long long)arg1;
- (void *)malloc:(unsigned long long)arg1;
- (id)initWithInitialCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEDependencyChanges : NSObject
{
    struct __CFUUID *mTableID;
}

- (_Bool)mightAffectDependencyTracker;
- (void)dealloc;
- (struct __CFUUID *)tableID;
- (id)initWithTableID:(struct __CFUUID *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCETableDeletion : TSCEDependencyChanges
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCEFormulaRewriteSpec : NSObject
{
    int mType;
    CDUnion_003095c3 mInfo;
}

- (id).cxx_construct;
- (void)saveToArchive:(struct FormulaRewriteSpecArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FormulaRewriteSpecArchive *)arg1;
- (struct __CFUUID *)affectedOwnerID;
- (id)description;
- (CDUnion_003095c3)rewriteInfo;
- (int)rewriteType;
- (void)dealloc;
- (id)initWithTransposeTable:(struct __CFUUID *)arg1 condStyleOwnerID:(struct __CFUUID *)arg2 withNumberOfFooterRows:(unsigned short)arg3;
- (id)initWithCellMergeInTable:(struct __CFUUID *)arg1 mergedRange:(struct)arg2;
- (id)initWithTableResize:(struct __CFUUID *)arg1 oldTableSize:(struct)arg2 newTableSize:(struct)arg3;
- (id)initWithOwnerDeletion:(struct __CFUUID *)arg1;
- (id)initWithRangeMoveFrom:(CDStruct_5744d895)arg1 to:(CDStruct_5744d895)arg2;
- (id)initWithSortMapping:(id)arg1 tableID:(struct __CFUUID *)arg2 explodeRanges:(_Bool)arg3;
- (id)initWithTectonicShift:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCECalculationEngine : TSPObject
{
    TSKAccessController *mAccessController;
    TSKChangeNotifier *mChangeNotifier;
    struct TSCEDependencyTracker *mDependencyTracker;
    int mXLImportDateMode;
    NSString *mPreviousLocaleIdentifier;
    NSDate *mCurrentDate;
    int mRecalculationThreadState;
    struct _opaque_pthread_mutex_t mRecalculationThreadStateMutex;
    _Bool mShouldCancelRecalculationTask;
    unsigned int mCalculationPauseCount;
    NSObject<OS_dispatch_group> *mRecalcLoopGroup;
    _Bool mBlockingUntilRecalcIsComplete;
    NSObject<OS_dispatch_group> *mRecalcDispatchGroup;
    int mRecalcDispatchGroupSize;
    NSObject<OS_dispatch_queue> *mRecalcHighPriorityQueue;
    NSObject<OS_dispatch_queue> *mReaclcLowPriorityQueue;
    NSObject<OS_dispatch_semaphore> *mModifiedOwnersSem;
    struct __CFSet *mModifiedOwnersInThisRecalcCycle;
    _Bool mShouldRefillRecalcQueue;
    struct __CFDictionary *mReferenceResolvers;
    struct __CFDictionary *mLegacyGlobalIDStringToOwnerIDDictionary;
    unsigned long long mBatchingGroupCellDirtyingLevel;
    _Bool mDirtyRandomVolatileFunctionsAtEndOfDirtyBatching;
    NSMutableArray *mCalculationStateObservers;
    unsigned long long mSuppressWillModifyCallsLevel;
    unsigned long long mNumberOfFormulas;
    TSCENamedReferenceManager *mNamedReferenceManager;
    TSKChangeGroup *mPendingChangesForAsyncNotification;
    NSObject<OS_dispatch_queue> *mWriteMutualExclusionQueue;
    _Bool mDirtyAllFormulasInDocumentDidLoad;
    struct __CFUUID *_transposingTableID;
}

+ (void)setTableReferenceInterfaceObject:(struct TSCETableReferenceInterface *)arg1;
+ (id)allLocalizedFunctions;
+ (id)localizedCategoryArray;
+ (id)localizedFunctionCategoryDictionary;
+ (id)localizedNamesForFunctions:(id)arg1;
+ (id)localizedFalseStrings;
+ (id)localizedTrueStrings;
+ (void)loadLocalizedStrings;
+ (id)localizedModeToolTipForArgument:(short)arg1 modeIndex:(short)arg2 ofFunction:(id)arg3;
+ (id)localizedModeNameForArgument:(short)arg1 modeIndex:(short)arg2 ofFunction:(id)arg3;
+ (id)localizedToolTipForArgument:(short)arg1 ofFunction:(id)arg2;
+ (id)localizedNameForArgument:(short)arg1 ofFunction:(id)arg2;
+ (id)localizedCategoryForFunction:(id)arg1;
+ (id)localizedToolTipForFunction:(id)arg1;
+ (id)localizedNameForFunction:(id)arg1;
+ (id)localizedFunctionNameForMenuTag:(int)arg1;
+ (id)localizedFalseString;
+ (_Bool)localizedStringIsFalse:(id)arg1;
+ (id)localizedTrueString;
+ (_Bool)localizedStringIsTrue:(id)arg1;
+ (id)localizedTypeStringForArgumentType:(int)arg1;
+ (id)supportedFunctions;
+ (id)functionNameForLocalizedString:(id)arg1;
+ (id)functionLocalizationDictionary;
@property struct __CFUUID *transposingTableID; // @synthesize transposingTableID=_transposingTableID;
- (id).cxx_construct;
- (hash_set_d1f8f196)cellCoordinatesNeedingExcelImportForTable:(struct __CFUUID *)arg1;
- (unsigned int)delayedArchivingPriority;
- (id)packageLocator;
- (_Bool)shouldDelayArchiving;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)allWholeOwnerDependenciesAsString;
- (id)allSpanningDependenciesAsString;
- (id)allCellDependenciesAsString;
- (void)assertAllDirtyCellsAreOnLeafStack;
- (void)assertDirtyPrecedentsCountConsistency;
- (id)documentRoot;
- (id)namedReferenceManager;
- (unsigned long long)numberOfCellsWithFormulas;
- (void)removeCalculationStateObserver:(id)arg1;
- (void)addCalculationStateObserver:(id)arg1;
- (CDStruct_5744d895)parseStringAsReference:(id)arg1 contextResolver:(id)arg2 contextSheetName:(id)arg3 gettingSpecifiedSheetName:(id *)arg4 gettingSpecifiedTableName:(id *)arg5 gettingRest:(id *)arg6 gettingReferencesMatchingInputAsPrefix:(id *)arg7 gettingStickyBits:(char *)arg8 filterColons:(_Bool)arg9 referenceIsComplete:(_Bool)arg10 outNamesUsed:(_Bool *)arg11;
- (CDStruct_5744d895)parseStringAsReference:(id)arg1 tableName:(id)arg2 rest:(id)arg3 contextResolver:(id)arg4 contextSheetName:(id)arg5 gettingReferencesMatchingInputAsPrefix:(id *)arg6 gettingStickyBits:(char *)arg7 filterColons:(_Bool)arg8 referenceIsComplete:(_Bool)arg9 outNamesUsed:(_Bool *)arg10;
- (CDStruct_5744d895)parseStringAsReferenceComponentIntersection:(id)arg1 inResolver:(id)arg2 inTableNamed:(id)arg3 preferredGeometricResolver:(id)arg4 defaultResolver:(id)arg5 outStickyBits:(char *)arg6 gettingReferencesMatchingInputAsPrefix:(id *)arg7 requireFullMatches:(_Bool)arg8 filterColons:(_Bool)arg9 outNamesUsed:(_Bool *)arg10;
- (CDStruct_0441cfb5)parseStringAsGeometricReferenceComponent:(id)arg1 inResolver:(id)arg2 outStickyBits:(char *)arg3 gettingReferencesMatchingInputAsPrefix:(id *)arg4;
- (hash_set_946ba02d)precedentsOfCell:(CDStruct_78b871e1)arg1;
- (id)escapedStringForRangeReference:(CDStruct_5744d895)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(_Bool)arg4 forceEscaping:(_Bool)arg5;
- (id)escapedStringForRangeReference:(CDStruct_5744d895)arg1 hostTableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(_Bool)arg4 forceEscaping:(_Bool)arg5;
- (id)stringForRangeReference:(CDStruct_5744d895)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(_Bool)arg4;
- (id)stringForRangeReference:(CDStruct_5744d895)arg1 hostTableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3 isRangeWithFunction:(_Bool)arg4;
- (id)p_stringForRangeReference:(CDStruct_5744d895)arg1 hostTableID:(struct __CFUUID *)arg2 contextSheetName:(id)arg3 stickyBits:(unsigned char)arg4 isRangeWithFunction:(_Bool)arg5 quoteComponents:(_Bool)arg6 forceEscaping:(_Bool)arg7;
- (_Bool)referenceIsValid:(CDStruct_5744d895)arg1;
- (_Bool)rangeIsWithinTable:(CDStruct_5744d895)arg1;
- (struct)cellHandleRangeForRangeCoord:(struct)arg1 inTable:(struct __CFUUID *)arg2;
- (CDStruct_0441cfb5)cellHandleForCellCoord:(CDStruct_0441cfb5)arg1 inTable:(struct __CFUUID *)arg2;
- (struct)rangeCoordForCellHandleRange:(struct)arg1 inTable:(struct __CFUUID *)arg2;
- (CDStruct_0441cfb5)cellCoordForCellHandle:(CDStruct_0441cfb5)arg1 inTable:(struct __CFUUID *)arg2;
- (void)endBatchingGroupCellDirtying;
- (void)beginBatchingGroupCellDirtying;
- (void)executeBlockWhileCalculationEngineIsNotWriting:(CDUnknownBlockType)arg1;
- (void)startRecalcTaskIfNecessary;
- (_Bool)recalculationIsPaused;
- (void)resumeRecalculation;
- (void)pauseRecalculation;
- (void)endSuppressingWillModifyCalls;
- (void)beginSuppressingWillModifyCalls;
- (void)p_blockUntilRecalcTaskExitedWithTimeout:(double)arg1;
- (void)blockUntilRecalcIsCompleteWithTimeout:(double)arg1;
- (void)p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:(id)arg1;
- (_Bool)isCellReferenceDirty:(CDStruct_78b871e1 *)arg1;
- (_Bool)cellContainsAFormula:(CDStruct_78b871e1 *)arg1;
- (void)ownerIsDirty:(struct __CFUUID *)arg1;
- (void)geometryVolatileFunctionsAreDirtyInOwner:(struct __CFUUID *)arg1;
- (void)compassVolatileFunctionsAreDirty;
- (void)locationVolatileFunctionsAreDirty;
- (void)localeVolatileFunctionsAreDirty;
- (void)randomVolatileFunctionsAreDirty;
- (void)timeVolatileFunctionsAreDirty;
- (void)detectAndRepairConsistencyViolations;
- (void)markOnlyDependentsDirty:(const CDStruct_78b871e1 *)arg1;
- (void)indirectCallsAreDirty;
- (void)allFunctionsAreDirty;
- (void)rangeReferenceIsDirty:(CDStruct_5744d895 *)arg1;
- (void)updateDirtyPrecedentCountsForRemovedIndex:(int)arg1 inTable:(struct __CFUUID *)arg2 forColumns:(_Bool)arg3;
- (void)headerStateOfTableChanged:(struct __CFUUID *)arg1;
- (void)headerStateOfTableChanged:(struct __CFUUID *)arg1 changeIsForColumns:(_Bool)arg2;
- (void)cellReferenceIsDirty:(const CDStruct_78b871e1 *)arg1;
- (id)rewriteFormulasWithSpec:(id)arg1;
- (_Bool)clearCellIsDirtyAfterRecalc:(CDStruct_78b871e1)arg1;
- (_Bool)referenceWasGuaranteedCleanAtRecalcCycleStart:(CDStruct_39788696)arg1;
- (_Bool)cellIsInACycle:(CDStruct_78b871e1 *)arg1;
- (_Bool)allCellsAreClean;
- (unsigned long long)dirtyCellCount;
- (unsigned long long)dirtyCellCountInOwner:(struct __CFUUID *)arg1;
- (void)removeFormulasFromRange:(CDStruct_5744d895)arg1;
- (void)removeAllFormulasFromOwner:(struct __CFUUID *)arg1;
- (void)removeFormula:(CDStruct_a91f2c80)arg1 inOwner:(struct __CFUUID *)arg2;
- (void)replaceFormula:(CDStruct_a91f2c80)arg1 inOwner:(struct __CFUUID *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4 hasRandomVolatileFunctions:(_Bool *)arg5 clearCycle:(_Bool)arg6;
- (void)replaceFormula:(CDStruct_a91f2c80)arg1 inOwner:(struct __CFUUID *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4 hasRandomVolatileFunctions:(_Bool *)arg5;
- (void)addFormula:(CDStruct_a91f2c80)arg1 inOwner:(struct __CFUUID *)arg2 precedentIterator:(CDUnknownFunctionPointerType)arg3 userData:(void *)arg4 hasRandomVolatileFunctions:(_Bool *)arg5;
- (void)setOwnerIDForLegacyGlobalID:(id)arg1 ownerID:(struct __CFUUID *)arg2;
- (struct __CFUUID *)ownerIDForLegacyGlobalID:(id)arg1 registeringIfNeeded:(_Bool)arg2;
- (id)resolverForTableID:(struct __CFUUID *)arg1;
- (void)clearLegacyGlobalIDs;
- (_Bool)allOwnersRegistered;
- (_Bool)ownerIsRegistered:(struct __CFUUID *)arg1;
- (void)unregisterOwner:(struct __CFUUID *)arg1;
- (int)registerOwnerWithOwnerID:(struct __CFUUID *)arg1 owner:(id)arg2 referenceResolver:(id)arg3;
- (int)forwardRegisterOwnerWithOwnerID:(struct __CFUUID *)arg1 legacyGlobalID:(id)arg2;
- (id)previousLocaleIdentifier;
- (void)setXLImportDateMode:(int)arg1;
- (int)xlImportDateMode;
- (id)currentDate;
- (void)updateCurrentDate;
- (void)p_startRecalculationTask;
- (void)recalculateWithTimeout:(double)arg1;
- (void)recalcHoldingWriteLock;
- (void)notifyObserversOfRecalcProgress;
- (_Bool)recalcHoldingReadLock;
- (void)p_recalcOneCellHoldingReadLock:(CDStruct_78b871e1)arg1 formulaOwner:(id)arg2 hasExistingCalculatedPrecedents:(_Bool)arg3 isInACycle:(_Bool)arg4;
- (void)p_enqueueTaskForCell:(CDStruct_78b871e1)arg1;
- (CDStruct_78b871e1)p_refillRecalcQueue;
- (int)preferredDispatchQueueSize;
- (void)invalidateAfterRecalc;
- (void)dealloc;
- (void)documentDidLoad;
- (id)changeNotifier;
- (void)setChangeNotifier:(id)arg1;
- (id)accessController;
- (void)setAccessController:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)p_removeApplicationNotification;
- (void)p_addApplicationNotification;
- (id)retain;
- (id)init;
- (void)initializeDispatchObjects;
- (id)allOwnerIDs;

@end

__attribute__((visibility("hidden")))
@interface TSCEError : NSObject <NSCopying>
{
    NSDictionary *mErrorDictionary;
}

+ (void)raiseStringTooLongError;
+ (void)raiseInvalidHeadingError;
+ (void)raiseInvalidAltitudeError;
+ (void)raiseInvalidLatitudeLongitudeError;
+ (void)raiseLocationHeadingFailureError;
+ (void)raiseLocationNetworkError;
+ (void)raiseLocationUserDeniedError;
+ (void)raiseLocationUnknownError;
+ (void)raiseLocationHeadingUnknownError;
+ (void)raiseLocationServicesNotEnabledError;
+ (void)raisePercentRankExcInputOutOfRangeError;
+ (void)raisePercentRankInputOutOfRangeError;
+ (void)raiseNegativeVectorValueErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseLinestMatrixUnderdeterminedError;
+ (void)raiseMultipleDurationsErrorForFunctionName:(id)arg1;
+ (void)raiseComparisonTypeExceptionForLeftType:(int)arg1 rightType:(int)arg2;
+ (void)raiseLinestHighlyCorrelatedVariableError;
+ (void)raiseDurationDisallowedForNormdistPDFError;
+ (void)raiseCharInputOutOfBoundsError;
+ (void)raiseVectorValueNotNumberErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseMismatchedMaxUnitsError;
+ (void)raiseCategoryCellReferenceError;
+ (void)raiseInvalidMatchModeError;
+ (void)raiseNegativeReceivedAmountError;
+ (void)raiseDataInvalidWidthError;
+ (void)raiseDataInvalidLengthError;
+ (void)raiseDataInvalidDimensionsError;
+ (void)raiseArrayElementNoDataError;
+ (void)raiseConvertOriginUnitMismatchError;
+ (void)raiseNonMetricUnitPrefixErrorForUnitString:(id)arg1;
+ (void)raiseDifferentDimensionsErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidUnitStringError:(id)arg1;
+ (void)raiseInvalidBaseCharacterErrorForCharacter:(unsigned short)arg1 base:(short)arg2;
+ (void)raiseEmptyArrayError;
+ (void)raiseRangeSizeMismatchErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidArgumentPairingsErrorForFunctionName:(id)arg1 hasInitialUnrelatedArgument:(_Bool)arg2;
+ (void)raiseInvalidIntersectionError:(vector_99ef3555)arg1 hostTableID:(struct __CFUUID *)arg2 calcEngine:(id)arg3;
+ (void)raiseNotEnoughInputsErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2 required:(int)arg3;
+ (void)raiseSumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:(id)arg1;
+ (void)raiseMismatchedCurrenciesErrorForFunctionName:(id)arg1;
+ (id)durationNotAllowedError:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseDurationNotAllowedError:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseCurrencyNotAllowedErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseUnitsNotAllowedErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseMismatchedUnitsErrorForFunctionName:(id)arg1;
+ (void)raiseMismatchedUnitsErrorForFunctionName:(id)arg1 argumentNumberString:(id)arg2;
+ (void)raiseInvalidComparisonError;
+ (void)raiseInvalidCurrencyComparisonError;
+ (void)raiseWrongNumberOfArgumentsErrorForFunctionName:(id)arg1 provided:(int)arg2;
+ (void)raiseNumberMinusDateError;
+ (void)raiseReferenceToEmptyCellErrorForFunctionName:(id)arg1 rangeReference:(CDStruct_5744d895)arg2;
+ (void)raiseOnlyPositiveOrNegativeErrorForFunctionName:(id)arg1;
+ (void)raiseDateEarlierThanStartingDateErrorForFunctionName:(id)arg1;
+ (void)raiseTooFewDataPointsErrorForFunctionName:(id)arg1;
+ (void)raiseNumberDoesNotConvergeWithEstimateErrorForFunctionName:(id)arg1;
+ (void)raiseNumberDoesNotConvergeErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidSubtotalFunctionNumberError;
+ (void)raiseInvalidTailErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseInvalidTypeErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseInvalidFrequencyErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raisePositionLargerThanArrayErrorForFunctionName:(id)arg1;
+ (void)raiseArgumentEqualsToZeroErrorForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseNumberSmallerThanZeroError;
+ (void)raiseInvalidProbabilityErrorForFunctionName:(id)arg1;
+ (void)raiseNotAVectorError;
+ (void)raiseInvalidTimeError;
+ (void)raiseInvalidDateError;
+ (void)raiseUnsupportedR1C1StyleError;
+ (void)raiseRangeDoesNotSumToOneForFunctionName:(id)arg1 argumentNumber:(int)arg2;
+ (void)raiseSignsMustMatchErrorForFunctionName:(id)arg1;
+ (void)raiseStringDoesNotRepresentDateErrorForFunctionName:(id)arg1 string:(id)arg2;
+ (void)raiseStringDoesNotRepresentNumberErrorForFunctionName:(id)arg1 string:(id)arg2;
+ (void)raiseNonEmptyStringRequiredErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidIndexForChooseError:(int)arg1;
+ (void)raiseInvalidArgumentEqualityRelationshipErrorForFunctionName:(id)arg1 argIndex1:(int)arg2 argIndex2:(int)arg3;
+ (void)raiseInvalidArgumentRelationshipErrorForFunctionName:(id)arg1 argIndex1:(int)arg2 argIndex2:(int)arg3 argsAscending:(_Bool)arg4 equalityPermitted:(_Bool)arg5;
+ (void)raiseNoSuitableArgumentsFoundErrorForFunctionName:(id)arg1 requiredType:(int)arg2;
+ (void)raiseNotAReferenceErrorForFunctionName:(id)arg1;
+ (void)raiseCircularReferenceErrorWithReference:(id)arg1;
+ (void)raiseUnionInsideIntersectionError;
+ (void)raiseDifferentNumberOfElementsErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidHyperlinkError;
+ (void)raiseInvalidRangeUsageErrorForReference:(CDStruct_5744d895)arg1;
+ (void)raiseEmptyArgumentSpecificErrorForArgumentNumber:(int)arg1;
+ (void)raiseEmptyArgumentError;
+ (void)raiseInvalidTokenInFormulaError;
+ (void)raiseNoModeError;
+ (void)raiseIndirectErrorForRangeReference:(CDStruct_5744d895)arg1 hostTableID:(struct __CFUUID *)arg2 calculationEngine:(id)arg3;
+ (id)indirectErrorForRangeReference:(CDStruct_5744d895)arg1 hostTableID:(struct __CFUUID *)arg2 calculationEngine:(id)arg3;
+ (void)raiseInvalidArgumentsErrorForFunctionName:(id)arg1 argumentIndex:(int)arg2;
+ (void)raiseMixedTypeManipulationErrorForFunctionName:(id)arg1;
+ (void)raiseInvalidDateManipulationError;
+ (void)raiseDifferentNumberOfDataPointsErrorForFunctionName:(id)arg1;
+ (void)raiseStartNumberExceedsStringLengthErrorForFunctionName:(id)arg1;
+ (void)raiseMatchNotFoundErrorForValue:(id)arg1 functionName:(id)arg2;
+ (void)raiseOutOfBoundsArgumentErrorForArgument:(int)arg1 functionName:(id)arg2 lowerBound:(double)arg3 lowerBoundInclusive:(_Bool)arg4 upperBound:(double)arg5 upperBoundInclusive:(_Bool)arg6;
+ (void)raiseOutOfBoundsArgumentErrorForArgument:(int)arg1 functionName:(id)arg2 upperBound:(double)arg3 upperBoundInclusive:(_Bool)arg4;
+ (void)raiseOutOfBoundsArgumentErrorForArgument:(int)arg1 functionName:(id)arg2 lowerBound:(double)arg3 lowerBoundInclusive:(_Bool)arg4;
+ (id)invalidMergeReference:(CDStruct_5744d895)arg1 contextEntityID:(struct __CFUUID *)arg2;
+ (void)raiseErrorForInvalidReference:(CDStruct_5744d895)arg1 orString:(id)arg2 contextEntityID:(struct __CFUUID *)arg3 invalidMergeReference:(_Bool)arg4 disqualifiedFromEndCell:(_Bool)arg5;
+ (void)raiseErrorForInvalidReference:(CDStruct_5744d895)arg1 orString:(id)arg2 contextEntityID:(struct __CFUUID *)arg3;
+ (void)raiseErrorForInvalidReference;
+ (void)raiseArgumentSetUsedOutOfContextError;
+ (void)raiseValueNotAvailableErrorForFunctionName:(id)arg1;
+ (void)raiseAttachmentErrorInTextCell:(_Bool)arg1;
+ (void)raiseAutoNumberAttachmentErrorInTextCell:(_Bool)arg1;
+ (void)raiseZeroToPowerOfZeroError;
+ (void)raiseDivideByZeroError;
+ (void)raiseNumberErrorForFunctionName:(id)arg1;
+ (void)raiseNumberError;
+ (void)raiseUnkownFunctionErrorForString:(id)arg1;
+ (void)raiseTypeExceptionForValue:(struct TSCEValue)arg1 functionSpec:(id)arg2 argumentIndex:(int)arg3;
+ (void)raiseValueError;
+ (void)raiseInvalidArrayContentsError;
+ (void)p_RaiseErrorForDictionary:(id)arg1;
+ (_Bool)exceptionIsInvalidMergeReference:(id)arg1;
+ (id)attachmentError;
+ (id)autoNumberAttachmentError;
+ (id)badReferenceError;
+ (id)referenceToNonexistentTableError:(struct __CFUUID *)arg1;
+ (id)circularReferenceError;
+ (_Bool)p_DictionaryRepresentsInvalidMergeReference:(id)arg1;
+ (_Bool)exceptionIsRangeUsageError:(id)arg1;
+ (_Bool)exceptionIsCircularReferenceError:(id)arg1;
+ (_Bool)exceptionIsFromCalcEngine:(id)arg1;
+ (id)syntaxError;
+ (id)errorForToken:(id)arg1;
+ (id)errorWithDictionary:(id)arg1;
- (id)bakedString;
- (_Bool)isNativelyEqual:(struct TSCEValue)arg1;
- (struct TSCEReferenceValue *)referenceValue;
- (struct TSCEVector *)vector;
- (_Bool)boolean;
- (id)string;
- (id)date;
- (struct TSCENumberValue *)number;
- (struct TSCEReferenceValue *)referenceValueForFunction:(id)arg1 argumentIndex:(int)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (struct TSCEVector)formattedVectorForFunction:(id)arg1 argumentIndex:(int)arg2 context:(struct TSCEEvaluationContext *)arg3 format:(const struct TSUFormat *)arg4;
- (_Bool)booleanForFunction:(id)arg1 argumentIndex:(int)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (id)stringForFunction:(id)arg1 argumentIndex:(int)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (id)dateForFunction:(id)arg1 argumentIndex:(int)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (struct TSCENumberValue *)numberForFunction:(id)arg1 argumentIndex:(int)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (int)deepType;
- (int)nativeType;
- (void)dealloc;
- (void)setErrorDictionary:(id)arg1;
- (id)errorDictionary;
- (_Bool)isInvalidReference;
- (CDStruct_5744d895)rangeReference;
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 andDescend:(_Bool)arg3;
- (_Bool)isInvalidMergeReference;
- (_Bool)errorIsRangeUsageError;
- (_Bool)isCircularReferenceError;
- (_Bool)isFromCalcEngine;
- (_Bool)isSyntaxError;
- (id)tokenString;
- (id)displayStringWithCalculationEngine:(id)arg1 forTable:(struct __CFUUID *)arg2 andCellID:(CDStruct_0441cfb5)arg3;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isOfType:(id)arg1;
- (void)raiseException;
- (id)stringValue;
- (id)dateValue;
- (double)doubleValue;
- (id)error;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCESumAccumulator : NSObject
{
    NSDate *mDateAccumulator;
    double mSecondsToAdd;
    struct TSCENumberValue mNumberAccumulator;
    _Bool mMixedDurationsAndNumbers;
    _Bool mFoundANumber;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TSCEValue)resultForFunction:(id)arg1;
- (void)addValue:(struct TSCEValue)arg1 function:(id)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCELogicalTest : NSObject
{
    int mOperation;
    struct TSCENumberValue mValue;
    NSString *mString;
    NSDate *mDate;
    TSCERegexMatcher *mMatcher;
    struct TSCEWarningReportingContext *mWarningReportingContext;
}

+ (id)logicalTestWithCriterion:(struct TSCEValue)arg1 functionSpec:(id)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)cost;
- (_Bool)isEqual:(id)arg1;
- (_Bool)compare:(struct TSCEValue)arg1;
- (_Bool)compare:(struct TSCEValue)arg1 withContext:(struct TSCEEvaluationContext *)arg2;
- (int)criteriaParser:(id)arg1;
- (void)dealloc;
- (void)setRegexMatcher:(id)arg1;
- (void)setDate:(id)arg1;
- (void)setString:(id)arg1;
- (id)description;
- (id)initWithCriterion:(struct TSCEValue)arg1 functionSpec:(id)arg2 warningReportingContext:(struct TSCEWarningReportingContext *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCEValueContainer : NSObject
{
    struct TSCEValue mValue;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (struct TSCEValue)value;
- (id)initWithValue:(struct TSCEValue)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCERegexMatcher : NSObject
{
    NSRegularExpression *mRegex;
}

+ (id)regexMatcherWithStringMatch:(id)arg1;
- (void)dealloc;
- (_Bool)matches:(id)arg1;
- (id)initWithStringToMatch:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCELegacyGlobalID : NSObject <NSCopying, NSCoding>
{
    unsigned char mBytes[16];
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)stringForTableReferencesInNativeSyntax;
- (id)newStringForTableReferencesInNativeSyntax;
- (id)stringValue;
- (id)newStringValue;
- (unsigned int)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithString:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCEArgumentToken : NSObject
{
}

+ (_Bool)isStringValidArgumentToken:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEConfiguration : NSObject
{
    unsigned int mWarnWhenFormulasReferToEmptyCells:1;
}

+ (id)sharedCalculationEngineConfiguration;
- (void)setWarnWhenFormulasReferToEmptyCells:(_Bool)arg1;
- (_Bool)warnWhenFormulasReferToEmptyCells;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCETectonicShift : TSCEDependencyChanges
{
    CDStruct_d2bcd96c mShift;
    CDStruct_0ea164f0 mRangeForShift;
    CDStruct_0ea164f0 mRangeForDeletion;
    CDStruct_0ea164f0 mInsertedRange;
    _Bool mApplyToAbsolute;
    hash_map_a5107d4c mRelocatedMergedCells;
    hash_map_a5107d4c mRelocatedMergedCellsInverse;
    _Bool mInsertingAfter;
    _Bool mIgnoreStickyBits;
    CDStruct_0ea164f0 mTableRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)archive:(struct TectonicShiftArchive *)arg1;
- (id)initWithArchive:(const struct TectonicShiftArchive *)arg1;
- (id)description;
- (id)inverseRelocatedMergedCellsAsString;
- (id)relocatedMergedCellsAsString;
- (struct)insertedRange;
- (CDStruct_0441cfb5)remappedCellIDFromCellID:(CDStruct_0441cfb5)arg1 tableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3 type:(int)arg4 otherRangeComponent:(CDStruct_0441cfb5)arg5;
- (CDStruct_0441cfb5)remappedCellIDFromCellID:(CDStruct_0441cfb5)arg1 tableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3;
- (CDStruct_0441cfb5)inverseMappedCellIDFromCellID:(CDStruct_0441cfb5)arg1 tableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3;
- (struct)p_AdjustedRangeForShiftForCellID:(CDStruct_0441cfb5)arg1 type:(int)arg2 otherRangeComponent:(CDStruct_0441cfb5)arg3;
- (struct)remappedRangeFromRange:(struct)arg1 tableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3;
- (struct)deletedRange;
- (_Bool)isVertical;
- (CDStruct_d2bcd96c)gridShift;
- (struct)tableRange;
- (struct)affectedRange;
- (CDStruct_0441cfb5)p_CellIDConsideringRelocatedMerges:(CDStruct_0441cfb5)arg1;
- (id)shiftForUndo;
- (id)copyByAdjustingTableID:(struct __CFUUID *)arg1;
- (id)initWithUnscopedShiftUsingBaseCellID:(CDStruct_0441cfb5)arg1 targetCellID:(CDStruct_0441cfb5)arg2 ignoreStickyBits:(_Bool)arg3;
- (id)initForDeletionAtIndex:(unsigned short)arg1 amount:(unsigned short)arg2 vertically:(_Bool)arg3 tableID:(struct __CFUUID *)arg4 relocatedMergedCells:(const hash_map_a5107d4c *)arg5 tableRange:(struct)arg6;
- (id)initForInsertionAtIndex:(unsigned short)arg1 amount:(unsigned short)arg2 vertically:(_Bool)arg3 tableID:(struct __CFUUID *)arg4 insertingAfter:(_Bool)arg5 tableRange:(struct)arg6;
- (id)initWithShift:(CDStruct_d2bcd96c)arg1 forRange:(struct)arg2 deletedRange:(struct)arg3 tableID:(struct __CFUUID *)arg4 applyToAbsoluteReferences:(_Bool)arg5 relocatedMergedCells:(const hash_map_a5107d4c *)arg6 insertingAfter:(_Bool)arg7 ignoreStickyBits:(_Bool)arg8 tableRange:(struct)arg9 insertedRange:(struct)arg10;

@end

__attribute__((visibility("hidden")))
@interface TSCEFormulaMap : NSObject
{
    struct hash_map<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>, TSCEFormulaOwnerIDHash, TSCEFormulaOwnerIDEqual, std::__1::allocator<std::__1::pair<const __CFUUID *const, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>>> mOwnerToFormulasMap;
    int mCount;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)formulaEnumerator;
- (int)count;
- (void)addFormula:(struct TSCEFormula *)arg1 inOwner:(struct __CFUUID *)arg2 atCellCoordinate:(CDStruct_0441cfb5)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCEFormulaMapEnumerator : NSObject
{
    TSCEFormulaMap *mFormulaMap;
    struct __hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*>> {
        struct __hash_iterator<std::__1::__hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *>*> {
            struct __hash_node<std::__1::pair<const __CFUUID *, std::__1::vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>>>, void *> *__node_;
        } __i_;
    } mOwnersToFormulasIterator;
    struct __wrap_iter<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>*> {
        struct pair<TSUColumnRowCoordinate, TSCEFormula> *__i;
    } mFormulasForAnOwnerIterator;
}

- (id).cxx_construct;
- (struct TSCEFormula)nextFormulaGettingOwner:(const struct __CFUUID **)arg1 cellCoordinate:(CDStruct_0441cfb5 *)arg2;
- (_Bool)hasNext;
- (void)dealloc;
- (id)initWithFormulaMap:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEOwnerFormulaMap : NSObject
{
    struct vector<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, TSCEFormula>>> mFormulas;
    vector_40b16ab8 mNonFormulaCells;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchive:(struct OwnerFormulaMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct OwnerFormulaMapArchive *)arg1;
- (struct TSCEFormula *)formulaAtIndex:(unsigned long long)arg1 outCellCoordinate:(CDStruct_0441cfb5 *)arg2;
- (unsigned long long)count;
- (void)addFormula:(struct TSCEFormula *)arg1 atCellCoordinate:(CDStruct_0441cfb5)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCECalcTimeoutObject : NSObject
{
    double _timeoutInterval;
    NSString *_blockingIdentifier;
}

@property(readonly) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(readonly) NSString *blockingIdentifier; // @synthesize blockingIdentifier=_blockingIdentifier;
- (void)dealloc;
- (id)initWithTimeout:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEEdgeListPrinter : NSObject
{
    NSMutableDictionary *_edgesForOwner;
}

- (id)stringForEdgesWithLimit:(unsigned long long)arg1;
- (id)stringForOwnerID:(id)arg1 withLimit:(unsigned long long)arg2;
- (void)addEdge:(id)arg1 forOwner:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCECellDependencyRowPrinter : NSObject
{
    NSString *_cellID;
    unsigned long long _dirtyPrecedentCount;
    _Bool _isFormula;
    _Bool _isInCycle;
    TSCEEdgeListPrinter *_precedentsList;
    TSCEEdgeListPrinter *_dependentsList;
}

@property(nonatomic) _Bool isInCycle; // @synthesize isInCycle=_isInCycle;
@property(nonatomic) _Bool isFormula; // @synthesize isFormula=_isFormula;
@property(nonatomic) unsigned long long dirtyPrecedentCount; // @synthesize dirtyPrecedentCount=_dirtyPrecedentCount;
@property(retain, nonatomic) NSString *cellID; // @synthesize cellID=_cellID;
- (id)stringForDependencyRow;
- (void)addDependentWithCellID:(id)arg1 forOwner:(id)arg2;
- (void)addPrecedentWithCellID:(id)arg1 forOwner:(id)arg2;
- (long long)numericCompare:(id)arg1;
- (void)dealloc;
- (id)initWithCellID:(id)arg1 dirtyPrecedentCount:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCECellDependenciesPrinter : NSObject
{
    NSString *_ownerName;
    unsigned long long _numDirtyCells;
    _Bool _showCleanCells;
    NSMutableArray *_dirtyCellDependencyRows;
    NSMutableArray *_cleanCellDependencyRows;
}

@property(nonatomic) _Bool showCleanCells; // @synthesize showCleanCells=_showCleanCells;
@property(nonatomic) unsigned long long numDirtyCells; // @synthesize numDirtyCells=_numDirtyCells;
@property(retain, nonatomic) NSString *ownerName; // @synthesize ownerName=_ownerName;
- (id)description;
- (void)addDependencyRow:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCECellCoordinateVector : NSObject
{
    vector_40b16ab8 mCellCoordinates;
    NSObject<OS_dispatch_semaphore> *mSem;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchive:(struct CellCoordinateVectorArchive *)arg1;
- (id)initWithArchive:(const struct CellCoordinateVectorArchive *)arg1;
- (void)removeAllCellCoordinates;
- (void)addCellCoordinate:(CDStruct_0441cfb5)arg1;
- (vector_40b16ab8 *)cellCoordinates;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCEFormulaRewriteCommand : TSKCommand <TSKInnerCommandsProvider>
{
    TSKCommand *mTableRewriteCommand;
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithContext:(id)arg1 rewriteCommand:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCENamedReferenceManager : TSPObject <TSCEReferenceTrackerDelegate>
{
    TSCENamedReferenceTrie *mNames;
    struct __CFDictionary *mStringsByTrackedReferenceByTable;
    struct __CFSet *mTablesBeingTracked;
    TSCEReferenceTracker *mReferenceTracker;
    TSCECalculationEngine *mCalculationEngine;
}

- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)description;
- (void)trackedReferenceWasDeleted:(id)arg1 fromOwnerID:(struct __CFUUID *)arg2;
- (id)cellRangeWasInserted:(CDStruct_5744d895)arg1;
- (_Bool)shouldRewriteOnTranspose;
- (_Bool)shouldRewriteOnCellMerge;
- (_Bool)shouldRewriteOnTectonicShift;
- (_Bool)shouldRewriteOnRangeMove;
- (_Bool)shouldRewriteOnSort;
- (void)referencedCellWasModified:(id)arg1;
- (_Bool)trackedReferencesExistForTable:(struct __CFUUID *)arg1;
- (void)updateTrackedHeaders:(struct __CFUUID *)arg1;
- (id)commandForUpdatingWithSpec:(id)arg1 formulas:(id)arg2;
- (id)trackedReferencesExactlyMatchingString:(id)arg1 scopedToTable:(struct __CFUUID *)arg2;
- (id)trackedReferencesMatchingPrefix:(id)arg1;
- (id)trackedReferencesMatchingPrefix:(id)arg1 scopedToTable:(struct __CFUUID *)arg2;
- (_Bool)referenceNameIsUnique:(id)arg1 forReference:(CDStruct_5744d895)arg2 contextTable:(struct __CFUUID *)arg3;
- (id)stringForTrackedReference:(id)arg1 inTable:(struct __CFUUID *)arg2;
- (id)referenceForTrackedReference:(id)arg1 sticky:(_Bool)arg2;
- (CDStruct_5744d895)rangeForTrackedReference:(id)arg1 gettingTrackedCell:(CDStruct_78b871e1 *)arg2;
- (id)referenceTracker;
- (void)endTrackingNamesInTable:(struct __CFUUID *)arg1;
- (void)beginTrackingNameInCell:(CDStruct_0441cfb5)arg1 ofResolver:(id)arg2 addingTrackedReferencesTo:(id)arg3;
- (void)beginTrackingNamesInRange:(struct)arg1 ofResolver:(id)arg2 addingTrackedReferencesTo:(id)arg3;
- (id)beginTrackingNamesInTable:(struct __CFUUID *)arg1 limitedToRange:(struct)arg2;
- (void)headerCellContentWasModified:(id)arg1;
- (struct __CFUUID *)formulaOwnerID;
- (void)setCalculationEngine:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 calculationEngine:(id)arg2;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCETrackedReference : NSObject <NSCopying>
{
    struct TSCEASTNodeArray *mAST;
    CDStruct_a91f2c80 mFormulaID;
}

- (id).cxx_construct;
- (id)initWithTrackedReferenceTSPObjectDeprecated:(id)arg1;
- (id)initFromArchive:(const struct TrackedReferenceArchive *)arg1;
- (void)encodeToArchive:(struct TrackedReferenceArchive *)arg1 archiver:(id)arg2;
- (id)displayStringWithCalculationEngine:(id)arg1;
- (id)description;
- (_Bool)isValidWithReferenceTracker:(id)arg1;
- (void)registerWithCalculationEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (id)referenceEnumeratorWithCalculationEngine:(id)arg1 referenceTrackerID:(struct __CFUUID *)arg2;
- (struct TSCEASTNodeArray *)ast;
- (void)setFormulaID:(CDStruct_a91f2c80)arg1;
- (CDStruct_a91f2c80)formulaID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)replaceContentsWithContentsOfTrackedReference:(id)arg1;
- (id)initByCopyingASTNodeArray:(struct TSCEASTNodeArray *)arg1 formulaID:(CDStruct_a91f2c80)arg2;
- (void)p_rewriteWithSpec:(id)arg1;
- (id)initWithCReference:(CDStruct_39788696)arg1 formulaID:(CDStruct_a91f2c80)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCEReferenceTracker : TSPObject <TSCEFormulaOwning>
{
    struct __CFUUID *mUUID;
    TSCECalculationEngine *mCalculationEngine;
    _Bool mIsRegisteredWithCalculationEngine;
    id <TSCEReferenceTrackerDelegate> mDelegate;
    NSMutableArray *mTrackedReferences;
    unsigned long long mNextEmptyTrackedReferencesIndex;
    NSMutableArray *mFormulaIDsToRewrite;
    unsigned long long mNumberOfTrackedReferences;
}

- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (_Bool)trackedReferencesExistForTable:(struct __CFUUID *)arg1;
- (void)trackedReferenceWasDeleted:(id)arg1 fromOwnerID:(struct __CFUUID *)arg2;
- (id)cellRangeWasInserted:(CDStruct_5744d895)arg1;
- (id)trackedReferenceAtID:(CDStruct_a91f2c80)arg1;
- (void)setFormulaOwnerID:(struct __CFUUID *)arg1;
- (struct __CFUUID *)formulaOwnerID;
- (unsigned long long)numberOfTrackedReferences;
- (id)allTrackedReferences;
- (id)allTrackedReferencesIntersectingReference:(CDStruct_39788696)arg1;
- (void)endTrackingReference:(id)arg1;
- (id)beginTrackingReferenceWithCReference:(CDStruct_39788696)arg1;
- (void)beginTrackingReference:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)calculationEngine;
- (void)setCalculationEngine:(id)arg1;
- (void)unregisterFromCalculationEngine;
- (void)registerWithCalculationEngine:(_Bool)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 calculationEngine:(id)arg2 delegate:(id)arg3;
- (id)objectToArchiveInDependencyTracker;
- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(id)arg1;
- (void)retainForCalculationEngine:(id)arg1;
- (id)endRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(id)arg3;
- (void)invalidateForCalculationEngine:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCETrackedReferencesRewriteCommand : TSKCommand
{
    TSCEFormulaRewriteSpec *mRewriteSpec;
    TSCEReferenceTracker *mReferenceTracker;
}

- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithContext:(id)arg1 rewriteSpec:(id)arg2 referenceTracker:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCENamedReferenceTrie : NSObject
{
    struct TSCENamedReferenceTrieNode mRoot;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (id)trackedReferencesExactlyMatchingString:(id)arg1 scopedToTable:(struct __CFUUID *)arg2;
- (id)trackedReferencesMatchingString:(id)arg1 scopedToTable:(struct __CFUUID *)arg2;
- (_Bool)replaceName:(id)arg1 withName:(id)arg2 inTable:(struct __CFUUID *)arg3 trackedReference:(id)arg4;
- (void)deleteName:(id)arg1 inTable:(struct __CFUUID *)arg2 trackedReference:(id)arg3;
- (_Bool)insertName:(id)arg1 inTable:(struct __CFUUID *)arg2 trackedReference:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCEReferenceEnumerator : NSObject
{
    struct TSCEASTNodeArray *mAST;
    struct TSCEASTNodeArrayReferenceIteratorState *mReferenceIteratorState;
}

- (const CDStruct_39788696 *)nextReference;
- (void)dealloc;
- (id)initWithCalculationEngine:(id)arg1 defaultFormulaOwnerID:(struct __CFUUID *)arg2 nodeArray:(const struct TSCEASTNodeArray *)arg3 myHostCellID:(CDStruct_0441cfb5)arg4 doImplicitIntersection:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCEReference : NSObject
{
    CDStruct_39788696 mRef;
    NSString *mOverrideText;
    NSString *mOverrideTextAsTyped;
    unsigned char mStickyBits;
    _Bool mWasConstructedViaNames;
}

- (id).cxx_construct;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (id)referenceTextForAutocompleteWithCalculationEngine:(id)arg1 contextSheetName:(id)arg2 stickyBits:(unsigned char)arg3 inputString:(id)arg4 inputStringIsComplete:(_Bool)arg5;
- (id)referenceTextForAutocompleteWithCalculationEngine:(id)arg1 hostTableID:(struct __CFUUID *)arg2 stickyBits:(unsigned char)arg3 inputString:(id)arg4 inputStringIsComplete:(_Bool)arg5;
- (id)p_stringByUnescapingQuotedStringWithPossibleDollarPrefix:(id)arg1 partial:(_Bool)arg2;
- (id)referenceTextWithCalculationEngine:(id)arg1 contextSheetName:(id)arg2;
- (id)referenceTextWithCalculationEngine:(id)arg1 hostTableID:(struct __CFUUID *)arg2;
- (struct __CFUUID *)tableID;
- (CDStruct_5744d895)rangeReference;
- (CDStruct_39788696)cReference;
- (_Bool)wasConstructedViaNames;
- (void)setWasConstructedViaNames:(_Bool)arg1;
- (unsigned char)stickyBits;
- (void)setStickyBits:(unsigned char)arg1;
- (id)overrideTextAsTyped;
- (void)setOverrideTextAsTyped:(id)arg1;
- (id)overrideText;
- (void)setOverrideText:(id)arg1;
- (id)initWithCellReference:(CDStruct_78b871e1)arg1;
- (id)initWithRangeReference:(CDStruct_5744d895)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCECalendar : NSObject
{
    NSCalendar *mCalendar;
    NSObject<OS_dispatch_semaphore> *mSem;
}

- (void)dealloc;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned long long)arg4;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned long long)arg3;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2;
- (id)dateFromComponents:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (id)initWithCalendarIdentifier:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCETrackedReferenceTSPObjectDeprecated : TSPObject
{
    struct TSCEASTNodeArray *mAST;
    CDStruct_a91f2c80 mFormulaID;
}

- (id).cxx_construct;
- (void)encodeToArchive:(struct TrackedReferenceArchive *)arg1;
- (void)saveToArchiver:(id)arg1;
- (CDStruct_a91f2c80)formulaID;
- (struct TSCEASTNodeArray *)ast;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEStringCellValue : TSCECellValue
{
    struct TSCEStringValue *mStringValue;
}

- (void)encodeToArchive:(struct StringCellValueArchive *)arg1;
- (id)initWithArchive:(const struct StringCellValueArchive *)arg1;
- (_Bool)isEqualToCellValue:(id)arg1;
- (id)displayString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (CDStruct_bfed0e84)formatStruct;
- (struct TSCEStringValue *)stringValue;
- (void)dealloc;
- (id)initWithStringValue:(struct TSCEStringValue *)arg1;
- (id)initWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCECellValue : NSObject
{
    int mValueType;
}

@property(nonatomic) int valueType; // @synthesize valueType=mValueType;
- (void)encodeCellValueToArchive:(struct CellValueArchive *)arg1;
- (id)initCellValueWithArchive:(const struct CellValueArchive *)arg1;
- (_Bool)isEqualToCellValue:(id)arg1;
- (CDStruct_bfed0e84)formatStruct;
- (id)displayString;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCEBooleanCellValue : TSCECellValue
{
    struct TSCEBooleanValue *mBooleanValue;
}

- (void)encodeToArchive:(struct BooleanCellValueArchive *)arg1;
- (id)initWithArchive:(const struct BooleanCellValueArchive *)arg1;
- (_Bool)isEqualToCellValue:(id)arg1;
- (id)displayString;
- (CDStruct_bfed0e84)formatStruct;
- (struct TSCEBooleanValue *)booleanValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithBooleanValue:(struct TSCEBooleanValue *)arg1;
- (id)initWithBoolean:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCEDateCellValue : TSCECellValue
{
    struct TSCEDateValue *mDateValue;
}

- (void)encodeToArchive:(struct DateCellValueArchive *)arg1;
- (id)initWithArchive:(const struct DateCellValueArchive *)arg1;
- (_Bool)isEqualToCellValue:(id)arg1;
- (id)displayString;
- (CDStruct_bfed0e84)formatStruct;
- (struct TSCEDateValue *)dateValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDateValue:(struct TSCEDateValue *)arg1;
- (id)initWithDate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCENumberCellValue : TSCECellValue
{
    struct TSCENumberValue *mNumberValue;
}

- (void)encodeToArchive:(struct NumberCellValueArchive *)arg1;
- (id)initWithArchive:(const struct NumberCellValueArchive *)arg1;
- (_Bool)isEqualToCellValue:(id)arg1;
- (id)displayString;
- (CDStruct_bfed0e84)formatStruct;
- (struct TSCENumberValue *)numberValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithNumberValue:(struct TSCENumberValue *)arg1;
- (id)initWithDouble:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCENilCellValue : TSCECellValue
{
}

- (_Bool)isEqualToCellValue:(id)arg1;
- (CDStruct_bfed0e84)formatStruct;
- (id)displayString;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCEUnpersistedStorage : TSWPStorage
{
}

+ (id)copyStorageUnpersisted:(id)arg1;
- (id)copyPersistedWithContext:(id)arg1;
- (void)willModify;

@end

__attribute__((visibility("hidden")))
@interface TSMTraceFileParser : NSObject
{
    NSData *mData;
    struct TSMTraceRecord_s *mRecordBuffer;
    unsigned long long mOffset;
    unsigned long long mDataLength;
}

+ (id)parserWithData:(id)arg1;
+ (_Bool)dataIsTraceFile:(id)arg1;
- (struct TSMTraceRecord_s *)nextTraceRecord;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSMTraceBuffer : NSObject
{
    NSString *mTag;
    long long mBufferID;
    long long mBufferSize;
    _Bool mSynchronizedAccess;
    NSFileHandle *mFileHandle;
    TSMTraceController *mController;
    long long mCurrentIndex;
    struct __CFData *mData;
    _Bool mActive;
    unsigned int mFilters[256];
    struct _opaque_pthread_mutex_t mLock;
}

+ (id)bufferWithTag:(id)arg1 size:(long long)arg2;
@property(retain, nonatomic) TSMTraceController *controller; // @synthesize controller=mController;
@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=mFileHandle;
@property(readonly, nonatomic) _Bool active; // @synthesize active=mActive;
@property(nonatomic) _Bool synchronizedAccess; // @synthesize synchronizedAccess=mSynchronizedAccess;
@property(readonly, nonatomic) long long bufferSize; // @synthesize bufferSize=mBufferSize;
@property(readonly, nonatomic) long long bufferID; // @synthesize bufferID=mBufferID;
@property(readonly, nonatomic) NSString *tag; // @synthesize tag=mTag;
- (void)setBufferID:(long long)arg1;
- (void)flush;
- (void)start;
- (void)stop;
- (void)writeTraceRecord:(struct TSMTraceRecord_s *)arg1 withFilter:(unsigned int)arg2;
- (void)setFilter:(unsigned int)arg1 forModule:(int)arg2;
- (unsigned int)filterForModule:(int)arg1;
@property(readonly, nonatomic) unsigned int *filters;
- (void)dealloc;
- (id)initWithTag:(id)arg1 size:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSMTraceController : NSObject
{
    NSMutableArray *mBuffers;
    NSString *mTraceDirectory;
    long long mLastBufferID;
    NSDictionary *mBuildInfo;
    int mModuleCache[256];
    unsigned int mFilterCache[256];
}

+ (void)flushAllBuffers;
+ (void)startTracing;
+ (void)stopTracing;
+ (void)closeBufferWithID:(long long)arg1;
+ (void)addBuffer:(id)arg1;
+ (id)bufferByID:(long long)arg1;
+ (long long)addBufferWithTag:(id)arg1 size:(long long)arg2 synchronized:(_Bool)arg3;
+ (long long)addBufferWithTag:(id)arg1 size:(long long)arg2;
+ (id)traceDirectory;
+ (void)shutdown;
+ (_Bool)setup;
@property(readonly, nonatomic) NSString *traceDirectory; // @synthesize traceDirectory=mTraceDirectory;
- (void)p_buffer:(id)arg1 changedModule:(int)arg2 toFilter:(unsigned int)arg3 from:(unsigned int)arg4;
- (void)writeTraceRecord:(struct TSMTraceRecord_s *)arg1 withFilter:(unsigned int)arg2;
- (void)closeBuffer:(id)arg1;
- (void)p_writeBuildInfoToFile:(id)arg1;
- (long long)addBuffer:(id)arg1;
- (id)bufferByID:(long long)arg1;
- (void)startTracing;
- (void)stopTracing;
- (void)flushAllBuffers;
- (id)buffers;
- (void)dealloc;
- (id)init;
- (long long)p_newBufferID;
- (id)p_createTraceDirectory;

@end

__attribute__((visibility("hidden")))
@interface TSMTraceDecoder : NSObject
{
}

+ (id)decoder;
- (id)stringForRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForRawTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSCalculationEngineTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForKeynoteTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSTablesTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForBuildInfoTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSTextTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForSystemTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSUQuickTestTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSPersistenceTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSKitTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSDrawablesTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSChartsTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForCompatibilityTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSApplicationTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForNumbersTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForPagesTraceRecord:(struct TSMTraceRecord_s *)arg1;
- (id)stringForTSMeasurementTraceRecord:(struct TSMTraceRecord_s *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSMTraceCollector : NSObject
{
}

+ (id)computeAvgMinAndPrevWithTag:(id)arg1 andKeyEncode:(CDUnknownBlockType)arg2 andValueEncode:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSAStyleMapper : TSSStyleMapper
{
}

- (_Bool)shouldMapParentOfStyle:(id)arg1;
- (id)stylesheetForNewRootStyleFromStyle:(id)arg1;
- (id)targetParentForStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSACommandReplaceCustomFormat : TSKCommand
{
    unsigned int _customFormatID;
    TSUCustomFormatWrapper *_customFormat;
    TSUFormatObject *_replacementFormat;
}

@property(copy) TSUFormatObject *replacementFormat; // @synthesize replacementFormat=_replacementFormat;
@property unsigned int customFormatID; // @synthesize customFormatID=_customFormatID;
@property(copy) TSUCustomFormatWrapper *customFormat; // @synthesize customFormat=_customFormat;
- (void)saveToArchive:(struct ReplaceCustomFormatCommandArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct ReplaceCustomFormatCommandArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (id)p_formatObjectForCustomFormat:(id)arg1 customFormatID:(unsigned int)arg2;
- (_Bool)process;
- (id)p_customFormatList;
- (id)p_documentRoot;
- (void)dealloc;
- (id)initWithContext:(id)arg1 customFormat:(id)arg2 replacementFormat:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSABaseApplicationDelegate : TSKApplicationDelegate
{
    TSADocumentRoot *mDocumentRoot;
    id <TSADownloadDelegate> _downloadDelegate;
}

+ (void)resetSharedConfigurations;
+ (id)sharedDelegate;
@property(retain, nonatomic) id <TSADownloadDelegate> downloadDelegate; // @synthesize downloadDelegate=_downloadDelegate;
@property(nonatomic) TSADocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
- (id)existingNestedDocumentPathForPath:(id)arg1;
- (_Bool)URLIsValidForImportedHyperlink:(id)arg1;
- (_Bool)openURL:(id)arg1;
- (id)invalidURLSchemes;
- (double)maximumAspectRatioForPreviewImage;
- (double)mimimumAspectRatioForPreviewImage;
- (id)applicationTemplateVariantsForLocale:(struct __CFLocale *)arg1;
@property(readonly, nonatomic) NSArray *applicationTemplateVariants;
- (void)registerDefaults;
- (_Bool)isReadableDocumentType:(id)arg1;
@property(readonly, nonatomic) NSArray *importableDocumentTypes;
@property(readonly, nonatomic) NSArray *readableDocumentTypes;
@property(readonly, nonatomic) NSString *nativeSFFDocumentType;
@property(readonly, nonatomic) NSString *tangierEditingFormatDocumentType;
@property(readonly, nonatomic) NSString *templateDocumentExtension;
@property(readonly, nonatomic) NSString *templateSFFDocumentType;
@property(readonly, nonatomic) NSString *templateDocumentType;
@property(readonly, nonatomic) NSString *nativeDocumentExtension;
@property(readonly, nonatomic) NSString *nativeDocumentType;
- (void)persistenceError:(id)arg1;
- (Class)documentRootClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSADocumentRoot : TSWPDocumentRoot <TSKImportExportDelegate>
{
    int _needsToCaptureViewState;
    id <TSADocumentRootDelegate> _delegate;
    NSMutableDictionary *_upgradeState;
    TSKViewState *_viewState;
    NSMutableSet *_warnings;
    NSString *_creationLanguage;
    unsigned long long _creationLanguageWritingDirection;
    TSCECalculationEngine *_calculationEngine;
    TSAFunctionBrowserState *_functionBrowserState;
    TSTCustomFormatList *_tablesCustomFormatList;
    TSAShortcutController *_shortcutController;
    TSAAnnotationCache *_annotationCache;
    _Bool _needsMovieCompatibilityUpgrade;
    _Bool _isClosed;
    NSString *_templateIdentifier;
    long long _documentCacheOnceToken;
    NSObject<OS_dispatch_queue> *_documentCacheDecryptionKeyAccessQueue;
    SFUCryptoKey *_documentCacheDecryptionKey;
    _Bool _hasPreUFFVersion;
    NSArray *_buildVersionHistory;
}

+ (id)persistenceWarningsForData:(id)arg1 isReadable:(_Bool)arg2 isExternal:(_Bool)arg3;
+ (unsigned long long)previewTypeForCurrentDevice;
+ (struct CGSize)previewImageMaxSizeForType:(unsigned long long)arg1;
+ (struct CGSize)previewImageSizeForType:(unsigned long long)arg1;
+ (void)writePreviewImage:(id)arg1 group:(id)arg2 queue:(id)arg3 dataConsumerProvider:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)writePreviewImage:(id)arg1 toPath:(id)arg2 withIntermediateDirectories:(_Bool)arg3 name:(id)arg4 group:(id)arg5 queue:(id)arg6 completion:(CDUnknownBlockType)arg7;
+ (_Bool)writePreviewImagesToPackageDataWriter:(id)arg1 scalableImage:(id)arg2 group:(id)arg3 queue:(id)arg4;
+ (_Bool)writePreviewImagesToPath:(id)arg1 scalableImage:(id)arg2 group:(id)arg3 queue:(id)arg4;
+ (void)removeExistingPreviewsForDocumentAtPath:(id)arg1;
+ (_Bool)writePreviewImagesToPackageDataWriter:(id)arg1 scalableImage:(id)arg2;
+ (_Bool)writePreviewImagesToPath:(id)arg1 scalableImage:(id)arg2;
+ (id)scaledPreviewImageForType:(unsigned long long)arg1 scalableImage:(id)arg2;
+ (id)supportedPreviewImageExtensions;
+ (id)buildVersionHistoryPathPreUFF;
+ (id)buildVersionHistoryPath;
+ (void)localizeChartInfo:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeTextStorage:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeTableInfo:(id)arg1 withTemplateBundle:(id)arg2;
+ (void)localizeModelObject:(id)arg1 withTemplateBundle:(id)arg2;
@property(nonatomic) _Bool hasPreUFFVersion; // @synthesize hasPreUFFVersion=_hasPreUFFVersion;
@property(nonatomic) id <TSADocumentRootDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *buildVersionHistory; // @synthesize buildVersionHistory=_buildVersionHistory;
- (_Bool)isMultiPageForQuickLook;
- (_Bool)hasICloudConflict;
- (id)commandForPropagatingPresetChangeCommand:(id)arg1 alwaysPreserveAppearance:(_Bool)arg2;
- (id)readBuildVersionHistoryFromDiskHasPreUFFVersion:(_Bool)arg1;
@property(readonly, nonatomic, getter=isDocumentEditedSinceLastSave) _Bool documentEditedSinceLastSave;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, nonatomic) NSString *name;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (struct CGImageSource *)newImageSourceForDocumentCachePath:(id)arg1;
- (_Bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (void)didSaveWithEncryptionChange;
- (void)documentCacheWasInvalidated;
- (id)dataFromDocumentCachePath:(id)arg1;
- (id)p_documentCacheDecryptionKey;
- (id)p_documentCacheDecryptionKeyAccessQueue;
- (void)p_initializeDocumentCacheIfNeeded;
- (id)documentCachePath;
- (id)referencedStylesOfClass:(Class)arg1;
- (_Bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(_Bool)arg2;
- (void)upgradeTextboxPresets;
- (void)upgradeTextStylesForUnityPlusFromFileFormatVersion:(unsigned long long)arg1;
- (void)upgradeTextStylesForUnity;
- (void)enumerateStylesheetsUsingBlock:(CDUnknownBlockType)arg1;
- (void)p_replaceStyle:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_replaceStyles:(id)arg1 andChildrenWithVariationOfStyle:(id)arg2;
- (void)p_removeStyles:(id)arg1;
- (void)performHyperlinkUpgradesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)performStylesheetUpdatesIfNecessaryForVersion:(unsigned long long)arg1;
- (void)pUpgradeHyperlinks;
- (void)pUpgradeHyperlinksInStorage:(id)arg1;
- (id)p_parseNumberOutOfBasename:(id)arg1 hasNumber:(_Bool *)arg2 number:(unsigned long long *)arg3;
- (void)insertTextPresetDisplayItemsPreservingGrouping:(id)arg1 insertAtBeginningOfGroup:(_Bool)arg2;
- (id)protected_defaultTextPresetOrdering;
- (void)prepareForSavingAsTemplate;
- (void)removeWarning:(id)arg1;
- (void)addWarning:(id)arg1;
- (id)warnings;
- (_Bool)exportToPath:(id)arg1 exporter:(id)arg2 delegate:(id)arg3 error:(id *)arg4;
- (_Bool)exportToPath:(id)arg1 exporter:(id)arg2 error:(id *)arg3;
- (id)newExporterForType:(id)arg1 options:(id)arg2 preferredType:(id *)arg3;
- (void)importerDidFinish:(id)arg1;
- (void)p_registerAllFormulasAfterImport;
- (void)didDownloadDocumentResources:(id)arg1 failedOrCancelledDocumentResources:(id)arg2 error:(id)arg3;
- (id)warningLocationDescriptionForAffectedObjects:(id)arg1 sortingInfo:(id *)arg2;
- (id)warningsByCombiningSortedWarnings:(id)arg1 withWarnings:(id)arg2;
- (long long)compareLocationSortingInfo:(id)arg1 toSortingInfo:(id)arg2;
- (id)consolidatedDocumentWarningsFromWarnings:(id)arg1;
@property(readonly, nonatomic) NSSet *missingFontWarningMessages;
- (void)prepareToGeneratePreview;
- (id)previewImageForSize:(struct CGSize)arg1;
- (id)previewImage;
- (void)blockForRecalcWithTimeout:(double)arg1;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
- (void)resumeBackgroundActivities;
- (void)suspendBackgroundActivities;
- (void)invalidateViewState;
- (id)createViewStateRoot;
- (void)updateViewStateWithRoot:(id)arg1;
- (id)captureViewState;
- (void)captureViewStateIfNeeded;
@property(readonly, nonatomic) TSKViewState *viewState;
- (void)setCustomFormatList:(id)arg1;
- (id)customFormatList;
- (void)setFunctionBrowserState:(id)arg1;
- (id)functionBrowserState;
- (void)setShortcutController:(id)arg1;
- (id)shortcutController;
- (void)setAnnotationCache:(id)arg1;
- (id)annotationCache;
- (void)initializeForImport;
- (void)setCalculationEngine:(id)arg1;
- (id)calculationEngine;
- (void)willClose;
- (void)fulfillPasteboardPromises;
- (id)additionalDocumentPropertiesForWrite;
- (id)packageDataForWrite;
- (void)saveToArchive:(struct DocumentArchive *)arg1 archiver:(id)arg2;
- (void)documentDidSave;
- (void)loadFromArchive:(const struct DocumentArchive *)arg1 unarchiver:(id)arg2;
- (void)stashUpgradeState:(const struct DocumentArchive *)arg1 unarchiver:(id)arg2;
- (id)upgradeState;
- (void)documentDidLoad;
- (void)dealloc;
- (unsigned long long)writingDirection;
- (void)updateWritingDirection:(unsigned long long)arg1;
- (void)p_updateCreationLanguage;
- (void)p_updateBuildVersionHistoryWithVersionOfTemplateBundle:(id)arg1;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
- (id)init;
- (id)initWithContext:(id)arg1;
@property(nonatomic) _Bool needsMovieCompatibilityUpgrade;
@property(copy, nonatomic) NSString *templateIdentifier;
- (void)setCreationLanguage:(id)arg1;
- (id)creationLanguage;
- (id)namedTextStyles;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool importingDesignDemoDoc;
@property(readonly, nonatomic) _Bool isBrowsingVersions;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSAExportableDocumentType : NSObject
{
    NSString *_type;
    NSString *_localizedName;
    TSUColor *_exportFormatChooserItemTextColor;
    NSString *_exportProgressMessage;
}

+ (id)exportableTypeWithType:(id)arg1 localizedName:(id)arg2 exportFormatChooserItemTextColor:(id)arg3 exportProgressMessage:(id)arg4;
+ (id)exportableTypeWithType:(id)arg1 localizedName:(id)arg2 exportFormatChooserItemTextColor:(id)arg3;
@property(readonly, nonatomic) NSString *exportProgressMessage; // @synthesize exportProgressMessage=_exportProgressMessage;
@property(readonly, nonatomic) TSUColor *exportFormatChooserItemTextColor; // @synthesize exportFormatChooserItemTextColor=_exportFormatChooserItemTextColor;
@property(readonly, nonatomic) NSString *localizedName; // @synthesize localizedName=_localizedName;
@property(readonly, nonatomic) NSString *type; // @synthesize type=_type;
- (id)description;
- (void)dealloc;
- (id)initWithType:(id)arg1 localizedName:(id)arg2 exportFormatChooserItemTextColor:(id)arg3 exportProgressMessage:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSAAnnotationCache : TSPObject
{
    NSArray *_annotations;
}

@property(retain) NSArray *annotations; // @synthesize annotations=_annotations;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct AnnotationCacheArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct AnnotationCacheArchive *)arg1 unarchiver:(id)arg2;
- (void)documentWillUnload;
- (void)documentDidLoad;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSATheme : TSSTheme
{
}

+ (id)localizedTitleForCreateStyleMenuItem:(id)arg1;
+ (id)localizedTitleForApplyStyleMenuItem:(id)arg1;
+ (id)localizedNameForStylePickerTitle:(id)arg1;
+ (id)localizedNameForPresetKind:(id)arg1;
+ (void)registerPresetSourceClasses;
- (void)saveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSAPreviewImageUtility : NSObject
{
}

+ (struct CGImage *)newPrerenderedImageFromImage:(struct CGImage *)arg1;
+ (void)drawInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2 image:(struct CGImage *)arg3 imageSize:(struct CGSize)arg4 scaledSize:(struct CGSize)arg5 scale:(double)arg6 flip:(_Bool)arg7;
+ (id)scaleImage:(struct CGImage *)arg1 toSize:(struct CGSize)arg2 scale:(double)arg3;
+ (_Bool)imageIsOpaque:(struct CGImage *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSAServerApplicationDelegate : NSObject
{
    TSABaseApplicationDelegate *_baseApplicationDelegate;
}

+ (id)sharedDelegate;
@property(retain, nonatomic) TSABaseApplicationDelegate *baseApplicationDelegate; // @synthesize baseApplicationDelegate=_baseApplicationDelegate;
- (id)initWithBaseApplicationDelegate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSAPdfHyperlinkController : NSObject
{
    NSMutableArray *mHyperlinks;
}

- (void)p_commitDestinationToPDF:(id)arg1 cgrect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (void)p_commitUrlToPDF:(id)arg1 cgrect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (void)p_combineSimilarElements:(id)arg1;
- (id)p_chopBezierIntoRects:(id)arg1;
- (id)p_splitIntoSubshapes:(id)arg1;
- (id)p_hyperlinkRegionsForRep:(id)arg1 context:(struct CGContext *)arg2;
- (void)commitHyperlinksToPDF:(struct CGContext *)arg1 targetRect:(struct CGRect)arg2;
- (void)addHyperlinksForContents:(id)arg1 context:(struct CGContext *)arg2;
- (void)addHyperlinksForRep:(id)arg1 context:(struct CGContext *)arg2;
- (void)addHyperlinkForRect:(struct CGRect)arg1 withUrl:(id)arg2 context:(struct CGContext *)arg3;
- (struct CGRect)canvasRect;
- (id)destinationFromUrl:(id)arg1;
- (_Bool)isDestination:(id)arg1;
- (_Bool)ignoreUrl:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSAPdfRenderingExporterDelegate : NSObject <TSARenderingExporterDelegate>
{
    TSARenderingExporter *mRenderingExporter;
    NSString *mPassphraseOpen;
    NSString *mPassphrasePrintCopy;
    _Bool mRequireOpenPassword;
    _Bool mRequireCopyPassword;
    _Bool mRequirePrintPassword;
    int mRenderingQuality;
    double mMaxPixels;
}

- (void)setMaxPixels:(double)arg1;
- (_Bool)supportsRenderingQuality;
- (_Bool)supportsPaging;
- (void)releaseCGContext:(struct CGContext *)arg1;
- (struct CGContext *)newCGContextForURL:(id)arg1;
- (double)viewScale;
- (void)teardown;
- (void)setup;
- (int)renderingQuality;
- (void)setRenderingQuality:(int)arg1;
- (void)setCopyPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPrintPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPassphrase:(id)arg1 hint:(id)arg2;
- (void)dealloc;
- (id)initWithRenderingExporter:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSARenderingExporter : NSObject <TSKRenderingExporter>
{
    TSADocumentRoot *mDocumentRoot;
    TSDImager *mImager;
    NSObject<TSARenderingExporterDelegate> *mRenderingExporterDelegate;
    _Bool mIsCancelled;
    _Bool mIsQuit;
    _Bool mPaginate;
    _Bool mDoesDrawAllPages;
    TSUProgressContext *mProgressContext;
    TSDBitmapRenderingQualityInfo *mBitmapRenderingQualityInfo;
}

@property(retain) TSUProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
- (_Bool)hasMoreThanOnePageToPrint;
- (_Bool)paginate;
- (void)setPaginate:(_Bool)arg1;
- (unsigned long long)pageCount;
- (double)progressForCurrentPage;
- (struct CGRect)unscaledClipRect;
- (struct CGRect)boundsRect;
- (void)setMaxPixels:(double)arg1;
- (id)bitmapRenderingQualityInfo;
- (id)imager;
- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)setInfosToCurrentPage;
- (_Bool)preparePage:(unsigned long long)arg1;
- (_Bool)incrementPage;
- (void)teardown;
- (void)setup;
- (_Bool)isQuit;
- (void)quit;
- (_Bool)isCancelled;
- (void)cancel;
- (_Bool)exportToURL:(id)arg1 pageNumber:(unsigned long long)arg2 delegate:(id)arg3 error:(id *)arg4;
- (_Bool)exportToURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (_Bool)p_exportToURL:(id)arg1 pageNumber:(unsigned long long)arg2 delegate:(id)arg3 error:(id *)arg4;
- (void)drawCurrentPageWithContext:(struct CGContext *)arg1 returnSuccess:(_Bool *)arg2;
- (void)drawAllPagesWithContext:(struct CGContext *)arg1 returnSuccess:(_Bool *)arg2;
- (void)waitForRecalcToFinish;
- (void)p_drawCurrentPageWithContext:(struct CGContext *)arg1 returnSuccess:(_Bool *)arg2 createPage:(_Bool)arg3;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;
- (id)initWithDocumentRoot:(id)arg1 imager:(id)arg2;
- (id)p_renderingExporterDelegate;
- (id)documentRoot;
- (double)totalProgess;
- (id)currentInfos;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSAShortcutCommand : TSKCommand
{
    NSString *_shortcutNew;
    NSString *_shortcutOld;
    TSSStyle *_styleNew;
    TSSStyle *_styleOld;
}

@property(retain, nonatomic) TSSStyle *styleOld; // @synthesize styleOld=_styleOld;
@property(retain, nonatomic) TSSStyle *styleNew; // @synthesize styleNew=_styleNew;
@property(retain, nonatomic) NSString *shortcutOld; // @synthesize shortcutOld=_shortcutOld;
@property(retain, nonatomic) NSString *shortcutNew; // @synthesize shortcutNew=_shortcutNew;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ShortcutCommandArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ShortcutCommandArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)undo;
- (void)redo;
- (void)commit;
- (_Bool)process;
@property(readonly, nonatomic) TSAShortcutController *shortcutController;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 shortcut:(id)arg2 style:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSAImageRenderingExporterDelegate : NSObject <TSARenderingExporterDelegate>
{
    TSARenderingExporter<TSKImageExporter> *mRenderingExporter;
    unsigned long long mWidth;
    unsigned long long mHeight;
    _Bool mScaleToFit;
    NSURL *mURL;
    NSString *mImageType;
    float mCompressionFactor;
}

@property(nonatomic) float compressionFactor; // @synthesize compressionFactor=mCompressionFactor;
@property(retain, nonatomic) NSString *imageType; // @synthesize imageType=mImageType;
@property(nonatomic) _Bool scaleToFit; // @synthesize scaleToFit=mScaleToFit;
@property(nonatomic) unsigned long long height; // @synthesize height=mHeight;
@property(nonatomic) unsigned long long width; // @synthesize width=mWidth;
- (_Bool)supportsRenderingQuality;
- (_Bool)supportsPaging;
- (void)releaseCGContext:(struct CGContext *)arg1;
- (struct CGContext *)newCGContextForURL:(id)arg1;
- (double)viewScale;
- (void)teardown;
- (void)setup;
- (id)initWithRenderingExporter:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSAShortcutController : TSPObject
{
    NSMutableDictionary *_shortcutToStyleDictionary;
    TSURetainedPointerKeyDictionary *_styleToShortcutDictionary;
    TSADocumentRoot *_documentRoot;
}

+ (id)localizedStringForShortcut:(id)arg1;
@property(nonatomic) TSADocumentRoot *documentRoot; // @synthesize documentRoot=_documentRoot;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ShortcutControllerArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ShortcutControllerArchive *)arg1 unarchiver:(id)arg2;
- (id)commandForUpdatingShortcutsFromPropagationMap:(id)arg1;
- (void)removeStylesNotInTheme;
- (void)setStyle:(id)arg1 forShortcut:(id)arg2;
- (id)styleForShortcut:(id)arg1;
- (id)shortcutForStyle:(id)arg1;
@property(readonly, nonatomic) _Bool hasShortcuts;
- (void)documentWillUnload;
- (void)documentDidLoad;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSABundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TCAImportController : TSAImportController <TSAImportDelegate>
{
    NSString *_passphrase;
    NSError *_passphraseError;
    NSUUID *_baseUUIDForObjectUUID;
}

- (id)baseUUIDForObjectUUID;
- (id)additionalDocumentPropertiesForWrite;
- (void)addWarning:(id)arg1;
- (void)willSaveImportedDocument;
- (void)importControllerDidRunOutOfSpace:(id)arg1;
- (void)finishImportWithSuccess:(_Bool)arg1 error:(id)arg2;
- (id)templateInfoWithName:(id)arg1 variantIndex:(unsigned long long)arg2;
- (id)templateInfoWithName:(id)arg1;
- (void)retrievePassphraseForEncryptedDocumentWithImporter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)importWithPassphrase:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 documentType:(id)arg2 baseUUIDForObjectUUID:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSACommandUpdateCustomFormat : TSKCommand
{
    unsigned int _customFormatID;
    TSUCustomFormatWrapper *_customFormat;
    TSUCustomFormatWrapper *_oldCustomFormat;
}

@property unsigned int customFormatID; // @synthesize customFormatID=_customFormatID;
@property(copy) TSUCustomFormatWrapper *oldCustomFormat; // @synthesize oldCustomFormat=_oldCustomFormat;
@property(copy) TSUCustomFormatWrapper *customFormat; // @synthesize customFormat=_customFormat;
- (void)saveToArchive:(struct UpdateCustomFormatCommandArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct UpdateCustomFormatCommandArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (void)p_updateCustomFormat:(id)arg1;
- (_Bool)process;
- (id)p_documentRoot;
- (void)dealloc;
- (id)initWithContext:(id)arg1 customFormat:(id)arg2 customFormatID:(unsigned int)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSACirrusDocument : NSObject <TSADocumentRootDelegate, TSPObjectContextDelegate>
{
    _Bool _isClosed;
    TSUTemporaryDirectory *_tempDirForSupport;
    TSPObjectContext *_context;
    NSString *_documentPasswordHint;
    NSURL *_URL;
}

@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) NSString *documentPasswordHint; // @synthesize documentPasswordHint=_documentPasswordHint;
@property(retain, nonatomic) TSPObjectContext *context; // @synthesize context=_context;
- (void)presentPersistenceError:(id)arg1;
- (id)documentPasswordHintForWrite;
- (id)supportDirectoryURL;
@property(readonly, nonatomic) NSString *documentCachePath;
@property(readonly, nonatomic) NSString *name;
- (void)documentDidLoad;
- (void)close;
- (void)dealloc;
@property(readonly, nonatomic) TSADocumentRoot *documentRoot;
- (id)initWithURL:(id)arg1 error:(id *)arg2 passphrase:(id)arg3;
- (id)initWithURL:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, nonatomic) _Bool canUpgradeDocumentSupport;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool preserveDocumentRevisionIdentifierForSequenceZero;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSACommandAddCustomFormat : TSKCommand
{
    _Bool _isForReplacement;
    TSUCustomFormatWrapper *_customFormat;
}

@property _Bool isForReplacement; // @synthesize isForReplacement=_isForReplacement;
@property(copy) TSUCustomFormatWrapper *customFormat; // @synthesize customFormat=_customFormat;
- (void)saveToArchive:(struct AddCustomFormatCommandArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct AddCustomFormatCommandArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (struct TSUCustomFormat *)p_customFormatCPP;
- (void)dealloc;
- (id)initWithContext:(id)arg1 customFormat:(id)arg2 forReplacement:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSAImportController : NSObject <TSADocumentRootDelegate, TSPObjectContextDelegate, NSFilePresenter, TSKImportExportDelegate>
{
    TSUTemporaryDirectory *_temporaryDirectory;
    TSUTemporaryDirectory *_temporaryDFFDirectory;
    NSURL *_documentURL;
    NSString *_documentType;
    NSObject<OS_dispatch_group> *_passphraseCompletionGroup;
    id <TSKImporter> _importer;
    NSMutableSet *_importWarnings;
    NSURL *_presentedItemURL;
    NSOperationQueue *_presentedItemOperationQueue;
    NSMutableArray *_deferredWriters;
    struct {
        unsigned int success:1;
        unsigned int isPasswordProtected:1;
        unsigned int isCleanedUp:1;
        unsigned int isImportCancelled:1;
        unsigned int preserveDocumentAfterImport:1;
        unsigned int shouldNotifyProgress:1;
    } _flags;
    id <TSAImportDelegate> _delegate;
    NSString *_sourcePath;
    NSError *_error;
    TSPObjectContext *_documentContext;
    TSUProgressContext *_progressContext;
}

@property(readonly, nonatomic) id <TSKImporter> importer; // @synthesize importer=_importer;
@property(retain, nonatomic) TSUProgressContext *progressContext; // @synthesize progressContext=_progressContext;
@property(readonly, nonatomic) TSPObjectContext *documentContext; // @synthesize documentContext=_documentContext;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSString *sourcePath; // @synthesize sourcePath=_sourcePath;
@property(nonatomic) id <TSAImportDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSURL *presentedItemURL; // @synthesize presentedItemURL=_presentedItemURL;
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue; // @synthesize presentedItemOperationQueue=_presentedItemOperationQueue;
@property(readonly, nonatomic) _Bool areNewExternalReferencesToDataAllowed;
- (void)addPersistenceWarnings:(id)arg1;
- (void)presentPersistenceError:(id)arg1;
@property(readonly, nonatomic) _Bool ignoreDocumentSupport;
- (void)addIncompatibleMovieInfo:(id)arg1 withCompatibilityLevel:(long long)arg2;
- (void)removeWarning:(id)arg1;
- (void)addWarning:(id)arg1;
- (id)warnings;
@property(readonly, nonatomic) _Bool hasWarnings;
@property(readonly, nonatomic) NSString *defaultDraftName;
@property(readonly, nonatomic) NSString *name;
- (void)_setPresentedItemURL:(id)arg1;
- (void)removeFilePresenter;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (void)relinquishPresentedItemToWriter:(CDUnknownBlockType)arg1;
- (id)_prepareTemplate:(id)arg1;
@property(nonatomic) _Bool preserveDocumentAfterImport;
@property(readonly, nonatomic) _Bool isBrowsingVersions;
@property(readonly, nonatomic) _Bool isPasswordProtected;
@property(readonly, nonatomic) _Bool isImportCancelled;
- (void)cancelImport;
- (void)finishImportWithSuccess:(_Bool)arg1 error:(id)arg2;
- (void)didSaveImportedDocumentWithPassphrase:(id)arg1;
- (void)willSaveImportedDocument;
- (void)_performImportWithCompletedSteps:(int)arg1;
- (_Bool)_saveContextToTemporaryURL:(id)arg1 passphrase:(id)arg2 originalURL:(id)arg3 documentUUID:(id)arg4 error:(id *)arg5;
- (_Bool)needsFileCoordination;
- (id)templateInfoWithName:(id)arg1 variantIndex:(unsigned long long)arg2;
- (id)templateInfoWithName:(id)arg1;
- (void)didBeginImportToTemporaryURL:(id)arg1;
- (id)makeObjectContextWithTemplateInfo:(id)arg1 error:(id *)arg2;
- (void)_continueImportWithSuccess:(_Bool)arg1 error:(id)arg2 completedSteps:(int)arg3;
- (void)_beginImport;
- (void)showProgressIfNeededForURL:(id)arg1;
- (void)retrievePassphraseForEncryptedDocumentWithImporter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (Class)importerClass;
- (void)beginImportAsync;
- (_Bool)beginImport;
- (void)prepareForImportDisplayingProgress:(_Bool)arg1;
- (_Bool)import;
@property(readonly, nonatomic) NSURL *temporaryURL;
@property(readonly, nonatomic) int documentTypeCategory;
- (void)dealloc;
- (id)initWithPath:(id)arg1 documentType:(id)arg2 delegate:(id)arg3;
- (id)initWithPath:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) NSUUID *baseUUIDForObjectUUID;
@property(readonly, nonatomic) _Bool canUpgradeDocumentSupport;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *documentCachePath;
@property(readonly, nonatomic) id <NSFilePresenter> filePresenter;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool importingDesignDemoDoc;
@property(readonly, nonatomic) _Bool isDocumentSupportTemporary;
@property(readonly, nonatomic) _Bool preserveDocumentRevisionIdentifierForSequenceZero;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSAFunctionBrowserState : TSPObject
{
    NSMutableArray *mRecentFunctions;
    NSMutableArray *mBackFunctions;
    NSMutableArray *mForwardFunctions;
    int mCurrentFunction;
}

- (void)saveToArchiver:(id)arg1;
- (id)recentFunctions;
- (void)recordRecentFunction:(int)arg1;
- (void)recordNavigationTo:(int)arg1;
- (int)currentFunction;
- (id)allForwardFunctions;
- (id)allBackFunctions;
- (int)forwardByAmount:(unsigned long long)arg1;
- (int)backByAmount:(unsigned long long)arg1;
- (int)forward;
- (int)back;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_filterOutUnknownFunctions:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSAApplicationTemplateInfo : TSATemplateInfo <NSCopying>
{
    NSString *_name;
    NSString *_documentVariant;
    NSString *_previewVariant;
}

+ (id)bundledDocumentContainerDirectoryURL;
+ (id)templateZipURLForTemplateName:(id)arg1;
+ (id)downloadedDocumentContainerDirectoryURL;
+ (id)localizationBundleForDocumentContainerURL:(id)arg1;
+ (id)localizationBundleForDocumentURL:(id)arg1;
+ (id)documentURLWithDocumentContainerURL:(id)arg1 variant:(id)arg2;
@property(readonly, nonatomic) NSString *previewVariant; // @synthesize previewVariant=_previewVariant;
@property(readonly, nonatomic) NSString *documentVariant; // @synthesize documentVariant=_documentVariant;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)initHeadlessWithName:(id)arg1 variant:(unsigned long long)arg2 locale:(struct __CFLocale *)arg3;
- (id)initHeadlessWithName:(id)arg1 variant:(unsigned long long)arg2;
- (id)initHeadlessWithName:(id)arg1;
- (id)description;
@property(readonly, nonatomic) NSURL *bundledDocumentContainerURL;
@property(readonly, nonatomic) NSURL *documentContainerURL;
@property(readonly, nonatomic) NSURL *downloadedDocumentContainerURL;
@property(readonly, nonatomic) NSURL *templateZipURL;
@property(readonly, nonatomic) long long downloadState;
- (id)localizationBundle;
- (id)documentURLWithDocumentContainerURL:(id)arg1;
- (_Bool)isAvailable;
- (id)documentURL;
@property(readonly, nonatomic) NSBundle *previewBundle;
- (id)previewImageURL;
- (id)makeIdentifier;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPropertyList:(id)arg1 documentVariant:(id)arg2 previewVariant:(id)arg3;
- (id)initWithDisplayName:(id)arg1 name:(id)arg2 documentVariant:(id)arg3 previewVariant:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSATemplateInfo : NSObject
{
    NSString *_identifier;
    NSString *_displayName;
}

@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void)prepareForNewDocumentWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isUserTemplate;
@property(readonly, nonatomic) _Bool isAvailable;
@property(readonly, nonatomic) NSBundle *localizationBundle;
@property(readonly, nonatomic) NSURL *documentURL;
@property(readonly, nonatomic) NSURL *previewImageURL;
- (id)makeIdentifier;
@property(readonly, nonatomic) NSString *identifier;
- (void)dealloc;
- (id)initWithDisplayName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSageGeometryHelperLimitingSeriesUpgrader : TSCH3DAbstractLimitingSeriesUpgrader
{
    TSCH3DChartResizerHelper *mResizerHelper;
    TSCH3DChartBoundsLayout *mBoundsLayout;
}

@property(readonly, nonatomic) TSCH3DChartBoundsLayout *boundsLayout; // @synthesize boundsLayout=mBoundsLayout;
@property(readonly, nonatomic) TSCH3DChartResizerHelper *resizerHelper; // @synthesize resizerHelper=mResizerHelper;
- (id)boundsLayoutByResizingToLayoutSize:(const tvec2_84d5962d *)arg1;
- (id)containingViewportByResizingScene:(id)arg1 toResizingFrame:(struct CGRect)arg2;
- (struct CGRect)oldResizingFrame;
- (id)sceneResetWithLayoutSettings:(CDStruct_9aa9521f)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSageGeometryHelper : TSCHSageGeometryHelper
{
}

+ (struct CGRect)computeSageChartAreaBoundsForChartInfo:(id)arg1 geometryRect:(struct CGRect)arg2 returningContainingViewportSize:(id *)arg3;
- (struct CGRect)computeSageLayoutCBB;
- (_Bool)p_hasValidContainingViewport;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVector : NSObject <NSCopying, NSMutableCopying>
{
    float mX;
    float mY;
    float mZ;
    float mW;
}

+ (id)vectorWithVec4:(const tvec4_ac57c72d *)arg1;
+ (id)vectorWithVec3:(const tvec3_17f03ce0 *)arg1;
+ (id)vectorWithVec2:(const tvec2_84d5962d *)arg1;
+ (id)x:(float)arg1 y:(float)arg2 z:(float)arg3 w:(float)arg4;
+ (id)x:(float)arg1 y:(float)arg2 z:(float)arg3;
+ (id)vector;
+ (unsigned long long)hashVec4:(const tvec4_ac57c72d *)arg1;
+ (id)instanceWithArchive:(const struct Chart3DVectorArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) float w; // @synthesize w=mW;
@property(readonly, nonatomic) float z; // @synthesize z=mZ;
@property(readonly, nonatomic) float y; // @synthesize y=mY;
@property(readonly, nonatomic) float x; // @synthesize x=mX;
- (float)valueForDimension:(unsigned long long)arg1;
- (tvec2_84d5962d)value2;
- (tvec3_17f03ce0)value3;
- (tvec4_ac57c72d)value4;
- (tvec4_ac57c72d)value;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithX:(float)arg1 y:(float)arg2 z:(float)arg3 w:(float)arg4;
- (id)initWithX:(float)arg1 y:(float)arg2 z:(float)arg3;
- (id)initWithVec4:(const tvec4_ac57c72d *)arg1;
- (id)initWithVec3:(const tvec3_17f03ce0 *)arg1;
- (id)initWithVec2:(const tvec2_84d5962d *)arg1;
- (id)init;
- (void)saveToArchive:(struct Chart3DVectorArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DVectorArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMutableVector : TSCH3DVector
{
}

- (void)swapXY;
- (void)setValue2:(tvec2_84d5962d)arg1;
- (void)setValue3:(tvec3_17f03ce0)arg1;
- (void)setValue4:(tvec4_ac57c72d)arg1;
- (void)setValue:(tvec4_ac57c72d)arg1;
@property(nonatomic) float w; // @dynamic w;
@property(nonatomic) float z; // @dynamic z;
@property(nonatomic) float y; // @dynamic y;
@property(nonatomic) float x; // @dynamic x;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DArray2D : NSObject
{
    tvec2_3b141483 mSize;
    NSMutableArray *mElements;
}

+ (id)array2D;
+ (id)array2DWithSize:(const tvec2_3b141483 *)arg1;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (id)firstObject;
- (id)objectAtIndex:(const tvec2_3b141483 *)arg1;
- (void)setObject:(id)arg1 atIndex:(const tvec2_3b141483 *)arg2;
- (_Bool)hasObjectAtIndex:(const tvec2_3b141483 *)arg1;
- (void)resize:(const tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithSize:(const tvec2_3b141483 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DOrderedDictionary : NSObject <NSFastEnumeration>
{
    NSMutableDictionary *mStore;
    NSMutableArray *mKeyOrder;
}

+ (id)dictionaryWithMutableDictionaryStore:(id)arg1;
+ (id)dictionary;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (id)description;
- (void)dealloc;
- (id)initWithMutableDictionaryStore:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTransform : NSObject <NSCopying>
{
    tvec3_17f03ce0 mTranslation;
    tvec3_17f03ce0 mScaleFactor;
    tquat_f3d6c8fe mRotation;
    tvec3_17f03ce0 mCenter;
    tmat4x4_3074befe mMatrix;
    _Bool mDirty;
}

+ (id)transform;
- (id).cxx_construct;
- (const tmat4x4_3074befe *)transform;
@property(nonatomic) tquat_f3d6c8fe rotation;
@property(nonatomic) tvec3_17f03ce0 center;
@property(nonatomic) tvec3_17f03ce0 scaleFactor;
@property(nonatomic) tvec3_17f03ce0 translation;
- (struct Transform)asTSCH3DCPPTransform;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTransforms : NSObject
{
    NSMutableArray *mArray;
    tvec2_3b141483 mSize;
}

+ (id)transformsWithSize:(tvec2_3b141483)arg1;
+ (id)transforms;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (long long)arrayIndex:(tvec2_3b141483)arg1;
- (id)transformAtIndex:(tvec2_3b141483)arg1;
- (void)setTransform:(id)arg1 atIndex:(tvec2_3b141483)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLineProjector : TSCH3DProjector
{
    line_190fbfc7 mLine;
}

@property(nonatomic) line_190fbfc7 line; // @synthesize line=mLine;
- (id).cxx_construct;
- (_Bool)projectPoint:(const tvec2_84d5962d *)arg1 returningPoint:(tvec3_17f03ce0 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DProjector : NSObject
{
    tmat4x4_3074befe mProjection;
    tmat4x4_3074befe mTransform;
    tmat4x4_3074befe mCombined;
}

+ (id)projectorWithProjection:(const tmat4x4_3074befe *)arg1 transform:(const tmat4x4_3074befe *)arg2;
@property(readonly, nonatomic) const tmat4x4_3074befe *combined; // @synthesize combined=mCombined;
@property(readonly, nonatomic) const tmat4x4_3074befe *transform; // @synthesize transform=mTransform;
@property(readonly, nonatomic) const tmat4x4_3074befe *projection; // @synthesize projection=mProjection;
- (id).cxx_construct;
- (line_190fbfc7)objectSpaceLineFromPoint:(const tvec2_84d5962d *)arg1;
- (id)initWithProjection:(const tmat4x4_3074befe *)arg1 transform:(const tmat4x4_3074befe *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSharegroupDelayChecker : NSObject <TSCHUnretainedParent>
{
    _Bool mCondition;
    id <TSCH3DSharegroupDelayCheckerParent> mParent;
}

@property(nonatomic) _Bool condition; // @synthesize condition=mCondition;
- (void)p_checkCondition;
- (void)invalidateCondition;
- (void)p_cancelCheckCondition;
- (void)scheduleCheckCondition;
- (void)p_scheduleCheckConditionOnMainThread;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSharegroupPool : NSObject <TSCH3DSharegroupDelayCheckerParent, TSUFlushable>
{
    long long mSize;
    long long mNumAlive;
    long long mDisableLevel;
    NSMutableArray *mSharegroups;
    NSCondition *mCondition;
    _Bool mBusy;
    _Bool mCanUseOpenGL;
    TSCH3DSharegroupDelayChecker *mChecker;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (void)willCheckCondition;
- (void)scheduleCheckCondition;
- (void)waitForBackgroundThreadsWithTimeout:(double)arg1;
- (void)p_conditionLockedWaitForBackgroundThreadsWithTimeout:(double)arg1;
- (_Bool)canUseOpenGL;
- (void)enable;
- (void)disable;
- (void)releaseSharegroup:(id)arg1;
- (id)obtainSharegroup;
- (id)p_obtainSharegroupFromSharegroups;
- (void)flush;
- (void)p_flushSharegroupsIfPossible;
- (void)p_removeSharegroupsFromFlushingManager;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSharegroup : NSObject <TSUFlushable>
{
    NSThread *mOwningThread;
    TSCH3DResourceCache *mResourceCache;
    TSCH3DShaderCache *mShaderCache;
    NSMutableSet *mPurgeableResourceSet;
    int mPerformance;
    _Bool mDidReceiveFlush;
    id <TSCH3DSharegroupDelegate> mDelegate;
    TSCH3DSharegroupToken *mToken;
}

+ (id)uniqueSharegroupWithOwningThread:(id)arg1 token:(id)arg2;
@property(readonly, nonatomic) TSCH3DSharegroupToken *token; // @synthesize token=mToken;
@property(nonatomic) id <TSCH3DSharegroupDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSCH3DShaderCache *shaderCache; // @synthesize shaderCache=mShaderCache;
@property(readonly, nonatomic) TSCH3DResourceCache *resourceCache; // @synthesize resourceCache=mResourceCache;
@property(nonatomic) int performance; // @synthesize performance=mPerformance;
- (void)flush;
- (void)flushInTargetThread;
- (void)p_flushInTargetThread;
- (void)setIfIsMoreDemandingPerformance:(int)arg1;
- (void)forceFlushResourceSet:(id)arg1;
- (void)flushResourceSet:(id)arg1;
- (void)flushIfNecessary;
- (struct FlushResult)p_flushCacheIfNecessary;
- (void)flushMemoryForResourceSet:(id)arg1;
- (void)nonThreadOwnedFlushCache;
- (_Bool)mustRunOnMainThread;
- (_Bool)isOneShot;
- (_Bool)isCurrentThreadOwner;
- (_Bool)owningThreadIsNil;
- (void)setOwningThread:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithOwningThread:(id)arg1 token:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLSharegroup : TSCH3DSharegroup
{
    TSCH3DGLContext *mGLContext;
    long long mLockLevel;
    NSRecursiveLock *mLock;
}

+ (void)deleteSharegroupForToken:(id)arg1;
+ (id)sharegroupForToken:(id)arg1;
+ (void)flushSharegroupForToken:(id)arg1;
+ (void)removeInterestForSharegroupTokens:(id)arg1;
+ (void)addInterestForSharegroupTokens:(id)arg1;
+ (_Bool)hasInterestForSharegroupToken:(id)arg1;
- (void)unlock;
- (void)lock;
- (id)GLContext;
- (void)p_forceFlushResourceSet:(id)arg1;
- (void)p_flushPurgeableResourceSet;
- (void)garbageCollectAllUnretainedResources;
- (void)garbageCollectResources:(id)arg1;
- (void)p_owningThreadWillChange;
- (void)p_clearContextInCurrentThread;
- (void)p_flushCache;
- (id)targetThreadForFlushing;
- (_Bool)debug_isInteractive;
- (id)description;
- (void)dealloc;
- (id)initWithOwningThread:(id)arg1 token:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSharegroupToken : NSObject
{
}

+ (id)sharegroupPool;
+ (id)animation;
+ (id)interactiveCanvas;
- (_Bool)hasInterestForDiscreteGraphics;
- (_Bool)shouldClearCurrentContextOnOwnerChange;
- (_Bool)shouldGarbageCollect;
- (_Bool)mustRunOnMainThread;
- (_Bool)canBeCreatedFromOtherThread;
- (id)targetThreadForFlushingWithOwningThread:(id)arg1;
- (_Bool)isOneShot;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCachedSharegroupToken : TSCH3DSharegroupToken <TSCH3DSharegroupDelayCheckerParent>
{
    TSCH3DSharegroupDelayChecker *mChecker;
    TSCH3DGLSharegroup *mSharegroup;
}

- (void)willCheckCondition;
- (void)releaseSharegroup:(id)arg1;
- (void)flushTokenSharegroup;
- (void)deleteTokenSharegroup;
- (void)didRemoveAllInterests;
- (id)tokenSharegroup;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationSharegroupToken : TSCH3DCachedSharegroupToken
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)token;
+ (id)_singletonAlloc;
- (_Bool)hasInterestForDiscreteGraphics;
- (_Bool)shouldClearCurrentContextOnOwnerChange;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DInteractiveCanvasSharegroupToken : TSCH3DCachedSharegroupToken
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)token;
+ (id)_singletonAlloc;
- (_Bool)hasInterestForDiscreteGraphics;
- (_Bool)shouldClearCurrentContextOnOwnerChange;
- (_Bool)shouldGarbageCollect;
- (_Bool)canBeCreatedFromOtherThread;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSharegroupPoolSharegroupToken : TSCH3DSharegroupToken <NSCopying>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)token;
+ (id)_singletonAlloc;
- (_Bool)isOneShot;
- (void)flushTokenSharegroup;
- (void)deleteTokenSharegroup;
- (_Bool)shouldGarbageCollect;
- (void)releaseSharegroup:(id)arg1;
- (void)didRemoveAllInterests;
- (id)tokenSharegroup;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGenericPropertyMap : TSSPropertyMap
{
}

+ (void)savePropertyMap:(id)arg1 toArchive:(struct ChartGenericPropertyMapArchive *)arg2 archiver:(id)arg3;
+ (id)imageFillProperties;
+ (id)properties;
- (void)saveToArchive:(struct ChartGenericPropertyMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ChartGenericPropertyMapArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLPointerCountedSet : NSObject
{
    TSUPointerKeyDictionary *mSet;
    unsigned long long mCount;
    unsigned long long mByteCount;
}

@property(readonly, nonatomic) unsigned long long count; // @synthesize count=mCount;
- (void)addObject:(id)arg1;
- (id)description;
- (id)descriptionWithFrames:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLStatisticsData : NSObject
{
    TSCH3DGLPointerCountedSet *mShadersUseCount;
    TSCH3DGLPointerCountedSet *mGeometryUseCount;
    unsigned long long mFrames;
}

+ (id)statisticsData;
@property(nonatomic) unsigned long long frames; // @synthesize frames=mFrames;
- (void)drawGeometry:(id)arg1;
- (void)activateShader:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLStatistics : NSObject
{
    unsigned long long mLifespan;
    NSMutableArray *mFrames;
}

- (void)drawGeometry:(id)arg1;
- (void)activateShader:(id)arg1;
- (void)endFrame;
- (void)beginFrame;
@property(readonly, nonatomic) TSCH3DGLStatisticsData *currentFrameStatistics;
@property(readonly, nonatomic) TSCH3DGLStatisticsData *allFramesStatistics;
- (void)pushStatistics;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVBOHandle : TSCH3DGLHandle
{
}

- (void)destroyResourcesInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLVBOLoader : TSCH3DResourceLoader
{
    unsigned int mType;
}

+ (id)loaderWithType:(unsigned int)arg1;
- (void)deactivateHandle:(id)arg1 insideContext:(id)arg2;
- (void)setClientState:(const struct DataBufferInfo *)arg1;
- (void)loadSingleValueInBuffer:(id)arg1;
- (_Bool)activateResource:(id)arg1 insideSession:(id)arg2;
- (void)bindHandle:(id)arg1 config:(void *)arg2;
- (unsigned long long)uploadDataBuffer:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (unsigned int)usageOfResource:(id)arg1;
- (id)generateHandleWithConfig:(void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithType:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVAOHandle : TSCH3DGLHandle
{
}

- (void)destroyResourcesInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVAOResource : TSCH3DResource
{
    struct vector<TSCH3D::ResourceAttributeState, std::__1::allocator<TSCH3D::ResourceAttributeState>> mAttributes;
    TSCH3DResource *mIndices;
    NSIndexSet *mEnabledArrays;
    _Bool mFailed;
}

+ (id)resourceWithObjectState:(const struct ObjectState *)arg1 indices:(id)arg2;
@property(nonatomic) _Bool failed; // @synthesize failed=mFailed;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) NSIndexSet *enabledArrays; // @synthesize enabledArrays=mEnabledArrays;
- (id)get;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithObjectState:(const struct ObjectState *)arg1 indices:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVAOLoader : TSCH3DResourceLoader
{
}

- (void)deactivateHandle:(id)arg1 insideContext:(id)arg2;
- (struct VAOLoadResult)activateObjectState:(const struct ObjectState *)arg1 indices:(id)arg2 insideSession:(id)arg3;
- (void)bindHandle:(id)arg1 config:(void *)arg2;
- (unsigned long long)uploadDataBuffer:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (id)generateHandleWithConfig:(void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderHandle : TSCH3DGLHandle
{
    unsigned int mType;
}

+ (id)handleWithType:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int type; // @synthesize type=mType;
- (void)destroyResourcesInContext:(id)arg1;
- (id)initWithGLHandle:(unsigned int)arg1;
- (id)initWithType:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderProgramHandle : TSCH3DGLHandle
{
    TSCH3DShaderHandle *mVertexShader;
    TSCH3DShaderHandle *mFragmentShader;
    TSCH3DShaderEffectsStates *mCurrentEffectsStates;
    NSMutableDictionary *mUniformLocations;
    NSMutableDictionary *mAttributeLocations;
}

@property(readonly, nonatomic) NSMutableDictionary *attributeLocations; // @synthesize attributeLocations=mAttributeLocations;
@property(readonly, nonatomic) NSMutableDictionary *uniformLocations; // @synthesize uniformLocations=mUniformLocations;
@property(readonly, nonatomic) TSCH3DShaderEffectsStates *currentEffectsStates; // @synthesize currentEffectsStates=mCurrentEffectsStates;
@property(readonly, nonatomic) TSCH3DShaderHandle *fragmentShader; // @synthesize fragmentShader=mFragmentShader;
@property(readonly, nonatomic) TSCH3DShaderHandle *vertexShader; // @synthesize vertexShader=mVertexShader;
- (void)destroyResourcesInContext:(id)arg1;
- (void)dealloc;
- (id)initWithGLHandle:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLVertexAttributeVBOLoader : TSCH3DGLVBOLoader
{
    int mLocation;
    struct AttributeSpecs mAttributeSpecs;
}

+ (id)loader;
+ (int)attributeLocation:(id)arg1 shaderHandle:(id)arg2;
- (id).cxx_construct;
- (void)setClientState:(const struct DataBufferInfo *)arg1;
- (void)loadSingleValueInBuffer:(id)arg1;
- (void)loadSingleValue:(const float *)arg1 components:(unsigned long long)arg2;
- (_Bool)activateResource:(id)arg1 location:(int)arg2 specs:(const struct AttributeSpecs *)arg3 insideSession:(id)arg4;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLShaderProgramLoader : TSCH3DResourceLoader
{
}

+ (id)loader;
- (void)deactivateHandle:(id)arg1 insideContext:(id)arg2;
- (id)activateShader:(id)arg1 insideSession:(id)arg2;
- (void)postbindHandle:(id)arg1 config:(void *)arg2;
- (void)bindHandle:(id)arg1 config:(void *)arg2;
- (unsigned long long)uploadDataBuffer:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (void)compileShaderSource:(IteratorRange_617e5e79)arg1 forHandle:(id)arg2;
- (id)generateHandleWithConfig:(void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLRenderProcessor : TSCH3DRetargetRenderProcessor <TSCH3DSharegroupDelegate, TSCH3DShaderDataUploader, TSCH3DShaderStateUpdater>
{
    TSCH3DSession *mSession;
    TSCH3DResource *mGeometry;
    struct StateStack<TSCH3D::RenderState, 10> mRenderStateStack;
    struct RenderHints mRenderHints;
    long long mDiffuseIndex;
    TSCH3DShaderResource *mShader;
    TSCH3DShaderProgramHandle *mCurrentShaderHandle;
    TSCH3DGLStatistics *mStats;
}

+ (id)processorWithSession:(id)arg1;
+ (id)processorWithOriginal:(id)arg1;
- (id).cxx_construct;
- (void)uniform:(id)arg1 ivec4s:(const vector_50d79d4a *)arg2;
- (void)uniform:(id)arg1 ivec3s:(const vector_e600bae4 *)arg2;
- (void)uniform:(id)arg1 ivec2s:(const vector_56a3751a *)arg2;
- (void)uniform:(id)arg1 ivec1s:(const vector_319661ea *)arg2;
- (void)uniform:(id)arg1 vec4s:(const vector_b7abfae3 *)arg2;
- (void)uniform:(id)arg1 vec3s:(const vector_45b393db *)arg2;
- (void)uniform:(id)arg1 vec2s:(const vector_35283da1 *)arg2;
- (void)uniform:(id)arg1 vec1s:(const vector_7cfb452c *)arg2;
- (void)uniform:(id)arg1 ivec4:(const tvec4_f99fd489 *)arg2;
- (void)uniform:(id)arg1 ivec3:(const tvec3_c2818ced *)arg2;
- (void)uniform:(id)arg1 ivec2:(const tvec2_3b141483 *)arg2;
- (void)uniform:(id)arg1 ivec1:(const tvec1_dad7e00b *)arg2;
- (void)uniform:(id)arg1 vec4:(const tvec4_ac57c72d *)arg2;
- (void)uniform:(id)arg1 vec3:(const tvec3_17f03ce0 *)arg2;
- (void)uniform:(id)arg1 vec2:(const tvec2_84d5962d *)arg2;
- (void)uniform:(id)arg1 vec1:(const tvec1_1f665138 *)arg2;
- (void)uniform:(id)arg1 mat4:(const tmat4x4_3074befe *)arg2;
- (void)uniform:(id)arg1 mat3:(const tmat3x3_b39cd897 *)arg2;
- (void)uniform:(id)arg1 mat2:(const tmat2x2_6cc53533 *)arg2;
- (void)setRenderHints:(const struct RenderHints *)arg1;
- (struct RenderHints)renderHints;
- (void)setRenderState:(const struct RenderState *)arg1;
- (struct RenderState)renderState;
- (void)resetBuffers;
- (void)popRenderState;
- (void)pushRenderState;
- (void)popState;
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (void)p_drawPrimitive:(const struct PrimitiveInfo *)arg1;
- (void)p_drawElements:(const struct PrimitiveInfo *)arg1;
- (void)p_drawArrays:(const struct PrimitiveInfo *)arg1;
- (unsigned int)p_modeFromPrimitiveInfo:(const struct PrimitiveInfo *)arg1;
- (void)updateVertexShaderStates;
- (_Bool)updateShader;
- (void)updateRenderState;
- (_Bool)supportsClipDistances;
- (_Bool)uploadShaderData:(id)arg1 primitiveInfo:(const struct PrimitiveInfo *)arg2;
- (_Bool)uploadShaderTextures;
- (_Bool)uploadShaderAttributes:(id)arg1 primitiveInfo:(const struct PrimitiveInfo *)arg2;
- (void)uploadShaderUniforms;
- (int)uniformLocationOfVariable:(id)arg1;
- (id)program;
- (tmat4x4_3074befe)mvp;
- (tmat4x4_3074befe *)projection;
- (tmat4x4_3074befe *)mv;
- (id)matrixProcessor;
- (void)postInject:(id)arg1;
- (void)injectDefaults:(id)arg1;
- (void)endFrame;
- (void)beginFrame;
- (void)didFlushCache;
- (StateStack_22d3dc01 *)objectStateStack;
- (id)objectStateProcessor;
- (id)combinationProcessor;
- (void)dealloc;
- (id)initWithSession:(id)arg1;
- (_Bool)canRenderPrefilteredLines;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLHandle : TSCH3DResourceHandle
{
    unsigned int mValue;
}

+ (id)handleWithGLHandle:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int value; // @synthesize value=mValue;
- (void)setValue:(unsigned int)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithGLHandle:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLTextureHandle : TSCH3DGLHandle
{
    unsigned int mTarget;
    tvec3_c2818ced mFullSize;
    tvec3_c2818ced mLevel0Size;
}

+ (id)handleWithGLHandle:(unsigned int)arg1 target:(unsigned int)arg2;
@property(nonatomic) tvec3_c2818ced level0Size; // @synthesize level0Size=mLevel0Size;
@property(nonatomic) tvec3_c2818ced fullSize; // @synthesize fullSize=mFullSize;
@property(readonly, nonatomic) unsigned int target; // @synthesize target=mTarget;
- (id).cxx_construct;
- (void)destroyResourcesInContext:(id)arg1;
- (id)initWithGLHandle:(unsigned int)arg1 target:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLTextureLoader : TSCH3DResourceLoader
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)loader;
+ (id)_singletonAlloc;
- (void)deactivateHandle:(id)arg1 insideContext:(id)arg2;
- (_Bool)activateResource:(id)arg1 insideSession:(id)arg2 unit:(long long)arg3 type:(int)arg4 attributes:(const struct TextureAttributes *)arg5;
- (void)postbindHandle:(id)arg1 config:(void *)arg2;
- (void)bindHandle:(id)arg1 config:(void *)arg2;
- (unsigned long long)uploadDataBuffer:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (id)p_convertDataBuffer:(id)arg1 format:(struct TSCH3DGLTextureFormat)arg2 returningConvertedFormat:(struct TSCH3DGLTextureFormat *)arg3;
- (unsigned long long)uploadResource:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (_Bool)shouldReuploadHandle:(id)arg1 config:(void *)arg2;
- (id)generateHandleWithConfig:(void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFBOHandle : TSCH3DGLHandle
{
    tvec2_3b141483 mSize;
    id <TSCH3DGLBindable> mColorbuffer;
    id <TSCH3DGLBindable> mDepthbuffer;
}

+ (id)handleWithGLHandle:(unsigned int)arg1 size:(const tvec2_3b141483 *)arg2 colorBuffer:(id)arg3 depthBuffer:(id)arg4;
@property(readonly, nonatomic) id <TSCH3DGLBindable> depthbuffer; // @synthesize depthbuffer=mDepthbuffer;
@property(readonly, nonatomic) id <TSCH3DGLBindable> colorbuffer; // @synthesize colorbuffer=mColorbuffer;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (void)destroyResourcesInContext:(id)arg1;
- (void)destroyFramebuffer;
- (_Bool)valid;
- (void)dealloc;
- (id)initWithGLHandle:(unsigned int)arg1 size:(const tvec2_3b141483 *)arg2 colorBuffer:(id)arg3 depthBuffer:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFBOLoader : TSCH3DResourceLoader
{
    tvec2_3b141483 mSize;
    struct FramebufferAttributes mFramebufferAttributes;
    id <TSCH3DRenderBufferAllocator> mColorAllocator;
    id <TSCH3DRenderBufferAllocator> mDepthAllocator;
}

+ (id)loaderWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1 size:(const tvec2_3b141483 *)arg2 colorAllocator:(id)arg3 depthAllocator:(id)arg4;
+ (unsigned long long)estimatedMemoryInBytesForSize:(tvec2_3b141483)arg1 samples:(unsigned long long)arg2 hasColorbuffer:(_Bool)arg3 hasDepthbuffer:(_Bool)arg4;
@property(readonly, nonatomic) struct FramebufferAttributes framebufferAttributes; // @synthesize framebufferAttributes=mFramebufferAttributes;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
@property(readonly, nonatomic) id <TSCH3DRenderBufferAllocator> depthAllocator; // @synthesize depthAllocator=mDepthAllocator;
@property(readonly, nonatomic) id <TSCH3DRenderBufferAllocator> colorAllocator; // @synthesize colorAllocator=mColorAllocator;
- (id).cxx_construct;
- (struct SessionLoadResourceResult)loadResource:(id)arg1 insideSession:(id)arg2;
- (void)deactivateHandle:(id)arg1 insideContext:(id)arg2;
- (unsigned long long)uploadDataBuffer:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (void)bindHandle:(id)arg1 config:(void *)arg2;
- (id)generateHandleWithConfig:(void *)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1 size:(const tvec2_3b141483 *)arg2 colorAllocator:(id)arg3 depthAllocator:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationNamedFunctionInterpolation : TSCH3DAnimationInterpolation
{
    NSString *mName;
    CDUnknownFunctionPointerType mFunction;
    NSString *mShaderFunction;
}

+ (id)functionWithName:(id)arg1 function:(CDUnknownFunctionPointerType)arg2 shaderFunction:(id)arg3;
@property(readonly, nonatomic) NSString *shaderFunction; // @synthesize shaderFunction=mShaderFunction;
- (id)name;
- (float)interpolate:(float)arg1 index:(const tvec2_3b141483 *)arg2;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithName:(id)arg1 function:(CDUnknownFunctionPointerType)arg2 shaderFunction:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationInterpolation : NSObject
{
}

+ (id)rotatingGrowEaseOut;
+ (id)exponential;
+ (id)easeOutSine;
+ (id)easeInQuarticEaseOut;
+ (id)easeInEaseOut;
+ (id)easeOutQuartic;
+ (id)easeOutCubic;
+ (id)easeOutPow24;
+ (id)easeOutQuadratic;
+ (id)quartic;
+ (id)cubic;
+ (id)pow24;
+ (id)quadratic;
+ (id)linear;
+ (void)injectAnimationInterpolationFunctions:(id)arg1;
+ (id)allNamedFunctionInterpolations;
@property(readonly, nonatomic) NSString *name;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLinearAnimationTimeSlice : TSCH3DAnimationTimeSlice
{
}

- (float)interpolate:(float)arg1 index:(const tvec2_3b141483 *)arg2;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationTimeSlice : NSObject <TSCH3DAnimationInterpolatable>
{
}

+ (id)linear;
- (float)interpolate:(float)arg1 index:(const tvec2_3b141483 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationTiming : NSObject
{
    box_e9f23397 mRange;
    TSCH3DAnimationInterpolation *mInterpolation;
}

+ (id)timing;
@property(retain, nonatomic) TSCH3DAnimationInterpolation *interpolation; // @synthesize interpolation=mInterpolation;
@property(nonatomic) box_e9f23397 range; // @synthesize range=mRange;
- (id).cxx_construct;
- (float)toClampedInterpolatedLocal:(float)arg1;
- (float)toClampedLocal:(float)arg1;
- (float)toLocal:(float)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationTimings : TSCH3DAnimationTiming
{
    NSMutableArray *mTimings;
}

+ (id)timings;
- (void)clear;
- (void)evaluate:(float)arg1 context:(id)arg2;
- (void)addTiming:(id)arg1 range:(const box_e9f23397 *)arg2;
- (void)addTiming:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationValueTiming : TSCH3DAnimationTiming
{
    NSString *mName;
    box_e9f23397 mValueRange;
}

+ (id)timingWithName:(id)arg1 valueRange:(const box_e9f23397 *)arg2;
+ (id)timingWithName:(id)arg1;
@property(retain, nonatomic) NSString *name; // @synthesize name=mName;
@property(nonatomic) box_e9f23397 valueRange; // @synthesize valueRange=mValueRange;
- (id).cxx_construct;
- (void)evaluate:(float)arg1 context:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithName:(id)arg1 valueRange:(const box_e9f23397 *)arg2;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCascadeAnimationTimeSlice : TSCH3DAnimationTimeSlice
{
    NSIndexSet *mElements;
    tvec2_3b141483 mSize;
    _Bool mReverse;
    unsigned long long mCascadeSlices;
}

+ (id)timeSliceWithIndexSet:(id)arg1 size:(tvec2_3b141483 *)arg2 reverse:(_Bool)arg3 cascadeSlices:(unsigned long long)arg4;
+ (id)timeSliceWithIndexSet:(id)arg1 size:(tvec2_3b141483 *)arg2 reverse:(_Bool)arg3;
@property(nonatomic) unsigned long long cascadeSlices; // @synthesize cascadeSlices=mCascadeSlices;
- (id).cxx_construct;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;
- (unsigned long long)totalSlices;
- (void)dealloc;
- (id)initWithIndexSet:(id)arg1 size:(tvec2_3b141483 *)arg2 reverse:(_Bool)arg3 cascadeSlices:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSetAnimationTimeSlice : TSCH3DAnimationTimeSlice
{
    NSDictionary *mSetDictionary;
    NSDictionary *mNegativeSetDictionary;
    TSCH3DAnimationTimeSlice *mSetInterpolation;
    TSCH3DCascadeAnimationTimeSlice *mCascadeInterpolator;
}

+ (id)timeSliceWithIndexSet:(id)arg1 interceptRelativeUnitSpaceValues:(const vector_ec52ae8c *)arg2 setInterpolation:(id)arg3 size:(tvec2_3b141483 *)arg4 cascadeSets:(_Bool)arg5;
+ (void)addInterpolatorsToSets:(const map_7ba5c2fb *)arg1 dictionary:(id)arg2 values:(const vector_ec52ae8c *)arg3 size:(tvec2_3b141483 *)arg4;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;
- (id)p_orderedTimeSliceForIndex:(tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithSetDictionary:(id)arg1 negativeSetDictionary:(id)arg2 setInterpolation:(id)arg3 cascadeInterpolator:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DOrderedAnimationTimeSlice : TSCH3DAnimationTimeSlice
{
    NSIndexSet *mElements;
    tvec2_3b141483 mSize;
    vector_ec52ae8c mElemWeight;
    vector_ec52ae8c mElemOffset;
}

+ (id)timeSliceWithIndexSet:(id)arg1 size:(const tvec2_3b141483 *)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;
- (void)setWeights:(const vector_ec52ae8c *)arg1;
- (_Bool)containsIndex:(const tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithIndexSet:(id)arg1 size:(const tvec2_3b141483 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimationClip : NSObject
{
    NSString *mTimerName;
}

+ (id)clipWithTimerName:(id)arg1;
+ (id)clip;
@property(readonly, nonatomic) NSString *timerName; // @synthesize timerName=mTimerName;
- (_Bool)shouldUpdateSeriesElementTimingWithAnyElement;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3 timeSlice:(id)arg4 context:(id)arg5;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2 context:(id)arg3;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;
- (void)didUpdateAnimationTimeForContext:(id)arg1 layers:(id)arg2;
- (void)didAddToAnimationClipsWithSceneObject:(id)arg1 scene:(id)arg2 animation:(id)arg3;
- (void)didAddToAnimationClipsWithScene:(id)arg1 animation:(id)arg2;
- (float)timeFromContext:(id)arg1;
- (void)dealloc;
- (id)initWithTimerName:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTranslateAnimationClip : TSCH3DChartAnimationClip
{
    tvec3_17f03ce0 mBegin;
    tvec3_17f03ce0 mEnd;
}

@property(nonatomic) tvec3_17f03ce0 end; // @synthesize end=mEnd;
@property(nonatomic) tvec3_17f03ce0 begin; // @synthesize begin=mBegin;
- (id).cxx_construct;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRotationAnimationClip : TSCH3DChartAnimationClip
{
    tvec3_17f03ce0 mBegin;
    tvec3_17f03ce0 mEnd;
}

@property(nonatomic) tvec3_17f03ce0 end; // @synthesize end=mEnd;
@property(nonatomic) tvec3_17f03ce0 begin; // @synthesize begin=mBegin;
- (id).cxx_construct;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridDurationValue : NSObject <TSCHChartGridValue>
{
    double mDuration;
}

+ (id)durationValueWithDouble:(double)arg1;
- (double)doubleValue;
@property(readonly, nonatomic) int chartGridValueType;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDouble:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridValue : NSObject
{
}

+ (id)NSDateConvertedFromGridValue:(id)arg1;
+ (id)NSDateFromGridValue:(id)arg1;
+ (id)durationValueWithDouble:(double)arg1;
+ (id)dateValueWithNSDate:(id)arg1;
+ (id)dateValueWithDouble:(double)arg1;
+ (id)numberValueWithDouble:(double)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataAnimatingFrameLayer : CALayer <TSCHMultiDataAnimatingFrameLayerProtocol>
{
    struct CGRect mPresentationBounds;
    struct CGPoint mPresentationPosition;
}

@property(nonatomic) struct CGPoint presentationPosition; // @synthesize presentationPosition=mPresentationPosition;
@property(nonatomic) struct CGRect presentationBounds; // @synthesize presentationBounds=mPresentationBounds;
- (id).cxx_construct;
- (struct CGRect)currentFrame;
- (void)setPosition:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DStaticBackgroundBlendLayerAnimationClip : TSCH3DChartAnimationClip
{
    NSArray *mNames;
}

+ (id)clipWithTimerName:(id)arg1;
+ (id)clip;
+ (id)clipWithTimerNames:(id)arg1;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;
- (void)dealloc;
- (id)initWithTimerName:(id)arg1;
- (id)initWithTimerNames:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGrowAnimationClip : TSCH3DChartAnimationClip
{
}

- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5;
- (void)didAddToAnimationClipsWithSceneObject:(id)arg1 scene:(id)arg2 animation:(id)arg3;
- (void)p_compileGeometryForSceneObject:(id)arg1 scene:(id)arg2 animation:(id)arg3;
- (Class)animationDataClass;
- (void)p_applyRepresentativeVertexForInfo:(const struct RenderElementInfo *)arg1;
- (void)enableBlendingForProcessor:(id)arg1 enableDepth:(_Bool)arg2;
- (int)renderMethodPoint;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationElementTimingValueShaderEffect : TSCH3DShaderEffect
{
}

+ (tvec2_84d5962d)timeSliceFromTimeRange:(const box_e9f23397 *)arg1;
+ (id)variableTimeSlice;
+ (id)variableInterpolatedElementTime;
+ (id)variableElementsTime;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (void)dealloc;
- (id)variableTimeSlice;
- (id)variableInterpolatedElementTime;
- (id)variableElementsTime;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBarGrowClipShaderEffect : TSCH3DChartClippingShaderEffect
{
    TSCH3DShaderVariable *mTimingValue;
    _Bool mPositiveOnly;
    _Bool mUseXAxis;
    float mCapFudge;
    float mClipFudge;
    float mClipInitialCapFudge;
    _Bool mDisableClippingInitialCap;
    _Bool mDisableClipping;
    _Bool mUseDiscard;
    _Bool mUseCapScaling;
}

+ (id)variableInverseBevelInfo;
+ (id)variableIsCap;
+ (id)variableClipVertex;
+ (id)variableElementRange;
@property(nonatomic) _Bool useCapScaling; // @synthesize useCapScaling=mUseCapScaling;
@property(nonatomic) float clipFudge; // @synthesize clipFudge=mClipFudge;
@property(nonatomic) float capFudge; // @synthesize capFudge=mCapFudge;
@property(nonatomic) _Bool useDiscard; // @synthesize useDiscard=mUseDiscard;
@property(nonatomic) _Bool useXAxis; // @synthesize useXAxis=mUseXAxis;
@property(nonatomic) _Bool positiveOnly; // @synthesize positiveOnly=mPositiveOnly;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)p_injectFunctions:(id)arg1;
- (void)addVariables:(id)arg1;
- (unsigned long long)numberOfClippingValues;
- (_Bool)isEqual:(id)arg1;
- (id)init;
- (id)variableInverseBevelInfo;
- (id)variableIsCap;
- (id)variableClipVertex;
- (id)variableElementRange;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBarGrowAnimationClip : TSCH3DChartGrowAnimationClip
{
    TSCH3DAnimationInterpolation *mShaderPerElementInterpolation;
    box_e9f23397 mShaderPerElementInterpolationRange;
    box_e9f23397 mShaderPerElementBlendRange;
}

@property(nonatomic) box_e9f23397 shaderPerElementBlendRange; // @synthesize shaderPerElementBlendRange=mShaderPerElementBlendRange;
@property(nonatomic) box_e9f23397 shaderPerElementInterpolationRange; // @synthesize shaderPerElementInterpolationRange=mShaderPerElementInterpolationRange;
@property(retain, nonatomic) TSCH3DAnimationInterpolation *shaderPerElementInterpolation; // @synthesize shaderPerElementInterpolation=mShaderPerElementInterpolation;
- (id).cxx_construct;
- (_Bool)shouldUpdateSeriesElementTimingWithAnyElement;
- (void)renderAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (void)p_updateCapScaleForAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (void)p_updateBlendingForAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (void)p_updateElementsTimeForAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5;
- (void)didAddToAnimationClipsWithSceneObject:(id)arg1 scene:(id)arg2 animation:(id)arg3;
- (Class)animationDataClass;
- (id)makeClipEffectAtIndex:(const tvec2_3b141483 *)arg1 sceneObject:(id)arg2 scene:(id)arg3;
- (_Bool)p_canOptimizePositiveOnlyForSceneObject:(id)arg1;
- (int)renderMethodPoint;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendGenericPropertyMap : TSSPropertyMap
{
}

+ (void)savePropertyMap:(id)arg1 toArchive:(struct LegendGenericPropertyMapArchive *)arg2 archiver:(id)arg3;
+ (id)imageFillProperties;
+ (id)properties;
- (void)saveToArchive:(struct LegendGenericPropertyMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct LegendGenericPropertyMapArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAreaGrowClipShaderEffect : TSCH3DChartClippingShaderEffect
{
    _Bool mIsOneSidedClipping;
    _Bool mUseDiscard;
    float mCapFudge;
    float mClipFudge;
}

+ (id)variableAbsIsCap;
+ (id)variableIsCap;
+ (id)variableZClipValues;
+ (id)variableClipValues;
+ (id)variableClipVertex;
@property(nonatomic) float clipFudge; // @synthesize clipFudge=mClipFudge;
@property(nonatomic) float capFudge; // @synthesize capFudge=mCapFudge;
@property(nonatomic) _Bool useDiscard; // @synthesize useDiscard=mUseDiscard;
@property(nonatomic) _Bool isOneSidedClipping; // @synthesize isOneSidedClipping=mIsOneSidedClipping;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (unsigned long long)numberOfClippingValues;
- (_Bool)isEqual:(id)arg1;
- (id)init;
- (id)variableAbsIsCap;
- (id)variableIsCap;
- (id)variableZClipValues;
- (id)variableClipValues;
- (id)variableClipVertex;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAreaGrowAnimationClip : TSCH3DChartGrowAnimationClip
{
}

- (void)renderAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (void)p_updateClipEffectStatesForAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (id)makeClipEffectAtIndex:(const tvec2_3b141483 *)arg1 sceneObject:(id)arg2 scene:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSeparateCapGrowAnimationClip : TSCH3DChartGrowAnimationClip
{
}

- (void)renderAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (_Bool)p_renderCapWithAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (_Bool)p_renderBodyWithAnimationElementInfo:(const struct ChartAnimationElementInfo *)arg1;
- (void)p_submitGrowState:(struct ChartGrowAnimationState *)arg1 info:(const struct ChartAnimationElementInfo *)arg2 portion:(int)arg3;
- (void)enableBlendingForProcessor:(id)arg1 enableDepth:(_Bool)arg2;
- (id)makeClipEffectAtIndex:(const tvec2_3b141483 *)arg1 sceneObject:(id)arg2 scene:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLineGrowAnimationClip : TSCH3DChartSeparateCapGrowAnimationClip
{
}

- (_Bool)setupElementCapForGrowState:(struct ChartGrowAnimationState *)arg1 info:(const struct ChartAnimationElementInfo *)arg2;
- (void)setupElementBodyForGrowState:(struct ChartGrowAnimationState *)arg1 info:(const struct ChartAnimationElementInfo *)arg2;
- (id)clipPlaneEffect;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPieGrowAnimationClip : TSCH3DChartSeparateCapGrowAnimationClip
{
    _Bool mUseDiscard;
}

@property(nonatomic) _Bool useDiscard; // @synthesize useDiscard=mUseDiscard;
- (_Bool)setupElementCapForGrowState:(struct ChartGrowAnimationState *)arg1 info:(const struct ChartAnimationElementInfo *)arg2;
- (void)setupElementBodyForGrowState:(struct ChartGrowAnimationState *)arg1 info:(const struct ChartAnimationElementInfo *)arg2;
- (id)clipPlaneEffect;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementAnimationTimeSlice : TSCH3DAnimationTimeSlice
{
    TSCH3DChartRep *mRep;
    TSCH3DAnimationTimeSlice *mDelivery;
    struct ChartRepRenderIndexSet mBuilt;
    struct ChartRepRenderIndexSet mActive;
    _Bool mAllowStateMismatch;
}

+ (id)timeSliceWithRep:(id)arg1;
@property(nonatomic) _Bool allowStateMismatch; // @synthesize allowStateMismatch=mAllowStateMismatch;
- (id).cxx_construct;
- (void).cxx_destruct;
- (box_e9f23397)rangeForIndex:(const tvec2_3b141483 *)arg1;
- (void)reset;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimation : NSObject <TSCH3DSceneObjectDelegator, TSCH3DSceneDelegate, TSCHUnretainedParent>
{
    TSCH3DChartRep *mRep;
    TSCH3DChartElementAnimationTimeSlice *mTimeSlice;
    TSCH3DScene *mScene;
    struct ChartAnimationTimeRanges mTimeRanges;
    TSCH3DAnimationTimings *mGlobalTimings;
    TSCH3DAnimationTimings *mBackgroundPlaneTimings;
    TSCH3DAnimationTimings *mElementPlaneTimings;
    TSCH3DAnimationTimings *mElementTimings;
    NSMutableDictionary *mTimingContext;
    NSMutableArray *mSceneAnimationClips;
    TSCH3DScene *mLayoutScene;
    TSCH3DOrderedDictionary *mSeparateLayers;
    TSCH3DAnimationValueTiming *mShaderEffectElementsTiming;
    NSMutableArray *mSceneObjectDelegates;
}

+ (id)animationWithRep:(id)arg1;
+ (void)updateScene:(id)arg1;
+ (void)updateLayoutScene:(id)arg1;
+ (void)updateRenderScene:(id)arg1;
+ (_Bool)dynamicShadowsEnabled;
+ (id)animationInfoForBuildType:(int)arg1;
+ (double)animationFPS;
+ (id)animationFilter;
+ (int)chartAnimationType;
@property(readonly, nonatomic) TSCH3DAnimationTiming *elementTimings; // @synthesize elementTimings=mElementTimings;
@property(readonly, nonatomic) TSCH3DAnimationTimeSlice *timeSlice; // @synthesize timeSlice=mTimeSlice;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) TSCH3DOrderedDictionary *separateLayers;
- (id)separateLayerSceneObjectsSelectionBlocks;
- (id)gridlineLabelsSelectionBlock;
- (id)shadowsSelectionBlock;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addToElementTimings:(id)arg1;
- (void)addToElementPlaneTimings:(id)arg1;
- (void)addToBackgroundPlaneTimings:(id)arg1;
- (struct CGRect)adjustBodyCanvasBounds:(struct CGRect)arg1 againstBodyCanvasDrawableFrame:(struct CGRect)arg2;
- (id)globalTimingInterpolation;
- (_Bool)isPie;
- (void)updateTimeRanges;
- (void)updateTimings;
- (void)p_addPlaneTimings:(id)arg1;
- (void)update:(float)arg1;
- (void)p_didUpdateAnimationTime;
@property(readonly, nonatomic) TSCH3DScene *layoutScene;
@property(readonly, nonatomic) TSCH3DScene *scene;
- (_Bool)individualValueLabels;
- (void)clearParent;
- (id)description;
- (void)dealloc;
- (id)initWithRep:(id)arg1;
- (_Bool)needDynamicShadows;
- (void)didRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)willRunForScene:(id)arg1 pipeline:(id)arg2;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
- (box_e9f23397)pieDelayedLabelsRange;
- (void)addToRotateAnimClips:(id)arg1 scene:(id)arg2 secondaryAngle:(float)arg3;
- (void)addToRotateTimings:(id)arg1;
- (void)addToBackgroundBlendAnimClips:(id)arg1 sceneObject:(id)arg2;
- (void)addToBackgroundBlendAnimClips:(id)arg1 scene:(id)arg2;
- (void)addStaticBackgroundBlendClipsToClips:(id)arg1 scene:(id)arg2;
- (void)addToBackgroundBlendTimings:(id)arg1;
- (void)addToChartRotationAnimationElementBlendAnimClips:(id)arg1 sceneObject:(id)arg2 shouldUpdateAlwaysRenderFlag:(_Bool)arg3;
- (void)addToChartElementBlendAnimClips:(id)arg1 sceneObject:(id)arg2 shouldUpdateDelayOpaqueFlag:(_Bool)arg3 shouldUpdateBlendOpaqueFlag:(_Bool)arg4 shouldUpdateAlwaysRenderFlag:(_Bool)arg5 needPerElementBlending:(_Bool)arg6;
- (void)addToRadialElementBlendTimings:(id)arg1;
- (void)addToCraneElementBlendTimings:(id)arg1;
- (void)addToRotationBasedElementBlendTimings:(id)arg1;
- (void)addToGrowElementBlendTimings:(id)arg1;
- (void)addToZAxisElementBlendTimings:(id)arg1;
- (void)addToChartElementBlendTimings:(id)arg1 range:(const box_e9f23397 *)arg2 interpolation:(id)arg3;
- (void)addToShadowBlendAnimClips:(id)arg1 sceneObject:(id)arg2;
- (void)addToShadowBlendAnimClips:(id)arg1;
- (void)addToShadowBlendTimings:(id)arg1;
- (id)growGlobalTimingInterpolation;
- (void)addToGrowAnimClips:(id)arg1 sceneObject:(id)arg2;
- (_Bool)p_growClipRequiresShaderBasedInterpolation;
- (void)addToRotatingGrowElementTimings:(id)arg1;
- (void)addToGrowElementTimings:(id)arg1;
- (void)addToGrowElementTimings:(id)arg1 reserveForLabels:(_Bool)arg2;
- (box_e9f23397)p_timeRangeForGrowElements;
- (void)addToGrowElementTimings:(id)arg1 range:(const box_e9f23397 *)arg2;
- (void)updateRotatingGrowTimeRanges;
- (_Bool)p_usesRotatingGrowEaseOut;
- (_Bool)p_isStackedBar;
- (_Bool)p_isBar;
- (_Bool)p_chunkingStyleHasAxes;
- (void)p_updateNoAxesRotatingGrowTimeRanges;
- (void)p_updateAxesOnlyRotatingGrowTimeRanges;
- (void)p_updateAllRotatingGrowTimeRanges;
- (void)p_updateRotatingGrowLabelsRange;
- (void)updateGrowTimeRanges;
- (void)p_updateGrowTimeRangesWithAxesRange:(const box_e9f23397 *)arg1 waitTimeAfterAxes:(float)arg2;
- (_Bool)p_growAnimationLinearInterpolation;
- (_Bool)p_sequenceInOrder;
- (_Bool)p_anySeriesHasLabelsEnabled;
- (void)updateRadialTimeRanges;
- (void)addAllLabelsAnimationToClips:(id)arg1 sceneObject:(id)arg2;
- (void)addToValueLabelsAnimClips:(id)arg1 sceneObject:(id)arg2;
- (void)addToValueLabelsTimings:(id)arg1;
- (void)addToValueLabelsTimings:(id)arg1 range:(const box_e9f23397 *)arg2;
- (void)addTitleAnimationToClips:(id)arg1 sceneObject:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimationEngine : NSObject <TSCHUnretainedParent>
{
    TSCH3DChartRep *mRep;
    long long mStage;
    TSCH3DChartAnimation *mAnimation;
}

+ (id)animationEngineWithRep:(id)arg1;
@property(nonatomic) long long stage; // @synthesize stage=mStage;
@property(readonly, nonatomic) TSCH3DChartAnimation *animation; // @synthesize animation=mAnimation;
- (void)updateTimings;
@property(readonly, nonatomic) TSCH3DScene *layoutScene;
@property(readonly, nonatomic) TSCH3DScene *scene;
- (void)update:(float)arg1;
@property(retain, nonatomic) Class animationClass;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimationSceneObjectDelegate : NSObject <TSCH3DChartAllSceneObjectDelegate>
{
    TSCH3DAnimationTiming *mElementTiming;
    TSCH3DAnimationTimeSlice *mTimeSlice;
    NSArray *mAnimationClips;
    NSMutableDictionary *mTimingContext;
    tvec2_3b141483 mCurrentInterpolatedTimeElementIndex;
}

+ (id)delegateWithTiming:(id)arg1 timeSlice:(id)arg2 animationClips:(id)arg3 context:(id)arg4;
- (id).cxx_construct;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)shouldUpdateSeriesElementTimingWithAnyElement;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (void)p_updateElementTimingForIndex:(const tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithTiming:(id)arg1 timeSlice:(id)arg2 animationClips:(id)arg3 context:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGrowAnimation : TSCH3DChartAnimation
{
}

+ (int)chartAnimationType;
- (id)globalTimingInterpolation;
- (id)makeDelegateWithScene:(id)arg1;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addToElementTimings:(id)arg1;
- (void)addToElementPlaneTimings:(id)arg1;
- (void)addToBackgroundPlaneTimings:(id)arg1;
- (_Bool)individualValueLabels;
- (void)updateTimeRanges;
- (_Bool)needDynamicShadows;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRotateAnimation : TSCH3DChartRotationBasedAnimation
{
}

+ (id)animationFilter;
+ (int)chartAnimationType;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRadialAnimation : TSCH3DChartAnimation
{
}

+ (void)updateLayoutScene:(id)arg1;
+ (float)radialRadius;
+ (id)animationFilter;
+ (int)chartAnimationType;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addToElementTimings:(id)arg1;
- (void)addToBackgroundPlaneTimings:(id)arg1;
- (_Bool)individualValueLabels;
- (void)updateTimeRanges;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartZAxisAnimation : TSCH3DChartAnimation
{
}

+ (void)updateScene:(id)arg1;
+ (void)updateLayoutScene:(id)arg1;
+ (id)animationFilter;
+ (int)chartAnimationType;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addToElementTimings:(id)arg1;
- (void)addToElementPlaneTimings:(id)arg1;
- (void)updateTimeRanges;
- (_Bool)needDynamicShadows;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCraneAnimation : TSCH3DChartRotationBasedAnimation
{
}

+ (void)updateLayoutScene:(id)arg1;
+ (id)animationFilter;
+ (int)chartAnimationType;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addToElementTimings:(id)arg1;
- (void)updateTimeRanges;
- (_Bool)needDynamicShadows;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartScaleAnimationClip : TSCH3DChartAnimationClip
{
    tvec3_17f03ce0 mBegin;
    tvec3_17f03ce0 mEnd;
}

@property(nonatomic) tvec3_17f03ce0 end; // @synthesize end=mEnd;
@property(nonatomic) tvec3_17f03ce0 begin; // @synthesize begin=mBegin;
- (id).cxx_construct;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAlphaBlendAnimationClip : TSCH3DChartAnimationClip
{
    id mLayerKey;
    _Bool mDelayOpaque;
    _Bool mBlendOpaque;
    _Bool mAlwaysRender;
}

@property(nonatomic) _Bool alwaysRender; // @synthesize alwaysRender=mAlwaysRender;
@property(nonatomic) _Bool blendOpaque; // @synthesize blendOpaque=mBlendOpaque;
@property(nonatomic) _Bool delayOpaque; // @synthesize delayOpaque=mDelayOpaque;
@property(retain, nonatomic) id layerKey; // @synthesize layerKey=mLayerKey;
- (void)didUpdateAnimationTimeForContext:(id)arg1 layers:(id)arg2;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;
- (void)p_updateOpacityForLayers:(id)arg1 context:(id)arg2;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2 context:(id)arg3;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5;
- (float)p_updateUniform:(id)arg1 context:(id)arg2;
- (float)protected_elementAlphaForContext:(id)arg1;
- (void)protected_addShaderEffect:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRotateAndGrowAnimation : TSCH3DChartRotationBasedAnimation
{
}

+ (id)animationFilter;
+ (int)chartAnimationType;
- (id)globalTimingInterpolation;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addToElementTimings:(id)arg1;
- (void)updateTimeRanges;
- (_Bool)individualValueLabels;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCompileAnimationData : NSObject <TSCH3DChartGeometryArrayCompilerDelegate>
{
    TSCH3DAnimationTimeSlice *mTimeSlice;
    TSCH3DGeometryInterleavedArray *mInterleavedArray;
    NSMutableDictionary *mCompiledGeometries;
    TSCH3DChartGeometryArrayCompiler *mCompiler;
    TSCH3DGeometryElementArrays *mElementArrays;
    TSCH3DChartElementSceneObject *mSceneObject;
}

+ (id)dataWithTimeSlice:(id)arg1 sceneObject:(id)arg2;
+ (_Bool)hasCompiledDataForScene:(id)arg1;
+ (id)compiledDataForScene:(id)arg1;
+ (id)scenePropertiesKey;
@property(retain, nonatomic) TSCH3DChartElementSceneObject *sceneObject; // @synthesize sceneObject=mSceneObject;
- (void)didCompileScene:(id)arg1 compiler:(id)arg2;
- (void)didProcessElementArraysForElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 compiler:(id)arg4;
- (void)addElementArrays:(id)arg1 compiler:(id)arg2;
- (id)cullBackfacesKeepingIndices:(id)arg1;
- (void)precalculateTexcoords;
- (struct GeometryResource)currentGeometryResource;
- (id)makeWholeBufferWithClass:(Class)arg1 forGeometryArrays:(const struct GeometryArrays *)arg2;
- (id)compiledGeometry;
- (_Bool)compileEntireBuffer;
- (_Bool)transformBuffers;
- (tvec2_3b141483)elementIndex;
- (void)dealloc;
- (id)initWithTimeSlice:(id)arg1 sceneObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCompileBarAnimationData : TSCH3DChartCompileAnimationData
{
    NSNumber *mCurrentInterceptValue;
}

+ (void)submitToProcessor:(id)arg1 portion:(int)arg2 scene:(id)arg3 seriesIndex:(unsigned long long)arg4;
+ (float)interceptForScene:(id)arg1 seriesIndex:(unsigned long long)arg2;
+ (id)interleavedArrayForScene:(id)arg1 seriesIndex:(unsigned long long)arg2;
+ (_Bool)hasCompiledGeometryForScene:(id)arg1 seriesIndex:(unsigned long long)arg2;
+ (id)p_compiledGeometryForScene:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (void)processElementArrays;
- (void)p_addCapAttributes;
- (void)p_addVertexRenormalizations;
- (void)p_updateInterceptValue;
- (void)p_addAnimationTimeSlices;
- (id)compiledGeometry;
- (_Bool)compileEntireBuffer;
- (_Bool)transformBuffers;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimationDataGeometryResource : NSObject
{
    TSCH3DGeometryInterleavedArray *mInterleavedArray;
    struct GeometryArrays mGeometryArrays;
}

+ (id)animationData;
@property(nonatomic) struct GeometryArrays geometryArrays; // @synthesize geometryArrays=mGeometryArrays;
@property(retain, nonatomic) TSCH3DGeometryInterleavedArray *interleavedArray; // @synthesize interleavedArray=mInterleavedArray;
- (id).cxx_construct;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCompileGeometryResourceAnimationData : TSCH3DChartCompileAnimationData
{
    TSCH3DChartAnimationDataGeometryResource *mCurrentData;
}

+ (void)submitToProcessor:(id)arg1 portion:(int)arg2 scene:(id)arg3 seriesIndex:(unsigned long long)arg4;
+ (id)geometryResourceAnimationDataForScene:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (void)didProcessElementArraysForElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 compiler:(id)arg4;
- (void)processElementArrays;
- (struct GeometryArrays)p_cullBackfaces;
- (void)addAreaGeometryCapAttributes;
- (id)p_makeWholeBufferWithClass:(Class)arg1;
- (id)compiledGeometry;
- (_Bool)compileEntireBuffer;
- (_Bool)transformBuffers;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAnimationLibrary : NSObject
{
    NSDictionary *mAnimationTypeToClass;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (id)animationInfoForType:(int)arg1 buildType:(int)arg2;
- (double)animationFPSFromType:(int)arg1;
- (id)filterStringFromType:(int)arg1;
- (id)filterStringFromClass:(Class)arg1;
- (Class)animationClassFromType:(int)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderSetup : NSObject
{
}

+ (id)cameraAndSceneTransform;
+ (id)sceneTransform;
+ (id)camera;
+ (id)viewport;
+ (id)full;
+ (id)identity;
+ (id)null;
- (id)renderingCameraFromOriginalCamera:(id)arg1 pipeline:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderNullSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderIdentitySetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderViewportSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderCameraSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderSceneTransformSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderCameraAndSceneTransformSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderFullSetup : TSCH3DSceneRenderSetup
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)setup;
+ (id)_singletonAlloc;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLayerBasedSceneRenderSetup : TSCH3DChartSceneRenderSetup
{
    CALayer<TSCH3DGLLayer> *mLayer;
    CALayer *mPixelAlignmentLayer;
    struct CGRect mVisibleBoundsInLayerRelativeSpace;
}

@property(retain, nonatomic) CALayer *pixelAlignmentLayer; // @synthesize pixelAlignmentLayer=mPixelAlignmentLayer;
@property(retain, nonatomic) CALayer<TSCH3DGLLayer> *layer; // @synthesize layer=mLayer;
- (id).cxx_construct;
- (struct CGRect)visibleBoundsInLayerRelativeSpace;
- (void)setVisibleBoundsInLayerRelativeSpace:(struct CGRect)arg1;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1 forRenderCycle:(id)arg2;
- (_Bool)setupLayerFromLayerProvider:(id)arg1 canvas:(id)arg2 visible:(struct CGRect)arg3 pixelAlignmentLayer:(id)arg4;
- (box_80622335)layerFrameInLayerRelativeSpaceFromFramebufferBounds:(const struct FramebufferBounds *)arg1;
- (box_80622335)pixelAlignBodyCanvasBounds:(const box_80622335 *)arg1;
- (box_80622335)globalPixelAlignedBodyCanvasBoundsForRenderingCamera;
- (void)copyFromChartRenderSetup:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderProcessor : NSObject
{
}

+ (id)processor;
- (void)setRenderHints:(const struct RenderHints *)arg1;
- (struct RenderHints)renderHints;
- (void)popRenderState;
- (void)pushRenderState;
- (void)setRenderState:(const struct RenderState *)arg1;
- (struct RenderState)renderState;
- (void)updateRenderState;
- (void)popState;
- (void)pushState;
- (id)effects;
- (long long)texture:(id)arg1;
- (void)texcoords:(id)arg1;
- (void)normals:(id)arg1;
- (void)geometry:(id)arg1;
- (_Bool)canRenderPrefilteredLines;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRetargetRenderProcessor : TSCH3DRenderProcessor
{
    TSCH3DRenderProcessor *mOriginal;
}

+ (id)processorWithOriginal:(id)arg1;
@property(retain, nonatomic) TSCH3DRenderProcessor *original; // @synthesize original=mOriginal;
- (void)setRenderHints:(const struct RenderHints *)arg1;
- (struct RenderHints)renderHints;
- (void)popRenderState;
- (void)pushRenderState;
- (void)setRenderState:(const struct RenderState *)arg1;
- (struct RenderState)renderState;
- (void)updateRenderState;
- (id)effectsStates;
- (id)effects;
- (void)resetBuffers;
- (void)endFrame;
- (void)beginFrame;
- (void)copyTransformInto:(tmat4x4_3074befe *)arg1;
- (void)copyProjectionInto:(tmat4x4_3074befe *)arg1;
- (void)projection:(tmat4x4_3074befe *)arg1;
- (void)popMatrix;
- (void)pushMatrix;
- (void)translate:(tvec3_17f03ce0 *)arg1;
- (void)scale:(tvec3_17f03ce0 *)arg1;
- (void)multiply:(tmat4x4_3074befe *)arg1;
- (void)replace:(tmat4x4_3074befe *)arg1;
- (void)popState;
- (void)pushState;
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithOriginal:(id)arg1;
- (_Bool)canRenderPrefilteredLines;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMatrixRenderProcessor : TSCH3DRetargetRenderProcessor
{
    struct StateStack<glm::detail::tmat4x4<float>, 8> mTransformStack;
    tmat4x4_3074befe mProjection;
    _Bool mTransformChanged;
    _Bool mProjectionChanged;
}

@property(readonly, nonatomic) _Bool projectionChanged; // @synthesize projectionChanged=mProjectionChanged;
@property(readonly, nonatomic) _Bool transformChanged; // @synthesize transformChanged=mTransformChanged;
- (id).cxx_construct;
- (void)projection:(tmat4x4_3074befe *)arg1;
- (void)popMatrix;
- (void)pushMatrix;
- (void)translate:(tvec3_17f03ce0 *)arg1;
- (void)scale:(tvec3_17f03ce0 *)arg1;
- (void)multiply:(tmat4x4_3074befe *)arg1;
- (void)replace:(tmat4x4_3074befe *)arg1;
- (void)copyTransformInto:(tmat4x4_3074befe *)arg1;
- (void)copyProjectionInto:(tmat4x4_3074befe *)arg1;
@property(readonly, nonatomic) const tmat4x4_3074befe *projection;
@property(readonly, nonatomic) const tmat4x4_3074befe *current;
- (id)normalizedViewAll;
- (void)resetChangeFlags;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DObjectStateRenderProcessor : TSCH3DRetargetRenderProcessor
{
    StateStack_22d3dc01 mObjectStateStack;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)resetBuffers;
- (void)popState;
- (void)pushState;
- (StateStack_22d3dc01 *)objectStateStack;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCombinationRenderProcessor : TSCH3DRetargetRenderProcessor
{
    NSIndexSet *mEnabled;
    struct StateStack<glm::detail::tmat4x4<float>, 8> mTransformStack;
    tmat4x4_3074befe mProjection;
    _Bool mTransformChanged;
    _Bool mProjectionChanged;
    StateStack_22d3dc01 mObjectStateStack;
    TSCH3DShaderEffects *mEffects;
    TSCH3DShaderEffectsStates *mShaderEffectsStates;
}

+ (id)processorWithOriginal:(id)arg1 enableTypes:(id)arg2;
@property(readonly, nonatomic) _Bool projectionChanged; // @synthesize projectionChanged=mProjectionChanged;
@property(readonly, nonatomic) _Bool transformChanged; // @synthesize transformChanged=mTransformChanged;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)effectsStates;
- (id)effects;
- (void)resetBuffers;
- (void)popState;
- (void)pushState;
- (StateStack_22d3dc01 *)objectStateStack;
- (void)projection:(tmat4x4_3074befe *)arg1;
- (void)popMatrix;
- (void)pushMatrix;
- (void)translate:(tvec3_17f03ce0 *)arg1;
- (void)scale:(tvec3_17f03ce0 *)arg1;
- (void)multiply:(tmat4x4_3074befe *)arg1;
- (void)replace:(tmat4x4_3074befe *)arg1;
- (void)copyTransformInto:(tmat4x4_3074befe *)arg1;
- (void)copyProjectionInto:(tmat4x4_3074befe *)arg1;
- (tmat4x4_3074befe *)projectionTransform;
- (tmat4x4_3074befe *)currentTransform;
- (void)resetTransformChangeFlags;
- (_Bool)shaderEnabled;
- (_Bool)objectStateEnabled;
- (_Bool)matrixEnabled;
- (void)dealloc;
- (id)initWithOriginal:(id)arg1 enableTypes:(id)arg2;
- (id)initWithOriginal:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTrackResourcesRenderProcessor : TSCH3DRetargetRenderProcessor
{
    NSMutableSet *mResourceSet;
}

- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
@property(readonly, nonatomic) NSSet *resourceSet;
- (id)resetReturningPreviousResourceSet;
- (void)dealloc;
- (id)initWithOriginal:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderPipeline : NSObject
{
    TSCH3DRenderProcessor *mProcessor;
    TSCH3DSession *mSession;
}

+ (id)pipelineWithProcessor:(id)arg1 session:(id)arg2;
+ (id)clipRectForTargetSize:(const tvec2_3b141483 *)arg1 intermediateSize:(const tvec2_3b141483 *)arg2;
@property(readonly, nonatomic) TSCH3DSession *session; // @synthesize session=mSession;
@property(retain, nonatomic) TSCH3DRenderProcessor *processor; // @synthesize processor=mProcessor;
@property(readonly, nonatomic) TSCH3DGLContext *context;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLinkablePipeline : TSCH3DRenderPipeline <TSCH3DPipelineLinkable>
{
}

- (id)output;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBlurCopyPipeline : TSCH3DFramebufferCopyPipeline
{
    tvec2_84d5962d mOffset;
}

+ (id)pipelineWithProcessor:(id)arg1 session:(id)arg2 offset:(tvec2_84d5962d)arg3;
@property(nonatomic) tvec2_84d5962d offset; // @synthesize offset=mOffset;
- (id).cxx_construct;
- (void)updateShaderEffectsStates;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 offset:(tvec2_84d5962d)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBlurShaderEffect : TSCH3DShaderEffect
{
    unsigned long long mRadius;
    float mKernelScale;
}

+ (id)effectWithRadius:(unsigned long long)arg1 kernelScale:(float)arg2;
+ (id)variableBlurOffset;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithRadius:(unsigned long long)arg1 kernelScale:(float)arg2;
- (id)variableBlurOffset;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferBlurPipeline : TSCH3DLinkablePipeline
{
    id <TSCH3DPipelineLinkable> mSource;
    TSCH3DGLFramebuffer *mTarget;
    TSCH3DGLFramebuffer *mPingpong;
    unsigned long long mRadius;
    unsigned long long mNumPasses;
    float mKernelScale;
}

@property(nonatomic) float kernelScale; // @synthesize kernelScale=mKernelScale;
@property(nonatomic) unsigned long long numPasses; // @synthesize numPasses=mNumPasses;
@property(nonatomic) unsigned long long radius; // @synthesize radius=mRadius;
@property(readonly, nonatomic) TSCH3DGLFramebuffer *target; // @synthesize target=mTarget;
@property(retain, nonatomic) id <TSCH3DPipelineLinkable> source; // @synthesize source=mSource;
- (_Bool)run;
- (_Bool)blur;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;
- (id)pingPongFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferTransformPipeline : TSCH3DLinkablePipeline
{
    id <TSCH3DPipelineLinkable> mSource;
    TSCH3DGLFramebuffer *mTarget;
    TSCH3DGLFramebuffer *mInput;
}

@property(retain, nonatomic) TSCH3DGLFramebuffer *target; // @synthesize target=mTarget;
@property(retain, nonatomic) id <TSCH3DPipelineLinkable> source; // @synthesize source=mSource;
- (_Bool)run;
- (_Bool)prepareFramebuffer;
- (void)loadSource;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHPropertyMutationIndirectTuple : TSCHPropertyMutationTuple
{
    int mStyleOwnerType;
    unsigned long long mStyleOwnerIndex;
}

@property(readonly, nonatomic) unsigned long long index; // @synthesize index=mStyleOwnerIndex;
@property(readonly, nonatomic) int type; // @synthesize type=mStyleOwnerType;
- (id)styleOwnerRef;
- (id)indirectTuple;
- (id)styleOwner;
- (id)initWithStyleOwner:(id)arg1 mutations:(id)arg2;
- (id)initWithStyleOwnerType:(int)arg1 index:(unsigned long long)arg2 inChart:(id)arg3 mutations:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferCopyPipeline : TSCH3DFramebufferTransformPipeline
{
    NSArray *mEffects;
    TSCH3DResource *mVertices;
    TSCH3DResource *mTexcoords;
    struct RenderState mRenderState;
    tmat4x4_3074befe mTransform;
    box_0260e9b3 mTargetViewport;
    _Bool mWipeTarget;
    tvec4_ac57c72d mWipeColor;
    CDUnknownBlockType mUpdateShaderEffectsStatesBlock;
}

@property(copy, nonatomic) CDUnknownBlockType updateShaderEffectsStatesBlock; // @synthesize updateShaderEffectsStatesBlock=mUpdateShaderEffectsStatesBlock;
@property(nonatomic) tvec4_ac57c72d wipeColor; // @synthesize wipeColor=mWipeColor;
@property(nonatomic) _Bool wipeTarget; // @synthesize wipeTarget=mWipeTarget;
@property(nonatomic) box_0260e9b3 targetViewport; // @synthesize targetViewport=mTargetViewport;
@property(nonatomic) tmat4x4_3074befe transform; // @synthesize transform=mTransform;
@property(nonatomic) struct RenderState renderState; // @synthesize renderState=mRenderState;
@property(retain, nonatomic) TSCH3DResource *texcoords; // @synthesize texcoords=mTexcoords;
@property(retain, nonatomic) TSCH3DResource *vertices; // @synthesize vertices=mVertices;
@property(copy, nonatomic) NSArray *effects; // @synthesize effects=mEffects;
- (id).cxx_construct;
- (void)updateShaderEffectsStates;
- (void)transformFramebuffer;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferCombinePipeline : TSCH3DFramebufferCopyPipeline
{
    id <TSCH3DPipelineLinkable> mSource1;
    TSCH3DGLFramebuffer *mInput1;
    unsigned long long mTextureUnit1;
}

@property(retain, nonatomic) id <TSCH3DPipelineLinkable> source1; // @synthesize source1=mSource1;
- (void)updateShaderEffectsStates;
- (_Bool)run;
- (void)loadSource;
@property(retain, nonatomic) id <TSCH3DPipelineLinkable> source0;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferSplitPipeline : TSCH3DFramebufferTransformPipeline
{
    TSCH3DGLFramebuffer *mTarget1;
}

@property(retain, nonatomic) TSCH3DGLFramebuffer *target1; // @synthesize target1=mTarget1;
@property(retain, nonatomic) TSCH3DGLFramebuffer *target0;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSupersampleShaderEffect : TSCH3DShaderEffect
{
    unsigned long long mSize;
    unsigned long long mSamples;
    TSCH3DShaderVariable *mSupersampleTexcoords;
}

+ (id)effectWithSize:(unsigned long long)arg1 samples:(unsigned long long)arg2;
+ (id)variableAccum;
- (void)inject:(id)arg1;
- (void)p_addSampleAtX:(float)arg1 y:(float)arg2 weight:(double)arg3 program:(id)arg4 accumVariable:(id)arg5 variableIndex:(unsigned long long)arg6;
- (void)addVariables:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithSize:(unsigned long long)arg1 samples:(unsigned long long)arg2;
- (id)variableAccum;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSupersampleSceneRenderPipeline : TSCH3DSceneRenderPipeline <TSCH3DMultipassRenderPipeline>
{
    TSCH3DFramebufferCopyPipeline *mCopyPipeline;
    TSCH3DTileSceneRenderPipeline *mTilePipeline;
    TSCH3DGLFramebuffer *mTileFBO;
    long long mPass;
    long long mNumTiles;
    unsigned long long mTileSize;
    unsigned long long mTileSamples;
    _Bool mEnableSinglePassRendering;
    TSCH3DViewFrustumCullingDelegate *mViewFrustumCullingDelegate;
    _Bool mDidProtectTargetFramebuffer;
}

@property(nonatomic) _Bool enableSinglePassRendering; // @synthesize enableSinglePassRendering=mEnableSinglePassRendering;
@property(nonatomic) unsigned long long tileSamples; // @synthesize tileSamples=mTileSamples;
@property(nonatomic) unsigned long long tileSize; // @synthesize tileSize=mTileSize;
- (_Bool)render;
- (void)skipLowQualityPass;
- (_Bool)p_singlePassRender;
- (_Bool)p_multipassRender;
- (_Bool)p_renderTilesUntilFailingConditionBlock:(CDUnknownBlockType)arg1;
- (void)setupTiling;
- (id)p_targetFramebuffer;
- (unsigned long long)p_tilePixelSize;
- (id)cloneWithProcessor:(id)arg1 scene:(id)arg2;
- (void)resetMultipassRendering;
- (_Bool)multipassRenderingIsDone;
- (_Bool)updatesTargetFramebuffer;
- (_Bool)isActivePass;
- (void)releaseResources;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3;
- (id)renderingFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferAccumulationPipeline : TSCH3DFramebufferTransformPipeline
{
    float mFactor;
    float mAccumulated;
    TSCH3DFramebufferTransformPipeline<TSCH3DFramebufferAccumulator> *mAccumulator;
    TSCH3DFramebufferTransformPipeline<TSCH3DFramebufferResolver> *mResolver;
}

@property(nonatomic) float accumulated; // @synthesize accumulated=mAccumulated;
@property(nonatomic) float factor; // @synthesize factor=mFactor;
- (_Bool)run;
- (_Bool)resolve;
- (_Bool)accumulate;
- (void)setTarget:(id)arg1;
- (void)setSource:(id)arg1;
- (void)reset;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdrawDebugShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdrawBlendLineShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variablePixelSize;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variablePixelSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdrawBlendLineDebugShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variablePixelSize;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variablePixelSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdrawCollectProcessor : TSCH3DRetargetRenderProcessor <TSCHUnretainedParent>
{
    TSCH3DChartElementEdgeOverdraw *mParent;
    TSCH3DResource *mVertices;
    TSCH3DResource *mNormals;
    TSCH3DResource *mDiffuseTexcoords;
    TSCH3DShaderEffectsStates *mEffectsStates;
    TSCH3DShaderEffects *mEffects;
    tmat4x4_3074befe mCurrentModelView;
}

@property(nonatomic) tmat4x4_3074befe currentModelView; // @synthesize currentModelView=mCurrentModelView;
@property(retain, nonatomic) TSCH3DResource *diffuseTexcoords; // @synthesize diffuseTexcoords=mDiffuseTexcoords;
@property(retain, nonatomic) TSCH3DResource *normals; // @synthesize normals=mNormals;
@property(retain, nonatomic) TSCH3DResource *vertices; // @synthesize vertices=mVertices;
@property(nonatomic) TSCH3DChartElementEdgeOverdraw *parent; // @synthesize parent=mParent;
- (id).cxx_construct;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (id)p_lineRenderSetting;
- (void)beginLineRendering;
- (void)setupEdgeOverdrawRenderState;
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (void)clearParent;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdraw : NSObject
{
    _Bool mPreprocessed;
    TSCH3DPrefilteredLineRenderer *mRenderer;
    TSCH3DSceneRenderPipeline *mRenderingPipeline;
    box_80622335 mTexturePortion;
}

- (id).cxx_construct;
- (void)processPipeline:(id)arg1 lineRenderer:(id)arg2;
@property(readonly, nonatomic) TSCH3DSceneRenderPipeline *renderingPipeline; // @synthesize renderingPipeline=mRenderingPipeline;
@property(readonly, nonatomic) TSCH3DPrefilteredLineRenderer *renderer; // @synthesize renderer=mRenderer;
- (void)preprocessPipeline:(id)arg1;
- (void)renderOverdrawEdges:(id)arg1 modelView:(tmat4x4_3074befe *)arg2;
@property(nonatomic) box_80622335 *texturePortion;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementEdgeOverdrawSceneObject : TSCH3DSceneObject
{
    TSCH3DPrefilteredLineRenderer *mRenderer;
    TSCH3DChartElementEdgeOverdraw *mOverdraw;
    box_80622335 mTexturePortion;
}

@property(nonatomic) box_80622335 texturePortion; // @synthesize texturePortion=mTexturePortion;
- (id).cxx_construct;
- (void)getBounds:(id)arg1;
- (void)render:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryAntialiasingSceneRenderPipeline : TSCH3DSceneRenderPipeline <TSCH3DMultipassRenderPipeline>
{
    TSCH3DScene *mOverdraw;
    TSCH3DGLFramebuffer *mRenderingFBO;
    TSCH3DChartElementEdgeOverdrawSceneObject *mGeometry;
    long long mPass;
}

@property(retain, nonatomic) TSCH3DGLFramebuffer *renderingFBO; // @synthesize renderingFBO=mRenderingFBO;
@property(retain, nonatomic) TSCH3DScene *overdraw; // @synthesize overdraw=mOverdraw;
- (_Bool)render;
- (void)skipLowQualityPass;
- (void)resetMultipassRendering;
- (_Bool)multipassRenderingIsDone;
- (_Bool)updatesTargetFramebuffer;
- (void)setFramebuffer:(id)arg1;
- (void)setScene:(id)arg1;
- (void)releaseResources;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3;
- (id)renderingFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRGBA8FramebufferAccumulationSubPipeline : TSCH3DFramebufferCopyPipeline <TSCHUnretainedParent>
{
    TSCH3DRGBA8FramebufferAccumulationPipeline *mParent;
}

+ (id)pipelineWithProcessor:(id)arg1 session:(id)arg2 parent:(id)arg3;
- (void)setupShaderEffects;
- (void)clearParent;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 parent:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRGBA8AccumulationPipeline : TSCH3DRGBA8FramebufferAccumulationSubPipeline <TSCH3DFramebufferAccumulator>
{
    long long mCurrentPass;
}

- (void)reset;
- (_Bool)prepareFramebuffer;
- (struct AccumulationData)mixedAccumulation;
- (struct AccumulationData)progressiveAccumulationWithPerentage:(float)arg1;
- (void)setupShaderEffects;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRGBA8ResolvePipeline : TSCH3DRGBA8FramebufferAccumulationSubPipeline <TSCH3DFramebufferResolver>
{
}

- (void)updateShaderEffectsStates;
- (_Bool)prepareFramebuffer;
- (void)setupShaderEffects;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRGBA8FramebufferAccumulationPipeline : TSCH3DFramebufferAccumulationPipeline
{
}

- (void)setFramebufferSize:(tvec2_3b141483 *)arg1;
- (id)RGBA8Resolver;
- (id)RGBA8Accumulator;
- (void)deallo;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;
- (id)accumulationFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLowColorBitsShaderEffect : TSCH3DShaderEffect
{
    long long mLowColorBits;
}

@property(nonatomic) long long lowColorBits; // @synthesize lowColorBits=mLowColorBits;
- (long long)lowColorBitShift;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DComponent16WidenShaderEffect : TSCH3DLowColorBitsShaderEffect
{
    float mFactor;
    NSString *mWidenFunction;
}

+ (id)variableWidenSelect;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)widenFunction;
@property(nonatomic) float factor; // @synthesize factor=mFactor;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)variableWidenSelect;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DComponent16AccumulatePipeline : TSCH3DFramebufferSplitPipeline <TSCH3DFramebufferAccumulator>
{
    TSCH3DFramebufferCopyPipeline *mPipeline;
    TSCH3DComponent16WidenShaderEffect *mWiden;
    _Bool mValid;
}

- (_Bool)run;
- (void)reset;
- (void)allocateFramebuffersWithSize:(tvec2_3b141483 *)arg1;
- (id)makeFBOWithSize:(tvec2_3b141483 *)arg1 resource:(id)arg2;
- (void)setTexcoords:(id)arg1;
- (void)setVertices:(id)arg1;
- (void)setFactor:(float)arg1;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;
- (id)target1FBOResource;
- (id)target0FBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFullComponent16AdditionShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variableAdditionTextureColor;
+ (id)variableAdditionTexture;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableAdditionTextureColor;
- (id)variableAdditionTexture;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFullComponent16WidenPipeline : TSCH3DFramebufferCombinePipeline
{
    _Bool mSelection;
}

@property(nonatomic) _Bool selection; // @synthesize selection=mSelection;
- (void)updateShaderEffectsStates;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFullComponent16AccumulatePipeline : TSCH3DComponent16AccumulatePipeline
{
    TSCH3DGLFramebuffer *mBuffer;
    TSCH3DFullComponent16AdditionShaderEffect *mAdd;
}

@property(retain, nonatomic) TSCH3DGLFramebuffer *buffer; // @synthesize buffer=mBuffer;
- (void)runAccumulation;
- (void)allocateFramebuffersWithSize:(tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;
- (id)bufferFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTightComponent16WidenPipeline : TSCH3DFramebufferCopyPipeline
{
    _Bool mSelection;
}

@property(nonatomic) _Bool selection; // @synthesize selection=mSelection;
- (void)updateShaderEffectsStates;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTightComponent16AccumulatePipeline : TSCH3DComponent16AccumulatePipeline
{
}

- (void)runAccumulation;
@property(nonatomic) long long lowColorBits;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DComponent16ResolveShaderEffect : TSCH3DLowColorBitsShaderEffect
{
}

+ (id)variableResolveFactor;
+ (id)variableSourceTexture1Color;
+ (id)variableSourceTexture1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableResolveFactor;
- (id)variableSourceTexture1Color;
- (id)variableSourceTexture1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DComponent16ResolvePipeline : TSCH3DFramebufferCombinePipeline <TSCH3DFramebufferResolver>
{
    TSCH3DComponent16ResolveShaderEffect *mResolveEffect;
    float mFactor;
}

@property(nonatomic) float factor; // @synthesize factor=mFactor;
- (void)updateShaderEffectsStates;
@property(nonatomic) long long lowColorBits;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DComponent16FramebufferAccumulationPipeline : TSCH3DFramebufferAccumulationPipeline
{
}

- (_Bool)resolve;
- (_Bool)accumulate;
- (void)setFramebufferSize:(tvec2_3b141483 *)arg1;
- (void)setFactor:(float)arg1;
- (id)component16Resolver;
- (id)component16Accumulator;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderPipeline : TSCH3DRenderPipeline
{
    TSCH3DSceneRenderPipeline *mOriginal;
    TSCH3DScene *mScene;
    TSCH3DGLFramebuffer *mFramebuffer;
    TSCH3DSceneRenderSetup *mSetup;
    TSCH3DCamera *mCamera;
    NSNumber *mScale;
    NSNumber *mSamples;
    NSNumber *mSuperSamples;
    NSNumber *mPreserveFramebufferContent;
}

+ (id)pipelineWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3;
@property(retain, nonatomic) TSCH3DSceneRenderPipeline *original; // @synthesize original=mOriginal;
- (_Bool)run;
- (_Bool)render;
- (_Bool)renderWithFramebuffer:(id)arg1;
- (void)setupCamera:(id)arg1;
- (void)setupRendering;
- (_Bool)activateFramebuffer:(id)arg1;
- (void)clearFramebuffer;
- (tvec4_ac57c72d)backgroundClearColor;
- (void)renderSelector:(SEL)arg1;
@property(readonly, nonatomic) TSCH3DCamera *camera;
- (void)clearCamera;
- (id)concreteSetup;
@property(nonatomic) _Bool preserveFramebufferContent;
@property(readonly, nonatomic) float renderScale;
- (void)setObjectRenderMode:(int)arg1;
@property(nonatomic) float superSamples;
@property(nonatomic) float samples;
@property(nonatomic) float scale;
@property(retain, nonatomic) TSCH3DSceneRenderSetup *setup;
@property(retain, nonatomic) TSCH3DGLFramebuffer *framebuffer;
@property(retain, nonatomic) TSCH3DScene *scene;
- (id)session;
- (id)processor;
- (id)cloneWithRetargetProcessor:(id)arg1 scene:(id)arg2;
- (id)baseRecloneWithRetargetProcessor:(id)arg1 scene:(id)arg2;
- (id)recloneWithPipelineClass:(Class)arg1 retargetProcessor:(id)arg2 scene:(id)arg3;
- (id)cloneWithProcessor:(id)arg1 scene:(id)arg2;
- (id)baseRecloneWithProcessor:(id)arg1 scene:(id)arg2;
- (id)recloneWithPipelineClass:(Class)arg1 processor:(id)arg2 scene:(id)arg3;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3;
- (_Bool)shouldSkipLabelsIfHidden;
- (id)labelsMeshRendererForLabelsRenderer:(id)arg1;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DJitteredSceneRenderPipeline : TSCH3DSceneRenderPipeline <TSCH3DMultipassRenderPipeline>
{
    TSCH3DGLFramebuffer *mRenderingFBO;
    TSCH3DFramebufferAccumulationPipeline *mAccumulationPipeline;
    long long mJitter;
    long long mTotalJitters;
    long long mRefinementJitters;
}

@property(retain, nonatomic) TSCH3DFramebufferAccumulationPipeline *accumulationPipeline; // @synthesize accumulationPipeline=mAccumulationPipeline;
@property(retain, nonatomic) TSCH3DGLFramebuffer *renderingFBO; // @synthesize renderingFBO=mRenderingFBO;
- (_Bool)render;
- (void)skipLowQualityPass;
- (void)resetMultipassRendering;
- (_Bool)multipassRenderingIsDone;
- (_Bool)updatesTargetFramebuffer;
- (_Bool)refinementIsReady;
- (_Bool)isActivePass;
- (id)jitterCamera:(id)arg1;
- (void)setFramebuffer:(id)arg1;
- (void)releaseResources;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3;
- (id)renderingFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileSceneRenderSetup : TSCH3DSceneRenderSetup
{
    TSCH3DSceneRenderSetup *mFullSetup;
    TSCH3DCamera *mFullCamera;
    tvec2_3b141483 mTileSize;
    tvec2_3b141483 mOverlap;
    tvec2_3b141483 mTileIndex;
    long long mTileSamples;
    long long mTileSuperSamples;
}

+ (id)setupWithFullSetup:(id)arg1 camera:(id)arg2 tileSize:(long long)arg3 overlap:(long long)arg4 tileSamples:(long long)arg5 tileSuperSamples:(long long)arg6;
@property(readonly, nonatomic) long long tileSuperSamples; // @synthesize tileSuperSamples=mTileSuperSamples;
@property(readonly, nonatomic) long long tileSamples; // @synthesize tileSamples=mTileSamples;
@property(nonatomic) tvec2_3b141483 tileIndex; // @synthesize tileIndex=mTileIndex;
- (id).cxx_construct;
- (id)renderingCameraFromOriginalCamera:(id)arg1 pipeline:(id)arg2;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (box_0260e9b3)usableTileViewportRegion;
- (box_0260e9b3)targetViewportRegion;
- (box_0260e9b3)viewportTile;
- (tvec2_3b141483)totalTiles;
- (box_0260e9b3)fullViewport;
- (tvec2_3b141483)usableTileSize;
- (void)dealloc;
- (id)initWithSetup:(id)arg1 camera:(id)arg2 tileSize:(long long)arg3 overlap:(long long)arg4 tileSamples:(long long)arg5 tileSuperSamples:(long long)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileSceneRenderPipeline : TSCH3DLinkablePipeline
{
    TSCH3DTileSceneRenderSetup *mTileSetup;
}

+ (id)pipeline;
@property(readonly, nonatomic) TSCH3DTileSceneRenderSetup *tileSetup; // @synthesize tileSetup=mTileSetup;
- (_Bool)renderTile:(tvec2_3b141483 *)arg1 targetPipeline:(id)arg2;
- (id)cloneTargetPipeline:(id)arg1;
- (id)setupWithTileSize:(long long)arg1 overlap:(long long)arg2 tileSamples:(long long)arg3 tileSuperSamples:(long long)arg4 targetPipeline:(id)arg5;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTile : NSObject
{
    box_80622335 mBounds;
}

@property(nonatomic) box_80622335 bounds; // @synthesize bounds=mBounds;
- (id).cxx_construct;
- (_Bool)renderIntoContext:(struct CGContext *)arg1;
- (id)initWithBounds:(const box_80622335 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileImage : TSCH3DTile
{
    TSUImage *mImage;
}

+ (id)imageWithTSUImage:(id)arg1 bounds:(const box_80622335 *)arg2;
- (_Bool)renderIntoContext:(struct CGContext *)arg1;
@property(readonly, nonatomic) struct CGImage *CGImage;
- (id)description;
- (void)dealloc;
- (id)initWithTSUImage:(id)arg1 bounds:(const box_80622335 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderBlockTile : TSCH3DTile
{
    CDUnknownBlockType mRenderBlock;
}

- (_Bool)renderIntoContext:(struct CGContext *)arg1;
- (void)dealloc;
- (id)initWithBounds:(const box_80622335 *)arg1 renderBlock:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHPropertyMutationTuple : NSObject
{
    id <TSCHStyleOwning> mStyleOwner;
    NSDictionary *mMutations;
}

@property(readonly) NSDictionary *mutations; // @synthesize mutations=mMutations;
@property(readonly) id <TSCHStyleOwning> styleOwner; // @synthesize styleOwner=mStyleOwner;
- (id)description;
- (void)dealloc;
- (id)initWithStyleOwner:(id)arg1 mutationMap:(id)arg2;
- (id)initWithStyleOwner:(id)arg1 mutations:(id)arg2;
- (id)styleOwnerRef;
- (id)indirectTuple;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileImageSceneRenderPipelineImageGenerator : NSObject
{
    _Bool mFlipped;
}

+ (id)imageGenerator;
@property(nonatomic) _Bool flipped; // @synthesize flipped=mFlipped;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileImageSceneRenderPipelineSingleImageGenerator : TSCH3DTileImageSceneRenderPipelineImageGenerator
{
    TSCH3DPixelBuffer *mBuffer;
}

+ (id)generatorWithFullViewportSize:(const tvec2_3b141483 *)arg1;
- (id)images;
- (void)processSourceRegion:(const box_0260e9b3 *)arg1 targetRegion:(const box_0260e9b3 *)arg2;
- (void)dealloc;
- (id)initWithFullViewportSize:(const tvec2_3b141483 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileImageSceneRenderPipelineMultipleImagesGenerator : TSCH3DTileImageSceneRenderPipelineImageGenerator
{
    NSMutableArray *mImages;
}

- (id)images;
- (void)processSourceRegion:(const box_0260e9b3 *)arg1 targetRegion:(const box_0260e9b3 *)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTileImageSceneRenderPipeline : TSCH3DTileSceneRenderPipeline
{
    unsigned long long mTileSize;
    TSCH3DSceneRenderPipeline *mTargetPipeline;
    _Bool mSingleOutputImage;
    NSArray *mImages;
    unsigned long long mTileSamples;
    unsigned long long mTileOverlap;
    _Bool mFlipImages;
}

@property(readonly, nonatomic) NSArray *images; // @synthesize images=mImages;
@property(retain, nonatomic) TSCH3DSceneRenderPipeline *targetPipeline; // @synthesize targetPipeline=mTargetPipeline;
@property(nonatomic) unsigned long long tileOverlap; // @synthesize tileOverlap=mTileOverlap;
@property(nonatomic) unsigned long long tileSamples; // @synthesize tileSamples=mTileSamples;
@property(nonatomic) unsigned long long tileSize; // @synthesize tileSize=mTileSize;
@property(nonatomic) _Bool flipImages; // @synthesize flipImages=mFlipImages;
@property(nonatomic) _Bool singleOutputImage; // @synthesize singleOutputImage=mSingleOutputImage;
- (_Bool)run;
- (_Bool)processTile:(id)arg1 generator:(id)arg2;
- (id)cloneTargetPipeline:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetBoundsRenderProcessor : TSCH3DTransformGeometryRenderProcessor
{
    int mMode;
    struct ObjectBounds mBounds;
}

@property(nonatomic) int mode; // @synthesize mode=mMode;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (void)extend2DProjectedBounds:(const box_a3bd9649 *)arg1;
- (void)resetBounds;
@property(readonly, nonatomic) const struct ObjectBounds *bounds;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetBoundsPipeline : TSCH3DSceneRenderPipeline
{
}

+ (id)pipelineWithScene:(id)arg1;
+ (id)pipelineWithScene:(id)arg1 renderProcessor:(id)arg2;
- (_Bool)run;
- (void)getBounds:(id)arg1;
- (void)getProjectedBounds:(id)arg1;
- (void)get3DBounds:(id)arg1;
- (void)runScene:(id)arg1 selector:(SEL)arg2;
- (void)setObjectRenderMode:(int)arg1;
- (void)set2DProjectedRenderingMode:(_Bool)arg1;
- (_Bool)useIndividualBounds;
- (void)extend2DProjectedBounds:(const box_a3bd9649 *)arg1;
- (void)resetBounds;
@property(readonly, nonatomic) const struct ObjectBounds *bounds;
- (id)boundsProcessor;
- (id)initWithScene:(id)arg1;
- (id)initWithScene:(id)arg1 renderProcessor:(id)arg2;
- (_Bool)shouldSkipLabelsIfHidden;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGet3DBoundsPipeline : TSCH3DGetBoundsPipeline
{
}

- (void)getProjectedBounds:(id)arg1;
- (void)set2DProjectedRenderingMode:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRayPickPipeline : TSCH3DSceneRenderPipeline <TSCH3DSceneObjectDelegator>
{
    tvec2_84d5962d mPickPosition;
    TSCH3DRayPickPipelineDelegate *mSceneObjectDelegate;
}

+ (id)pipelineWithScene:(id)arg1 position:(const tvec2_84d5962d *)arg2;
- (id).cxx_construct;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
@property(readonly, nonatomic) TSCH3DPickedPoint *pickedPoint;
- (id)p_frontMostPickedPoint;
- (id)p_closestPickedPoint;
@property(nonatomic) float slack;
@property(readonly, nonatomic) NSArray *pickedPoints;
- (id)p_renderProcessor;
- (id)p_unsortedPickedPoints;
- (_Bool)run;
- (void)rayPick:(id)arg1;
- (void)dealloc;
- (id)initWithScene:(id)arg1 position:(const tvec2_84d5962d *)arg2;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRayPickRenderProcessor : TSCH3DRetargetRenderProcessor
{
    TSCH3DDataBuffer *mBuffer;
    NSMutableArray *mPickedPoints;
    tvec2_84d5962d mPosition;
    float mSlack;
    TSCH3DRayPickPipelineDelegate *mSceneObjectDelegate;
}

@property(retain, nonatomic) TSCH3DRayPickPipelineDelegate *sceneObjectDelegate; // @synthesize sceneObjectDelegate=mSceneObjectDelegate;
@property(nonatomic) float slack; // @synthesize slack=mSlack;
@property(nonatomic) tvec2_84d5962d position; // @synthesize position=mPosition;
- (id).cxx_construct;
@property(readonly, nonatomic) NSArray *pickedPoints;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (void)geometry:(id)arg1;
- (id)matrix;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRayPickPipelineDelegate : NSObject <TSCH3DChartAllSceneObjectDelegate>
{
    TSCH3DSceneObject *mCurrentSceneObject;
    tvec2_3b141483 mCurrentElement;
}

@property(nonatomic) tvec2_3b141483 currentElement; // @synthesize currentElement=mCurrentElement;
@property(retain, nonatomic) TSCH3DSceneObject *currentSceneObject; // @synthesize currentSceneObject=mCurrentSceneObject;
- (id).cxx_construct;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPickedPoint : NSObject <NSCopying>
{
    tvec2_3b141483 mElement;
    TSCH3DSceneObject *mSceneObject;
    tvec3_17f03ce0 mObjectSpacePoint;
    tvec2_84d5962d mCenterProjectionPoint;
    tmat4x4_3074befe mProjection;
    tmat4x4_3074befe mTransform;
}

+ (id)pickedPointWithSceneObject:(id)arg1 element:(const tvec2_3b141483 *)arg2 projection:(const tmat4x4_3074befe *)arg3 transform:(const tmat4x4_3074befe *)arg4 objectSpacePoint:(const tvec3_17f03ce0 *)arg5 centerProjectionPoint:(const tvec2_84d5962d *)arg6;
@property(readonly, retain, nonatomic) TSCH3DSceneObject *sceneObject; // @synthesize sceneObject=mSceneObject;
@property(readonly, nonatomic) tmat4x4_3074befe transform; // @synthesize transform=mTransform;
@property(readonly, nonatomic) tmat4x4_3074befe projection; // @synthesize projection=mProjection;
@property(readonly, nonatomic) tvec2_84d5962d centerProjectionPoint; // @synthesize centerProjectionPoint=mCenterProjectionPoint;
@property(readonly, nonatomic) tvec3_17f03ce0 objectSpacePoint; // @synthesize objectSpacePoint=mObjectSpacePoint;
@property(readonly, nonatomic) tvec2_3b141483 element; // @synthesize element=mElement;
- (id).cxx_construct;
@property(readonly, nonatomic) tvec3_17f03ce0 cameraSpacePoint;
- (void)clearParent;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSceneObject:(id)arg1 element:(const tvec2_3b141483 *)arg2 projection:(const tmat4x4_3074befe *)arg3 transform:(const tmat4x4_3074befe *)arg4 objectSpacePoint:(const tvec3_17f03ce0 *)arg5 centerProjectionPoint:(const tvec2_84d5962d *)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartContinuousElementProperties : TSCH3DChartBasicElementProperties
{
    float mDepthGapFactor;
    float mDepthLimitFactor;
    float mShadowCameraDepthLimitAdjustmentFactor;
    unsigned long long mMaxLimitingSeries;
}

@property(readonly, nonatomic) float shadowCameraDepthLimitAdjustmentFactor; // @synthesize shadowCameraDepthLimitAdjustmentFactor=mShadowCameraDepthLimitAdjustmentFactor;
@property(readonly, nonatomic) float depthLimitFactor; // @synthesize depthLimitFactor=mDepthLimitFactor;
@property(readonly, nonatomic) float p_sageInterSetDepthGapProperty; // @synthesize p_sageInterSetDepthGapProperty=mDepthGapFactor;
- (_Bool)applyElementTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (float)depthForScene:(id)arg1;
- (float)chartMinZForScene:(id)arg1;
- (void)reset;
- (void)resetWithEnumerator:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (void)updateLabels;
- (tvec2_3b141483)seriesSize;
@property(readonly, nonatomic) long long seriesCount;
- (float)p_depthLimitedChartInitialDepthOffset;
- (float)p_interSetDepthGapProperty;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementProperties : NSObject <NSCopying>
{
    TSCH3DTexturePool *mPool;
}

+ (id)properties;
@property(readonly, nonatomic) TSCH3DTexturePool *pool; // @synthesize pool=mPool;
- (id)renderingLightingModelForSeries:(id)arg1;
- (_Bool)applyElementTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (float)elementTransformDepthFromPropertyAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (void)applyChartElementsTransform:(struct ObjectTransforms *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)addTexcoordsToProcessor:(id)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3;
- (_Bool)applyCombinedTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (_Bool)applyElementTransformToProcessor:(id)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (void)applyChartElementsTransformToProcessor:(id)arg1;
- (id)getPropertiesOfType:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMutableElementProperties : TSCH3DChartElementProperties
{
    TSCH3DArray2D *mLightingModels;
    TSCH3DLabelResources *mLabels;
    TSCH3DTransform *mChartTransform;
    TSCH3DTransform *mElementsTransform;
}

@property(retain, nonatomic) TSCH3DTransform *elementsTransform; // @synthesize elementsTransform=mElementsTransform;
@property(retain, nonatomic) TSCH3DTransform *chartTransform; // @synthesize chartTransform=mChartTransform;
@property(retain, nonatomic) TSCH3DLabelResources *labels; // @synthesize labels=mLabels;
@property(retain, nonatomic) TSCH3DArray2D *lightingModels; // @synthesize lightingModels=mLightingModels;
- (id)renderingLightingModelForSeries:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMixinElementProperties : TSCH3DChartElementProperties
{
    TSCH3DChartElementProperties *mOriginal;
}

+ (id)propertiesWithProperties:(id)arg1;
- (id)texcoordsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)normalsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)boundsGeometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)geometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)renderingLightingModelForSeries:(id)arg1;
- (_Bool)applyElementTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (float)elementTransformDepthFromPropertyAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (void)applyChartElementsTransform:(struct ObjectTransforms *)arg1;
- (id)elementsTransform;
- (id)chartTransform;
- (id)labels;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithProperties:(id)arg1;
- (id)getPropertiesOfType:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBasicElementProperties : TSCH3DChartMutableElementProperties
{
    TSCH3DChartModelEnumerator *mEnumerator;
    tvec2_3b141483 mSize;
}

@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (id)texcoordsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)normalsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)boundsGeometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)geometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (void)createResources;
- (void)resetWithEnumerator:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBarElementProperties : TSCH3DChartBasicElementProperties
{
    vector_ec52ae8c mMaxValues;
    struct vector<TSCH3D::BarElementInfo, std::__1::allocator<TSCH3D::BarElementInfo>> mElementInfos;
    _Bool mStacked;
    _Bool mBevelEdges;
    float mBarWidth;
    float mElementsXOffset;
    float mSeriesOffset;
    float mSetWidth;
    int mBarShape;
    TSCH3DLabelResources *mSeriesLabels;
    struct array<TSCH3D::BarExtrusionDetails, 2> mExtrusionDetails;
    TSCH3DBarChartDefaultAppearance *mAppearance;
    struct vector<(null)<anonymous>::Range, std::__1::allocator<(null)<anonymous>::Range>> mRangeCache;
}

@property(readonly, nonatomic) _Bool hasBevelEdges; // @synthesize hasBevelEdges=mBevelEdges;
@property(readonly, nonatomic) int barShape; // @synthesize barShape=mBarShape;
@property(retain, nonatomic) TSCH3DLabelResources *seriesLabels; // @synthesize seriesLabels=mSeriesLabels;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <TSCH3DBarChartAppearance> appearance;
- (id)p_appearance;
- (void)releaseAndClearAppearance;
- (void)p_createAppearance;
- (void)p_updateAppearance;
- (void)p_resetExtrusionDetails;
- (id)p_appearanceClasses;
- (void)setExtrusionDetails:(const struct BarExtrusionDetails *)arg1 forShape:(int)arg2;
- (const struct BarExtrusionDetails *)extrusionDetailsForShape:(int)arg1;
- (float)maxValueForSeries:(long long)arg1;
- (void)reset;
- (float)chartInitialDepthOffset;
- (void)updateLabels;
- (void)createResources;
- (void)updateMaxValuesAndBevels;
- (void)calculateLayout;
- (id)texcoordsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)normalsForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)boundsGeometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (struct GeometryResource)geometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)p_barResourceCacheItemAtIndex:(const tvec2_3b141483 *)arg1;
- (_Bool)applyElementTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (float)elementTransformDepthFromPropertyAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (float)barWidth;
- (float)interceptValueForSeries:(id)arg1;
- (struct Range)p_calculateRangeForSeries:(id)arg1 index:(tvec2_3b141483 *)arg2 intercept:(const struct BarIntercept *)arg3;
- (struct Range)rangeForSeries:(id)arg1 index:(tvec2_3b141483 *)arg2;
- (void)p_updateRangeCache;
- (struct BarIntercept)calculateInterceptForSeries:(id)arg1;
- (_Bool)beveledAtIndex:(const tvec2_3b141483 *)arg1;
- (void)setBeveledAtIndex:(const tvec2_3b141483 *)arg1;
- (void)setMaxValueForSeries:(long long)arg1 value:(float)arg2;
- (struct BarElementInfo *)elementInfoAtIndex:(const tvec2_3b141483 *)arg1;
- (struct BarElementInfo)barElementInfoAtIndex:(const tvec2_3b141483 *)arg1;
- (void)setElementInfo:(const struct BarElementInfo *)arg1 atIndex:(const tvec2_3b141483 *)arg2;
- (long long)flatIndex:(tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarChartDefaultAppearance : NSObject <TSCHUnretainedParent, TSCH3DBarChartAppearance>
{
    TSCH3DChartBarElementProperties *mProperties;
}

+ (struct BarExtrusionDetails)defaultDetails;
+ (int)shapeType;
- (_Bool)isCircular;
- (float)depthForScene:(id)arg1;
- (float)chartMinZForScene:(id)arg1;
- (float)signedValueForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (float)maxValueForSeries:(long long)arg1;
- (void)clearParent;
- (void)dealloc;
- (id)initWithProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarChartCircularAppearance : TSCH3DBarChartDefaultAppearance
{
}

+ (struct BarExtrusionDetails)defaultDetails;
+ (int)shapeType;
- (_Bool)isCircular;
- (float)depthForScene:(id)arg1;
- (float)chartMinZForScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPieElementProperties : TSCH3DChartBasicElementProperties
{
    vector_ec52ae8c mPercentOfTotal;
    vector_ec52ae8c mRotation;
    vector_ec52ae8c mExplode;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reset;
- (void)updateValues;
- (_Bool)applyElementTransform:(struct ObjectTransforms *)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg4;
- (float)elementTransformDepthFromPropertyAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (float)explosionAtElementIndex:(const tvec2_3b141483 *)arg1 propertyAccessor:(const struct ChartScenePropertyAccessor *)arg2;
- (_Bool)anyHasExplosion;
- (void)setRotation:(float)arg1 atElementIndex:(const tvec2_3b141483 *)arg2;
- (float)rotationAtElementIndex:(const tvec2_3b141483 *)arg1;
- (void)setExplosion:(float)arg1 atElementIndex:(const tvec2_3b141483 *)arg2;
- (float)explosionAtElementIndex:(const tvec2_3b141483 *)arg1;
- (void)setPercentOfTotal:(float)arg1 atElementIndex:(const tvec2_3b141483 *)arg2;
- (float)percentOfTotalAtElementIndex:(const tvec2_3b141483 *)arg1;
- (long long)flatIndex:(const tvec2_3b141483 *)arg1;
- (void)updateLabels;
- (struct GeometryResource)boundsGeometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DScenePropertyAccessor : NSObject <TSCHUnretainedParent>
{
    TSCH3DScene *mScene;
}

+ (id)accessorWithScene:(id)arg1;
@property(readonly, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
- (void)clearParent;
- (void)dealloc;
- (id)initWithScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartScenePropertyAccessor : TSCH3DScenePropertyAccessor
{
}

- (tmat4x4_3074befe)sceneTransform;
@property(nonatomic) tvec2_84d5962d sageChartInfoSize;
- (id)initWithScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLabelsContainingSceneObject : TSCH3DSceneObject
{
    TSCH3DLabelsRenderer *mLabelsRenderer;
}

- (void)renderLabelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg1;
- (void)renderLabelsResourcesSessionWithResources:(id)arg1 expectedSize:(const tvec2_3b141483 *)arg2 pipeline:(id)arg3 renderBlock:(CDUnknownBlockType)arg4;
- (void)dispatchElementLabelHandler:(CDUnknownBlockType)arg1;
- (void)getSelectionKnobsPositions:(id)arg1;
- (int)knobsModeForLabelType:(int)arg1 scene:(id)arg2;
- (void)rayPick:(id)arg1;
- (void)postGetBounds:(id)arg1;
- (void)postRenderBounds:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)primeRenderCaches:(id)arg1;
- (void)postrender:(id)arg1;
- (void)render:(id)arg1;
- (void)renderAnnotatedLabels:(id)arg1;
- (void)renderLabels:(id)arg1;
- (void)p_render:(id)arg1 selector:(SEL)arg2;
- (id)labelsRenderer;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAxisLabelsProperties : NSObject
{
    TSCHChartInfo *mInfo;
    TSCH3DLabelResources *mLabels;
    unsigned long long mStyleIndex;
    TSCHSelectionPath *mSelectionPath;
    _Bool mHidden;
    TSULRUCache *mCategoryStridingCache;
    float mCachedTextFactor;
}

+ (id)propertiesWithInfo:(id)arg1 labels:(id)arg2 styleIndex:(unsigned long long)arg3;
@property(nonatomic) float cachedTextFactor; // @synthesize cachedTextFactor=mCachedTextFactor;
@property(readonly, nonatomic) TSULRUCache *categoryStridingCache; // @synthesize categoryStridingCache=mCategoryStridingCache;
@property(nonatomic) _Bool hidden; // @synthesize hidden=mHidden;
@property(retain, nonatomic) TSCHSelectionPath *selectionPath; // @synthesize selectionPath=mSelectionPath;
@property(readonly, nonatomic) unsigned long long styleIndex; // @synthesize styleIndex=mStyleIndex;
@property(readonly, nonatomic) TSCHChartInfo *info; // @synthesize info=mInfo;
@property(readonly, nonatomic) TSCH3DLabelResources *labels; // @synthesize labels=mLabels;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 labels:(id)arg2 styleIndex:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAxisLabelsSceneObject : TSCH3DChartLabelsContainingSceneObject
{
    id <TSCH3DAxisLabelPositioner><NSObject> mValueLabelPositioner;
    id <TSCH3DAxisLabelPositioner><NSObject> mCategoryLabelPositioner;
}

+ (unsigned int)valueAxisLabelAlignmentForScene:(id)arg1;
+ (void)cacheValueAxisLabelAlignmentForScene:(id)arg1;
+ (void)setSelectionPath:(id)arg1 selectionMode:(int)arg2 forScene:(id)arg3;
+ (struct TSCH3DScenePart)partWithEnumerator:(id)arg1 chartInfo:(id)arg2 styleIndex:(unsigned long long)arg3;
@property(retain) id <TSCH3DAxisLabelPositioner> categoryLabelPositioner; // @synthesize categoryLabelPositioner=mCategoryLabelPositioner;
@property(retain) id <TSCH3DAxisLabelPositioner> valueLabelPositioner; // @synthesize valueLabelPositioner=mValueLabelPositioner;
- (id)renderInfoForSelectionPath:(id)arg1 info:(id)arg2;
- (_Bool)canEditTextForSelectionPath:(id)arg1 forInfo:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1 forInfo:(id)arg2;
- (int)knobsModeForLabelType:(int)arg1 scene:(id)arg2;
- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (id)selectionPathForInfo:(id)arg1 axis:(id)arg2 selectionPathLabelIndex:(unsigned long long)arg3;
- (void)renderAnnotatedLabels:(id)arg1;
- (void)renderLabels:(id)arg1;
- (void)postRenderBounds:(id)arg1;
- (void)p_setOffset:(const tvec3_17f03ce0 *)arg1 forLabelType:(int)arg2 pipeline:(id)arg3 part:(struct TSCH3DScenePart)arg4 positioner:(id)arg5;
- (void)p_renderCategoryLabels:(id)arg1;
- (tvec3_17f03ce0)p_categoryLabelsOffsetFromAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (long long)p_categoryStride:(id)arg1;
- (void)p_renderValueLabels:(id)arg1;
- (tvec3_17f03ce0)p_valueLabelsOffsetFromAccessor:(const struct ChartScenePropertyAccessor *)arg1;
- (void)p_renderLabels:(id)arg1 labelType:(int)arg2 part:(struct TSCH3DScenePart)arg3 positioner:(id)arg4 offset:(const tvec3_17f03ce0 *)arg5 offset2DBlock:(CDUnknownBlockType)arg6 strideBlock:(CDUnknownBlockType)arg7 skipFirst:(_Bool)arg8 showLast:(_Bool)arg9;
- (unsigned int)alignmentForPositioner:(id)arg1 scene:(id)arg2 enumerator:(id)arg3 returningDirection:(tvec3_17f03ce0 *)arg4;
- (tvec3_17f03ce0)labelPositionDirectionForScene:(id)arg1 enumerator:(id)arg2;
- (id)effects;
- (void)dealloc;
- (int)p_animationTextureSceneDelegateChunkPlane;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTitleProperties : NSObject
{
    TSCHChartInfo *mInfo;
    TSCH3DLabelResources *mLabels;
    _Bool mHidden;
    TSCH3DChartTitlePositioner *mCachedPositioner;
}

+ (id)propertiesWithInfo:(id)arg1 styleIndex:(unsigned long long)arg2;
@property(retain, nonatomic) TSCH3DChartTitlePositioner *cachedPositioner; // @synthesize cachedPositioner=mCachedPositioner;
@property(nonatomic) _Bool hidden; // @synthesize hidden=mHidden;
@property(readonly, nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mInfo;
@property(readonly, nonatomic) TSCH3DLabelResources *labels; // @synthesize labels=mLabels;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 styleIndex:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTitleSceneObject : TSCH3DChartLabelsContainingSceneObject
{
}

+ (void)setSelectionPath:(id)arg1 selectionMode:(int)arg2 forScene:(id)arg3;
+ (struct TSCH3DScenePart)partWithChartInfo:(id)arg1;
+ (struct CGSize)labelWrapSizeForScene:(id)arg1;
+ (_Bool)setLabelWrapBounds:(const box_80622335 *)arg1 forScene:(id)arg2;
+ (struct CGSize)p_labelWrapSizeForScene:(id)arg1 returningSizeValue:(id *)arg2;
- (id)renderInfoForSelectionPath:(id)arg1 info:(id)arg2;
- (_Bool)isAnnotated;
- (void)renderLabels:(id)arg1;
- (void)renderAnnotatedLabels:(id)arg1;
- (void)p_renderLabel:(id)arg1;
- (void)addTitleAnimationToClips:(id)arg1;
- (int)p_animationTextureSceneDelegateChunkPlane;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMainTitleSceneObject : TSCH3DChartTitleSceneObject
{
}

+ (id)paragraphStyleForTitleFontForInfo:(id)arg1;
+ (unsigned long long)styleIndexForInfo:(id)arg1;
- (_Bool)isAnnotated;
- (struct LabelTransform)labelTransformForPositioner:(id)arg1;
- (id)textForInfo:(id)arg1;
- (_Bool)enabledForInfo:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1 forInfo:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1 forInfo:(id)arg2;
- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (int)labelType;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAxisTitleSceneObject : TSCH3DChartTitleSceneObject
{
}

+ (id)paragraphStyleForTitleFontForInfo:(id)arg1;
+ (unsigned long long)styleIndexForInfo:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1 forInfo:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1 forInfo:(id)arg2;
- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (struct LabelTransform)labelTransformForPositioner:(id)arg1;
- (id)textForInfo:(id)arg1;
- (_Bool)enabledForInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCategoryAxisTitleSceneObject : TSCH3DChartAxisTitleSceneObject
{
}

+ (double)textRotationForChartInfo:(id)arg1;
+ (id)axisForInfo:(id)arg1;
- (int)labelType;
- (_Bool)isAnnotated;
- (struct LabelTransform)labelTransformForPositioner:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartValueAxisTitleSceneObject : TSCH3DChartAxisTitleSceneObject
{
}

+ (double)textRotationForChartInfo:(id)arg1;
+ (id)axisForInfo:(id)arg1;
+ (_Bool)isFixedPositionForScene:(id)arg1;
+ (void)setIsFixedPosition:(_Bool)arg1 forScene:(id)arg2;
- (int)labelType;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTitlePositioner : NSObject
{
    TSCH3DScene *mScene;
    TSCHChartInfo *mInfo;
    tvec2_84d5962d mCachedCategoryAxisLabelsSize;
    tvec2_84d5962d mCachedValueAxisLabelsSize;
    tvec2_84d5962d mCachedSeriesLabelsSize;
}

+ (id)positionerWithInfo:(id)arg1 scene:(id)arg2;
@property(readonly, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
@property(readonly, nonatomic) TSCHChartInfo *info; // @synthesize info=mInfo;
- (id).cxx_construct;
- (tvec2_84d5962d)sizeOfSeriesLabels;
- (tvec2_84d5962d)sizeOfValueAxisLabels;
- (tvec2_84d5962d)sizeOfCategoryAxisLabels;
- (double)wrapWidthForSize:(struct CGSize)arg1 labelTransform:(const struct LabelTransform *)arg2;
- (void)applyParagraphStyle:(id)arg1 onLabelTransform:(struct LabelTransform *)arg2 alignmentDimension:(int)arg3;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 scene:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DHorizontalChartTitlePositioner : TSCH3DChartTitlePositioner
{
}

- (struct LabelTransform)categoryAxisTitleTransform;
- (struct LabelTransform)valueAxisTitleTransform;
- (struct LabelTransform)mainTitleTransform;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVerticalChartTitlePositioner : TSCH3DChartTitlePositioner
{
}

- (tvec2_84d5962d)sizeOfValueAxisLabelsForAlignment:(unsigned int)arg1;
- (struct LabelTransform)categoryAxisTitleTransform;
- (struct LabelTransform)valueAxisTitleTransform;
- (struct LabelTransform)mainTitleTransform;
- (float)categoryVerticalPadding;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPieChartTitlePositioner : TSCH3DChartTitlePositioner
{
}

- (struct LabelTransform)mainTitleTransform;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartValueLabelsSceneObject : TSCH3DChartLabelsContainingSceneObject
{
}

- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (void)dispatchElementLabelHandler:(CDUnknownBlockType)arg1;
- (void)renderAnnotatedLabels:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObjectProcessItems : NSObject <TSCHUnretainedParent>
{
    TSCH3DChartElementSceneObject *mSceneObject;
    TSCH3DSceneRenderPipeline *mPipeline;
    TSCH3DChartElementProperties *mProperties;
    vector_cd7372eb mDelayedItems;
}

+ (id)processItemsWithSceneObject:(id)arg1 properties:(id)arg2 pipeline:(id)arg3;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)processItems;
- (void)performItemsProcessing;
- (void)p_processElementInfoWithSeries:(id)arg1 position:(const tvec2_3b141483 *)arg2;
- (void)processDelayedItemsWithOpacity:(float)arg1;
- (_Bool)p_delayedItemsAreUnique;
- (struct RenderElementInfo)elementInfoWithSeries:(id)arg1 position:(const tvec2_3b141483 *)arg2;
@property(readonly, nonatomic) TSCH3DRenderProcessor *processor;
@property(readonly, nonatomic) _Bool geometryOnly;
@property(readonly, nonatomic) _Bool useBoundsGeometry;
@property(readonly, nonatomic) _Bool pushStates;
- (void)clearParent;
- (void)dealloc;
- (id)initWithSceneObject:(id)arg1 properties:(id)arg2 pipeline:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObjectProcessGeometryOnlyItems : TSCH3DChartElementSceneObjectProcessItems
{
}

- (void)processDelayedItemsWithOpacity:(float)arg1;
- (void)processElementInfo:(const struct RenderElementInfo *)arg1 eachValue:(_Bool)arg2;
- (_Bool)processEnumeratorSeries:(id)arg1;
- (_Bool)geometryOnly;
- (_Bool)useBoundsGeometry;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObjectProcessBoundsItems : TSCH3DChartElementSceneObjectProcessGeometryOnlyItems
{
}

- (_Bool)useBoundsGeometry;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObjectProcessRenderItems : TSCH3DChartElementSceneObjectProcessItems
{
}

- (void)processElementInfo:(const struct RenderElementInfo *)arg1 eachValue:(_Bool)arg2;
- (_Bool)processEnumeratorSeries:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObjectProcessTransparentItems : TSCH3DChartElementSceneObjectProcessItems
{
}

- (void)processElementInfo:(const struct RenderElementInfo *)arg1 eachValue:(_Bool)arg2;
- (_Bool)processEnumeratorSeries:(id)arg1;
- (_Bool)pushStates;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartElementSceneObject : TSCH3DSceneObject
{
}

+ (id)resetSeriesStorage:(id)arg1 forSeries:(id)arg2;
+ (_Bool)shouldCreateMeshSeriesStorage;
+ (void)setLowDetailedGeometriesForScene:(id)arg1;
+ (id)scenePropertiesKey;
+ (struct TSCH3DScenePart)partWithEnumerator:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
+ (_Bool)isHorizontalChart;
- (_Bool)transparencyDepthMask;
- (void)p_processItems:(id)arg1 processItemsClass:(Class)arg2;
- (void)renderSeriesLabelsSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)setTransparencyBlendingForProcessor:(id)arg1;
- (_Bool)shouldDelayForChartOpacity:(float)arg1;
- (float)chartOpacityForScene:(id)arg1;
- (_Bool)p_isRenderPassDelayedForDelegate:(id)arg1;
- (_Bool)applyEffectsForProperties:(id)arg1 series:(id)arg2 index:(const tvec2_3b141483 *)arg3 pipeline:(id)arg4 injectEffectsUsingBlock:(CDUnknownBlockType)arg5;
- (struct ElementRenderPass)render:(const struct RenderElementInfo *)arg1 pushMatrix:(_Bool)arg2 delayedPass:(_Bool)arg3;
- (void)postrenderElement:(const struct RenderElementInfo *)arg1;
- (void)renderElement:(const struct RenderElementInfo *)arg1;
- (void)renderTwoPassGeometry:(_Bool)arg1 processor:(id)arg2 renderBlock:(CDUnknownBlockType)arg3;
- (void)prerenderElement:(const struct RenderElementInfo *)arg1;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (void)getSelectionKnobsPositions:(id)arg1;
- (void)rayPick:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)render:(id)arg1;
- (_Bool)shouldRenderEachValue;
- (_Bool)shouldRenderSeries:(id)arg1;
- (tvec3_17f03ce0)adjustedScaleForInfoChartScale:(const tvec3_17f03ce0 *)arg1 scene:(id)arg2;
- (float)depthForScene:(id)arg1;
- (void)renderLabelsSceneObject:(id)arg1 pipeline:(id)arg2;
- (tvec2_84d5962d)labelOffset:(unsigned int)arg1 labelSize:(const tvec2_84d5962d *)arg2 textureSize:(const tvec2_84d5962d *)arg3 dataSpaceValue:(float)arg4;
- (tvec2_84d5962d)labelObjectSpacePosition:(unsigned int)arg1 axisValue:(double)arg2 intercept:(double)arg3;
- (void)updateLightingEffectsState:(id)arg1 scene:(id)arg2;
- (struct GeometryResource)geometryForSeries:(id)arg1 index:(const tvec2_3b141483 *)arg2 scene:(id)arg3;
- (id)modelEnumeratorFromScene:(id)arg1;
- (id)elementPropertiesFromScene:(id)arg1;
- (struct TSCH3DScenePart)scenePartForScene:(id)arg1;
- (id)scenePropertiesKey;
- (id)delegateFromScene:(id)arg1;
- (void)addZAxisAnimationToClips:(id)arg1 scene:(id)arg2;
- (void)p_addZAxisAnimationToClips:(id)arg1 scene:(id)arg2 zStart:(float)arg3;
- (void)postAddDataToGeometryResourceAnimationData:(id)arg1;
- (_Bool)growNeedsPerElementAlphaBlendingForDeliveryStyle:(unsigned long long)arg1;
- (_Bool)blendOpaqueForRotationAnimationElementBlendAnimationClip;
- (_Bool)shouldUpdateBlendOpaqueForRotationAnimationElementBlendAnimationClip;
- (_Bool)delayOpaqueForRotationAnimationElementBlendAnimationClip;
- (_Bool)shouldUpdateDelayOpaqueForRotationAnimationElementBlendAnimationClip;
- (id)areaClipPlaneEffect;
- (_Bool)blendOpaqueForElementBlendAnimationClip;
- (_Bool)alwaysRenderForElementBlendAnimationClip;
- (_Bool)delayOpaqueForElementBlendAnimationClip;
- (float)clipFudgeForGrowAnimation;
- (float)capFudgeForGrowAnimation;
- (_Bool)canOptimizePositiveOnlyForGrowAnimation;
- (Class)getBounds3DClass;
- (Class)resizer3DClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAbstractBarSceneObject : TSCH3DChartElementSceneObject
{
}

+ (void)setLowDetailedGeometriesForScene:(id)arg1;
+ (Class)propertiesClass;
- (void)sortElements:(vector_cd7372eb *)arg1 pipeline:(id)arg2;
- (tvec3_17f03ce0)sortingPositionForElement:(const struct RenderElementInfo *)arg1;
- (tvec3_17f03ce0)adjustedScaleForInfoChartScale:(const tvec3_17f03ce0 *)arg1 scene:(id)arg2;
- (float)chartMinZForScene:(id)arg1;
- (float)depthForScene:(id)arg1;
- (void)updateElementEffectsStates:(const struct RenderElementInfo *)arg1 depthToWidthRatio:(float)arg2;
- (void)updateTilingEffect:(struct TexCoordTilingShaderEffectState *)arg1 series:(id)arg2 properties:(id)arg3 textureTiling:(id)arg4 areaSize:(tvec3_17f03ce0 *)arg5 element:(tvec2_3b141483 *)arg6;
- (_Bool)shouldRenderEachValue;
- (void)renderLabelsSceneObject:(id)arg1 pipeline:(id)arg2 enumerator:(id)arg3 properties:(id)arg4;
- (tvec2_84d5962d)p_valueLabelPaddingForLabelPosition:(unsigned int)arg1;
- (void)renderSeriesLabelsSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)renderSeriesLabelsSceneObject:(id)arg1 pipeline:(id)arg2 enumerator:(id)arg3 properties:(id)arg4;
- (box_a3bd9649)shadowPlanePadding;
- (box_e9f23397)shadowBlendRangeForChartDeliveryStyle:(unsigned long long)arg1;
- (void)addZAxisAnimationToClips:(id)arg1 scene:(id)arg2;
- (_Bool)growNeedsPerElementAlphaBlendingForDeliveryStyle:(unsigned long long)arg1;
- (_Bool)blendOpaqueForElementBlendAnimationClip;
- (_Bool)delayOpaqueForElementBlendAnimationClip;
- (float)clipFudgeForGrowAnimation;
- (float)capFudgeForGrowAnimation;
- (_Bool)canOptimizePositiveOnlyForGrowAnimation;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartColumnSceneObject : TSCH3DChartAbstractBarSceneObject
{
}

+ (_Bool)isHorizontalChart;
+ (_Bool)isStacked;
+ (id)chartSeriesType;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStackedColumnSceneObject : TSCH3DChartColumnSceneObject
{
}

+ (_Bool)isHorizontalChart;
+ (_Bool)isStacked;
+ (id)chartSeriesType;
+ (_Bool)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned long long)arg1;
- (void)sortElements:(vector_cd7372eb *)arg1 pipeline:(id)arg2;
- (_Bool)blendOpaqueForRotationAnimationElementBlendAnimationClip;
- (_Bool)shouldUpdateBlendOpaqueForRotationAnimationElementBlendAnimationClip;
- (_Bool)growNeedsPerElementAlphaBlendingForDeliveryStyle:(unsigned long long)arg1;
- (_Bool)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBarSceneObject : TSCH3DChartColumnSceneObject
{
}

+ (struct TSCH3DScenePart)partWithEnumerator:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
+ (void)updateLightingEffectsState:(id)arg1 scene:(id)arg2;
+ (void)addHorizontalTransformToProperties:(id)arg1;
+ (_Bool)isHorizontalChart;
+ (_Bool)isStacked;
+ (id)chartSeriesType;
- (void)updateLightingEffectsState:(id)arg1 scene:(id)arg2;
- (tvec2_84d5962d)labelObjectSpacePosition:(unsigned int)arg1 axisValue:(double)arg2 intercept:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStackedBarSceneObject : TSCH3DChartStackedColumnSceneObject
{
}

+ (struct TSCH3DScenePart)partWithEnumerator:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
+ (_Bool)isHorizontalChart;
+ (_Bool)isStacked;
+ (id)chartSeriesType;
- (void)updateLightingEffectsState:(id)arg1 scene:(id)arg2;
- (tvec2_84d5962d)labelObjectSpacePosition:(unsigned int)arg1 axisValue:(double)arg2 intercept:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSeriesSceneObject : TSCH3DChartElementSceneObject
{
}

+ (float)depthLimitFactorForSeriesCount:(long long)arg1 maxLimitingSeries:(long long)arg2;
+ (id)createBoundsForSeries:(id)arg1;
+ (_Bool)shouldCreateMeshSeriesStorage;
+ (Class)propertiesClass;
+ (float)chartSeriesPolygonOffset;
- (void)sortElements:(vector_cd7372eb *)arg1 pipeline:(id)arg2;
- (float)shadowCameraDepthLimitAdjustmentFactorForScene:(id)arg1;
- (_Bool)transparencyDepthMask;
- (_Bool)shouldRenderSeries:(id)arg1;
- (float)chartMinZForScene:(id)arg1;
- (float)depthForScene:(id)arg1;
- (void)updateElementEffectsStates:(const struct RenderElementInfo *)arg1 depthToWidthRatio:(float)arg2;
- (void)updateTilingEffect:(struct TexCoordTilingShaderEffectState *)arg1 properties:(id)arg2 textureTiling:(id)arg3 size:(tvec3_17f03ce0 *)arg4;
- (void)postrenderElement:(const struct RenderElementInfo *)arg1;
- (void)prerenderElement:(const struct RenderElementInfo *)arg1;
- (void)renderLabelsSceneObject:(id)arg1 pipeline:(id)arg2 enumerator:(id)arg3 properties:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLineSceneObject : TSCH3DChartSeriesSceneObject
{
}

+ (struct MeshData)createMeshForSeries:(id)arg1;
+ (_Bool)supportsChartSeriesDepthOffset;
+ (float)chartSeriesDepth;
+ (id)chartSeriesType;
- (_Bool)shouldRenderSeries:(id)arg1;
- (void)updateTilingEffect:(struct TexCoordTilingShaderEffectState *)arg1 properties:(id)arg2 textureTiling:(id)arg3 size:(const tvec3_17f03ce0 *)arg4;
- (_Bool)alwaysRenderForElementBlendAnimationClip;
- (struct EdgeDetectionParameters)edgeDetectionParameters;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAreaSceneObject : TSCH3DChartSeriesSceneObject
{
}

+ (struct MeshData)createMeshForSeries:(id)arg1;
+ (id)chartSeriesType;
+ (_Bool)supportsChartSeriesDepthOffset;
+ (float)chartSeriesDepth;
- (void)postAddDataToGeometryResourceAnimationData:(id)arg1;
- (_Bool)alwaysRenderForElementBlendAnimationClip;
- (id)areaClipPlaneEffect;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStackedAreaSceneObject : TSCH3DChartAreaSceneObject
{
}

+ (float)depthLimitFactorForSeriesCount:(long long)arg1 maxLimitingSeries:(long long)arg2;
+ (_Bool)supportsChartSeriesDepthOffset;
+ (float)chartSeriesDepth;
+ (float)chartSeriesPolygonOffset;
+ (id)chartSeriesType;
- (void)sortElements:(vector_cd7372eb *)arg1 pipeline:(id)arg2;
- (float)depthForScene:(id)arg1;
- (_Bool)transparencyDepthMask;
- (id)areaClipPlaneEffect;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPieSceneObject : TSCH3DChartElementSceneObject
{
}

+ (struct MeshData)createMeshForSeries:(id)arg1;
+ (id)createBoundsForSeries:(id)arg1;
+ (id)wholePieBoundsResource;
+ (id)p_wholePieBounds;
+ (id)p_boundsDataBufferWithDepthFactor:(float)arg1 angleRange:(const range_2a4e38ce *)arg2 includeEndPoints:(_Bool)arg3;
+ (unsigned long long)p_boundsStepsForAngle:(double)arg1;
+ (float)calculateHalfAngleForSeries:(id)arg1;
+ (id)createGeometryWithStartAngle:(float)arg1 endAngle:(float)arg2 bevel:(_Bool)arg3 bevelEdges:(_Bool)arg4;
+ (_Bool)shouldCreateMeshSeriesStorage;
+ (Class)propertiesClass;
+ (id)chartSeriesType;
+ (float)geometrySpaceRadius;
- (void)sortElements:(vector_cd7372eb *)arg1 pipeline:(id)arg2;
- (_Bool)transparencyDepthMask;
- (void)setExplosion:(float)arg1 atElementIndex:(const tvec2_3b141483 *)arg2 forScene:(id)arg3;
- (float)explosionAtElementIndex:(const tvec2_3b141483 *)arg1 forScene:(id)arg2;
- (void)updateElementEffectsStates:(const struct RenderElementInfo *)arg1 depthToWidthRatio:(float)arg2;
- (void)updateTilingEffect:(struct TexCoordTilingShaderEffectState *)arg1 properties:(id)arg2 textureTiling:(id)arg3 depth:(float)arg4 percentOfTotal:(float)arg5;
- (_Bool)shouldRenderEachValue;
- (void)renderLabelsSceneObject:(id)arg1 pipeline:(id)arg2 enumerator:(id)arg3 properties:(id)arg4;
- (void)postAddDataToGeometryResourceAnimationData:(id)arg1;
- (_Bool)alwaysRenderForElementBlendAnimationClip;
- (_Bool)growAnimationLinearInterpolationForChartDeliveryStyle:(unsigned long long)arg1;
- (_Bool)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned long long)arg1;
- (Class)chartBoundsLayoutSceneDelegateClass;
- (Class)getBounds3DClass;
- (Class)resizer3DClass;
- (struct EdgeDetectionParameters)edgeDetectionParameters;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartShadowsShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartShadowsRenderProcessor : TSCH3DRetargetRenderProcessor
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartVertexShadowsRenderProcessor : TSCH3DRetargetRenderProcessor
{
    NSArray *mShadowsEffects;
}

- (void)submit:(const struct PrimitiveInfo *)arg1;
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (void)dealloc;
- (id)init;
- (id)p_effects;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartShadowsPropertiesInternal : NSObject
{
    _Bool mEnabled;
    TSCH3DCamera *mCamera;
    TSCH3DDataBufferResource *mQuad;
    TSCH3DDataBufferResource *mTexcoords;
    TSCH3DDataBufferResource *mFadecoords;
    NSObject<TSCH3DShadowsRenderer> *mRenderer;
    box_a3bd9649 mShadowPlanePadding;
}

@property(readonly, nonatomic) NSObject<TSCH3DShadowsRenderer> *renderer; // @synthesize renderer=mRenderer;
@property(retain, nonatomic) TSCH3DDataBufferResource *fadecoords; // @synthesize fadecoords=mFadecoords;
@property(retain, nonatomic) TSCH3DDataBufferResource *texcoords; // @synthesize texcoords=mTexcoords;
@property(retain, nonatomic) TSCH3DDataBufferResource *quad; // @synthesize quad=mQuad;
@property(retain, nonatomic) TSCH3DCamera *camera; // @synthesize camera=mCamera;
@property(nonatomic) _Bool enabled; // @synthesize enabled=mEnabled;
- (id).cxx_construct;
- (void)invalidate;
@property(readonly, nonatomic) _Bool shadowPlaneValid;
- (void)setupResources;
- (void)dealloc;
- (id)initWithCamera:(id)arg1 renderer:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DProjectiveTextureShaderEffect : TSCH3DShaderEffect
{
}

+ (id)stateSharingID;
+ (id)variableShadowBorderFade;
+ (id)variableShadowColor;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableShadowBorderFade;
- (id)variableShadowColor;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartShadowsSceneObject : TSCH3DSceneObject
{
}

+ (void)setShadowPlanePadding:(box_a3bd9649)arg1 forScene:(id)arg2;
+ (void)invalidateShadowsForScene:(id)arg1;
- (tvec3_17f03ce0)calculateShadowCameraPosition:(float)arg1 center:(tvec3_17f03ce0)arg2 shadowQuality:(float)arg3 depthLimitAdjustment:(float)arg4;
- (void)getBounds:(id)arg1;
- (void)render:(id)arg1;
- (float)p_chartOpacityForScene:(id)arg1;
- (void)renderShadows:(id)arg1;
- (void)prerender:(id)arg1;
- (void)prerenderShadows:(id)arg1 blurslack:(float)arg2 angle:(float)arg3 quality:(float)arg4 targetFBO:(id)arg5;
- (void)renderShadowScene:(id)arg1;
- (id)effects;
- (id)TSDShadowFromScene:(id)arg1;
- (box_a3bd9649)p_shadowPlanePaddingForScene:(id)arg1;
- (id)propertiesForScene:(id)arg1;
- (_Bool)animationTextureSceneDelegateShouldSkipForRep:(id)arg1 finalElements:(_Bool)arg2 chunkStage:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartOrthographicShadowsSceneObject : TSCH3DChartShadowsSceneObject
{
}

+ (id)blurParametersArray;
- (id)createShadowsRenderer;
- (void)updateShadowPlane:(id)arg1 texcoords:(id)arg2 scene:(id)arg3 blurslack:(float)arg4 angle:(float)arg5 quality:(float)arg6 planePadding:(box_a3bd9649)arg7;
- (void)updateCoordsAndTexcoords:(const box_a3bd9649 *)arg1 zOffset:(float)arg2 cameraPosition:(const tvec3_17f03ce0 *)arg3 quad:(id)arg4 texcoords:(id)arg5;
- (id)createCamera;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPlaneProjectRenderProcessor : TSCH3DTransformGeometryRenderProcessor
{
    plane_849e6053 mPlane;
    tvec3_17f03ce0 mProjPt;
    box_a3bd9649 mBounds;
}

+ (id)processorWithPlane:(const plane_849e6053 *)arg1 projPt:(const tvec3_17f03ce0 *)arg2;
@property(readonly, nonatomic) const box_a3bd9649 *bounds; // @synthesize bounds=mBounds;
- (id).cxx_construct;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (id)initWithPlane:(const plane_849e6053 *)arg1 projPt:(const tvec3_17f03ce0 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPerspectiveShadowsSceneObject : TSCH3DChartShadowsSceneObject
{
}

+ (id)blurParametersArray;
- (id)createShadowsRenderer;
- (void)updateShadowPlane:(id)arg1 texcoords:(id)arg2 scene:(id)arg3 blurslack:(float)arg4 angle:(float)arg5 quality:(float)arg6 planePadding:(box_a3bd9649)arg7;
- (void)updateCoordsAndTexcoords:(const box_a3bd9649 *)arg1 camera:(id)arg2 quad:(id)arg3 texcoords:(id)arg4;
- (id)createCamera;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLight : NSObject <NSCopying>
{
    NSString *mName;
    tvec4_ac57c72d mAmbientColor;
    tvec4_ac57c72d mDiffuseColor;
    tvec4_ac57c72d mSpecularColor;
    float mIntensity;
    tvec3_17f03ce0 mAttenuation;
    long long mCoordinateSpace;
    _Bool mEnabled;
}

+ (id)light;
+ (id)lightClasses;
+ (id)instanceWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) _Bool enabled; // @synthesize enabled=mEnabled;
@property(nonatomic) long long coordinateSpace; // @synthesize coordinateSpace=mCoordinateSpace;
@property(nonatomic) tvec3_17f03ce0 attenuation; // @synthesize attenuation=mAttenuation;
@property(nonatomic) float intensity; // @synthesize intensity=mIntensity;
@property(nonatomic) tvec4_ac57c72d specularColor; // @synthesize specularColor=mSpecularColor;
@property(nonatomic) tvec4_ac57c72d diffuseColor; // @synthesize diffuseColor=mDiffuseColor;
@property(nonatomic) tvec4_ac57c72d ambientColor; // @synthesize ambientColor=mAmbientColor;
@property(retain, nonatomic) NSString *name; // @synthesize name=mName;
- (id).cxx_construct;
- (void)affect:(id)arg1 states:(id)arg2 texturePool:(id)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToLightArchive:(struct Chart3DLightArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchive:(struct Chart3DLightArchive *)arg1 archiver:(id)arg2;
- (id)initWithLightArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSpotLightShaderEffect : TSCH3DLightShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)uploadSpotLightWithUploader:(id)arg1 effectsStates:(id)arg2;
- (id)variables;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSpotLight : TSCH3DLight <TSCH3DLightPositionable, TSCH3DLightDirectional>
{
    tvec3_17f03ce0 mPosition;
    tvec3_17f03ce0 mDirection;
    float mCutOff;
    float mDropOff;
}

+ (Class)effectClass;
+ (id)instanceWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) float dropOff; // @synthesize dropOff=mDropOff;
@property(nonatomic) float cutOff; // @synthesize cutOff=mCutOff;
@property(nonatomic) tvec3_17f03ce0 direction; // @synthesize direction=mDirection;
@property(nonatomic) tvec3_17f03ce0 position; // @synthesize position=mPosition;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (void)saveToArchive:(struct Chart3DLightArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDirectionalLightShaderEffect : TSCH3DLightShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (id)variables;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDirectionalLight : TSCH3DLight <TSCH3DLightDirectional>
{
    tvec3_17f03ce0 mDirection;
}

+ (Class)effectClass;
+ (id)instanceWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) tvec3_17f03ce0 direction; // @synthesize direction=mDirection;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (void)saveToArchive:(struct Chart3DLightArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPointLightShaderEffect : TSCH3DLightShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (id)variables;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPointLight : TSCH3DLight <TSCH3DLightPositionable>
{
    tvec3_17f03ce0 mPosition;
}

+ (Class)effectClass;
+ (id)instanceWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) tvec3_17f03ce0 position; // @synthesize position=mPosition;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (void)saveToArchive:(struct Chart3DLightArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightingPackage : NSObject <NSCopying>
{
    NSString *mName;
    NSMutableArray *mLights;
}

+ (id)package;
+ (id)packageFromName:(id)arg1;
+ (id)allNamedPackages;
+ (id)localizedNameForName:(id)arg1;
+ (id)instanceWithArchive:(const struct Chart3DLightingPackageArchive *)arg1 unarchiver:(id)arg2;
+ (id)packageWithSageLightingPackageData:(id)arg1;
+ (id)sageNameFromLightingPackageName:(id)arg1;
+ (id)nameFromSageLightingPackageName:(id)arg1;
+ (id)p_sageLightingPackageNames;
@property(copy, nonatomic) NSString *name; // @synthesize name=mName;
@property(readonly, copy, nonatomic) NSString *localizedName;
- (void)affect:(id)arg1 states:(id)arg2 scene:(id)arg3 texturePool:(id)arg4;
- (void)addLight:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct Chart3DLightingPackageArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightingPackageArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSageLightingPackageData : NSObject <TSCH3DSageLightingPackageData>
{
    NSDictionary *mPackage;
    NSArray *mLights;
}

+ (id)dataWithDictionary:(id)arg1;
- (float)dropOffRateAtIndex:(unsigned long long)arg1;
- (float)cutOffAngleAtIndex:(unsigned long long)arg1;
- (struct Vector3)directionAtIndex:(unsigned long long)arg1;
- (struct Vector3)positionAtIndex:(unsigned long long)arg1;
- (_Bool)enabledAtIndex:(unsigned long long)arg1;
- (int)coordinateSpaceAtIndex:(unsigned long long)arg1;
- (struct Vector3)attenuationAtIndex:(unsigned long long)arg1;
- (float)intensityAtIndex:(unsigned long long)arg1;
- (Color_1703f521)specularColorAtIndex:(unsigned long long)arg1;
- (Color_1703f521)diffuseColorAtIndex:(unsigned long long)arg1;
- (Color_1703f521)ambientColorAtIndex:(unsigned long long)arg1;
- (Color_1703f521)colorAtIndex:(unsigned long long)arg1 redKey:(id)arg2 greenKey:(id)arg3 blueKey:(id)arg4;
- (int)typeAtIndex:(unsigned long long)arg1;
- (id)nameAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)packageName;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightingModel : NSObject <NSCopying>
{
    TSCH3DMaterialPackage *mMaterials;
    TSCH3DLightingPackage *mLightings;
    TSCH3DEnvironmentPackage *mEnvironment;
}

+ (id)lightingModel;
+ (id)instanceWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;
@property(retain, nonatomic) TSCH3DEnvironmentPackage *environment; // @synthesize environment=mEnvironment;
@property(retain, nonatomic) TSCH3DLightingPackage *lightings; // @synthesize lightings=mLightings;
@property(retain, nonatomic) TSCH3DMaterialPackage *materials; // @synthesize materials=mMaterials;
- (id)representativeMaterialLightenedByPercentage:(id)arg1;
- (id)diffuseTextureTiling;
- (id)lightingModelWithLightings:(id)arg1;
- (void)affect:(id)arg1 states:(id)arg2 scene:(id)arg3 texturePool:(id)arg4;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)clone;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)saveToArchive:(struct Chart3DLightingModelArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongLikeLightingModel : TSCH3DLightingModel
{
}

- (id)representativeMaterialLightenedByPercentage:(id)arg1;
- (id)diffuseTextureTiling;
- (void)affect:(id)arg1 states:(id)arg2 scene:(id)arg3 texturePool:(id)arg4 percentage:(id)arg5;
- (id)p_lightenDiffuseMaterial:(id)arg1 percentage:(id)arg2;
- (tvec4_ac57c72d)p_lightenedColorForColor:(const tvec4_ac57c72d *)arg1 percentage:(id)arg2;
- (id)phongMaterials;
- (id)init;
- (void)saveToPhongMaterialPackageArchive:(struct Chart3DPhongMaterialPackageArchive *)arg1 environmentPackageArchive:(struct Chart3DEnvironmentPackageArchive *)arg2 archiver:(id)arg3;
- (id)initWithPhongMaterialPackageArchive:(const struct Chart3DPhongMaterialPackageArchive *)arg1 lightingModelArchive:(const struct Chart3DLightingModelArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongLightingModel : TSCH3DPhongLikeLightingModel
{
}

+ (id)materialEffectClass;
+ (id)effectClass;
+ (id)instanceWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct Chart3DLightingModelArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFixedFunctionLightingModel : TSCH3DPhongLikeLightingModel
{
}

+ (Class)materialEffectClass;
+ (Class)effectClass;
+ (id)instanceWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct Chart3DLightingModelArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DLightingModelArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderEffectsStates : NSObject
{
    NSMutableDictionary *mObjects;
}

- (void)clear;
- (void)setState:(id)arg1 forStateInfo:(id)arg2;
- (id)stateForStateInfo:(id)arg1 createIfNil:(_Bool)arg2;
- (id)valueStateForKey:(id)arg1;
- (void)setValueState:(id)arg1 forKey:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderArrayElementVariable : TSCH3DShaderVariable <TSCHUnretainedParent>
{
    TSCH3DShaderVariable *mParent;
    unsigned long long mIndex;
}

+ (id)variableWithParentVariable:(id)arg1 index:(unsigned long long)arg2;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParentVariable:(id)arg1 index:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderVariable : NSObject <NSCopying>
{
    NSString *mName;
    struct NSString *mType;
    struct NSString *mPrecision;
    unsigned long long mArraySize;
    struct TSCH3DShaderType mShaderType;
    _Bool mIsSpecial;
    TSCH3DShaderVariable *mGenericName;
    NSArray *mElements;
}

+ (id)variableWithName:(id)arg1 type:(struct NSString *)arg2 precision:(struct NSString *)arg3 arraySize:(unsigned long long)arg4 shaderType:(struct TSCH3DShaderType)arg5 isSpecial:(_Bool)arg6 generic:(id)arg7;
@property(readonly, nonatomic) TSCH3DShaderVariable *genericName; // @synthesize genericName=mGenericName;
@property(readonly, nonatomic) _Bool isSpecial; // @synthesize isSpecial=mIsSpecial;
@property(readonly, nonatomic) struct TSCH3DShaderType shaderType; // @synthesize shaderType=mShaderType;
@property(readonly, nonatomic) unsigned long long arraySize; // @synthesize arraySize=mArraySize;
@property(readonly, nonatomic) NSString *precision; // @synthesize precision=mPrecision;
@property(readonly, nonatomic) NSString *type; // @synthesize type=mType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=mName;
- (id).cxx_construct;
- (id)variableAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) struct TSCH3DShaderType initialLinkType;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 type:(struct NSString *)arg2 precision:(struct NSString *)arg3 arraySize:(unsigned long long)arg4 shaderType:(struct TSCH3DShaderType)arg5 isSpecial:(_Bool)arg6 generic:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DUniformArrayShaderVariables : NSObject
{
    NSString *mPrefix;
    NSMutableDictionary *mVariables;
    unsigned long long mArraySize;
}

+ (id)variablesWithPrefix:(id)arg1 arraySize:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long arraySize; // @synthesize arraySize=mArraySize;
- (void)addUniformsToShaderProgram:(id)arg1 size:(unsigned long long)arg2;
- (id)variableAtIndex:(unsigned long long)arg1 name:(id)arg2;
- (void)addArrayName:(id)arg1 type:(struct NSString *)arg2;
- (id)p_formatVariableName:(id)arg1;
- (void)setVariable:(id)arg1 forName:(id)arg2;
- (id)variableForName:(id)arg1;
- (void)dealloc;
- (id)initWithPrefix:(id)arg1 arraySize:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderResource : TSCH3DResource
{
    TSCH3DShaderProgram *mProgram;
}

+ (pair_10e2d813)stringsFromBuffer:(id)arg1;
- (id)get;
@property(readonly, nonatomic) TSCH3DShaderProgram *program;
- (void)appendShaderResourceString:(IteratorRange_617e5e79)arg1 toDataBuffer:(id)arg2;
- (IteratorRange_617e5e79)resourceStringOfString:(id)arg1;
- (void)dealloc;
- (id)initWithCaching:(int)arg1 version:(id)arg2;
- (id)initWithCaching:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderEffect : NSObject <TSCH3DShaderEffectStateInfo>
{
}

+ (id)stateSharingID;
+ (Class)stateClass;
+ (id)effect;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2 updateCurrentStates:(id)arg3;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)updateState:(id)arg1 effectsStates:(id)arg2;
- (void)addVariables:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)alwaysUploadData;
- (id)stateSharingID;
- (Class)stateClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderEffects : NSObject
{
    NSMutableArray *mSections[4];
    NSArray *mCacheList;
}

- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (void)enumerateEffectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)resetSection:(int)arg1 toArray:(id)arg2;
- (void)resetSection:(int)arg1;
- (_Bool)isSectionEnabled:(int)arg1;
- (void)setEnable:(_Bool)arg1 forSection:(int)arg2;
- (void)addEffectOnce:(id)arg1 toSection:(int)arg2;
- (void)addEffectsFromArray:(id)arg1 toSection:(int)arg2;
- (void)addEffect:(id)arg1 toSection:(int)arg2;
- (void)prependEffect:(id)arg1 toSection:(int)arg2;
- (void)resetToArray:(id)arg1;
- (void)reset;
- (void)removeEffect:(id)arg1 fromSection:(int)arg2;
- (_Bool)removeEffectOfClass:(Class)arg1 fromSection:(int)arg2;
- (void)addEffectsFromArray:(id)arg1;
- (void)addEffect:(id)arg1;
- (void)prependEffect:(id)arg1;
@property(readonly, nonatomic) NSSet *identifier;
- (_Bool)isEqual:(id)arg1;
- (id)effects;
- (void)resetCacheList;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisGenericPropertyMap : TSSPropertyMap
{
}

+ (void)savePropertyMap:(id)arg1 toArchive:(struct ChartAxisGenericPropertyMapArchive *)arg2 archiver:(id)arg3;
+ (id)imageFillProperties;
+ (id)properties;
- (void)saveToArchive:(struct ChartAxisGenericPropertyMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ChartAxisGenericPropertyMapArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBaseVertexShaderEffect : TSCH3DShaderEffect
{
}

+ (id)stateSharingID;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2 updateCurrentStates:(id)arg3;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DNoLightingVertexShaderEffect : TSCH3DBaseVertexShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVertexShaderEffect : TSCH3DBaseVertexShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DNormalShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2 updateCurrentStates:(id)arg3;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DColorShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DColorIntensityShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variableColorIntensity;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)effect;
+ (id)_singletonAlloc;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableColorIntensity;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DColorModulationShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variableColorModulation;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)effect;
+ (id)_singletonAlloc;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableColorModulation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDiffuseTextureShaderEffectTextureUnit : NSObject
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDiffuseTextureShaderEffect : TSCH3DShaderEffect
{
}

+ (Class)stateClass;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDiffuseTextureDebugShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DEffectState : NSObject <NSCopying>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderAssignment : NSObject <TSCH3DShaderStatement>
{
    TSCH3DShaderVariableLinkage *mAssignee;
    struct TSCH3DShaderVariableScopeType mAssigneeScope;
    NSString *mStatement;
    NSArray *mDependees;
    TSCH3DShaderProgram *mProgram;
    struct TSCH3DShaderType mLinkageType;
    vector_aeadf634 mDependeeScopes;
}

+ (id)assignmentWithAssignee:(id)arg1 statement:(id)arg2 dependees:(id)arg3 program:(id)arg4;
@property(readonly, nonatomic) struct TSCH3DShaderVariableScopeType assigneeScope; // @synthesize assigneeScope=mAssigneeScope;
@property(nonatomic) struct TSCH3DShaderType linkageType; // @synthesize linkageType=mLinkageType;
@property(readonly, nonatomic) NSArray *dependees; // @synthesize dependees=mDependees;
@property(readonly, nonatomic) TSCH3DShaderVariableLinkage *assignee; // @synthesize assignee=mAssignee;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setAssigneeScopeToType:(struct TSCH3DShaderVariableScopeType)arg1;
- (void)setGeneratedForType:(struct TSCH3DShaderType)arg1;
@property(readonly, nonatomic) NSString *string;
- (id)expressionStringForType:(struct TSCH3DShaderType)arg1;
- (id)resolve;
- (id)forceLinkageForType:(struct TSCH3DShaderType)arg1;
- (id)resolveDependeesWithPreviousType:(struct TSCH3DShaderType)arg1;
- (_Bool)updateLinkageTypeAddVaryingToAdditions:(id)arg1;
- (struct TSCH3DShaderType)dominantDependeeLinkageType;
- (id)updateDependeesWithPreviousType:(struct TSCH3DShaderType)arg1;
- (id)updateVaryingAssignmentForLinkage:(id)arg1;
- (id)varyingAssignmentForLinkage:(id)arg1;
- (vector_aeadf634 *)dependeeScopes;
@property(readonly, nonatomic) _Bool isLinked;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAssigneeLinkage:(id)arg1 statement:(id)arg2 dependees:(id)arg3 program:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderStatement : TSCH3DShaderAssignment
{
}

+ (id)statementWithFormat:(id)arg1 dependees:(id)arg2 program:(id)arg3;
- (id)string;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderRawStatement : NSObject <TSCH3DShaderStatement>
{
    NSString *mString;
    struct TSCH3DShaderType mLinkageType;
}

+ (id)statementWithString:(id)arg1 linkageType:(struct TSCH3DShaderType)arg2;
@property(nonatomic) struct TSCH3DShaderType linkageType; // @synthesize linkageType=mLinkageType;
@property(readonly, nonatomic) NSString *string; // @synthesize string=mString;
- (id).cxx_construct;
- (void)setGeneratedForType:(struct TSCH3DShaderType)arg1;
- (_Bool)isLinked;
- (id)resolve;
- (void)dealloc;
- (id)initWithString:(id)arg1 linkageType:(struct TSCH3DShaderType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderProgram : NSObject
{
    NSMutableDictionary *mLinks;
    NSMutableArray *mDeclarationSection;
    NSMutableArray *mTemporarySection;
    NSMutableArray *mStatementSection;
    NSMutableArray *mResolutionSection;
    NSMutableArray *mOutcomeSection;
    NSMutableArray *mConclusionSection;
    NSMutableArray *mSections[6];
    NSMutableArray *mFunctions;
    NSMutableSet *mFunctionNames;
    NSMutableString *mAccumulator;
    _Bool mIsLinked;
    NSString *mVertex;
    NSString *mFragment;
    TSCH3DGLVersion *mVersion;
}

@property(readonly, nonatomic) TSCH3DGLVersion *version; // @synthesize version=mVersion;
- (id)usedAttributeNameForVariable:(id)arg1;
- (id)usedUniformNameForVariable:(id)arg1;
- (id)usedNameForVariable:(id)arg1 type:(struct TSCH3DShaderType)arg2 scope:(struct TSCH3DShaderVariableScopeType)arg3;
@property(readonly, nonatomic) NSString *fragment;
@property(readonly, nonatomic) NSString *vertex;
- (id)p_generateType:(struct TSCH3DShaderType)arg1;
- (void)p_generatePreprocessorDefinitionsForType:(struct TSCH3DShaderType)arg1;
- (void)p_addCompatibilityFunctions;
- (void)p_generateSection:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)p_generateGlobalsForType:(struct TSCH3DShaderType)arg1;
- (void)p_generateType:(struct TSCH3DShaderType)arg1 globalType:(struct TSCH3DShaderVariableScopeType)arg2 storageQualifier:(id)arg3;
- (void)link;
- (unsigned long long)processSection:(id)arg1 accumulate:(id)arg2 conclusions:(id)arg3;
- (void)accumulateSection:(id)arg1 intoArray:(id)arg2;
- (_Bool)hasFunction:(id)arg1;
- (void)addFunctionString:(id)arg1 name:(id)arg2;
- (void)addFragmentConclusionWithFormat:(id)arg1;
- (void)addVertexConclusionWithFormat:(id)arg1;
- (void)addConclusionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addConclusion:(id)arg1;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentConclusion:(id)arg1;
- (void)addVertexConclusion:(id)arg1;
- (void)addFragmentConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addConclusion:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentConclusion:(id)arg1 statement:(id)arg2;
- (void)addVertexConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexConclusion:(id)arg1 statement:(id)arg2;
- (void)addConclusion:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addConclusion:(id)arg1 statement:(id)arg2;
- (void)addConclusion:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)addFragmentOutcomeWithFormat:(id)arg1;
- (void)addVertexOutcomeWithFormat:(id)arg1;
- (void)addOutcomeWithSpace:(id)arg1 statement:(id)arg2;
- (void)addOutcome:(id)arg1;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentOutcome:(id)arg1;
- (void)addVertexOutcome:(id)arg1;
- (void)addFragmentOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addOutcome:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentOutcome:(id)arg1 statement:(id)arg2;
- (void)addVertexOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexOutcome:(id)arg1 statement:(id)arg2;
- (void)addOutcome:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addOutcome:(id)arg1 statement:(id)arg2;
- (void)addOutcome:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)addFragmentResolutionWithFormat:(id)arg1;
- (void)addVertexResolutionWithFormat:(id)arg1;
- (void)addResolutionWithSpace:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentResolution:(id)arg1;
- (void)addVertexResolution:(id)arg1;
- (void)addFragmentResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addResolution:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentResolution:(id)arg1 statement:(id)arg2;
- (void)addVertexResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexResolution:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addResolution:(id)arg1 statement:(id)arg2;
- (void)addResolution:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)addFragmentStatementWithFormat:(id)arg1;
- (void)addVertexStatementWithFormat:(id)arg1;
- (void)addStatementWithSpace:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentStatement:(id)arg1;
- (void)addVertexStatement:(id)arg1;
- (void)addFragmentStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addStatement:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentStatement:(id)arg1 statement:(id)arg2;
- (void)addVertexStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexStatement:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addStatement:(id)arg1 statement:(id)arg2;
- (void)addStatement:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)addFragmentTemporaryWithFormat:(id)arg1;
- (void)addVertexTemporaryWithFormat:(id)arg1;
- (void)addTemporaryWithSpace:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentTemporary:(id)arg1;
- (void)addVertexTemporary:(id)arg1;
- (void)addFragmentTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addTemporary:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentTemporary:(id)arg1 statement:(id)arg2;
- (void)addVertexTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexTemporary:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addTemporary:(id)arg1 statement:(id)arg2;
- (void)addTemporary:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)addFragmentDeclarationWithFormat:(id)arg1;
- (void)addVertexDeclarationWithFormat:(id)arg1;
- (void)addDeclarationWithSpace:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType)arg2;
- (void)addFragmentDeclaration:(id)arg1;
- (void)addVertexDeclaration:(id)arg1;
- (void)addFragmentDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addDeclaration:(id)arg1 type:(struct TSCH3DShaderType)arg2 statement:(id)arg3;
- (void)addFragmentDeclaration:(id)arg1 statement:(id)arg2;
- (void)addVertexDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addVertexDeclaration:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1 space:(id)arg2 statement:(id)arg3;
- (void)addDeclaration:(id)arg1 statement:(id)arg2;
- (void)addDeclaration:(id)arg1 space:(id)arg2 type:(struct TSCH3DShaderType)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)assignVariable:(id)arg1 statement:(id)arg2 substitutes:(id)arg3 type:(struct TSCH3DShaderType)arg4 toSection:(int)arg5;
- (void)addToSection:(id)arg1 statement:(id)arg2 type:(struct TSCH3DShaderType)arg3;
- (void)addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType)arg4 format:(id)arg5 arguments:(struct __va_list_tag [1])arg6;
- (void)p_addToSection:(id)arg1 variable:(id)arg2 space:(id)arg3 type:(struct TSCH3DShaderType)arg4 format:(id)arg5 substitutes:(id)arg6;
- (void)addAttributeVariable:(id)arg1;
- (void)addUniformVariable:(id)arg1;
- (struct TSCH3DShaderType)uniformLinkageFor:(id)arg1;
- (_Bool)isSamplerVariable:(id)arg1;
- (id)linkageOfVariable:(id)arg1;
- (pair_64bf96b1)resultLinkageOfVariable:(id)arg1;
- (id)existingLinkageOfVariable:(id)arg1;
- (void)dealloc;
- (id)initWithVersion:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderVariableLinkage : NSObject
{
    TSCH3DShaderVariable *mVariable;
    struct TSCH3DShaderType mLinked;
    struct TSCH3DShaderVariableScopes mScope;
    struct TSCH3DShaderVariableScopes mDeclaredScope;
    _Bool mIsUsed;
    NSMutableSet *mDependees;
}

+ (id)linkageWithVariable:(id)arg1;
@property(nonatomic) _Bool isUsed; // @synthesize isUsed=mIsUsed;
@property(readonly, nonatomic) struct TSCH3DShaderVariableScopes declaredScope; // @synthesize declaredScope=mDeclaredScope;
@property(readonly, nonatomic) struct TSCH3DShaderVariableScopes scope; // @synthesize scope=mScope;
@property(readonly, nonatomic) struct TSCH3DShaderType linked; // @synthesize linked=mLinked;
@property(readonly, nonatomic) TSCH3DShaderVariable *variable; // @synthesize variable=mVariable;
- (id).cxx_construct;
- (void)addDeclaredShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (id)nameForShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (id)globalNameForShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (id)resolveGlobalNameForShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2 defaultTo:(id)arg3;
- (_Bool)isGlobalScope:(struct TSCH3DShaderVariableScopeType)arg1;
@property(readonly, nonatomic) unsigned long long hasGlobal;
@property(readonly, nonatomic) _Bool isVertexLinkable;
@property(readonly, nonatomic) _Bool isFragmentLinkable;
@property(readonly, nonatomic) _Bool hasVertex;
@property(readonly, nonatomic) _Bool isVertex;
@property(readonly, nonatomic) _Bool canHaveFragment;
@property(readonly, nonatomic) _Bool hasFragment;
@property(readonly, nonatomic) _Bool isFragment;
- (void)setLinkage:(struct TSCH3DShaderType)arg1;
- (_Bool)hasLinkage:(struct TSCH3DShaderType)arg1;
- (void)removeLinkage:(struct TSCH3DShaderType)arg1;
- (_Bool)updateLinkage:(struct TSCH3DShaderType)arg1;
- (void)addLinkage:(struct TSCH3DShaderType)arg1;
- (void)unlink;
@property(readonly, nonatomic) _Bool notLinked;
@property(readonly, nonatomic) _Bool isLinked;
- (void)addBodyScope:(struct TSCH3DShaderType)arg1;
- (void)setShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (_Bool)hasShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (void)removeShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (_Bool)updateShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (void)addShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
@property(readonly, nonatomic) _Bool scopedInAll;
@property(readonly, nonatomic) _Bool scopeHasFragment;
- (_Bool)hasBody:(struct TSCH3DShaderType)arg1;
- (_Bool)hasVarying;
@property(readonly, nonatomic) _Bool isVertexVarying;
- (_Bool)isVarying:(struct TSCH3DShaderType)arg1;
@property(readonly, nonatomic) _Bool isAttribute;
@property(readonly, nonatomic) _Bool hasAttribute;
@property(readonly, nonatomic) _Bool isUniform;
@property(readonly, nonatomic) _Bool isSpecial;
@property(readonly, nonatomic) NSMutableSet *dependees;
@property(readonly, nonatomic) struct TSCH3DShaderType shaderType;
- (id)variableDeclarationInShader:(struct TSCH3DShaderType)arg1 scope:(struct TSCH3DShaderVariableScopeType)arg2;
- (id)variableQualifiersWithStorageQualifier:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithVariable:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAlphaBlendShaderEffect : TSCH3DShaderEffect
{
}

+ (void)setChartAlpha:(float)arg1 effectsStates:(id)arg2;
+ (void)setElementAlpha:(float)arg1 effectsStates:(id)arg2;
+ (id)variableAlphaBlendValue;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)effect;
+ (id)_singletonAlloc;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableAlphaBlendValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DClipPlaneShaderCombiner : NSObject
{
    NSMutableString *mCondition;
    NSMutableArray *mVariables;
}

+ (id)combiner;
@property(readonly, nonatomic) NSArray *variables; // @synthesize variables=mVariables;
@property(readonly, nonatomic) NSString *condition; // @synthesize condition=mCondition;
- (void)appendCondition:(id)arg1 variables:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DClipPlaneShaderEffect : TSCH3DChartClippingShaderEffect
{
    unsigned long long mNumPlanes;
    _Bool mXConditional;
    _Bool mZConditional;
    _Bool mUseDiscard;
    _Bool mIsTransformingVertices;
    _Bool mUseRepresentativeVertex;
}

+ (id)effectWithPlanes:(unsigned long long)arg1;
+ (_Bool)defaultUsesRepresentativeVertex;
+ (id)variableMinXCondition;
+ (id)variableXCondition;
+ (id)variableClipPlane;
+ (id)variableClipVertexTransform;
+ (id)variableZLimit;
+ (id)variableXLimit;
+ (id)variableClipVertex;
+ (id)variableRepresentativeVertex;
@property(nonatomic) _Bool isTransformingVertices; // @synthesize isTransformingVertices=mIsTransformingVertices;
@property(nonatomic) _Bool useDiscard; // @synthesize useDiscard=mUseDiscard;
@property(nonatomic) _Bool useZConditional; // @synthesize useZConditional=mZConditional;
@property(nonatomic) _Bool useXConditional; // @synthesize useXConditional=mXConditional;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)p_gatherClipPlaneStatementAtIndex:(unsigned long long)arg1 combiner:(id)arg2;
- (void)p_gatherXRangeStatementWithCombiner:(id)arg1 program:(id)arg2;
- (void)addVariables:(id)arg1;
- (unsigned long long)numberOfClippingValues;
- (_Bool)isEqual:(id)arg1;
- (id)initWithPlanes:(unsigned long long)arg1;
- (id)variableMinXCondition;
- (id)variableXCondition;
- (id)variableClipPlane;
- (id)variableClipVertexTransform;
- (id)variableZLimit;
- (id)variableXLimit;
- (id)variableClipVertex;
- (id)variableRepresentativeVertex;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexCoordTilingShaderEffect : TSCH3DShaderEffect
{
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)effect;
+ (id)_singletonAlloc;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (id)transformedTexcoordBuffer:(id)arg1 effectsStates:(id)arg2;
- (void)addVariables:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightenShaderEffect : TSCH3DShaderEffect
{
}

+ (tvec4_ac57c72d)lightenDiffuseFragmentColor:(const tvec4_ac57c72d *)arg1 byPercent:(float)arg2;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongLikeShaderEffect : TSCH3DShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)injectSpecularToProgram:(id)arg1;
- (void)injectDiffuseToProgram:(id)arg1;
- (void)injectAmbientToProgram:(id)arg1;
- (void)injectEmissiveToProgram:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMaterialShaderEffect : TSCH3DShaderEffect
{
    TSCH3DTexturePool *mPool;
    TSCH3DTexturesMaterial *mMaterial;
    struct MaterialShaderVariables mVariables;
}

+ (id)effectWithPool:(id)arg1 material:(id)arg2 variables:(const struct MaterialShaderVariables *)arg3;
+ (id)stateSharingID;
- (id).cxx_construct;
- (void)affectStates:(id)arg1;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)updateState:(id)arg1 effectsStates:(id)arg2;
- (void)addVariables:(id)arg1;
- (id)stateSharingID;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithPool:(id)arg1 material:(id)arg2 variables:(const struct MaterialShaderVariables *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFixedFunctionShaderEffect : TSCH3DPhongLikeShaderEffect
{
}

- (void)inject:(id)arg1;
- (void)injectFinalColorToProgram:(id)arg1;
- (void)injectDiffuseToProgram:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFixedFunctionMaterialShaderEffect : TSCH3DMaterialShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongShaderEffect : TSCH3DPhongLikeShaderEffect
{
}

- (void)injectFinalColorToProgram:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongMaterialShaderEffect : TSCH3DMaterialShaderEffect
{
}

- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSphericalEnvironmentShaderEffect : TSCH3DShaderEffect
{
    NSArray *mMaterials;
    TSCH3DTexturePool *mPool;
}

+ (id)effectWithMaterials:(id)arg1 pool:(id)arg2;
+ (Class)stateClass;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)updateState:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (const array_6b0ddbad *)textureVariablesArray;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithMaterials:(id)arg1 pool:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightUniformArrayShaderVariables : NSObject
{
    TSCH3DUniformArrayShaderVariables *mVariables;
}

- (id)variableAtIndex:(unsigned long long)arg1 name:(id)arg2;
- (void)addUniformsToShaderProgram:(id)arg1 size:(unsigned long long)arg2;
- (unsigned long long)arraySize;
- (void)initializeArrayVariables;
- (void)dealloc;
- (void)initializePrefix:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPointLightUniformArrayShaderVariables : TSCH3DLightUniformArrayShaderVariables
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)variables;
+ (id)_singletonAlloc;
- (void)initializeArrayVariables;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDirectionalLightUniformArrayShaderVariables : TSCH3DLightUniformArrayShaderVariables
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)variables;
+ (id)_singletonAlloc;
- (void)initializeArrayVariables;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSpotLightUniformArrayShaderVariables : TSCH3DLightUniformArrayShaderVariables
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)variables;
+ (id)_singletonAlloc;
- (void)initializeArrayVariables;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightingPackageShaderEffect : TSCH3DShaderEffect
{
}

+ (void)setLightingPackageEffectState:(const struct LightingPackageShaderEffectState *)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightShaderEffectState : NSObject
{
    NSMutableArray *mLights;
    struct LightingPackageShaderEffectState mPackageState;
}

+ (id)effectState;
- (id).cxx_construct;
- (void)removeAllObjects;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)addObject:(id)arg1;
- (unsigned long long)count;
- (void)setPackageState:(const struct LightingPackageShaderEffectState *)arg1;
- (const struct LightingPackageShaderEffectState *)packageState;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLightShaderEffect : TSCH3DShaderEffect
{
    unsigned long long mLightCount;
}

+ (id)effectWithLightCount:(unsigned long long)arg1;
+ (void)updatePackageState:(const struct LightingPackageShaderEffectState *)arg1 effectsStates:(id)arg2;
+ (void)createStateInEffectsStates:(id)arg1;
+ (Class)stateClass;
- (void)uploadLightDirectionalWithUploader:(id)arg1 effectsStates:(id)arg2;
- (void)uploadLightPositionablesWithUploader:(id)arg1 effectsStates:(id)arg2;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)addVariables:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithLightCount:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLens : NSObject <NSCopying>
{
    float mNear;
    float mFar;
}

+ (id)lens;
@property(nonatomic) float far; // @synthesize far=mFar;
@property(nonatomic) float near; // @synthesize near=mNear;
- (void)calculateCullingPlanes:(vector_a9ee3a08 *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRectangleLens : TSCH3DLens
{
    float mLeft;
    float mRight;
    float mBottom;
    float mTop;
}

@property(nonatomic) float top; // @synthesize top=mTop;
@property(nonatomic) float bottom; // @synthesize bottom=mBottom;
@property(nonatomic) float right; // @synthesize right=mRight;
@property(nonatomic) float left; // @synthesize left=mLeft;
- (id)shiftedByPercentage:(tvec2_84d5962d *)arg1;
- (id)shiftByPercentage:(tvec2_84d5962d *)arg1;
- (id)narrowedByNormalizedBounds:(box_80622335 *)arg1;
- (id)narrowByNormalizedBounds:(box_80622335 *)arg1;
@property(readonly, nonatomic) float height;
@property(readonly, nonatomic) float width;
- (void)setPerPixelSize:(tvec2_3b141483 *)arg1;
- (void)setPerPixel:(box_0260e9b3 *)arg1;
- (void)deviceNormalize;
- (void)normalize;
- (struct FrustumRect)frustumRect;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DOrthographicLens : TSCH3DRectangleLens
{
}

- (void)calculateCullingPlanes:(vector_a9ee3a08 *)arg1;
- (struct FrustumRect)frustumRectAtDistance:(float)arg1;
- (tmat4x4_3074befe)matrix;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFrustumLens : TSCH3DRectangleLens
{
}

- (void)calculateCullingPlanes:(vector_a9ee3a08 *)arg1;
- (struct FrustumRect)frustumRectAtDistance:(float)arg1;
- (tmat4x4_3074befe)matrix;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPerspectiveLens : TSCH3DLens
{
    float mFOV;
    float mAspect;
}

@property(nonatomic) float aspect; // @synthesize aspect=mAspect;
@property(nonatomic) float fov; // @synthesize fov=mFOV;
- (void)calculateCullingPlanes:(vector_a9ee3a08 *)arg1;
- (id)shiftedByPercentage:(tvec2_84d5962d *)arg1;
- (id)narrowedByNormalizedBounds:(box_80622335 *)arg1;
- (id)asFrustumLens;
- (tmat4x4_3074befe)matrix;
- (struct FrustumRect)frustumRectAtDistance:(float)arg1;
- (struct FrustumRect)frustumRect;
@property(readonly, nonatomic) float height;
@property(readonly, nonatomic) float width;
- (id)matrixDescription;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCamera : NSObject <NSCopying>
{
    TSCH3DLens *mLens;
    float mViewportScale;
    float mViewportSamples;
    box_0260e9b3 mViewport;
    tvec2_84d5962d mContainingViewportOffset;
    tmat4x4_3074befe mTransform;
}

+ (id)cameraWithLens:(id)arg1 size:(tvec2_3b141483 *)arg2;
+ (id)orthographicPerPixelWithBounds:(box_0260e9b3 *)arg1;
+ (id)orthographicPerPixelWithSize:(tvec2_3b141483 *)arg1;
+ (id)orthographicWithSize:(tvec2_3b141483 *)arg1;
+ (id)orthographic;
+ (id)perspectiveWithSize:(tvec2_3b141483 *)arg1;
+ (id)perspective;
@property(nonatomic) tmat4x4_3074befe transform; // @synthesize transform=mTransform;
@property(nonatomic) tvec2_84d5962d containingViewportOffset; // @synthesize containingViewportOffset=mContainingViewportOffset;
@property(nonatomic) box_0260e9b3 viewport; // @synthesize viewport=mViewport;
@property(nonatomic) float viewportSamples; // @synthesize viewportSamples=mViewportSamples;
@property(nonatomic) float viewportScale; // @synthesize viewportScale=mViewportScale;
@property(retain, nonatomic) TSCH3DLens *lens; // @synthesize lens=mLens;
- (id).cxx_construct;
- (void)calculateCullingPlanes:(vector_a9ee3a08 *)arg1;
- (id)narrowedByViewport:(const box_0260e9b3 *)arg1 samples:(long long)arg2;
- (id)pixelAlignedForScaledViewport:(const box_80622335 *)arg1 viewportScale:(float)arg2 samples:(float)arg3 correspondingNoramlizedBounds:(const box_80622335 *)arg4;
- (id)shiftedByPixels:(tvec2_84d5962d *)arg1;
- (id)shiftByPixels:(tvec2_84d5962d *)arg1;
- (id)narrowedByViewport:(box_0260e9b3 *)arg1;
- (id)narrowedByNormalizedBounds:(box_80622335 *)arg1;
- (id)narrowByNormalizedBounds:(box_80622335 *)arg1;
- (tmat4x4_3074befe)modelViewViewportProjectionWithViewportScale:(float)arg1;
@property(readonly, nonatomic) tmat4x4_3074befe modelViewNormalizedProjection;
@property(readonly, nonatomic) tmat4x4_3074befe modelViewProjection;
@property(readonly, nonatomic) tmat4x4_3074befe viewportProjection;
@property(readonly, nonatomic) tmat4x4_3074befe normalizedProjection;
@property(readonly, nonatomic) tmat4x4_3074befe projection;
@property(readonly, nonatomic) tmat4x4_3074befe space;
- (tvec3_17f03ce0)backProjectCameraSpacePoint:(const tvec3_17f03ce0 *)arg1;
- (tvec3_17f03ce0)fastProjectNormalizedPoint:(tvec2_84d5962d *)arg1 planeDistance:(float)arg2;
- (tvec3_17f03ce0)projectNormalizedPoint:(tvec2_84d5962d *)arg1 planeDistance:(float)arg2;
- (struct FrustumSlice)frustumSliceAtDistance:(float)arg1;
- (void)setPosition:(tvec3_17f03ce0)arg1;
@property(readonly, nonatomic) tvec3_17f03ce0 position;
- (void)setDirection:(tvec3_17f03ce0)arg1;
@property(readonly, nonatomic) tvec3_17f03ce0 direction;
- (void)setContainingViewportSize:(const tvec2_3b141483 *)arg1;
- (id)matrixDescription;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLens:(id)arg1 size:(tvec2_3b141483 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSelectionPath : TSCHSelectionPath
{
    Class mSceneObjectClass;
    unsigned long long mStyleIndex;
}

+ (id)selectionPathWithClass:(Class)arg1 styleIndex:(unsigned long long)arg2 selectionPath:(id)arg3;
+ (id)selectionPathWithClass:(Class)arg1 styleIndex:(unsigned long long)arg2 type:(id)arg3 name:(id)arg4 arguments:(id)arg5;
@property(readonly, nonatomic) unsigned long long styleIndex; // @synthesize styleIndex=mStyleIndex;
@property(readonly, nonatomic) Class sceneObjectClass; // @synthesize sceneObjectClass=mSceneObjectClass;
- (id)initWithClass:(Class)arg1 styleIndex:(unsigned long long)arg2 type:(id)arg3 name:(id)arg4 arguments:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSelectionPathRenderInfo : NSObject
{
    NSString *mString;
    unsigned long long mStyleIndex;
    double mRotation;
}

+ (id)renderInfoWithString:(id)arg1 styleIndex:(unsigned long long)arg2 rotation:(double)arg3;
@property(readonly, nonatomic) double rotation; // @synthesize rotation=mRotation;
@property(readonly, nonatomic) unsigned long long styleIndex; // @synthesize styleIndex=mStyleIndex;
@property(readonly, nonatomic) NSString *string; // @synthesize string=mString;
- (void)dealloc;
- (id)initWithString:(id)arg1 styleIndex:(unsigned long long)arg2 rotation:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneObject : NSObject
{
}

+ (void)setSelectionPath:(id)arg1 selectionMode:(int)arg2 forScene:(id)arg3;
+ (double)textRotationForChartInfo:(id)arg1;
+ (id)sceneObject;
+ (id)renderCacheKey;
- (float)shadowCameraDepthLimitAdjustmentFactorForScene:(id)arg1;
- (id)renderInfoForSelectionPath:(id)arg1 info:(id)arg2;
- (_Bool)canEditTextForSelectionPath:(id)arg1 forInfo:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1 forInfo:(id)arg2;
- (id)convertSelectionPathTo3D:(id)arg1 path:(id)arg2;
- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (void)statePreservedPostrender:(id)arg1;
- (void)statePreservedPrerender:(id)arg1;
- (void)statePreservedRender:(id)arg1;
- (void)statePreservedGetSelectionKnobsPositions:(id)arg1;
- (void)statePreservedPrimeRenderCaches:(id)arg1;
- (void)statePreservedRayPick:(id)arg1;
- (void)postGetBounds:(id)arg1;
- (void)getSelectionKnobsPositions:(id)arg1;
- (void)primeRenderCaches:(id)arg1;
- (void)rayPick:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)postrender:(id)arg1;
- (void)render:(id)arg1;
- (void)prerender:(id)arg1;
- (void)addZAxisAnimationToClips:(id)arg1 scene:(id)arg2;
- (box_a3bd9649)shadowPlanePadding;
- (box_e9f23397)shadowBlendRangeForChartDeliveryStyle:(unsigned long long)arg1;
- (_Bool)growAnimationLinearInterpolationForChartDeliveryStyle:(unsigned long long)arg1;
- (_Bool)growAnimationSequenceInOrderForChartDeliveryStyle:(unsigned long long)arg1;
- (void)addTitleAnimationToClips:(id)arg1;
- (Class)chartBoundsLayoutSceneDelegateClass;
- (int)p_animationTextureSceneDelegateChunkPlane;
- (_Bool)animationTextureSceneDelegateShouldSkipForRep:(id)arg1 finalElements:(_Bool)arg2 chunkStage:(long long)arg3;
- (struct EdgeDetectionParameters)edgeDetectionParameters;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DScene : NSObject
{
    TSCH3DScene *mOriginal;
    NSObject<TSCH3DScenePropertyAccessorFactory> *mAccessorFactory;
    TSCH3DScenePropertyAccessor *mAccessor;
    NSMutableDictionary *mEnumeratorMap;
    NSMutableDictionary *mPropertiesMap;
    TSUNoCopyDictionary *mDelegateMap;
    TSCH3DSceneObject *mMain;
    NSMutableArray *mObjects;
    TSCH3DCamera *mCamera;
}

+ (id)scene;
@property(retain, nonatomic) TSCH3DScene *original; // @synthesize original=mOriginal;
- (id)extractObjectsNotOfClasses:(id)arg1;
- (id)extractObjectsNotOfClass:(Class)arg1;
- (id)extractObjectsOfClasses:(id)arg1;
- (id)extractObjects:(_Bool)arg1 ofClasses:(id)arg2;
- (id)extractObjectsOfClass:(Class)arg1;
- (void)removeObjectsNotOfClass:(Class)arg1;
- (void)removeObjectsOfClass:(Class)arg1;
- (id)removeObjects:(_Bool)arg1 ofClasses:(id)arg2 into:(id)arg3;
- (id)removeObjects:(_Bool)arg1 ofClasses:(id)arg2 addTo:(id)arg3;
- (id)returnRemoved:(_Bool)arg1 removeObjectsPassingTest:(CDUnknownBlockType)arg2;
- (id)reallocateObjects;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)makeAllObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateAllObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)makeDelegatesFromDelegator:(id)arg1;
@property(readonly, nonatomic) id <TSCH3DSceneDelegate> delegate;
- (void)resetDelegates;
- (void)setDelegate:(id)arg1 forSceneObject:(id)arg2;
- (id)delegateForSceneObject:(id)arg1;
- (void)setDelegate:(id)arg1 forObject:(id)arg2;
- (id)delegateForObject:(id)arg1;
- (void)setPart:(struct TSCH3DScenePart)arg1 forType:(id)arg2;
- (struct TSCH3DScenePart)partForType:(id)arg1;
- (void)resetProperties;
- (void)copyPropertiesFromScene:(id)arg1;
- (void)setEnumerator:(id)arg1 properties:(id)arg2 forType:(id)arg3;
- (tmat4x4_3074befe)transform;
@property(retain, nonatomic) TSCH3DScenePropertyAccessor *accessor;
- (void)addObject:(id)arg1;
- (unsigned long long)count;
- (void)overrideObjects;
- (void)resetObjects;
- (id)objects;
@property(retain, nonatomic) TSCH3DCamera *camera;
@property(retain, nonatomic) TSCH3DSceneObject *main;
@property(retain, nonatomic) NSObject<TSCH3DScenePropertyAccessorFactory> *accessorFactory;
- (id)delegateMap;
- (void)setProperties:(id)arg1 forType:(id)arg2;
- (id)mutablePropertiesForType:(id)arg1;
- (id)propertiesForType:(id)arg1;
- (id)propertiesMap;
- (void)setEnumerator:(id)arg1 forType:(id)arg2;
- (id)enumeratorForType:(id)arg1;
- (void)resetEnumerator;
- (id)enumeratorMap;
- (id)clone;
- (id)description;
- (void)dealloc;
- (id)init;
- (struct ChartScenePropertyAccessor)chartProperties;
- (id)renderCache;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDictionaryOfDictionary : NSObject
{
    NSMutableDictionary *mDictionary;
}

- (void)addEntriesFromDictionaryOfDictionary:(id)arg1;
- (void)removeObjectForFirstLevelKey:(id)arg1 secondLevelKey:(id)arg2;
- (id)objectForFirstLevelKey:(id)arg1 secondLevelKey:(id)arg2;
- (void)setObject:(id)arg1 forFirstLevelKey:(id)arg2 secondLevelKey:(id)arg3;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderCache : NSObject
{
    NSMutableSet *mEnabledKeys;
    TSCH3DDictionaryOfDictionary *mCache;
}

+ (id)cache;
+ (id)cacheFromScene:(id)arg1;
- (void)setCacheObject:(id)arg1 forKey:(id)arg2 cacheID:(id)arg3;
- (id)cacheObjectForKey:(id)arg1 cacheID:(id)arg2 created:(_Bool *)arg3 ifAbsent:(CDUnknownBlockType)arg4;
- (void)enableCache:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)cacheEnabledForKey:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSceneRenderCacheObject : NSObject
{
    _Bool mCachingEnabled;
    NSMutableArray *mDynamicResources;
    NSMutableArray *mChildCacheObjects;
}

+ (id)cacheObject;
- (id)childCacheObjectAtIndex:(unsigned long long)arg1;
- (id)resourceAtIndex:(unsigned long long)arg1 created:(_Bool *)arg2 ifAbsent:(CDUnknownBlockType)arg3;
- (id)resourceAtIndex:(unsigned long long)arg1;
- (unsigned long long)resourceCount;
@property(nonatomic) _Bool cachingEnabled;
- (void)p_updateResourceUpdateFlags:(int)arg1;
- (int)p_resourceUpdateFlag;
- (void)allocateDynamicResourcesIntoArray:(id)arg1;
- (void)flushCache;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartScene : NSObject
{
    struct ChartSceneInfo mSceneInfo;
}

+ (void)addObjectsToSceneWithSceneInfo:(const struct ChartSceneInfo *)arg1;
+ (_Bool)supportsValueAxisLabelAlignmentCaching;
- (id).cxx_construct;
- (void)addAllObjectsToScene;
- (void)addSeriesObjectsToScene;
- (void)addObjectsToScene;
- (void)addAllLabelsToScene;
- (void)addLabelsToScene;
- (void)addChartTitlesToScene;
- (void)adjustSceneSettings;
- (const CDStruct_9aa9521f *)layoutSettings;
- (id)seriesType;
- (id)chartType;
- (id)chartInfo;
- (id)scene;
- (id)initWithSceneInfo:(const struct ChartSceneInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStagedAxisScene : TSCH3DChartScene
{
}

+ (_Bool)supportsValueAxisLabelAlignmentCaching;
- (void)addObjectsToScene;
- (void)addSageBoundsToScene;
- (void)addGridlinesToScene;
- (void)addLabelsToScene;
- (void)addChartTitlesToScene;
- (void)addPartsForEnumerator:(id)arg1 styleIndex:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStagedAxisScenePerspectiveShadows : TSCH3DChartStagedAxisScene
{
}

- (id)shadowSceneObject;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStagedAxisSceneOrthographicShadows : TSCH3DChartStagedAxisScene
{
}

- (id)shadowSceneObject;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStageSceneObject : TSCH3DSceneObject
{
    TSCH3DSceneObject *mMain;
}

+ (id)objectWithMain:(id)arg1;
- (void)postGetBounds:(id)arg1;
- (void)postrender:(id)arg1;
- (void)getSelectionKnobsPositions:(id)arg1;
- (void)rayPick:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)render:(id)arg1;
- (void)render:(id)arg1 selector:(SEL)arg2;
- (void)prerender:(id)arg1;
- (void)dealloc;
- (id)initWithMain:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGridlinesSceneObject : TSCH3DSceneObject
{
    TSCH3DPrefilteredLineRenderer *mRenderer;
}

+ (struct TSCH3DScenePart)partWithAxes:(id)arg1;
- (void)postGetBounds:(id)arg1;
- (void)primeRenderCaches:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)postrender:(id)arg1;
- (void)render:(id)arg1;
- (void)p_render:(id)arg1;
- (_Bool)p_shouldRenderInFrontForPipeline:(id)arg1;
- (tmat4x4_3074befe)p_gridlineTransformForPipeline:(id)arg1;
- (id)effects;
- (void)dealloc;
- (id)init;
- (int)p_animationTextureSceneDelegateChunkPlane;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAddBoundsSceneObjectMode : NSObject
{
}

+ (id)mode;
- (_Bool)hasObjectBoundsForScene:(id)arg1 pipeline:(id)arg2 returningObjectBounds:(struct ObjectBounds *)arg3;
- (id)elementsSceneFromScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAddDepthBoundsSceneObjectMode : TSCH3DChartAddBoundsSceneObjectMode
{
}

- (void)getBounds:(id)arg1;
- (float)p_factorToNearPlaneForScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAddRotationBoundsSceneObjectMode : TSCH3DChartAddBoundsSceneObjectMode
{
    int mRotationType;
}

@property(nonatomic) int rotationType; // @synthesize rotationType=mRotationType;
- (void)getBounds:(id)arg1;
- (void)p_submitGeometryForChartBounds:(const box_a3bd9649 *)arg1 pivot:(const tvec3_17f03ce0 *)arg2 thicknessIndex:(unsigned long long)arg3 pipeline:(id)arg4;
- (double)p_radiusFromBounds:(const box_a3bd9649 *)arg1 pivot:(const tvec3_17f03ce0 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAddRadialBoundsSceneObjectMode : TSCH3DChartAddBoundsSceneObjectMode
{
    float mFactor;
}

@property(nonatomic) float factor; // @synthesize factor=mFactor;
- (void)getBounds:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAddBoundsSceneObject : TSCH3DSceneObject
{
}

+ (void)setRadialBoundsFactor:(float)arg1 forScene:(id)arg2;
+ (void)setXYRotationBoundsForScene:(id)arg1;
+ (void)setYRotationBoundsForScene:(id)arg1;
+ (id)p_rotationBoundsModeForScene:(id)arg1;
+ (void)setDepthBoundsForScene:(id)arg1;
+ (id)p_setBoundsModeClass:(Class)arg1 forScene:(id)arg2;
- (void)render:(id)arg1;
- (void)rayPick:(id)arg1;
- (void)getBounds:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSageInvisibleBoundsSceneObject : TSCH3DSceneObject
{
}

- (void)render:(id)arg1;
- (id)effects;
- (void)getBounds:(id)arg1;
- (void)renderBounds:(id)arg1;
- (void)getGridlineSelectionCatcherBounds:(id)arg1;
- (void)get3PieceStageBounds:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexCoordGenerationCylinder : TSCH3DTexCoordGeneration
{
    box_a3bd9649 mBbox;
}

+ (id)generatorWithBBox:(const box_a3bd9649 *)arg1 transform:(const tmat4x4_3074befe *)arg2;
+ (id)generatorWithBBox:(const box_a3bd9649 *)arg1;
- (id).cxx_construct;
- (void)generateFromVertexArray:(const tvec3_17f03ce0 *)arg1 normalArray:(const tvec3_17f03ce0 *)arg2 numVertices:(long long)arg3 destination4D:(tvec4_ac57c72d *)arg4;
- (id)initWithBBox:(const box_a3bd9649 *)arg1;
- (id)initWithBBox:(const box_a3bd9649 *)arg1 transform:(const tmat4x4_3074befe *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureAtlas : NSObject
{
    NSMutableDictionary *mCachedLabels;
    NSMutableArray *mTextures;
    float mSamples;
}

+ (id)atlasWithSamples:(float)arg1;
+ (id)atlas;
@property(readonly, nonatomic) float samples; // @synthesize samples=mSamples;
- (tvec3_c2818ced)positionForLabel:(id)arg1;
- (tvec3_c2818ced)p_addLabel:(id)arg1;
- (id)textureAtIndex:(long long)arg1;
- (tvec2_3b141483)textureSizeAtIndex:(long long)arg1;
- (void)dealloc;
- (id)initWithSamples:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureAtlasTexture : NSObject
{
    tvec2_3b141483 mSize;
    float mSamples;
    NSMutableArray *mLabels;
    vector_56a3751a mPositions;
    long long mCurrentxpos;
    long long mCurrentypos;
    long long mCurrentheight;
    TSCH3DTextureAtlasTextureResource *mResource;
}

@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)resource;
- (id)getTextureDataBuffer;
- (tvec2_3b141483)addLabel:(id)arg1;
- (void)p_invalidateResource;
- (void)dealloc;
- (id)initWithSize:(tvec2_3b141483)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureAtlasTextureResource : TSCH3DResource <TSCHUnretainedParent>
{
    TSCH3DTextureAtlasTexture *mParent;
}

- (id)get;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFillTextureCoordinates : NSObject
{
}

+ (id)coordinates;
- (void)addTexcoordsToProcessor:(id)arg1 renderingLightingModel:(id)arg2 texcoords:(id)arg3;
- (id)packageForRenderingLightingModel:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexCoordGeneration : NSObject
{
    tmat4x4_3074befe mTransform;
    TSCH3DNormalDirectionMapper *mNormalDirectionMapper;
}

@property(retain, nonatomic) TSCH3DNormalDirectionMapper *normalDirectionMapper; // @synthesize normalDirectionMapper=mNormalDirectionMapper;
- (id).cxx_construct;
- (void)dealloc;
- (id)initWithTransform:(const tmat4x4_3074befe *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexCoordGenerationCube : TSCH3DTexCoordGeneration
{
    box_a3bd9649 mBbox;
}

+ (id)generatorWithBBox:(const box_a3bd9649 *)arg1 transform:(const tmat4x4_3074befe *)arg2;
+ (id)generatorWithBBox:(const box_a3bd9649 *)arg1;
- (id).cxx_construct;
- (void)generateFromVertexArray:(const tvec3_17f03ce0 *)arg1 normalArray:(const tvec3_17f03ce0 *)arg2 numVertices:(long long)arg3 destination4D:(tvec4_ac57c72d *)arg4;
- (id)initWithBBox:(const box_a3bd9649 *)arg1;
- (id)initWithBBox:(const box_a3bd9649 *)arg1 transform:(const tmat4x4_3074befe *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDocumentDataCache : NSObject
{
    TSKDocumentRoot *mDocumentRoot;
}

+ (id)dataCacheWithDocumentRoot:(id)arg1;
+ (id)dataFromCache:(id)arg1 forFile:(id)arg2 group:(id)arg3 generateBlock:(CDUnknownBlockType)arg4;
- (id)dataForFile:(id)arg1 group:(id)arg2 generateBlock:(CDUnknownBlockType)arg3;
- (_Bool)debug_nukeDocumentCachePathForGroup:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResourceLoader : NSObject
{
}

+ (id)loader;
- (int)virtualScreenForContext:(id)arg1;
- (unsigned long long)uploadResource:(id)arg1 handle:(id)arg2 insideSession:(id)arg3 config:(void *)arg4;
- (_Bool)shouldReuploadHandle:(id)arg1 config:(void *)arg2;
- (void)destroyHandle:(id)arg1 insideContext:(id)arg2;
- (void)postbindHandle:(id)arg1 config:(void *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResourceHandle : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDictionaryOfSet : NSObject <NSFastEnumeration>
{
    NSMutableDictionary *mSets;
}

+ (id)dictionaryWithMutableDictionaryClass:(Class)arg1;
+ (id)dictionary;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectsForKey:(id)arg1;
- (void)removeObject:(id)arg1 forKey:(id)arg2;
- (void)addObject:(id)arg1 forKey:(id)arg2;
- (unsigned long long)count;
- (id)allKeys;
- (id)description;
- (void)dealloc;
- (id)init;
- (id)initWithMutableDictionaryClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResourceCacheKey : NSObject <NSCopying>
{
    TSCH3DResourceLoader *mLoader;
    TSCH3DResource *mResource;
    int mVirtualScreen;
}

+ (id)keyWithLoader:(id)arg1 resource:(id)arg2 virtualScreen:(int)arg3;
@property(readonly, nonatomic) TSCH3DResource *resource; // @synthesize resource=mResource;
@property(readonly, nonatomic) TSCH3DResourceLoader *loader; // @synthesize loader=mLoader;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithLoader:(id)arg1 resource:(id)arg2 virtualScreen:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResourceCache : NSObject <TSCH3DProtectResourceDelegate>
{
    TSCH3DDictionaryOfSet *mResourceKeyedEntries;
    NSMutableDictionary *mHandles;
    NSCountedSet *mProtectedResources;
    NSMutableDictionary *mMemoryUsage;
    unsigned long long mMemoryUsedInBytes;
    unsigned long long mMemoryLimitInBytes;
    NSCountedSet *mUsageCounts;
}

@property(nonatomic) unsigned long long memoryLimitInBytes; // @synthesize memoryLimitInBytes=mMemoryLimitInBytes;
@property(readonly, nonatomic) unsigned long long memoryUsedInBytes; // @synthesize memoryUsedInBytes=mMemoryUsedInBytes;
- (id)debug_string;
- (id)debug_details;
- (id)debug_usageCounts;
- (id)debug_countedClasses;
- (id)debug_countedMemory;
- (id)debug_stats;
- (float)debug_totalMemoryUsageMB;
- (unsigned long long)memoryUsedForResource:(id)arg1;
- (_Bool)isProtectedResource:(id)arg1;
- (void)unprotectResource:(id)arg1;
- (void)protectResource:(id)arg1;
- (void)garbageCollectAllResourcesForContext:(id)arg1;
- (void)garbageCollectResources:(id)arg1 context:(id)arg2;
- (id)p_unretainedResourcesFromResources:(id)arg1;
- (void)flushMemoryForResources:(id)arg1;
- (id)flushResources:(id)arg1 context:(id)arg2;
- (id)flushAllResourcesForContext:(id)arg1;
- (id)p_allResourceKeys;
- (id)p_flushResourceKeys:(id)arg1 context:(id)arg2;
- (void)p_flushHandleForKey:(id)arg1 context:(id)arg2;
- (id)p_keysForResources:(id)arg1;
- (id)p_keysForResource:(id)arg1;
- (void)p_removeHandleForKey:(id)arg1;
- (void)updateUsageCountForResourceSet:(id)arg1 fromPreviousResourceSet:(id)arg2;
- (void)setHandle:(id)arg1 forKey:(id)arg2;
- (void)setBytesUploaded:(unsigned long long)arg1 forKey:(id)arg2;
- (id)handleForKey:(id)arg1;
- (id)keyForKey:(id)arg1;
- (id)keyForLoader:(id)arg1 resource:(id)arg2 virtualScreen:(int)arg3;
- (_Bool)hasEnoughFreeMemoryOfBytes:(unsigned long long)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResource : NSObject <NSCopying>
{
    int mCaching;
    TSCH3DDataBuffer *mCache;
    int mUpdate;
    _Bool mChanged;
    _Bool mCached;
    struct DataBufferInfo mDataBufferInfo;
    unsigned long long mUniqueIdentifier;
}

+ (id)resourceWithCaching:(int)arg1;
+ (id)resource;
+ (void)deallocateResourceUniqueIdentifier:(unsigned long long)arg1;
+ (unsigned long long)allocateResourceUniqueIdentifier;
@property(readonly, nonatomic) unsigned long long uniqueIdentifier; // @synthesize uniqueIdentifier=mUniqueIdentifier;
@property(nonatomic) int caching; // @synthesize caching=mCaching;
@property(nonatomic) int update; // @synthesize update=mUpdate;
- (id).cxx_construct;
@property(readonly, nonatomic) TSCH3DDataBuffer *buffer;
- (void)flushMemory;
- (void)setCache:(id)arg1;
- (_Bool)cacheNeedsUpdate;
@property(readonly, nonatomic) struct DataBufferInfo bufferInfo;
- (void)updateBufferInfoFromBuffer:(id)arg1;
@property(nonatomic) _Bool changed;
@property(readonly, nonatomic) _Bool isTexturable;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithCaching:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDataBufferResource : TSCH3DResource
{
}

+ (id)resourceWithBuffer:(id)arg1;
+ (id)resource;
- (void)flushMemory;
- (void)clear;
- (void)setBuffer:(id)arg1;
- (id)buffer;
- (id)get;
- (void)setChanged:(_Bool)arg1;
- (id)description;
- (id)initWithBuffer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDefaultDataBufferResource : TSCH3DDataBufferResource
{
}

+ (id)resourceWithBuffer:(id)arg1;
+ (id)resource;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DQuadResource : TSCH3DDataBufferResource
{
}

+ (id)normalizedCube;
+ (id)normalizedCenteredCube;
+ (id)normalized2D;
+ (id)normalized4D;

@end

__attribute__((visibility("hidden")))
@interface TSCH3D2DResources : TSCH3DResources
{
}

- (id)firstResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMutable2DResources : TSCH3D2DResources
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DArray2DResources : TSCH3DMutable2DResources
{
    TSCH3DArray2D *mResources;
}

+ (id)mResources;
+ (id)resourcesWithResource:(id)arg1;
+ (id)resourcesWithSize:(const tvec2_3b141483 *)arg1;
- (_Bool)hasResourceAtIndex:(const tvec2_3b141483 *)arg1;
- (id)firstResource;
- (id)resourceAtIndex:(const tvec2_3b141483 *)arg1;
- (void)setResource:(id)arg1 atIndex:(const tvec2_3b141483 *)arg2;
- (void)resize:(const tvec2_3b141483 *)arg1;
- (tvec2_3b141483)size;
- (void)dealloc;
- (id)initWithSize:(const tvec2_3b141483 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DResources : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DStringIndexedResources : TSCH3DArray2DResources
{
}

- (id)resourceAtIndex:(const tvec2_3b141483 *)arg1 string:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DValueIndexedResources : TSCH3DArray2DResources
{
}

- (id)resourceAtIndex:(const tvec2_3b141483 *)arg1 value:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarResourceCacheKey : NSObject
{
    struct BarExtrusionSetting mSetting;
}

+ (id)keyWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;
- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarResourceCacheItem : NSObject
{
    TSCH3DBarExtrusionGeometry *mBarGeometry;
    TSCH3DBarVertexResource *mVertexResource;
    TSCH3DBarNormalResource *mNormalResource;
    TSCH3DBarTexCoordResource *mTexCoordResource;
}

+ (id)itemWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;
@property(readonly, nonatomic) TSCH3DBarTexCoordResource *texCoordResource; // @synthesize texCoordResource=mTexCoordResource;
@property(readonly, nonatomic) TSCH3DBarNormalResource *normalResource; // @synthesize normalResource=mNormalResource;
@property(readonly, nonatomic) TSCH3DBarVertexResource *vertexResource; // @synthesize vertexResource=mVertexResource;
- (void)dealloc;
- (id)initWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarResourceCache : NSObject
{
    TSUNoCopyDictionary *mCache;
}

+ (id)barWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)instance;
+ (id)_singletonAlloc;
- (id)p_barWithExtrusionSetting:(const struct BarExtrusionSetting *)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarUnitCubeResource : TSCH3DDefaultDataBufferResource
{
}

+ (id)defaultDataBuffer;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAbstractBarVertexResource : TSCH3DResource
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAbstractBarNormalResource : TSCH3DResource
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAbstractBarTexCoordResource : TSCH3DResource
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMeshSharedChildResource : NSObject <TSCHUnretainedParent>
{
    TSCH3DChartMeshResources *mParent;
    _Bool mChildRegenerated;
    int mCaching;
    struct DataBufferInfo mBufferInfo;
    unsigned long long mResourceIdentifier;
}

+ (id)resourceWithParent:(id)arg1;
@property(nonatomic) _Bool childRegenerated; // @synthesize childRegenerated=mChildRegenerated;
@property(nonatomic) int caching; // @synthesize caching=mCaching;
- (id).cxx_construct;
@property(readonly, nonatomic) unsigned long long resourceIdentifier;
@property(readonly) struct DataBufferInfo bufferInfo;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMeshSharedResource : TSCH3DChartMeshSharedChildResource
{
    TSCH3DDataBuffer *mMesh;
}

@property(retain, nonatomic) TSCH3DDataBuffer *mesh; // @synthesize mesh=mMesh;
- (void)flushMemory;
- (id)get;
- (void)setChildRegenerated:(_Bool)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTexcoordSharedResource : TSCH3DChartMeshSharedResource
{
    TSCH3Dvec3DataBuffer *mVertex;
    TSCH3Dvec3DataBuffer *mNormal;
    TSCH3DTexCoordGeneration *mGenerator;
}

@property(retain, nonatomic) TSCH3DTexCoordGeneration *generator; // @synthesize generator=mGenerator;
@property(retain, nonatomic) TSCH3Dvec3DataBuffer *normal; // @synthesize normal=mNormal;
@property(retain, nonatomic) TSCH3Dvec3DataBuffer *vertex; // @synthesize vertex=mVertex;
- (void)flushMemory;
- (id)get;
- (void)setChildRegenerated:(_Bool)arg1;
- (void)setVertex:(id)arg1 normal:(id)arg2 generator:(id)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMeshResource : TSCH3DResource
{
    TSCH3DChartMeshSharedChildResource *mShared;
}

+ (id)resourceWithSharedResource:(id)arg1;
- (unsigned long long)uniqueIdentifier;
- (void)flushMemory;
- (id)get;
- (struct DataBufferInfo)bufferInfo;
- (int)caching;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithSharedResource:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartMeshResources : NSObject <TSCHUnretainedParent>
{
    NSObject<TSCH3DChartMeshCreator> *mCreator;
    TSCHChartSeries *mSeries;
    TSCH3DChartMeshSharedResource *mVertex;
    TSCH3DChartMeshSharedResource *mBounds;
    TSCH3DResource *mCachedBounds;
    TSCH3DChartMeshSharedResource *mNormal;
    TSCH3DChartTexcoordSharedResource *mTexcoord;
    struct GeometryArrays mArrays;
    TSCH3DGeometry *mGeometry;
}

+ (id)resourcesWithSeries:(id)arg1 creator:(id)arg2;
+ (id)nullBuffer;
- (id).cxx_construct;
- (void)regenerateForChild:(id)arg1;
- (void)regenerateBounds;
- (struct GeometryResource)geometryResourceWithPrimitiveType:(int)arg1;
- (void)regenerate;
@property(readonly, nonatomic) TSCH3DResource *texcoord;
@property(readonly, nonatomic) TSCH3DResource *normal;
@property(readonly, nonatomic) TSCH3DResource *vertex;
@property(readonly, nonatomic) TSCH3DResource *bounds;
- (void)clearParent;
- (void)dealloc;
- (id)initWithSeries:(id)arg1 creator:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarVertexResource : TSCH3DAbstractBarVertexResource
{
    TSCH3DBarExtrusionGeometry *mGeometry;
}

- (id)geometry;
- (long long)capOffset;
- (long long)numCapVertices;
- (long long)verticesOffset;
- (long long)numVertices;
- (id)get;
- (void)dealloc;
- (id)initWithGeometry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarNormalResource : TSCH3DAbstractBarNormalResource
{
    TSCH3DBarExtrusionGeometry *mGeometry;
}

- (id)get;
- (void)dealloc;
- (id)initWithGeometry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarTexCoordResource : TSCH3DAbstractBarTexCoordResource
{
    TSCH3DBarExtrusionGeometry *mGeometry;
    TSCH3DTexCoordGeneration *mGenerator;
}

- (id)get;
- (void)dealloc;
- (id)initWithGeometry:(id)arg1 generator:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGridlineResource : TSCH3DResource
{
    TSCH3DAxisGridEnumerator *mAxis;
}

+ (id)resourceWithAxisEnumerator:(id)arg1;
- (id)get;
@property(readonly, nonatomic) float opacity;
@property(readonly, nonatomic) TSDStroke *stroke;
@property(readonly, nonatomic) _Bool enabled;
- (void)dealloc;
- (id)initWithAxisEnumerator:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFillResource : TSCH3DResource
{
    id mFill;
}

+ (id)resourceWithFill:(id)arg1;
- (id)get;
- (void)dealloc;
- (id)initWithFill:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelResource : TSCH3DResource <TSCH3DStringIndexableResource>
{
    _Bool mSizeAndOffsetCalculated;
    tvec2_84d5962d mTightSize;
    tvec2_84d5962d mSize;
    tvec2_84d5962d mLabelRenderOffset;
    tvec2_84d5962d mBitmapLabelRenderOffset;
    TSCH3DLabelResourceAttributes *mAttributes;
}

+ (id)resourceWithLabelAttributes:(id)arg1;
@property(copy, nonatomic) TSCH3DLabelResourceAttributes *attributes; // @synthesize attributes=mAttributes;
- (id).cxx_construct;
- (tvec2_3b141483)labelSizeWithSamples:(double)arg1;
- (tvec2_3b141483)p_clampedLabelSampledSizeReturningClampedRatio:(float *)arg1;
@property(readonly, nonatomic) tvec2_3b141483 clampedLabelSampledSize;
@property(readonly, nonatomic) tvec2_84d5962d bitmapLabelRenderOffset;
@property(readonly, nonatomic) tvec2_84d5962d labelRenderOffset;
@property(readonly, nonatomic) tvec2_84d5962d tightSize;
@property(readonly, nonatomic) tvec2_84d5962d labelSize;
- (_Bool)isEqual:(id)arg1;
- (void)p_calculateSizeAndOffset;
- (id)get;
- (void)setString:(id)arg1;
- (void)dealloc;
- (id)initWithLabelAttributes:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelResourceAttributes : NSObject <NSCopying>
{
    TSWPParagraphStyle *mParagraphStyle;
    NSString *mString;
    TSCH3DLabelBitmapContextInfo *mBitmapContextInfo;
    double mLabelWidth;
    double mRenderSamples;
}

+ (id)labelAttributesWithParagraphStyle:(id)arg1 string:(id)arg2 bitmapContextInfo:(id)arg3 labelWidth:(double)arg4 renderSamples:(double)arg5;
@property(readonly, nonatomic) double renderSamples; // @synthesize renderSamples=mRenderSamples;
@property(readonly, nonatomic) double labelWidth; // @synthesize labelWidth=mLabelWidth;
@property(readonly, nonatomic) TSCH3DLabelBitmapContextInfo *bitmapContextInfo; // @synthesize bitmapContextInfo=mBitmapContextInfo;
@property(readonly, nonatomic) NSString *string; // @synthesize string=mString;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
- (unsigned long long)hash;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithParagraphStyle:(id)arg1 string:(id)arg2 bitmapContextInfo:(id)arg3 labelWidth:(double)arg4 renderSamples:(double)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFillResources : TSCH3DArray2DResources
{
}

- (void)setFill:(id)arg1 atIndex:(const tvec2_3b141483 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelResources : TSCH3DStringIndexedResources
{
    NSMutableDictionary *mCache;
    TSCH3DTextureAtlas *mAtlas;
}

@property(readonly, nonatomic) TSCH3DTextureAtlas *atlas; // @synthesize atlas=mAtlas;
- (id)resourceAtIndex:(const tvec2_3b141483 *)arg1 string:(id)arg2 bitmapContextInfo:(id)arg3 labelWidth:(double)arg4;
- (void)setParagraphStyle:(id)arg1 forKey:(unsigned long long)arg2 atIndex:(const tvec2_3b141483 *)arg3;
- (void)setParagraphStyle:(id)arg1 atIndex:(const tvec2_3b141483 *)arg2;
- (id)paragraphStyleForKey:(unsigned long long)arg1 defaultStyle:(id)arg2;
- (id)prepareTextureAtlasWithSamples:(float)arg1;
- (void)dealloc;
- (id)initWithSize:(const tvec2_3b141483 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexturePool : NSObject
{
}

+ (id)pool;
- (struct TextureCoordinateConverter)coordinateConverterForTexture:(id)arg1 material:(id)arg2;
- (id)resourceForMaterial:(id)arg1;
- (void)add:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureTiling : NSObject
{
}

+ (id)tiling;
- (void)restoreDefault;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBaseImageTextureTiling : TSCH3DTextureTiling
{
    tvec2_84d5962d mScale;
    float mRotation;
}

+ (id)instanceWithArchive:(const struct Chart3DBaseImageTextureTilingArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) float rotation; // @synthesize rotation=mRotation;
@property(nonatomic) tvec2_84d5962d scale; // @synthesize scale=mScale;
- (id).cxx_construct;
- (void)restoreDefault;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct Chart3DBaseImageTextureTilingArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DBaseImageTextureTilingArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DImageTextureTiling : TSCH3DBaseImageTextureTiling
{
    int mMode;
    int mWrap;
    int mFace;
    int mXposition;
    int mYposition;
    int mScontinuity;
    int mTcontinuity;
    _Bool mReveal;
}

+ (id)instanceWithArchive:(const struct Chart3DImageTextureTilingArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) _Bool reveal; // @synthesize reveal=mReveal;
@property(nonatomic) int tcontinuity; // @synthesize tcontinuity=mTcontinuity;
@property(nonatomic) int scontinuity; // @synthesize scontinuity=mScontinuity;
@property(nonatomic) int yposition; // @synthesize yposition=mYposition;
@property(nonatomic) int xposition; // @synthesize xposition=mXposition;
@property(nonatomic) int face; // @synthesize face=mFace;
@property(nonatomic) int wrap; // @synthesize wrap=mWrap;
@property(nonatomic) int mode; // @synthesize mode=mMode;
- (void)copyFromBaseImageTextureTiling:(id)arg1;
- (void)restoreDefault;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct Chart3DImageTextureTilingArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DImageTextureTilingArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSPImageData : NSObject <TSCHUnretainedParent>
{
    TSCH3DTSPImageDataTexture *mParent;
    TSPData *mData;
}

+ (id)dataWithTSPImageData:(id)arg1;
@property(retain, nonatomic) TSPData *data; // @synthesize data=mData;
- (id)uniqueFilename;
- (id)databufferForDataCache:(id)arg1;
- (_Bool)canLoadCachedDataForDataCache:(id)arg1;
- (id)p_generateMipmapsBuffer;
- (id)p_decodeCachedData:(id)arg1 imageSize:(tvec4_f99fd489 *)arg2;
- (id)p_encodeImageSize:(tvec4_f99fd489 *)arg1 andMipmapData:(id)arg2;
- (struct CGImage *)newCGImage;
- (_Bool)hasCompleteData;
- (void)clearParent;
- (void)setParent:(id)arg1;
- (void)dealloc;
- (id)initWithTSPImageData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureResource : TSCH3DResource <TSCHUnretainedParent, TSCH3DOptimizedTextureResource>
{
    TSCH3DTexture *mParent;
    NSNumber *mCachedHash;
}

- (id)databufferForDataCache:(id)arg1;
- (id)optimizedMipmapBuffer;
- (_Bool)canLoadCachedFullMipmapBufferForDataCache:(id)arg1;
- (id)get;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)clearParent;
- (id)p_parent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexture : NSObject
{
    TSCH3DTextureResource *mTextureResource;
}

- (id)optimizedMipmapBuffer;
- (_Bool)canLoadCachedFullMipmapBufferForDataCache:(id)arg1;
- (void)resetResource;
@property(readonly, nonatomic) TSCH3DResource *resource; // @dynamic resource;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSDFillTexture : TSCH3DTexture
{
    TSDFill *mFill;
}

+ (id)textureWithTSDFill:(id)arg1;
- (id)databufferForDataCache:(id)arg1;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTSDFill:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSPImageDataTexture : TSCH3DTexture
{
    TSCH3DTSPImageData *mData;
    TSCH3DTSPMipmapData *mOptimizedMipmapData;
    NSNumber *mCachedHash;
}

+ (id)textureWithImageData:(id)arg1 optimizedMipmapData:(id)arg2;
+ (id)instanceWithArchive:(const struct Chart3DTSPImageDataTextureArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) TSCH3DTSPImageData *data; // @synthesize data=mData;
- (void)setChanged:(_Bool)arg1;
- (id)optimizedMipmapBuffer;
- (_Bool)canLoadCachedFullMipmapBufferForDataCache:(id)arg1;
- (id)databufferForDataCache:(id)arg1;
@property(readonly, nonatomic) TSPData *imageData;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithImageData:(id)arg1 optimizedMipmapData:(id)arg2;
- (void)saveToArchive:(struct Chart3DTSPImageDataTextureArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DTSPImageDataTextureArchive *)arg1 unarchiver:(id)arg2;
- (void)p_setOptimizedMipMapData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPixelBuffer : NSObject
{
    tvec2_3b141483 mSize;
    unsigned long long mComponents;
    struct CGContext *mBitmapContext;
}

+ (id)pixelBufferWithSize:(const tvec2_3b141483 *)arg1 components:(unsigned long long)arg2;
+ (id)pixelBufferFromGLViewport:(const box_0260e9b3 *)arg1 components:(unsigned long long)arg2 flipped:(_Bool)arg3;
@property(readonly, nonatomic) struct CGContext *context; // @synthesize context=mBitmapContext;
@property(readonly, nonatomic) unsigned long long components; // @synthesize components=mComponents;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (void)flip;
- (void)copyPixelsFromData:(const void *)arg1;
@property(readonly, nonatomic) char *buffer;
- (void *)data;
- (id)TSUImage;
- (void)dealloc;
- (id)initWithSize:(const tvec2_3b141483 *)arg1 components:(unsigned long long)arg2;
- (void)copyPixelsFromGLViewport:(const box_0260e9b3 *)arg1 targetRegion:(const box_0260e9b3 *)arg2 flipped:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMaterial : NSObject <NSCopying>
{
}

+ (id)material;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexturesMaterial : TSCH3DMaterial
{
    tvec4_ac57c72d mColor;
    NSMutableArray *mTextures;
    NSMutableArray *mTilings;
}

+ (id)instanceWithArchive:(const struct Chart3DTexturesMaterialArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) tvec4_ac57c72d color; // @synthesize color=mColor;
- (id).cxx_construct;
- (id)firstTiling;
- (id)firstTexture;
- (void)addTexture:(id)arg1 tiling:(id)arg2;
- (id)textureEnumerator;
- (unsigned long long)textureCount;
- (id)tilings;
- (id)textures;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct Chart3DTexturesMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DTexturesMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DEmissiveMaterial : TSCH3DTexturesMaterial
{
}

+ (id)instanceWithArchive:(const struct Chart3DEmissiveMaterialArchive *)arg1 unarchiver:(id)arg2;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DEmissiveMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DEmissiveMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDiffuseMaterial : TSCH3DTexturesMaterial
{
}

+ (id)instanceWithArchive:(const struct Chart3DDiffuseMaterialArchive *)arg1 unarchiver:(id)arg2;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DDiffuseMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DDiffuseMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DModulateMaterial : TSCH3DTexturesMaterial
{
}

+ (id)instanceWithArchive:(const struct Chart3DModulateMaterialArchive *)arg1 unarchiver:(id)arg2;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DModulateMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DModulateMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSpecularMaterial : TSCH3DTexturesMaterial
{
}

+ (id)instanceWithArchive:(const struct Chart3DSpecularMaterialArchive *)arg1 unarchiver:(id)arg2;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DSpecularMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DSpecularMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShininessMaterial : TSCH3DTexturesMaterial
{
}

+ (id)instanceWithArchive:(const struct Chart3DShininessMaterialArchive *)arg1 unarchiver:(id)arg2;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DShininessMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DShininessMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DEnvironmentMaterial : TSCH3DTexturesMaterial
{
    _Bool mDecalMode;
}

+ (id)instanceWithArchive:(const struct Chart3DEnvironmentMaterialArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) _Bool decalMode; // @synthesize decalMode=mDecalMode;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct MaterialShaderVariables)defaultShaderVariables;
- (void)saveToArchive:(struct Chart3DEnvironmentMaterialArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DEnvironmentMaterialArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPhongMaterialPackage : TSCH3DMaterialPackage
{
    TSCH3DEmissiveMaterial *mEmissive;
    TSCH3DDiffuseMaterial *mDiffuse;
    TSCH3DModulateMaterial *mModulate;
    TSCH3DSpecularMaterial *mSpecular;
    TSCH3DShininessMaterial *mShininess;
}

+ (id)package;
+ (id)instanceWithArchive:(const struct Chart3DPhongMaterialPackageArchive *)arg1 unarchiver:(id)arg2;
@property(retain, nonatomic) TSCH3DShininessMaterial *shininess; // @synthesize shininess=mShininess;
@property(retain, nonatomic) TSCH3DSpecularMaterial *specular; // @synthesize specular=mSpecular;
@property(retain, nonatomic) TSCH3DModulateMaterial *modulate; // @synthesize modulate=mModulate;
@property(retain, nonatomic) TSCH3DDiffuseMaterial *diffuse; // @synthesize diffuse=mDiffuse;
@property(retain, nonatomic) TSCH3DEmissiveMaterial *emissive; // @synthesize emissive=mEmissive;
- (id)materialEnumerator;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct Chart3DPhongMaterialPackageArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DPhongMaterialPackageArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMaterialPackage : NSObject <NSCopying>
{
}

+ (id)package;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DEnvironmentPackage : NSObject <NSCopying>
{
    NSMutableArray *mMaterials;
}

+ (id)instanceWithArchive:(const struct Chart3DEnvironmentPackageArchive *)arg1 unarchiver:(id)arg2;
- (void)affect:(id)arg1 states:(id)arg2 scene:(id)arg3 texturePool:(id)arg4;
- (void)addMaterial:(id)arg1;
- (id)materialEnumerator;
- (unsigned long long)materialCount;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct Chart3DEnvironmentPackageArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DEnvironmentPackageArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFillSetIdentifier : NSObject
{
    NSString *mTextureSetID;
    unsigned long long mSeriesIndex;
    int mFillPropertyType;
}

+ (id)instanceWithDEPRECATEDArchive:(const struct DEPRECATEDChart3DFillArchive *)arg1 unarchiver:(id)arg2;
+ (id)instanceWithArchive:(const struct Chart3DFillArchive *)arg1 unarchiver:(id)arg2;
+ (id)identifierWithContentsOfDictionary:(id)arg1;
+ (id)identifierWithFillPropertyType:(int)arg1 seriesIndex:(unsigned long long)arg2 textureSetID:(id)arg3;
+ (id)identifierWithFillName:(id)arg1 seriesName:(id)arg2 textureSetID:(id)arg3;
@property(readonly, nonatomic) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
@property(readonly, nonatomic) NSString *textureSetID; // @synthesize textureSetID=mTextureSetID;
@property(readonly, nonatomic) NSString *textureSetFilename;
- (_Bool)isStoredInLocalBundle;
- (id)localDirectoryPath;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct Chart3DFillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Chart3DFillArchive *)arg1 unarchiver:(id)arg2;
- (unsigned long long)countOfSeriesInFillSet;
- (id)loadPropertiesDictionary;
- (_Bool)isSageCompatible;
- (id)p_version;
- (id)p_getPlist;
- (id)p_loadPlist;
- (id)p_plistData;
- (id)p_plistPath;
- (id)p_sageFillSetList;
- (unsigned long long)seriesIndexFromSageSeriesName:(id)arg1;
- (id)sageSeriesName;
- (id)p_sageSeriesNames;
- (int)fillPropertyTypeFromName:(id)arg1;
- (id)sageFillName;
- (id)p_sageFillPropertyNames;
- (id)dictionaryRepresentation;
- (id)initWithContentsOfDictionary:(id)arg1;
- (id)initWithFillPropertyType:(int)arg1 seriesIndex:(unsigned long long)arg2 textureSetID:(id)arg3;
- (id)initWithFillName:(id)arg1 seriesName:(id)arg2 textureSetID:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSageFillData : NSObject <TSCH3DSageFillData>
{
    NSDictionary *mProperties;
    NSArray *mLayersProperties;
    TSCH3DFillSetIdentifier *mIdentifier;
    NSObject<TSCH3DSageFillImageDataSource> *mImageSource;
}

+ (id)dataWithProperties:(id)arg1 layersProperties:(id)arg2 identifier:(id)arg3 imageSource:(id)arg4;
+ (id)dataWithFillSetIdentifier:(id)arg1;
+ (id)TSPImageDataFromTexture:(id)arg1;
+ (id)textureWithImageData:(id)arg1;
- (id)fillSetIdentifier;
- (id)textureForIndex:(unsigned long long)arg1;
- (id)p_optimizedMipmapPathFromOriginalPath:(id)arg1;
- (id)layerLightenPercentageForIndex:(unsigned long long)arg1;
- (int)layerTilingModeForIndex:(unsigned long long)arg1;
- (long long)layerBlendModeForIndex:(unsigned long long)arg1;
- (_Bool)layerIsEnvironmentMapForIndex:(unsigned long long)arg1;
- (float)layerRotationForIndex:(unsigned long long)arg1;
- (float)layerScaleForIndex:(unsigned long long)arg1;
- (_Bool)isLayerEnabledForIndex:(unsigned long long)arg1;
- (unsigned long long)layerCount;
- (id)objectForKey:(id)arg1 index:(unsigned long long)arg2;
- (Color_1703f521)emissive;
- (Color_1703f521)specular;
- (Color_1703f521)diffuse;
- (Color_1703f521)colorFromRedKey:(id)arg1 greenKey:(id)arg2 blueKey:(id)arg3 defaultGray:(float)arg4;
- (float)shininess;
- (float)opacity;
- (Color_1703f521)makeGray:(float)arg1;
- (struct ColorResult)colorFromRedKey:(id)arg1 greenKey:(id)arg2 blueKey:(id)arg3;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 layersProperties:(id)arg2 identifier:(id)arg3 imageSource:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFill : TSDFill
{
    TSCH3DLightingModel *mLightingModel;
    TSCH3DFillSetIdentifier *mIdentifier;
    NSNumber *mPercentage;
    TSDFill *mImageFill;
    struct CGSize mImageFillSize;
}

+ (id)fillWithIdentifier:(id)arg1;
+ (id)fill;
+ (id)fillWithLightingModel:(id)arg1 identifier:(id)arg2;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
+ (id)lightingModelWithSageFillData:(id)arg1;
+ (id)fillWithSageFillData:(id)arg1;
@property(retain, nonatomic) NSNumber *percentage; // @synthesize percentage=mPercentage;
@property(retain, nonatomic) TSCH3DFillSetIdentifier *identifier; // @synthesize identifier=mIdentifier;
- (id).cxx_construct;
- (int)fillType;
- (id)referenceColor;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)p_iconFill;
- (id)p_imageFillForRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (id)p_imageFillForSize:(struct CGSize)arg1;
- (id)convertToSimpleTSDFillWithSize:(unsigned long long)arg1 context:(id)arg2;
- (id)p_convertToTSDFillWithSize:(unsigned long long)arg1 technique:(int)arg2;
- (id)p_convertToTSDFillWithSize:(unsigned long long)arg1 technique:(int)arg2 context:(id)arg3;
- (id)renderingLightingModelWithLightings:(id)arg1;
- (void)nonatomicallySetLightingModel:(id)arg1;
@property(readonly) TSCH3DLightingModel *lightingModel;
- (_Bool)identifierReferencesUnavailableLocalBundle;
- (id)p_lazyLightingModel;
@property(readonly, nonatomic) float percentageValue;
- (id)lightenByPercent:(float)arg1;
- (_Bool)isOpaque;
- (_Bool)hasCompleteData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithLightingModel:(id)arg1 identifier:(id)arg2;
- (id)init;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
- (void)assignQuicklookColorToMaterialDiffuseColorForLightingModel:(id)arg1;
- (id)sageFillData;
- (_Bool)tsch_hasAllResources;

@end

__attribute__((visibility("hidden")))
@interface TSCHDEPRECATED3DFill : NSObject
{
    TSDFill *mFill;
    TSCH3DLightingModel *mLightingModel;
    TSCH3DFillSetIdentifier *mIdentifier;
}

+ (id)instanceWithArchive:(const struct DEPRECATEDChart3DFillArchive *)arg1 unarchiver:(id)arg2;
- (id)convertToTSDFill;
- (void)saveToArchive:(struct DEPRECATEDChart3DFillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct DEPRECATEDChart3DFillArchive *)arg1 unarchiver:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFillSageFillData : NSObject <TSCH3DSageFillData>
{
    TSCH3DFill *mFill;
    NSMutableArray *mTextures;
    NSMutableArray *mTextureBlendModes;
}

+ (id)dataWithFill:(id)arg1;
- (id)fillSetIdentifier;
- (id)textureForIndex:(unsigned long long)arg1;
- (id)layerLightenPercentageForIndex:(unsigned long long)arg1;
- (int)layerTilingModeForIndex:(unsigned long long)arg1;
- (long long)layerBlendModeForIndex:(unsigned long long)arg1;
- (_Bool)layerIsEnvironmentMapForIndex:(unsigned long long)arg1;
- (float)layerRotationForIndex:(unsigned long long)arg1;
- (float)layerScaleForIndex:(unsigned long long)arg1;
- (_Bool)isLayerEnabledForIndex:(unsigned long long)arg1;
- (unsigned long long)layerCount;
- (Color_1703f521)emissive;
- (Color_1703f521)specular;
- (Color_1703f521)diffuse;
- (float)shininess;
- (float)opacity;
- (id)materialAtIndex:(unsigned long long)arg1;
- (unsigned long long)modulateCount;
- (unsigned long long)diffuseCount;
- (id)environment;
- (id)modulateMaterial;
- (id)diffuseMaterial;
- (id)phongMaterials;
- (id)lightingModel;
- (void)p_addMaterial:(id)arg1 blendMode:(long long)arg2;
- (void)dealloc;
- (id)initWithFill:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryVertexElement : NSObject
{
    TSCH3DShaderVariable *mName;
    struct AttributeSpecs mSpecs;
}

+ (id)elementWithName:(id)arg1 specs:(const struct AttributeSpecs *)arg2;
+ (id)elementForName:(id)arg1 inArray:(id)arg2;
@property(readonly, nonatomic) TSCH3DShaderVariable *name; // @synthesize name=mName;
- (id).cxx_construct;
- (struct AttributeSpecs *)specs;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithName:(id)arg1 specs:(const struct AttributeSpecs *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryVertexFormat : NSObject
{
    NSMutableArray *mElements;
    unsigned long long mStride;
    unsigned long long mTotalComponents;
    long long mVertexCount;
    _Bool mCompiled;
}

@property(readonly, nonatomic) NSArray *elements; // @synthesize elements=mElements;
@property(readonly, nonatomic) _Bool compiled; // @synthesize compiled=mCompiled;
- (void)compile;
- (void)enumerateElementsUsingBlock:(CDUnknownBlockType)arg1;
- (id)elementForName:(id)arg1 bufferInfo:(const struct DataBufferInfo *)arg2;
@property(readonly, nonatomic) unsigned long long totalComponents;
@property(readonly, nonatomic) unsigned long long stride;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryElementArrays : NSObject
{
    TSCH3DOrderedDictionary *mArrays;
    unsigned long long mVertexCount;
    _Bool mBackfacesCulled;
}

+ (id)arrays;
@property(readonly, nonatomic) _Bool backfacesCulled; // @synthesize backfacesCulled=mBackfacesCulled;
@property(readonly, nonatomic) unsigned long long vertexCount; // @synthesize vertexCount=mVertexCount;
- (void)setElementsInFormat:(id)arg1;
- (id)cullBackfacesWithTransform:(const tmat4x4_3074befe *)arg1 keepIndices:(id)arg2;
- (id)bufferForName:(id)arg1;
- (void)setBuffer:(id)arg1 forName:(id)arg2;
- (id)p_makeDictionary;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryInterleavedArray : NSObject
{
    TSCH3DGeometryVertexFormat *mFormat;
    TSCH3Dvec1DataBuffer *mBuffer;
    TSCH3DDataBufferResource *mResource;
    TSCH3DUShortDataBuffer *mIndices;
    TSCH3DDataBufferResource *mIndicesResource;
    unsigned long long mTotalVertexCount;
    unsigned long long mElementArraysCount;
    _Bool mAllBackfacesPreculled;
    _Bool mDisableHardwareBackfaceCulling;
}

@property(readonly, nonatomic) _Bool disableHardwareBackfaceCulling; // @synthesize disableHardwareBackfaceCulling=mDisableHardwareBackfaceCulling;
@property(readonly, nonatomic) unsigned long long totalVertexCount; // @synthesize totalVertexCount=mTotalVertexCount;
@property(readonly, nonatomic) unsigned long long elementArraysCount; // @synthesize elementArraysCount=mElementArraysCount;
@property(readonly, nonatomic) TSCH3DGeometryVertexFormat *format; // @synthesize format=mFormat;
- (void)submitToProcessor:(id)arg1 range:(const range_f61e6b34 *)arg2;
- (void)addElementArrays:(id)arg1;
- (void)p_indexVerticesFromElementArrays:(id)arg1;
- (id)indexBuffer;
- (void)p_copyAllVerticesFromElementArrays:(id)arg1;
@property(readonly, nonatomic) _Bool hasData;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGeometryArrayCompiler : TSCH3DGeometryCollector <TSCH3DSceneObjectDelegator, TSCH3DChartAllElementSceneObjectDelegate>
{
    tvec2_3b141483 mCurrentElementIndex;
    TSCH3DChartModelEnumerator *mEnumeratorSeries;
    id <TSCH3DChartGeometryArrayCompilerDelegate> mDelegate;
}

+ (void)p_compileScene:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (void)compileSceneObject:(id)arg1 scene:(id)arg2 delegate:(id)arg3;
@property(readonly, nonatomic) tvec2_3b141483 currentElementIndex; // @synthesize currentElementIndex=mCurrentElementIndex;
@property(retain, nonatomic) id <TSCH3DChartGeometryArrayCompilerDelegate> delegate; // @synthesize delegate=mDelegate;
- (id).cxx_construct;
- (void)p_endCompile;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (id)p_transformBuffer:(id)arg1 forVariable:(id)arg2 offset:(unsigned long long)arg3 count:(unsigned long long)arg4;
- (long long)texture:(id)arg1 attributes:(const struct TextureAttributes *)arg2;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (struct ObjectState *)currentObjectState;
- (StateStack_22d3dc01 *)objectStateStack;
- (id)matrixProcessor;
- (id)objectStateProcessor;
- (id)combinationProcessor;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
@property(readonly, nonatomic) TSCHChartSeries *chartSeries;
- (void)dealloc;
- (id)p_initWithScene:(id)arg1;
- (id)initWithScene:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryCollector : TSCH3DRetargetRenderProcessor
{
    TSCH3DScene *mScene;
    NSMutableDictionary *mDerivedData;
}

+ (id)collectorWithScene:(id)arg1;
+ (id)processor;
+ (id)processorWithOriginal:(id)arg1;
@property(readonly, nonatomic) NSDictionary *derivedData; // @synthesize derivedData=mDerivedData;
@property(readonly, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
- (void)dealloc;
- (id)init;
- (id)initWithScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometryRepresentativeVertexCollector : TSCH3DGeometryCollector
{
}

- (void)endCollection;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (id)matrixProcessor;
- (id)initWithScene:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarExtrusionGeometry : TSCH3DExtrusionGeometry
{
    struct BarExtrusionSetting mExtrusionSetting;
    TSCH3DNormalDirectionMapper *mNormalDirectionMapper;
    vector_45b393db mNormalizedSpine;
    float mScaleMappingStartingHeight;
    float mBottomCapScale;
}

+ (id)namedBevelInterpolationShaderFunction;
@property(readonly, nonatomic) float bottomCapScale; // @synthesize bottomCapScale=mBottomCapScale;
@property(readonly, nonatomic) float scaleMappingStartingHeight; // @synthesize scaleMappingStartingHeight=mScaleMappingStartingHeight;
@property(readonly, nonatomic) TSCH3DNormalDirectionMapper *normalDirectionMapper; // @synthesize normalDirectionMapper=mNormalDirectionMapper;
@property(nonatomic) struct BarExtrusionSetting extrusionSetting; // @synthesize extrusionSetting=mExtrusionSetting;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)selectionKnobPositions;
- (int)capCount;
- (unsigned int)capOffset;
- (int)geometryCount;
- (unsigned int)geometryOffset;
- (void)generateArrays;
- (void)p_updateNormalizedSpineScaleMappingsUsingTransform:(const tmat4x4_3074befe *)arg1 forSpineGenerator:(id)arg2;
- (void)debug_printDataPoints;
- (void)p_insertCrossPointsIntoVector:(vector_35283da1 *)arg1;
@property(readonly, nonatomic) float size;
@property(readonly, nonatomic) _Bool hasBottomBevel;
@property(readonly, nonatomic) _Bool hasTopBevel;
@property(readonly, nonatomic) _Bool isCylindrical;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBarNormalDirectionMapper : TSCH3DNormalDirectionMapper
{
    long long mWallOffset;
    long long mCrossSectionCount;
    long long mSpineCount;
    long long mBeginLimit;
    long long mEndLimit;
}

- (void)mapFromVertexArray:(const tvec3_17f03ce0 *)arg1 normalArray:(const tvec3_17f03ce0 *)arg2 normalMatrix:(const tmat3x3_b39cd897 *)arg3 numVertices:(long long)arg4 destination:(vector_a3426c4e *)arg5;
- (id)initWithWallOffset:(long long)arg1 crossSectionCount:(long long)arg2 spineCount:(long long)arg3 beginLimit:(long long)arg4 endLimit:(long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DExtrusionDoubleBevelGenerator : NSObject
{
    vector_45b393db mInputSpinePoints;
    vector_45b393db mSpinePoints;
    vector_35283da1 mScaleValues;
    float mBevelHeight;
    long long mBevelSlices;
    _Bool mEnableBevelEdges;
}

+ (id)generator;
+ (id)namedBevelInterpolationShaderFunction;
@property(nonatomic) _Bool enableBevelEdges; // @synthesize enableBevelEdges=mEnableBevelEdges;
@property(nonatomic) long long bevelSlices; // @synthesize bevelSlices=mBevelSlices;
@property(nonatomic) float bevelHeight; // @synthesize bevelHeight=mBevelHeight;
- (id).cxx_construct;
- (void).cxx_destruct;
- (long long)bottomSlices;
- (long long)topSlices;
- (void)adjustBottomScales;
- (void)adjustTopScales;
- (void)resetAllScales;
- (float)scaleUValueAtIndex:(long long)arg1;
- (void)adjustBottomOffset;
- (void)generateBottom;
@property(readonly, nonatomic) long long bottomBevelStartIndex;
- (tvec3_17f03ce0)bottomDirection;
@property(readonly, nonatomic) long long bottomNonBevelStartIndex;
- (void)generateTop;
- (long long)topBevelStartIndex;
- (void)createSpinePointArray;
- (float)spineUValueAtIndex:(long long)arg1;
- (const vector_35283da1 *)scaleValues;
- (const vector_45b393db *)spinePoints;
- (vector_45b393db *)inputSpinePoints;
- (void)generate;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSplineGenerator : NSObject
{
    float mDetail;
    float mTension;
    float mAdaptiveThreshold;
    vector_35283da1 mControlPts;
    vector_b5bccc4d mSplineExclude;
}

+ (id)generator;
@property(nonatomic) float adaptiveThreshold; // @synthesize adaptiveThreshold=mAdaptiveThreshold;
@property(nonatomic) float tension; // @synthesize tension=mTension;
@property(nonatomic) float detail; // @synthesize detail=mDetail;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)generatePoints:(vector_35283da1 *)arg1;
- (void)calcControlMatrix:(tmat4x4_3074befe *)arg1 pointNum:(long long)arg2;
- (vector_b5bccc4d *)splineExclude;
- (vector_35283da1 *)controlPts;
- (_Bool)isClosed;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGeometry : NSObject
{
    TSCH3Dvec3DataBuffer *mVertexBuffer;
    TSCH3Dvec3DataBuffer *mNormalBuffer;
    int mNumVertices;
    box_a3bd9649 mGeometryBounds;
}

+ (id)geometry;
- (id).cxx_construct;
@property(readonly, nonatomic) box_a3bd9649 geometryBounds;
- (id)selectionKnobPositions;
- (int)capCount;
- (unsigned int)capOffset;
- (int)geometryCount;
- (unsigned int)geometryOffset;
- (void)allocateArrays:(int)arg1;
- (void)transformArrays:(const tmat4x4_3074befe *)arg1;
- (tvec3_17f03ce0 *)normalArrayPointer;
- (tvec3_17f03ce0 *)vertexArrayPointer;
- (vector_45b393db *)normalArray;
- (vector_45b393db *)vertexArray;
- (id)normalBuffer;
- (id)vertexBuffer;
- (void)reset;
- (int)numVertices;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DExtrusionGeometry : TSCH3DGeometry
{
    vector_35283da1 mCrossSection;
    vector_45b393db mSpine;
    vector_35283da1 mScale;
    _Bool mBeginCap;
    _Bool mEndCap;
    float mCrossSectionCreaseAngle;
    float mSpineCreaseAngle;
    unsigned int mEndCapOffset;
    int mEndCapCount;
    unsigned int mBeginCapOffset;
    int mBeginCapCount;
    tvec3_17f03ce0 mNormalBias;
    tvec3_17f03ce0 mSpineDirectionBias;
}

@property(nonatomic) tvec3_17f03ce0 spineDirectionBias; // @synthesize spineDirectionBias=mSpineDirectionBias;
@property(readonly, nonatomic) int capCount; // @synthesize capCount=mEndCapCount;
@property(readonly, nonatomic) unsigned int capOffset; // @synthesize capOffset=mEndCapOffset;
@property(nonatomic) tvec3_17f03ce0 normalBias; // @synthesize normalBias=mNormalBias;
@property(nonatomic) float spineCreaseAngle; // @synthesize spineCreaseAngle=mSpineCreaseAngle;
@property(nonatomic) float crossSectionCreaseAngle; // @synthesize crossSectionCreaseAngle=mCrossSectionCreaseAngle;
@property(nonatomic) _Bool endCap; // @synthesize endCap=mEndCap;
@property(nonatomic) _Bool beginCap; // @synthesize beginCap=mBeginCap;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)debug_dumpGeometryBounds;
- (void)generateArrays;
- (const vector_35283da1 *)scale;
- (void)setScale:(const vector_35283da1 *)arg1;
- (const vector_45b393db *)spine;
- (void)setSpine:(const vector_45b393db *)arg1;
- (const vector_35283da1 *)crossSection;
- (void)setCrossSection:(const vector_35283da1 *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLineExtrusionGeometry : TSCH3DExtrusionGeometry
{
    tvec2_84d5962d mYlimits;
    tvec2_84d5962d mXlimits;
}

+ (id)lineFromValues:(const vector_ec52ae8c *)arg1 yLimits:(tvec2_84d5962d)arg2;
@property(nonatomic) tvec2_84d5962d xlimits; // @synthesize xlimits=mXlimits;
@property(nonatomic) tvec2_84d5962d ylimits; // @synthesize ylimits=mYlimits;
- (id).cxx_construct;
- (id)selectionKnobPositions;
- (tmat4x4_3074befe)matrixAtXPosition:(float)arg1 returningXRangeInfo:(struct LineExtrusionGeometryXRangeInfo *)arg2;
- (tmat3x3_b39cd897)p_rotationMatrixForCrossSectionIndex:(unsigned long long)arg1;
- (void)generateArrays;
- (void)setSpine:(const vector_45b393db *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPieWedgeGeometry : TSCH3DGeometry
{
    float mStartAngle;
    float mEndAngle;
    long long mAngleSteps;
    long long mRadiusSteps;
    long long mBevelEdgeSteps;
    float mRadius;
    float mBottomZ;
    float mTopZ;
    long long mCapOffset;
    long long mCapCount;
    TSCH3DNormalDirectionMapper *mNormalDirectionMapper;
}

@property(readonly, nonatomic) TSCH3DNormalDirectionMapper *normalDirectionMapper; // @synthesize normalDirectionMapper=mNormalDirectionMapper;
@property(nonatomic) long long bevelEdgeSteps; // @synthesize bevelEdgeSteps=mBevelEdgeSteps;
@property(readonly, nonatomic) long long capCount; // @synthesize capCount=mCapCount;
@property(readonly, nonatomic) long long capOffset; // @synthesize capOffset=mCapOffset;
@property(nonatomic) float topZ; // @synthesize topZ=mTopZ;
@property(nonatomic) float bottomZ; // @synthesize bottomZ=mBottomZ;
@property(nonatomic) float radius; // @synthesize radius=mRadius;
@property(nonatomic) long long radiusSteps; // @synthesize radiusSteps=mRadiusSteps;
@property(nonatomic) long long angleSteps; // @synthesize angleSteps=mAngleSteps;
@property(nonatomic) float endAngle; // @synthesize endAngle=mEndAngle;
@property(nonatomic) float startAngle; // @synthesize startAngle=mStartAngle;
- (id)selectionKnobPositions;
- (int)geometryCount;
- (void)generateArrays;
- (void)p_generateBevelCoordinates:(vector_45b393db *)arg1 andAngles:(vector_ec52ae8c *)arg2 radiusArray:(const vector_ec52ae8c *)arg3 topArray:(const vector_ec52ae8c *)arg4;
- (void)p_generateAngles:(vector_ec52ae8c *)arg1;
- (void)generateRoundedTop:(vector_ec52ae8c *)arg1 radiusArray:(vector_ec52ae8c *)arg2;
- (float)bevelHeight;
- (_Bool)isFullCircle;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPieBevelEdgeNormalDirectionMapper : TSCH3DNormalDirectionMapper
{
    long long mTopMeshOffset;
    long long mAngleSteps;
    long long mRadiusSteps;
    long long mAngleLimit;
    long long mRadiusLimit;
}

- (void)mapFromVertexArray:(const tvec3_17f03ce0 *)arg1 normalArray:(const tvec3_17f03ce0 *)arg2 normalMatrix:(const tmat3x3_b39cd897 *)arg3 numVertices:(long long)arg4 destination:(vector_a3426c4e *)arg5;
- (id)initWithTopMeshOffset:(long long)arg1 angleSteps:(long long)arg2 radiusSteps:(long long)arg3 angleLimit:(long long)arg4 radiusLimit:(long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAreaGenerator : NSObject
{
    vector_45b393db mTop;
    vector_45b393db mBottom;
    tvec2_84d5962d mYLimits;
    float mZeroValue;
}

+ (id)generatorWithYLimits:(tvec2_84d5962d)arg1 zeroValue:(float)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clipLine:(const vector_45b393db *)arg1 into:(vector_45b393db *)arg2;
- (id)createGeometry:(const vector_ec52ae8c *)arg1;
- (void)addRow:(const vector_ec52ae8c *)arg1;
- (float)clampedZero;
- (void)dealloc;
- (id)initWithYLimits:(tvec2_84d5962d)arg1 zeroValue:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAreaGeometry : TSCH3DGeometry
{
    vector_45b393db mTopLine;
    vector_45b393db mBottomLine;
    float mMinZ;
    float mMaxZ;
    float mZeroValue;
    unsigned int mCapOffset;
    int mCapCount;
    _Bool mStacked;
}

@property(nonatomic) _Bool stacked; // @synthesize stacked=mStacked;
@property(nonatomic) float zeroValue; // @synthesize zeroValue=mZeroValue;
@property(nonatomic) float maxZ; // @synthesize maxZ=mMaxZ;
@property(nonatomic) float minZ; // @synthesize minZ=mMinZ;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)selectionKnobPositions;
- (void)generateArrays;
- (tvec2_84d5962d)bottomTopAtPosition:(float)arg1;
- (int)capCount;
- (unsigned int)capOffset;
- (int)geometryCount;
- (const vector_45b393db *)bottomLine;
- (const vector_45b393db *)topLine;
- (void)setTopLine:(const vector_45b393db *)arg1 bottomLine:(const vector_45b393db *)arg2 zeroValue:(float)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDataBuffer : NSObject
{
}

- (struct DataBufferLevelData)dataWithSizeGreaterOrEqualTo:(unsigned long long)arg1;
- (struct DataBufferLevelData)dataAtLevel:(unsigned long long)arg1;
- (struct DataBufferInfo)bufferInfo;
@property(readonly, nonatomic) _Bool hasLevels;
@property(readonly, nonatomic) tvec2_3b141483 size2;
@property(readonly, nonatomic) tvec3_c2818ced size;
@property(readonly, nonatomic) unsigned long long byteSize;
@property(readonly, nonatomic) unsigned long long elementByteSize;
@property(readonly, nonatomic) unsigned long long componentByteSize;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSCH3D2DDataBuffer : TSCH3DDataBuffer
{
    struct DataBuffer2DDimension mDimension;
}

+ (id)bufferWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1;
+ (id)bufferWithCapacitySize:(const tvec2_3b141483 *)arg1 components:(unsigned long long)arg2;
@property(readonly, nonatomic) struct DataBuffer2DDimension dimension; // @synthesize dimension=mDimension;
- (id).cxx_construct;
- (struct DataBufferLevelData)dataAtLevel:(unsigned long long)arg1;
- (_Bool)hasLevels;
@property(readonly, nonatomic) tvec3_c2818ced size;
- (unsigned long long)components;
- (id)initWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DNSData2DDataBuffer : TSCH3D2DDataBuffer
{
    NSData *mConstData;
    NSMutableData *mMutableData;
}

+ (id)bufferWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1 data:(id)arg2;
+ (id)bufferWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1 mutableData:(id)arg2;
- (void)resizeFillDimension:(const struct DataBuffer2DDimension *)arg1;
- (void)fillCapacity;
@property(readonly, nonatomic) NSData *NSData;
- (void *)mutableData;
- (const void *)data;
- (unsigned long long)componentByteSize;
- (int)componentType;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1;
- (id)initWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1 data:(id)arg2;
- (id)initWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1 mutableData:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVectorDataBuffer : TSCH3DDataBuffer
{
}

+ (id)bufferWithCapacity:(unsigned long long)arg1;
+ (id)bufferWithCapacity:(unsigned long long)arg1 dimension:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFloatVectorDataBuffer : TSCH3DVectorDataBuffer
{
}

- (int)componentType;

@end

__attribute__((visibility("hidden")))
@interface TSCH3Dvec1DataBuffer : TSCH3DFloatVectorDataBuffer
{
    vector_7cfb452c mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_7cfb452c *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3Dvec2DataBuffer : TSCH3DFloatVectorDataBuffer
{
    vector_35283da1 mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_35283da1 *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3Dvec3DataBuffer : TSCH3DFloatVectorDataBuffer
{
    vector_45b393db mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_45b393db *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3Dvec4DataBuffer : TSCH3DFloatVectorDataBuffer
{
    vector_b7abfae3 mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_b7abfae3 *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DUByteDataBuffer : TSCH3DVectorDataBuffer
{
    vector_4c74e494 mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (int)componentType;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_4c74e494 *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DUShortDataBuffer : TSCH3DVectorDataBuffer
{
    vector_a3e57ab7 mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clear;
- (id)elementsAtIndices:(id)arg1;
- (unsigned long long)componentByteSize;
- (unsigned long long)components;
- (int)componentType;
- (unsigned long long)count;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_a3e57ab7 *container;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVectorN2DDataBuffer : TSCH3D2DDataBuffer
{
    vector_a3426c4e mContainer;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)resizeFillDimension:(const struct DataBuffer2DDimension *)arg1;
- (void)fillCapacity;
- (void *)mutableData;
- (const void *)data;
@property(readonly, nonatomic) vector_a3426c4e *container;
- (unsigned long long)componentByteSize;
- (int)componentType;
- (unsigned long long)count;
- (id)initWithCapacityDimension:(const struct DataBuffer2DDimension *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DVectorN3DDataBuffer : TSCH3DDataBuffer
{
    struct DataBuffer3DDimension mDimension;
    vector_a3426c4e mContainer;
}

+ (id)bufferWithCapacity3DDimension:(const struct DataBuffer3DDimension *)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)fillCapacity;
- (const void *)data;
@property(readonly, nonatomic) vector_a3426c4e *container;
- (unsigned long long)componentByteSize;
- (int)componentType;
- (unsigned long long)components;
- (unsigned long long)count;
- (tvec3_c2818ced)size;
- (id)initWithCapacity3DDimension:(const struct DataBuffer3DDimension *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGenericAxisLabelPositioner : NSObject <TSCH3DAxisLabelPositioner>
{
    tvec2_84d5962d mRange;
    unsigned long long mAxis;
    float mOffset;
    unsigned int mAlignment;
}

+ (id)verticalWithRange:(tvec2_84d5962d *)arg1 offset:(float)arg2;
+ (id)horizontalWithRange:(tvec2_84d5962d *)arg1 offset:(float)arg2;
+ (id)verticalWithRange:(tvec2_84d5962d *)arg1;
+ (id)horizontalWithRange:(tvec2_84d5962d *)arg1;
+ (id)vertical;
+ (id)horizontal;
- (id).cxx_construct;
- (float)labelGapForCount:(unsigned long long)arg1;
- (tvec3_17f03ce0)positionForValue:(double)arg1 count:(unsigned long long)arg2 chartDirection:(const tvec3_17f03ce0 *)arg3;
- (unsigned int)alignmentForChartDirection:(const tvec3_17f03ce0 *)arg1;
- (id)initWithAxis:(long long)arg1 alignment:(unsigned int)arg2 offset:(float)arg3 range:(tvec2_84d5962d *)arg4;
- (_Bool)isHorizontal;
- (_Bool)hasOffset;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSwitchSideAxisLabelPositioner : TSCH3DGenericAxisLabelPositioner
{
}

- (tvec3_17f03ce0)positionForValue:(double)arg1 count:(unsigned long long)arg2 chartDirection:(const tvec3_17f03ce0 *)arg3;
- (unsigned int)alignmentForChartDirection:(const tvec3_17f03ce0 *)arg1;
- (long long)p_otherAxis;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBoundsLayoutSceneDelegate : NSObject <TSCH3DSceneObjectDelegator, TSCH3DSceneDelegate, TSCH3DChartAllSceneObjectDelegate>
{
    TSCH3DGetBoundsPipeline *mPipeline;
    TSCH3DLabelsRendererTransforms *mTransforms;
    struct map<TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds, std::__1::less<TSCH3D::SceneObjectSharedPointer>, std::__1::allocator<std::__1::pair<const TSCH3D::SceneObjectSharedPointer, TSCH3D::ActiveLabelsTypeBounds>>> mSceneObjectLabelsBounds;
    struct ActiveLabelsTypeBounds *mActiveBounds;
    _Bool mLabelsHaveCache;
    _Bool mLabelsDidOverride;
    TSUMutablePointerSet *mDebugCachedSceneObjects;
}

+ (id)sceneDelegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)p_addAllActiveLabelsBounds;
- (void)willRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)p_extendProjectedBoundsForCachedLabelBounds:(const struct CachedLabelBounds *)arg1 offset:(const tvec3_17f03ce0 *)arg2;
- (void)invalidateLabelsBoundsForSceneObjectClass:(Class)arg1 boundsIndex:(long long)arg2;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
- (id)interestedClasses;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBoundsLayoutSceneDelegatePie : TSCH3DChartBoundsLayoutSceneDelegate
{
}

- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (id)interestedClasses;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBoundsLayout : NSObject
{
    TSCH3DScene *mScene;
    TSCH3DScene *mBounds;
    Class mGetBoundsClass;
    TSCH3DChartGetProjectedBoundsPipeline *mGetBounds;
    TSCH3DChartBoundsLayoutSceneDelegate *mSceneDelegate;
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayoutInPage;
    tvec2_3b141483 mOriginalContainingViewport;
    int mMode;
    CDStruct_9aa9521f mLayoutSettings;
}

@property(readonly, nonatomic) CDStruct_9aa9521f layoutSettings; // @synthesize layoutSettings=mLayoutSettings;
@property(retain, nonatomic) Class getBoundsClass; // @synthesize getBoundsClass=mGetBoundsClass;
@property(nonatomic) int mode; // @synthesize mode=mMode;
@property(nonatomic) tvec2_3b141483 originalContainingViewport; // @synthesize originalContainingViewport=mOriginalContainingViewport;
@property(nonatomic) box_80622335 bodyLayoutInPage; // @synthesize bodyLayoutInPage=mBodyLayoutInPage;
@property(nonatomic) box_80622335 layoutInPage; // @synthesize layoutInPage=mLayoutInPage;
@property(readonly, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
- (id).cxx_construct;
- (id)debugBounds;
- (void)cacheLabels;
- (void)resetContainingViewport;
- (const struct ChartProjectedBoundsSpaces *)projectedBounds;
- (const struct ChartProjectedBoundsSpaces *)p_projectedBoundsWithLabelsMode:(int)arg1;
- (struct ResizingSize)resizingSize;
- (void)p_updateLabelWrapBoundsPass;
- (_Bool)isSage;
- (_Bool)isInward;
@property(nonatomic) tvec2_3b141483 containingViewport;
- (void)invalidateLabelsBoundsForSceneObjectClass:(Class)arg1 boundsIndex:(long long)arg2;
- (void)invalidateBounds;
- (id)cacheableGetBoundsPipeline;
- (void)resetSceneDelegate;
- (void)dealloc;
- (id)init;
- (id)initWithScene:(id)arg1 containingViewport:(const tvec2_3b141483 *)arg2 originalContainingViewport:(const tvec2_3b141483 *)arg3 layoutSettings:(const CDStruct_9aa9521f *)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartResizer : NSObject
{
    TSCH3DChartBoundsLayout *mLayout;
    TSCH3DChartType *mChartType;
    TSCH3DScene *mScene;
    struct ChartScenePropertyAccessor *mAccessor;
    float mMinStep;
    float mPrecision;
    struct ResizeData mPrevious;
    struct ResizeData mCurrent;
    tvec2_84d5962d mTarget;
    unsigned long long mIndex;
    CDStruct_9aa9521f mLayoutSettings;
}

+ (id)resizerWithLayout:(id)arg1 chartType:(id)arg2;
+ (float)perspectiveness;
+ (float)minimumSize;
+ (tvec2_84d5962d)adjustLabelWrapSize:(const tvec2_84d5962d *)arg1;
+ (tvec2_84d5962d)adjustLabelWrapSize:(const tvec2_84d5962d *)arg1 forScene:(id)arg2;
@property(nonatomic) float precision; // @synthesize precision=mPrecision;
@property(nonatomic) float minStep; // @synthesize minStep=mMinStep;
- (id).cxx_construct;
- (tvec2_84d5962d)resize:(const tvec2_84d5962d *)arg1 startingSize:(tvec2_84d5962d *)arg2;
- (tvec2_84d5962d)updateResizerFromRequestedSize:(const tvec2_84d5962d *)arg1 startingSize:(tvec2_84d5962d *)arg2;
- (float)containingViewportThreshold;
- (void)readjustContainingViewport;
- (void)adjustContainingViewport;
- (tvec2_3b141483)containingViewportFromCurrentSize;
- (void)initializeResizing:(tvec2_84d5962d *)arg1;
- (void)setContainingViewport:(tvec2_3b141483 *)arg1;
- (tvec2_3b141483)containingViewportFromSize:(tvec2_84d5962d *)arg1;
- (float)perspectiveness;
- (void)loop;
- (_Bool)resize1;
- (void)setScale:(tvec3_17f03ce0 *)arg1;
- (_Bool)currentCanImprove;
- (tvec2_01ee4891)canImprove;
- (void)seedResizeCondition;
- (void)updateResizeData;
- (_Bool)checkImprovement;
- (void)updateSteps;
- (tvec3_17f03ce0)adjustedScale;
- (tvec3_17f03ce0)clampDepthRatio:(tvec3_17f03ce0 *)arg1;
- (tvec3_17f03ce0)clamp:(tvec3_17f03ce0 *)arg1;
- (tvec3_17f03ce0)adjust:(tvec3_17f03ce0 *)arg1;
- (tvec3_17f03ce0)adjust:(tvec3_17f03ce0 *)arg1 by:(float)arg2;
- (void)gingerClamp;
- (_Bool)allConverges;
- (tvec2_01ee4891)converges;
- (void)setStep:(float)arg1;
- (float)step;
- (float)maxDepthRatio;
- (float)minScale;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 chartType:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPieResizer : TSCH3DChartResizer
{
    tvec2_01ee4891 mDirections;
}

+ (float)perspectiveness;
+ (tvec2_84d5962d)adjustLabelWrapSize:(const tvec2_84d5962d *)arg1;
- (id).cxx_construct;
- (tvec2_84d5962d)updateResizerFromRequestedSize:(const tvec2_84d5962d *)arg1 startingSize:(tvec2_84d5962d *)arg2;
- (tvec2_84d5962d)updateDirectionsFromRequestedSize:(const tvec2_84d5962d *)arg1 startingSize:(tvec2_84d5962d *)arg2;
- (tvec2_84d5962d)squareSize:(const tvec2_84d5962d *)arg1;
- (tvec3_17f03ce0)adjust:(tvec3_17f03ce0 *)arg1 by:(float)arg2;
- (void)setScale:(tvec3_17f03ce0 *)arg1;
- (tvec2_01ee4891)canImprove;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartResizerHelper : NSObject
{
    TSCHChartInfo *mChartInfo;
    tvec2_3b141483 mContainingViewport;
    tvec2_3b141483 mOriginalContainingViewport;
    TSCH3DChartBoundsLayout *mBoundsLayout;
    CDStruct_9aa9521f mLayoutSettings;
}

+ (id)helperWithInfo:(id)arg1;
+ (id)vectorForContainingViewport:(const tvec2_3b141483 *)arg1;
+ (tvec2_3b141483)containingViewportForVector:(id)arg1;
@property(nonatomic) CDStruct_9aa9521f layoutSettings; // @synthesize layoutSettings=mLayoutSettings;
@property(readonly, nonatomic) tvec2_3b141483 originalContainingViewport; // @synthesize originalContainingViewport=mOriginalContainingViewport;
@property(nonatomic) tvec2_3b141483 containingViewport; // @synthesize containingViewport=mContainingViewport;
@property(readonly, nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mChartInfo;
- (id).cxx_construct;
- (void)invalidateLabelsBoundsForSceneObjectClass:(Class)arg1 boundsIndex:(long long)arg2;
- (void)invalidateBounds;
- (tvec2_84d5962d)layoutSizeByResizingScene:(id)arg1 toChartBodyLayoutSize:(const tvec2_84d5962d *)arg2 resizeStartingSize:(tvec2_84d5962d *)arg3 returningChartBodyLayoutBoundsInChartAreaLayoutSpace:(box_80622335 *)arg4;
- (tvec2_84d5962d)chartBodySizeByResizingScene:(id)arg1 toLayoutSize:(const tvec2_84d5962d *)arg2 resizeStartingSize:(tvec2_84d5962d *)arg3 returningChartBodyLayoutOffsetInChartAreaLayoutSpace:(tvec2_84d5962d *)arg4 resultLayoutSize:(tvec2_84d5962d *)arg5;
- (tvec2_84d5962d)chartBodyLayoutOffsetInChartAreaLayoutSpaceUsingConverter:(const struct ChartProjectedBoundsConverter *)arg1;
- (id)boundsLayoutResizedForScene:(id)arg1 bounds:(const box_80622335 *)arg2 resizeStartingSize:(tvec2_84d5962d *)arg3 mode:(int)arg4 returningResultSize:(tvec2_84d5962d *)arg5;
- (id)boundsLayoutForScene:(id)arg1 mode:(int)arg2;
@property(readonly, nonatomic) TSCH3DVector *containingViewportVector;
- (void)initializeOriginalContainingViewport;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetBoundsProjector : NSObject
{
    tmat4x4_3074befe mModelView;
    tmat4x4_3074befe mConstantDepthModelView;
    tmat4x4_3074befe mProjection;
    tmat4x4_3074befe mMVP;
    TSCH3DCamera *mCamera;
    struct ChartScenePropertyAccessor *mAccessor;
    _Bool mUseAggressiveBackProjection;
}

- (id).cxx_construct;
- (box_a3bd9649)projectBounds:(const box_a3bd9649 *)arg1 type:(int)arg2;
- (tvec3_17f03ce0)backProjectModelViewPoint:(const tvec3_17f03ce0 *)arg1;
- (void)resetTransformsForRenderBounds;
- (void)resetTransformsForLayoutBounds;
- (void)setCamera:(id)arg1 accessor:(struct ChartScenePropertyAccessor *)arg2;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGetProjectedBoundsPipeline : TSCH3DGetBoundsPipeline
{
    box_80622335 mLayoutInPage;
    box_80622335 mBodyLayoutInPage;
    box_80622335 mContainingViewport;
    struct ChartProjectedBoundsSpaces mSpaces;
    TSCH3DCamera *mOriginalCamera;
    struct ChartScenePropertyAccessor *mOriginalSceneAccessor;
    box_a3bd9649 mShadowsLayoutBounds;
    box_a3bd9649 mLayoutBounds;
    box_a3bd9649 mConstantDepthBodyLayoutBounds;
    box_a3bd9649 mBodyLayoutBounds;
    box_a3bd9649 mLabelsLayoutBounds;
    box_a3bd9649 mChartBounds;
    box_a3bd9649 mOrientBounds;
    box_a3bd9649 mDrawingBounds;
    box_a3bd9649 mLabelsBounds;
    _Bool mEnableScaledDepth;
    int mLabelsMode;
}

@property(nonatomic) int labelsMode; // @synthesize labelsMode=mLabelsMode;
@property(nonatomic) _Bool enableScaledDepth; // @synthesize enableScaledDepth=mEnableScaledDepth;
@property(nonatomic) box_80622335 containingViewport; // @synthesize containingViewport=mContainingViewport;
@property(nonatomic) box_80622335 bodyLayoutInPage; // @synthesize bodyLayoutInPage=mBodyLayoutInPage;
@property(nonatomic) box_80622335 layoutInPage; // @synthesize layoutInPage=mLayoutInPage;
- (id).cxx_construct;
@property(readonly, nonatomic) const struct ChartProjectedBoundsSpaces *spaces;
- (_Bool)run;
- (void)updateBounds;
- (box_a3bd9649)p_extendLabelsBoundsToBounds:(const box_a3bd9649 *)arg1;
- (void)updateLayoutBoundsIfNecessary;
- (void)updateRenderBounds;
- (void)calculateBoundsIfNecessary;
- (void)calculateLabelsBoundsIfNecssary;
- (void)calculateBounds;
- (void)calculateLabelsBounds;
- (void)updateLayoutBounds;
- (void)calculateLayoutLabelsBounds;
- (void)calculateLayoutBounds;
- (void)calculateLayoutBoundsSkippingLayoutSceneBounds:(_Bool)arg1;
- (int)p_depthBoundsTypes;
- (id)drawingBoundsSceneObjectClasses;
- (id)labelsSceneObjectClasses;
- (id)chartSceneObjectClasses;
- (box_a3bd9649)getBoundsFromObjectBoundsForScene:(id)arg1 boundsType:(int)arg2;
- (id)updatedConstantDepthSceneFromScene:(id)arg1;
- (box_a3bd9649)boundsFromObjectBoundsOfType:(int)arg1;
- (_Bool)p_updatesLabelsOnly;
- (_Bool)p_excludesLabels;
- (void)dealloc;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCacheableGetProjectedBoundsPipeline : TSCH3DChartGetProjectedBoundsPipeline
{
    _Bool mUseIndividualBounds;
    _Bool mLayoutBoundsValid;
    box_a3bd9649 mShadowsLayout3DBounds;
    box_a3bd9649 mLayout3DBounds;
    box_a3bd9649 mBodyLayout3DBounds;
    box_a3bd9649 mConstantDepthBodyLayout3DBounds;
    TSCH3DGetBoundsProjector *mProjector;
}

+ (_Bool)includesDepthForUnitScaleForScene:(id)arg1;
+ (void)setIncludesDepthForUnitScale:(_Bool)arg1 forScene:(id)arg2;
@property(nonatomic) _Bool useIndividualBounds; // @synthesize useIndividualBounds=mUseIndividualBounds;
- (id).cxx_construct;
- (void)updateBounds;
- (void)updateRenderBounds;
- (void)calculateBounds;
- (void)updateLayoutBounds;
- (void)calculateLayoutLabelsBounds;
- (void)calculateLayoutBounds;
- (id)updatedConstantDepthSceneFromScene:(id)arg1;
- (box_a3bd9649)boundsFromObjectBoundsOfType:(int)arg1;
- (void)invalidateCachedBounds;
- (void)dealloc;
- (id)initWithScene:(id)arg1;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneAreaLayoutItem : TSCHChartAbstractAreaLayoutItem
{
    struct CGRect mChartBodyLayoutRect;
    TSCH3DChartResizerHelper *mResizerHelper;
    TSCH3DScene *mScene;
    tvec2_84d5962d mChartBodyLayoutOffsetInChartAreaLayoutSpace;
    _Bool mIsInvariant;
    _Bool mIsInvalidated;
    tvec4_ac57c72d mInitialInfoChartScale;
}

+ (id)worldBoundsDescriptionForScene:(id)arg1;
@property(nonatomic) _Bool isInvariant; // @synthesize isInvariant=mIsInvariant;
@property(nonatomic) struct CGRect chartBodyLayoutRect; // @synthesize chartBodyLayoutRect=mChartBodyLayoutRect;
- (id).cxx_construct;
- (void)setChartBodyLayoutSize:(struct CGSize)arg1;
- (void)setLayoutOffset:(struct CGPoint)arg1;
- (void)setStabilizedChartBodyLayoutRectUsingConverter:(const struct ChartProjectedBoundsConverter *)arg1;
- (void)p_layoutOutward;
- (id)p_cacheOutwardLayout;
- (_Bool)p_outwardLayoutCanUseCacheItem:(id)arg1;
- (void)p_layoutInward;
- (id)p_cacheInwardLayout;
- (_Bool)p_needsRefinementForInwardLayout;
- (_Bool)p_inwardLayoutCanUseCacheItem:(id)arg1;
- (_Bool)p_validCacheItem:(id)arg1 inward:(_Bool)arg2;
- (tvec2_3b141483)p_currentModelSize;
- (id)p_cache;
- (void)p_updateFromCacheItem:(id)arg1;
- (void)p_updateLayoutSize:(struct CGSize)arg1 chartBodyLayoutOffsetInChartAreaLayoutSpace:(const tvec2_84d5962d *)arg2;
- (void)p_updateBodyLayoutRect;
- (struct CGRect)p_frameForSelectionPath:(id)arg1 sceneObjectClass:(Class)arg2;
- (struct CGRect)titleFrame;
- (struct CGRect)calcDrawingRect;
- (id)debug_rotationBounds;
- (void)invalidateLabelsBoundsForSceneObjectClass:(Class)arg1 boundsIndex:(long long)arg2;
- (void)invalidateBounds;
- (const struct ChartProjectedBoundsSpaces *)projectedBoundsWithScene:(id)arg1 forcesAccurateBounds:(_Bool)arg2 allowsEmptyBodyLayoutBounds:(_Bool)arg3;
@property(readonly, nonatomic) const struct ChartProjectedBoundsSpaces *projectedBounds;
- (id)boundsLayout;
- (id)boundsLayout:(struct CGRect)arg1 scene:(id)arg2 forcesAccurateBounds:(_Bool)arg3 allowsEmptyBodyLayoutBounds:(_Bool)arg4;
- (id)p_updatedResizerHelperForcingAccurateBounds:(_Bool)arg1;
- (id)p_updatedResizerHelper;
@property(readonly, nonatomic) TSCH3DVector *containingViewportVector;
@property(readonly, nonatomic) tvec2_3b141483 containingViewport;
- (id)renderersWithRep:(id)arg1;
- (void)clearAll;
- (void)clearScene;
@property(readonly, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
- (void)p_validate;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneAreaLayoutItemCache : NSObject
{
    struct TSCH3DChartSceneAreaLayoutItemCacheValues mValues;
    TSCH3DVector *_containingViewportVector;
}

+ (id)cacheWithCacheValues:(const struct TSCH3DChartSceneAreaLayoutItemCacheValues *)arg1;
+ (id)cacheWithInfoChartScale:(const tvec3_17f03ce0 *)arg1 containingViewport:(const tvec2_3b141483 *)arg2 chartBodyLayoutOffsetInChartAreaLayoutSpace:(const tvec2_84d5962d *)arg3 layoutSize:(struct CGSize)arg4 requestLayoutSize:(struct CGSize)arg5 chartBodyLayoutSize:(struct CGSize)arg6 requestChartBodyLayoutSize:(struct CGSize)arg7 layoutSettings:(CDStruct_9aa9521f)arg8;
@property(readonly, nonatomic) TSCH3DVector *containingViewportVector; // @synthesize containingViewportVector=_containingViewportVector;
- (id).cxx_construct;
@property(readonly, nonatomic) CDStruct_9aa9521f layoutSettings;
@property(readonly, nonatomic) tvec2_3b141483 modelSize;
@property(readonly, nonatomic) _Bool forcedValid;
@property(readonly, nonatomic) struct CGSize requestChartBodyLayoutSize;
@property(readonly, nonatomic) struct CGSize chartBodyLayoutSize;
@property(readonly, nonatomic) struct CGSize requestLayoutSize;
@property(readonly, nonatomic) struct CGSize layoutSize;
@property(readonly, nonatomic) tvec2_84d5962d chartBodyLayoutOffsetInChartAreaLayoutSpace;
@property(readonly, nonatomic) tvec2_3b141483 containingViewport;
@property(readonly, nonatomic) tvec4_ac57c72d infoChartScale;
- (void)printDebug;
- (const struct TSCH3DChartSceneAreaLayoutItemCacheValues *)values;
- (id)initWithCacheValues:(const struct TSCH3DChartSceneAreaLayoutItemCacheValues *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLayoutSceneSettingsUpgrader : TSCH3DAbstractLimitingSeriesUpgrader
{
    TSCH3DChartLayout *mChartLayout;
    _Bool mIsMutatedForSceneSettings;
    NSValue *mInfoGeometryOffset;
    _Bool hasConstantDepth;
}

@property(nonatomic) _Bool hasConstantDepth; // @synthesize hasConstantDepth;
- (void)upgrade;
- (void)updateInfoGeometryIfNecessary;
- (void)mutateInfoWithContainingViewport:(id)arg1 scene:(id)arg2;
- (id)containingViewportByResizingScene:(id)arg1 toResizingFrame:(struct CGRect)arg2;
- (struct CGRect)oldResizingFrame;
- (id)sceneResetWithLayoutSettings:(CDStruct_9aa9521f)arg1;
- (CDStruct_9aa9521f)oldLayoutSettings;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartLayout : TSCH2DChartLayout
{
}

+ (id)propertiesThatInvalidateLayout;
+ (id)p_propertiesThatInvalidateShadows;
+ (id)p_allScaleProperties;
+ (id)p_propertiesThatResetSeriesStorage;
+ (id)p_propertiesThatResetSceneProperties;
+ (void)upgradeSceneDepthSettingsForChartInfo:(id)arg1 hasConstantDepth:(_Bool)arg2 willModifyBlock:(CDUnknownBlockType)arg3;
- (void)setSeriesIndexedPieWedgeExplosions:(id)arg1;
- (void)modelInvalidated:(id)arg1;
- (void)processChanges:(id)arg1;
- (void)p_resetSeriesStorage;
- (void)p_resetSceneProperties;
@property(readonly, nonatomic) TSCH3DScene *scene;
@property(readonly, nonatomic) const struct ChartProjectedBoundsSpaces *projectedBounds;
- (id)infoChartScale;
- (id)containingViewportVector;
@property(readonly, nonatomic) _Bool hasProjectedBounds;
@property(readonly, nonatomic) TSCH3DChartSceneAreaLayoutItem *areaItem;
- (void)layoutForResizingSize:(struct CGSize)arg1;
- (struct CGRect)boundsForResize;
- (void)p_ensureValidForInwardLayout;
- (void)setLayoutSettings:(CDStruct_9aa9521f)arg1;
- (_Bool)p_shouldClearSceneForLayoutSettings:(CDStruct_9aa9521f)arg1;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCALayer : CALayer <TSCH3DGLLayer>
{
    TSCH3DLayerCacheLogic *mCacheLogic;
}

- (id)layerFBOResource;
- (Class)layerDelegateClass;
- (void)presentLayerWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setContentsScale:(double)arg1;
- (double)contentsScale;
- (void)willDestroyFramebuffer:(id)arg1 session:(id)arg2;
- (id)framebufferFromContext:(id)arg1 attributes:(const struct FramebufferAttributes *)arg2;
- (id)cacheLogic;
- (void)dealloc;
- (id)initWithLayerCacheLogicClass:(Class)arg1;
- (id)sharedFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DInteractiveCanvasCALayer : TSCH3DCALayer
{
    TSCH3DFBOResource *mLayerFBOResource;
}

- (Class)layerDelegateClass;
- (void)presentLayerWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (id)layerFBOResource;
- (void)willDestroyFramebuffer:(id)arg1 session:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DContext : NSObject <NSCopying>
{
    struct FramebufferAttributes mCurrentFramebufferAttributes;
}

- (id).cxx_construct;
- (void)setCurrentFramebufferAttributes:(const struct FramebufferAttributes *)arg1;
- (const struct FramebufferAttributes *)currentFramebufferAttributes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebuffer : NSObject
{
    struct FramebufferAttributes mFramebufferAttributes;
}

+ (id)framebufferWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1;
- (id).cxx_construct;
- (const struct FramebufferAttributes *)framebufferAttributes;
- (id)initWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSession : NSObject
{
    _Bool mInteractiveCanvas;
    unsigned long long mFailures;
    TSCH3DGLContext *mContext;
    TSCH3DResourceCache *mCache;
    TSCH3DGLSharegroup *mSharegroup;
    NSMutableSet *mActiveResourceSet;
    NSMutableSet *mAllResourceSet;
    NSCountedSet *mScopeProtectedResourceSet;
    int mVirtualScreen;
    TSCH3DDocumentDataCache *mDataCache;
}

@property(readonly, nonatomic) TSCH3DDocumentDataCache *dataCache; // @synthesize dataCache=mDataCache;
- (void)p_unlock;
- (void)p_lock;
@property(nonatomic) int performance;
@property(nonatomic) int virtualScreen;
- (void)setIfIsMoreDemandingPerformance:(int)arg1;
- (void)endFrameWithSharegroupDelegate:(id)arg1;
- (void)beginFrameWithSharegroupDelegate:(id)arg1;
- (id)shaderForObjectState:(const struct ObjectState *)arg1 version:(id)arg2 initializeProgramBlock:(CDUnknownBlockType)arg3;
- (void)forceFlushResources:(id)arg1;
- (void)flushResources:(id)arg1;
- (void)flushTrackedResources;
- (void)resetTrackingToActiveResources;
- (void)flushMemoryForResources:(id)arg1;
- (_Bool)isProtectedResource:(id)arg1;
- (void)unprotectResource:(id)arg1 clearOnFailProtection:(_Bool)arg2;
- (void)protectResource:(id)arg1 unprotectOnFail:(_Bool)arg2;
- (_Bool)hasEnoughFreeMemoryOfBytes:(unsigned long long)arg1;
- (void)garbageCollectAllUnretainedResources;
- (void)flushResourcesIfNecessary;
- (void)trackResourcesInBlock:(CDUnknownBlockType)arg1;
- (struct SessionLoadResourceResult)loadResource:(id)arg1 reload:(_Bool)arg2 withLoader:(id)arg3 config:(void *)arg4;
- (void)addActiveResource:(id)arg1;
- (id)handleOfResource:(id)arg1 loader:(id)arg2;
- (void)p_setContext:(id)arg1;
@property(readonly, nonatomic) TSCH3DGLContext *context;
- (id)p_contextOrNil;
@property(readonly, nonatomic) _Bool mustRunOnMainThread;
@property(readonly, nonatomic) _Bool isOneShot;
@property(readonly, nonatomic) _Bool hasFailed;
- (void)resetFailures;
- (void)setFailed;
@property(readonly, nonatomic) TSCH3DGLContext *sharegroupContext;
- (void)dealloc;
- (id)initWithSharegroupToken:(id)arg1 dataCache:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DState : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrefilteredLineSetting : NSObject
{
    _Bool mDisableColorOutput;
    _Bool mCullBackfaces;
    _Bool mUseNormals;
    tvec4_ac57c72d mFilterRadius;
    float mLineWidth;
    tvec4_ac57c72d mStrokeColor;
    TSDStroke *mStroke;
}

+ (id)setting;
@property(copy, nonatomic) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(nonatomic) tvec4_ac57c72d strokeColor; // @synthesize strokeColor=mStrokeColor;
@property(nonatomic) float lineWidth; // @synthesize lineWidth=mLineWidth;
@property(nonatomic) tvec4_ac57c72d filterRadius; // @synthesize filterRadius=mFilterRadius;
@property(nonatomic) _Bool cullBackfaces; // @synthesize cullBackfaces=mCullBackfaces;
@property(nonatomic) _Bool disableColorOutput; // @synthesize disableColorOutput=mDisableColorOutput;
@property(nonatomic) _Bool useNormals; // @synthesize useNormals=mUseNormals;
- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrefilteredLineRendererRenderCacheObject : TSCH3DSceneRenderCacheObject
{
    TSCH3DStrokePatternTexture *mStrokeTexture;
    _Bool mDidRenderOnce;
}

@property(nonatomic) _Bool didRenderOnce; // @synthesize didRenderOnce=mDidRenderOnce;
- (void)renderWithLineRenderer:(id)arg1 setting:(id)arg2 fromVertex:(const struct PrefilteredLineVertexProperties *)arg3 toVertex:(const struct PrefilteredLineVertexProperties *)arg4;
- (void)submitResourcesWithLineRenderer:(id)arg1 setting:(id)arg2;
- (id)p_diffuseTexcoords;
- (id)p_normals;
- (id)p_originalGeometry;
- (id)p_box;
- (id)p_texcoords;
- (id)p_geometry;
- (void)allocateDynamicResourcesIntoArray:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrefilteredLineRenderer : NSObject
{
    tmat4x4_3074befe mModelMatrix;
    tmat3x3_b39cd897 mNormalMatrix;
    tmat4x4_3074befe mProjection;
    tmat4x4_3074befe mNormalizedProjection;
    box_0260e9b3 mViewport;
    TSCH3DOrderedDictionary *mCacheObjects;
    TSCH3DSceneRenderPipeline *mPipeline;
}

+ (id)renderer;
+ (id)renderCacheKey;
@property(readonly, nonatomic) TSCH3DSceneRenderPipeline *pipeline; // @synthesize pipeline=mPipeline;
@property(readonly, nonatomic) box_0260e9b3 viewport; // @synthesize viewport=mViewport;
@property(readonly, nonatomic) tmat4x4_3074befe normalizedProjection; // @synthesize normalizedProjection=mNormalizedProjection;
@property(readonly, nonatomic) tmat4x4_3074befe projection; // @synthesize projection=mProjection;
@property(readonly, nonatomic) tmat3x3_b39cd897 normalMatrix; // @synthesize normalMatrix=mNormalMatrix;
@property(readonly, nonatomic) tmat4x4_3074befe modelMatrix; // @synthesize modelMatrix=mModelMatrix;
- (id).cxx_construct;
- (void)renderLineBufferWithSetting:(id)arg1 vertices:(id)arg2 normals:(id)arg3 diffuseTexcoords:(id)arg4;
- (void)renderWithSetting:(id)arg1 fromVertex:(const struct PrefilteredLineVertexProperties *)arg2 toVertex:(const struct PrefilteredLineVertexProperties *)arg3;
- (_Bool)p_shouldRenderWithSetting:(id)arg1 returningCacheObject:(id *)arg2;
- (void)endWithDidGenerateShaderEffectsBlock:(CDUnknownBlockType)arg1;
- (void)p_setupShaderEffectsForSetting:(id)arg1;
- (_Bool)beginWithPipeline:(id)arg1;
- (id)p_renderCacheIDFromSetting:(id)arg1;
- (id)p_renderCacheKey;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrefilteredLineShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variablePrefilterOriginalVertex;
+ (id)variablePrefilterLineColor;
+ (id)variablePrefilterBoxTextureCoordinate;
+ (id)variablePrefilterBoxTexture;
+ (id)variablePrefilterBox;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variablePrefilterOriginalVertex;
- (id)variablePrefilterLineColor;
- (id)variablePrefilterBoxTextureCoordinate;
- (id)variablePrefilterBoxTexture;
- (id)variablePrefilterBox;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrefilteredLineOutputColorShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variablePrefilterStrokeColor;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variablePrefilterStrokeColor;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DStrokePatternShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variableStrokeTexture;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableStrokeTexture;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGaussTexture : TSCH3DResource
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)texture;
+ (id)_singletonAlloc;
- (id)get;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DBoxTexture : TSCH3DResource
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)texture;
+ (id)_singletonAlloc;
- (id)get;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DStrokePatternTexture : TSCH3DResource
{
    TSDStroke *mStroke;
}

@property(readonly, nonatomic) TSDStroke *stroke; // @synthesize stroke=mStroke;
- (id)get;
- (void)dealloc;
- (id)initWithStroke:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsMeshRenderer : TSCH3DSceneRenderCacheObject
{
}

+ (id)renderer;
- (void)submitResourcesWithProcessor:(id)arg1;
- (void)beginResources:(id)arg1 samples:(float)arg2;
- (void)allocateDynamicResourcesIntoArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabels2DQuadMeshRenderer : TSCH3DLabelsMeshRenderer
{
}

- (void)renderWithMeshRenderLabelInfo:(const struct LabelsMeshRendererLabelInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsReprojectionMeshRenderer : TSCH3DLabelsMeshRenderer
{
}

- (void)renderWithMeshRenderLabelInfo:(const struct LabelsMeshRendererLabelInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsAtlasMeshRenderer : TSCH3DLabelsMeshRenderer
{
    TSCH3DTextureAtlas *mAtlas;
    TSUNoCopyDictionary *mExternalAttributeVariables;
}

- (void)renderWithMeshRenderLabelInfo:(const struct LabelsMeshRendererLabelInfo *)arg1;
- (void)flushCache;
- (void)submitResourcesWithProcessor:(id)arg1;
- (void)p_submitExternalAttributesForIndex:(unsigned long long)arg1 processor:(id)arg2;
- (id)p_resourceForExternalLabelAttribute:(const struct ExternalLabelAttribute *)arg1 index:(unsigned long long)arg2 createIfAbsent:(_Bool)arg3;
- (unsigned long long)p_indexForExternalAttribute:(const struct ExternalLabelAttribute *)arg1;
- (id)p_texcoordResourceAtIndex:(unsigned long long)arg1 createIfAbsent:(_Bool)arg2;
- (id)p_vertexResourceAtIndex:(unsigned long long)arg1 createIfAbsent:(_Bool)arg2;
- (unsigned long long)p_resourceCount;
- (id)p_resourceAtIndex:(unsigned long long)arg1 childIndex:(unsigned long long)arg2 dimension:(unsigned long long)arg3 createIfAbsent:(_Bool)arg4;
- (void)beginResources:(id)arg1 samples:(float)arg2;
- (void)allocateDynamicResourcesIntoArray:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsRayPickMeshRenderer : TSCH3DLabelsMeshRenderer
{
}

- (void)renderWithMeshRenderLabelInfo:(const struct LabelsMeshRendererLabelInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsRenderer : NSObject
{
    TSCH3DResource *mLabelQuad;
    _Bool mUseLabelBounds;
    TSCH3DLabelResource *mLabel;
    TSCH3DLabelResources *mResources;
    TSCH3DSceneRenderPipeline *mPipeline;
    TSCH3DCamera *mLabelCamera;
    struct LabelRenderInfo mInfo;
    TSCH3DDataBufferResource *mMesh;
    TSCH3DLabelsMeshRenderer *mMeshRenderer;
    TSCH3DLabelsRendererTransforms *mTransforms;
}

+ (id)renderer;
+ (id)renderCacheKey;
@property(readonly, nonatomic) TSCH3DCamera *labelCamera; // @synthesize labelCamera=mLabelCamera;
@property(retain, nonatomic) TSCH3DDataBufferResource *mesh; // @synthesize mesh=mMesh;
@property(readonly, nonatomic) struct LabelRenderInfo renderInfo; // @synthesize renderInfo=mInfo;
@property(retain, nonatomic) TSCH3DLabelsMeshRenderer *meshRenderer; // @synthesize meshRenderer=mMeshRenderer;
@property(retain, nonatomic) TSCH3DSceneRenderPipeline *pipeline; // @synthesize pipeline=mPipeline;
@property(retain, nonatomic) TSCH3DLabelResources *resources; // @synthesize resources=mResources;
@property(retain, nonatomic) TSCH3DLabelResource *label; // @synthesize label=mLabel;
@property(nonatomic) _Bool useLabelBounds; // @synthesize useLabelBounds=mUseLabelBounds;
- (id).cxx_construct;
- (void)delegateDidSubmitLabel;
- (void)renderAtPosition:(const tvec3_17f03ce0 *)arg1 offset:(const tvec3_17f03ce0 *)arg2 alignment:(unsigned int)arg3 offset2D:(const tvec2_84d5962d *)arg4 rotation:(float)arg5 externalAttribute:(const struct ExternalLabelAttribute *)arg6;
- (void)prepareCachedIndex:(const tvec2_3b141483 *)arg1 string:(id)arg2 alignmentPadding:(const tvec2_84d5962d *)arg3 width:(double)arg4 bitmapContextInfo:(id)arg5;
- (void)endResources;
- (_Bool)beginResources:(id)arg1 expectedSize:(tvec2_3b141483 *)arg2;
- (void)postrender:(id)arg1;
- (void)prerender:(id)arg1;
- (id)labelQuad;
- (id)effects;
- (_Bool)isCacheValid;
- (_Bool)hasCachedLabels;
- (_Bool)cacheEnabled;
- (id)p_renderCacheFromScene:(id)arg1 created:(_Bool *)arg2 createIfAbsent:(_Bool)arg3;
- (id)p_renderCacheID;
- (id)p_renderCacheKey;
- (const tmat4x4_3074befe *)unitToWorld;
- (const tmat4x4_3074befe *)worldToStage;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderSetup : TSCH3DSceneRenderSetup
{
    float mScale;
    tvec2_84d5962d mOffsetFromLayerRelativeToBodyCanvas;
    struct ChartProjectedBoundsSpaces mSpaces;
}

+ (id)setup;
@property(nonatomic) tvec2_84d5962d offsetFromLayerRelativeToBodyCanvas; // @synthesize offsetFromLayerRelativeToBodyCanvas=mOffsetFromLayerRelativeToBodyCanvas;
@property(nonatomic) struct ChartProjectedBoundsSpaces spaces; // @synthesize spaces=mSpaces;
@property(nonatomic) float scale; // @synthesize scale=mScale;
- (id).cxx_construct;
- (id)renderingCameraFromOriginalCamera:(id)arg1 pipeline:(id)arg2;
- (void)setPixelAlignmentLayer:(id)arg1;
- (void)setVisibleBoundsInLayerRelativeSpace:(struct CGRect)arg1;
- (id)realignCamera:(id)arg1 toGlobalPixelAlignedBodyCanvasBounds:(const box_80622335 *)arg2 renderingBodyCanvasBounds:(const box_80622335 *)arg3 scale:(float)arg4 samples:(float)arg5 correspondingNoramlizedBounds:(const box_80622335 *)arg6;
- (struct ChartProjectedBoundsConverter)converter;
- (void)setupPipeline:(id)arg1 fromCamera:(id)arg2;
- (_Bool)setupLayerFromLayerProvider:(id)arg1 canvas:(id)arg2 visible:(struct CGRect)arg3 pixelAlignmentLayer:(id)arg4;
- (void)copyFromChartRenderSetup:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderTightSizeSetup : TSCH3DChartLayerBasedSceneRenderSetup
{
}

- (void)updateFramebufferBounds:(struct FramebufferBounds *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderTiledTightSizeSetup : TSCH3DChartSceneRenderTightSizeSetup
{
}

- (struct CGRect)visibleBoundsInLayerRelativeSpace;
- (unsigned long long)tileSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderFullSizeSetup : TSCH3DChartLayerBasedSceneRenderSetup
{
    struct CGSize mMinimumSize;
}

@property(nonatomic) struct CGSize minimumSize; // @synthesize minimumSize=mMinimumSize;
- (id).cxx_construct;
- (void)updateFramebufferBounds:(struct FramebufferBounds *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderTiledFullSizeSetup : TSCH3DChartSceneRenderFullSizeSetup
{
}

- (void)updateFramebufferBounds:(struct FramebufferBounds *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRender3DBuildSetup : TSCH3DChartLayerBasedSceneRenderSetup
{
    struct CGRect mAnimationBounds;
    tvec2_84d5962d mBuildOffsetFromLayerRelativeToBodyCanvas;
}

@property(nonatomic) struct CGRect animationBounds; // @synthesize animationBounds=mAnimationBounds;
- (id).cxx_construct;
- (void)updateFramebufferBounds:(struct FramebufferBounds *)arg1;
- (box_80622335)globalPixelAlignedBodyCanvasBoundsForRenderingCamera;
- (void)setOffsetFromLayerRelativeToBodyCanvas:(tvec2_84d5962d)arg1;
- (box_80622335)layerFrameInLayerRelativeSpaceFromFramebufferBounds:(const struct FramebufferBounds *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderBuildImageSetup : TSCH3DChartSceneRenderSetup
{
    box_80622335 mBodyCanvasClippingBounds;
}

@property(nonatomic) box_80622335 bodyCanvasClippingBounds; // @synthesize bodyCanvasClippingBounds=mBodyCanvasClippingBounds;
- (id).cxx_construct;
- (id)renderingCameraFromOriginalCamera:(id)arg1 pipeline:(id)arg2;
@property(readonly, nonatomic) box_80622335 imageBodyCanvasBounds;
- (box_80622335)p_clippedBodyCanvasBounds;
- (box_80622335)p_intersectBodyCanvasBounds;
- (box_80622335)p_visibleCanvansClippedBodyCanvasBounds;
- (box_80622335)p_maxDimensionClippedBodyCanvasBounds;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartGLLayerRenderPresenter : TSCH3DChartRenderPresenter
{
}

- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (_Bool)shouldRenderLegendIntoSeparateLayer;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCacheableGLLayerRenderPresenter : TSCH3DChartGLLayerRenderPresenter
{
}

- (Class)layerCacheLogicClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCGRenderPresenter : TSCH3DChartRenderPresenter
{
}

- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (Class)layerCacheLogicClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCALayerImageContentRenderPresenter : TSCH3DChartRenderPresenter
{
}

- (Class)layerCacheLogicClass;
- (Class)layerClass;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)cleanupLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartInteractiveCanvasCALayerImageContentRenderPresenter : TSCH3DChartCALayerImageContentRenderPresenter
{
}

- (Class)layerClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRenderPresenter : NSObject
{
}

+ (id)presenter;
- (Class)layerCacheLogicClass;
- (Class)layerClass;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (id)TSUImageFromPresenterInfo:(const struct PresenterInfo *)arg1 flipped:(_Bool)arg2;
- (_Bool)bindColorbufferForPipeline:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRenderCycle : NSObject
{
    _Bool mHasFramebuffer;
    TSCH3DSceneRenderPipeline *mPipeline;
    TSCH3DChartRenderPresenter *mPresenter;
    TSCH3DChartRenderPresenter *mRenderPresenterToRestore;
}

+ (id)renderCycleWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;
@property(readonly, nonatomic) _Bool hasFramebuffer; // @synthesize hasFramebuffer=mHasFramebuffer;
@property(readonly, nonatomic) TSCH3DChartRenderPresenter *presenter; // @synthesize presenter=mPresenter;
@property(readonly, nonatomic) TSCH3DSceneRenderPipeline *pipeline; // @synthesize pipeline=mPipeline;
- (void)setVisibleBoundsInLayerRelativeSpace:(struct CGRect)arg1;
- (Class)layerCacheLogicClass;
- (Class)layerClass;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (void)restoreDefaultRenderPresenter;
- (void)switchToRenderPresenter:(id)arg1;
- (void)endInteractiveMode;
- (void)beginInteractiveModeWithMinimumBufferSize:(struct CGSize)arg1;
- (_Bool)runPipeline:(id)arg1;
- (void)setupOptionalTextureSizeHintUsingCanvasChartBodyBoundsWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)allocateLayerBasedFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)setupLayerFromLayerProvider:(id)arg1 canvas:(id)arg2 visible:(struct CGRect)arg3 pixelAlignmentLayer:(id)arg4;
- (void)cleanupRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (_Bool)shouldDiscardRenderbuffers;
- (void)layoutWithBoundsSpaces:(const struct ChartProjectedBoundsSpaces *)arg1 scale:(float)arg2 offsetFromLayerRelativeToBodyCanvas:(struct CGPoint)arg3;
- (void)destroyFramebuffer;
- (_Bool)usesMultipassRendering;
- (unsigned long long)multisamples;
- (void)p_setRenderPresenter:(id)arg1;
@property(readonly, nonatomic) TSCH3DGLFramebuffer *framebuffer;
- (id)setup;
@property(readonly, nonatomic) CALayer<TSCH3DGLLayer> *layer;
- (void)copyFromChartRenderCycle:(id)arg1;
- (void)dealloc;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCanvasRenderCycle : TSCH3DChartRenderCycle
{
    _Bool mInteractiveMode;
}

- (Class)noninteractiveSetupClass;
- (Class)noninteractivePresenterClass;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)usesMultipassRendering;
- (void)endInteractiveMode;
- (void)beginInteractiveModeWithMinimumBufferSize:(struct CGSize)arg1;
- (void)switchToChartRenderSetupClass:(Class)arg1;
- (unsigned long long)multisamples;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderBackgroundThreadTiledSizeSetup : TSCH3DChartSceneRenderTiledTightSizeSetup
{
}

- (unsigned long long)tileSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBackgroundThreadCanvasRenderCycle : TSCH3DChartCanvasRenderCycle
{
}

- (Class)noninteractiveSetupClass;
- (Class)noninteracticePresenterClass;
- (_Bool)usesMultipassRendering;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartStaticCanvasRenderCycle : TSCH3DChartCGContextRenderCycle
{
}

+ (Class)sceneRenderSetupClass;
- (_Bool)antialiasing;
- (unsigned long long)tileSamples;
- (unsigned long long)tileSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartAntialiasedStaticCanvasRenderCycle : TSCH3DChartStaticCanvasRenderCycle
{
}

- (_Bool)antialiasing;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartThumbnailsAndInsertionIconsRenderCycle : TSCH3DChartAntialiasedStaticCanvasRenderCycle
{
}

- (void)setupTextureSizeHintForAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (unsigned long long)tileSamples;
- (unsigned long long)tileSize;
- (_Bool)antialiasing;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChart3DBuildGLLayerRenderPresenter : TSCH3DChartGLLayerRenderPresenter
{
}

- (Class)layerClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChart3DBuildRenderCycle : TSCH3DChartRenderCycle
{
}

- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (_Bool)shouldDiscardRenderbuffers;
- (unsigned long long)multisamples;
- (void)setAnimationBounds:(struct CGRect)arg1;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartBuildImageRenderCycle : TSCH3DChartRenderCycle
{
    _Bool mIsAntialiasing;
    _Bool mIsSingleImage;
    _Bool mFlipImages;
    _Bool mShouldConvertToLayerRelativeBounds;
    NSArray *mImages;
}

@property(readonly, nonatomic) NSArray *images; // @synthesize images=mImages;
@property(nonatomic) _Bool shouldConvertToLayerRelativeBounds; // @synthesize shouldConvertToLayerRelativeBounds=mShouldConvertToLayerRelativeBounds;
@property(nonatomic) _Bool flipImages; // @synthesize flipImages=mFlipImages;
@property(nonatomic) _Bool isSingleImage; // @synthesize isSingleImage=mIsSingleImage;
- (Class)layerCacheLogicClass;
- (Class)layerClass;
- (void)restoreDefaultRenderPresenter;
- (void)switchToRenderPresenter:(id)arg1;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (_Bool)runPipeline:(id)arg1;
- (id)tilePipeline;
- (void)p_setViewportSpaceImages:(id)arg1 samples:(float)arg2;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (void)p_setClippingRectFromVisibleBodyCanvasBounds:(const struct CGRect *)arg1;
- (void)p_allocateTileFramebuffer;
- (unsigned long long)p_tileSize;
- (box_80622335)imageBounds;
- (id)p_buildImageSetup;
@property(nonatomic) _Bool antialias;
- (void)p_setupPipelineWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3 antialiasing:(_Bool)arg4;
- (void)dealloc;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;
- (id)tileFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRenderer : TSCHRenderer
{
    _Bool mHasAnimationBounds;
    struct ChartProjectedBoundsSpaces mAnimationBounds;
    TSCH3DSelectionPath *mActive3DTextEditingPath;
    _Bool mCanRender;
    _Bool mResetTrackingOnNextRender;
}

@property(nonatomic) _Bool resetTrackingOnNextRender; // @synthesize resetTrackingOnNextRender=mResetTrackingOnNextRender;
- (id).cxx_construct;
- (struct CGRect)frameForEditingTextForSelectionPath:(id)arg1;
- (id)p_upgradeSelectionPathTo3D:(id)arg1;
- (void)textEditingDidEnd;
- (_Bool)canEditTextForSelectionPath:(id)arg1;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (struct CGAffineTransform)p_affineTransformForFrame:(struct CGRect)arg1 rotation:(double)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (id)p_sceneObjectFromSelectionPath:(id)arg1;
- (struct CGRect)p_frameForSelectionPath:(id)arg1 sceneObjectClass:(Class)arg2;
- (id)textIdentifierAtPoint:(struct CGPoint)arg1;
- (void)renderIntoContext:(struct CGContext *)arg1 bodyCanvasVisibleRect:(struct CGRect)arg2 scene:(id)arg3 GLContext:(id)arg4 needLayout:(_Bool)arg5;
- (void)renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)updateLayout;
- (id)p_renderPipelineWithUpdatedLayoutForScene:(id)arg1;
- (id)p_renderPipelineForScene:(id)arg1;
- (void)p_layoutForRenderPipeline:(id)arg1;
- (struct ChartProjectedBoundsConverter)p_boundsConverter;
- (void)clearCachedAnimationBounds;
- (void)cacheAnimationBoundsForScene:(id)arg1;
- (const struct ChartProjectedBoundsSpaces *)animationBounds;
- (void)p_debugLogConverter:(const struct ChartProjectedBoundsConverter *)arg1;
- (void)resetMultipassRendering;
- (void)multipassRenderingDidEnd;
- (_Bool)multipassRenderingIsDone;
- (void)processMultipassRendering;
- (_Bool)p_multipassCanRender;
- (_Bool)usesMultipassRendering;
- (void)presentFramebufferForPipeline:(id)arg1 CGContext:(struct CGContext *)arg2 highQuality:(_Bool)arg3 cleanupRendering:(_Bool)arg4;
- (_Bool)allocateFramebufferForBodyCanvasVisibleRect:(const struct CGRect *)arg1;
@property(retain, nonatomic) TSCH3DChartSceneAreaLayoutItem *sceneAreaLayoutItem;
- (int)chunkPlane;
- (id)p_state;
- (id)rep3D;
@property(readonly, nonatomic) _Bool canRender;
- (void)dealloc;
- (id)initWithChartRep:(id)arg1 layoutItem:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepRenderQueue : NSObject
{
    NSMutableArray *mQueue;
    long long mCurrentPass;
    long long mPauseLevel;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (void)resume;
- (void)pause;
- (void)cancelCallback;
- (void)requestCallbackWithDelay:(float)arg1;
- (void)renderUpdate:(id)arg1;
- (void)modelInvalidated:(id)arg1;
- (void)threadRemoveRep:(id)arg1;
- (void)removeRep:(id)arg1;
- (void)addRep:(id)arg1 front:(_Bool)arg2;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepAs2D : TSCHChartRep
{
    TSCHChartRep *m2DRep;
}

- (void)p_convert3DFillFromSeries:(id)arg1 toSeries:(id)arg2;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)p_update2DLayout;
- (void)p_create2DRep;
- (id)p_layoutFrom3DInfo:(id)arg1 layout3D:(id)arg2;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepFPSCounter : NSObject
{
    TSDFPSCounter *mCounter;
    NSMutableArray *mSummaries;
    unsigned long long mCurrentFrameCount;
}

- (void)dumpAllSummaries;
- (void)dumpSummary;
- (void)addFrame;
- (void)resetAll;
- (void)resetCounters;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepNotificationObserver : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)privateSharedInstance;
+ (id)_singletonAlloc;
- (void)p_presentationDidEnd;
- (void)p_presentationWillStart;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepAnimationTextureState : NSObject
{
    TSCH3DChartRep *mRep;
    TSCH3DScene *mScene;
    TSCH3DChartRepAnimationTextureSceneDelegate *mRenderIndexDelegate;
    TSCH3DChartRenderCycle *mRenderCycle;
}

- (id)description;
- (void)dealloc;
- (id)initWithRep:(id)arg1 scene:(id)arg2 finalTexture:(_Bool)arg3 renderCycle:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTexturedRectangle : TSDTexturedRectangle
{
}

- (void)setColorSpace:(struct CGColorSpace *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderBlockTexturedRectangle : TSCH3DTexturedRectangle
{
    TSCH3DChartRepAnimationTextureState *mAnimationTextureState;
}

- (void)teardown;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 animationTextureState:(id)arg3 renderBlock:(CDUnknownBlockType)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepCachedTexture : NSObject
{
    NSMutableArray *mTextures;
    TSDTexturedRectangle *mLegend;
    long long mEffectiveTextureStage;
    unsigned long long mDeliveryStyle;
    struct CGRect mTextureSetBoundingRect;
    struct CGRect mTextureBoundingRect;
    TSDTextureSet *mFinalTexture;
    TSDTextureSet *mVisibleTexture;
    _Bool mIsSingleImage;
    _Bool mIsTorndown;
}

+ (id)cachedTexture;
@property(nonatomic) _Bool isSingleImage; // @synthesize isSingleImage=mIsSingleImage;
@property(retain, nonatomic) TSDTexturedRectangle *legend; // @synthesize legend=mLegend;
@property(nonatomic) struct CGRect textureBoundingRect; // @synthesize textureBoundingRect=mTextureBoundingRect;
@property(nonatomic) struct CGRect textureSetBoundingRect; // @synthesize textureSetBoundingRect=mTextureSetBoundingRect;
@property(nonatomic) unsigned long long deliveryStyle; // @synthesize deliveryStyle=mDeliveryStyle;
@property(nonatomic) long long effectiveTextureStage; // @synthesize effectiveTextureStage=mEffectiveTextureStage;
- (id).cxx_construct;
- (id)textureForFinalElements:(_Bool)arg1;
- (id)p_assembleTextureSetForFinalElements:(_Bool)arg1;
- (void)p_addTexture:(id)arg1 toTextureSet:(id)arg2 forFinalElements:(_Bool)arg3;
- (void)addTexture:(id)arg1;
- (_Bool)hasCacheForEffectiveStage:(long long)arg1 deliveryStyle:(unsigned long long)arg2 isSingleImage:(_Bool)arg3;
- (void)teardown;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRep : TSCHChartRep <TSCH3DChartAnimationRendering, TSCH3DGLLayerProvider>
{
    TSCH3DChartRenderer *mRenderer3D;
    TSCH3DChartRepRenderQueue *mRenderQueue;
    TSCH3DChartRendererState *mRendererState;
    unsigned long long mChunkCount;
    TSCH3DChartRepCachedTexture *mCachedTexture;
    _Bool mHasSkippedInitialTexture;
    _Bool mTextureForHiding;
    TSCH3DChartAnimationEngine *mEngine;
    Class mAnimationClass;
    long long mAnimationStage;
    long long mAnimationFrameCount;
    int mAnimationBuildType;
    TSCH3DScene *mAnimationLayerScene;
    TSCH3DChartRepFPSCounter *mFPSCounter;
    NSDictionary *mBuildAttributes;
    TSCH3DGLContext *mAnimationGLContext;
    NSNumber *mCustomAnimationContentsScale;
    int mRenderMode;
    _Bool mIsInInteractiveMode;
    NSMutableIndexSet *mInteractiveFlags;
    _Bool mMaybeBeginDragging;
    _Bool mMaybeBeginScrolling;
    _Bool mDidChangeDepth;
    struct CGSize mMinimumInteractiveSize;
    struct CGRect mCurrentVisibleBoundsInLayerRelativeSpace;
    _Bool mWillChangeAppearance;
    struct CGRect mBeginScaleChartBodyLayoutRect;
    _Bool mHasEverRendered;
    int mCGContextDrawingMode;
    _Bool mShouldDelayDestroyFramebuffer;
    CALayer *mRootLayer;
    unsigned long long mNumberOfInteractiveRotations;
    NSMutableArray *mSelectionKnobsLayers;
    _Bool mDocumentWillClose;
    _Bool mAllowLowResolutionTextures;
    _Bool mIsBackgroundLayoutAndRendering;
    float mOverrideRenderingSamples;
    _Bool mHasInterestInSharegroup;
    _Bool mWillBeRemoved;
    _Bool mAnimationHasEnded;
    _Bool mLayerPositionIsInvalidated;
}

+ (id)p_allFillProperties;
+ (id)chartRep3DFromLayer:(id)arg1;
+ (_Bool)hasDelegateInLayer:(id)arg1;
+ (_Bool)canRenderUsingOpenGL;
+ (id)sharegroupTokensOfInterest;
@property(retain, nonatomic) NSNumber *customAnimationContentsScale; // @synthesize customAnimationContentsScale=mCustomAnimationContentsScale;
@property(retain, nonatomic) TSCH3DGLContext *animationGLContext; // @synthesize animationGLContext=mAnimationGLContext;
@property(nonatomic) _Bool textureForHiding; // @synthesize textureForHiding=mTextureForHiding;
@property(readonly, nonatomic) int animationBuildType; // @synthesize animationBuildType=mAnimationBuildType;
@property(readonly, nonatomic) NSDictionary *buildAttributes; // @synthesize buildAttributes=mBuildAttributes;
@property(retain, nonatomic) TSCH3DChartRepCachedTexture *cachedTexture; // @synthesize cachedTexture=mCachedTexture;
@property(readonly, nonatomic) TSCH3DChartRenderer *renderer3D; // @synthesize renderer3D=mRenderer3D;
@property(readonly, nonatomic) TSCH3DChartAnimationEngine *engine; // @synthesize engine=mEngine;
- (id).cxx_construct;
- (void)p_clearInteractiveFlag:(unsigned long long)arg1;
- (void)p_setInteractiveFlag:(unsigned long long)arg1;
- (_Bool)p_hasInteractiveFlag:(unsigned long long)arg1;
- (_Bool)p_isThumbnailOrInsertionIconCanvas:(id)arg1;
- (void)protected_dynamicStyleChangeDidEnd:(id)arg1;
- (void)protected_dynamicStyleChangeWillBegin:(id)arg1;
- (void)didAnimateFromCDE;
- (void)willAnimateIntoCDE;
- (void)dynamically3DSetNewDepth:(double)arg1;
- (id)dynamicChange3DDepthDidEndOutInfoGeometryRect:(struct CGRect *)arg1;
- (void)dynamicChange3DDepthDidBegin;
- (void)dynamically3DRotatingWithTracker:(id)arg1;
- (void)p_invalidateLayoutLabelsBoundsClass:(Class)arg1;
- (void)dynamicallyUpdatingLegendFrameWithTracker:(id)arg1;
- (void)invalidateLayoutCache;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (id)hitChartElements:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (_Bool)rotationKnobHitByNaturalPoint:(struct CGPoint)arg1;
- (void)invalidateSubselectionKnobs;
- (void)p_invalidateSubselectinoKnobsLayers;
- (void)p_calculateSelectionKnobsLayersForSelectionPaths:(id)arg1;
- (void)knobTrackingDidEnd:(id)arg1;
- (void)knobTrackingDidBegin:(id)arg1;
- (id)newTrackerForKnob:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (id)p_wedgeExplosionTracker;
- (void)addChartKnobsToArray:(id)arg1;
- (id)knobForDynamicStyleChangeKey:(id)arg1;
- (void)cancelMultipassRendering;
- (_Bool)processMultipassRendering;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayIfNecessaryUpdateGLLayerPixelAlignment:(_Bool)arg1;
- (id)textureForContext:(id)arg1;
- (void)p_checkPresenterDisplayForAnimationSession:(id)arg1;
- (void)p_cacheRenderAnimationTextureForFinalElements:(_Bool)arg1;
- (_Bool)p_shouldSkipInitialTextureRequestForFinalElements:(_Bool)arg1;
- (_Bool)p_isValidTextureStageForFinalElements:(_Bool)arg1;
- (_Bool)p_hasCachedTextureForFinalElements:(_Bool)arg1;
- (id)p_generateCachedAnimationTextureForFinalElements:(_Bool)arg1 includesChart:(_Bool)arg2;
- (struct CGRect)scaledVisibleCanvasBounds;
- (void)markTextureDirty;
- (void)setTextureStage:(unsigned long long)arg1;
- (void)p_setChartChunkStage:(long long)arg1;
- (id)p_renderLegendTextureWithBounds:(const struct CGRect *)arg1 returningBodyCanvasBounds:(struct CGRect *)arg2;
- (void)p_renderTextureWithBounds:(const struct CGRect *)arg1 finalTexture:(_Bool)arg2 enumerationBlock:(CDUnknownBlockType)arg3;
- (_Bool)p_shouldRenderAnimationTextureAsSingleImage;
- (void)p_updateElementSceneObjectPropertiesForScene:(id)arg1;
- (void)p_setAnimationLevelOfDetailGeometryForScene:(id)arg1;
- (void)setTextureAnimationInfo:(id)arg1;
- (_Bool)isLastAbsoluteChunkStageForFinalElements:(_Bool)arg1 chunkStage:(long long)arg2;
- (_Bool)isLastAbsoluteChunkStageForFinalElements:(_Bool)arg1;
- (_Bool)isLastChunkStageForFinalElements:(_Bool)arg1 chunkStage:(long long)arg2;
- (_Bool)isLastChunkStageForFinalElements:(_Bool)arg1;
- (id)p_animationLayoutScene;
- (id)p_animationScene;
@property(readonly, nonatomic) TSCH3DScene *renderingScene;
@property(readonly, nonatomic) TSCH3DScene *layoutScene;
- (id)animationFilter;
@property(readonly, nonatomic) Class animationClass; // @synthesize animationClass=mAnimationClass;
- (id)deliveryTimeSlice;
- (long long)p_absoluteStageFromTextureStage:(long long)arg1 isFinalElements:(_Bool)arg2;
- (long long)p_effectiveStageFromTextureStage:(long long)arg1 isFinalElements:(_Bool)arg2;
- (long long)p_lastTextureStage;
- (void)renderAnimationFrame:(float)arg1 drawingFrame:(struct CGRect)arg2 chunkStage:(long long)arg3;
- (id)animationLayerWithFrame:(struct CGRect)arg1 untransformedFrame:(struct CGRect)arg2 scale:(double)arg3 colorSpace:(struct CGColorSpace *)arg4 returningDrawingFrame:(struct CGRect *)arg5 TSDGLLayer:(id *)arg6;
- (struct CGRect)p_adjustedAnimationDrawableFrameWithFrame:(struct CGRect)arg1 untransformedFrame:(struct CGRect)arg2;
- (void)p_addLegendLayerToAnimationLayer:(id)arg1;
- (void)p_addSeparateRenderedLayersToAnimationLayer:(id)arg1 intersectedBodyCanvasBounds:(const struct CGRect *)arg2;
- (id)p_renderSeparateAnimationLayers:(id)arg1 intersectedBodyCanvasBounds:(const struct CGRect *)arg2;
- (void)setAnimationType:(int)arg1 chunkStage:(long long)arg2 buildType:(int)arg3 textureDeliveryStyle:(unsigned long long)arg4 attributes:(id)arg5;
- (void)animationDidEndForChunkStage:(long long)arg1;
- (void)animationFrameDidEndForGLLayer;
- (void)p_animationFlushResources;
- (void)animationWillBeginForChunkStage:(long long)arg1;
- (void)p_clearCachedTexture;
- (void)p_updateChunkCountIfNecessary;
- (void)p_updateChunkCount;
- (struct CGRect)boundsForStandardKnobs;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScaleDidChange;
- (void)didEndZooming;
- (void)willBeginZooming;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (void)dynamicDragDidEnd;
- (void)dynamicDragDidBegin;
- (_Bool)shouldShowDragHUD;
- (_Bool)shouldShowSizesInRulers;
- (void)showHitFeedbackForSelectionPath:(id)arg1;
- (void)clearDragHighlightAndPreviewState;
- (void)editor:(id)arg1 isDeselectingInfos:(id)arg2;
- (void)editor:(id)arg1 isSelectingInfos:(id)arg2;
- (void)p_set3DRotateKnobVisible:(_Bool)arg1;
- (_Bool)p_shouldShowRotate3DKnobWithInfoCount:(unsigned long long)arg1;
- (_Bool)shouldShowKnobs;
- (_Bool)shouldShowLegendHighlight;
- (_Bool)shouldShowSelectionHighlight;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)processChanges:(id)arg1;
- (_Bool)canDrawInParallel;
- (struct ChartProjectedBoundsConverter)p_chart3DLayoutBoundsConverterUpdatingLayoutIfNecessary:(_Bool)arg1;
- (struct CGPoint)offsetFromLayerRelativeToBodyCanvas;
- (void)renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)renderIntoGLLayerWithGLContext:(id)arg1;
- (void)p_lowQualityRenderWithGLContext:(id)arg1 bodyCanvasVisibleRect:(struct CGRect)arg2 renderer:(id)arg3;
- (_Bool)canRenderIntoGLLayer;
- (_Bool)p_shouldRender;
- (void)p_setupForRendering;
- (void)p_setupForAnimationRendering;
@property(readonly, nonatomic) Class renderCycleClass;
- (struct CGRect)clipRect;
- (id)layoutItem;
- (id)p_chart3DLayout;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (_Bool)isOpaque;
- (int)tilingMode;
- (_Bool)p_isDrawingInCGContext;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (_Bool)p_canRender;
- (id)GLLayerWithFrame:(struct CGRect)arg1;
- (id)GLLayer;
- (id)GLLayerNoCreate;
- (void)p_calculateGLLayerFrame;
- (_Bool)p_shouldUpdateRendererLayoutForCurrentLayer;
- (void)p_recreateGLLayer;
- (void)p_createBackgroundLayoutLayer;
- (void)p_updateLayerTree;
- (void)p_updateRendererLayoutForCurrentLayer;
- (float)renderingSamples;
- (void)p_calculateOverrideRenderingSamplesForPrintingOrPdfRendering;
- (void)didUpdateLayer:(id)arg1;
- (void)p_pixelAlignLegendLayer:(id)arg1 basedOnUnalignedParentLayer:(id)arg2;
- (struct CGPoint)p_scaledIntegralOffsetFromFractionInFrame:(struct CGPoint *)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)p_updateGLLayerPixelAlignment;
- (double)p_layerContentsScale;
- (void)willUpdateLayer:(id)arg1;
- (void)willLayoutAndRenderInBackground;
- (struct CGRect)layerFrameInScaledCanvas;
- (_Bool)frameInUnscaledCanvasNeedsPaddingForShadows;
- (void)p_updateVisibleBoundsRect;
- (id)p_pixelAlignmentLayer;
- (struct CGRect)p_visibleRectInRepLayer;
- (struct CGRect)p_validateVisibleRect:(struct CGRect)arg1;
- (void)invalidateLayerCache;
- (_Bool)directlyManagesLayerContent;
- (Class)layerClass;
- (_Bool)renderLegendIntoSeparateLayer;
- (_Bool)shouldUseLegendLayerForLayerBasedRep;
- (_Bool)shouldApplyFractionalTranslationInRootForLegendLayer;
- (struct CGRect)pixelAlignBodyCanvasBounds:(const struct CGRect *)arg1;
- (struct CGRect)bodyCanvasBoundsFromCanvasBounds:(const struct CGRect *)arg1;
- (struct CGRect)canvasBoundsFromBodyCanvasBounds:(const struct CGRect *)arg1;
- (void)p_endInteractiveMode;
- (_Bool)p_threadSafeExitInteractiveMode;
- (void)p_cancelEndInteractiveModeCallback;
- (void)p_endInteractiveModeAfterDelay:(double)arg1;
- (_Bool)p_canEndInteractiveMode;
- (void)p_beginInteractiveMode;
- (_Bool)p_needInteractiveMode;
- (id)p_lazyRenderer3D;
- (void)chartDidChangeAppearance;
- (void)chartWillChangeAppearance;
- (void)willBeRemoved;
- (void)p_clearInteractiveFlagsBeforeRemoval;
- (_Bool)p_shouldDelayDestroyFramebuffer;
- (void)p_applicationDidBecomeActive:(id)arg1;
- (void)p_documentWillClose:(id)arg1;
- (void)p_applicationWillResignActive:(id)arg1;
- (tvec2_84d5962d)normalizedPointFromTouchPoint:(const tvec2_84d5962d *)arg1;
- (tvec2_84d5962d)normalizedPointFromUnscaledPoint:(struct CGPoint)arg1;
- (tvec2_84d5962d)normalizedPointFromNaturalPoint:(struct CGPoint)arg1;
- (id)rendererState;
- (id)p_repSharegroupToken;
- (id)update3DRendererWithSceneAreaLayoutItem:(id)arg1;
- (void)clearRenderers;
- (_Bool)p_isBackgroundLayoutThread;
- (void)p_removeRepFromRenderQueue;
- (void)addRepToRenderQueueInFront:(_Bool)arg1;
- (id)p_renderQueue;
- (void)p_removeInterestForSharegroupsIfNecessary;
- (void)p_addInterestForSharegroups;
- (id)p_sharegroupTokensOfInterest;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepLayerDelegate : NSObject <TSCHUnretainedParent>
{
    TSCH3DChartRep *mRep;
}

- (id)rep;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepDisplayLayerDelegate : TSCH3DChartRepLayerDelegate
{
}

- (void)displayLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartTouchHandler : NSObject
{
    TSCH3DChartRep *mRep;
    _Bool mIsActive;
}

+ (id)handlerWithRep:(id)arg1;
@property(nonatomic) _Bool isActive; // @synthesize isActive=mIsActive;
- (void)setNeedsDisplay;
- (void)clearParent;
@property(readonly, nonatomic) _Bool hasChanges;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DValueEnumerator : NSObject
{
    struct ValueEnumerator mImp;
}

- (id).cxx_construct;
- (void)setValue:(double)arg1;
- (id)enumerator;
- (unsigned long long)index;
- (_Bool)isValidNonZero;
- (_Bool)isValid;
@property(readonly, nonatomic) double value;
- (id)nextObject;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartModelEnumerator : NSObject
{
    TSCHChartModel *mModel;
    NSArray *mSeriesList;
    unsigned long long mNumberOfValues;
    TSCH3DChartType *mChartType;
    TSCHChartSeriesType *mSeriesType;
    TSCHChartAxis *mCoordinateAxis;
    TSCHChartAxis *mValueAxis;
    double mIntercept;
    double mUnitSpaceIntercept;
    struct ValueEnumerator mSeries;
    struct ValueEnumerator mCoordinate;
    vector_3f7ffb82 mSeriesValues;
    vector_3f7ffb82 mCoordinateValues;
}

+ (id)enumeratorWithModel:(id)arg1 chartType:(id)arg2 seriesType:(id)arg3;
@property(readonly, nonatomic) TSCHChartSeriesType *seriesType; // @synthesize seriesType=mSeriesType;
@property(readonly, nonatomic) TSCH3DChartType *chartType; // @synthesize chartType=mChartType;
@property(readonly, nonatomic) TSCHChartModel *model; // @synthesize model=mModel;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)valueLabelPositionForAxisValue:(double)arg1;
- (_Bool)skipZeroValues;
- (id)seriesFillOrStrokeColor;
- (id)seriesFill;
- (id)seriesName;
- (_Bool)showSeriesName;
- (_Bool)showValueLabels;
- (id)valueStringForLabelResources:(id)arg1;
- (id)valueString;
- (_Bool)isValid;
- (_Bool)isValidNonZero;
- (unsigned long long)elementIndex;
- (double)unitSpaceValueForAxisValue:(double)arg1;
- (double)axisSpaceValue;
- (double)unitSpaceValue;
- (double)groupValue;
- (id)nextElement:(unsigned long long)arg1;
- (id)nextElement;
- (void)updateValue;
- (double)unitSpaceIntercept;
- (double)intercept;
- (unsigned long long)index;
- (id)elementEnumerator;
- (tvec2_3b141483)position;
- (id)nextSeries:(unsigned long long)arg1;
- (id)nextSeries;
@property(readonly, nonatomic) TSCHChartSeries *series;
@property(readonly, nonatomic) TSCHChartInfo *info;
- (id)reverseSeriesEnumerator;
- (id)seriesEnumerator;
@property(readonly, nonatomic) tvec2_3b141483 size;
- (unsigned long long)numberOfSeries;
- (unsigned long long)countSeries;
- (void)resetForReverseSeriesEnumeration:(_Bool)arg1;
- (id)p_resetCoordinateEnumeration;
- (void)updateAxes;
- (void)dealloc;
- (id)initWithModel:(id)arg1 chartType:(id)arg2 seriesType:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAxisGridEnumerator : TSCH3DValueEnumerator
{
    TSCHChartAxis *mAxis;
}

+ (id)enumeratorWithAxis:(id)arg1;
@property(readonly, nonatomic) TSCHChartAxis *axis; // @synthesize axis=mAxis;
- (struct AxisGridLocation)position;
- (void)update;
- (unsigned long long)count;
@property(readonly, nonatomic) int type;
- (void)dealloc;
- (id)initWithAxis:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAxisLabelKind : NSObject
{
}

+ (id)concreteClasses;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCategoryAxisLabelKind : TSCH3DAxisLabelKind
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kind;
+ (id)_singletonAlloc;
- (id)labelForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)count:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DValueAxisLabelKind : TSCH3DAxisLabelKind
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kind;
+ (id)_singletonAlloc;
- (id)labelForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)count:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSeriesLabelKind : TSCH3DAxisLabelKind
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kind;
+ (id)_singletonAlloc;
- (id)labelForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)count:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAxisLabelEnumerator : TSCH3DValueEnumerator
{
    TSCHChartAxis *mAxis;
    TSCH3DAxisLabelKind *mKind;
}

+ (id)enumeratorWithAxis:(id)arg1 kind:(id)arg2;
@property(readonly, nonatomic) TSCH3DAxisLabelKind *kind; // @synthesize kind=mKind;
- (int)labelPosition;
- (_Bool)shouldRender;
- (id)stringForLabelResources:(id)arg1;
- (id)string;
- (void)update;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithAxis:(id)arg1 kind:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAxisLabelCachedEnumerator : TSCH3DValueEnumerator
{
    TSCH3DValueEnumerator *mCachee;
    TSCH3DAxisLabelKind *mKind;
    unsigned long long mCount;
    _Bool mShouldRender;
    _Bool mValid;
    int mLabelPosition;
    struct vector<TSCH3D::AxisLabelCacheItem, std::__1::allocator<TSCH3D::AxisLabelCacheItem>> mCache;
}

+ (id)enumeratorWithAxisLabelEnumerator:(id)arg1;
@property(readonly, nonatomic) TSCH3DAxisLabelKind *kind; // @synthesize kind=mKind;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)shouldRender;
- (id)string;
- (void)update;
- (id)enumerator;
- (void)cache;
- (unsigned long long)count;
- (void)dealloc;
- (int)labelPosition;
- (id)initWithAxisLabelEnumerator:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPlatformSettings : NSObject
{
    NSDictionary *mSettings;
}

+ (id)sharedInstance;
+ (id)p_platformSettingsDictionary;
+ (id)p_defaultSettingsDictionary;
- (_Bool)shouldHandleResourceCacheOutOfMemory;
- (_Bool)backgroundLayoutUsesTiledRendering;
- (double)backgroundLayoutContentsScaleFactor;
- (_Bool)protectCachedShaders;
- (float)prefilteredLinesFilterRadius;
- (_Bool)useTiledFullSizeInteractiveLayer;
- (unsigned long long)highQualityShadowsSize;
- (_Bool)useHighQualityShadows;
- (float)rotationTrackerSpeed;
- (float)normalizedLabelPickingSlackForViewScale:(double)arg1 viewport:(const tvec2_3b141483 *)arg2;
- (float)p_labelPickingSlack;
- (int)p_labelPickingSlackMethod;
- (_Bool)useLayoutInwardForInsertionIcons;
- (_Bool)useInteractiveModeWhileSelected;
- (_Bool)knobTrackingUsesRealTimePerformanceHint;
- (_Bool)interactiveModeUsesFastPerformanceHint;
- (unsigned long long)interactiveCanvasMultisamples;
- (_Bool)interactiveCanvasCanUseHighQualityRenderer;
- (unsigned long long)resourceCacheMemoryLimitInBytes;
- (unsigned long long)labelMaxTextureSize;
- (unsigned long long)printingMaxImageSize;
- (double)printingDPI;
- (unsigned long long)insertionIconSupersamplingSamples;
- (unsigned long long)supersamplingSamples;
- (unsigned long long)supersamplingTileSize;
- (unsigned long long)buildFramebufferMemoryLimitInBytes;
- (_Bool)buildTextureRendersAsSingleImage;
- (_Bool)buildsCanUseDynamicShadows;
- (_Bool)buildsUseLowDetailedGeometries;
- (double)buildTargetFPS;
- (_Bool)buildShouldDiscardBuffers;
- (unsigned long long)buildMultisamples;
- (_Bool)buildImageDefaultAntialias;
- (unsigned long long)buildImageTileSize;
- (_Bool)skipFirstMipmapLevel;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxis : NSObject <TSCHUnretainedParent, TSCHStyleOwning>
{
    TSCHChartModel *mChartModel;
    TSCHChartAxisID *mAxisID;
    id <TSCHStyleActAlike> mStyle;
    id <TSCHStyleActAlike> mNonStyle;
    unsigned long long mStyleIndex;
    unsigned long long mNonStyleIndex;
    TSUFastReadInvalidatingCache *mAnalysisCache;
    TSUFastReadInvalidatingCache *mInterceptCache;
    TSCHChartAxis *mNonTransientCounterpart;
}

+ (id)defaultNumberFormat;
+ (id)axisForInfo:(id)arg1;
+ (id)paragraphStyleForLabelsFontForInfo:(id)arg1;
+ (tvec2_84d5962d)sizeOfSeriesLabelsForInfo:(id)arg1;
+ (tvec2_84d5962d)sizeOfSeriesLabelsForInfo:(id)arg1 onlyHeight:(_Bool)arg2;
+ (tvec2_84d5962d)sizeOfLabelsForInfo:(id)arg1 onlyHeight:(_Bool)arg2;
@property(readonly, nonatomic) TSCHChartModel *model; // @synthesize model=mChartModel;
@property(readonly, nonatomic) TSCHChartAxisID *axisID; // @synthesize axisID=mAxisID;
- (id)nonstyle;
- (id)style;
- (void)propertiesWereMutated:(id)arg1;
- (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2;
- (id)swapTuplesForMutationsForImport:(id)arg1;
- (id)swapTuplesForMutations:(id)arg1;
- (id)p_swapTuplesForMutations:(id)arg1 forImport:(_Bool)arg2;
- (id)context;
- (id)drawableInfo;
- (id)chartInfo;
- (id)valueForProperty:(int)arg1;
- (id)objectValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
- (_Bool)hasObjectValueForProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasFloatValueForProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasIntValueForProperty:(int)arg1 value:(int *)arg2;
- (int)defaultPropertyForGeneric:(int)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)defaultProperties;
- (id)p_genericToDefaultPropertyMap;
- (void)clearParent;
- (unsigned long long)axisIndex;
- (unsigned long long)nonStyleIndex;
- (unsigned long long)styleIndex;
- (void)setNonStyle:(id)arg1 index:(unsigned long long)arg2;
- (void)setStyle:(id)arg1 index:(unsigned long long)arg2;
- (id)formattedStringForSeries:(id)arg1 index:(unsigned long long)arg2 multiDataSetIndex:(unsigned long long)arg3;
- (void)updateAxisDateInterceptInAnalysis:(id)arg1;
- (unsigned long long)indexForSelectionPathLabelIndex:(unsigned long long)arg1;
- (unsigned long long)selectionPathLabelIndexForMultiDataSetIndex:(unsigned long long)arg1;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1;
- (id)valueForFormattedString:(id)arg1;
- (id)formattedStringForSeries:(id)arg1 index:(unsigned long long)arg2;
- (id)formattedStringForAxisValue:(id)arg1;
- (_Bool)supportsFormattedStringForInvalidValue;
- (id)inspectorStringForSeries:(id)arg1 index:(unsigned long long)arg2 value:(id)arg3;
- (id)inspectorStringForValue:(id)arg1;
- (id)p_dataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2 onlyForValidValue:(_Bool)arg3;
- (id)dataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2;
- (id)dataFormatter;
- (id)p_axisDataFormatterFromCurrentModel;
- (id)p_fixupNegativeStyleForDataFormatter:(id)arg1;
- (_Bool)editableFormatForValueStrings;
- (double *)unitSpaceCenterValuesForSeries:(id)arg1 indexes:(struct _NSRange)arg2;
- (double)unitSpaceCenterValueForSeries:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceCenterValueForValue:(double)arg1;
- (double)unitSpaceCenterValueHalfOffset;
- (double)unitSpaceHalfOffsetForCountSpaceHalfOffset;
- (double)unitSpaceValueForCountSpaceValue:(double)arg1;
- (double)unitSpaceValueForCountSpaceValue:(double)arg1 min:(double)arg2 count:(double)arg3;
- (double)unitSpaceValueForDataSpaceValue:(double)arg1;
- (double)unitSpaceValueForDataSpaceValue:(double)arg1 min:(double)arg2 max:(double)arg3;
- (double *)unitSpaceValuesForSeries:(id)arg1 indexes:(struct _NSRange)arg2;
- (double)unitSpaceValueForSeries:(id)arg1 index:(unsigned long long)arg2;
- (double *)unitSpaceValuesForSeries:(id)arg1 indexes:(struct _NSRange)arg2 min:(double)arg3 max:(double)arg4;
- (double)unitSpaceValueForSeries:(id)arg1 index:(unsigned long long)arg2 min:(double)arg3 max:(double)arg4;
- (double)unitSpaceValueForDataSpaceValue:(double)arg1 series:(id)arg2 index:(unsigned long long)arg3;
- (id)computeMinorGridlinesFromMajorGridlinesInAnalysis:(id)arg1;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;
- (void)adjustMinMaxForDataRangeInAnalysis:(id)arg1;
- (void)updateMinMaxGridLocationsInAnalysis:(id)arg1;
- (id)gridValueAxisToModelValue:(double)arg1;
- (double)doubleAxisToModelValue:(double)arg1;
- (double)doubleModelToAxisValue:(double)arg1 forSeries:(id)arg2;
- (double)modelMax;
- (double)modelMin;
- (void)updateModelMinMaxInAnalysis:(id)arg1;
- (int)p_axisGridValueType;
- (_Bool)hasCustomFormatForGridValueType:(int)arg1;
- (id)customFormatForGridValueType:(int)arg1;
- (int)adjustedNumberFormatType;
- (int)gridValueType;
- (id)p_axisAnalysisFromCurrentModel;
- (id)p_interceptAnalysisFromCurrentModel;
- (void)updateGridValueTypeInterceptInAnalysis:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)minorGridLocations;
- (id)majorGridLocations;
- (unsigned long long)p_count;
- (unsigned long long)p_rangeCount;
- (double)range;
- (double)max;
- (double)min;
- (double)axisInterceptPosition;
- (double)interceptForAxis:(id)arg1;
@property(readonly, nonatomic) int currentAxisScaleSetting;
- (void)invalidateTransientState;
- (id)analysis;
- (id)interceptAnalysis;
@property(readonly) _Bool isRangeContinuous;
@property(readonly) _Bool isCategory;
- (void)dealloc;
- (id)initWithAxisID:(id)arg1 model:(id)arg2;
- (tvec2_84d5962d)sizeOfLabelsForInfo:(id)arg1 enumerator:(id)arg2 onlyHeight:(_Bool)arg3;
- (id)g_genericToDefaultPropertyMap;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisID : NSObject <NSCopying>
{
    int mType;
    unsigned long long mOrdinal;
}

+ (id)axisIDWithType:(int)arg1 ordinal:(unsigned long long)arg2;
@property(readonly) unsigned long long ordinal; // @synthesize ordinal=mOrdinal;
@property(readonly) int type; // @synthesize type=mType;
- (void)saveToArchive:(struct ChartAxisIDArchive *)arg1;
- (id)initWithArchive:(const struct ChartAxisIDArchive *)arg1;
- (id)description;
- (id)debuggingName;
- (_Bool)intersectsAxisID:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(int)arg1 ordinal:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartCategoryAxis : TSCHChartAxis
{
    int mRangeContinuousCache;
}

+ (id)axisForInfo:(id)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)defaultProperties;
- (id)p_getGenericToCategoryPropertyMap;
- (id)p_getGenericToCategoryPropertyMapForNonMultiData;
- (id)p_getGenericToCategoryPropertyMapForMultiData;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;
- (unsigned long long)indexForSelectionPathLabelIndex:(unsigned long long)arg1;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1;
- (_Bool)isRangeContinuous;
- (_Bool)isCategory;
- (void)dealloc;
- (pair_952e027e)labelEnumeratorPair;
- (id)g_genericToSpecificPropertyMap;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGrid : NSObject <NSCopying, TSDMixing>
{
    id <TSCHNotifyOnModify> mModifyDelegate;
    int mDirection;
    NSMutableArray *mRowNames;
    NSMutableArray *mColumnNames;
    NSMutableArray *mValues;
    _Bool mDirty;
    _Bool mAddingMultipleRows;
    unsigned long long mNextRowNumber;
    _Bool mAddingMultipleCols;
    unsigned long long mNextColNumber;
    NSMutableArray *mRowIds;
    NSMutableArray *mColumnIds;
}

@property(readonly, nonatomic) NSArray *columnIds; // @synthesize columnIds=mColumnIds;
@property(readonly, nonatomic) NSArray *rowIds; // @synthesize rowIds=mRowIds;
@property(nonatomic) id <TSCHNotifyOnModify> objectToNotify; // @synthesize objectToNotify=mModifyDelegate;
@property(nonatomic) _Bool dirty; // @synthesize dirty=mDirty;
@property(nonatomic) int direction; // @synthesize direction=mDirection;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)gridAdapterForColumnConstant;
- (id)gridAdapterForRowConstant;
- (id)gridAdapterForColumnCount;
- (id)gridAdapterForRowCount;
- (id)gridAdapterForColumn:(unsigned long long)arg1;
- (id)gridAdapterForRow:(unsigned long long)arg1;
- (void)takeDataFromDictionary:(id)arg1 rowIds:(id)arg2 columnIds:(id)arg3;
- (void)takeDataFromDictionary:(id)arg1;
- (void)insertColumnNames:(id)arg1 at:(unsigned long long)arg2 withIds:(id)arg3;
- (void)insertColumnNames:(id)arg1 at:(unsigned long long)arg2;
- (void)insertRowsWithNames:(id)arg1 at:(unsigned long long)arg2 withIds:(id)arg3;
- (void)insertRowsWithNames:(id)arg1 at:(unsigned long long)arg2;
- (void)insertColumnsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3 withIds:(id)arg4;
- (void)insertColumnsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3;
- (void)insertRowsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3 withIds:(id)arg4;
- (void)insertRowsAt:(unsigned long long)arg1 names:(id)arg2 data:(id)arg3;
- (id)extractColumnNames:(struct _NSRange)arg1 outValueColumns:(id *)arg2;
- (id)extractRowNames:(struct _NSRange)arg1 outValueRows:(id *)arg2;
- (void)moveColumns:(struct _NSRange)arg1 afterColumn:(long long)arg2;
- (void)moveRows:(struct _NSRange)arg1 afterRow:(long long)arg2;
- (void)setValue:(id)arg1 forRow:(unsigned long long)arg2 column:(unsigned long long)arg3;
- (void)removeColumn:(unsigned long long)arg1;
- (void)removeRow:(unsigned long long)arg1;
- (void)setNameForColumn:(unsigned long long)arg1 toName:(id)arg2;
- (void)setNameForRow:(unsigned long long)arg1 toName:(id)arg2;
- (void)insertColumn:(unsigned long long)arg1 withName:(id)arg2 withId:(id)arg3;
- (void)insertColumn:(unsigned long long)arg1 withName:(id)arg2;
- (void)insertRow:(unsigned long long)arg1 withName:(id)arg2 withId:(id)arg3;
- (void)insertRow:(unsigned long long)arg1 withName:(id)arg2;
- (id)p_uuidsForColumns:(struct _NSRange)arg1;
- (id)p_uuidsForRows:(struct _NSRange)arg1;
- (id)p_generateUUID;
- (void)p_generateRowColumnIdMaps;
- (id)getNewRowName;
- (id)getNewColumnName;
- (void)addingMultipleCols:(_Bool)arg1;
- (void)addingMultipleRows:(_Bool)arg1;
- (_Bool)p_name:(id)arg1 isInArray:(id)arg2;
- (id)description;
- (unsigned long long)columnIndexForColumnId:(id)arg1;
- (unsigned long long)rowIndexForRowId:(id)arg1;
- (id)columnIdForColumn:(unsigned long long)arg1;
- (id)rowIdForRow:(unsigned long long)arg1;
- (id *)valuesForRows:(struct _NSRange)arg1 column:(unsigned long long)arg2;
- (id *)valuesForRow:(unsigned long long)arg1 columns:(struct _NSRange)arg2;
- (id)valueForRow:(unsigned long long)arg1 column:(unsigned long long)arg2;
- (id)nameForColumn:(unsigned long long)arg1;
- (id)nameForRow:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfColumns;
@property(readonly, nonatomic) unsigned long long numberOfRows;
- (_Bool)contentsEqualToGrid:(id)arg1;
- (void)willModify;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)loadFromPreUFFArchive:(const struct ChartGridArchive *)arg1;
- (void)saveToUnityArchive:(struct ChartArchive *)arg1 forPasteboard:(_Bool)arg2;
- (void)loadFromUnityArchive:(const struct ChartArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHDeprecatedChartGridForUpgrade : TSPObject
{
    TSCHChartGrid *mGrid;
}

@property(readonly, retain, nonatomic) TSCHChartGrid *grid; // @synthesize grid=mGrid;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridAdapter : NSObject <NSFastEnumeration>
{
    TSCHChartGrid *mGrid;
    unsigned long long mIndex;
}

@property(readonly, nonatomic) TSCHChartGrid *grid; // @synthesize grid=mGrid;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@property(retain, nonatomic) NSString *name;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (id *)valuesAtIndexes:(struct _NSRange)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithChartGrid:(id)arg1 index:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridRowAdapter : TSCHChartGridAdapter
{
}

- (void)setName:(id)arg1;
- (id)name;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (id *)valuesAtIndexes:(struct _NSRange)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridColumnAdapter : TSCHChartGridAdapter
{
}

- (void)setName:(id)arg1;
- (id)name;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (id *)valuesAtIndexes:(struct _NSRange)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridCountAdapter : TSCHChartGridAdapter
{
    _Bool mCountFromOne;
    unsigned long long mIndexFactor;
}

@property(nonatomic) unsigned long long indexFactor; // @synthesize indexFactor=mIndexFactor;
@property(nonatomic) _Bool countFromOne; // @synthesize countFromOne=mCountFromOne;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (id *)valuesAtIndexes:(struct _NSRange)arg1;
- (id)valueAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)initWithCount:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridConstantAdapter : TSCHChartGridCountAdapter
{
}

- (id)valueAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartGridRenderer : TSCHRenderer
{
}

- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_renderGridlines:(struct CGContext *)arg1 axis:(id)arg2 locations:(id)arg3 showProperty:(int)arg4 strokeProperty:(int)arg5 shadowProperty:(int)arg6 opacityProperty:(int)arg7;
- (void)p_renderBackground:(struct CGContext *)arg1;
- (void)p_renderBackground:(struct CGContext *)arg1 style:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHPropertyMigrator : NSObject
{
    TSSPropertySet *mPropertiesToForce;
    TSUIntToIntDictionary *mShouldForceFlags;
    TSUIntegerKeyDictionary *mValuesToForce;
}

- (void)migrateToSeries:(id)arg1;
- (void)visitExistingSeries:(id)arg1;
- (void)dealloc;
- (id)initWithProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartModel : NSObject <TSCHNotifyOnModify, TSCHUnretainedParent, TSDMixing, NSCopying>
{
    TSCHChartInfo *mInfo;
    TSCHChartGrid *mGrid;
    int mScatterFormat;
    unsigned long long mMultiDataSetIndex;
    _Bool mIsTransient;
    NSMutableArray *mSeriesList;
    NSMutableArray *mAxisList;
    unsigned long long mNumberOfSeriesForCalculatingBarWidth;
    _Bool mModelInvalid;
    NSMutableDictionary *mModelManagedCaches;
    NSMutableDictionary *mSeriesDimensionsByGridIndex;
    NSMutableDictionary *mGridIndexesBySeriesDimension;
}

@property(readonly, nonatomic) _Bool isTransient; // @synthesize isTransient=mIsTransient;
@property(nonatomic) int scatterFormat; // @synthesize scatterFormat=mScatterFormat;
@property(retain, nonatomic) TSCHChartGrid *grid; // @synthesize grid=mGrid;
@property(nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mInfo;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (unsigned long long)gridIndexForSeriesDimension:(id)arg1;
- (id)seriesDimensionForGridIndex:(unsigned long long)arg1;
- (void)p_setBimapEntryForSeriesDimension:(id)arg1 andGridIndex:(unsigned long long)arg2;
- (void)loadDefaultData;
- (void)loadDefaultDataWithGridRowIds:(id)arg1 gridColumnIds:(id)arg2;
- (void)p_loadDefaultDataWithGridRowIds:(id)arg1 gridColumnIds:(id)arg2;
- (void)setNameForMultiDataSetCategory:(unsigned long long)arg1 toName:(id)arg2;
- (void)setNameForCategory:(unsigned long long)arg1 toName:(id)arg2;
- (id)nameForMultiDataSetCategory:(unsigned long long)arg1;
- (id)nameForCategory:(unsigned long long)arg1;
- (unsigned long long)multiDataSetCategoryIndexForCategory:(unsigned long long)arg1;
- (unsigned long long)categoryForMultiDataSetCategoryIndex:(unsigned long long)arg1;
- (id)dataSetNameForMultiDataModel;
- (unsigned long long)p_multiDataSetCategoryIndexForCategory:(unsigned long long)arg1;
- (id)nameForSeries:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfValues;
@property(readonly, nonatomic) unsigned long long numberOfMultiDataSets;
@property(readonly, nonatomic) unsigned long long numberOfChunkableMultiDataSets;
@property(readonly, nonatomic) unsigned long long numberOfMultiDataSetCategories;
- (unsigned long long)numberOfGridValues;
- (id)seriesAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfSeriesForCalculatingBarWidth;
@property(readonly, nonatomic) unsigned long long numberOfSeries;
- (id)noSyncSeriesList;
@property(readonly, retain, nonatomic) NSArray *seriesList;
- (id)axisForID:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *categoryAxisList;
@property(readonly, retain, nonatomic) NSArray *valueAxisList;
- (id)noSyncAxisList;
@property(readonly, retain, nonatomic) NSArray *axisList;
- (void)validateIfNeeded;
- (void)invalidateModel;
- (id)cachedObjectForKey:(id)arg1;
- (void)setCacheObject:(id)arg1 forKey:(id)arg2;
- (void)invalidateCaches;
- (void)resetSeriesStorage;
- (void)p_synchronizeModel;
- (void)p_postSynchronizeAxisList;
- (void)p_synchronizeSeriesList;
- (void)p_synchronizeAxisList;
- (void)p_synchronizeAxis:(id)arg1 class:(Class)arg2 axisID:(id)arg3 axisIndex:(unsigned long long)arg4 styleIndex:(unsigned long long)arg5 usedAxes:(id)arg6 unusedAxes:(id)arg7;
- (id)p_axisForID:(id)arg1;
- (unsigned long long)defaultOrdinalForAxisType:(int)arg1 seriesIndex:(unsigned long long)arg2;
- (void)updateTransientModelFromInfoModel;
@property(nonatomic) unsigned long long multiDataSetIndex;
- (unsigned long long)p_lastMultiDataSetIndex;
- (void)enumerateMultiDataModelsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool isMultiData;
- (void)willModify;
@property(readonly, retain, nonatomic) id syncRoot;
- (void)clearParent;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithChartInfo:(id)arg1 dataSetIndex:(unsigned long long)arg2;
- (id)initWithChartInfo:(id)arg1;
- (void)loadFromPreUFFArchive:(const struct ChartModelArchive *)arg1 unarchiver:(id)arg2 contextForUpgradeOnly:(id)arg3;
- (id)pieSeriesModelCacheForSeries:(unsigned long long)arg1;
- (id)barModelCacheForSeries:(unsigned long long)arg1;
- (id)lineAreaModelCacheForSeries:(unsigned long long)arg1;
- (id)legendModelCache;
- (void)clearTextEditingSelectionPath;
- (void)setTextEditingSelectionPath:(id)arg1 string:(id)arg2;
- (void)saveToUnityArchive:(struct ChartArchive *)arg1 forPasteboard:(_Bool)arg2;
- (void)loadFromUnityArchive:(const struct ChartArchive *)arg1 unarchiver:(id)arg2 contextForUpgradeOnly:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartPieAxis : TSCHChartStackedPercentValueAxis
{
}

- (id)formattedStringForSeries:(id)arg1 index:(unsigned long long)arg2;
- (_Bool)supportsFormattedStringForInvalidValue;
- (_Bool)supportsAxisValueLabels;
- (id)computeMinorGridlinesFromMajorGridlinesInAnalysis:(id)arg1;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesAxisStorage : NSObject
{
    TSCHChartGridAdapter *adapter;
    TSCHChartAxisID *axisID;
}

@property(retain, nonatomic) TSCHChartAxisID *axisID; // @synthesize axisID;
@property(retain, nonatomic) TSCHChartGridAdapter *adapter; // @synthesize adapter;
- (void)setValue:(id)arg1 atIndex:(unsigned long long)arg2 multiDataSetIndex:(unsigned long long)arg3;
- (id *)valuesAtIndexes:(struct _NSRange)arg1 multiDataSetIndex:(unsigned long long)arg2;
- (id)valueAtIndex:(unsigned long long)arg1 multiDataSetIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfValues;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeries : NSObject <TSCHUnretainedParent, TSCHStyleOwning>
{
    TSCHChartModel *mChartModel;
    unsigned long long mSeriesIndex;
    TSCHChartSeriesType *mSeriesType;
    TSUPointerKeyDictionary *mAxisTable;
    TSCHChartGridAdapter *mNameAdapter;
    unsigned long long mBarGapIndex;
    id <TSCHStyleActAlike> mStyle;
    id <TSCHStyleActAlike> mNonStyle;
    _Bool mStyleIsPrivate;
    TSCHTrendLineData *mTrendLineData;
    TSCHErrorBarData *mErrorBarData;
    NSObject<TSCHUnretainedParent> *mSeriesStorage;
}

+ (id)computedFillOrStroke:(id)arg1 forSeriesIndex:(unsigned long long)arg2 numberOfThemeSeries:(unsigned long long)arg3;
+ (id)computableProperties;
+ (id)stackedPercentageNumberFormat;
+ (id)defaultNumberFormat;
@property(nonatomic) unsigned long long barGapIndex; // @synthesize barGapIndex=mBarGapIndex;
@property(readonly, nonatomic) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
@property(readonly, nonatomic) NSObject<TSCHUnretainedParent> *seriesStorage; // @synthesize seriesStorage=mSeriesStorage;
@property(nonatomic) TSCHChartSeriesType *seriesType; // @synthesize seriesType=mSeriesType;
@property(readonly, nonatomic) TSCHChartModel *model; // @synthesize model=mChartModel;
- (void)modelSyncMutateNonStyle:(id)arg1;
- (id)p_seriesNonStyleOrDefaultNonStyle;
- (id)defaultProperties;
- (id)nonstyle;
- (id)style;
- (id)context;
- (id)chartInfo;
- (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2;
- (id)swapTuplesForMutationsForImport:(id)arg1;
- (id)swapTuplesForMutations:(id)arg1;
- (id)p_swapTuplesForMutations:(id)arg1 isForImport:(_Bool)arg2;
- (id)valueForProperty:(int)arg1;
- (id)objectValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
- (_Bool)hasObjectValueForProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasFloatValueForProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasIntValueForProperty:(int)arg1 value:(int *)arg2;
- (void)p_generateComputedProperty:(int)arg1 objectValue:(id *)arg2 intValue:(int *)arg3 floatValue:(float *)arg4;
- (int)defaultPropertyForGeneric:(int)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)p_representativeThemeSeries;
- (_Bool)p_seriesIndexWithinThemeStyleCount;
- (id)p_genericToDefaultPropertyMap;
- (void)clearParent;
- (void)modelSyncSetStyle:(id)arg1;
- (void)modelSyncSetNonStyle:(id)arg1;
- (id)formattedValueLabelStringForValueIndex:(unsigned long long)arg1;
- (id)axisTypesForValueLabelString;
- (_Bool)hasCustomFormatForGridValueType:(int)arg1;
- (int)adjustedNumberFormatType;
- (int)gridValueType;
- (id)customFormatForGridValueType:(int)arg1;
- (void)resetSeriesStorage;
- (void)setSeriesStorage:(id)arg1;
- (_Bool)renderSeriesForClass:(Class)arg1;
- (id)multiDataValueEnumeratorForAxisID:(id)arg1;
- (void)setValue:(id)arg1 forAxisID:(id)arg2 index:(unsigned long long)arg3;
- (id *)valuesForAxis:(id)arg1 indexes:(struct _NSRange)arg2;
- (id)valueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (id *)valuesForAxis:(id)arg1 indexes:(struct _NSRange)arg2 multiDataSetIndex:(unsigned long long)arg3;
- (id)valueForAxis:(id)arg1 index:(unsigned long long)arg2 multiDataSetIndex:(unsigned long long)arg3;
- (id)valueForAxisID:(id)arg1 index:(unsigned long long)arg2;
- (id)valueForAxisID:(id)arg1 index:(unsigned long long)arg2 multiDataSetIndex:(unsigned long long)arg3;
- (unsigned long long)multiDataSetIndexForAxisID:(id)arg1;
- (unsigned long long)multiDataSetIndexForAxis:(id)arg1;
- (void)invalidateCacheDataForSynchronization;
- (void)clearAxisIDs;
- (void)setGridAdapterForName:(id)arg1;
- (void)setGridAdapter:(id)arg1 forAxisType:(int)arg2;
- (void)setAxisID:(id)arg1 forAxisType:(int)arg2;
- (id)axisForAxisType:(int)arg1;
- (id)axisIDForAxisType:(int)arg1;
- (unsigned long long)numberOfValues;
- (unsigned long long)multiDataSetIndex;
- (_Bool)isMultiData;
@property(readonly, nonatomic) TSCHErrorBarData *errorBarData;
@property(readonly, nonatomic) NSString *trendLineLegendText;
@property(readonly, nonatomic) _Bool showTrendLineLegendText;
@property(readonly, nonatomic) TSCHTrendLineData *trendLineData;
- (id)p_axisStorageForType:(int)arg1 create:(_Bool)arg2;
@property(retain, nonatomic) NSString *name;
- (id)drawableInfo;
- (void)dealloc;
- (id)initWithChartModel:(id)arg1 index:(unsigned long long)arg2;
- (id)g_genericToDefaultPropertyMap;
- (double)effectiveLabelExplosion;
- (_Bool)floatValueForLabelExplosion:(float *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesType : NSObject
{
    NSArray *mSeriesRendererClasses;
}

+ (id)inspectorDefaultLocalizedValueLabelsDisclosureTitle;
+ (id)inspectorDefaultLocalizedValueLabelsTabName;
+ (Class)sceneObjectClass;
+ (id)expandProperties:(id)arg1;
+ (id)stackedBar3DSeries;
+ (id)bar3DSeries;
+ (id)stackedColumn3DSeries;
+ (id)pie3DSeries;
+ (id)stackedArea3DSeries;
+ (id)area3DSeries;
+ (id)line3DSeries;
+ (id)column3DSeries;
+ (id)bubbleSeries;
+ (id)mixedAreaSeries;
+ (id)mixedLineSeries;
+ (id)mixedColumnSeries;
+ (id)stackedAreaSeries;
+ (id)stackedBarSeries;
+ (id)stackedColumnSeries;
+ (id)areaSeries;
+ (id)lineSeries;
+ (id)barSeries;
+ (id)columnSeries;
+ (id)scatterSeries;
+ (id)pieSeries;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)_singletonAlloc;
- (id)inspectorLocalizedValueLabelsDisclosureTitle;
- (id)inspectorLocalizedValueLabelsTabName;
- (_Bool)supportsFillSetFill;
- (int)fillSetFillProperty;
- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (int)defaultSymbolType;
- (id)userInterfaceName;
- (id)coordinateAxisForSeries:(id)arg1;
- (id)valueAxisForSeries:(id)arg1;
- (id)p_axisForSeries:(id)arg1 isCategory:(_Bool)arg2;
- (Class)sceneObjectClass;
- (_Bool)supportsValueLabelsAxisOption;
- (_Bool)supportsValueLabelsSeriesName;
- (_Bool)supportsValueLabels;
- (unsigned long long)numberOfSeriesForCalculatingBarWidth:(id)arg1;
- (unsigned long long)seriesIndexForDrawing:(id)arg1;
- (double)beginDataValueForSeries:(id)arg1 groupIndex:(unsigned long long)arg2 valueAxisID:(id)arg3;
- (double)beginValueForSeries:(unsigned long long)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;
- (id)resetSeriesStorage:(id)arg1 forSeries:(id)arg2;
- (_Bool)chunkedBuildsIncludeInterceptValues;
- (_Bool)supportsLineConnectionStyle;
- (_Bool)supportsLineTypeNone;
- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (id)p_supportedSymbolsIfSymbolsSupported;
- (_Bool)supportsShadowOffset;
- (id)supportedSymbols;
- (_Bool)supportsSymbolTypeEditing;
- (_Bool)supportsSymbolDrawing;
- (_Bool)supportsSeriesStroke;
- (_Bool)supportsSeries3DFill;
- (_Bool)supportsSeriesGradientFill;
- (_Bool)supportsSeriesFill;
- (id)cdeFillForSeries:(id)arg1 size:(struct CGSize)arg2;
- (id)propertiesForReferenceColors;
- (id)legendStrokeForSeries:(id)arg1;
- (id)legendFillForSeries:(id)arg1;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1 forSeries:(id)arg2;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (_Bool)isVertical;
- (_Bool)supportsBarGap;
- (_Bool)supportsSetGap;
- (_Bool)useInBarGapCalculations;
- (id)elementBuilder;
- (id)seriesRendererClasses;
- (unsigned long long)valueDimensions;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (_Bool)canUseEstimatedValueLabelsDrawingRect;
- (_Bool)floatValueForLabelExplosion:(float *)arg1 series:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypePie : TSCHChartSeriesType
{
}

- (id)inspectorLocalizedValueLabelsDisclosureTitle;
- (id)inspectorLocalizedValueLabelsTabName;
- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (id)elementBuilder;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1 forSeries:(id)arg2;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (unsigned long long)valueDimensions;
- (_Bool)supportsValueLabelsSeriesName;
- (id)init;
- (id)g_genericToSpecificPropertyMapPie;
- (_Bool)floatValueForLabelExplosion:(float *)arg1 series:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeScatter : TSCHChartSeriesType
{
}

- (_Bool)supportsValueLabelsAxisOption;
- (_Bool)supportsValueLabelsSeriesName;
- (_Bool)supportsFillSetFill;
- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (id)elementBuilder;
- (id)propertiesForReferenceColors;
- (_Bool)supportsLineConnectionStyle;
- (_Bool)supportsLineTypeNone;
- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (id)p_supportedSymbolsIfSymbolsSupported;
- (_Bool)supportsSymbolDrawing;
- (_Bool)supportsSeriesFill;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (unsigned long long)valueDimensions;
- (id)init;
- (id)g_genericToSpecificPropertyMapScatter;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeBar : TSCHChartSeriesType
{
}

- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (id)elementBuilder;
- (_Bool)chunkedBuildsIncludeInterceptValues;
- (id)genericToSpecificPropertyMap;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (_Bool)isVertical;
- (_Bool)supportsBarGap;
- (_Bool)supportsSetGap;
- (_Bool)useInBarGapCalculations;
- (unsigned long long)valueDimensions;
- (id)init;
- (id)g_genericToSpecificPropertyMapBar;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeColumn : TSCHChartSeriesTypeBar
{
}

- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (_Bool)supportsBarGap;
- (_Bool)supportsSetGap;
- (id)elementBuilder;
- (_Bool)isVertical;
- (_Bool)chunkedBuildsIncludeInterceptValues;
- (id)genericToSpecificPropertyMap;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (_Bool)useInBarGapCalculations;
- (unsigned long long)valueDimensions;
- (id)init;
- (id)g_genericToSpecificPropertyMapColumn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeLine : TSCHChartSeriesType
{
}

- (id)propertiesForReferenceColors;
- (id)elementBuilder;
- (_Bool)supportsLineConnectionStyle;
- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (_Bool)supportsSymbolDrawing;
- (_Bool)supportsFillSetFill;
- (_Bool)supportsSeriesFill;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (unsigned long long)valueDimensions;
- (id)init;
- (id)g_genericToSpecificPropertyMapLine;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeArea : TSCHChartSeriesType
{
}

- (id)elementBuilder;
- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (_Bool)supportsSymbolDrawing;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (unsigned long long)valueDimensions;
- (id)init;
- (id)g_genericToSpecificPropertyMapArea;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedColumn : TSCHChartSeriesTypeColumn
{
}

- (_Bool)supportsBarGap;
- (id)elementBuilder;
- (unsigned long long)numberOfSeriesForCalculatingBarWidth:(id)arg1;
- (unsigned long long)seriesIndexForDrawing:(id)arg1;
- (double)beginDataValueForSeries:(id)arg1 groupIndex:(unsigned long long)arg2 valueAxisID:(id)arg3;
- (double)beginValueForSeries:(unsigned long long)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;
- (id)genericToSpecificPropertyMap;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (id)init;
- (id)g_genericToSpecificPropertyMapStackedColumn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedBar : TSCHChartSeriesTypeBar
{
}

- (_Bool)supportsBarGap;
- (id)elementBuilder;
- (unsigned long long)numberOfSeriesForCalculatingBarWidth:(id)arg1;
- (unsigned long long)seriesIndexForDrawing:(id)arg1;
- (double)beginDataValueForSeries:(id)arg1 groupIndex:(unsigned long long)arg2 valueAxisID:(id)arg3;
- (double)beginValueForSeries:(unsigned long long)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;
- (id)genericToSpecificPropertyMap;
- (unsigned int)adjustLabelPosition:(unsigned int)arg1 forAxisValue:(double)arg2 intercept:(double)arg3;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)userInterfaceNameForLabelPosition:(id)arg1;
- (id)legalChartLabelPositions;
- (id)init;
- (id)g_genericToSpecificPropertyMapStackedBar;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedArea : TSCHChartSeriesTypeArea
{
}

- (id)elementBuilder;
- (double)beginDataValueForSeries:(id)arg1 groupIndex:(unsigned long long)arg2 valueAxisID:(id)arg3;
- (_Bool)supportsSymbolDrawing;
- (id)genericToSpecificPropertyMap;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)init;
- (id)g_genericToSpecificPropertyMapStackedArea;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeMixedColumn : TSCHChartSeriesTypeColumn
{
}

- (_Bool)chunkedBuildsIncludeInterceptValues;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMapMixedColumn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeMixedLine : TSCHChartSeriesTypeLine
{
}

- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (_Bool)supportsSymbolDrawing;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMapMixedLine;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeMixedArea : TSCHChartSeriesTypeArea
{
}

- (_Bool)supportsSymbolFillForSymbolType:(int)arg1;
- (_Bool)supportsSymbolDrawing;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMapMixedArea;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeBubble : TSCHChartSeriesTypeScatter
{
}

- (id)inspectorLocalizedValueLabelsDisclosureTitle;
- (id)inspectorLocalizedValueLabelsTabName;
- (_Bool)supportsFillSetFill;
- (int)fillSetFillProperty;
- (id)propertiesForReferenceColors;
- (_Bool)supportsSymbolTypeEditing;
- (id)supportedValueLabelsAxisCombinations;
- (id)axisTypesForValueLabels;
- (int)defaultSymbolType;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (unsigned long long)valueDimensions;
- (_Bool)supportsSeriesStroke;
- (_Bool)supportsLineConnectionStyle;
- (id)elementBuilder;
- (unsigned int)filterChartLabelPosition:(unsigned int)arg1;
- (id)legalChartLabelPositions;
- (id)init;
- (id)g_genericToSpecificPropertyMapBubble;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeColumn3D : TSCHChartSeriesTypeColumn
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMap3DColumn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedColumn3D : TSCHChartSeriesTypeStackedColumn
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMap3DStackedColumn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeBar3D : TSCHChartSeriesTypeBar
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMap3DBar;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedBar3D : TSCHChartSeriesTypeStackedBar
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (id)g_genericToSpecificPropertyMap3DStackedBar;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeLine3D : TSCHChartSeriesTypeLine
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (_Bool)supportsSymbolDrawing;
- (_Bool)supportsLineConnectionStyle;
- (_Bool)supportsLineTypeNone;
- (id)propertiesForReferenceColors;
- (int)legendBadgeType;
- (id)g_genericToSpecificPropertyMap3DLine;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeArea3D : TSCHChartSeriesTypeArea
{
}

+ (Class)sceneObjectClass;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (_Bool)supportsSymbolDrawing;
- (id)g_genericToSpecificPropertyMap3DArea;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypeStackedArea3D : TSCHChartSeriesTypeStackedArea
{
}

+ (Class)sceneObjectClass;
- (int)legendBadgeType;
- (id)genericToSpecificPropertyMap;
- (_Bool)supportsSymbolDrawing;
- (id)g_genericToSpecificPropertyMap3DStackedArea;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesTypePie3D : TSCHChartSeriesTypePie
{
}

+ (Class)sceneObjectClass;
- (id)genericToSpecificPropertyMap;
- (id)coordinateAxisForSeries:(id)arg1;
- (id)valueAxisForSeries:(id)arg1;
- (id)g_genericToSpecificPropertyMap3DPie;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartType : NSObject <TSDMixing>
{
    TSCHChartFeature *mFeature;
}

+ (double)sageDepthFactorForExportingChartInfo:(id)arg1;
+ (id)constantDepthInfoChartScaleForInfoChartScale:(id)arg1 chartType:(id)arg2 barShape:(int)arg3;
+ (id)chartTypePlaceholderForDefault3DScaleProperty;
+ (id)allChartTypes;
+ (id)multiDataBubbleChart;
+ (id)multiDataScatterChart;
+ (id)multiDataBarChart;
+ (id)multiDataColumnChart;
+ (id)stackedBarChart3D;
+ (id)barChart3D;
+ (id)stackedColumnChart3D;
+ (id)pieChart3D;
+ (id)stackedAreaChart3D;
+ (id)areaChart3D;
+ (id)lineChart3D;
+ (id)columnChart3D;
+ (id)bubbleChart;
+ (id)twoYAxisChart;
+ (id)mixedChart;
+ (id)stackedAreaChart;
+ (id)stackedColumnChart;
+ (id)stackedBarChart;
+ (id)scatterChart;
+ (id)areaChart;
+ (id)lineChart;
+ (id)columnChart;
+ (id)barChart;
+ (id)pieChart;
- (id)p_debugDescription;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)supportsShowLabelsInFrontOption;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (unsigned long long)maxCellsToCheckForGridValueType;
- (_Bool)supportsIncrementalResize;
- (_Bool)supportsBubbleOptions;
- (_Bool)supportsSharedAndSeparateX;
- (id)allCDESectionLabels;
- (_Bool)supportsCategoryLabelsInChartRangeEditor;
- (_Bool)isMultiData;
- (_Bool)supportsMoreThanOneLiveCategory;
- (_Bool)supportsIndividualShadowRendering;
- (_Bool)isPie;
- (_Bool)isHorizontal;
- (_Bool)supportsCategoryAxisPlotToEdgesOption;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsCategoryAxisMinorTickmarks;
- (_Bool)supportsTickmarks;
- (_Bool)supportsAxisLine;
- (_Bool)supportsAxisLabelsOrientation;
- (_Bool)supportsValueAxisLabelsPosition;
- (_Bool)supportsMultipleValueScales;
- (_Bool)supportsMinorGridlines;
- (_Bool)supportsElementChunking;
- (int)stackingSignRule;
- (_Bool)supportsSymbolOverhang;
- (id)supportedAxisScales;
- (_Bool)supportsPercentNumberFormatting;
- (_Bool)supportsLabelExplosion;
- (_Bool)supportsElementSeriesNames;
- (_Bool)supportsErrorBarsScatterX;
- (_Bool)supportsErrorBars;
- (_Bool)supportsTrendLines;
- (_Bool)supportsReverseChunking;
- (_Bool)supportsBackgroundFill;
- (_Bool)supportsEditing;
- (_Bool)supportsValueLabels;
- (_Bool)supportsSeriesStroke;
- (_Bool)supportsSeriesFill;
- (_Bool)supportsSeriesShadow;
- (_Bool)supportsSeriesLabels;
- (_Bool)supportsGroupedShadows;
- (_Bool)supportsShadowOffset;
- (_Bool)drawValueLabelsForZero;
- (_Bool)requiresYAxisOrdinal;
- (_Bool)requiresSeparateLabelsRenderPass;
- (_Bool)supportsMultipleSeriesTypes;
- (_Bool)reverseSingleColumnLegendOrder;
- (id)defaultDataFileName;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (_Bool)supportsEditingForAxisID:(id)arg1;
- (id)categoryAxisIDs;
- (id)valueAxisIDs;
- (id)genericToSpecificPropertyMap;
- (_Bool)supportsBorderFrame;
- (Class)presetImagerClass;
- (id)supportedSeriesTypes;
- (Class)sageGeometeryHelperClass;
- (Class)repClass;
- (Class)layoutClass;
- (Class)chartLayoutClass;
- (Class)chartLayoutItemClass;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (_Bool)approximatesTitleAccommodationUsingLegendSize;
- (struct CGSize)minimumChartBodySize;
- (id)animationDeliveryStylesForFilter:(id)arg1;
- (_Bool)explosionAffectsChartBodyBounds;
- (id)animationFiltersWithDefaultFilters:(id)arg1;
- (struct UIEdgeInsets)swatchImageEdgeInsetsForSize:(struct CGSize)arg1;
- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (int)chartBodyBoundsDefinition;
- (_Bool)supportsCategoryAxisLabels;
- (unsigned long long)presentationDimension;
- (id)otherDimensionChartType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFeatureClass:(Class)arg1;
- (id)init;
- (id)timeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3 deliveryStyle:(unsigned long long)arg4;
- (id)cascadeTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;
- (id)linearTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;
- (double)categoryAxisTitleRotation;
- (double)valueAxisTitleRotation;
- (id)titlePositionerWithInfo:(id)arg1 scene:(id)arg2;
- (struct CGSize)mungeBodySize:(struct CGSize)arg1;
- (_Bool)layoutFrameShouldEncloseInfoGeometry;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;
- (id)g_genericToSpecificPropertyMapBubble;
- (id)g_genericToSpecificPropertyMapTwoAxis;
- (id)g_genericToSpecificPropertyMapMixed;
- (id)g_genericToSpecificPropertyMapStackedArea;
- (id)g_genericToSpecificPropertyMapStackedBar;
- (id)g_genericToSpecificPropertyMapStackedColumn;
- (id)g_genericToSpecificPropertyMapScatter;
- (id)g_genericToSpecificPropertyMapLine;
- (id)g_genericToSpecificPropertyMapArea;
- (id)g_genericToSpecificPropertyMapColumn;
- (id)g_genericToSpecificPropertyMapBar;
- (id)g_genericToSpecificPropertyMapPie;

@end

__attribute__((visibility("hidden")))
@interface TSCH2DChartType : TSCHChartType
{
}

- (_Bool)supportsIndividualShadowRendering;
- (id)animationDeliveryStylesForFilter:(id)arg1;
- (Class)sageGeometeryHelperClass;
- (Class)repClass;
- (Class)layoutClass;
- (Class)chartLayoutClass;
- (Class)chartLayoutItemClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartType : TSCH2DChartType
{
}

+ (id)allAnimationFilters;
+ (tvec3_17f03ce0)adjustedScaleForInfoChartScale:(const tvec3_17f03ce0 *)arg1 chartType:(id)arg2 barShape:(int)arg3;
- (_Bool)supportsIncrementalResize;
- (_Bool)needsRefinementForInwardLayout;
- (unsigned long long)depthRatioDimension;
- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (double)minDepthRatio;
- (struct CGSize)minimumChartBodySize;
- (id)columnShapeUIName;
- (_Bool)supportsInterSetDepthGap;
- (_Bool)supportsColumnShape;
- (_Bool)supportsGroupedShadows;
- (_Bool)supportsShadowOffset;
- (_Bool)supportsBevels;
- (_Bool)isHomogeneous;
- (id)renderers;
- (id)animationFiltersWithDefaultFilters:(id)arg1;
- (id)sceneWithChartInfo:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (Class)stageClass;
- (id)categoryLabelPositioner;
- (id)valueLabelPositioner;
- (int)labelOrientation;
- (id)animationDeliveryStylesForFilter:(id)arg1;
- (id)animationFilters;
- (_Bool)supportsBubbleOptions;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsSeriesStroke;
- (_Bool)supportsSeriesFill;
- (_Bool)supportsSeriesShadow;
- (_Bool)supportsErrorBars;
- (_Bool)supportsTrendLines;
- (_Bool)supportsCategoryAxisMinorTickmarks;
- (_Bool)supportsTickmarks;
- (_Bool)supportsAxisLine;
- (_Bool)supportsAxisLabelsOrientation;
- (_Bool)supportsValueAxisLabelsPosition;
- (_Bool)supportsMinorGridlines;
- (_Bool)supportsBorderFrame;
- (_Bool)supportsBackgroundFill;
- (_Bool)approximatesTitleAccommodationUsingLegendSize;
- (int)chartBodyBoundsDefinition;
- (Class)presetImagerClass;
- (Class)sageGeometeryHelperClass;
- (Class)repClass;
- (Class)layoutClass;
- (Class)chartLayoutClass;
- (Class)chartLayoutItemClass;
- (unsigned long long)presentationDimension;
- (tvec3_17f03ce0)adjustedScaleForInfoChartScale:(const tvec3_17f03ce0 *)arg1 barShape:(int)arg2;
- (_Bool)layoutFrameShouldEncloseInfoGeometry;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartType : TSCH2DChartType
{
}

+ (id)g_genericToSpecificPropertyMapCategoryAxis;
- (id)animationDeliveryStylesForFilter:(id)arg1;
- (id)animationFiltersWithDefaultFilters:(id)arg1;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsErrorBars;
- (_Bool)supportsTrendLines;
- (_Bool)supportsSeriesShadow;
- (_Bool)supportsGroupedShadows;
- (id)p_genericToSpecificPropertyMap;
- (id)genericToSpecificPropertyMap;
- (_Bool)isMultiData;
- (Class)repClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypePie : TSCH2DChartType
{
}

- (id)animationDeliveryStylesForFilter:(id)arg1;
- (_Bool)explosionAffectsChartBodyBounds;
- (Class)repClass;
- (Class)chartLayoutItemClass;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;
- (struct CGSize)mungeBodySize:(struct CGSize)arg1;
- (_Bool)layoutFrameShouldEncloseInfoGeometry;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeBar : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeColumn : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeArea : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeLine : TSCH2DChartType
{
}

- (_Bool)supportsSeriesFill;
- (_Bool)supportsCategoryAxisPlotToEdgesOption;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeScatter : TSCH2DChartType
{
}

- (id)allCDESectionLabels;
- (_Bool)supportsErrorBarsScatterX;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeBubble : TSCHChartTypeScatter
{
}

- (id)allCDESectionLabels;
- (id)userInterfaceName;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedColumn : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedBar : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedArea : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeMixed : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeTwoAxis : TSCH2DChartType
{
}

- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeMultiDataColumn : TSCHMultiDataChartType
{
}

- (Class)presetImagerClass;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (Class)repClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeMultiDataBar : TSCHMultiDataChartType
{
}

- (Class)presetImagerClass;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (Class)repClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeMultiDataScatter : TSCHMultiDataChartType
{
}

- (id)defaultDataFileName;
- (_Bool)supportsSeriesStroke;
- (Class)presetImagerClass;
- (id)allCDESectionLabels;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (Class)repClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeMultiDataBubble : TSCHChartTypeMultiDataScatter
{
}

- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (id)allCDESectionLabels;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (Class)repClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeColumn3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedColumn3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (_Bool)supportsBevels;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;
- (id)timeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3 deliveryStyle:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeBar3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;
- (double)categoryAxisTitleRotation;
- (double)valueAxisTitleRotation;
- (id)titlePositionerWithInfo:(id)arg1 scene:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedBar3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (_Bool)supportsBevels;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;
- (id)timeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3 deliveryStyle:(unsigned long long)arg4;
- (double)categoryAxisTitleRotation;
- (double)valueAxisTitleRotation;
- (id)titlePositionerWithInfo:(id)arg1 scene:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeLine3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (_Bool)supportsElementChunking;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)defaultDataFileName;
- (id)userInterfaceName;
- (id)init;
- (id)cascadeTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeArea3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)defaultDataFileName;
- (id)userInterfaceName;
- (id)init;
- (id)cascadeTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypeStackedArea3D : TSCH3DChartType
{
}

- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)init;
- (id)cascadeTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTypePie3D : TSCH3DChartType
{
}

- (_Bool)approximatesTitleAccommodationUsingLegendSize;
- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (id)categoryLabelPositioner;
- (id)valueLabelPositioner;
- (id)animationDeliveryStylesForFilter:(id)arg1;
- (_Bool)supportsGroupedShadows;
- (_Bool)supportsBevels;
- (id)defaultSeriesType:(unsigned long long)arg1;
- (id)userInterfaceName;
- (id)animationFilters;
- (id)init;
- (id)cascadeTimeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3;
- (id)timeSliceWithChartInfo:(id)arg1 renderSeriesProvider:(id)arg2 animationClass:(Class)arg3 deliveryStyle:(unsigned long long)arg4;
- (id)titlePositionerWithInfo:(id)arg1 scene:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartValueAxis : TSCHChartAxis
{
}

+ (id)axisForInfo:(id)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)defaultProperties;
- (id)p_GetGenericToValuePropertyMap;
- (_Bool)supportsAxisValueLabels;
- (_Bool)editableFormatForValueStrings;
- (double)validateUserMaxForDouble:(double)arg1;
- (double)validateUserMinForDouble:(double)arg1;
- (id)p_computeMajorGridlinesAutomaticallyInAnalysis:(id)arg1 forHorizChart:(_Bool)arg2;
- (CDStruct_41cea37a)p_axisDescFromMinValue:(double)arg1 maxValue:(double)arg2 userValues:(long long)arg3;
- (CDStruct_41cea37a)p_calculateAxisDescFromMinValue:(double)arg1 maxValue:(double)arg2 userValues:(long long)arg3;
- (double)p_calculateAxisDeltaFromSpread:(double)arg1 spreadRanges:(const CDStruct_c3b9c2ee *)arg2;
- (CDStruct_41cea37a)p_axisDescFromFixedMinValue:(double)arg1 fixedMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromNegativeMinValue:(double)arg1 fixedPositiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromPositiveMinValue:(double)arg1 fixedPositiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromFixedNegativeMinValue:(double)arg1 positiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromFixedPositiveMinValue:(double)arg1 positiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromNegativeMinValue:(double)arg1 positiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (CDStruct_41cea37a)p_axisDescFromPositiveMinValue:(double)arg1 positiveMaxValue:(double)arg2 spreadRanges:(const CDStruct_c3b9c2ee *)arg3;
- (void)p_includeZeroWithMinValue:(double *)arg1 maxValue:(double *)arg2 userValues:(long long)arg3;
- (id)p_computeMajorGridlines:(long long)arg1 analysis:(id)arg2;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;
- (void)adjustMinMaxForDataRangeInAnalysis:(id)arg1;
- (void)updateModelMinMaxForErrorBarsOnSeries:(id)arg1 axisID:(id)arg2 analysis:(id)arg3;
- (void)updateModelMinMaxForTrendLineOnSeries:(id)arg1 axisID:(id)arg2 analysis:(id)arg3;
- (void)updateModelMinMaxInAnalysis:(id)arg1;
@property(readonly, nonatomic) NSNumber *userMin;
@property(readonly, nonatomic) NSNumber *userMax;
- (void)dealloc;
- (pair_952e027e)labelEnumeratorPair;
- (id)g_genericToSpecificPropertyMap;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisRenderer : TSCHRenderer <TSCHCompositeRendering>
{
    TSCHSelectionPath *mAxisTitleSelectionPath;
    struct CGRect mStartingEditingFrame;
    NSString *mEditingString;
}

@property(retain, nonatomic) NSString *editingString; // @synthesize editingString=mEditingString;
- (void)useEditedString:(id)arg1;
- (struct CGRect)frameForEditingTextForSelectionPath:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (_Bool)p_isTitleVisible;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (void)drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_addTickmarkPaths:(struct CGContext *)arg1 axis:(id)arg2 locations:(id)arg3 stroke:(id)arg4 width:(float)arg5;
- (void)p_debugRenderTickmarkArea:(struct CGContext *)arg1;
- (void)p_addLinePath:(struct CGContext *)arg1 stroke:(id)arg2;
- (void)p_drawTitle:(struct CGContext *)arg1 rangePtr:(struct _NSRange *)arg2;
- (_Bool)isCompositeRenderer;
- (id)axisLayoutItem;
- (void)willBeginTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (id)transparencyLayers;
- (_Bool)needsAnySeparateLayers;
- (_Bool)p_needsSharedTickMarkLayer;
- (_Bool)p_needsPositionBasedTransparencyLayer;
- (id)axisTitleSelectionPath;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBackgroundRenderer : TSCHRenderer
{
}

- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2 style:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBarElementsRenderer : TSCHRenderer
{
    _Bool mVertical;
    _Bool mTouchInResize;
    _Bool mTouchInBody;
    unsigned long long mHitSeriesIndex;
    unsigned long long mHitValueIndex;
    double mHitFudgeOffset;
    _Bool mResizeIsOutsideBody;
    struct CGRect mLastDrawRect;
}

- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_drawLabels:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_drawBars:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (struct CGRect)renderingElementFrameForBarElementFrame:(struct CGRect)arg1 groupIndex:(unsigned long long)arg2 modelCache:(id)arg3 stroke:(id)arg4 viewScale:(double)arg5 contextInfo:(CDStruct_71493e60)arg6 returningFillRect:(struct CGRect *)arg7 strokeRect:(struct CGRect *)arg8;
- (CDStruct_d2b197d1)p_valueRangeForModelCache:(id)arg1 groupIndex:(unsigned long long)arg2;
- (struct CGRect)barElementFrameForSeries:(id)arg1 groupIndex:(unsigned long long)arg2;
- (_Bool)supportsSeparateLabelsRenderPass;
- (int)chunkPlane;
- (id)initWithChartRep:(id)arg1 layoutItem:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStackedBarElementsRenderer : TSCHChartBarElementsRenderer
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBorderAxisRenderer : TSCHChartAxisRenderer
{
}

- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartCategoryAxisRenderer : TSCHChartAxisRenderer
{
}

- (struct CGRect)frameForEditingTextForSelectionPath:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (_Bool)p_doesSelectionPathReferToAxisSeriesLabel:(id)arg1;
- (_Bool)p_doesSelectionPathReferToAxisLabel:(id)arg1;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (unsigned long long)p_seriesIndexForSelectionPath:(id)arg1;
- (unsigned long long)p_categoryIndexForSelectionPath:(id)arg1;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (void)drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
- (void)p_drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3 limitRenderLabels:(int)arg4 limitLabelIndex:(unsigned long long)arg5 rangePtr:(struct _NSRange *)arg6;
- (id)transparencyLayers;
- (id)categoryAxisLayoutItem;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAbstractLineElementsRenderer : TSCHRenderer
{
}

- (void)p_renderLabelsIntoContext:(struct CGContext *)arg1 seriesIndex:(unsigned long long)arg2 model:(id)arg3 modelCache:(id)arg4 bodyLayoutItem:(id)arg5 valueSet:(id)arg6;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_finishContextAfterRendering:(struct CGContext *)arg1 modelCache:(id)arg2 didEnableTransparencyLayer:(_Bool)arg3;
- (void)p_setupContextForRendering:(struct CGContext *)arg1 layerRect:(struct CGRect)arg2 modelCache:(id)arg3 shadow:(id)arg4 outDidEnableTransparencyLayer:(_Bool *)arg5;
- (id)symbolTransformsForRenderingElements;
- (struct CGAffineTransform)p_adjustTransformForAADefeatInContext:(struct CGContext *)arg1 inTransform:(struct CGAffineTransform)arg2 forSeriesShape:(struct CGPath *)arg3 inBodyBounds:(struct CGRect)arg4;
- (id)p_findChartRootLayoutItem:(id)arg1;
- (void)p_clipOutSymbolsInContext:(struct CGContext *)arg1 withTransformArray:(struct CGAffineTransform *)arg2 withCount:(unsigned long long)arg3 forSeries:(id)arg4;
- (_Bool)useBlendModeCopyForTransparencyLayer;
- (int)chunkPlane;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartLineElementsRenderer : TSCHChartAbstractLineElementsRenderer
{
}

- (_Bool)supportsSeparateLabelsRenderPass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBubbleElementsRenderer : TSCHChartAbstractLineElementsRenderer
{
}

- (_Bool)useBlendModeCopyForTransparencyLayer;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAreaElementsRenderer : TSCHChartAbstractLineElementsRenderer
{
}

- (_Bool)supportsSeparateLabelsRenderPass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStackedAreaElementsRenderer : TSCHChartAbstractLineElementsRenderer
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCHChartScatterElementsRenderer : TSCHChartAbstractLineElementsRenderer
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCHChartPieElementsRenderer : TSCHRenderer
{
    struct CGPoint mHitPoint;
    unsigned long long mHitSeries;
    float mHitStartAngle;
    float mHitRadius;
    float mHitExplosion;
    _Bool mDidMoveDuringTouchIfNotThenRotateChartForDemo;
    NSIndexSet *mPartialRenderingSeriesIndexSet;
    _Bool mPartialRenderingInclusionFlag;
}

- (struct CGRect)chartLayoutSpaceRenderingRect;
- (void)drawAll;
- (void)drawAllButSeriesIndicies:(id)arg1;
- (void)drawOnlySeriesIndicies:(id)arg1;
- (_Bool)p_shouldRenderSeriesIndex:(unsigned long long)arg1;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (struct CGLayer *)p_newPreRenderedImageWithContext:(struct CGContext *)arg1 path:(struct CGPath *)arg2 fill:(id)arg3 stroke:(id)arg4 shadow:(id)arg5 outUserSpaceLayerBounds:(struct CGRect *)arg6;
- (struct CGLayer *)p_newCGLayerForUserSpaceRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 outUserSpaceLayerBounds:(struct CGRect *)arg3;
- (void)p_drawWedgePathIntoContext:(struct CGContext *)arg1 path:(struct CGPath *)arg2 fill:(id)arg3 stroke:(id)arg4 opacity:(double)arg5;
- (void)p_drawOnlyShadow:(id)arg1 forImage:(struct CGLayer *)arg2 intoRect:(struct CGRect)arg3 intoContext:(struct CGContext *)arg4 atViewScale:(double)arg5 usingBlendMode:(int)arg6 opacity:(double)arg7;
- (void)p_drawOnlyShapeImage:(struct CGLayer *)arg1 intoRect:(struct CGRect)arg2 intoContext:(struct CGContext *)arg3 usingBlendMode:(int)arg4 opacity:(double)arg5;
- (int)chunkPlane;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHRenderer : NSObject <TSCHSupportsTextEditing>
{
    id <TSCHSupportsRendering> mChartRep;
    TSCHChartLayoutItem *mChartLayoutItem;
}

@property(readonly, nonatomic) id <TSCHSupportsRendering> chartRep; // @synthesize chartRep=mChartRep;
- (struct CGRect)tLayerRectForContext:(struct CGContext *)arg1;
- (struct CGRect)chartLayoutSpaceRenderingRect;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (void)p_debugLayoutInContext:(struct CGContext *)arg1;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)strokeRectInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 color:(struct CGColor *)arg3;
- (void)renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (int)chunkPlane;
- (int)textDrawingFlagForSelectionPath:(id)arg1;
- (double)frameHeightChangeForPath:(id)arg1;
- (void)useEditedString:(id)arg1;
- (id)textEditorForSelectionPath:(id)arg1 chartEditor:(id)arg2;
- (struct CGRect)frameForEditingTextForSelectionPath:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1;
@property(readonly, nonatomic) struct CGColor *debugColor;
@property(readonly, nonatomic) _Bool debugLayout;
@property(readonly, nonatomic) _Bool supportsSeparateLabelsRenderPass;
- (_Bool)isCompositeRenderer;
@property(readonly, nonatomic) double viewScale;
@property(readonly, nonatomic) TSCHChartLayoutItem *layoutItem;
@property(readonly, nonatomic) TSCHChartModel *model;
@property(readonly, nonatomic) TSCHChartInfo *chartInfo;
- (void)dealloc;
- (id)initWithChartRep:(id)arg1 layoutItem:(id)arg2;
- (void)drawErrorBarsInContext:(struct CGContext *)arg1 chartVertical:(_Bool)arg2 elementRenderClass:(Class)arg3;
- (void)drawTrendLinesInContext:(struct CGContext *)arg1 chartVertical:(_Bool)arg2 elementRenderClass:(Class)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTitleRenderer : TSCHRenderer
{
    struct CGRect mStartingEditingFrame;
}

- (double)frameHeightChangeForPath:(id)arg1;
- (struct CGRect)frameForEditingTextForSelectionPath:(id)arg1;
- (_Bool)canEditTextForSelectionPath:(id)arg1;
- (struct CGRect)p_rawFrameForEditingTextForSelectionPath:(id)arg1;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_drawTitle:(struct CGContext *)arg1 rangePtr:(struct _NSRange *)arg2;
- (void)useEditedString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartValueAxisRenderer : TSCHChartAxisRenderer
{
    unsigned long long mEditingLabelIndex;
}

- (void)drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
- (id)labelStringForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (id)labelsLayoutItem;
- (id)transparencyLayers;
- (id)valueAxisLayoutItem;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartInfo : NSObject <TSCHStyleOwning, TSCHUnretainedParent, TSDMixing, NSCopying>
{
    TSCHChartModel *mModel;
    id <TSCHStyleActAlike> mStyle;
    id <TSCHStyleActAlike> mNonStyle;
    TSCHChartType *mChartType;
    TSCHLegendModel *mLegendModel;
    TSCHChartMediator *mChartMediator;
    TSPLazyReference *mLazyPreset;
    struct CGRect mInnerChartFrame;
    id <TSCHStyleActAlike> mLegendStyle;
    id <TSCHStyleActAlike> mLegendNonStyle;
    NSMutableArray *mValueAxisStyles;
    NSMutableArray *mCategoryAxisStyles;
    NSMutableArray *mValueAxisNonStyles;
    NSMutableArray *mCategoryAxisNonStyles;
    NSMutableArray *mThemeSeriesStyles;
    NSMutableArray *mPrivateSeriesStyles;
    NSMutableArray *mSeriesNonStyles;
    NSMutableArray *mParagraphStyles;
    struct CGPoint mPreviewOrigin;
    _Bool mDisplayMessageOnRepCreation;
    NSString *mMessageString;
    double mMessageDuration;
    TSDInfoGeometry *mNonInfoGeometry;
    TSCHChartDrawableInfo *mDrawableInfo;
    _Bool mNeedsCalcEngineDependentUpgrade;
    _Bool mNeedsCalcEngineDependentImport;
    NSMutableDictionary *mStyleViewProxyMap;
    NSArray *mStyleViewProxyParagraphStyleArray;
    unsigned long long mLastSeriesIndex;
    NSString *mLastAppliedFillSetLookupString;
}

+ (_Bool)groupedShadowsForChartModel:(id)arg1;
+ (id)scale3DPropertyToConstantDepthInfoChartScaleMappingsWithBarShape:(int)arg1 conversionBlock:(CDUnknownBlockType)arg2;
+ (id)p_chartTypeTo3DScalePropertyPairs;
+ (id)paragraphStyleIdentifierForRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)seriesStyleIdentifierForRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)categoryAxisStyleIdentifierForRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)valueAxisStyleIdentifierForRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)legendStyleIdentifierForRoleIndex:(unsigned long long)arg1;
+ (id)chartStyleIdentifierForRoleIndex:(unsigned long long)arg1;
+ (Class)classForLegendNonstyle;
+ (Class)classForLegendStyle;
+ (Class)classForAxisNonstyle;
+ (Class)classForAxisStyle;
+ (Class)classForSeriesNonstyle;
+ (Class)classForSeriesStyle;
+ (Class)classForChartNonstyle;
+ (Class)classForChartStyle;
+ (id)specificNumberFormatTypeProperties;
+ (id)specificPropertiesThatCanContainCustomFormats;
+ (id)specificPropertiesThatCanContainCustomDateFormats;
+ (id)specificPropertiesThatCanContainCustomNumberFormats;
+ (id)paragraphStylePropertiesChartsUse;
+ (id)propertiesThatInvalidateModel;
+ (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2 forStyleOwner:(id)arg3;
+ (id)adjustNumberFormatTypeValue:(id)arg1 forChartModel:(id)arg2 gridValueType:(int)arg3 hasCustomFormat:(_Bool)arg4;
+ (int)adjustNumberFormatType:(int)arg1 forChartModel:(id)arg2 gridValueType:(int)arg3 hasCustomFormat:(_Bool)arg4;
+ (id)p_currentThreadSceneAreaLayoutCache;
+ (void)setCurrentThreadSceneAreaLayoutCache:(id)arg1;
+ (double)beginValueForStackedBarSeries:(id)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;
+ (id)genericParagraphStyleIndexProperties;
+ (id)paragraphStyleIndexProperties;
+ (id)p_stylesheetFromOrderedArrayOfSources:(id)arg1;
@property(nonatomic) double informationalMessageDuration; // @synthesize informationalMessageDuration=mMessageDuration;
@property(retain, nonatomic) NSString *informationalMessageString; // @synthesize informationalMessageString=mMessageString;
@property(nonatomic) _Bool displayMessageOnRepCreation; // @synthesize displayMessageOnRepCreation=mDisplayMessageOnRepCreation;
@property(copy, nonatomic) NSString *lastAppliedFillSetLookupString; // @synthesize lastAppliedFillSetLookupString=mLastAppliedFillSetLookupString;
@property(readonly, nonatomic) TSCHChartDrawableInfo *drawableInfo; // @synthesize drawableInfo=mDrawableInfo;
@property(nonatomic) struct CGPoint previewOrigin; // @synthesize previewOrigin=mPreviewOrigin;
@property(retain, nonatomic) TSCHChartMediator *mediator; // @synthesize mediator=mChartMediator;
@property(retain, nonatomic) TSCHChartType *chartType; // @synthesize chartType=mChartType;
@property(retain, nonatomic) TSCHLegendModel *legend; // @synthesize legend=mLegendModel;
@property(retain, nonatomic) TSCHChartModel *model; // @synthesize model=mModel;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (void)performDeferredUpgradeAndImportOperations;
@property(readonly, nonatomic) _Bool wantsDeferredUpgradeOrImport;
- (struct CGRect)chartBodyBoundsForSageImportWithSageChartType:(_Bool)arg1;
- (id)fillsForSeriesAndTheme;
- (id)commandToChangeAllChartFontsToFamilyName:(id)arg1;
- (void)p_breakUpFontName:(id)arg1 isBold:(_Bool *)arg2 isItalic:(_Bool *)arg3;
- (id)commandToScaleAllChartFontsBy:(double)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)scaleAllStrokesInStyle:(id)arg1 byRatio:(double)arg2;
- (id)paragraphStyleForSelectionPath:(id)arg1;
- (int)paragraphStylePropertyForSelectionPath:(id)arg1;
- (id)styleOwnerForSelectionPath:(id)arg1;
- (int)stringPropertyForSelectionPath:(id)arg1;
- (id)stringForSelectionPath:(id)arg1;
- (void)setPreset:(id)arg1;
@property(readonly, nonatomic) TSCHChartStylePreset *preset;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)styleOwnerFromSwapType:(int)arg1 andIndex:(unsigned long long)arg2;
- (id)applyStyleSwapTuples:(id)arg1;
- (id)childInfos;
- (id)commandSetCategoryName:(id)arg1 forCategoryIndex:(unsigned long long)arg2;
- (id)commandSetSeriesName:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (double)sageDepthFactorForExport;
- (void)updateTitlesForExportingModel:(id)arg1;
- (void)chartTypeDidChangeWithDetails:(id)arg1;
- (void)modelDidInvalidateWithDetails:(id)arg1;
- (void)chartDidInvalidateWithProperties:(id)arg1;
- (void)setChartNonstyle:(id)arg1;
- (void)setSeriesNonstyle:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCategoryAxisNonstyle:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setValueAxisNonstyle:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)categoryAxisNonstyleAtIndex:(unsigned long long)arg1;
- (id)valueAxisNonstyleAtIndex:(unsigned long long)arg1;
- (id)categoryAxisStyleAtIndex:(unsigned long long)arg1;
- (id)valueAxisStyleAtIndex:(unsigned long long)arg1;
- (unsigned long long)categoryAxisStyleCount;
- (unsigned long long)valueAxisStyleCount;
- (id)seriesNonstyleForSeriesIndex:(unsigned long long)arg1;
- (id)seriesStyleForSeriesIndex:(unsigned long long)arg1;
- (id)nonStyleForAxis:(id)arg1;
- (id)styleForAxis:(id)arg1;
- (unsigned long long)numberOfThemeSeriesStyles;
- (_Bool)seriesStyleIsPrivate:(id)arg1;
- (id)nonStyleForSeries:(id)arg1;
- (id)seriesStyleForSeries:(id)arg1;
- (id)legendNonStyle;
- (id)legendStyle;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned long long)arg1 withSeriesCount:(unsigned long long)arg2 forTheme:(id)arg3;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned long long)arg1 forTheme:(id)arg2;
- (id)masterFontNameForInspectors;
- (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2;
- (id)swapTuplesForMutationsForImport:(id)arg1;
- (id)swapTuplesForMutations:(id)arg1;
- (id)p_swapTuplesForMutations:(id)arg1 isForImport:(_Bool)arg2;
- (id)defaultProperties;
- (id)nonstyle;
- (id)style;
- (id)chartInfo;
- (id)valueForProperty:(int)arg1;
- (id)objectValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
- (_Bool)hasObjectValueForProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasFloatValueForProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasIntValueForProperty:(int)arg1 value:(int *)arg2;
- (int)defaultPropertyForGeneric:(int)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)p_genericToDefaultPropertyMap;
- (void)performBlockWithStylesheetForAddingStyles:(CDUnknownBlockType)arg1;
- (unsigned long long)addParagraphStyle:(id)arg1;
- (id)paragraphStyles;
- (id)paragraphStyleAtIndex:(unsigned long long)arg1;
- (int)elementKind;
@property(readonly, nonatomic) _Bool isPhantom;
- (Class)layoutClass;
- (Class)repClass;
- (void)setDefaultLegendPositionIfNeededWithOptionalLayout:(id)arg1;
- (double)p_dataSetNameAccomodationWithOptionalLayout:(id)arg1;
- (double)p_titleAccommodationWithLegendSize:(struct CGSize)arg1 optionalLayout:(id)arg2;
- (void)setChartType:(id)arg1 gridRowIds:(id)arg2 gridColumnIds:(id)arg3;
- (void)p_setChartType:(id)arg1 andSetLegendDefaults:(_Bool)arg2;
- (void)p_setChartType:(id)arg1 andSetLegendDefaults:(_Bool)arg2 gridRowIds:(id)arg3 gridColumnIds:(id)arg4;
- (void)setInfoGeometryByUpdatingLegendGeometryAccommodatedForInitialLayoutGeometry:(id)arg1;
- (id)p_infoGeometryForGeometry:(id)arg1 isCircumscribing:(_Bool)arg2;
- (id)infoGeometryForDesiredCircumscribingGeometry:(id)arg1;
- (id)infoGeometryForDesiredPureLayoutGeometry:(id)arg1;
- (id)infoGeometryForVisuallyCenteringOnUnscaledCanvasPoint:(struct CGPoint)arg1;
- (void)chartMoveToPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (struct CGRect)resizedLegendFrame:(struct CGRect)arg1 oldChartSize:(struct CGSize)arg2 newChartSize:(struct CGSize)arg3;
@property(readonly, nonatomic) int gridDirection;
@property(readonly, nonatomic) struct CGSize minimumChartBodySize;
- (void)setLastAppliedFillSetIdentifier:(id)arg1;
- (id)modelForDataSetIndex:(unsigned long long)arg1;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)setGeometry:(id)arg1 clearObjectPlaceholderFlag:(_Bool)arg2;
- (void)setGeometry:(id)arg1 omitLegendResize:(_Bool)arg2 clearObjectPlaceholderFlag:(_Bool)arg3;
- (void)setGeometry:(id)arg1 omitLegendResize:(_Bool)arg2;
- (id)context;
- (void)willModify;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;
- (id)p_copyStyleAndNonStyleArray:(id)arg1 withZone:(struct _NSZone *)arg2 context:(id)arg3;
- (void)clearParent;
- (void)dealloc;
- (id)initWithChartType:(id)arg1 legendShowing:(id)arg2 chartBodyFrame:(id)arg3 chartAreaFrame:(id)arg4 circumscribingFrame:(id)arg5 legendFrame:(id)arg6 stylePreset:(id)arg7 privateSeriesStyles:(id)arg8 chartNonStyle:(id)arg9 legendNonStyle:(id)arg10 valueAxisNonStyles:(id)arg11 categoryAxisNonStyles:(id)arg12 seriesNonStyles:(id)arg13;
- (id)init;
- (id)p_init;
- (id)commandToApplyViewProxiesToModel;
- (void)clearViewStyleProxyForLayouts:(id)arg1;
- (void)setViewStyleProxyParagraphStyleArray:(id)arg1 layouts:(id)arg2;
- (void)addViewStyleProxyForMutationTuples:(id)arg1 layouts:(id)arg2;
- (void)p_invalidateCachesInLayouts:(id)arg1;
- (id)viewOverrideMapForStyleOwner:(id)arg1;
- (id)create3DSceneWithLayoutSettings:(const CDStruct_9aa9521f *)arg1;
@property(nonatomic) CDStruct_9aa9521f defaultLayoutSettings;
@property(readonly, nonatomic) _Bool hasSetDefaultLayoutSettings;
- (void)debugLayoutCache;
@property(readonly, nonatomic) TSCHChartLayoutCache *sceneAreaLayoutItemCache;
- (_Bool)isSingleCircleSpecialCase;
- (_Bool)isSingleCircleSpecialCaseOutSeries:(id *)arg1;
- (float)maximumExplosionOfAllSeriesExcept:(id)arg1;
- (float)maximumExplosion;
- (float)radiusForFrame:(struct CGRect)arg1 withMaxExplosion:(float)arg2;
- (float)minFrameDimensionForRadius:(float)arg1 withMaxExplosion:(float)arg2;
- (void)performUpgradeForPersistentChartInfo:(id)arg1 archiveVersion:(unsigned long long)arg2 innerChartFrame:(struct CGRect)arg3 isFromPasteboard:(_Bool)arg4;
- (void)loadFromPreUFFArchive:(const struct ChartInfoArchive *)arg1 unarchiver:(id)arg2 persistentChartInfo:(id)arg3;
- (id)g_genericToDefaultPropertyMap;
- (id)allStyleOwners;
- (unsigned long long)nonStyleIndexForStyleOwnerRef:(id)arg1;
- (id)styleOwnerRefForStyleOwner:(id)arg1;
- (id)styleOwnerForRef:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)applyChartStyleState:(id)arg1;
- (void)p_duplicatePersistableMembersOfCopiedChartUsingContext:(id)arg1;
- (void)p_setDrawableInfo:(id)arg1;
- (id)p_copyStyleArray:(id)arg1 inContext:(id)arg2 withMapper:(id)arg3;
- (id)p_copyNonStyleArray:(id)arg1 inContext:(id)arg2;
- (unsigned long long)p_paragraphStyleIndexOfFirstCategoryAxisParagraphStyle;
- (id)tuplesToApplyState:(id)arg1;
- (id)chartStyleState;
- (void)saveToUnityArchive:(struct ChartArchive *)arg1 persistentChartInfo:(id)arg2 archiver:(id)arg3;
- (void)loadFromUnityArchive:(const struct ChartArchive *)arg1 unarchiver:(id)arg2 persistentChartInfo:(id)arg3;
- (id)p_allStylesAndNonStylesThatCanHaveCustomNumberFormats;
- (id)p_swapTuplesForApplyingPreset:(id)arg1 preservingAppearance:(_Bool)arg2;
- (id)p_swapTuplesForApplyingPresetRemovingOverrides:(id)arg1;
- (id)swapTuplesForApplyingPreset:(id)arg1 withBehavior:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartRep : TSWPTextHostRep <TSCHChartRepPlatformProtocols, TSCHSupportsRendering>
{
    NSArray *mRenderers;
    _Bool mBuildingChunks;
    int mChunkPhase;
    long long mCurrentChunk;
    _Bool mBuildingFinalBackground;
    _Bool mBuildingFinalElements;
    _Bool mChunkTexturesValid;
    _Bool mInZoom;
    unsigned long long mInDynamicStandinOperation;
    unsigned long long mInDynamicStandinLayoutOperation;
    _Bool mIsKPFExportForMultiData;
    TSCHSelectionPath *mActiveTextEditingPath;
    TSCHRendererLayer *mLegendLayer;
    _Bool mForceSeparateLegendLayer;
    _Bool mIsLayerBasedRep;
    _Bool mInvalidateLegendLayerForLayerBasedRep;
    TSCHChartLayout *mChartLayout;
    _Bool mWantsPreviewLayout;
    _Bool mEditorIsEditingInfo;
    TSCHMessageView *mMessageView;
    _Bool mMessageViewValid;
    _Bool mMediatorEditingHaloLayerPathValid;
    CAShapeLayer *mMediatorEditingHaloLayer;
    _Bool mLegendBorderHaloLayerPathValid;
    CAShapeLayer *mLegendBorderHaloLayer;
    _Bool mChartRepGoingAway;
    _Bool mCDEIsEditingInfo;
    _Bool mCDECausedSetNeedsDisplay;
    _Bool mDrawingSearchReference;
    CALayer *mSubselectionKnobLayer;
    _Bool mFinishedBecomingSelected;
    CDUnknownBlockType mDrawingOpStartBlock;
    CDUnknownBlockType mDrawingOpEndBlock;
    _Bool mAwaitingLegendSubselection;
    int mRenderPassChunkPhase;
    struct CGPoint mLastSubselectionLayerRelativeReferencePosition;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType drawingOpEndBlock; // @synthesize drawingOpEndBlock=mDrawingOpEndBlock;
@property(copy, nonatomic) CDUnknownBlockType drawingOpStartBlock; // @synthesize drawingOpStartBlock=mDrawingOpStartBlock;
@property(readonly, nonatomic) long long currentChunk; // @synthesize currentChunk=mCurrentChunk;
@property(readonly, nonatomic) _Bool chartRepGoingAway; // @synthesize chartRepGoingAway=mChartRepGoingAway;
@property(readonly, retain, nonatomic) TSCHSelectionPath *activeTextEditingPath; // @synthesize activeTextEditingPath=mActiveTextEditingPath;
@property(nonatomic) _Bool chunkTexturesValid; // @synthesize chunkTexturesValid=mChunkTexturesValid;
@property(readonly, nonatomic) _Bool drawingSearchReference; // @synthesize drawingSearchReference=mDrawingSearchReference;
@property(nonatomic) _Bool forceSeparateLegendLayer; // @synthesize forceSeparateLegendLayer=mForceSeparateLegendLayer;
- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)protected_dynamicStyleLayoutChangeDidEnd:(id)arg1;
- (void)protected_dynamicStyleLayoutChangeWillBegin:(id)arg1;
- (void)protected_dynamicStyleChangeDidEnd:(id)arg1;
- (void)protected_dynamicStyleChangeWillBegin:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)hitChartElements:(struct CGPoint)arg1;
- (id)hitChartElements:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)didAnimateFromCDE;
- (void)willAnimateIntoCDE;
- (void)endChartDataEditing;
- (void)beginChartDataEditing;
- (void)setNeedsDisplay;
- (_Bool)hasSubselection;
- (void)invalidateSubselectionKnobs;
- (id)selectedSeriesIndices;
- (id)subselectionLayer;
- (id)protected_haloLayersForHaloPositions:(id)arg1;
- (id)protected_knobLayersForKnobPositions:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (id)legendLayer;
- (void)releaseLegendLayer;
- (void)p_createLegendLayer;
- (id)legendLayerForLayerBasedRep;
- (_Bool)renderLegendIntoSeparateLayer;
- (void)invalidateLegendLayerForLayerBasedRep;
- (_Bool)p_usingSeparateLegendLayerForLayerBasedRep;
- (_Bool)shouldUseLegendLayerForLayerBasedRep;
- (_Bool)shouldApplyFractionalTranslationInRootForLegendLayer;
- (_Bool)isLegendOn;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (struct CGRect)outerShadowFrame;
- (void)p_validateLegendSelectionHalo;
- (void)p_invalidateLegendSelectionHalo;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)processChanges:(id)arg1;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)p_findUIStateChanged:(id)arg1;
- (void)p_removeOrShowAndPositionMessageOverlay;
- (void)p_invalidateMessageOverlay;
- (struct CGRect)rectForSelection:(id)arg1;
- (id)p_textImageForPath:(struct CGPath *)arg1 renderer:(id)arg2 selection:(id)arg3 shouldPulsate:(_Bool)arg4;
- (struct CGPath *)p_newPathForSearchSelection:(id)arg1;
@property(readonly, nonatomic) TSCHSearchSelection *selection;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (_Bool)isCanvasTextEditing;
- (void)selectAllEditedText;
- (void)endCanvasTextEditing;
- (_Bool)beginCanvasTextEditingForSelectionPath:(id)arg1;
- (void)beginCanvasTextEditingForSearchSelection:(id)arg1;
- (id)currentTextEditingSupporter;
- (id)p_findRendererForTextEditingSelectionPath:(id)arg1;
- (id)p_findRendererForSelectionPath:(id)arg1;
- (_Bool)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (void)p_validateChartTitleSelection;
- (_Bool)p_hasAnySubselection;
- (_Bool)p_textEditingInLegend;
- (_Bool)p_legendIsBeingMoved;
- (_Bool)p_legendIsBeingResized;
- (_Bool)p_legendIsSelected;
- (_Bool)rotationKnobHitByNaturalPoint:(struct CGPoint)arg1;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (_Bool)p_legendHitByLayoutPoint:(struct CGPoint)arg1;
- (_Bool)shadowsEnabled;
- (void)dynamicallyUpdatingLegendFrameWithTracker:(id)arg1;
- (void)knobTrackingDidEnd:(id)arg1;
- (void)knobTrackingDidBegin:(id)arg1;
- (void)setCurrentKnobTracker:(id)arg1;
- (id)newTrackerForKnob:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)p_updatePositionsOfLegendKnobs:(id)arg1;
- (void)p_updatePositionOfLegendKnob:(id)arg1;
- (void)viewScaleDidChange;
- (void)invalidateKnobs;
- (void)invalidateKnobPositions;
- (void)addKnobsToArray:(id)arg1;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;
- (_Bool)legendHitByUnscaledPoint:(struct CGPoint)arg1 distanceFromCenter:(struct CGPoint *)arg2;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (void)addChartKnobsToArray:(id)arg1;
- (id)knobForDynamicStyleChangeKey:(id)arg1;
- (_Bool)shouldShowKnobs;
- (void)updateKnobs;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (void)dynamicDragDidBegin;
- (_Bool)isDraggable;
- (_Bool)buildShouldUseRenderer:(id)arg1;
- (_Bool)planeIsVisible:(int)arg1;
- (int)planeState:(int)arg1 finalElements:(_Bool)arg2 chunkStage:(long long)arg3;
- (int)planeState:(int)arg1 finalElements:(_Bool)arg2;
- (int)p_backgroundLikePlaneStateForEffectiveStage:(long long)arg1;
- (id)renderValueIndexSetForSeries:(unsigned long long)arg1 finalElements:(_Bool)arg2 currentChunk:(long long)arg3;
- (id)renderValueIndexSetForSeries:(unsigned long long)arg1 finalElements:(_Bool)arg2;
- (id)renderValueIndexSetForSeries:(unsigned long long)arg1;
- (id)renderSeriesIndexSetForFinalElements:(_Bool)arg1 currentChunk:(long long)arg2;
- (id)renderSeriesIndexSetForFinalElements:(_Bool)arg1;
- (id)renderSeriesIndexSet;
- (_Bool)renderTrendLinesForSeriesIndex:(unsigned long long)arg1;
- (_Bool)renderLabels;
- (_Bool)renderElementsShadowOnly;
- (_Bool)renderElementsWithoutShadows;
- (_Bool)renderElements;
- (id)textureForContext:(id)arg1;
- (void)setTextureStage:(unsigned long long)arg1;
- (void)protected_renderChunkInBounds:(struct CGRect)arg1 textureSet:(id)arg2;
@property(readonly, nonatomic) unsigned long long chartDeliveryStyle;
@property(readonly, nonatomic) NSString *animationFilter;
- (void)p_validateMediatorEditingHaloLayer;
- (void)p_invalidateMediatorEditingHaloLayer;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)editor:(id)arg1 isDeselectingInfos:(id)arg2;
- (void)editor:(id)arg1 isSelectingInfos:(id)arg2;
- (_Bool)isEditing;
- (id)itemsToAddToEditMenu;
- (_Bool)shouldShowLegendHighlight;
- (_Bool)shouldShowSelectionHighlight;
- (void)didEndZooming;
- (void)willBeginZooming;
- (void)updateMessageOverlayNow;
- (_Bool)messageIsVisible;
- (void)dismissMessageOverlayNowWithAnimation:(_Bool)arg1;
- (void)p_topBarsShowedUp:(id)arg1;
- (void)displayMessage:(id)arg1 zPosition:(double)arg2 style:(int)arg3;
- (void)p_messageAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)p_forceDismissTransientMessage;
- (_Bool)p_chartShouldDisplayMessage;
- (void)p_positionMessageView;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)shouldUseChartAreaRectForEditMenuTargetRectMinY;
- (void)p_deleteMessageView;
- (int)tilingMode;
- (void)renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)inPrintPreviewMode;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (struct CGPoint)scaledSubpixelOffsetFromLayerFrameInScaledCanvas;
- (struct CGRect)frameInUnscaledCanvas;
- (_Bool)frameInUnscaledCanvasNeedsPaddingForShadows;
- (id)overlayLayers;
- (void)didUpdateLayer:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (_Bool)p_hasBackgroundLayerForPieChart;
- (_Bool)p_hasBackgroundFill;
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint)arg1;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
- (_Bool)isDrawingIntoPDF;
- (id)commandController;
@property(readonly, nonatomic) double contentsScale;
@property(readonly, nonatomic) double viewScale;
- (struct CGRect)geometryFrame;
- (id)geometry;
- (void)updateFromLayout;
- (_Bool)shouldUseRenderer:(id)arg1;
- (void)clearRenderers;
- (id)renderers;
- (_Bool)canDrawInParallel;
- (void)willBeRemoved;
@property(readonly, nonatomic) _Bool forceRenderBlankBackground;
- (id)p_legendRenderer;
- (_Bool)isLayerBasedRep;
@property(readonly, nonatomic) TSCHChartLayout *chartLayout;
- (id)drawableLayout;
@property(readonly, nonatomic) TSCHChartDrawableInfo *chartInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (_Bool)requireSeparateLabelLayer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH2DChartLayout : TSCHChartLayout
{
    TSCHChartRootLayoutItem *mLayoutTreeRoot;
    struct CGSize mLastChartBodySize;
    struct CGSize mStartingSize;
    struct CGRect mStartingLegendInnerFrame;
    struct CGRect mStartingChartInnerFrame;
    NSValue *mCachedOriginRelativeToChartAreaFrame;
}

+ (id)propertiesThatInvalidateLayout;
- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)hitChartElements:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)renderersWithRep:(id)arg1;
- (void)setDataSetIndex:(unsigned long long)arg1;
- (unsigned long long)dataSetIndex;
- (id)model;
@property(copy, nonatomic) NSDictionary *seriesIndexedPieWedgeExplosions;
- (void)setLegendSize:(struct CGSize)arg1;
- (void)layoutForResizingSize:(struct CGSize)arg1;
- (struct CGRect)boundsForResize;
- (void)p_ensureValidForInwardLayout;
- (void)invalidate;
- (void)p_layoutNowForChartBodySize:(struct CGSize)arg1;
- (void)p_layoutNowForChartAreaSize:(struct CGSize)arg1;
- (void)p_layoutNowForCircumscribingSize:(struct CGSize)arg1;
- (void)layoutForChartBodySize:(struct CGSize)arg1;
- (void)layoutForChartAreaSize:(struct CGSize)arg1;
- (void)layoutForCircumscribingSize:(struct CGSize)arg1;
- (void)processChanges:(id)arg1;
@property(readonly) TSCHChartRootLayoutItem *p_layoutTree;
- (void)setLayoutSettings:(CDStruct_9aa9521f)arg1;
- (struct CGRect)chartBodyFrame;
- (void)setLegendModelGeometryFrame:(struct CGRect)arg1;
- (struct CGRect)legendModelGeometryFrame;
- (void)setLegendGeometryFrame:(struct CGRect)arg1;
- (struct CGRect)legendGeometryFrame;
- (struct CGPoint)p_cachedOriginRelativeToChartAreaFrame;
- (void)invalidateCachedOriginRelativeToChartAreaFrame;
- (struct CGRect)titleFrame;
- (struct CGRect)legendDrawingFrame;
- (struct CGRect)legendFrame;
- (struct CGRect)chartAreaFrame;
- (struct CGRect)outerShadowFrame;
- (struct CGRect)outerLayoutFrame;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisLayoutItem : TSCHChartLayoutItem
{
    TSCHChartAxisID *mAxisID;
    int mAxisPosition;
    TSCHChartAxisTitleLayoutItem *mAxisTitle;
    TSCHChartAxisPaddingLayoutItem *mAxisPadding;
    TSCHChartAxisTickMarksLayoutItem *mTickMarks;
    TSCHChartAxisLineLayoutItem *mAxisLine;
    struct CGSize mChartBodySize;
}

+ (id)selectionPathType;
@property(nonatomic) struct CGSize chartBodySize; // @synthesize chartBodySize=mChartBodySize;
@property(readonly, nonatomic) TSCHChartAxisPaddingLayoutItem *axisPaddingLayoutItem; // @synthesize axisPaddingLayoutItem=mAxisPadding;
@property(readonly, nonatomic) TSCHChartAxisLineLayoutItem *axisLineLayoutItem; // @synthesize axisLineLayoutItem=mAxisLine;
@property(readonly, nonatomic) TSCHChartAxisTickMarksLayoutItem *axisTickMarksLayoutItem; // @synthesize axisTickMarksLayoutItem=mTickMarks;
@property(readonly, nonatomic) TSCHChartAxisTitleLayoutItem *axisTitleLayoutItem; // @synthesize axisTitleLayoutItem=mAxisTitle;
@property(readonly, nonatomic) int axisPosition; // @synthesize axisPosition=mAxisPosition;
@property(retain, nonatomic) TSCHChartAxisID *axisID; // @synthesize axisID=mAxisID;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)p_subselectionHaloPositionsForLabelsSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)p_subselectionKnobPositionsForLabelsSelection:(id)arg1;
- (struct CGRect)protected_layoutSpaceRectForAllLabels;
- (void)p_layoutLabelsNow;
- (void)p_layoutOutward;
- (void)p_layoutInward;
- (id)p_description;
- (id)renderersWithRep:(id)arg1;
- (struct CGRect)calcOverhangRect;
- (struct CGSize)calcMinSize;
- (void)dealloc;
- (id)initWithParent:(id)arg1 axisPosition:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBodyLayoutItem : TSCHChartLayoutItem
{
    _Bool mVertical;
}

- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)p_trendLineR2SubselectionKnobsForSeries:(id)arg1;
- (id)p_trendLineEquationSubselectionKnobsForSeries:(id)arg1;
- (id)p_trendLineSubselectionKnobsForSeries:(id)arg1;
- (id)p_errorBarSubselectionKnobsForSeries:(id)arg1 axisID:(id)arg2;
- (id)p_valueLabelSubselectionKnobsForSeries:(id)arg1;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)countOfElementsForModel:(id)arg1 series:(id)arg2 forGroupsBySeries:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6;
- (struct CGAffineTransform)transformForRenderingLabelForSeries:(unsigned long long)arg1 forGroup:(unsigned long long)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (struct CGAffineTransform)p_transformForRenderingLabelForLineAreaSeries:(unsigned long long)arg1 forGroup:(unsigned long long)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (struct CGAffineTransform)p_transformForRenderingLabelForBarColSeries:(unsigned long long)arg1 forGroup:(unsigned long long)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (void)p_nudgeBarElementFrame:(struct CGRect *)arg1 usingBarModelCache:(id)arg2 unitSpaceValueBegin:(double)arg3 unitSpaceValueEnd:(double)arg4;
- (id)renderersWithRep:(id)arg1;
- (void)p_addRendererOfClass:(Class)arg1 andRep:(id)arg2 toArray:(id)arg3;
- (void)p_layoutOutward;
- (struct CGRect)calcOverhangRect;
- (struct CGRect)p_calcDrawingRectForModel:(id)arg1;
- (struct CGRect)p_exactLabelsDrawingRectForSeries:(id)arg1;
- (struct CGRect)calcDrawingRect;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartLayout : NSObject
{
    _Bool mNeedsLayout;
    TSCHChartInfo *mChartInfo;
    CDStruct_9aa9521f mLayoutSettings;
    struct CGRect _legendModelGeometryFrame;
}

+ (id)propertiesThatInvalidateLayout;
+ (struct CGSize)legendSizeForChartInfo:(id)arg1 initialWidth:(double)arg2;
+ (id)chartLayoutWithChartInfo:(id)arg1;
@property struct CGRect legendModelGeometryFrame; // @synthesize legendModelGeometryFrame=_legendModelGeometryFrame;
@property CDStruct_9aa9521f layoutSettings; // @synthesize layoutSettings=mLayoutSettings;
@property(readonly) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mChartInfo;
- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)hitChartElements:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)setForceOmitLegend:(_Bool)arg1;
- (struct CGRect)convertNaturalSpaceRectToChartLayoutSpaceRect:(struct CGRect)arg1;
- (struct CGRect)convertChartLayoutSpaceRectToNaturalSpaceRect:(struct CGRect)arg1;
- (struct CGPoint)convertNaturalSpaceToChartLayoutSpace:(struct CGPoint)arg1;
- (struct CGPoint)convertChartLayoutSpaceToNaturalSpace:(struct CGPoint)arg1;
- (struct CGAffineTransform)transformToConvertChartLayoutToNatural;
- (id)renderersWithRep:(id)arg1;
- (void)endResize;
- (void)takeSizeFromTracker:(id)arg1;
- (void)beginResize;
- (void)setLegendSize:(struct CGSize)arg1;
- (void)layoutForResizingSize:(struct CGSize)arg1;
- (struct CGRect)boundsForResize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)isValid;
- (void)invalidate;
- (void)processChanges:(id)arg1;
- (_Bool)layoutFrameShouldEncloseInfoGeometry;
- (void)layoutForChartBodySize:(struct CGSize)arg1;
- (void)layoutForChartAreaSize:(struct CGSize)arg1;
- (void)layoutForCircumscribingSize:(struct CGSize)arg1;
@property unsigned long long dataSetIndex;
@property(readonly) struct CGRect chartBodyFrame;
@property struct CGRect legendGeometryFrame;
@property(readonly) struct CGRect legendDrawingFrame;
@property(readonly) struct CGRect titleFrame;
@property(readonly) struct CGRect legendFrame;
@property(readonly) struct CGRect chartAreaFrame;
@property(readonly) struct CGRect outerShadowFrame;
@property(readonly) struct CGRect outerLayoutFrame;
@property(readonly) TSCHChartModel *model;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartLayoutItem : NSObject <TSCHUnretainedParent>
{
    TSCHChartLayoutItem *mParent;
    NSArray *mChildren;
    _Bool mTreeBuilt;
    struct CGPoint mOffset;
    struct CGSize mLayoutSize;
    _Bool mLayoutSizeSet;
    struct CGRect mDrawingRectCache;
    _Bool mDrawingRectCacheValid;
    struct CGSize mMinSizeCache;
    _Bool mMinSizeCacheValid;
    struct CGRect mOverhangRectCache;
    _Bool mOverhangRectCacheValid;
}

+ (id)chartLayoutWithChartInfo:(id)arg1;
@property(nonatomic) struct CGPoint layoutOffset; // @synthesize layoutOffset=mOffset;
@property(readonly, nonatomic) TSCHChartLayoutItem *parent; // @synthesize parent=mParent;
- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)hitChartElements:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)p_iterateChildrenWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)stopIteratingItemsContainingPoint:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)description;
- (id)p_description;
- (double)overhangMagnitudeForEdge:(unsigned int)arg1;
- (id)renderersWithRep:(id)arg1;
- (void)layoutUsingMethod:(int)arg1;
- (void)p_layoutOutward;
- (void)p_layoutInward;
- (void)clearAll;
- (void)buildSubTree;
@property(readonly, nonatomic) struct CGSize startingSize;
@property(readonly, nonatomic) _Bool isInResize;
- (void)clearOverhangRect;
@property(readonly, nonatomic) struct CGRect overhangRect;
- (struct CGSize)overhangSize;
- (struct CGPoint)overhangOffset;
- (struct CGRect)calcOverhangRect;
@property(readonly, nonatomic) struct CGRect rootedDrawingRect;
- (void)clearDrawingRect;
@property(readonly, nonatomic) struct CGRect drawingRect;
@property(readonly, nonatomic) struct CGSize drawingSize;
@property(readonly, nonatomic) struct CGPoint drawingOffset;
- (struct CGRect)calcDrawingRect;
@property(readonly, nonatomic) struct CGRect rootedLayoutRect;
@property(nonatomic) struct CGRect layoutRect;
- (void)clearLayoutSize;
@property(nonatomic) struct CGSize layoutSize;
- (void)clearMinSize;
@property(readonly) struct CGSize minSize;
- (struct CGSize)calcMinSize;
@property(readonly, nonatomic) unsigned long long dataSetIndex;
@property(nonatomic) CDStruct_9aa9521f layoutSettings;
@property(readonly, nonatomic) TSCHChartModel *model;
@property(readonly, nonatomic) TSCHChartInfo *chartInfo;
@property(readonly, nonatomic) TSCHChartRootLayoutItem *root;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartPieAreaLayoutItem : TSCH2DChartAbstractAreaLayoutItem
{
}

- (struct CGRect)titleFrame;
- (id)renderersWithRep:(id)arg1;
- (void)p_layoutOutward;
- (void)p_layoutInward;
- (void)buildSubTree;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartRootLayoutItem : TSCHChartLayoutItem <TSCHUnretainedParent>
{
    TSCHChartInfo *mChartInfo;
    TSCHChartAbstractAreaLayoutItem *mChartArea;
    TSCHLegendAreaLayoutItem *mLegend;
    CDStruct_9aa9521f mLayoutSettings;
    struct CGRect mLegendInnerFrame;
    struct CGRect mChartInnerFrame;
    _Bool mInResize;
    struct CGSize mStartingSize;
    NSDictionary *mSeriesIndexedPieWedgeExplosions;
    TSCHChartModel *mChartModel;
}

@property(copy, nonatomic) NSDictionary *seriesIndexedPieWedgeExplosions; // @synthesize seriesIndexedPieWedgeExplosions=mSeriesIndexedPieWedgeExplosions;
- (void)clearParent;
- (void)invalidateTransientModel;
@property(nonatomic) unsigned long long dataSetIndex;
- (void)updatePieWedgeExplosionsFromModel;
- (struct CGSize)startingSize;
- (_Bool)isInResize;
- (void)endResizeOperation;
- (void)updateSizeDuringResizeTo:(struct CGSize)arg1;
- (void)beginResizeWithStartingSize:(struct CGSize)arg1;
- (id)renderersWithRep:(id)arg1;
- (void)buildSubTree;
- (void)p_layoutOutward;
- (void)setChartBodySize:(struct CGSize)arg1;
- (void)p_layoutInward;
- (void)updateLayoutOffset;
- (void)updateLayoutSize;
- (void)setLegendSize:(struct CGSize)arg1;
- (void)setChartInnerFrame:(struct CGRect)arg1 legendInnerFrame:(struct CGRect)arg2;
- (struct CGRect)calcOverhangRect;
- (struct CGRect)calcDrawingRect;
- (void)clearAll;
@property(readonly, nonatomic) TSCHLegendAreaLayoutItem *legendAreaLayoutItem;
@property(readonly, nonatomic) TSCHChartAbstractAreaLayoutItem *chartAreaLayoutItem;
- (id)model;
- (id)chartInfo;
- (void)setLayoutSettings:(CDStruct_9aa9521f)arg1;
- (CDStruct_9aa9521f)layoutSettings;
- (id)root;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartTitleLayoutItem : TSCHChartLayoutItem
{
    double mChartBodyWidth;
    NSString *mEditedString;
    double mMinHitSize;
}

@property(nonatomic) double minHitSize; // @synthesize minHitSize=mMinHitSize;
@property(copy, nonatomic) NSString *editedString; // @synthesize editedString=mEditedString;
@property(nonatomic) double chartBodyWidth; // @synthesize chartBodyWidth=mChartBodyWidth;
- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (struct CGAffineTransform)transformForRenderingRange:(struct _NSRange)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (struct CGAffineTransform)transformForRenderingOutElementSize:(struct CGSize *)arg1 outClipRect:(struct CGRect *)arg2;
- (struct CGAffineTransform)p_transformForRenderingRangePtr:(struct _NSRange *)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (id)renderersWithRep:(id)arg1;
- (struct CGRect)calcOverhangRect;
- (struct CGRect)calcDrawingRect;
- (struct CGSize)calcMinSizeForModel:(id)arg1;
- (struct CGSize)calcMinSize;
- (id)titleText;
- (id)p_titleParagraphStyle;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisTickMarksLayoutItem : TSCHChartLayoutItem
{
}

- (struct CGAffineTransform)transformForRenderingOutElementSize:(struct CGSize *)arg1 outClipRect:(struct CGRect *)arg2;
- (struct CGRect)calcDrawingRect;
- (struct CGRect)p_effectiveRootedLayoutRect;
- (struct CGSize)calcMinSize;
- (int)location;
@property(readonly, nonatomic) float minorTickmarkLength;
@property(readonly, nonatomic) float majorTickmarkLength;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisSeriesLabelsLayoutItem : TSCHChartCategoryAxisLabelsLayoutItem
{
}

- (id)selectionPathLabelType;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1 axis:(id)arg2;
- (unsigned long long)strideInLayoutArea:(struct CGRect)arg1;
- (id)labelStringForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)numberOfLabelsForAxis:(id)arg1;
- (_Bool)showLabelsForAxis:(id)arg1;
- (struct CGSize)calcMinSize;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisLineLayoutItem : TSCHChartLayoutItem
{
}

- (struct CGAffineTransform)transformForRenderingOutElementSize:(struct CGSize *)arg1 outClipRect:(struct CGRect *)arg2;
- (struct CGRect)calcDrawingRect;
- (struct CGSize)calcMinSize;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartCategoryAxisLabelsLayoutItem : TSCHChartAxisLabelsLayoutItem
{
}

- (id)selectionPathLabelType;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1 axis:(id)arg2;
- (struct CGPoint)labelAnchorForPosition:(int)arg1 degrees:(float)arg2;
- (struct CGPoint)axisAnchorForPosition:(int)arg1 degrees:(float)arg2 area:(struct CGRect)arg3 unrotatedSize:(struct CGSize)arg4 unitSpaceValue:(double)arg5;
- (id)labelStringForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)numberOfLabelsForAxis:(id)arg1;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartValueAxisLabelsLayoutItem : TSCHChartAxisLabelsLayoutItem
{
}

- (id)selectionPathLabelType;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1 axis:(id)arg2;
- (struct CGPoint)labelAnchorForPosition:(int)arg1 degrees:(float)arg2;
- (struct CGPoint)axisAnchorForPosition:(int)arg1 degrees:(float)arg2 area:(struct CGRect)arg3 unrotatedSize:(struct CGSize)arg4 unitSpaceValue:(double)arg5;
- (id)labelStringForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)numberOfLabelsForAxis:(id)arg1;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisTitleLayoutItem : TSCHChartLayoutItem
{
    struct CGSize mChartBodySize;
    double mMinHitSize;
}

@property(nonatomic) double minHitSize; // @synthesize minHitSize=mMinHitSize;
@property(nonatomic) struct CGSize chartBodySize; // @synthesize chartBodySize=mChartBodySize;
- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (double)titlePaddingForAxis:(id)arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (struct CGAffineTransform)transformForRenderingRange:(struct _NSRange)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (struct CGAffineTransform)transformForRenderingOutElementSize:(struct CGSize *)arg1 outClipRect:(struct CGRect *)arg2;
- (struct CGAffineTransform)p_transformForRenderingRangePtr:(struct _NSRange *)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (struct CGRect)calcDrawingRect;
- (struct CGSize)calcMinSize;
- (_Bool)isTitleOn;
- (id)axisLayoutItem;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisTitleLayoutItemWithStaticPadding : TSCHChartAxisTitleLayoutItem
{
    double mTitlePadding;
}

- (double)titlePaddingForAxis:(id)arg1;
- (id)initWithParent:(id)arg1 padding:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartBorderAxisLayoutItem : TSCHChartAxisLayoutItem
{
}

- (id)renderersWithRep:(id)arg1;
- (void)buildSubTree;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartCategoryAxisLayoutItem : TSCHChartAxisLayoutItem
{
    TSCHChartAxisSeriesLabelsLayoutItem *mSeriesLabels;
    TSCHChartCategoryAxisLabelsLayoutItem *mCategoryLabels;
}

+ (id)selectionPathType;
@property(readonly, nonatomic) TSCHChartCategoryAxisLabelsLayoutItem *axisCategoryLabelsLayoutItem; // @synthesize axisCategoryLabelsLayoutItem=mCategoryLabels;
@property(readonly, nonatomic) TSCHChartAxisSeriesLabelsLayoutItem *axisSeriesLabelsLayoutItem; // @synthesize axisSeriesLabelsLayoutItem=mSeriesLabels;
- (struct CGRect)protected_layoutSpaceRectForAllLabels;
- (id)renderersWithRep:(id)arg1;
- (void)p_layoutLabelsNow;
- (void)buildSubTree;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartValueAxisLayoutItem : TSCHChartAxisLayoutItem
{
    TSCHChartValueAxisLabelsLayoutItem *mValueLabels;
}

+ (id)selectionPathType;
@property(readonly, nonatomic) TSCHChartValueAxisLabelsLayoutItem *axisValueLabelsLayoutItem; // @synthesize axisValueLabelsLayoutItem=mValueLabels;
- (struct CGRect)protected_layoutSpaceRectForAllLabels;
- (id)renderersWithRep:(id)arg1;
- (void)p_layoutLabelsNow;
- (void)buildSubTree;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendModel : NSObject <TSCHUnretainedParent, TSCHStyleOwning, TSDMixing, NSCopying>
{
    TSCHChartInfo *mChartInfo;
    struct CGRect mLegendFrame;
}

@property(nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mChartInfo;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)nonstyle;
- (id)style;
- (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2;
- (id)swapTuplesForMutationsForImport:(id)arg1;
- (id)swapTuplesForMutations:(id)arg1;
- (id)p_swapTuplesForMutations:(id)arg1 forImport:(_Bool)arg2;
- (id)context;
- (id)valueForProperty:(int)arg1;
- (id)objectValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
- (_Bool)hasObjectValueForProperty:(int)arg1 value:(id *)arg2;
- (_Bool)hasFloatValueForProperty:(int)arg1 value:(float *)arg2;
- (_Bool)hasIntValueForProperty:(int)arg1 value:(int *)arg2;
- (int)defaultPropertyForGeneric:(int)arg1;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)defaultProperties;
- (id)p_genericToDefaultPropertyMap;
- (void)clearParent;
@property(nonatomic) struct CGSize legendSize;
@property(nonatomic) struct CGPoint legendOffset;
- (id)model;
- (void)willModify;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)loadFromPreUFFArchive:(const struct LegendModelArchive *)arg1;
- (id)g_genericToDefaultPropertyMap;
- (void)saveToUnityArchive:(struct ChartArchive *)arg1;
- (void)loadFromUnityArchive:(const struct ChartArchive *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendRenderer : TSCHRenderer
{
    struct CGPoint _textEditingPixelAlignmentOffset;
}

@property(nonatomic) struct CGPoint textEditingPixelAlignmentOffset; // @synthesize textEditingPixelAlignmentOffset=_textEditingPixelAlignmentOffset;
- (void)addSelection:(id)arg1 toCGPath:(struct CGPath *)arg2;
- (void)renderIntoContext:(struct CGContext *)arg1 selection:(id)arg2;
- (_Bool)canRenderSelectionPath:(id)arg1;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)p_drawLabelForCell:(id)arg1 intoContext:(struct CGContext *)arg2 rangePtr:(struct _NSRange *)arg3;
- (void)p_drawBadgeForCell:(id)arg1 intoContext:(struct CGContext *)arg2;
- (void)p_draw3DLineBadgeIntoContext:(struct CGContext *)arg1 forCell:(id)arg2;
- (void)p_drawPieBadgeIntoContext:(struct CGContext *)arg1 forCell:(id)arg2;
- (void)p_drawLineAreaBadgeIntoContext:(struct CGContext *)arg1 forCell:(id)arg2;
- (void)p_drawDefaultBadgeIntoContext:(struct CGContext *)arg1 forCell:(id)arg2;
- (id)p_selectionPathForCell:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAreaLayoutItem : TSCH2DChartAbstractAreaLayoutItem
{
    TSCHChartAxisLayoutItem *mTopHorizontalAxis;
    TSCHChartAxisLayoutItem *mBottomHorizontalAxis;
    TSCHChartAxisLayoutItem *mLeftVerticalAxis;
    TSCHChartAxisLayoutItem *mRightVerticalAxis;
    unsigned long long mRelayoutDepth;
    _Bool mInOutwardLayout;
}

- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)p_updateMinHitSizes;
- (struct CGRect)i_currentBufferAreaUnitRect;
- (id)renderersWithRep:(id)arg1;
- (void)p_layoutOutward;
- (void)p_layoutInward;
- (void)buildSubTree;
- (double)p_dataSetNameLabelPadding;
- (void)p_arrangeSizedChildren;
- (Class)p_axisLayoutItemClassForAxisID:(id)arg1;
- (struct CGRect)titleFrame;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendAreaLayoutItem : TSCHChartLayoutItem
{
    NSValue *mLegendGeometryFrame;
}

- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 paragraphStyle:(id)arg2 cellType:(int)arg3 range:(struct _NSRange)arg4 outElementSize:(struct CGSize *)arg5 outClipRect:(struct CGRect *)arg6;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 cellType:(int)arg2 range:(struct _NSRange)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 cellType:(int)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (struct CGAffineTransform)transformForRenderingBadge:(unsigned long long)arg1 cellType:(int)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (struct CGAffineTransform)p_transformForRenderingLabel:(unsigned long long)arg1 paragraphStyle:(id)arg2 cellType:(int)arg3 rangePtr:(struct _NSRange *)arg4 outElementSize:(struct CGSize *)arg5 outClipRect:(struct CGRect *)arg6;
- (id)renderersWithRep:(id)arg1;
- (void)updateLegendGeometryFrameFromLegendModelCache;
@property(nonatomic) struct CGRect legendModelGeometryFrame;
- (struct CGRect)calcDrawingRect;
- (struct CGSize)calcMinSize;
- (double)p_legendModelWidth;
- (void)setLayoutSize:(struct CGSize)arg1;
- (void)clearAll;
- (void)clearLayoutSize;
- (void)resetLayoutSize;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHRenderUtilities : NSObject
{
}

+ (struct CGImage *)newImageFromFills:(id)arg1 size:(struct CGSize)arg2 spaceBetween:(struct CGSize)arg3 scale:(double)arg4 borderColor:(id)arg5 outFillRects:(struct CGRect **)arg6;
+ (struct CGPath *)newStrokedPathFromPath:(struct CGPath *)arg1 stroke:(id)arg2;
+ (struct CGRect)labelRectFromClipRect:(struct CGRect)arg1 elementSize:(struct CGSize)arg2;
+ (void)addTextSubselectionHalosToArray:(id)arg1 rect:(struct CGRect)arg2 transform:(struct CGAffineTransform)arg3;
+ (void)addTextSubselectionKnobsToArray:(id)arg1 rect:(struct CGRect)arg2 transform:(struct CGAffineTransform)arg3;
+ (struct CGPath *)p_newPlusPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4 context:(struct CGContext *)arg5;
+ (struct CGPath *)p_newCrossPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
+ (struct CGPath *)p_newDiamondPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
+ (struct CGPath *)p_newSquarePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4 context:(struct CGContext *)arg5;
+ (struct CGPath *)p_newYieldPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
+ (struct CGPath *)p_newTrianglePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
+ (struct CGPath *)p_newCirclePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
+ (struct CGPath *)p_newPathForSymbol:(int)arg1 context:(struct CGContext *)arg2 at:(struct CGPoint)arg3 width:(double)arg4 pathLocation:(long long)arg5 stroke:(id)arg6;
+ (id)lightenFillOrStroke:(id)arg1 byPercent:(double)arg2;
+ (struct CGColor *)newLightenedColor:(struct CGColor *)arg1 byPercent:(double)arg2;
+ (struct CGRect)scaleRect:(struct CGRect)arg1 toFit:(struct CGRect)arg2;
+ (struct CGRect)integralFillRenderingRectFromElementRect:(struct CGRect)arg1;
+ (struct CGPath *)newUnitPathForSymbol:(int)arg1 symbolSize:(double)arg2 stroke:(id)arg3;
+ (_Bool)centerPointForSeries:(id)arg1 index:(unsigned long long)arg2 frame:(struct CGRect)arg3 point:(struct CGPoint *)arg4 nullsUseIntercept:(_Bool)arg5;
+ (_Bool)centerPointForSeries:(id)arg1 index:(unsigned long long)arg2 frame:(struct CGRect)arg3 point:(struct CGPoint *)arg4;
+ (void)drawNullFillSwatchInContext:(struct CGContext *)arg1 frame:(struct CGRect)arg2;
+ (void)drawFill:(id)arg1 inContext:(struct CGContext *)arg2 path:(struct CGPath *)arg3;
+ (void)drawFill:(id)arg1 inContext:(struct CGContext *)arg2 frame:(struct CGRect)arg3;
+ (void)drawSymbol:(int)arg1 inContext:(struct CGContext *)arg2 at:(struct CGPoint)arg3 width:(double)arg4 fill:(id)arg5 stroke:(id)arg6;
+ (struct CGPath *)newClipPathForSymbol:(int)arg1 at:(struct CGPoint)arg2 width:(double)arg3 stroke:(id)arg4;
+ (id)printCGPath:(struct CGPath *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStackedValueAxis : TSCHChartValueAxis
{
}

- (double)interceptForAxis:(id)arg1;
- (double)doubleAxisToModelValue:(double)arg1;
- (double)doubleModelToAxisValue:(double)arg1 forSeries:(id)arg2;
- (void)updateGridValueTypeInterceptInAnalysis:(id)arg1;
- (double *)unitSpaceValuesForSeries:(id)arg1 indexes:(struct _NSRange)arg2 min:(double)arg3 max:(double)arg4;
- (double)unitSpaceValueForSeries:(id)arg1 index:(unsigned long long)arg2 min:(double)arg3 max:(double)arg4;
- (void)updateModelMinMaxInAnalysis:(id)arg1;
- (id)p_orthogonalAxisForSeries:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStackedLineValueAxis : TSCHChartStackedValueAxis
{
}

- (id)p_orthogonalAxisForSeries:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStackedPercentValueAxis : TSCHChartValueAxis
{
    TSCHChartAxisAnalysis *mInProgressAnalysisForErrorBarData;
}

- (void)updateGridValueTypeInterceptInAnalysis:(id)arg1;
- (id)valueForFormattedString:(id)arg1;
- (id)formattedStringForSeries:(id)arg1 index:(unsigned long long)arg2;
- (_Bool)editableFormatForValueStrings;
- (id)dataFormatter;
- (double *)unitSpaceValuesForSeries:(id)arg1 indexes:(struct _NSRange)arg2 min:(double)arg3 max:(double)arg4;
- (double)unitSpaceValueForDataSpaceValue:(double)arg1 series:(id)arg2 index:(unsigned long long)arg3;
- (double)unitSpaceValueForSeries:(id)arg1 index:(unsigned long long)arg2 min:(double)arg3 max:(double)arg4;
- (void)adjustMinMaxForDataRangeInAnalysis:(id)arg1;
- (id)formattedStringForAxisValue:(id)arg1;
- (double)interceptForAxis:(id)arg1;
- (double)doubleAxisToModelValue:(double)arg1;
- (double)doubleModelToAxisValue:(double)arg1 forSeries:(id)arg2;
- (void)updateModelMinMaxForErrorBarsOnSeries:(id)arg1 axisID:(id)arg2 analysis:(id)arg3;
- (void)updateModelMinMaxInAnalysis:(id)arg1;
- (double)totalForGroup:(unsigned long long)arg1;
- (id)userMin;
- (id)userMax;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartLogAxis : TSCHChartValueAxis
{
}

- (double)unitSpaceValueForDataSpaceValue:(double)arg1 min:(double)arg2 max:(double)arg3;
- (double)validateUserMaxForDouble:(double)arg1;
- (double)validateUserMinForDouble:(double)arg1;
- (id)userMin;
- (id)userMax;
- (id)computeMinorGridlinesFromMajorGridlinesInAnalysis:(id)arg1;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;
- (void)updateModelMinMaxInAnalysis:(id)arg1;
- (void)adjustMinMaxForDataRangeInAnalysis:(id)arg1;
- (void)updateGridValueTypeInterceptInAnalysis:(id)arg1;
- (double)doubleAxisToModelValue:(double)arg1;
- (double)doubleModelToAxisValue:(double)arg1 forSeries:(id)arg2;
- (double)interceptForAxis:(id)arg1;
- (id)p_orthogonalAxis;

@end

__attribute__((visibility("hidden")))
@interface TSCHCompositeRenderer : TSCHRenderer <TSCHCompositeRendering>
{
    NSArray *mSubRenderers;
    TSCHRenderer *mEventHandler;
}

+ (void)renderTSCHCompositeRendering:(id)arg1 intoContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
+ (void)p_delegateSelector:(SEL)arg1 toRenderer:(id)arg2 transparencyLayer:(int)arg3 inContext:(struct CGContext *)arg4;
@property(readonly, nonatomic) NSArray *renderers; // @synthesize renderers=mSubRenderers;
- (void)p_renderIntoContext:(struct CGContext *)arg1 visible:(struct CGRect)arg2;
- (void)didEndTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)willEndTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)didBeginTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)willBeginTransparencyLayer:(int)arg1 inContext:(struct CGContext *)arg2;
- (void)p_delegateSelectorToRenderers:(SEL)arg1 transparencyLayer:(int)arg2 inContext:(struct CGContext *)arg3;
- (void)drawIntoLayer:(int)arg1 inContext:(struct CGContext *)arg2 visible:(struct CGRect)arg3;
- (_Bool)needsAnySeparateLayers;
- (id)transparencyLayers;
- (void)dealloc;
- (id)initWithChartRep:(id)arg1 withSubRenderers:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSUDeprecatedNumberFormat : NSObject
{
}

- (id)initWithArchive:(const struct ChartsNumberFormatArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendCellMetrics : NSObject
{
    TSWPParagraphStyle *mParagraphStyle;
    struct __CTFont *mFont;
    float mBadgeSize;
    float mLegendSymbolGap;
    float mTrueTitleHeight;
    float mLineGap;
    float mBaseline;
}

@property(readonly, nonatomic) float baseline; // @synthesize baseline=mBaseline;
@property(readonly, nonatomic) float lineGap; // @synthesize lineGap=mLineGap;
@property(readonly, nonatomic) float titleHeight; // @synthesize titleHeight=mTrueTitleHeight;
@property(readonly, nonatomic) float symbolGap; // @synthesize symbolGap=mLegendSymbolGap;
@property(readonly, nonatomic) float badgeSize; // @synthesize badgeSize=mBadgeSize;
@property(readonly, nonatomic) struct __CTFont *font; // @synthesize font=mFont;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
- (void)dealloc;
- (id)initWithParagraphStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHCustomDataFormatter : NSObject <TSCHDataFormatter, TSCHDataFormatterPersistableStyleObject>
{
    TSUCustomFormatWrapper *mCustomFormatWrapper;
    unsigned int mCustomFormatListKey;
    int mFormatType;
}

+ (id)dataFormatterWithCustomFormatWrapper:(id)arg1 customFormatListKey:(unsigned int)arg2 formatType:(int)arg3;
@property(readonly, nonatomic) TSUCustomFormatWrapper *customFormatWrapper; // @synthesize customFormatWrapper=mCustomFormatWrapper;
- (int)formatType;
- (id)convertToSupportedClientFormatObject;
- (id)convertToPersistableStyleObject;
- (_Bool)isCompatibleWithDataFormatter:(id)arg1;
- (id)chartFormattedInspectorStringForValue:(id)arg1;
- (id)chartFormattedStringForValue:(id)arg1;
- (id)p_stringForValue:(id)arg1;
- (void)dealloc;
- (id)initWithCustomFormatWrapper:(id)arg1 customFormatListKey:(unsigned int)arg2 formatType:(int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPrefixSuffixCustomDataFormatter : TSCHCustomDataFormatter
{
    NSString *mPrefixString;
    NSString *mSuffixString;
}

+ (id)dataFormatterWithCustomFormatWrapper:(id)arg1 customFormatListKey:(unsigned int)arg2 formatType:(int)arg3 prefixString:(id)arg4 suffixString:(id)arg5;
- (id)convertToSupportedClientFormatObject;
- (id)convertToPersistableStyleObject;
- (id)chartFormattedStringForValue:(id)arg1;
- (id)p_formattedStringWithBodyString:(id)arg1;
- (void)dealloc;
- (id)initWithCustomFormatWrapper:(id)arg1 customFormatListKey:(unsigned int)arg2 formatType:(int)arg3 prefixString:(id)arg4 suffixString:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisLabelsLayoutItem : TSCHChartLayoutItem
{
    unsigned long long mStride;
    float mAngleInDegrees;
    float mAngleInRadians;
}

- (struct CGPath *)newDragAndDropHighlightPathForSelection:(id)arg1;
- (void)protected_iterateHitChartElements:(struct CGPoint)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)p_overrideLabelStringForHitTestingEmptyLabel;
- (struct CGRect)layoutSpaceRectForAllLabels;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 range:(struct _NSRange)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 usingString:(id)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4 useAngle:(_Bool)arg5;
- (struct CGAffineTransform)transformForRenderingLabel:(unsigned long long)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (struct CGAffineTransform)p_transformForRenderingLabel:(unsigned long long)arg1 range:(struct _NSRange *)arg2 inLayoutArea:(struct CGRect)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 usingString:(id)arg6 stride:(unsigned long long *)arg7 useAngle:(_Bool)arg8;
- (unsigned long long)p_computeAutoStrideInLayoutArea:(struct CGRect)arg1;
- (long long)p_smallestSecondValueLabelIndex:(long long)arg1 start:(long long)arg2 end:(long long)arg3 inLayoutArea:(struct CGRect)arg4 paragraphStyle:(id)arg5;
- (long long)p_smallestSecondValueLabelIndex:(long long)arg1 start:(long long)arg2 end:(long long)arg3 inLayoutArea:(struct CGRect)arg4 paragraphStyle:(id)arg5 isTop:(_Bool)arg6;
- (void)p_rect:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 inLayoutArea:(struct CGRect)arg3 forIndex:(unsigned long long)arg4 paragraphStyle:(id)arg5;
@property(readonly, nonatomic) unsigned long long stride;
- (unsigned long long)strideInLayoutArea:(struct CGRect)arg1;
- (id)selectionPathLabelType;
- (struct CGPoint)labelAnchorForPosition:(int)arg1 degrees:(float)arg2;
- (unsigned long long)selectionPathLabelIndexForIndex:(unsigned long long)arg1 axis:(id)arg2;
- (struct CGPoint)axisAnchorForPosition:(int)arg1 degrees:(float)arg2 area:(struct CGRect)arg3 unrotatedSize:(struct CGSize)arg4 unitSpaceValue:(double)arg5;
- (id)labelStringForAxis:(id)arg1 index:(unsigned long long)arg2;
- (double)unitSpaceValueForAxis:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)numberOfLabelsForAxis:(id)arg1;
- (id)p_axisFromLayoutItem;
- (id)labelsLayoutItem;
- (id)axisLayoutItem;
- (struct CGRect)calcOverhangRect;
- (struct CGRect)calcDrawingRect;
- (void)clearAll;
- (void)setLayoutSize:(struct CGSize)arg1;
- (struct CGSize)calcMinSize;
- (_Bool)showLabelsForAxis:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesNonStyle : TSCHBaseStyle
{
}

+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)updateAfterPasteForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_upgradeSeparateVisibilityProperties:(id)arg1;
- (void)p_upgradeMixedChartProperties:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
@property(copy, nonatomic) TSSPropertyMap *overrideMapForSameAsSource; // @dynamic overrideMapForSameAsSource;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesDefaultNonStyle : NSObject <TSCHStyleActAlike>
{
}

+ (id)boxedDefaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)properties;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)defaultNonStyle;
+ (id)_singletonAlloc;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)boxedDefaultValueForProperty:(int)arg1;
- (float)defaultFloatValueForProperty:(int)arg1;
- (int)defaultIntValueForProperty:(int)arg1;
- (id)defaultValueForProperty:(int)arg1;
- (id)properties;
- (id)boxedValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)valueForProperty:(int)arg1;
- (_Bool)overridesProperty:(int)arg1;
- (_Bool)definesProperty:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisNonStyle : TSCHBaseStyle
{
}

+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (void)updateAfterPasteForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
@property(copy, nonatomic) TSSPropertyMap *overrideMapForSameAsSource; // @dynamic overrideMapForSameAsSource;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendNonStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartNonStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)bootstrappedSeriesStyleWithContext:(id)arg1 seriesIndex:(unsigned long long)arg2;
+ (id)getURLForImage:(id)arg1;
+ (id)identifierForRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)presetStyleDescriptorForOrdinal:(unsigned long long)arg1;
+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_upgrade3DFillSubclassTSDFill:(id)arg1;
- (void)p_upgradeRemoveShadowEnabledPropertyUsage:(id)arg1;
- (void)p_upgrade3DChartProperties:(id)arg1;
- (void)p_upgradeBubbleChartProperties:(id)arg1;
- (void)p_upgradeSeparateVisibilityProperties:(id)arg1;
- (void)p_upgradeMixedChartProperties:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)identifierForCategoryStyleWithRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)presetStyleDescriptorForCategoryStyleOrdinal:(unsigned long long)arg1;
+ (id)identifierForValueStyleWithRoleIndex:(unsigned long long)arg1 ordinal:(unsigned long long)arg2;
+ (id)presetStyleDescriptorForValueStyleOrdinal:(unsigned long long)arg1;
+ (id)defaultStyleWithContext:(id)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_upgradeRemoveShadowEnabledPropertyUsage:(id)arg1;
- (void)p_upgrade3DChartPropertiesFrom2DProperties:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)presetStyleDescriptor;
+ (id)identifierForRoleIndex:(unsigned long long)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_upgradeRemoveShadowEnabledPropertyUsage:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStyle : TSCHBaseStyle
{
}

+ (id)p_magicMoveProperties;
+ (id)defaultParagraphStyleWithContext:(id)arg1;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)presetStyleDescriptor;
+ (id)identifierForRoleIndex:(unsigned long long)arg1;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)imageFillProperties;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_upgradeRemoveShadowEnabledPropertyUsage:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleUtilities : NSObject
{
}

+ (void)convertToSimpleTSDFillsInProperties:(id)arg1 inMap:(id)arg2 context:(id)arg3;
+ (void)upgradeAlignmentInParagraphStyles:(id)arg1 willModifyBlock:(CDUnknownBlockType)arg2;
+ (void)updateStyleState:(id)arg1 forPropertyMutationTuples:(id)arg2;
+ (void)updateStyleState:(id)arg1 forMutationsPerStyleOwner:(id)arg2;
+ (id)chartsNullShadowToDefaultDisabledShadow:(id)arg1;
+ (id)shadowToChartsNullShadow:(id)arg1;
+ (id)nullShadow;
+ (_Bool)hasShadow:(id)arg1;
+ (id)upgradedShadowPropertyForParagraphStyle:(id)arg1;
+ (_Bool)upgradeShadowProperties:(id)arg1 inMap:(id)arg2;
+ (_Bool)upgradedShadowPropertyFromShadow:(id)arg1 outUpgraded:(id *)arg2;
+ (_Bool)p_hasShadow:(id)arg1;
+ (id)nullFill;
+ (_Bool)isNullFill:(id)arg1;
+ (_Bool)hasNoFill:(id)arg1;
+ (id)fullyPopulatedStylesFromArray:(id)arg1 context:(id)arg2 styleClass:(Class)arg3;
+ (id)fullyPopulatedStyleFromStyle:(id)arg1 context:(id)arg2;
+ (_Bool)propertyMap:(id)arg1 equivalentTo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHPieWedgeRendererLayer : TSCHRendererLayer
{
    struct CGPoint mLayerStartPoint;
    float mLayerStartExplosion;
}

@property(readonly, nonatomic) float layerStartExplosion; // @synthesize layerStartExplosion=mLayerStartExplosion;
@property(nonatomic) struct CGPoint layerStartPoint; // @synthesize layerStartPoint=mLayerStartPoint;
- (id)description;
- (void)setExplosion:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHPieChartRep : TSCHChartRep
{
    TSCHChartPieElementsRenderer *mPieElementRenderer;
    NSArray *mWedgeKnobs;
    NSDictionary *mSeriesIndexedPieWedgeDraggingLayers;
    _Bool mHasDrawnSinceWedgeKnobTrackerCreated;
}

- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleOwnerReference : NSObject <NSCopying>
{
    int mType;
    unsigned long long mIndex;
}

+ (id)styleOwnerReferenceWithType:(int)arg1 index:(unsigned long long)arg2;
@property(readonly, nonatomic) Class genericPropertyMapClass;
@property(readonly, nonatomic) Class nonstyleClass;
@property(readonly, nonatomic) Class styleClass;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned long long index;
@property(readonly, nonatomic) int type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStyleOwnerType:(int)arg1 index:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleOwnerAndPropertyPair : NSObject <NSCopying>
{
    TSCHStyleOwnerReference *mStyleOwnerReference;
    int mProperty;
}

+ (id)pairWithStyleOwnerReference:(id)arg1 property:(int)arg2;
- (int)property;
- (id)styleOwnerReference;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStyleOwnerReference:(id)arg1 property:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartMediator : NSObject <TSCHUnretainedParent, NSCopying>
{
    id <TSCHNotifyOnModify> mObjectToNotify;
    TSCHChartInfo *mChartInfo;
    TSUIntToIntDictionary *mRemoteSeriesIndexForGridSeriesIndex;
    TSUIntToIntDictionary *mGridSeriesIndexForRemoteSeriesIndex;
}

+ (id)propertiesThatInvalidateMediator;
@property(nonatomic) id <TSCHNotifyOnModify> objectToNotify; // @synthesize objectToNotify=mObjectToNotify;
@property(nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mChartInfo;
- (_Bool)preferSeriesToValues;
- (unsigned long long)p_gridSeriesIndexForRemoteSeriesIndex:(unsigned long long)arg1;
- (unsigned long long)p_remoteSeriesIndexForGridSeriesIndex:(unsigned long long)arg1;
- (id)commandToSetNewSeriesIndex:(unsigned long long)arg1 forSeriesIndex:(unsigned long long)arg2;
- (id)seriesDataFormulaForSeriesDimension:(id)arg1;
- (id)commandToSetSeriesDataFormula:(id)arg1 seriesDimension:(id)arg2;
- (id)errorBarCustomFormulaForSeriesIndex:(unsigned long long)arg1 dataType:(int)arg2;
- (id)commandToSetErrorBarCustomFormula:(id)arg1 seriesIndex:(unsigned long long)arg2 dataType:(int)arg3;
- (id)commandToChangeCategoryLabelFormulas:(id)arg1;
- (id)categoryLabelFormulas;
- (id)dataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2 axisType:(int)arg3 documentRoot:(id)arg4;
- (id)dataFormatterForAxis:(id)arg1 documentRoot:(id)arg2;
- (id)commandToSetChartGridDirection:(int)arg1 documentRoot:(id)arg2;
- (void)invalidateAndSynchronizeMediator;
- (_Bool)isEditing;
- (id)commandSetCategoryName:(id)arg1 forCategoryIndex:(unsigned long long)arg2;
- (id)commandToSetSeriesNameFormula:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)seriesNameFormulaForSeriesIndex:(unsigned long long)arg1;
- (id)commandSetSeriesName:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)updateGridWithSpec:(CDStruct_188655c5)arg1;
- (id)p_errorBarDataForSeries:(unsigned long long)arg1 withSpec:(CDStruct_188655c5)arg2 updateType:(int)arg3;
@property(readonly, nonatomic) int direction;
@property(readonly, nonatomic) _Bool isPhantom;
- (void)willModify;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearParent;
- (void)dealloc;
- (id)init;
- (id)initWithChartInfo:(id)arg1;
- (void)saveToArchive:(struct ChartMediatorArchive *)arg1;
- (void)loadFromArchive:(const struct ChartMediatorArchive *)arg1;
- (id)copyWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHRendererLayer : TSDTilingLayer
{
    TSCHRenderer *mRenderer;
}

- (void)drawInContext:(struct CGContext *)arg1;
- (struct CGRect)p_layerFrameFromNaturalSpaceFrame:(struct CGRect)arg1;
- (struct CGRect)p_calculateLayerFrame;
- (void)updateFrameFromLayout;
- (id)renderer;
- (void)dealloc;
- (id)initWithRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendAnchorHalfSpace : NSObject
{
    struct TSCHLegendAnchorLine mLine;
}

+ (id)halfSpaceWithLine:(struct TSCHLegendAnchorLine)arg1;
@property(readonly, nonatomic) struct TSCHLegendAnchorLine line; // @synthesize line=mLine;
- (id)description;
- (id)initWithLine:(struct TSCHLegendAnchorLine)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartDrawableLayoutLegendResizer : NSObject
{
    int mAnchoringStates[2];
    double mAnchoringPosition[2];
    _Bool mShouldUpdateConfinedPushableAnchoring;
    NSArray *mLegendConfinementBounds;
}

+ (id)legendResizerWithInitialFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1;
+ (struct CGRect)snappedLegendFrame:(struct CGRect)arg1 forChartAreaFrame:(struct CGRect)arg2;
+ (struct CGRect)outerAnchoringFrameFromChartAreaFrame:(struct CGRect)arg1;
+ (struct CGRect)innerAnchoringFrameFromChartAreaFrame:(struct CGRect)arg1;
+ (double)p_sideIntersectionLengthForChartAreaFrame:(struct CGRect)arg1;
+ (double)p_sideIntersectionLengthForChartAreaRange:(struct TSCHLegendAnchorRange)arg1;
@property(copy, nonatomic) NSArray *p_legendConfinementBounds; // @synthesize p_legendConfinementBounds=mLegendConfinementBounds;
@property(nonatomic) _Bool p_shouldUpdateConfinedPushableAnchoring; // @synthesize p_shouldUpdateConfinedPushableAnchoring=mShouldUpdateConfinedPushableAnchoring;
- (id)resizedLegendGeometry:(id)arg1 forLastChartAreaFrame:(struct CGRect)arg2 newChartAreaFrame:(struct CGRect)arg3;
- (struct TSCHLegendAnchorRange)p_resizedLegendForFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1 dimension:(long long)arg2;
- (struct TSCHLegendAnchorRange)p_pushedLegendForFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1 dimension:(long long)arg2 returningIsConfined:(_Bool *)arg3;
- (_Bool)p_hasConfinedLocationWithinConfinementBoundsForLocation:(double)arg1 dimension:(long long)arg2 returningConfinedLocation:(double *)arg3;
- (_Bool)p_isLegendAnchoredForFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1 dimension:(long long)arg2 returningLegendLocation:(double *)arg3;
- (void)p_updateLegendConfinementBoundsForFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1;
- (void)p_updateLegendConfinementBoundsForChartAreaFrame:(struct CGRect)arg1 legendFrame:(struct CGRect)arg2;
- (_Bool)p_isInFrontOfLine:(struct TSCHLegendAnchorLine)arg1 forRect:(struct CGRect)arg2;
- (_Bool)p_isConfinedPushableAnchoring;
- (void)p_initializeAnchoringStateForFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1;
- (int)p_anchoringStateForLegendFrame:(struct CGRect)arg1 chartAreaFrame:(struct CGRect)arg2 dimension:(long long)arg3 returningAnchoringPosition:(double *)arg4;
- (void)dealloc;
- (id)initWithInitialFrames:(struct TSCHChartDrawableLayoutLegendResizerFrames)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartDrawableLayout : TSWPTextHostLayout
{
    struct {
        unsigned int chartLayoutState:1;
        unsigned int chartLayoutStructure:1;
    } mChartInvalidFlags;
    TSCHChartLayout *mChartLayout;
    TSDLayoutGeometry *mLayoutGeometryWhileCallingSuperComputeLayoutGeometry;
    TSDLayoutGeometry *mLastPureGeometry;
    TSDLayoutGeometry *mLastChartAreaGeometry;
    struct CGSize mMinSizeCache;
    _Bool mInResize;
    _Bool mSuppressChartLayoutInvalidation;
    TSDLayoutGeometry *mLegendGeometryForResize;
    TSCHChartDrawableLayoutLegendResizer *mLegendResizer;
}

@property(retain, nonatomic) TSCHChartDrawableLayoutLegendResizer *p_legendResizer; // @synthesize p_legendResizer=mLegendResizer;
@property(copy, nonatomic) TSDLayoutGeometry *p_legendGeometryForResize; // @synthesize p_legendGeometryForResize=mLegendGeometryForResize;
@property(copy, nonatomic) TSDLayoutGeometry *p_lastChartAreaGeometry; // @synthesize p_lastChartAreaGeometry=mLastChartAreaGeometry;
@property(copy, nonatomic) TSDLayoutGeometry *p_lastPureGeometry; // @synthesize p_lastPureGeometry=mLastPureGeometry;
@property(retain, nonatomic) TSCHChartLayout *p_chartLayoutNoCreate; // @synthesize p_chartLayoutNoCreate=mChartLayout;
- (struct CGRect)rectForSelection:(id)arg1;
- (void)layoutSearchForSpellingErrorsWithHitBlock:(CDUnknownBlockType)arg1 stop:(_Bool *)arg2;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (id)i_computeWrapPath;
- (struct CGRect)insertionFrame;
- (struct CGRect)alignmentFrame;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (int)wrapFitType;
- (id)visibleGeometries;
- (struct CGRect)frameForCulling;
- (struct CGRect)p_addMultiDataControlToInlineWrapBounds:(struct CGRect)arg1;
- (double)p_approximatedAdditionalHeightForMultiDataControlWithMinimumAccommodatingScale:(double)arg1;
- (double)p_approximateMultiDataControlUnscaledMinimumWidth;
- (double)p_approximateMultiDataControlUnscaledHeight;
- (_Bool)p_isPrintingInBackground;
- (id)p_constrainAndResizePureGeometry:(id)arg1 withValidChartLayout:(id)arg2 toChartAreaGeometry:(id *)arg3 toShadowGeometry:(id *)arg4 toInfoGeometry:(id *)arg5;
- (void)p_convertValidChartLayout:(id)arg1 andInfoGeometry:(id)arg2 toPureGeometry:(id *)arg3 toChartAreaGeometry:(id *)arg4 toShadowGeometry:(id *)arg5;
- (id)renderersWithRep:(id)arg1;
- (void)take3DDepth;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (void)p_addEdgeAlignmentGuidesForRect:(struct CGRect)arg1 set:(id)arg2;
- (struct CGSize)minimumSize;
- (struct CGSize)p_calcMinSize;
- (void)processChanges:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (_Bool)changesShouldClearLayout:(id)arg1;
- (_Bool)changesShouldSetNeedsLayout:(id)arg1;
- (id)propertiesThatInvalidateLayout;
- (id)computeInfoGeometryFromPureLayoutGeometry:(id)arg1;
- (_Bool)supportsParentRotation;
- (_Bool)canRotateChildLayout:(id)arg1;
- (id)computeInfoGeometryDuringResize;
- (id)computeLayoutGeometry;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (id)layoutGeometryFromInfo;
- (struct CGRect)boundsForStandardKnobs;
- (void)p_clearChartLayout;
- (void)p_forceValidateChartLayout;
- (void)p_validateChartLayout;
- (void)validate;
- (void)invalidate;
- (void)invalidateSize;
- (void)invalidateChartLayoutStructure;
- (void)invalidateChartLayoutState;
@property(nonatomic) unsigned long long dataSetIndex;
@property(readonly, nonatomic) TSCHChartModel *model;
@property(copy, nonatomic) TSDLayoutGeometry *legendModelGeometry;
@property(copy, nonatomic) TSDLayoutGeometry *legendGeometry;
- (void)p_setLegendGeometry:(id)arg1 fromTransform:(struct CGAffineTransform)arg2 onLayout:(id)arg3 shouldUpdateLayoutItemSize:(_Bool)arg4;
- (void)p_setLegendSize:(struct CGSize)arg1;
- (struct CGRect)snappedLegendModelFrame:(struct CGRect)arg1;
@property(copy, nonatomic) NSDictionary *seriesIndexedPieWedgeExplosions;
- (id)p_chartLayout2D;
@property(copy, nonatomic) NSArray *pieWedgeExplosions;
- (id)pieWedgeExplosionsForSeriesIndices:(id)arg1;
@property(readonly, nonatomic) NSIndexSet *pieWedgeExplosionSeriesIndices;
- (void)setChartLayoutPropertyValue:(id)arg1 forKey:(id)arg2;
- (void)p_postLayoutPropertyValueDidChangeNotification;
@property(readonly, nonatomic) _Bool is3DChart;
@property(readonly, retain, nonatomic) TSCHChartLayout *chartLayout;
@property(readonly, nonatomic) TSCHChartInfo *chartInfo;
- (id)chartDrawableInfo;
@property(readonly, retain, nonatomic) TSCHChartLayout *p_chartLayout;
- (Class)repClassOverride;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (void)setRotation3D:(id)arg1;
@property(readonly, nonatomic) TSCH3DVector *rotation3D;

@end

__attribute__((visibility("hidden")))
@interface TSCHSearchReference : NSObject <TSKSearchReference>
{
    TSCHSearchSelection *mSelection;
    _Bool _autohideHighlight;
    _Bool _pulseHighlight;
    NSArray *_findHighlights;
    id <TSKAnnotation> annotation;
    struct CGPoint searchReferencePoint;
}

@property(retain, nonatomic) id <TSKAnnotation> annotation; // @synthesize annotation;
@property(nonatomic) struct CGPoint searchReferencePoint; // @synthesize searchReferencePoint;
@property(nonatomic) _Bool pulseHighlight; // @synthesize pulseHighlight=_pulseHighlight;
@property(nonatomic) _Bool autohideHighlight; // @synthesize autohideHighlight=_autohideHighlight;
@property(retain, nonatomic) NSArray *findHighlights; // @synthesize findHighlights=_findHighlights;
- (_Bool)isEqual:(id)arg1;
- (id)searchReferenceEnd;
- (id)searchReferenceStart;
- (id)searchReferenceForReplacingWithString:(id)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (_Bool)isReplaceable;
@property(readonly, nonatomic) TSCHSearchSelection *selection; // @synthesize selection=mSelection;
- (id)model;
- (id)commandForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, nonatomic) TSCHChartDrawableInfo *chartInfo;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSelection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHSearchSelection : TSCHSelection
{
    NSString *mOriginalString;
    struct _NSRange mRange;
}

@property(readonly, copy, nonatomic) NSString *originalString; // @synthesize originalString=mOriginalString;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=mRange;
- (id)searchSelectionForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
- (id)stringByReplacingSelectionWithString:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, copy, nonatomic) TSCHSelectionPath *path;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1 path:(id)arg2 originalString:(id)arg3 range:(struct _NSRange)arg4;
- (id)initWithChartInfo:(id)arg1 paths:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHSelection : TSKSelection <NSCopying>
{
    TSCHChartDrawableInfo *mInfo;
    NSArray *mPaths;
}

+ (Class)archivedSelectionClass;
@property(readonly, copy, nonatomic) NSArray *paths; // @synthesize paths=mPaths;
@property(readonly, retain, nonatomic) TSCHChartDrawableInfo *chartInfo; // @synthesize chartInfo=mInfo;
- (void)saveToArchive:(struct ChartSelectionArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ChartSelectionArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy, nonatomic) TSCHSelectionPath *firstPath;
@property(readonly, nonatomic) _Bool returnChartFrameForAutoscroll;
- (void)dealloc;
- (id)init;
- (id)initWithChartInfo:(id)arg1 path:(id)arg2;
- (id)initWithChartInfo:(id)arg1 paths:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHArchivedSelection : TSPObject <TSKArchivedSelection>
{
    TSCHSelection *mSelection;
}

@property(retain, nonatomic) TSKSelection *selection; // @synthesize selection=mSelection;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHSelectionPath : NSObject <NSCopying>
{
    TSCHSelectionPathType *mPathType;
    NSArray *mArguments;
    TSCHSelectionPath *mSubSelection;
}

+ (id)selectionPathWithPathType:(id)arg1 arguments:(id)arg2 subSelection:(id)arg3;
+ (id)selectionPathWithPathType:(id)arg1 arguments:(id)arg2;
+ (id)selectionPathWithType:(id)arg1 name:(id)arg2 arguments:(id)arg3;
+ (id)seriesValueLabelSelectionPathWithSeriesIndex:(unsigned long long)arg1;
+ (id)seriesSelectionPathWithSeriesIndex:(unsigned long long)arg1;
+ (id)seriesSymbolsSelectionPathWithSeriesIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) TSCHSelectionPath *subSelection; // @synthesize subSelection=mSubSelection;
@property(readonly, nonatomic) TSCHSelectionPathType *pathType; // @synthesize pathType=mPathType;
- (void)saveToArchive:(struct ChartSelectionPathArchive *)arg1;
- (id)initWithArchive:(const struct ChartSelectionPathArchive *)arg1;
- (id)description;
- (id)debuggingName;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)rangeOfPathsToPath:(id)arg1;
- (unsigned long long)argumentsCount;
- (id)argumentAtIndex:(unsigned long long)arg1;
- (id)name;
- (id)type;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPathType:(id)arg1 arguments:(id)arg2 subSelection:(id)arg3;
- (id)init;
- (id)initWithType:(id)arg1 name:(id)arg2 arguments:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHSelectionPathType : NSObject <NSCopying>
{
    NSString *mType;
    NSString *mName;
}

+ (id)selectionPathTypeWithType:(id)arg1 name:(id)arg2;
+ (id)gridLineType;
+ (id)axisLineType;
+ (id)chartBodyType;
+ (id)trendLineR2Type;
+ (id)trendLineEquationType;
+ (id)trendLineType;
+ (id)errorBarType;
+ (id)legendTrendLineNameType;
+ (id)legendSeriesNameType;
+ (id)legendType;
+ (id)seriesValueLabelType;
+ (id)seriesSymbolType;
+ (id)seriesLabelType;
+ (id)seriesType;
+ (id)axisLabelsType;
+ (id)axisTitleType;
+ (id)categoryAxisType;
+ (id)valueAxisType;
+ (id)chartDataSetNameType;
+ (id)chartTitleType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=mName;
@property(readonly, nonatomic) NSString *type; // @synthesize type=mType;
- (void)saveToArchive:(struct ChartSelectionPathTypeArchive *)arg1;
- (id)initWithArchive:(const struct ChartSelectionPathTypeArchive *)arg1;
- (_Bool)canApplyChartStyleWithDescription:(id)arg1;
- (_Bool)canApplyShapeStyle;
- (_Bool)canApplyParagraphStyle;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(id)arg1 name:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHNumberFormat : NSObject <NSCopying, NSMutableCopying, TSCHDataFormatter, TSCHCustomFormatSupport, TSCHDataFormatterPersistableStyleObject>
{
    CDStruct_bfed0e84 mFormatStruct;
    NSString *mPrefixString;
    NSString *mSuffixString;
}

+ (int)labelFormatTypeFromTSUFormatType:(int)arg1;
+ (_Bool)supportsFormatType:(int)arg1;
+ (id)numberFormatWithFormatStruct:(CDStruct_bfed0e84)arg1 prefixString:(id)arg2 suffixString:(id)arg3;
+ (id)numberFormatWithFormatType:(int)arg1 decimalPlaces:(unsigned int)arg2 showThousandsSeparator:(_Bool)arg3;
+ (id)defaultDecimalNumberFormat;
+ (_Bool)defaultBaseUseMinusSign;
+ (unsigned int)defaultBasePlaces;
+ (unsigned int)defaultBase;
+ (int)defaultNegativeNumberStyle;
+ (int)defaultFractionAccuracy;
+ (id)defaultCurrencyCode;
+ (id)automaticDecimalPlaces;
+ (id)instanceWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;
- (id).cxx_construct;
- (id)convertToSupportedClientFormatObject;
- (id)convertToPersistableStyleObject;
- (_Bool)supportsAutoMinMax;
- (_Bool)isCompatibleWithDataFormatter:(id)arg1;
- (id)chartFormattedInspectorStringForValue:(id)arg1;
- (id)chartFormattedStringForValue:(id)arg1;
- (id)p_formattedBodyStringForDouble:(double)arg1;
- (id)dataFormatterForDocumentRoot:(id)arg1;
- (unsigned int)customFormatListKey;
- (CDStruct_bfed0e84)formatStruct;
- (_Bool)isCustom;
@property(readonly, nonatomic) _Bool baseUseMinusSign;
- (_Bool)p_baseUseMinusSignIfAvailable;
- (_Bool)p_baseUseMinusSign;
@property(readonly, nonatomic) unsigned int basePlaces;
- (unsigned int)p_basePlacesIfAvailable;
- (unsigned int)p_basePlaces;
@property(readonly, nonatomic) unsigned int base;
- (unsigned int)p_baseIfAvailable;
- (unsigned int)p_base;
@property(readonly, nonatomic) double scaleFactor;
@property(readonly, copy, nonatomic) NSString *suffixString;
@property(readonly, copy, nonatomic) NSString *prefixString;
@property(readonly, nonatomic) int fractionAccuracy;
- (int)p_fractionAccuracyIfAvailable;
- (int)p_fractionAccuracy;
@property(readonly, nonatomic) _Bool showThousandsSeparator;
- (_Bool)p_showThousandsSeparatorIfAvailable;
- (_Bool)p_showThousandsSeparator;
@property(readonly, nonatomic) int negativeStyle;
- (int)p_negativeStyleIfAvailable;
- (int)p_negativeStyle;
@property(readonly, nonatomic) _Bool useAccountingStyle;
- (_Bool)p_useAccountingStyleIfAvailable;
- (_Bool)p_useAccountingStyle;
@property(readonly, copy, nonatomic) NSString *currencyCode;
- (id)p_currencyCodeIfAvailable;
- (id)p_currencyCode;
@property(readonly, nonatomic) unsigned int decimalPlaces;
- (unsigned int)p_decimalPlacesIfAvailable;
- (unsigned int)p_decimalPlaces;
- (int)valueType;
@property(readonly, nonatomic) int formatType;
- (const CDStruct_b87b2d04 *)p_customFormatData;
- (_Bool)p_hasValidDecimalPlaces;
- (id)p_formatTypeDescription;
@property(readonly, nonatomic) _Bool isBase;
@property(readonly, nonatomic) _Bool isFraction;
- (_Bool)isScientific;
@property(readonly, nonatomic) _Bool isPercentage;
@property(readonly, nonatomic) _Bool isCurrency;
@property(readonly, nonatomic) _Bool usesNumberFormatStruct;
- (id)numberFormatByResettingToDefaultNegativeStyleIfAvailable;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithFormatStruct:(CDStruct_bfed0e84)arg1 prefixString:(id)arg2 suffixString:(id)arg3;
- (id)p_initWithFormatStruct:(CDStruct_bfed0e84)arg1 prefixString:(id)arg2 suffixString:(id)arg3;
- (id)upgradedNumberFormatFromPreUFFOrUnity1_0;
- (void)saveToArchive:(struct FormatStructArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FormatStructArchive *)arg1 unarchiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHMutableNumberFormat : TSCHNumberFormat <TSCHCustomFormatPasteSupport>
{
}

- (void)updateAfterPasteForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2;
@property(nonatomic) _Bool baseUseMinusSign;
@property(nonatomic) unsigned int basePlaces;
@property(nonatomic) unsigned int base;
@property(copy, nonatomic) NSString *suffixString;
@property(copy, nonatomic) NSString *prefixString;
@property(nonatomic) int fractionAccuracy;
- (void)p_setFractionAccuracy:(int)arg1;
@property(nonatomic) _Bool showThousandsSeparator;
@property(nonatomic) int negativeStyle;
@property(nonatomic) _Bool useAccountingStyle;
@property(copy, nonatomic) NSString *currencyCode;
@property(nonatomic) unsigned int decimalPlaces;
- (void)setValueType:(int)arg1;
@property(nonatomic) int formatType;
- (id)p_formatTypeAffectedPropertyKeys;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChunkManager : NSObject
{
    TSCHChartInfo *mChartInfo;
    unsigned long long *mSeriesMap;
    unsigned long long *mValuesMap;
    unsigned long long mChunkMapCount;
}

+ (id)p_allChartDeliveryStylesLocalized:(_Bool)arg1;
+ (id)p_allNonLocalizedChartDeliveryStyles;
+ (id)p_allLocalizedChartDeliveryStyles;
+ (id)p_makeAllChartDeliveryStylesLocalized:(_Bool)arg1;
- (id)containedTextForChartDeliveryStyle:(unsigned long long)arg1 chunkIndex:(unsigned long long)arg2;
- (id)p_nameForMultiDataSetCategory:(unsigned long long)arg1;
- (id)p_seriesNameForSeriesAtIndex:(unsigned long long)arg1 withPrefix:(id)arg2;
- (id)p_backgroundStringForChartWithTitle:(id)arg1;
- (void)p_updateCacheForElementsInSets;
- (void)p_updateCacheForElementsInSeries;
- (void)p_updateCacheForSets;
- (void)p_updateCacheForSeries;
- (void)updateCache:(unsigned long long)arg1;
- (_Bool)p_canAddChunkForSeries:(id)arg1 valueIndex:(long long)arg2;
- (_Bool)lastChunkForSeriesIndex:(unsigned long long)arg1 currentChunk:(unsigned long long)arg2 chunkStyle:(unsigned long long)arg3;
- (void)adjustRangeForRep:(id)arg1 seriesIndex:(unsigned long long)arg2 chunkIndex:(unsigned long long)arg3 finalTexture:(_Bool)arg4 valueStart:(long long *)arg5 valueCount:(long long *)arg6;
- (id)animationFiltersWithDefaultFilters:(id)arg1;
- (void)adjustRangeForRep:(id)arg1 chunkIndex:(unsigned long long)arg2 finalTexture:(_Bool)arg3 seriesStart:(long long *)arg4 seriesCount:(long long *)arg5;
- (unsigned long long)p_chunkCountForChartDeliveryStyle:(unsigned long long)arg1;
- (unsigned long long)chunkCountForChartDeliveryStyle:(unsigned long long)arg1;
- (_Bool)isVisibleAtBeginningOfMagicChartBuildForDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (unsigned long long)chartDeliveryStyleFromTSDDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (_Bool)hasBackgroundLayerForPieChart;
- (_Bool)p_hasBackgroundFill;
- (_Bool)p_legendOn;
- (_Bool)p_titleOn;
- (_Bool)p_isMultiData;
- (_Bool)p_isPie;
- (void)clearCaches;
- (unsigned long long)chunkCountByUpdatingCacheIfNecessaryForChartDeliveryStyle:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStylePreset : TSPObject <TSPCopying, TSSPreset, TSCHStyleSwapSupporting>
{
    id <TSCHStyleActAlike> mChartStyle;
    id <TSCHStyleActAlike> mLegendStyle;
    NSArray *mValueAxisStyles;
    NSArray *mCategoryAxisStyles;
    NSArray *mSeriesStyles;
    NSArray *mParagraphStyles;
    struct __CFUUID *mUUID;
}

+ (void)upgradeForTrendLineEquationAndR2LabelsPropertyMigrationFromChartStyle:(id)arg1 seriesStyles:(id)arg2;
+ (void)upgradeFor3DShadowPropertyMigrationFromChartStyle:(id)arg1 seriesStyles:(id)arg2;
+ (void)upgradeShadowPropertyForParagraphStyles:(id)arg1;
+ (void)upgradeTrendLinesAndErrorBarsForSeriesPresets:(id)arg1 valueAxisPresets:(id)arg2 paragraphPresets:(id)arg3;
+ (id)p_getDefaultTrendLineStrokeColor:(id)arg1;
+ (id)p_getDefaultTrendLineShadowColor:(id)arg1;
+ (id)p_getDefaultErrorBarColor:(id)arg1 valueAxisStyles:(id)arg2;
+ (void)p_replaceProperty:(int)arg1 inStyle:(id)arg2 withObject:(id)arg3;
@property(readonly, nonatomic) struct __CFUUID *uuid; // @synthesize uuid=mUUID;
@property(readonly, nonatomic) NSArray *paragraphStyles; // @synthesize paragraphStyles=mParagraphStyles;
@property(readonly, nonatomic) NSArray *seriesStyles; // @synthesize seriesStyles=mSeriesStyles;
@property(readonly, nonatomic) NSArray *categoryAxisStyles; // @synthesize categoryAxisStyles=mCategoryAxisStyles;
@property(readonly, nonatomic) NSArray *valueAxisStyles; // @synthesize valueAxisStyles=mValueAxisStyles;
@property(readonly, nonatomic) id <TSCHStyleActAlike> legendStyle; // @synthesize legendStyle=mLegendStyle;
@property(readonly, nonatomic) id <TSCHStyleActAlike> chartStyle; // @synthesize chartStyle=mChartStyle;
- (id)styleOwnerFromSwapType:(int)arg1 andIndex:(unsigned long long)arg2;
- (id)applyStyleSwapTuple:(id)arg1;
- (id)buildSeriesNonStyle;
- (id)buildAxisNonStyle;
- (id)buildLegendNonStyle;
- (id)buildChartNonStyle;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)swatchImage;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)isEquivalentToPreset:(id)arg1;
- (_Bool)isEquivalentToPreset:(id)arg1 outReasons:(id *)arg2;
- (id)allStyles;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 chartStyle:(id)arg2 legendStyle:(id)arg3 valueAxisStyles:(id)arg4 categoryAxisStyles:(id)arg5 seriesStyles:(id)arg6;
- (id)initWithContext:(id)arg1 chartStyle:(id)arg2 legendStyle:(id)arg3 valueAxisStyles:(id)arg4 categoryAxisStyles:(id)arg5 seriesStyles:(id)arg6 paragraphStyles:(id)arg7;
- (id)initWithContext:(id)arg1 chartStyle:(id)arg2 legendStyle:(id)arg3 valueAxisStyles:(id)arg4 categoryAxisStyles:(id)arg5 seriesStyles:(id)arg6 paragraphStyles:(id)arg7 uuid:(struct __CFUUID *)arg8;
- (id)p_initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
@property(readonly) TSCHChartStyleState *chartStyleState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHText : NSObject
{
    TSUCache *mTSWPTextCache;
    TSUCache *mTSWPColumnCache;
    TSUCache *mNumberWidthCache;
    TSUCache *mDigitWidthFonts;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedText;
+ (id)_singletonAlloc;
- (struct __CTFont *)retainedCTFontForParagraphStyle:(id)arg1;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 viewScale:(double)arg4;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 range:(struct _NSRange)arg4 viewScale:(double)arg5;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 atPosition:(struct CGPoint)arg4 viewScale:(double)arg5;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 wrapWidth:(double)arg4 atPosition:(struct CGPoint)arg5 viewScale:(double)arg6;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 atPosition:(struct CGPoint)arg4 range:(struct _NSRange)arg5 viewScale:(double)arg6;
- (void)drawText:(id)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 wrapWidth:(double)arg4 atPosition:(struct CGPoint)arg5 range:(struct _NSRange)arg6 viewScale:(double)arg7;
- (void)drawAttributedString:(struct __CFAttributedString *)arg1 paragraphStyle:(id)arg2 intoContext:(struct CGContext *)arg3 atPosition:(struct CGPoint)arg4 range:(struct _NSRange)arg5 viewScale:(double)arg6;
- (struct CGRect)frameForRange:(struct _NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 outErasableFrame:(struct CGRect *)arg4;
- (struct CGRect)frameForRange:(struct _NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3;
- (struct CGRect)frameForRange:(struct _NSRange)arg1 inText:(id)arg2 paragraphStyle:(id)arg3 wrapWidth:(double)arg4 outErasableFrame:(struct CGRect *)arg5;
- (struct CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 outErasableFrame:(struct CGRect *)arg3;
- (struct CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2;
- (struct CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3;
- (struct CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(struct CGRect *)arg4 checkNumberTemplates:(_Bool)arg5;
- (struct CGSize)measureText:(id)arg1 paragraphStyle:(id)arg2 wrapWidth:(double)arg3 outErasableFrame:(struct CGRect *)arg4;
- (struct CGSize)measureAttributedString:(struct __CFAttributedString *)arg1 paragraphStyle:(id)arg2 outErasableFrame:(struct CGRect *)arg3;
- (id)p_wpStorageForAttributedString:(struct __CFAttributedString *)arg1 paragraphStyle:(id)arg2;
- (struct CGSize)p_wpWidthForNumberTemplate:(id)arg1 paragraphStyle:(id)arg2;
- (_Bool)p_styleSupportsEqualDigits:(id)arg1;
- (id)p_wpColumnForText:(id)arg1 paragraphStyle:(id)arg2 textBlack:(_Bool)arg3 wrapWidth:(double)arg4;
- (id)p_newWPColumnForText:(id)arg1 wpTextObject:(id)arg2 wrapWidth:(double)arg3;
- (id)p_wpTextForParagraphStyle:(id)arg1 textBlack:(_Bool)arg2;
- (void)clearCaches;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCHCallbackAnimationDelegate : NSObject
{
    id target;
    SEL selector;
}

@property(nonatomic) SEL selector; // @synthesize selector;
@property(retain, nonatomic) id target; // @synthesize target;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImager : NSObject
{
}

+ (void)drawGenericImageIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 preset:(id)arg3 usingRepresentativeSpecificSeriesFillProperties:(id)arg4 outShouldCache:(_Bool *)arg5;
+ (id)presetImagerForChartType:(id)arg1;
- (id)p_strokeFromStyle:(id)arg1 specific:(int)arg2 default:(int)arg3;
- (id)p_objectFromStyle:(id)arg1 specific:(int)arg2 default:(int)arg3;
- (void)p_fillPath:(struct CGPath *)arg1 withFill:(id)arg2 inContext:(struct CGContext *)arg3;
- (id)p_shadow;
- (_Bool)p_preserveAspectRatio;
- (struct CGContext *)p_newContextOfSize:(struct CGSize)arg1;
- (struct CGSize)p_nativeSize;
- (id)p_chartType;
- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (struct UIEdgeInsets)swatchImageEdgeInsetsForSize:(struct CGSize)arg1;
- (struct CGSize)p_drawAndOffsetMultiDataSliderIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3;
- (void)p_drawUnshadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)initWithChartType:(id)arg1;
- (id)init;
- (id)p_init;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerBarFamily : TSCHPresetImager
{
}

- (void)p_drawBarInContext:(struct CGContext *)arg1 frame:(struct CGRect)arg2 stroke:(id)arg3 fill:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerColumn : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerMultiDataColumn : TSCHPresetImagerColumn
{
}

- (id)p_shadow;
- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerBar : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerMultiDataBar : TSCHPresetImagerBar
{
}

- (id)p_shadow;
- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerStackedColumn : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerStackedBar : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerLineFamily : TSCHPresetImager
{
}

- (void)p_drawAreaInContext:(struct CGContext *)arg1 points:(const struct CGPoint *)arg2 pointsCount:(unsigned long long)arg3 stroke:(id)arg4 fill:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerLine : TSCHPresetImagerLineFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_strokeFromStyle:(id)arg1 specific:(int)arg2 default:(int)arg3;
- (struct UIEdgeInsets)swatchImageEdgeInsetsForSize:(struct CGSize)arg1;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerArea : TSCHPresetImagerLineFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerStackedArea : TSCHPresetImagerLineFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerScatter : TSCHPresetImagerLineFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (struct UIEdgeInsets)swatchImageEdgeInsetsForSize:(struct CGSize)arg1;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerMultiDataScatter : TSCHPresetImagerScatter
{
}

- (id)p_shadow;
- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerBubble : TSCHPresetImagerLineFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerMultiDataBubble : TSCHPresetImagerBubble
{
}

- (id)p_shadow;
- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerPie : TSCHPresetImager
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerMixed : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImager2Axis : TSCHPresetImagerBarFamily
{
}

- (void)p_drawShadowedContentIntoContext:(struct CGContext *)arg1 size:(struct CGSize)arg2 contentsScale:(double)arg3 preset:(id)arg4 shouldCache:(_Bool *)arg5;
- (id)p_chartType;

@end

__attribute__((visibility("hidden")))
@interface TSCHPresetImagerInfoBased : TSCHPresetImager
{
    TSCHChartType *mChartType;
}

+ (id)presetImagerForChartType:(id)arg1;
- (id)imageWithPreset:(id)arg1 target:(int)arg2 imageSize:(struct CGSize)arg3 imageScale:(double)arg4 swatchFrame:(struct CGRect)arg5 documentRoot:(id)arg6 shouldCache:(_Bool *)arg7;
- (struct UIEdgeInsets)swatchImageEdgeInsetsForSize:(struct CGSize)arg1;
- (id)p_rectAdjustmentForChartType:(id)arg1;
- (id)p_chartType;
- (void)dealloc;
- (id)initWithChartType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAbstractAreaLayoutItem : TSCHChartLayoutItem
{
}

@property(readonly, nonatomic) struct CGRect titleFrame;
- (struct CGRect)calcDrawingRect;

@end

__attribute__((visibility("hidden")))
@interface TSCHConfiguration : NSObject
{
    _Bool mSupportsChartDataEditor;
    _Bool mSupportsChartRangeEditingMode;
    _Bool mSupportsNumberFormatSameAsSource;
    _Bool mShowMessageOnSelection;
    _Bool mDisableHighQualityRenderingIfNecessary;
    _Bool mSupports3DFillDataEmbeddingRecovery;
    _Bool mUse3DFillFor3DChartFallback;
    _Bool mShouldForceDiscreteGraphicsFor3D;
    _Bool mExportsUsingSageKeynoteChartNonStyleDefaultsOverride;
    _Bool mSupportsTextBackground;
    _Bool mSupportsTextWrapping;
    Class mMultiDataChartOptionsControllerBuildSupportClass;
    NSString *mSaveChartStyleHelpKey;
}

+ (void)resetSharedChartConfiguration;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedChartConfiguration;
+ (id)_singletonAlloc;
@property(copy, nonatomic) NSString *saveChartStyleHelpKey; // @synthesize saveChartStyleHelpKey=mSaveChartStyleHelpKey;
@property(nonatomic) Class multiDataChartOptionsControllerBuildSupportClass; // @synthesize multiDataChartOptionsControllerBuildSupportClass=mMultiDataChartOptionsControllerBuildSupportClass;
@property(nonatomic) _Bool supportsTextWrapping; // @synthesize supportsTextWrapping=mSupportsTextWrapping;
@property(nonatomic) _Bool supportsTextBackground; // @synthesize supportsTextBackground=mSupportsTextBackground;
@property(nonatomic) _Bool exportsUsingSageKeynoteChartNonStyleDefaultsOverride; // @synthesize exportsUsingSageKeynoteChartNonStyleDefaultsOverride=mExportsUsingSageKeynoteChartNonStyleDefaultsOverride;
@property(nonatomic) _Bool shouldForceDiscreteGraphicsFor3D; // @synthesize shouldForceDiscreteGraphicsFor3D=mShouldForceDiscreteGraphicsFor3D;
@property(nonatomic) _Bool use3DFillFor3DChartFallback; // @synthesize use3DFillFor3DChartFallback=mUse3DFillFor3DChartFallback;
@property(nonatomic) _Bool supports3DFillDataEmbeddingRecovery; // @synthesize supports3DFillDataEmbeddingRecovery=mSupports3DFillDataEmbeddingRecovery;
@property(nonatomic) _Bool disableHighQualityRenderingIfNecessary; // @synthesize disableHighQualityRenderingIfNecessary=mDisableHighQualityRenderingIfNecessary;
@property(nonatomic) _Bool showMessageOnSelection; // @synthesize showMessageOnSelection=mShowMessageOnSelection;
@property(nonatomic) _Bool supportsNumberFormatSameAsSource; // @synthesize supportsNumberFormatSameAsSource=mSupportsNumberFormatSameAsSource;
@property(nonatomic) _Bool supportsChartRangeEditingMode; // @synthesize supportsChartRangeEditingMode=mSupportsChartRangeEditingMode;
@property(nonatomic) _Bool supportsChartDataEditor; // @synthesize supportsChartDataEditor=mSupportsChartDataEditor;
@property(readonly) TSSPropertyMap *appSpecificPropertyOverrides;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartPieBodyLayoutItem : TSCHChartBodyLayoutItem
{
    TSCHPieBodyLayoutItemPathCache *mPathCache;
}

@property(retain) TSCHPieBodyLayoutItemPathCache *p_pathCache; // @synthesize p_pathCache=mPathCache;
- (id)pathCacheForSeries:(unsigned long long)arg1;
- (id)knobsOfElementForSeries:(unsigned long long)arg1;
- (struct CGPath *)pathOfElementForSeries:(unsigned long long)arg1 outWedgeCenterPoint:(struct CGPoint *)arg2;
- (struct CGAffineTransform)transformForRenderingElementForSeries:(unsigned long long)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (struct CGAffineTransform)transformForRenderingLabelForSeries:(unsigned long long)arg1 outElementSize:(struct CGSize *)arg2 outClipRect:(struct CGRect *)arg3;
- (id)renderersWithRep:(id)arg1;
- (struct CGRect)calcDrawingRect;
- (struct CGRect)calcOverhangRect;
- (struct CGSize)overhangSizeForBodySize:(struct CGSize)arg1;
- (struct CGSize)bodySizeForOverhangSize:(struct CGSize)arg1;
- (void)p_collectMaxRatio:(double *)arg1 maxLabelOverhang:(double *)arg2 maxWedgeExplosion:(float *)arg3 maxComboExplosion:(float *)arg4;
- (void)setLayoutSize:(struct CGSize)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHPieBodyLayoutItemPathCache : NSObject
{
    unsigned long long seriesIndex;
    struct CGPath *pathLayoutRelative;
    struct CGPath *pathTransformRelative;
    NSArray *pathSelectionKnobs;
    struct CGPoint wedgeCenterPoint;
    struct CGRect rootedLayoutRect;
}

@property(readonly, copy, nonatomic) NSArray *pathSelectionKnobs; // @synthesize pathSelectionKnobs;
@property(readonly, nonatomic) struct CGPath *pathTransformRelative; // @synthesize pathTransformRelative;
@property(readonly, nonatomic) struct CGPath *pathLayoutRelative; // @synthesize pathLayoutRelative;
@property(readonly, nonatomic) struct CGPoint wedgeCenterPoint; // @synthesize wedgeCenterPoint;
@property(readonly, nonatomic) struct CGRect rootedLayoutRect; // @synthesize rootedLayoutRect;
@property(readonly, nonatomic) unsigned long long seriesIndex; // @synthesize seriesIndex;
- (void)dealloc;
- (id)initWithSeriesIndex:(unsigned long long)arg1 rootedLayoutRect:(struct CGRect)arg2 wedgeCenterPoint:(struct CGPoint)arg3 pathLayoutRelative:(struct CGPath *)arg4 pathTransformRelative:(struct CGPath *)arg5 pathSelectionKnobs:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSCHSageGeometryHelper : NSObject
{
    TSCHChartInfo *mChartInfo;
    TSDInfoGeometry *mImportedInfoGeometry;
}

+ (struct CGRect)sageChartAreaBoundsForExportWithChartInfo:(id)arg1 geometryRect:(struct CGRect)arg2 returningContainingViewportSize:(id *)arg3;
+ (id)helperWithImportedChartInfo:(id)arg1 importedInfoGeometry:(id)arg2;
- (struct CGSize)naturalSize;
- (void)dealloc;
- (id)initWithImportedChartInfo:(id)arg1 importedInfoGeometry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisPaddingLayoutItem : TSCHChartLayoutItem
{
}

- (struct CGSize)calcMinSize;

@end

__attribute__((visibility("hidden")))
@interface TSCHTrendLineData : NSObject <TSCHUnretainedParent>
{
    TSCHChartSeries *mSeries;
    int mLineType;
    _Bool mShowTrendLine;
    TSURegressionModel *mRegression;
    double mMaxYValue;
    double mMinYValue;
    double mMaxXValue;
    double mMinXValue;
    int mInputAxisType;
    int mOutputAxisType;
    _Bool mTrendLineInvalid;
    TSDBezierPath *mCachedTrendLinePath;
    struct CGRect mCachedChartFrame;
    double mOffsetInBody;
    _Bool mCachedChartVertical;
}

@property(readonly, nonatomic) _Bool showTrendLine; // @synthesize showTrendLine=mShowTrendLine;
- (void)p_releaseCache;
- (id)p_equationStorageWithText:(id)arg1;
- (void)p_updateTrendLineData;
- (void)p_generateRegression;
- (unsigned long long)p_fillArrayX:(double *)arg1 andY:(double *)arg2 fromPoints:(id)arg3 hasNegativeX:(_Bool *)arg4;
- (unsigned long long)p_fillArrayX:(id)arg1 andY:(id)arg2 fromPoints:(id)arg3;
- (void)p_calcMARegression:(unsigned long long)arg1 xData:(id)arg2 yData:(id)arg3;
- (void)p_calcBoundsForMovingAverage;
- (void)p_calcRegression:(unsigned long long)arg1 xData:(double *)arg2 yData:(double *)arg3;
- (void)p_calcBounds;
- (id)p_dataPointValues;
- (int)p_getTrendLineType;
- (id)trendLinePathForChartRect:(struct CGRect)arg1 offsetInBody:(double)arg2 vertical:(_Bool)arg3;
- (void)p_addPathToTrendLinePathWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2 curved:(_Bool)arg3 curveFitter:(id)arg4;
- (id)p_linePathFromPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
- (CDStruct_c3b9c2ee)p_unitPoint:(CDStruct_c3b9c2ee)arg1 toScreenFrame:(struct CGRect)arg2 offset:(double)arg3 vertical:(_Bool)arg4;
- (struct __CFAttributedString *)newEquationAttributedString;
- (void)trendLineUnitSpacePoints:(CDStruct_183601bc **)arg1 count:(unsigned long long *)arg2 drawCurve:(_Bool *)arg3 maxPoints:(unsigned long long)arg4;
- (double)maxValueForAxisID:(id)arg1;
- (double)minValueForAxisID:(id)arg1;
- (void)updateIfNeeded;
- (void)invalidateData;
- (_Bool)showTrendLineForAxisID:(id)arg1;
@property(readonly, nonatomic) float rSquaredTextOpacity;
@property(readonly, nonatomic) float equationTextOpacity;
@property(readonly, nonatomic) NSString *trendLineLegendText;
@property(readonly, nonatomic) NSString *rSquaredText;
@property(readonly, nonatomic) _Bool showRSquared;
@property(readonly, nonatomic) _Bool showEquation;
@property(readonly, nonatomic) _Bool showTrendLineLegendText;
- (void)clearParent;
- (void)dealloc;
- (id)initWithSeries:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHTrendDataPoint : NSObject
{
    double mDataPointX;
    double mDataPointY;
    unsigned long long mGroupIndex;
}

- (long long)xValueCompare:(id)arg1;
- (unsigned long long)groupIndex;
- (double)dataPointY;
- (double)dataPointX;
- (id)initWithPointX:(double)arg1 pointY:(double)arg2 forGroup:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DColorLUTShaderEffectTextureUnit : NSObject
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DColorLUTShaderEffect : TSCH3DShaderEffect
{
}

+ (Class)stateClass;
+ (id)variableColorLUTTexture;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableColorLUTTexture;

@end

__attribute__((visibility("hidden")))
@interface TSCHPieSeriesModelCache : NSObject
{
    TSCHChartModel *mChartModel;
    TSCHChartInfo *mChartInfo;
    _Bool mIsSingleCircleSpecialCase;
    TSCHChartSeries *mSingleCircleSeriesElement;
    unsigned long long mNumberOfSeries;
    double mTotalValue;
    TSCHChartSeries *mCurrentSeries;
    unsigned long long mCurrentSeriesIndex;
    double mCurrentSeriesAxisValue;
    double mCurrentSeriesPercentage;
    double mCurrentSeriesStartAngle;
    double mCurrentSeriesAngleSweep;
    _Bool mCurrentSeriesNullData;
    double mMidAngle;
    double mEndAngle;
    float mWedgeExplosion;
    float mLabelExplosion;
    float mEffectiveWedgeExplosion;
    float mEffectiveLabelExplosion;
    NSString *mLabelString;
    TSWPParagraphStyle *mParagraphStyle;
    TSDShadow *mSeriesShadow;
    TSDStroke *mSeriesStroke;
    TSDFill *mSeriesFill;
    double mSeriesOpacity;
    _Bool mGroupedShadow;
}

@property(readonly) _Bool groupedShadow; // @synthesize groupedShadow=mGroupedShadow;
@property(readonly) double seriesOpacity; // @synthesize seriesOpacity=mSeriesOpacity;
@property(readonly) TSDFill *seriesFill; // @synthesize seriesFill=mSeriesFill;
@property(readonly) TSDStroke *seriesStroke; // @synthesize seriesStroke=mSeriesStroke;
@property(readonly) TSDShadow *seriesShadow; // @synthesize seriesShadow=mSeriesShadow;
@property(readonly) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly) NSString *labelString; // @synthesize labelString=mLabelString;
@property(readonly) float effectiveLabelExplosion; // @synthesize effectiveLabelExplosion=mEffectiveLabelExplosion;
@property(readonly) float effectiveWedgeExplosion; // @synthesize effectiveWedgeExplosion=mEffectiveWedgeExplosion;
@property(readonly) float labelExplosion; // @synthesize labelExplosion=mLabelExplosion;
@property(readonly) float wedgeExplosion; // @synthesize wedgeExplosion=mWedgeExplosion;
@property(readonly) double percentage; // @synthesize percentage=mCurrentSeriesPercentage;
@property(readonly) double endAngle; // @synthesize endAngle=mEndAngle;
@property(readonly) double midAngle; // @synthesize midAngle=mMidAngle;
@property(readonly) TSCHChartSeries *series; // @synthesize series=mCurrentSeries;
@property(readonly) _Bool nullData; // @synthesize nullData=mCurrentSeriesNullData;
@property(readonly) double startAngle; // @synthesize startAngle=mCurrentSeriesStartAngle;
@property(readonly) double seriesAxisValue; // @synthesize seriesAxisValue=mCurrentSeriesAxisValue;
@property(readonly) double totalValue; // @synthesize totalValue=mTotalValue;
@property(readonly) unsigned long long seriesIndex; // @synthesize seriesIndex=mCurrentSeriesIndex;
@property(readonly) _Bool shouldRenderLabel;
- (void)dealloc;
- (id)initWithPrior:(id)arg1 orChartModel:(id)arg2 forSeries:(unsigned long long)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHBarSeriesModelCache : NSObject
{
    TSCHChartSeries *mSeries;
    TSCHChartValueAxis *mValueAxis;
    TSCHChartAxis *mGroupAxis;
    TSWPParagraphStyle *mParagraphStyle;
    unsigned long long mSeriesIndex;
    _Bool mValueLabelsOn;
    double mBarWidthRatio;
    double mBarGroupGapRatio;
    double mBarGapRatio;
    double mUnitSpaceIntercept;
    unsigned int mLabelPosition;
    TSDShadow *mShadow;
    TSDStroke *mStroke;
    id mFill;
    double mOpacity;
}

@property(readonly) double opacity; // @synthesize opacity=mOpacity;
@property(readonly) id fill; // @synthesize fill=mFill;
@property(readonly) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(readonly) TSDShadow *shadow; // @synthesize shadow=mShadow;
@property(readonly) unsigned int labelPosition; // @synthesize labelPosition=mLabelPosition;
@property(readonly) double unitSpaceIntercept; // @synthesize unitSpaceIntercept=mUnitSpaceIntercept;
@property(readonly) double barGapRatio; // @synthesize barGapRatio=mBarGapRatio;
@property(readonly) double barGroupGapRatio; // @synthesize barGroupGapRatio=mBarGroupGapRatio;
@property(readonly) double barWidthRatio; // @synthesize barWidthRatio=mBarWidthRatio;
@property(readonly) _Bool valueLabelsOn; // @synthesize valueLabelsOn=mValueLabelsOn;
@property(readonly) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly) TSCHChartAxis *groupAxis; // @synthesize groupAxis=mGroupAxis;
@property(readonly) TSCHChartValueAxis *valueAxis; // @synthesize valueAxis=mValueAxis;
@property(readonly) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
@property(readonly) TSCHChartSeries *series; // @synthesize series=mSeries;
- (void)dealloc;
- (id)initWithChartModel:(id)arg1 forSeries:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHLineAreaSeriesModelCache : NSObject
{
    unsigned long long mSeriesIndex;
    TSCHChartSeries *mSeries;
    TSCHChartValueAxis *mValueAxis;
    TSCHChartAxis *mGroupAxis;
    TSWPParagraphStyle *mParagraphStyle;
    unsigned int mLabelPosition;
    _Bool mShowLabelsInFront;
    int mSymbolType;
    TSDStroke *mSymbolStroke;
    TSDStroke *mSeriesStroke;
    TSDShadow *mSeriesShadow;
    double mDataPointSize;
    double mOpacity;
    int mLineType;
    id mSeriesFill;
    id mSymbolFill;
    _Bool mShowValueLabels;
    struct CGPath *mUnitSymbolPath;
}

@property(readonly) struct CGPath *unitSymbolPath; // @synthesize unitSymbolPath=mUnitSymbolPath;
@property(readonly) double opacity; // @synthesize opacity=mOpacity;
@property(readonly) int lineType; // @synthesize lineType=mLineType;
@property(readonly) TSDShadow *seriesShadow; // @synthesize seriesShadow=mSeriesShadow;
@property(readonly) id seriesFill; // @synthesize seriesFill=mSeriesFill;
@property(readonly) TSDStroke *seriesStroke; // @synthesize seriesStroke=mSeriesStroke;
@property(readonly) _Bool showValueLabels; // @synthesize showValueLabels=mShowValueLabels;
@property(readonly) double dataPointSize; // @synthesize dataPointSize=mDataPointSize;
@property(readonly) id symbolFill; // @synthesize symbolFill=mSymbolFill;
@property(readonly) TSDStroke *symbolStroke; // @synthesize symbolStroke=mSymbolStroke;
@property(readonly) int symbolType; // @synthesize symbolType=mSymbolType;
@property(readonly) _Bool showLabelsInFront; // @synthesize showLabelsInFront=mShowLabelsInFront;
@property(readonly) unsigned int labelPosition; // @synthesize labelPosition=mLabelPosition;
@property(readonly) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly) TSCHChartAxis *groupAxis; // @synthesize groupAxis=mGroupAxis;
@property(readonly) TSCHChartValueAxis *valueAxis; // @synthesize valueAxis=mValueAxis;
@property(readonly) TSCHChartSeries *series; // @synthesize series=mSeries;
@property(readonly) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
- (void)dealloc;
- (id)initWithChartModel:(id)arg1 forSeries:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendModelCache : NSObject
{
    TSCHLegendCellMetrics *mMetrics;
    _Bool mLegendOn;
    NSArray *mCells;
    unsigned long long mCellCount;
    TSWPParagraphStyle *mParagraphStyle;
    TSDStroke *mStroke;
    TSDShadow *mShadow;
    id mFill;
    double mOpacity;
    double mHorizontalCellSpacing;
    double mVerticalCellSpacing;
    struct CGSize mLargestCellSize;
    double mEffectiveStrokeWidth;
    _Bool mReverseSingleColumnLegendOrder;
    double mLastLegendWidth;
    TSCHLegendViewCache *mLastLegendViewCache;
    double mSymbolGap;
}

@property(readonly) _Bool reverseSingleColumnLegendOrder; // @synthesize reverseSingleColumnLegendOrder=mReverseSingleColumnLegendOrder;
@property(readonly) double effectiveStrokeWidth; // @synthesize effectiveStrokeWidth=mEffectiveStrokeWidth;
@property(readonly) struct CGSize largestCellSize; // @synthesize largestCellSize=mLargestCellSize;
@property(readonly) double symbolGap; // @synthesize symbolGap=mSymbolGap;
@property(readonly) double verticalCellSpacing; // @synthesize verticalCellSpacing=mVerticalCellSpacing;
@property(readonly) double horizontalCellSpacing; // @synthesize horizontalCellSpacing=mHorizontalCellSpacing;
@property(readonly) double opacity; // @synthesize opacity=mOpacity;
@property(readonly) id fill; // @synthesize fill=mFill;
@property(readonly) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(readonly) TSDShadow *shadow; // @synthesize shadow=mShadow;
@property(readonly) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly) NSArray *cells; // @synthesize cells=mCells;
@property(readonly) unsigned long long cellCount; // @synthesize cellCount=mCellCount;
@property(readonly) _Bool legendOn; // @synthesize legendOn=mLegendOn;
- (id)viewCacheForWidth:(double)arg1;
- (id)cellForSeriesIndex:(unsigned long long)arg1 cellType:(int)arg2;
- (void)dealloc;
- (id)initWithChartModel:(id)arg1 textEditingSelectionPair:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendCellModelCache : NSObject
{
    int mLegendCellType;
    int mBadgeType;
    unsigned long long mSeriesIndex;
    TSCHChartSeries *mSeries;
    NSString *mLabelString;
    TSDStroke *mStroke;
    TSDStroke *mSymbolStroke;
    int mSymbolType;
    int mLineType;
    struct CGSize mCellSize;
    double mEffectiveStrokeWidth;
    double mEffectiveSymbolStrokeWidth;
    struct CGRect mBadgeFrame;
    struct CGRect mLabelFrame;
    struct CGRect mBadgeFillFrame;
}

@property(readonly) double effectiveSymbolStrokeWidth; // @synthesize effectiveSymbolStrokeWidth=mEffectiveSymbolStrokeWidth;
@property(readonly) double effectiveStrokeWidth; // @synthesize effectiveStrokeWidth=mEffectiveStrokeWidth;
@property(readonly) int lineType; // @synthesize lineType=mLineType;
@property(readonly) int symbolType; // @synthesize symbolType=mSymbolType;
@property(readonly) TSDStroke *symbolStroke; // @synthesize symbolStroke=mSymbolStroke;
@property(readonly) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(readonly) struct CGRect labelFrame; // @synthesize labelFrame=mLabelFrame;
@property(readonly) struct CGRect badgeFillFrame; // @synthesize badgeFillFrame=mBadgeFillFrame;
@property(readonly) struct CGRect badgeFrame; // @synthesize badgeFrame=mBadgeFrame;
@property(readonly) struct CGSize size; // @synthesize size=mCellSize;
@property(readonly) NSString *labelString; // @synthesize labelString=mLabelString;
@property(readonly) TSCHChartSeries *series; // @synthesize series=mSeries;
@property(readonly) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
@property(readonly) int badgeType; // @synthesize badgeType=mBadgeType;
@property(readonly) int cellType; // @synthesize cellType=mLegendCellType;
@property(readonly) id symbolFill;
@property(readonly) id fill;
- (void)dealloc;
- (id)initWithChartModel:(id)arg1 cellType:(int)arg2 seriesIndex:(unsigned long long)arg3 withMetrics:(id)arg4 overrideLabel:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHLegendViewCache : NSObject <TSCHUnretainedParent>
{
    unsigned long long mCellCount;
    unsigned long long mNumberOfRows;
    unsigned long long mNumberOfColumns;
    struct CGSize mFinalSize;
    TSCHLegendModelCache *mModelCache;
    struct CGPoint *mCellOrigins;
}

@property(readonly) struct CGSize legendSize; // @synthesize legendSize=mFinalSize;
@property(readonly) unsigned long long numberOfColumns; // @synthesize numberOfColumns=mNumberOfColumns;
@property(readonly) unsigned long long numberOfRows; // @synthesize numberOfRows=mNumberOfRows;
- (struct CGPoint)originForCell:(id)arg1;
- (void)dealloc;
- (void)clearParent;
- (id)initWithLegendModelCache:(id)arg1 legendWidth:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleMapper : NSObject <TSKStyleMapper>
{
    id <TSKStyleMapper> mUnderlyingMapper;
    unsigned long long mVaryInThemeStylesheet;
}

@property(readonly, nonatomic) _Bool clientsMustRemap;
- (void)varyInThemeStylesheetIf:(_Bool)arg1 forDurationOfBlock:(CDUnknownBlockType)arg2;
- (void)varyInThemeStylesheetForDurationOfBlock:(CDUnknownBlockType)arg1;
- (id)mappedStyleForStyle:(id)arg1 inThemeStylesheet:(_Bool)arg2;
- (id)mappedStyleForStyle:(id)arg1;
- (id)mappedStyleForStyle:(id)arg1 bakeComputable:(_Bool)arg2;
- (void)popMappingContext:(id)arg1;
- (void)pushMappingContext:(id)arg1;
- (id)targetStylesheet;
- (void)dealloc;
- (id)initWithMapper:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartNonRep : NSObject <TSCHSupportsRendering>
{
    TSCHChartInfo *mChartInfo;
    NSArray *mRenderers;
    TSCHChartLayout *mChartLayout;
}

@property(retain, nonatomic) TSCHChartLayout *chartLayout; // @synthesize chartLayout=mChartLayout;
@property(retain, nonatomic) TSCHChartInfo *chartInfo; // @synthesize chartInfo=mChartInfo;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)requireSeparateLabelLayer;
- (_Bool)renderTrendLinesForSeriesIndex:(unsigned long long)arg1;
- (struct CGRect)outerShadowFrame;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)shouldShowLegendHighlight;
- (_Bool)renderElementsShadowOnly;
- (_Bool)renderElementsWithoutShadows;
- (_Bool)renderLabels;
- (_Bool)renderElements;
- (id)renderValueIndexSetForSeries:(unsigned long long)arg1;
- (id)renderSeriesIndexSet;
- (_Bool)isDrawingIntoPDF;
- (_Bool)forceRenderBlankBackground;
- (id)commandController;
- (double)viewScale;
- (id)geometry;
- (_Bool)shadowsEnabled;
- (void)clearRenderers;
- (id)renderers;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHBaseStyle : TSSStyle <TSCHCustomFormatPasteSupport, TSCHStyleActAlike>
{
}

+ (id)defaultPropertyMap;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)shortDescription;
- (id)boxedDefaultValueForProperty:(int)arg1;
- (float)defaultFloatValueForProperty:(int)arg1;
- (int)defaultIntValueForProperty:(int)arg1;
- (id)defaultValueForProperty:(int)arg1;
- (id)properties;
- (void)g_splitProperty:(int)arg1 outStyleOwner:(id *)arg2 outSpecifier:(id *)arg3 outKeyName:(id *)arg4;
- (id)g_objectTypeForSpecific:(int)arg1;
- (id)g_specificToGenericPropertyMap;
- (void)updateAfterPasteForProperties:(id)arg1 documentRoot:(id)arg2 pasteboardCustomFormatList:(id)arg3;
- (void)updateAfterPasteForDocumentRoot:(id)arg1 pasteboardCustomFormatList:(id)arg2;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartDrawableInfo : TSDDrawableInfo <TSCECalculationEngineRegistration, TSDReducableInfo, TSKCustomFormatContainingInfo, TSPCopying, TSKSearchable, TSKModel, TSSPresetSource, TSSThemedObject, TSCHStyleSwapSupporting, TSDMixing, TSSStyleClient>
{
    TSCHChartInfo *mChart;
    TSPObject<TSCHMediatorProvider> *mMediatorPersistentObject;
    TSCHChunkManager *mChunkManager;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
@property(readonly, nonatomic) TSCHChartInfo *chart; // @synthesize chart=mChart;
- (id)commandToReplaceCustomFormat:(id)arg1 withReplacementFormat:(id)arg2;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)changeDetailsForCustomFormatListDidUpdateToCustomFormatWrapper:(id)arg1;
- (void)performBlockWithStylesheetForAddingStyles:(CDUnknownBlockType)arg1;
- (id)commandToReplaceImageData:(id)arg1 withReducedImageData:(id)arg2 associatedHint:(id)arg3;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (id)styleOwnerFromSwapType:(int)arg1 andIndex:(unsigned long long)arg2;
- (id)applyStyleSwapTuples:(id)arg1;
- (id)applyStyleSwapTuple:(id)arg1;
- (void)chartTypeDidChangeWithDetails:(id)arg1;
- (void)modelDidInvalidateWithDetails:(id)arg1;
- (void)chartDidInvalidateWithProperties:(id)arg1;
- (void)p_sendInvalidationWithKind:(int)arg1 details:(id)arg2;
- (int)elementKind;
- (_Bool)aspectRatioLocked;
- (_Bool)canSizeBeChangedIncrementally;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)supportsHyperlinks;
- (Class)layoutClass;
- (Class)repClass;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)childInfos;
- (void)acceptVisitor:(id)arg1;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (_Bool)isVisibleAtBeginningOfMagicChartBuildForDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (_Bool)hasBackgroundLayerForPieChart;
- (_Bool)shouldAddMultiDataBuildWhenAddingToDocument;
- (_Bool)reverseChunkingIsSupported;
- (id)animationFilters;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
@property(readonly, nonatomic) TSCHChunkManager *chunkManager;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)searchForSpellingErrors:(CDUnknownBlockType)arg1 stop:(_Bool *)arg2;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(CDUnknownBlockType)arg3;
- (void)p_searchString:(id)arg1 atSelectionPath:(id)arg2 forString:(id)arg3 options:(unsigned long long)arg4 hitBlock:(CDUnknownBlockType)arg5;
- (void)p_processAllChartStrings:(CDUnknownBlockType)arg1;
- (void)setInsertionCenterPosition:(struct CGPoint)arg1;
- (void)tsaMoveToPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (struct CGRect)visibleBoundsForPositioning;
- (void)coalesceChanges:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setGeometry:(id)arg1 omitLegendResize:(_Bool)arg2;
- (id)geometry;
- (id)p_drawableGeometry;
- (void)p_setDrawableGeometry:(id)arg1 clearObjectPlaceholderFlag:(_Bool)arg2;
- (void)setPersistentMediator:(id)arg1;
- (void)willModify;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 chartAreaFrame:(id)arg3 legendFrame:(id)arg4 stylePreset:(id)arg5 privateSeriesStyles:(id)arg6;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 legendShowing:(id)arg3 chartAreaFrame:(id)arg4 legendFrame:(id)arg5 stylePreset:(id)arg6 privateSeriesStyles:(id)arg7 chartNonStyle:(id)arg8 legendNonStyle:(id)arg9 valueAxisNonStyles:(id)arg10 categoryAxisNonStyles:(id)arg11 seriesNonStyles:(id)arg12;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 circumscribingFrame:(id)arg3 stylePreset:(id)arg4 privateSeriesStyles:(id)arg5;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 legendShowing:(id)arg3 circumscribingFrame:(id)arg4 stylePreset:(id)arg5 privateSeriesStyles:(id)arg6 chartNonStyle:(id)arg7 legendNonStyle:(id)arg8 valueAxisNonStyles:(id)arg9 categoryAxisNonStyles:(id)arg10 seriesNonStyles:(id)arg11;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 chartAreaFrame:(id)arg3 stylePreset:(id)arg4 privateSeriesStyles:(id)arg5;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 legendShowing:(id)arg3 chartAreaFrame:(id)arg4 stylePreset:(id)arg5 privateSeriesStyles:(id)arg6 chartNonStyle:(id)arg7 legendNonStyle:(id)arg8 valueAxisNonStyles:(id)arg9 categoryAxisNonStyles:(id)arg10 seriesNonStyles:(id)arg11;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 chartBodyFrame:(id)arg3 stylePreset:(id)arg4 privateSeriesStyles:(id)arg5;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 legendShowing:(id)arg3 chartBodyFrame:(id)arg4 stylePreset:(id)arg5 privateSeriesStyles:(id)arg6 chartNonStyle:(id)arg7 legendNonStyle:(id)arg8 valueAxisNonStyles:(id)arg9 categoryAxisNonStyles:(id)arg10 seriesNonStyles:(id)arg11;
- (id)initWithContext:(id)arg1 chartType:(id)arg2 legendShowing:(id)arg3 chartBodyFrame:(id)arg4 chartAreaFrame:(id)arg5 circumscribingFrame:(id)arg6 legendFrame:(id)arg7 stylePreset:(id)arg8 privateSeriesStyles:(id)arg9 chartNonStyle:(id)arg10 legendNonStyle:(id)arg11 valueAxisNonStyles:(id)arg12 categoryAxisNonStyles:(id)arg13 seriesNonStyles:(id)arg14;
- (id)initWithContext:(id)arg1 chart:(id)arg2;
- (id)p_copyFor3DAs2DWithContext:(id)arg1 chartFrame:(struct CGRect)arg2 legendFrame:(struct CGRect)arg3;
- (id)initFromPreUFFArchiveWithUnarchiver:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)objectToArchiveInDependencyTracker;
- (id)componentRootObject;
- (_Bool)registerLast;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleBootstrapping : NSObject <TSSPresetSource>
{
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (void)bootstrapStylesInStylesheet:(id)arg1 numberOfPresets:(unsigned long long)arg2;
+ (id)stylePresetForStylesheet:(id)arg1 roleIndex:(unsigned long long)arg2;
+ (id)p_bootstrappedStylePresetInContext:(id)arg1 stylesheet:(id)arg2 presetIndex:(unsigned long long)arg3;
+ (id)p_defaultParagraphStyleOfClass:(Class)arg1 stylesheet:(id)arg2 identifier:(id)arg3;
+ (id)p_defaultStyleOfClass:(Class)arg1 stylesheet:(id)arg2 identifier:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHPersistentChartMediator : TSPObject <TSCHNotifyOnModify, TSCHMediatorProvider>
{
    TSCHChartMediator *mMediator;
}

@property(readonly, retain, nonatomic) TSCHChartMediator *mediator; // @synthesize mediator=mMediator;
- (void)dealloc;
- (id)initWithContext:(id)arg1 andMediator:(id)arg2;
- (void)saveToArchive:(struct ChartMediatorArchive *)arg1;
- (void)loadFromArchive:(const struct ChartMediatorArchive *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCHErrorBarData : NSObject <TSCHUnretainedParent>
{
    TSCHChartSeries *mSeries;
    _Bool mSupportsXAxisBars;
    double mMaxValue;
    double mMinValue;
    long long mMaxValueGroupIndex;
    long long mMinValueGroupIndex;
    double mMaxValueScatterX;
    double mMinValueScatterX;
    double mStandardError;
    double mStandardDeviation;
    double mStandardDeviationMean;
    double mStandardErrorScatterX;
    double mStandardDeviationScatterX;
    double mStandardDeviationMeanScatterX;
    _Bool mErrorBarsInvalid;
}

+ (int)p_errorBarSettingForSeries:(id)arg1 useXAxis:(_Bool)arg2 axisID:(id)arg3;
+ (_Bool)hasErrorBarsForSeries:(id)arg1;
@property(readonly, nonatomic) long long minValueGroupIndex; // @synthesize minValueGroupIndex=mMinValueGroupIndex;
@property(readonly, nonatomic) long long maxValueGroupIndex; // @synthesize maxValueGroupIndex=mMaxValueGroupIndex;
- (_Bool)p_errorBarIsVerticalForAxisID:(id)arg1 chartVertical:(_Bool)arg2;
- (struct CGPoint)p_getValuePointForGroup:(unsigned long long)arg1 inputAxisID:(id)arg2 outputAxisID:(id)arg3 barVertical:(_Bool)arg4;
- (void)p_updateDataForAxisID:(id)arg1;
- (void)p_updateMinMaxForStackedPercentageAxis:(id)arg1 forValues:(double *)arg2 withOffsets:(double *)arg3 numValues:(unsigned long long)arg4;
- (void)p_updateMinMaxForAxisID:(id)arg1 forValues:(double *)arg2 withOffsets:(double *)arg3 numValues:(unsigned long long)arg4;
- (double)p_negativeErrorForValue:(double *)arg1 onAxisID:(id)arg2 groupIndex:(unsigned long long)arg3;
- (double)p_positiveErrorForValue:(double *)arg1 onAxisID:(id)arg2 groupIndex:(unsigned long long)arg3;
- (double)p_errorForValue:(double *)arg1 onAxisID:(id)arg2 groupIndex:(unsigned long long)arg3 positive:(_Bool)arg4;
- (void)p_updateStdDeviationForAxisID:(id)arg1 forValues:(double *)arg2 withOffsets:(double *)arg3 numValues:(unsigned long long)arg4;
- (void)p_updateStdErrorForAxisID:(id)arg1 forValues:(double *)arg2 withOffsets:(double *)arg3 numValues:(unsigned long long)arg4;
- (unsigned long long)p_stripBadValuesInArray:(double *)arg1 numValues:(unsigned long long)arg2;
- (double *)p_createArrayOfSeriesOffsetsForAxisID:(id)arg1 count:(unsigned long long)arg2;
- (double *)p_createArrayOfSeriesValuesForAxisID:(id)arg1 count:(unsigned long long)arg2;
- (double)p_customErrorForAxisID:(id)arg1 groupIndex:(unsigned long long)arg2 positive:(_Bool)arg3;
- (double)p_stdDevFactorForAxisID:(id)arg1;
- (double)p_stdDevMeanForAxisID:(id)arg1;
- (double)p_stdDevErrorForAxisID:(id)arg1;
- (double)p_stdErrorErrorForAxisID:(id)arg1;
- (double)p_percentageErrorForAxisID:(id)arg1;
- (double)p_fixedErrorForAxisID:(id)arg1;
- (int)p_errorBarTypeForAxisID:(id)arg1;
- (int)p_errorBarSettingForAxisID:(id)arg1 value:(double)arg2 barType:(int)arg3;
- (void)p_clearData;
- (double)maxValueForAxisID:(id)arg1;
- (double)minValueForAxisID:(id)arg1;
- (void)updateIfNeeded;
- (void)invalidateData;
- (_Bool)hasErrorDataForAxisID:(id)arg1 valueIndex:(unsigned long long)arg2 chartVertical:(_Bool)arg3 barVertical:(_Bool *)arg4 unitValue:(struct CGPoint *)arg5 unitPositive:(struct CGPoint *)arg6 unitNegative:(struct CGPoint *)arg7;
- (id)lineEndForAxisID:(id)arg1;
- (id)shadowForAxisID:(id)arg1;
- (id)strokeForAxisID:(id)arg1;
- (float)opacityForAxisID:(id)arg1;
- (_Bool)showErrorBarsForAxisID:(id)arg1;
- (void)clearParent;
- (id)initWithSeries:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHPointArrayCache : NSObject
{
    TSCHChartSeries *mSeries;
    struct CGRect mAreaFrame;
    unsigned long long mStart;
    unsigned long long mEnd;
    _Bool mCull;
    NSData *mData;
}

+ (void)clearCache;
+ (void)setCachedPointsForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(unsigned long long)arg3 valueEnd:(unsigned long long)arg4 cullBadPoints:(_Bool)arg5 points:(CDStruct_460b8ffe *)arg6 count:(unsigned long long)arg7;
+ (CDStruct_460b8ffe *)cachedPointsForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(unsigned long long)arg3 valueEnd:(unsigned long long)arg4 cullBadPoints:(_Bool)arg5 outCount:(unsigned long long *)arg6;
+ (id)p_getCacheCreate:(_Bool)arg1;
- (id).cxx_construct;
- (_Bool)matchesSeries:(id)arg1 areaFrame:(struct CGRect)arg2 start:(unsigned long long)arg3 end:(unsigned long long)arg4 cull:(_Bool)arg5;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHLineAreaScatterElementBuilder : TSCHElementBuilder
{
}

- (unsigned long long)countOfLabelsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewTransforms:(struct CGAffineTransform **)arg4 outNewElementSizes:(struct CGSize **)arg5 outNewClipRect:(struct CGRect **)arg6 outNewStrings:(id **)arg7;
- (unsigned long long)countOfPointsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outUnitSymbolPath:(const struct CGPath **)arg6 outNewTransformArray:(struct CGAffineTransform **)arg7 outNewGroupIndexArray:(unsigned long long **)arg8;
- (struct CGAffineTransform)transformForRenderingSeriesElementSymbolsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outNewElementPath:(const struct CGPath **)arg6;
- (struct CGAffineTransform)transformForRenderingSeriesElementForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outNewElementPath:(const struct CGPath **)arg6;
- (struct CGAffineTransform)transformForRenderingSeriesElementTopStrokeForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outNewElementPath:(const struct CGPath **)arg6;
- (_Bool)needsSeparateHitTestingPaths;
- (unsigned long long)countOfHitCheckRegionsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementPaths:(const struct CGPath ***)arg4 outSelectionKnobLocations:(id *)arg5;
- (void)p_trendlineInfoForSeries:(id)arg1 forBodyLayout:(id)arg2 outVertical:(_Bool *)arg3 outOffsetInBody:(double *)arg4;
- (unsigned long long)countOfErrorBarsInSeries:(id)arg1 forGroups:(id)arg2 forAxisID:(id)arg3 forBodyLayout:(id)arg4 outClipRect:(struct CGRect *)arg5 outNewErrorBarDescriptors:(CDStruct_183601bc **)arg6;
- (struct CGAffineTransform)transformForRenderingLabelInBody:(id)arg1 forSeries:(unsigned long long)arg2 forGroup:(unsigned long long)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5;
- (unsigned long long)countOfElementsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6 outSelectionKnobLocations:(id *)arg7;
- (double)p_bubbleMaxForSeries:(id)arg1 inChartBodyLayoutSize:(struct CGSize)arg2;
- (void)p_createElementsForSeries:(id)arg1 forGroups:(id)arg2 inBodyLayout:(id)arg3 outTopStrokePath:(const struct CGPath **)arg4 outTopStrokeClipRect:(struct CGRect *)arg5 outSeriesElementPath:(const struct CGPath **)arg6 outSeriesElementClipRect:(struct CGRect *)arg7 outSymbolElementPath:(const struct CGPath **)arg8 outSymbolElementClipRect:(struct CGRect *)arg9 outSymbolElementHitCheckPath:(const struct CGPath **)arg10 outSelectionKnobLocations:(id *)arg11;
- (struct CGPath *)p_newUnitHitPathForPath:(struct CGPath *)arg1 symbolType:(int)arg2 effectiveStrokeWidth:(double)arg3;
- (void)p_addKnobsForPoint:(struct CGPoint)arg1 strokedUnitSymbolRect:(struct CGRect)arg2 toKnobSet:(id)arg3 symbolsShowing:(_Bool)arg4;
- (id)p_symbolKnobLocationsForSeries:(id)arg1 forGroups:(id)arg2 inBodyLayout:(id)arg3;
- (CDStruct_460b8ffe *)p_createPointArrayForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(long long)arg3 valueEnd:(long long)arg4 outCount:(unsigned long long *)arg5;
- (CDStruct_460b8ffe *)p_createPointArrayForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(unsigned long long)arg3 valueEnd:(unsigned long long)arg4 cullBadPoints:(_Bool)arg5 outCount:(unsigned long long *)arg6;
- (_Bool)p_addBottomStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 seriesIndex:(unsigned long long)arg3 valuesStart:(unsigned long long)arg4 valuesEnd:(unsigned long long)arg5 withPointsArray:(CDStruct_460b8ffe *)arg6 withCount:(unsigned long long)arg7;
- (void)p_addTopStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 withPointsArray:(CDStruct_460b8ffe *)arg3 withCount:(unsigned long long)arg4 lineType:(int)arg5;
- (void)p_addCurvedTopStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 withPointsArray:(CDStruct_460b8ffe *)arg3 withCount:(unsigned long long)arg4;
- (CDStruct_40a92360 *)p_centerPointsForSeries:(id)arg1 forGroupIndexes:(struct _NSRange)arg2 xAxis:(id)arg3 yAxis:(id)arg4 plotAreaFrame:(struct CGRect)arg5;
- (CDStruct_40a92360 *)p_centerPointsForSeries:(id)arg1 forGroupIndexes:(struct _NSRange)arg2 xAxis:(id)arg3 yAxis:(id)arg4 nullsUseIntercept:(_Bool)arg5 plotAreaFrame:(struct CGRect)arg6;
- (_Bool)p_centerPointForSeries:(id)arg1 forGroupIndex:(unsigned long long)arg2 xAxis:(id)arg3 yAxis:(id)arg4 plotAreaFrame:(struct CGRect)arg5 nullsUseIntercept:(_Bool)arg6 outPoint:(struct CGPoint *)arg7;
- (struct CGPoint)labelPointForPosition:(unsigned int)arg1 rect:(struct CGRect)arg2 stringSize:(struct CGSize)arg3 symbolType:(int)arg4;
- (struct CGPath *)p_newPlusPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4 context:(struct CGContext *)arg5;
- (struct CGPath *)p_newCrossPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
- (struct CGPath *)p_newDiamondPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
- (struct CGPath *)p_newSquarePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4 context:(struct CGContext *)arg5;
- (struct CGPath *)p_newYieldPath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
- (struct CGPath *)p_newTrianglePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
- (struct CGPath *)p_newCirclePath:(struct CGPoint)arg1 width:(double)arg2 pathLocation:(long long)arg3 stroke:(id)arg4;
- (struct CGPath *)p_newPathForSymbol:(int)arg1 context:(struct CGContext *)arg2 at:(struct CGPoint)arg3 width:(double)arg4 pathLocation:(long long)arg5 stroke:(id)arg6;
- (_Bool)symbolTypeIsClosed:(int)arg1;
- (float)dataPointDimension:(id)arg1 symbolType:(int)arg2 stroke:(id)arg3;
- (struct CGPath *)p_newUnitPathForSymbol:(int)arg1 symbolSize:(double)arg2 stroke:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHScatterElementBuilder : TSCHLineAreaScatterElementBuilder
{
}

- (unsigned long long)countOfHitCheckRegionsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementPaths:(const struct CGPath ***)arg4 outSelectionKnobLocations:(id *)arg5;
- (void)p_addKnobsForPoint:(struct CGPoint)arg1 strokedUnitSymbolRect:(struct CGRect)arg2 toKnobSet:(id)arg3 symbolsShowing:(_Bool)arg4;
- (void)p_addTopStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 withPointsArray:(CDStruct_460b8ffe *)arg3 withCount:(unsigned long long)arg4 lineType:(int)arg5;
- (_Bool)needsSeparateHitTestingPaths;

@end

__attribute__((visibility("hidden")))
@interface TSCHLineElementBuilder : TSCHScatterElementBuilder
{
}

- (void)p_addKnobsForPoint:(struct CGPoint)arg1 strokedUnitSymbolRect:(struct CGRect)arg2 toKnobSet:(id)arg3 symbolsShowing:(_Bool)arg4;
- (struct CGPoint)labelPointForPosition:(unsigned int)arg1 rect:(struct CGRect)arg2 stringSize:(struct CGSize)arg3 symbolType:(int)arg4;
- (_Bool)needsSeparateHitTestingPaths;

@end

__attribute__((visibility("hidden")))
@interface TSCHAreaElementBuilder : TSCHLineElementBuilder
{
}

- (_Bool)p_addBottomStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 seriesIndex:(unsigned long long)arg3 valuesStart:(unsigned long long)arg4 valuesEnd:(unsigned long long)arg5 withPointsArray:(CDStruct_460b8ffe *)arg6 withCount:(unsigned long long)arg7;
- (void)p_addTopStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 withPointsArray:(CDStruct_460b8ffe *)arg3 withCount:(unsigned long long)arg4 lineType:(int)arg5;
- (CDStruct_460b8ffe *)p_createPointArrayForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(long long)arg3 valueEnd:(long long)arg4 outCount:(unsigned long long *)arg5;
- (_Bool)needsSeparateHitTestingPaths;

@end

__attribute__((visibility("hidden")))
@interface TSCHStackedAreaElementBuilder : TSCHAreaElementBuilder
{
}

- (_Bool)p_addBottomStroke:(CDStruct_e0d92598 *)arg1 toPath:(struct CGPath *)arg2 seriesIndex:(unsigned long long)arg3 valuesStart:(unsigned long long)arg4 valuesEnd:(unsigned long long)arg5 withPointsArray:(CDStruct_460b8ffe *)arg6 withCount:(unsigned long long)arg7;
- (CDStruct_40a92360 *)p_centerPointsForSeries:(id)arg1 forGroupIndexes:(struct _NSRange)arg2 xAxis:(id)arg3 yAxis:(id)arg4 plotAreaFrame:(struct CGRect)arg5;
- (CDStruct_460b8ffe *)p_createPointArrayForSeries:(id)arg1 inAreaFrame:(struct CGRect)arg2 valueStart:(long long)arg3 valueEnd:(long long)arg4 outCount:(unsigned long long *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHBubbleElementBuilder : TSCHScatterElementBuilder
{
}

- (unsigned long long)countOfElementsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6 outSelectionKnobLocations:(id *)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSCHElementBuilder : NSObject
{
}

+ (struct CGRect)elementsRectForElementsDrawnByRenderState:(id)arg1;
+ (struct CGRect)clipRectForElementsDrawnByRenderState:(id)arg1;
+ (struct CGRect)p_chartLayoutSpaceClipRectUnionForElementsDrawnByRenderState:(id)arg1 returningItemCount:(unsigned long long *)arg2;
- (_Bool)hasAxisLineInBody:(id)arg1 forAxis:(id)arg2 outTransform:(struct CGAffineTransform *)arg3 outLine:(CDStruct_e3b9714e *)arg4;
- (unsigned long long)countOfGridLinesInBody:(id)arg1 forAxis:(id)arg2 minor:(_Bool)arg3 outNewLineDescriptors:(CDStruct_183601bc **)arg4;
- (struct CGPoint)labelPointForPosition:(unsigned int)arg1 rect:(struct CGRect)arg2 stringSize:(struct CGSize)arg3;
- (unsigned long long)countOfHitCheckRegionsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementPaths:(const struct CGPath ***)arg4 outSelectionKnobLocations:(id *)arg5;
- (struct CGAffineTransform)transformForRenderingTrendlineTextForSeries:(id)arg1 forAreaLayout:(id)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4 outParagraphStyle:(id *)arg5 outNewString:(const struct __CFAttributedString **)arg6;
- (struct CGAffineTransform)transformForRenderingR2TextForSeries:(id)arg1 forAreaLayout:(id)arg2 outElementSize:(struct CGSize *)arg3 outClipRect:(struct CGRect *)arg4 outParagraphStyle:(id *)arg5 outString:(id *)arg6;
- (struct CGAffineTransform)p_transformForRenderingTrendlineTextNotR2:(_Bool)arg1 forSeries:(id)arg2 forAreaLayout:(id)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outParagraphStyle:(id *)arg6 outString:(const struct __CFAttributedString **)arg7;
- (void)trendlineElementForSeries:(id)arg1 forBodyLayout:(id)arg2 outElementBounds:(struct CGRect *)arg3 outElementClipRect:(struct CGRect *)arg4 outElementPath:(id *)arg5;
- (void)p_trendlineInfoForSeries:(id)arg1 forBodyLayout:(id)arg2 outVertical:(_Bool *)arg3 outOffsetInBody:(double *)arg4;
- (unsigned long long)countOfErrorBarsInSeries:(id)arg1 forGroups:(id)arg2 forAxisID:(id)arg3 forBodyLayout:(id)arg4 outClipRect:(struct CGRect *)arg5 outNewErrorBarDescriptors:(CDStruct_183601bc **)arg6;
- (struct CGAffineTransform)transformForRenderingLabelInBody:(id)arg1 forSeries:(unsigned long long)arg2 forGroup:(unsigned long long)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5;
- (unsigned long long)countOfLabelsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewTransforms:(struct CGAffineTransform **)arg4 outNewElementSizes:(struct CGSize **)arg5 outNewClipRect:(struct CGRect **)arg6 outNewStrings:(id **)arg7;
- (unsigned long long)countOfElementsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6 outSelectionKnobLocations:(id *)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSCHBarColumnElementBuilder : TSCHElementBuilder
{
    _Bool mVertical;
}

+ (void)calculateGapsForChartModel:(id)arg1 forTotalWidth:(float)arg2 outBarWidth:(float *)arg3 outBarGroupGap:(float *)arg4 outBarGap:(float *)arg5;
- (void)p_trendlineInfoForSeries:(id)arg1 forBodyLayout:(id)arg2 outVertical:(_Bool *)arg3 outOffsetInBody:(double *)arg4;
- (void)p_nudgeBarElementFrame:(struct CGRect *)arg1 inPlotAreaFrame:(struct CGRect)arg2 usingBarModelCache:(id)arg3 unitSpaceValueBegin:(double)arg4 unitSpaceValueEnd:(double)arg5 withViewScale:(double)arg6;
- (unsigned long long)p_logicalSeriesIndexForSeries:(id)arg1;
- (struct CGRect)p_createBarRectInFrame:(struct CGRect)arg1 forSeries:(id)arg2 valueIndex:(unsigned long long)arg3 valueAxis:(id)arg4 groupAxis:(id)arg5 barWidth:(float)arg6 barGroupGap:(float)arg7 barGap:(float)arg8;
- (double)p_beginValueForSeries:(id)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;
- (void)p_calcGapsForBodyLayout:(id)arg1 outBarWidth:(float *)arg2 outBarGroupGap:(float *)arg3 outBarGap:(float *)arg4;
- (unsigned long long)p_numberOfSeriesForGapCalcInModel:(id)arg1;
- (unsigned long long)countOfErrorBarsInSeries:(id)arg1 forGroups:(id)arg2 forAxisID:(id)arg3 forBodyLayout:(id)arg4 outClipRect:(struct CGRect *)arg5 outNewErrorBarDescriptors:(CDStruct_183601bc **)arg6;
- (struct CGRect)nudgeBarElementFrame:(struct CGRect)arg1 inPlotAreaFrame:(struct CGRect)arg2 usingBarModelCache:(id)arg3 unitSpaceValueBegin:(double)arg4 unitSpaceValueEnd:(double)arg5 withViewScale:(double)arg6;
- (unsigned long long)countOfBarRectsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewGroupIndexArray:(unsigned long long **)arg4 outNewElementRectsArray:(struct CGRect **)arg5 outNewClipRectsArray:(struct CGRect **)arg6;
- (unsigned long long)countOfLabelsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewTransforms:(struct CGAffineTransform **)arg4 outNewElementSizes:(struct CGSize **)arg5 outNewClipRect:(struct CGRect **)arg6 outNewStrings:(id **)arg7;
- (unsigned long long)countOfElementsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6 outSelectionKnobLocations:(id *)arg7;
- (id)initWithVertical:(_Bool)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHStackedBarColumnElementBuilder : TSCHBarColumnElementBuilder
{
}

- (unsigned long long)p_logicalSeriesIndexForSeries:(id)arg1;
- (unsigned long long)p_numberOfSeriesForGapCalcInModel:(id)arg1;
- (double)p_beginValueForSeries:(id)arg1 index:(unsigned long long)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(_Bool)arg4 valueAxis:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHBarElementBuilder : TSCHBarColumnElementBuilder
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHColumnElementBuilder : TSCHBarColumnElementBuilder
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHStackedBarElementBuilder : TSCHStackedBarColumnElementBuilder
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHStackedColumnElementBuilder : TSCHStackedBarColumnElementBuilder
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHPieElementBuilder : TSCHElementBuilder
{
}

- (struct CGPath *)newElementPathInBody:(id)arg1 forSeries:(id)arg2 outTransform:(struct CGAffineTransform *)arg3 outElementSize:(struct CGSize *)arg4 outClipRect:(struct CGRect *)arg5 outWedgeCenterPoint:(struct CGPoint *)arg6 outSelectionKnobLocations:(id *)arg7;
- (_Bool)hasAxisLineInBody:(id)arg1 forAxis:(id)arg2 outTransform:(struct CGAffineTransform *)arg3 outLine:(CDStruct_e3b9714e *)arg4;
- (unsigned long long)countOfGridLinesInBody:(id)arg1 forAxis:(id)arg2 minor:(_Bool)arg3 outNewLineDescriptors:(CDStruct_183601bc **)arg4;
- (unsigned long long)countOfLabelsForSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewTransforms:(struct CGAffineTransform **)arg4 outNewElementSizes:(struct CGSize **)arg5 outNewClipRect:(struct CGRect **)arg6 outNewStrings:(id **)arg7;
- (unsigned long long)countOfElementsInSeries:(id)arg1 forGroups:(id)arg2 forBodyLayout:(id)arg3 outNewElementBounds:(struct CGRect **)arg4 outNewClipRects:(struct CGRect **)arg5 outNewElementPaths:(const struct CGPath ***)arg6 outSelectionKnobLocations:(id *)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSCH2DSageGeometryHelper : TSCHSageGeometryHelper
{
    double mVerticalAxisOverhang;
    double mHorizontalAxisOverhang;
    double mRightAxisWidthChange;
    double mBottomAxisHeightChange;
    double mTopAxisHeightChange;
    struct CGSize mBottomLeftChartTitleOverhang;
    struct CGSize mTopRightChartTitleOverhang;
    struct CGSize mBottomLeftValueAxisTitleOverhang;
    struct CGSize mTopRightValueAxisTitleOverhang;
    struct CGSize mBottomLeftCategoryAxisTitleOverhang;
    struct CGSize mTopRightCategoryAxisTitleOverhang;
    struct CGSize mBottomLeftValueAxisY2TitleOverhang;
    struct CGSize mTopRightValueAxisY2TitleOverhang;
    struct CGRect mChartBodyBounds;
    struct CGRect mExplodedBounds;
    struct CGRect mChartTitleBounds;
    struct CGRect mValueAxisTitleBounds;
    struct CGRect mCategoryAxisTitleBounds;
    struct CGRect mValueAxisY2TitleBounds;
    struct CGRect mTopLegendBounds;
    struct CGRect mLeftLegendBounds;
    struct CGRect mBottomLegendBounds;
    struct CGRect mRightLegendBounds;
    struct CGRect mTopAxisLabelsBounds;
    struct CGRect mLeftAxisLabelsBounds;
    struct CGRect mBottomAxisLabelsBounds;
    struct CGRect mRightAxisLabelsBounds;
    struct CGRect mTopAxisBounds;
    struct CGRect mLeftAxisBounds;
    struct CGRect mBottomAxisBounds;
    struct CGRect mRightAxisBounds;
    struct CGPoint mExplodedBodyShift;
    struct CGPoint mOutsideLabelsChartTitleShift;
    _Bool mChartLayoutValid;
    _Bool mChartExplodedSizeValid;
    _Bool mChartAxisSizeValid;
    _Bool mChartAxisLabelsSizeValid;
    _Bool mChartTitleSizeValid;
    _Bool mValueAxisTitleSizeValid;
    _Bool mCategoryAxisTitleSizeValid;
    _Bool mValueAxisY2TitleSizeValid;
    _Bool mChartLegendSizeValid;
    _Bool mChartValueElementsGeometryValid;
}

+ (struct CGRect)computeSageChartAreaBoundsForChartInfo:(id)arg1 geometryRect:(struct CGRect)arg2 returningContainingViewportSize:(id *)arg3;
- (struct CGSize)measureText:(id)arg1 withParagraphStyle:(id)arg2;
- (double)seriesCategoryLabelsHorizontalGutter;
- (double)seriesCategoryLabelsVerticalGutter;
- (double)distanceFromYAxisUsingParagraphStyle:(id)arg1;
- (double)distanceFromXAxisUsingParagraphStyle:(id)arg1;
- (double)yAxisTitlePadding:(_Bool)arg1;
- (double)xAxisTitlePadding;
- (double)chartTitlePadding;
- (double)yAxisLabelHeight:(_Bool)arg1;
- (double)xAxisLabelHeight;
- (double)fontHeight:(id)arg1;
- (double)_horizontalAxisLabelsHeight;
- (double)_verticalAxisLabelsWidth:(_Bool)arg1;
- (double)_topAxisOuterWidth;
- (double)_rightAxisOuterWidth;
- (double)_bottomAxisOuterWidth;
- (double)_leftAxisOuterWidth;
- (double)p_widthFromTicksAndStrokeForAxis:(id)arg1;
- (double)_seriesSymbolWidth;
- (void)calculateChartBodySize;
- (_Bool)calculateChartExplodedSize;
- (void)calculateValueAxisY2TitleSize;
- (void)calculateCategoryAxisTitleSize;
- (void)calculateValueAxisTitleSize;
- (void)calculateChartTitleSize;
- (void)calculateChartAxisSize;
- (_Bool)topAxisLabelsVisible;
- (_Bool)bottomAxisLabelsVisible;
- (_Bool)rightAxisLabelsVisible;
- (_Bool)leftAxisLabelsVisible;
- (_Bool)p_labelsVisible:(id)arg1;
- (void)calculateChartAxisLabelsSize;
- (struct CGRect)computeSageLayoutCBB;
- (id)p_model;
- (_Bool)aspectRatioLocked;
- (_Bool)isScatter;
- (_Bool)isLine;
- (_Bool)isArea;
- (_Bool)isPie;
- (_Bool)isVertical;

@end

__attribute__((visibility("hidden")))
@interface TSCH2DChartAbstractAreaLayoutItem : TSCHChartAbstractAreaLayoutItem
{
    TSCHChartTitleLayoutItem *mTitleElement;
    TSCHChartDataSetNameLayoutItem *mDataSetNameElement;
    TSCHChartBodyLayoutItem *mChartBody;
}

@property(readonly, nonatomic) TSCHChartBodyLayoutItem *bodyLayoutItem; // @synthesize bodyLayoutItem=mChartBody;
- (struct CGRect)i_currentBufferAreaUnitRect;
- (void)setChartBodyLayoutSize:(struct CGSize)arg1;
- (struct CGRect)chartBodyLayoutRect;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeature : NSObject <TSCHUnretainedParent>
{
    TSCHChartType *mChartType;
    NSArray *mValueAxisIDs;
    NSArray *mCategoryAxisIDs;
}

@property(readonly, retain, nonatomic) NSArray *categoryAxisIDs; // @synthesize categoryAxisIDs=mCategoryAxisIDs;
@property(readonly, retain, nonatomic) NSArray *valueAxisIDs; // @synthesize valueAxisIDs=mValueAxisIDs;
- (_Bool)supportsShowLabelsInFrontOption;
- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (id)initialSceneWithChartInfo:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (Class)stageClass;
- (unsigned long long)maxCellsToCheckForGridValueType;
- (_Bool)supportsBubbleOptions;
- (_Bool)supportsSharedAndSeparateX;
- (_Bool)supportsCategoryLabelsInChartRangeEditor;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsMoreThanOneLiveCategory;
- (_Bool)supportsIndividualShadowRendering;
- (_Bool)supportsBorderFrame;
- (_Bool)isPie;
- (_Bool)isHorizontal;
- (_Bool)supportsCategoryAxisMinorTickmarks;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsElementChunking;
- (int)stackingSignRule;
- (_Bool)supportsSymbolOverhang;
- (id)supportedAxisScales;
- (_Bool)supportsPercentNumberFormatting;
- (_Bool)supportsLabelExplosion;
- (_Bool)supportsElementSeriesNames;
- (int)labelOrientation;
- (id)columnShapeUIName;
- (_Bool)supportsColumnShape;
- (_Bool)supportsInterSetDepthGap;
- (_Bool)supportsErrorBars;
- (_Bool)supportsTrendLines;
- (_Bool)supportsReverseChunking;
- (_Bool)supportsBackgroundFill;
- (_Bool)supportsEditing;
- (_Bool)supportsValueLabels;
- (_Bool)supportsSeriesLabels;
- (_Bool)supportsGroupedShadows;
- (_Bool)drawValueLabelsForZero;
- (_Bool)requiresYAxisOrdinal;
- (id)supportedSeriesTypes;
- (_Bool)supportsMultipleSeriesTypes;
- (_Bool)reverseSingleColumnLegendOrder;
- (id)genericToSpecificPropertyMap;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (Class)presetImagerClass;
- (id)categoryLabelPositioner;
- (id)valueLabelPositioner;
- (id)defaultDataFileName;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (void)p_initializeAxisIDs;
- (_Bool)supportsEditingForAxisID:(id)arg1;
- (Class)p_selectAxisClassForScale:(int)arg1 linearClass:(Class)arg2 logClass:(Class)arg3 percentClass:(Class)arg4;
- (void)dealloc;
- (void)clearParent;
- (id)initWithChartType:(id)arg1;
- (id)init;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeaturePie : TSCHChartFeature
{
}

- (unsigned long long)maxCellsToCheckForGridValueType;
- (_Bool)supportsCategoryLabelsInChartRangeEditor;
- (_Bool)supportsMoreThanOneLiveCategory;
- (id)initialSceneWithChartInfo:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (Class)presetImagerClass;
- (_Bool)supportsPercentNumberFormatting;
- (_Bool)supportsLabelExplosion;
- (_Bool)supportsElementSeriesNames;
- (_Bool)supportsBorderFrame;
- (_Bool)isPie;
- (_Bool)supportsErrorBars;
- (_Bool)supportsTrendLines;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (_Bool)supportsBackgroundFill;
- (_Bool)supportsGroupedShadows;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (void)p_initializeAxisIDs;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureCategory : TSCHChartFeature
{
}

- (id)valueLabelPositioner;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (void)p_initializeAxisIDs;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureBar : TSCHChartFeatureCategory
{
}

- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (Class)stageClass;
- (id)initialSceneWithChartInfo:(id)arg1 layoutSettings:(CDStruct_9aa9521f)arg2;
- (id)valueLabelPositioner;
- (id)categoryLabelPositioner;
- (int)labelOrientation;
- (_Bool)isHorizontal;
- (id)columnShapeUIName;
- (_Bool)supportsColumnShape;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsElementChunking;
- (id)supportedAxisScales;
- (_Bool)supportsSeriesLabels;
- (_Bool)supportsGroupedShadows;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (void)p_initializeAxisIDs;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureColumn : TSCHChartFeatureCategory
{
}

- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)labelOrientation;
- (Class)stageClass;
- (id)columnShapeUIName;
- (_Bool)supportsColumnShape;
- (id)categoryLabelPositioner;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsElementChunking;
- (id)supportedAxisScales;
- (_Bool)supportsSeriesLabels;
- (_Bool)supportsGroupedShadows;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (int)deprecated3DShadowSpecificProperty;
- (int)deprecated3DBevelEdgesSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureLine : TSCHChartFeatureCategory
{
}

- (_Bool)supportsInterSetDepthGap;
- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)labelOrientation;
- (Class)stageClass;
- (id)categoryLabelPositioner;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsElementChunking;
- (_Bool)supportsSymbolOverhang;
- (id)supportedAxisScales;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (int)deprecated3DShadowSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureArea : TSCHChartFeatureCategory
{
}

- (_Bool)supportsInterSetDepthGap;
- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)labelOrientation;
- (Class)stageClass;
- (id)categoryLabelPositioner;
- (id)supportedAxisScales;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (int)deprecated3DShadowSpecificProperty;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureScatter : TSCHChartFeature
{
}

- (_Bool)supportsCategoryLabelsInChartRangeEditor;
- (_Bool)supportsConnectingLines;
- (id)supportedSeriesTypes;
- (_Bool)supportsSymbolOverhang;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (id)supportedAxisScales;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (void)p_initializeAxisIDs;
- (_Bool)supportsSharedAndSeparateX;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureStackedColumn : TSCHChartFeatureColumn
{
}

- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)stackingSignRule;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsTrendLines;
- (_Bool)drawValueLabelsForZero;
- (id)supportedAxisScales;
- (_Bool)supportsSeriesLabels;
- (_Bool)reverseSingleColumnLegendOrder;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureStackedBar : TSCHChartFeatureBar
{
}

- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)stackingSignRule;
- (_Bool)supportsCategoryAxisSeriesNames;
- (_Bool)supportsTrendLines;
- (_Bool)drawValueLabelsForZero;
- (id)supportedAxisScales;
- (_Bool)supportsSeriesLabels;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureStackedArea : TSCHChartFeatureArea
{
}

- (_Bool)supportsInterSetDepthGap;
- (double)sageMaxDepthRatio;
- (double)maxDepthRatio;
- (int)stackingSignRule;
- (_Bool)supportsTrendLines;
- (_Bool)supportsSymbolOverhang;
- (_Bool)drawValueLabelsForZero;
- (id)supportedAxisScales;
- (_Bool)reverseSingleColumnLegendOrder;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureMixed : TSCHChartFeatureCategory
{
}

- (_Bool)supportsConnectingLines;
- (_Bool)supportsEditing;
- (_Bool)supportsSymbolOverhang;
- (id)supportedAxisScales;
- (_Bool)supportsIndividualShadowRendering;
- (_Bool)supportsGroupedShadows;
- (id)supportedSeriesTypes;
- (_Bool)supportsMultipleSeriesTypes;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureTwoAxis : TSCHChartFeatureCategory
{
}

- (_Bool)supportsConnectingLines;
- (_Bool)supportsEditing;
- (_Bool)supportsSymbolOverhang;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (id)supportedAxisScales;
- (_Bool)supportsIndividualShadowRendering;
- (_Bool)supportsGroupedShadows;
- (_Bool)requiresYAxisOrdinal;
- (id)supportedSeriesTypes;
- (_Bool)supportsMultipleSeriesTypes;
- (id)userInterfaceName;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (void)p_initializeAxisIDs;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartFeatureBubble : TSCHChartFeatureScatter
{
}

- (_Bool)supportsShowLabelsInFrontOption;
- (_Bool)supportsConnectingLines;
- (_Bool)supportsBubbleOptions;
- (id)supportedSeriesTypes;
- (void)updateTitlesForExportingModel:(id)arg1 info:(id)arg2;
- (id)supportedAxisScales;
- (id)genericToSpecificPropertyMap;
- (id)defaultDataFileName;
- (Class)presetImagerClass;
- (unsigned long long)styleIndexForAxisID:(id)arg1;
- (Class)valueAxisClassForID:(id)arg1 scale:(int)arg2;
- (_Bool)supportsEditingForAxisID:(id)arg1;
- (void)p_initializeAxisIDs;
- (_Bool)supportsSharedAndSeparateX;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartLayoutCache : NSObject
{
    NSMutableArray *mCacheItems;
    _Bool mIgnoreInvalidation;
}

+ (id)cacheWithCacheItem:(id)arg1;
@property(nonatomic) _Bool ignoreInvalidation; // @synthesize ignoreInvalidation=mIgnoreInvalidation;
- (void)printDebug;
- (void)invalidate;
- (void)accessWithCacheItemBlock:(CDUnknownBlockType)arg1 calculateBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithCacheItem:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DOnePassBlurShaderEffect : TSCH3DShaderEffect
{
}

+ (id)variablePixelSize;
+ (id)variableBlurTexCoord;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variablePixelSize;
- (id)variableBlurTexCoord;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferOnepassBlurPipeline : TSCH3DFramebufferCopyPipeline
{
    tvec2_84d5962d mPixelSize;
}

+ (id)pipelineWithProcessor:(id)arg1 session:(id)arg2 pixelSize:(const tvec2_84d5962d *)arg3;
@property(readonly, nonatomic) tvec2_84d5962d pixelSize; // @synthesize pixelSize=mPixelSize;
- (id).cxx_construct;
- (void)updateShaderEffectsStates;
- (void)dealloc;
- (id)initWithProcessor:(id)arg1 session:(id)arg2 pixelSize:(const tvec2_84d5962d *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRepAnimationTextureSceneDelegate : NSObject <TSCH3DSceneObjectDelegator, TSCH3DSceneDelegate, TSCH3DChartAllSceneObjectDelegate, TSCHUnretainedParent>
{
    TSCH3DChartRep *mParent;
    TSCH3DScene *mScene;
    struct ChartRepRenderIndexSet mShouldRender;
    long long mChunkStage;
}

+ (id)sceneDelegateWithRep:(id)arg1 scene:(id)arg2 finalElements:(_Bool)arg3 chunkStage:(long long)arg4;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)willRunForScene:(id)arg1 pipeline:(id)arg2;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)clearParent;
- (_Bool)p_shouldSkipIndex:(const tvec2_3b141483 *)arg1;
- (void)dealloc;
- (id)initWithRep:(id)arg1 scene:(id)arg2 finalElements:(_Bool)arg3 chunkStage:(long long)arg4;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSceneRenderStaticCanvasSetup : TSCH3DChartSceneRenderSetup
{
    box_80622335 mRenderingCameraBounds;
}

- (id).cxx_construct;
- (box_80622335)globalPixelAlignedBodyCanvasBoundsForRenderingCamera;
- (void)updateFramebufferBounds:(struct FramebufferBounds *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderingLightingModel : NSObject
{
    TSCH3DLightingModel *mLightingModel;
    NSNumber *mPercentage;
    _Bool mHasTransparency;
}

+ (id)renderingLightingModelWithLightingModel:(id)arg1 percentage:(id)arg2 hasTransparency:(_Bool)arg3;
+ (id)renderingLightingModelWithFill:(id)arg1 lightings:(id)arg2;
+ (id)p_lightingModelFromFill:(id)arg1 lightings:(id)arg2 returningTransparency:(_Bool *)arg3;
@property(readonly, nonatomic) _Bool hasTransparency; // @synthesize hasTransparency=mHasTransparency;
@property(readonly, nonatomic) TSCH3DLightingModel *lightingModel; // @synthesize lightingModel=mLightingModel;
- (void)affect:(id)arg1 states:(id)arg2 scene:(id)arg3 texturePool:(id)arg4;
- (void)dealloc;
- (id)initWithLightingModel:(id)arg1 percentage:(id)arg2 hasTransparency:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelsRendererTransforms : NSObject
{
    TSCH3DScene *mScene;
    TSCH3DCamera *mCamera;
    struct ChartScenePropertyAccessor *mAccessor;
    tmat4x4_3074befe mProjector;
    tmat4x4_3074befe mUnitToWorld;
    tmat4x4_3074befe mStageToWorld;
    tmat4x4_3074befe mWorldToStage;
    struct bitset<5> mValidBits;
}

+ (id)transforms;
@property(retain, nonatomic) TSCH3DCamera *camera; // @synthesize camera=mCamera;
@property(retain, nonatomic) TSCH3DScene *scene; // @synthesize scene=mScene;
- (id).cxx_construct;
- (tvec3_17f03ce0)projectPoint:(const tvec3_17f03ce0 *)arg1;
- (const tmat4x4_3074befe *)p_projector;
- (tvec3_17f03ce0)samples;
- (const tmat4x4_3074befe *)unitToWorld;
- (const tmat4x4_3074befe *)worldToStage;
- (const tmat4x4_3074befe *)p_stageToWorld;
- (struct ChartScenePropertyAccessor *)accessor;
- (void)resetWithScene:(id)arg1 camera:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTransformGeometryRenderProcessor : TSCH3DRetargetRenderProcessor
{
    TSCH3DDataBuffer *mBuffer;
}

+ (id)processorWithOriginal:(id)arg1;
@property(readonly, nonatomic) TSCH3DDataBuffer *buffer; // @synthesize buffer=mBuffer;
- (void)setOriginal:(id)arg1;
- (id)matrix;
- (void)geometry:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithOriginal:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderCacheItem : NSObject
{
    struct ObjectStateMatchObject mState;
    TSCH3DShaderResource *mShader;
    NSSet *mDebugEffects;
}

+ (id)itemWithObjectState:(const struct ObjectState *)arg1 version:(id)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)debug_differentEffectsWithItem:(id)arg1;
- (id)shader;
- (_Bool)matchesObjectState:(const struct ObjectState *)arg1 version:(id)arg2;
- (void)dealloc;
- (id)initWithObjectState:(const struct ObjectState *)arg1 version:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DShaderCache : NSObject
{
    id <TSCH3DProtectResourceDelegate> mProtectResourceDelegate;
    NSMutableArray *mShaderCache;
}

@property(nonatomic) id <TSCH3DProtectResourceDelegate> protectResourceDelegate; // @synthesize protectResourceDelegate=mProtectResourceDelegate;
- (id)description;
- (void)flush;
- (id)shaderForObjectState:(const struct ObjectState *)arg1 version:(id)arg2 initializeProgramBlock:(CDUnknownBlockType)arg3;
- (void)p_ensureCacheLimit;
- (void)debug_verifyUniqueShadersInCache;
- (void)p_unprotectAllCacheItems;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLLayerClassFactory : NSObject
{
}

+ (Class)TSDGLLayerClass;
+ (Class)GLLayerClass;
+ (Class)CALayerClass;
+ (Class)interactiveCanvasCALayerClass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRotationBasedAnimation : TSCH3DChartAnimation
{
}

+ (void)updateLayoutScene:(id)arg1;
- (void)willRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)addAnimationToClips:(id)arg1 forSceneObject:(id)arg2 scene:(id)arg3;
- (void)addAnimationToClips:(id)arg1 forScene:(id)arg2;
- (void)addToElementTimings:(id)arg1;
- (void)addToElementPlaneTimings:(id)arg1;
- (void)updateTimeRanges;
- (_Bool)needDynamicShadows;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRendererState : NSObject <TSCHUnretainedParent>
{
    TSCH3DChartRep *mRep;
    TSCH3DSession *mSession;
    TSCH3DRenderProcessor *mProcessor;
    TSCH3DChartRenderCycle *mRenderCycle;
    _Bool mInteractive;
    _Bool mWantInteractiveMode;
    _Bool mIsInteractiveMode;
    struct CGSize mMinimumBufferSize;
    struct CGRect mVisibleBoundsInLayerRelativeSpace;
    CALayer<TSCH3DGLLayer> *mGLLayer;
    TSCH3DGLLayerDelegate *mGLLayerDelegate;
    TSCH3DSharegroupToken *mSharegroupToken;
}

@property(readonly, nonatomic) TSCH3DSharegroupToken *sharegroupToken; // @synthesize sharegroupToken=mSharegroupToken;
@property(nonatomic) struct CGRect visibleBoundsInLayerRelativeSpace; // @synthesize visibleBoundsInLayerRelativeSpace=mVisibleBoundsInLayerRelativeSpace;
@property(readonly, nonatomic) TSCH3DRenderProcessor *processor; // @synthesize processor=mProcessor;
- (id).cxx_construct;
- (id)GLLayer;
- (void)recreateGLLayer;
- (void)p_createGLLayer;
- (void)releaseGLLayer;
- (void)p_setupSession;
- (void)p_setupRenderCycle;
@property(readonly, nonatomic) _Bool mustRecreateRenderCycleForCurrentRenderCycleClass;
- (_Bool)p_reusableForCurrentRenderCycleClass;
- (void)p_setupInteractiveMode;
- (void)setIfIsMoreDemandingPerformance:(int)arg1;
@property(nonatomic) int performance;
- (void)endInteractiveMode;
- (void)beginInteractiveModeWithMinimumBufferSize:(struct CGSize)arg1 performanceHint:(int)arg2;
- (_Bool)usesMultipassRendering;
- (_Bool)isOneShot;
@property(readonly, nonatomic) _Bool framebufferCanRender;
@property(readonly, nonatomic) _Bool canRender;
@property(readonly, nonatomic) TSCH3DChartRenderCycle *renderCycle; // @synthesize renderCycle=mRenderCycle;
- (void)setupForRendering;
- (_Bool)renderLegendIntoSeparateLayer;
- (void)p_validateLabelBitmapContextInfoForScene:(id)arg1;
- (void)p_updateLabelBitmapContextInfoForScene:(id)arg1;
@property(readonly, nonatomic) TSCH3DScene *scene;
@property(readonly, nonatomic) TSCH3DSession *session;
@property(readonly, nonatomic) _Bool hasSession;
- (void)destroyFramebuffer;
- (void)destroy;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1 sharegroupToken:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPerElementValueLabelFadeAnimationClip : TSCH3DChartAnimationClip
{
    box_e9f23397 mLabelRange;
}

@property(nonatomic) box_e9f23397 labelRange; // @synthesize labelRange=mLabelRange;
- (id).cxx_construct;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3 timeSlice:(id)arg4 context:(id)arg5;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPerElementValueLabelFadeShaderEffect : TSCH3DShaderEffect
{
}

- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DNormalDirectionMapper : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DDefaultNormalDirectionMapper : TSCH3DNormalDirectionMapper
{
    tvec3_17f03ce0 mNormalBias;
}

+ (id)mapperWithNormalBias:(const tvec3_17f03ce0 *)arg1;
- (id).cxx_construct;
- (void)mapFromVertexArray:(const tvec3_17f03ce0 *)arg1 normalArray:(const tvec3_17f03ce0 *)arg2 normalMatrix:(const tmat3x3_b39cd897 *)arg3 numVertices:(long long)arg4 destination:(vector_a3426c4e *)arg5;
- (id)initWithNormalBias:(const tvec3_17f03ce0 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPrintingRenderCycle : TSCH3DChartCGContextRenderCycle
{
    unsigned long long mSamples;
    unsigned long long mTileSize;
}

+ (unsigned long long)calculatePrintingSamplesForBounds:(struct CGRect)arg1 canvas:(id)arg2;
+ (Class)sceneRenderSetupClass;
- (_Bool)runPipeline:(id)arg1;
- (void)allocateTileFramebufferWithTileAllocationInfo:(const struct TileFramebufferAllocationInfo *)arg1;
- (_Bool)antialiasing;
- (unsigned long long)tileSamples;
- (unsigned long long)tileSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartCGContextRenderCycle : TSCH3DChartRenderCycle
{
    NSArray *mImages;
}

- (void)restoreDefaultRenderPresenter;
- (void)switchToRenderPresenter:(id)arg1;
- (_Bool)shouldRenderLegendIntoSeparateLayer;
- (Class)layerClass;
- (void)presentRenderingWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (_Bool)runPipeline:(id)arg1;
- (_Bool)allocateFramebufferWithAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (void)setupTextureSizeHintForAllocationInfo:(const struct FramebufferAllocationInfo *)arg1;
- (void)allocateTileFramebufferWithTileAllocationInfo:(const struct TileFramebufferAllocationInfo *)arg1;
- (void)p_setupPipelineWithProcessor:(id)arg1 session:(id)arg2 scene:(id)arg3 antialiasing:(_Bool)arg4;
- (void)dealloc;
- (id)initWithRenderCycleInfo:(const struct RenderCycleInfo *)arg1;
- (id)tileFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrecalculatedLayoutCacheItem : NSObject <NSCopying>
{
    TSCHChartType *mChartType;
    struct TSCH3DPrecalculatedLayoutCacheType mCacheType;
}

+ (id)cacheItemForChartType:(id)arg1 cacheType:(struct TSCH3DPrecalculatedLayoutCacheType)arg2;
- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initForChartType:(id)arg1 cacheType:(struct TSCH3DPrecalculatedLayoutCacheType)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrecalculatedLayoutCache : NSObject
{
    NSMutableDictionary *mCache;
}

+ (id)sharedCache;
+ (void)populateDesktopInsertionIconsIntoDictionary:(id)arg1;
+ (void)populateIPhonePortraitInspectorIconsIntoDictionary:(id)arg1;
+ (void)populateIPhonePortraitInsertionIconsIntoDictionary:(id)arg1;
+ (void)populateIPhoneInspectorIconsIntoDictionary:(id)arg1;
+ (void)populateIPhoneInsertionIconsIntoDictionary:(id)arg1;
+ (void)populateIPadInspectorIconsIntoDictionary:(id)arg1;
+ (void)populateIPadInsertionIconsIntoDictionary:(id)arg1;
+ (CDStruct_9aa9521f)desktopLayoutSettings;
+ (CDStruct_9aa9521f)IOSLayoutSettings;
- (id)layoutCacheForChartType:(id)arg1 cacheType:(struct TSCH3DPrecalculatedLayoutCacheType)arg2;
- (void)dealloc;
- (id)initWithCache:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DMipmaps : NSObject
{
    int mWidth;
    int mHeight;
    unsigned long long mComponents;
    NSData *mData;
}

+ (id)mipmapsFromData:(id)arg1;
+ (id)mipmapsWithWidth:(int)arg1 height:(int)arg2 components:(unsigned long long)arg3 mipmapData:(id)arg4;
+ (struct CGSize)mipmapSizeForTexturableSize:(struct CGSize)arg1;
+ (struct CGSize)optimizedMipmapLevel0Size;
+ (id)mipmapPathFromPath:(id)arg1;
@property(readonly, nonatomic) NSData *data; // @synthesize data=mData;
@property(readonly, nonatomic) unsigned long long components; // @synthesize components=mComponents;
@property(readonly, nonatomic) int height; // @synthesize height=mHeight;
@property(readonly, nonatomic) int width; // @synthesize width=mWidth;
- (_Bool)writeToFile:(id)arg1;
- (_Bool)valid;
- (id)description;
- (void)dealloc;
- (id)initFromData:(id)arg1;
- (id)initWithWidth:(int)arg1 height:(int)arg2 components:(unsigned long long)arg3 mipmapData:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSPMipmapData : NSObject <TSCHUnretainedParent>
{
    TSCH3DTSPImageDataTexture *mParent;
    TSPData *mData;
}

+ (id)dataWithTSPData:(id)arg1;
@property(readonly, nonatomic) TSPData *data; // @synthesize data=mData;
- (id)databuffer;
- (void)setParent:(id)arg1;
- (void)clearParent;
- (void)dealloc;
- (id)initWithTSPData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHSeriesDimension : NSObject <NSCopying>
{
    unsigned long long mSeriesIndex;
    int mAxisType;
}

+ (id)seriesDimensionWithSeriesIndex:(unsigned long long)arg1 axisType:(int)arg2;
@property(readonly, nonatomic) int axisType; // @synthesize axisType=mAxisType;
@property(readonly, nonatomic) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSeriesIndex:(unsigned long long)arg1 axisType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DViewFrustumCullingDelegate : NSObject <TSCH3DChartAllSceneObjectDelegate, TSCH3DSceneObjectDelegator>
{
    unsigned long long mCullCnt;
    unsigned long long mCullTotalCnt;
    vector_a9ee3a08 mCullingPlanes;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFBOResource : TSCH3DResource
{
    NSString *mName;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=mName;
- (_Bool)isEqual:(id)arg1;
- (id)get;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLFramebuffer : TSCH3DFramebuffer <TSCH3DPipelineLinkable>
{
    TSCH3DGLContext *mContext;
    _Bool mHasSetDefaultStates;
}

+ (id)framebufferWithContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3;
@property(readonly, nonatomic) TSCH3DGLContext *context; // @synthesize context=mContext;
- (id)output;
- (id)resolvingFramebuffer;
- (void)wipe:(tvec4_ac57c72d *)arg1;
- (void)clean;
- (void)clear:(unsigned int)arg1;
- (void)setDepthFunction:(int)arg1;
- (void)setDepthMask:(unsigned char)arg1;
- (void)setClearDepth:(float)arg1;
- (void)setColorMask:(const tvec4_d23a2b6e *)arg1;
- (void)setClearColor:(const tvec4_ac57c72d *)arg1;
@property(readonly, nonatomic) _Bool isTexturable;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLESRTT : NSObject <TSCH3DGLBindable>
{
    unsigned int mTexture;
}

+ (_Bool)isTexturable;
+ (_Bool)isEqual:(id)arg1;
+ (id)depthbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
+ (id)colorbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
+ (id)bufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1 internalFormat:(unsigned int)arg2 format:(unsigned int)arg3 attachment:(unsigned int)arg4;
- (void)deactivateInContext:(id)arg1;
- (void)bindInSession:(id)arg1;
- (_Bool)valid;
- (void)destroyResourcesInContext:(id)arg1;
- (void)dealloc;
- (id)initWithGLTexture:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLFBO : TSCH3DGLFramebuffer
{
    TSCH3DFBOLoader *mLoader;
    TSCH3DResource *mResource;
    _Bool mPreserveProtectedResourceAfterDestroy;
}

+ (id)FBOFromContext:(id)arg1 size:(tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3 colorAllocator:(id)arg4 depthAllocator:(id)arg5 resource:(id)arg6;
+ (id)FBOFromContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3 textureAttributes:(const struct FramebufferAttributes *)arg4 resource:(id)arg5 FBOClass:(Class)arg6 RTTRenderbufferAllocatorBlock:(CDUnknownBlockType)arg7;
+ (id)FBOFromContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3 textureAttributes:(const struct FramebufferAttributes *)arg4 resource:(id)arg5;
+ (id)FBOFromContext:(id)arg1 attributes:(const struct FramebufferAttributes *)arg2 eaglLayer:(id)arg3;
@property(nonatomic) _Bool preserveProtectedResourceAfterDestroy; // @synthesize preserveProtectedResourceAfterDestroy=mPreserveProtectedResourceAfterDestroy;
- (unsigned long long)estimatedMemroyInBytes;
- (tvec2_3b141483)size;
- (void)discardBuffers;
- (void)discardDepthBuffer;
- (void)discardColorBuffer;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)bindInSession:(id)arg1;
- (struct SessionLoadResourceResult)loadInsideSession:(id)arg1;
- (unsigned int)type;
- (void)bindColorbufferInSession:(id)arg1;
- (void)disableSamplingInSession:(id)arg1;
- (_Bool)validForSession:(id)arg1;
- (id)FBOHandleForSession:(id)arg1;
- (id)GLHandleForSession:(id)arg1;
- (_Bool)isProtectedInSession:(id)arg1;
- (void)unprotectInSession:(id)arg1 clearOnFailProtection:(_Bool)arg2;
- (void)protectInSession:(id)arg1 unprotectOnFail:(_Bool)arg2;
- (void)destroyResourcesInSession:(id)arg1;
- (id)loader;
- (_Bool)isTexturable;
- (id)description;
- (void)dealloc;
- (id)initFromContext:(id)arg1 size:(tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3 colorAllocator:(id)arg4 depthAllocator:(id)arg5 resource:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLayerCacheLogic : NSObject <TSCHUnretainedParent, TSCH3DLayerCacheLogicProtocol>
{
    CALayer *mParent;
    struct CGRect mDrawingBounds;
    id mRepLayerDelegate;
}

+ (_Bool)cacheable;
@property(nonatomic) id repLayerDelegate; // @synthesize repLayerDelegate=mRepLayerDelegate;
- (id).cxx_construct;
- (_Bool)isClippedAreaVisibleInRect:(struct CGRect)arg1;
- (_Bool)isClipped;
- (void)setDrawingBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setContentsIsValid:(_Bool)arg1 highQuality:(_Bool)arg2;
- (void)setContentsIsValid:(_Bool)arg1;
- (_Bool)contentsIsHighQuality;
- (_Bool)contentsIsValid;
- (id)description;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCacheTrackingLayerLogic : TSCH3DLayerCacheLogic
{
    _Bool mValid;
    _Bool mHighQuality;
}

- (id)description;
- (void)setContentsIsValid:(_Bool)arg1 highQuality:(_Bool)arg2;
- (_Bool)contentsIsHighQuality;
- (_Bool)contentsIsValid;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DCacheableLayerLogic : TSCH3DCacheTrackingLayerLogic
{
}

+ (_Bool)cacheable;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLContext : TSCH3DContext <TSCHUnretainedParent>
{
    struct RenderState mState;
    NSMutableDictionary *mExtensionsNamesDict;
    NSMutableDictionary *mVirtualScreenToCapabilitiesMap;
    NSIndexSet *mEnabledArrays;
    struct BufferStates mBufferStates;
    struct GLSingleState mBufferArraysStates;
    struct TextureUnitStates mTextureUnitStates;
    box_0260e9b3 mViewport;
    NSMutableIndexSet *mChangeMask;
    _Bool mIsSharable;
    NSMutableSet *mChildrenContexts;
    TSCH3DGLContext *mSharedContext;
    TSCH3DGLVersion *mVersion;
}

@property(readonly, nonatomic) _Bool isSharable; // @synthesize isSharable=mIsSharable;
- (id).cxx_construct;
- (void)clearParent;
@property(readonly, nonatomic) NSSet *childrenContexts;
- (void)p_removeChildContext:(id)arg1;
- (void)p_addChildContext:(id)arg1;
- (id)sharedContext;
- (void)enableSharing;
- (void)invalidateTextureHandleValue:(unsigned int)arg1;
- (void)bindTextureHandleValue:(unsigned int)arg1 is3DTexture:(_Bool)arg2;
- (void)activateTextureUnit:(unsigned long long)arg1;
- (void)removeChangeFlag:(int)arg1;
- (void)addShaderChangeFlag;
- (void)addChangeFlag:(int)arg1;
- (_Bool)hasChangeFlag:(int)arg1;
- (void)setEnabledVertexArrays:(id)arg1;
- (void)enableVertexArrays:(id)arg1;
- (id)capabilitiesForExtensions:(id)arg1;
- (_Bool)supportsCapability:(id)arg1;
- (void)p_cacheCapabilitiesForKey:(id)arg1;
- (id)p_keyForScreen:(int)arg1;
- (struct GLSingleState *)bufferArraysStates;
- (struct BufferStates *)bufferStates;
- (void)setState:(const struct RenderState *)arg1;
- (struct RenderState)state;
- (void)viewport:(box_0260e9b3 *)arg1;
- (id)sharedID;
@property(readonly, nonatomic) TSCH3DGLVersion *version; // @synthesize version=mVersion;
- (id)description;
- (void)dealloc;
- (id)initWithSharedContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLRenderBuffer : NSObject <TSCH3DGLBindable>
{
    unsigned int mBuffer;
}

- (void)deactivateInContext:(id)arg1;
- (void)bindInSession:(id)arg1;
- (_Bool)valid;
- (void)destroyResourcesInContext:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithGLBuffer:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLRenderBufferAllocator : NSObject <TSCH3DRenderBufferAllocator>
{
    TSCH3DRenderBufferStorage *mStorage;
}

+ (id)allocatorWithStorage:(id)arg1;
+ (id)allocator;
- (_Bool)isEqual:(id)arg1;
- (id)depthbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
- (id)colorbufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1;
- (id)bufferWithAllocatorInfo:(const struct RenderbufferAllocatorInfo *)arg1 internalFormat:(unsigned int)arg2 attachment:(unsigned int)arg3;
@property(readonly, nonatomic) _Bool isTexturable;
- (void)dealloc;
- (id)initWithStorage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLRenderBufferStorage : TSCH3DRenderBufferStorage
{
}

+ (id)storage;
- (void)allocateStorageWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1 size:(tvec2_3b141483 *)arg2 internalFormat:(unsigned int)arg3;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderBufferStorage : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLDefaultFramebuffer : TSCH3DGLFramebuffer
{
    tvec2_3b141483 mSize;
    unsigned int mType;
    TSCH3DGLHandle *mHandle;
    _Bool mDisableDestroyAssertion;
}

+ (id)currentlyBoundFramebufferWithContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3;
@property(nonatomic) _Bool disableDestroyAssertion; // @synthesize disableDestroyAssertion=mDisableDestroyAssertion;
@property(nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
@property(nonatomic) unsigned int type; // @synthesize type=mType;
- (id).cxx_construct;
- (id)GLHandleForSession:(id)arg1;
- (void)disableSamplingInSession:(id)arg1;
- (void)discardBuffers;
- (void)discardDepthBuffer;
- (void)discardColorBuffer;
- (_Bool)isProtectedInSession:(id)arg1;
- (void)unprotectInSession:(id)arg1 clearOnFailProtection:(_Bool)arg2;
- (void)protectInSession:(id)arg1 unprotectOnFail:(_Bool)arg2;
- (_Bool)validForSession:(id)arg1;
- (void)destroyResourcesInSession:(id)arg1;
- (void)bindColorbufferInSession:(id)arg1;
- (unsigned long long)estimatedMemroyInBytes;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)bindInSession:(id)arg1;
- (void)p_bindFramebuffer;
@property(nonatomic) unsigned int framebufferHandle;
- (void)dealloc;
- (id)initWithContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLFramebufferMultisample : NSObject <TSCHUnretainedParent>
{
    id <TSCH3DGLResolveFramebuffer> mParent;
    struct FramebufferAttributes mAttributes;
    TSCH3DGLFBO *mMultisampleFBO;
    _Bool mResolved;
    _Bool mMultisampleDisabled;
}

+ (id)multisampleWithParent:(id)arg1 framebufferAttributes:(const struct FramebufferAttributes *)arg2;
@property(readonly, nonatomic) struct FramebufferAttributes attributes; // @synthesize attributes=mAttributes;
@property(readonly, nonatomic) _Bool resolved; // @synthesize resolved=mResolved;
- (id).cxx_construct;
- (void)resolveInSession:(id)arg1;
- (_Bool)validForSession:(id)arg1;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)bindInSession:(id)arg1;
- (struct SessionLoadResourceResult)p_loadFramebufferInSession:(id)arg1;
- (_Bool)p_createMultisampleFBOOnDemandInsideSession:(id)arg1 returningResolveFramebufferActivated:(_Bool *)arg2;
- (struct FramebufferAttributes)p_clampedAttributes;
- (void)disableSamplingInSession:(id)arg1;
@property(readonly, nonatomic) _Bool usingMultisample;
- (_Bool)p_supportsMultisample;
- (void)clearParent;
- (void)dealloc;
- (id)initWithParent:(id)arg1 framebufferAttributes:(const struct FramebufferAttributes *)arg2;
- (id)multisampleFBOResource;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLMultisampleFramebuffer : TSCH3DGLMixinFramebuffer <TSCH3DGLResolveFramebuffer>
{
    TSCH3DGLFramebufferMultisample *mMultisample;
    _Bool mDisableDestroyAssertion;
}

+ (id)multisampleFramebufferWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1;
+ (struct FramebufferAttributes)resolveAttributesFromFramebufferAttribute:(const struct FramebufferAttributes *)arg1;
@property(nonatomic) _Bool disableDestroyAssertion; // @synthesize disableDestroyAssertion=mDisableDestroyAssertion;
- (void)destroyResourcesInSession:(id)arg1;
- (tvec2_3b141483)resolveFramebufferSize;
- (struct FramebufferAttributes)resolveFramebufferAttributes;
- (id)resolveFramebufferHandleForSession:(id)arg1;
- (_Bool)resolveFramebufferValidForSession:(id)arg1;
- (id)resolveFramebufferContext;
- (_Bool)activateResolveFramebufferInsideSession:(id)arg1;
- (void)bindColorbufferInSession:(id)arg1;
- (_Bool)validForSession:(id)arg1;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)bindInSession:(id)arg1;
- (void)disableSamplingInSession:(id)arg1;
- (id)resolvingFramebuffer;
- (_Bool)p_usingMultisample;
@property(readonly, nonatomic) struct FramebufferAttributes resolveAttributes;
- (void)dealloc;
- (id)initWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLMixinFramebuffer : TSCH3DGLFramebuffer
{
    TSCH3DGLFramebuffer *mOriginal;
}

@property(retain, nonatomic) TSCH3DGLFramebuffer *original; // @synthesize original=mOriginal;
- (void)disableSamplingInSession:(id)arg1;
- (id)GLHandleForSession:(id)arg1;
- (void)discardBuffers;
- (void)discardDepthBuffer;
- (void)discardColorBuffer;
- (_Bool)isProtectedInSession:(id)arg1;
- (void)unprotectInSession:(id)arg1 clearOnFailProtection:(_Bool)arg2;
- (void)protectInSession:(id)arg1 unprotectOnFail:(_Bool)arg2;
- (_Bool)validForSession:(id)arg1;
- (void)destroyResourcesInSession:(id)arg1;
- (void)bindColorbufferInSession:(id)arg1;
- (unsigned long long)estimatedMemroyInBytes;
- (unsigned int)type;
- (tvec2_3b141483)size;
- (id)output;
- (void)wipe:(const tvec4_ac57c72d *)arg1;
- (void)clean;
- (void)clear:(unsigned int)arg1;
- (void)setDepthFunction:(int)arg1;
- (void)setDepthMask:(unsigned char)arg1;
- (void)setClearDepth:(float)arg1;
- (void)setColorMask:(const tvec4_d23a2b6e *)arg1;
- (void)setClearColor:(const tvec4_ac57c72d *)arg1;
- (_Bool)isTexturable;
- (id)context;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)bindInSession:(id)arg1;
- (const struct FramebufferAttributes *)framebufferAttributes;
- (id)description;
- (void)dealloc;
- (id)initWithContext:(id)arg1 size:(const tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSDGLLayerContext : NSObject <TSDGLLayerContext>
{
}

+ (id)layerContext;
- (void)presentRenderbuffer;
- (_Bool)makeCurrentContext;
- (void)teardown;
- (_Bool)createFramebufferFromLayer:(id)arg1;
- (_Bool)isValid;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartRenderBlockBuildImageRenderCycle : TSCH3DChartBuildImageRenderCycle
{
    TSCH3DTileImageSceneRenderPipeline *mTileImagePipeline;
}

- (id)tilePipeline;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DRenderBlockTileImageSceneRenderPipeline : TSCH3DTileImageSceneRenderPipeline
{
}

- (_Bool)run;
- (id)p_tilesWithSetup:(id)arg1;
- (id)p_singleTileWithSetup:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHTracingManager : NSObject
{
    _Bool mTraceLevelSet;
    unsigned int mTraceLevel;
    _Bool mBufferSizeSet;
    unsigned long long mBufferSize;
    TSMTraceBuffer *mBuffer;
    NSURL *mLastTraceFileURL;
    NSString *mTag;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
@property(readonly) NSURL *lastTraceFileURL; // @synthesize lastTraceFileURL=mLastTraceFileURL;
@property(copy) NSString *tag; // @synthesize tag=mTag;
- (void)teardown;
- (void)setup;
@property unsigned long long bufferSize;
@property unsigned int traceLevel;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCHBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetSelectionKnobsPositionsPipeline : TSCH3DSceneRenderPipeline <TSCH3DSceneObjectDelegator, TSCHUnretainedParent>
{
    TSCH3DChartRep *mRep;
    TSCH3DGetSelectionKnobsPositionsPipelineDelegate *mSceneObjectDelegate;
    NSArray *mSelection;
    NSMutableArray *mProjectedPoints;
    float mNormalizedKnobRadius;
}

+ (id)pipelineWithRep:(id)arg1 scene:(id)arg2 selection:(id)arg3 normalizedKnobRadius:(float)arg4;
@property(readonly, nonatomic) NSArray *projectedPoints; // @synthesize projectedPoints=mProjectedPoints;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
- (_Bool)render;
- (void)getSelectionKnobsPositions:(id)arg1;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1 scene:(id)arg2 selection:(id)arg3 normalizedKnobRadius:(float)arg4;
- (Class)labelsMeshRendererClassForLabelsRenderer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetSelectionKnobsPositionsPipelineDelegate : NSObject <TSCHUnretainedParent, TSCH3DSceneDelegate, TSCH3DChartAllSceneObjectDelegate, TSCH3DChartElementSceneObjectGeometryDelegate>
{
    TSCH3DChartRep *mRep;
    NSArray *mSelection;
    NSMutableArray *mProjectedPoints;
    TSCH3DGeometry *mGeometry;
    NSMutableDictionary *mLabelsBoundsForMerging;
    TSCH3DScene *mScene;
    int mCurrentLabelType;
    int mKnobsMode;
}

@property(retain, nonatomic) NSMutableArray *projectedPoints; // @synthesize projectedPoints=mProjectedPoints;
@property(retain, nonatomic) TSCH3DGeometry *geometry; // @synthesize geometry=mGeometry;
- (id)p_selectedSeries;
- (_Bool)p_labelSelectedForType:(int)arg1 alignment:(unsigned long long)arg2 elementIndex:(long long)arg3;
- (_Bool)willSubmitGeometry:(id)arg1;
@property(readonly, nonatomic) _Bool shouldMerge;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute *)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg3;
- (_Bool)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo *)arg2;
- (_Bool)willSubmitLabelType:(int)arg1 boundsIndex:(long long)arg2 alignment:(unsigned long long)arg3 elementIndex:(unsigned long long)arg4 forSceneObject:(id)arg5;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)addLabelBoundsForMerging:(struct CGRect)arg1;
- (void)setOffset:(const tvec3_17f03ce0 *)arg1 labelType:(int)arg2 boundsIndex:(long long)arg3 forSceneObject:(id)arg4;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;
- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (_Bool)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)willRunForScene:(id)arg1 pipeline:(id)arg2;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1 selection:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetSelectionKnobsPositionsPipelineMergeLabelBounds : NSObject
{
    int mLabelType;
    int mKnobsMode;
    NSMutableArray *mLabelsBounds;
}

+ (id)boundsWithLabelType:(int)arg1 knobsMode:(int)arg2;
@property(readonly, nonatomic) int knobsMode; // @synthesize knobsMode=mKnobsMode;
@property(readonly, nonatomic) int labelType; // @synthesize labelType=mLabelType;
- (void)mergeBoundsIntoProjectedPoints:(id)arg1;
- (_Bool)p_hasExtentPointsForBounds:(id)arg1 returningMinPoint:(struct CGPoint *)arg2 maxPoint:(struct CGPoint *)arg3;
- (struct CGPoint)p_maxPoint:(struct CGPoint)arg1 otherPoint:(struct CGPoint)arg2;
- (struct CGPoint)p_minPoint:(struct CGPoint)arg1 otherPoint:(struct CGPoint)arg2;
- (_Bool)p_isHorizontal;
- (void)addBounds:(struct CGRect)arg1;
- (void)addNewBoundsArray;
- (void)dealloc;
- (id)initWithLabelType:(int)arg1 knobsMode:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGetSelectionKnobsPositionsRenderProcessor : TSCH3DTransformGeometryRenderProcessor
{
    NSMutableArray *mProjectedPoints;
    TSCH3DGetSelectionKnobsPositionsPipelineDelegate *mSceneObjectDelegate;
    float mNormalizedKnobRadius;
}

@property(nonatomic) float normalizedKnobRadius; // @synthesize normalizedKnobRadius=mNormalizedKnobRadius;
@property(retain, nonatomic) NSMutableArray *projectedPoints; // @synthesize projectedPoints=mProjectedPoints;
@property(retain, nonatomic) TSCH3DGetSelectionKnobsPositionsPipelineDelegate *sceneObjectDelegate; // @synthesize sceneObjectDelegate=mSceneObjectDelegate;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (tmat4x4_3074befe)modelViewNormalizedProjection;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DLabelBitmapContextInfo : NSObject <NSCopying>
{
    _Bool mIsPrinting;
    _Bool mIsPDF;
    _Bool mHasSuppressedBackgrounds;
}

+ (id)contextInfoWithIsPrinting:(_Bool)arg1 isPDF:(_Bool)arg2 hasSuppressedBackgrounds:(_Bool)arg3;
+ (id)context;
+ (void)setIsPrinting:(_Bool)arg1 isPDF:(_Bool)arg2 hasSuppressedBackgrounds:(_Bool)arg3 forScene:(id)arg4;
+ (id)contextInfoForScene:(id)arg1;
@property(readonly, nonatomic) _Bool isPDF; // @synthesize isPDF=mIsPDF;
@property(readonly, nonatomic) _Bool isPrinting; // @synthesize isPrinting=mIsPrinting;
@property(readonly, nonatomic) _Bool hasSuppressedBackgrounds; // @synthesize hasSuppressedBackgrounds=mHasSuppressedBackgrounds;
- (void)setTSDCGContextInfoForCGContext:(struct CGContext *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithIsPrinting:(_Bool)arg1 isPDF:(_Bool)arg2 hasSuppressedBackgrounds:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSeriesNameLabelsSceneObject : TSCH3DChartLabelsContainingSceneObject
{
}

- (id)selectionPathForInfo:(id)arg1 scene:(id)arg2 pickedPoint:(id)arg3;
- (int)knobsModeForLabelType:(int)arg1 scene:(id)arg2;
- (id)p_axisLabelsFromScene:(id)arg1;
- (void)dispatchElementLabelHandler:(CDUnknownBlockType)arg1;
- (void)renderAnnotatedLabels:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartStyleState : TSCHPropertyValueStorageContainer <NSCopying>
{
}

- (id)semanticUsagesToParagraphStyleMap;
- (id)semanticTagToStyleMap;
- (id)stateByReducingSeriesPrivateStyles;
- (id)stateByExpandingSeriesStylesForSeriesCount:(unsigned long long)arg1;
- (_Bool)otherStateIsEquivalent:(id)arg1;
- (_Bool)otherStateIsEquivalent:(id)arg1 ignoringSeriesThemeStyles:(_Bool)arg2;
- (void)replaceStyle:(id)arg1 withStyle:(id)arg2;
- (_Bool)paragraphStyleIndexesAreValid;
- (id)usesOfParagraphStyleProperties;
- (id)allStyles;
@property(copy, nonatomic) NSMutableArray *paragraphStyles;
@property(copy, nonatomic) NSMutableArray *seriesPrivateStyles;
@property(copy, nonatomic) NSMutableArray *seriesThemeStyles;
@property(copy, nonatomic) NSMutableArray *categoryAxisStyles;
@property(copy, nonatomic) NSMutableArray *valueAxisStyles;
@property(retain, nonatomic) TSCHLegendStyle *legendStyle;
@property(retain, nonatomic) TSCHChartStyle *chartStyle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)checkParagraphStyleIndicies;
- (id)styleNetworkDescription;
- (id)p_locationOfStyleInNetwork:(id)arg1;
- (id)stateByOptimizingParagraphStyleTableWithStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)p_replaceReferencedStylesInMap:(id)arg1 withMapper:(id)arg2;
- (id)stateByOptimizingParagraphStyleTableWithStylesheet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHStyleAndPropertyPair : NSObject <NSCopying>
{
    TSSStyle *mStyle;
    int mProperty;
}

+ (id)pairWithStyle:(id)arg1 property:(int)arg2;
- (id)description;
- (int)property;
- (id)style;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStyle:(id)arg1 property:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHSemanticTagAndPropertyPair : NSObject <NSCopying>
{
    TSCHStyleSemanticTag *mSemanticTag;
    int mProperty;
}

+ (id)pairWithSemanticTag:(id)arg1 property:(int)arg2;
- (id)description;
- (int)property;
- (id)semanticTag;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSemanticTag:(id)arg1 property:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHKnobTracker : TSDKnobTracker
{
    _Bool mIsDirectManipulation;
}

@property(nonatomic) _Bool isDirectManipulation; // @synthesize isDirectManipulation=mIsDirectManipulation;
- (void)resetCurrentPositionToKnob;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLVersion : NSObject
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLES2Version : TSCH3DGLVersion
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)version;
+ (id)_singletonAlloc;
- (id)additionalConclusionsForShaderType:(struct TSCH3DShaderType)arg1;
- (id)additionalGlobalsForShaderType:(struct TSCH3DShaderType)arg1;
- (id)vertexVaryingQualifierForShaderType:(struct TSCH3DShaderType)arg1;
- (id)vertexAttributeQualifierForShaderType:(struct TSCH3DShaderType)arg1;
- (void)addCompatibilityFunctionsForShaderProgram:(id)arg1;
- (id)preprocessorDefinitions;
- (_Bool)deprecatesLuminanceAlpha;
- (_Bool)supportsClipDistances;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DOpenGL3_2Version : TSCH3DGLVersion
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)version;
+ (id)_singletonAlloc;
- (id)additionalConclusionsForShaderType:(struct TSCH3DShaderType)arg1;
- (id)additionalGlobalsForShaderType:(struct TSCH3DShaderType)arg1;
- (id)vertexVaryingQualifierForShaderType:(struct TSCH3DShaderType)arg1;
- (id)vertexAttributeQualifierForShaderType:(struct TSCH3DShaderType)arg1;
- (void)addCompatibilityFunctionsForShaderProgram:(id)arg1;
- (id)preprocessorDefinitions;
- (_Bool)deprecatesLuminanceAlpha;
- (_Bool)supportsClipDistances;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGaussianBlurShaderEffect : TSCH3DShaderEffect
{
    TSCH3DShaderVariable *mSamplingTexcoords;
}

+ (void)setTapUnit:(tvec2_84d5962d)arg1 effectsStates:(id)arg2;
+ (id)variableTapUnit;
+ (id)variableAccum;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)variableTapUnit;
- (id)variableAccum;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferGaussianBlurPipeline : TSCH3DFramebufferCopyPipeline
{
    tvec2_84d5962d mTapUnit;
}

+ (id)effectsArray;
@property(nonatomic) tvec2_84d5962d tapUnit; // @synthesize tapUnit=mTapUnit;
- (id).cxx_construct;
- (void)updateShaderEffectsStates;
- (id)initWithProcessor:(id)arg1 session:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DFramebufferGaussianBlurAndBlendPipeline : TSCH3DFramebufferGaussianBlurPipeline
{
    float mBlendFactor;
    TSCH3DGLFramebuffer *mBlendTexture;
}

+ (id)effectsArray;
@property(retain, nonatomic) TSCH3DGLFramebuffer *blendTexture; // @synthesize blendTexture=mBlendTexture;
@property(nonatomic) float blendFactor; // @synthesize blendFactor=mBlendFactor;
- (void)updateShaderEffectsStates;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DSimpleBlurShadowsRenderer : NSObject <TSCH3DShadowsRenderer>
{
    TSCH3DFBOResource *mShadowsFBOResource;
    TSCH3DFBOResource *mBlurFBOResource;
    tvec2_3b141483 mShadowsSize;
    NSArray *mBlurParametersArray;
}

- (id).cxx_construct;
- (float)blurSlackForQuality:(float)arg1;
- (id)shadowsFBOForContext:(id)arg1;
- (void)invalidate;
- (void)unprotectShadowInSession:(id)arg1;
- (void)protectShadowForQuality:(float)arg1 pipeline:(id)arg2 renderBlock:(CDUnknownBlockType)arg3;
- (void)blurParametersFromQuality:(float)arg1 shadowSize:(long long *)arg2 numPasses:(long long *)arg3 kernelScale:(float *)arg4;
- (void)dealloc;
- (id)initWithBlurParametersArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartShadowsBlurParameters : NSObject
{
    float mQuality;
    long long mNumPasses;
    long long mShadowSize;
    float mKernelScale;
}

+ (id)paramsWithQuality:(float)arg1 numPasses:(long long)arg2 shadowSize:(long long)arg3 kernelScale:(float)arg4;
@property(nonatomic) float kernelScale; // @synthesize kernelScale=mKernelScale;
@property(nonatomic) long long shadowSize; // @synthesize shadowSize=mShadowSize;
@property(nonatomic) long long numPasses; // @synthesize numPasses=mNumPasses;
@property(nonatomic) float quality; // @synthesize quality=mQuality;
- (id)initWithQuality:(float)arg1 numPasses:(long long)arg2 shadowSize:(long long)arg3 kernelScale:(float)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPyramidBlurFBOResource : TSCH3DFBOResource
{
    tvec2_3b141483 mSize;
}

+ (id)pyramidResourceWithFBOSize:(tvec2_3b141483)arg1;
@property(readonly, nonatomic) tvec2_3b141483 size; // @synthesize size=mSize;
- (id).cxx_construct;
- (id)initWithFBOSize:(tvec2_3b141483)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPyramidLevelResources : NSObject
{
    TSUPair *mResourcePair;
}

+ (id)resourcesWithFBOSize:(tvec2_3b141483)arg1;
@property(readonly, nonatomic) tvec2_3b141483 size;
@property(readonly, nonatomic) TSCH3DPyramidBlurFBOResource *temporaryResource;
@property(readonly, nonatomic) TSCH3DPyramidBlurFBOResource *finalResource;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithFBOSize:(tvec2_3b141483)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPyramidBlurShadowsRenderer : NSObject <TSCH3DShadowsRenderer>
{
    NSArray *mPyramidResources;
    TSCH3DPyramidBlurFBOResource *mFinalShadowResource;
    tvec2_3b141483 mInitialSize;
    int mRequestedSize;
    float mTargetRadiusFactor;
}

- (id).cxx_construct;
- (id)shadowsFBOForContext:(id)arg1;
- (float)blurSlackForQuality:(float)arg1;
- (void)invalidate;
- (void)unprotectShadowInSession:(id)arg1;
- (void)protectShadowForQuality:(float)arg1 pipeline:(id)arg2 renderBlock:(CDUnknownBlockType)arg3;
- (id)p_allResources;
- (void)p_setupResourcesForSize:(tvec2_3b141483)arg1;
- (void)dealloc;
- (id)initWithSize:(int)arg1 targetRadiusFactor:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTextureBlendShaderEffect : TSCH3DShaderEffect
{
}

+ (void)setBlendFactor:(float)arg1 unit:(long long)arg2 effectsStates:(id)arg3;
+ (id)variableBlendTexture;
+ (id)variableBlendFactor;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)effect;
+ (id)_singletonAlloc;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (id)variableBlendTexture;
- (id)variableBlendFactor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAnimationElementInterpolationShaderEffect : TSCH3DShaderEffect
{
    NSString *mFunctionName;
}

+ (void)setInterpolationRange:(box_e9f23397)arg1 effectsStates:(id)arg2;
+ (id)effectWithInterpolationFunctionName:(id)arg1;
+ (id)variableElementInterpolationRange;
@property(readonly, nonatomic) NSString *functionName; // @synthesize functionName=mFunctionName;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithInterpolationFunctionName:(id)arg1;
- (id)variableElementInterpolationRange;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPrimeRenderCachesPipeline : TSCH3DSceneRenderPipeline
{
}

+ (id)pipelineWithScene:(id)arg1 renderPipeline:(id)arg2;
- (_Bool)run;
- (void)primeRenderCaches:(id)arg1;
- (id)initWithScene:(id)arg1 renderPipeline:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartPerElementAlphaBlendAnimationClip : TSCH3DChartAlphaBlendAnimationClip
{
    box_e9f23397 mAlphaBlendRange;
}

@property(nonatomic) box_e9f23397 alphaBlendRange; // @synthesize alphaBlendRange=mAlphaBlendRange;
- (id).cxx_construct;
- (float)protected_elementAlphaForContext:(id)arg1;
- (void)protected_addShaderEffect:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DPerElementAlphaBlendShaderEffect : TSCH3DShaderEffect
{
    NSString *mFunctionName;
}

+ (void)setInterpolationRange:(box_e9f23397)arg1 effectsStates:(id)arg2;
+ (id)effectWithInterpolationFunctionName:(id)arg1;
+ (id)variablePerElementAlphaBlendValue;
+ (id)variablePerElementAlphaBlendInterpolationRange;
@property(readonly, nonatomic) NSString *functionName; // @synthesize functionName=mFunctionName;
- (void)uploadData:(id)arg1 effectsStates:(id)arg2;
- (void)inject:(id)arg1;
- (void)addVariables:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithInterpolationFunctionName:(id)arg1;
- (id)variablePerElementAlphaBlendValue;
- (id)variablePerElementAlphaBlendInterpolationRange;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSilhouetteEdgeCollectProcessor : TSCH3DRetargetRenderProcessor
{
    struct EdgeDetectionParameters mEdgeDetectionParameters;
    TSCH3DResource *mVertices;
    TSCH3Dvec3DataBuffer *mEdges;
}

@property(readonly, nonatomic) TSCH3Dvec3DataBuffer *edges; // @synthesize edges=mEdges;
@property(retain, nonatomic) TSCH3DResource *vertices; // @synthesize vertices=mVertices;
- (id).cxx_construct;
- (void)submit:(const struct PrimitiveInfo *)arg1;
- (long long)attribute:(id)arg1 resource:(id)arg2 specs:(const struct AttributeSpecs *)arg3;
- (id)matrix;
- (void)dealloc;
- (id)initWithEdgeDetectionParameters:(const struct EdgeDetectionParameters *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSelectedElementHighlightSceneObjectProperties : NSObject
{
    TSCH3Dvec3DataBuffer *edgeVertices;
    TSCH3DPrefilteredLineRenderer *mRenderer;
    unsigned long long mSelectedSeriesIndex;
    tvec4_ac57c72d mColor;
    TSCH3Dvec3DataBuffer *mEdgeVertices;
}

@property(nonatomic) tvec4_ac57c72d color; // @synthesize color=mColor;
@property(nonatomic) unsigned long long selectedSeriesIndex; // @synthesize selectedSeriesIndex=mSelectedSeriesIndex;
@property(retain, nonatomic) TSCH3Dvec3DataBuffer *edgeVertices; // @synthesize edgeVertices=mEdgeVertices;
- (id).cxx_construct;
@property(readonly, nonatomic) TSCH3DPrefilteredLineRenderer *renderer;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSelectedElementHighlightSceneObject : TSCH3DSceneObject <TSCH3DSceneObjectDelegator>
{
}

+ (void)setHighlightColor:(id)arg1 scene:(id)arg2;
+ (void)setSelectedSeriesIndex:(unsigned long long)arg1 scene:(id)arg2;
+ (id)propertiesForScene:(id)arg1;
- (id)makeDelegateWithSceneObject:(id)arg1 scene:(id)arg2;
- (id)makeDelegateWithScene:(id)arg1;
- (void)getBounds:(id)arg1;
- (void)render:(id)arg1;
- (id)p_calculateEdgeVerticesForPipeline:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartSelectedElementSceneObjectDelegate : NSObject <TSCH3DChartAllElementSceneObjectDelegate>
{
    unsigned long long mSelectedSeriesIndex;
}

- (_Bool)willSubmitElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willRenderElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didTransformElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (struct ElementRenderPass)renderPassForElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (_Bool)willProcessElement:(const struct RenderElementInfo *)arg1 sceneObject:(id)arg2;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (_Bool)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const tvec2_3b141483 *)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4;
- (_Bool)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3;
- (id)initWithSelectedSeriesIndex:(unsigned long long)arg1;
- (struct ElementRenderPass)renderPassForSceneObject:(id)arg1;
- (_Bool)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2;
- (void)didEndProcessingSceneObject:(id)arg1;
- (_Bool)willBeginProcessingSceneObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLESLayer : CAEAGLLayer <TSCH3DGLLayer>
{
    TSCH3DLayerCacheLogic *mCacheLogic;
}

- (Class)layerDelegateClass;
- (void)setFrame:(struct CGRect)arg1;
- (void)setContentsScale:(double)arg1;
- (double)contentsScale;
- (void)presentLayerWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)willDestroyFramebuffer:(id)arg1 session:(id)arg2;
- (id)framebufferFromContext:(id)arg1 attributes:(const struct FramebufferAttributes *)arg2;
- (id)cacheLogic;
- (void)dealloc;
- (id)initWithLayerCacheLogicClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DTSDGLESLayer : TSDGLLayer <TSCH3DGLLayer>
{
    TSCH3DLayerCacheLogic *mCacheLogic;
}

- (Class)layerDelegateClass;
- (void)setFrame:(struct CGRect)arg1;
- (void)setContentsScale:(double)arg1;
- (double)contentsScale;
- (void)presentLayerWithPresenterInfo:(const struct PresenterInfo *)arg1;
- (void)willDestroyFramebuffer:(id)arg1 session:(id)arg2;
- (id)framebufferFromContext:(id)arg1 attributes:(const struct FramebufferAttributes *)arg2;
- (id)cacheLogic;
- (void)dealloc;
- (id)initWithLayerCacheLogicClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLESContext : TSCH3DGLContext
{
    EAGLContext *mContext;
}

+ (_Bool)isCurrentContextValid;
+ (void)clearCurrentContext;
- (id)capabilitiesForExtensions:(id)arg1;
- (id)extensionsForCurrentVirtualScreen;
- (void)setVirtualScreen:(int)arg1;
- (int)virtualScreen;
- (void)restoreEAGLContext:(id)arg1;
- (id)bindReturningPreviousContext;
- (_Bool)isBound;
- (void)present;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLESEAGLLayerBufferStorage : TSCH3DRenderBufferStorage
{
    CAEAGLLayer *mLayer;
    tvec2_3b141483 mSize;
}

+ (id)storageWithLayer:(id)arg1;
- (id).cxx_construct;
- (void)allocateStorageWithFramebufferAttributes:(const struct FramebufferAttributes *)arg1 size:(tvec2_3b141483 *)arg2 internalFormat:(unsigned int)arg3;
- (void)updateSize;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DGLESLayerFBO : TSCH3DGLFBO
{
    _Bool mDestroyed;
    _Bool mProtected;
}

- (void)unprotectInSession:(id)arg1 clearOnFailProtection:(_Bool)arg2;
- (void)bindColorbufferInSession:(id)arg1;
- (void)destroyResourcesInSession:(id)arg1;
- (_Bool)activateInsideSession:(id)arg1;
- (_Bool)validForSession:(id)arg1;
- (void)dealloc;
- (id)initFromContext:(id)arg1 size:(tvec2_3b141483 *)arg2 attributes:(const struct FramebufferAttributes *)arg3 colorAllocator:(id)arg4 depthAllocator:(id)arg5 resource:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepInterpolations : NSObject
{
    CAMediaTimingFunction *mOverallTimingFunction;
    CAMediaTimingFunction *mIndividualTimingFunction;
}

+ (id)interpolationsWithOverallTimingFunction:(id)arg1 individualTimingFunction:(id)arg2;
@property(readonly, nonatomic) CAMediaTimingFunction *individual; // @synthesize individual=mIndividualTimingFunction;
@property(readonly, nonatomic) CAMediaTimingFunction *overall; // @synthesize overall=mOverallTimingFunction;
- (void)dealloc;
- (id)initWithOverallTimingFunction:(id)arg1 individualTimingFunction:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepAnimationDictionaryEntry : NSObject
{
    TSCHMultiDataLayerAnimationInfo *mAnimationInfo;
    NSMutableArray *mAnimations;
}

+ (id)entry;
- (id)animation;
- (void)addAnimation:(id)arg1 animationInfo:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepAnimationDictionary : NSObject
{
    TSURetainedPointerKeyDictionary *mEntries;
}

+ (id)dictionary;
- (void)addEntriesFromAnimationDictionary:(id)arg1 beginTime:(double)arg2 duration:(double)arg3 interpolations:(id)arg4;
- (id)animationDictionaryForBuildEngine;
- (id)nonretainedValueForObject:(id)arg1;
- (void)addAnimation:(id)arg1 animationInfo:(id)arg2 forLayer:(id)arg3;
- (id)entryForLayer:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepMultiDataBuildAnimatedLayers : NSObject
{
    CALayer *legendLayer;
    CALayer *backgroundLayer;
    CALayer *dataSetNameLayer;
    NSArray *elementLayers;
}

+ (id)animatedLayers;
@property(copy, nonatomic) NSArray *elementLayers; // @synthesize elementLayers;
@property(retain, nonatomic) CALayer *dataSetNameLayer; // @synthesize dataSetNameLayer;
@property(retain, nonatomic) CALayer *backgroundLayer; // @synthesize backgroundLayer;
@property(retain, nonatomic) CALayer *legendLayer; // @synthesize legendLayer;
- (id)layersAlreadyHaveProperTransforms;
- (id)layersRequiringGeometryTransformsBackgroundOnly:(_Bool)arg1;
- (id)elementFadingLayers;
- (id)allBackgroundFadingLayers;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepMultiDataBuildStages : NSObject <TSCHUnretainedParent>
{
    TSCHMultiDataChartRep *mRep;
    struct _NSRange mStages;
    double mTotalDuration;
    double mDuration;
    unsigned long long mCurrentStage;
}

+ (id)buildStagesWithRep:(id)arg1 stages:(struct _NSRange)arg2 totalDuration:(double)arg3;
+ (unsigned long long)dataSetIndexForRep:(id)arg1 buildStage:(unsigned long long)arg2;
+ (unsigned long long)numberOfFadingBuildStages;
@property(readonly, nonatomic) double duration; // @synthesize duration=mDuration;
@property(readonly, nonatomic) unsigned long long currentStage; // @synthesize currentStage=mCurrentStage;
- (id).cxx_construct;
- (_Bool)hasStage;
- (void)advanceStage;
- (unsigned long long)dataSetIndexForStage:(unsigned long long)arg1;
- (_Bool)isFadingInLayers;
- (_Bool)isLastStageBackgroundOnly;
- (_Bool)isBackgroundOnly;
- (_Bool)isBackgroundOnlyStage:(unsigned long long)arg1;
- (id)chartLayout;
- (void)setupLayoutDataSetIndexForNextStage;
- (void)setupLayoutDataSetIndexForCurrentStage;
- (void)clearParent;
- (void)dealloc;
- (id)initWithRep:(id)arg1 stages:(struct _NSRange)arg2 totalDuration:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepElementIndex : NSObject <NSCopying>
{
    unsigned long long mSeriesIndex;
    unsigned long long mValueIndex;
}

+ (id)repElementIndexWithSeriesIndex:(unsigned long long)arg1 valueIndex:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long valueIndex; // @synthesize valueIndex=mValueIndex;
@property(readonly, nonatomic) unsigned long long seriesIndex; // @synthesize seriesIndex=mSeriesIndex;
- (id)valueIndexSet;
- (id)seriesIndexSet;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSeriesIndex:(unsigned long long)arg1 valueIndex:(unsigned long long)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRepElement : NSObject
{
    CALayer<TSCHMultiDataElementShapeLayer> *mElementLayer;
    TSCHMultiDataAnimatingFrameLayer *mLabelLayer;
    _Bool mElementUndefined;
}

+ (id)elementWithElementLayer:(id)arg1;
@property(nonatomic) _Bool elementUndefined; // @synthesize elementUndefined=mElementUndefined;
@property(readonly, nonatomic) TSCHMultiDataAnimatingFrameLayer *labelLayer; // @synthesize labelLayer=mLabelLayer;
@property(readonly, nonatomic) CALayer<TSCHMultiDataElementShapeLayer> *elementLayer; // @synthesize elementLayer=mElementLayer;
- (void)addAnimationForKey:(id)arg1 values:(id)arg2 keyTimes:(id)arg3 toAnimationInfo:(id)arg4;
- (void)setOpacity:(double)arg1;
- (void)setContentsScale:(double)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithElementLayer:(id)arg1;
- (id)init;
- (id)initWithLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataChartRep : TSCHChartRep <TSCHChartMultiDataRendering>
{
    CALayer *mRootLayer;
    CALayer *mElementsContainerLayer;
    _Bool mRenderingBackgroundLayer;
    _Bool mRenderingElementShapeLayer;
    _Bool mRenderingElementLabelsLayer;
    _Bool mRenderingDataSetNameLayer;
    _Bool mAnimatedLayersNeedUpdate;
    _Bool mShouldAnimateLabelsQuickly;
    _Bool mIsAnimatingForBuilds;
    unsigned long long mElementLayersMultiDataSetIndex;
    int mGridDirection;
    NSMutableDictionary *mIndexedElements;
    TSCHMultiDataChartRepElementIndex *mCurrentRepElementIndex;
    CALayer *mDataSetNameLayer;
}

@property(copy, nonatomic) TSCHMultiDataChartRepElementIndex *currentRepElementIndex; // @synthesize currentRepElementIndex=mCurrentRepElementIndex;
- (id)textureForContext:(id)arg1;
- (unsigned long long)p_dataSetIndexForBuildStage:(unsigned long long)arg1;
- (_Bool)planeIsVisible:(int)arg1;
- (_Bool)buildShouldUseRenderer:(id)arg1;
- (id)interpolations;
- (void)animationDidEndForChunkStage:(long long)arg1;
- (id)createAnimatedLayersDictionaryWithScale:(double)arg1 forBuildStage:(unsigned long long)arg2 buildIn:(_Bool)arg3 duration:(double)arg4 returningAnimatedLayers:(id *)arg5;
- (id)p_buildEngineAnimationDictionaryForAnimationInfosArray:(id)arg1 duration:(double)arg2;
- (id)p_buildEngineAnimationDictionaryForAnimationInfos:(id)arg1;
- (id)p_animationDictionaryForAnimationInfos:(id)arg1;
- (id)p_createAnimationInfosArrayWithBuildStages:(id)arg1 returningAnimatedLayers:(id *)arg2;
- (void)p_useNewTemporaryLayersWithAnimationDuration:(double)arg1 inBlock:(CDUnknownBlockType)arg2;
- (id)p_createAnimationInfosWithBuildStages:(id)arg1 animatedLayers:(id)arg2;
- (id)p_fadeAnimationInfosForLayers:(id)arg1 duration:(double)arg2;
- (id)p_createBackgroundLayer;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)p_dataSetNameLayoutItem;
- (void)processChanges:(id)arg1;
- (void)viewScaleDidChange;
- (void)updateFromLayout;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (_Bool)shouldUseChartAreaRectForEditMenuTargetRectMinY;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)p_updateAnimatedLayers;
- (void)p_createElementLayersIfNecessary;
- (void)p_addElementLayersToLayerTreeIfNecessary;
- (void)p_applyAnimationsFromAnimationInfos:(id)arg1;
- (id)p_updateAnimatedLayerLayoutsWithAnimationDuration:(double)arg1;
- (_Bool)p_shouldAnimate;
- (_Bool)shouldPostCommandForChangingDataSetIndex;
@property(readonly, nonatomic) _Bool shouldDisableMultiDataControls;
- (void)updateElementLabelLayerLayoutForCurrentRepElementIndexAnimationInfo:(id)arg1;
- (void)p_addAnimationsForLabelLayer:(id)arg1 contents:(id)arg2 frame:(struct CGRect)arg3 animationInfo:(id)arg4;
- (void)updateElementFrame:(struct CGRect)arg1 forElementLayer:(id)arg2 series:(id)arg3 addingAnimationsToAnimationInfo:(id)arg4;
- (void)p_updateDataSetNameLayerWithAnimationInfo:(id)arg1;
- (id)p_labelsAnimationKeyTimes;
- (id)p_createDataSetNameLayer;
- (struct CGRect)p_dataSetNameNaturalSpaceRect;
- (void)updateElementLayerLayoutForCurrentRepElementIndexAnimationInfo:(id)arg1;
- (unsigned long long)currentGroupIndex;
- (unsigned long long)currentSeriesIndex;
- (_Bool)hasCurrentRepElementIndex;
- (struct CGRect)currentRepElementBoundsInNaturalSpace;
- (void)p_updateElementLayerFills;
- (void)p_createElementLayerForSeriesIndex:(unsigned long long)arg1 valueIndex:(unsigned long long)arg2 removingReusableLayerFromPreviousElements:(id)arg3;
- (id)p_createChartBitmapLayerForFrame:(struct CGRect)arg1 originOffset:(struct CGPoint)arg2 returningAdjustedFrame:(struct CGRect *)arg3;
- (struct CGImage *)newChartImageForFrame:(struct CGRect)arg1 originOffset:(struct CGPoint)arg2 returningAdjustedFrame:(struct CGRect *)arg3;
- (struct CGRect)adjustedChartImageFrameFromFrame:(struct CGRect)arg1;
- (void)updateAppearanceForElementLayer:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)createMultiDataElementShapeLayerForSeriesIndex:(unsigned long long)arg1;
- (_Bool)canDrawInParallel;
- (_Bool)shouldUseRenderer:(id)arg1;
- (_Bool)p_isDataSetNameRenderer:(id)arg1;
- (_Bool)renderLabels;
- (_Bool)renderElements;
- (id)renderValueIndexSetForSeries:(unsigned long long)arg1 finalElements:(_Bool)arg2 currentChunk:(long long)arg3;
- (id)renderSeriesIndexSetForFinalElements:(_Bool)arg1 currentChunk:(long long)arg2;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)endCanvasTextEditing;
- (_Bool)beginCanvasTextEditingForSelectionPath:(id)arg1;
- (void)didUpdateLayer:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)newDataSetNameLayer;
- (_Bool)overlayLabelsForSeriesIndex:(unsigned long long)arg1;
- (_Bool)shouldUseLegendLayerForLayerBasedRep;
- (void)clearDragHighlightAndPreviewState;
- (void)showHitFeedbackForSelectionPath:(id)arg1;
- (id)imageFromFill:(id)arg1 forResolutionWithBounds:(struct CGRect)arg2 toRepElementTransform:(struct CGAffineTransform)arg3 skipIntegral:(_Bool)arg4 returningFillFrame:(struct CGRect *)arg5;
- (struct CGRect)convertNaturalRectToRepElement:(struct CGRect)arg1;
- (struct CGAffineTransform)transformToConvertChartLayoutToRepElement;
- (struct CGAffineTransform)transformToConvertNaturalToRepElement;
- (_Bool)needsAnimationForAnimationInfo:(id)arg1;
- (_Bool)frameInUnscaledCanvasNeedsPaddingForShadows;
- (id)p_elementLayers;
- (_Bool)isHorizontalChart;
- (id)p_chartModel;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (_Bool)requireSeparateLabelLayer;

@end

__attribute__((visibility("hidden")))
@interface TSCHPropertyValueStorageContainer : NSObject
{
    id <TSCHStyleActAlike> mChartStyle;
    id <TSCHStyleActAlike> mChartNonStyle;
    id <TSCHStyleActAlike> mLegendStyle;
    id <TSCHStyleActAlike> mLegendNonStyle;
    NSMutableArray *mValueAxisStyles;
    NSMutableArray *mValueAxisNonStyles;
    NSMutableArray *mCategoryAxisStyles;
    NSMutableArray *mCategoryAxisNonStyles;
    NSMutableArray *mSeriesThemeStyles;
    NSMutableArray *mSeriesPrivateStyles;
    NSMutableArray *mSeriesNonStyles;
    NSMutableArray *mParagraphStyles;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
@property(retain, nonatomic, setter=p_setMutableParagraphStyles:) NSMutableArray *p_mutableParagraphStyles; // @synthesize p_mutableParagraphStyles=mParagraphStyles;
@property(retain, nonatomic, setter=p_setMutableSeriesNonStyles:) NSMutableArray *p_mutableSeriesNonStyles; // @synthesize p_mutableSeriesNonStyles=mSeriesNonStyles;
@property(retain, nonatomic, setter=p_setMutableSeriesPrivateStyles:) NSMutableArray *p_mutableSeriesPrivateStyles; // @synthesize p_mutableSeriesPrivateStyles=mSeriesPrivateStyles;
@property(retain, nonatomic, setter=p_setMutableSeriesThemeStyles:) NSMutableArray *p_mutableSeriesThemeStyles; // @synthesize p_mutableSeriesThemeStyles=mSeriesThemeStyles;
@property(retain, nonatomic, setter=p_setMutableCategoryAxisNonStyles:) NSMutableArray *p_mutableCategoryAxisNonStyles; // @synthesize p_mutableCategoryAxisNonStyles=mCategoryAxisNonStyles;
@property(retain, nonatomic, setter=p_setMutableCategoryAxisStyles:) NSMutableArray *p_mutableCategoryAxisStyles; // @synthesize p_mutableCategoryAxisStyles=mCategoryAxisStyles;
@property(retain, nonatomic, setter=p_setMutableValueAxisNonStyles:) NSMutableArray *p_mutableValueAxisNonStyles; // @synthesize p_mutableValueAxisNonStyles=mValueAxisNonStyles;
@property(retain, nonatomic, setter=p_setMutableValueAxisStyles:) NSMutableArray *p_mutableValueAxisStyles; // @synthesize p_mutableValueAxisStyles=mValueAxisStyles;
@property(retain, nonatomic, setter=p_setLegendNonStyle:) id <TSCHStyleActAlike> p_legendNonStyle; // @synthesize p_legendNonStyle=mLegendNonStyle;
@property(retain, nonatomic, setter=p_setLegendStyle:) id <TSCHStyleActAlike> p_legendStyle; // @synthesize p_legendStyle=mLegendStyle;
@property(retain, nonatomic, setter=p_setChartNonStyle:) id <TSCHStyleActAlike> p_chartNonStyle; // @synthesize p_chartNonStyle=mChartNonStyle;
@property(retain, nonatomic, setter=p_setChartStyle:) id <TSCHStyleActAlike> p_chartStyle; // @synthesize p_chartStyle=mChartStyle;
- (void)saveToArchive:(struct PropertyValueStorageContainerArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct PropertyValueStorageContainerArchive *)arg1 unarchiver:(id)arg2;
@property(copy, nonatomic, setter=p_setParagraphStyles:) NSArray *p_paragraphStyles;
@property(copy, nonatomic, setter=p_setSeriesNonStyles:) NSArray *p_seriesNonStyles;
@property(copy, nonatomic, setter=p_setSeriesPrivateStyles:) NSArray *p_seriesPrivateStyles;
@property(copy, nonatomic, setter=p_setSeriesThemeStyles:) NSArray *p_seriesThemeStyles;
@property(copy, nonatomic, setter=p_setCategoryAxisNonStyles:) NSArray *p_categoryAxisNonStyles;
@property(copy, nonatomic, setter=p_setCategoryAxisStyles:) NSArray *p_categoryAxisStyles;
@property(copy, nonatomic, setter=p_setValueAxisNonStyles:) NSArray *p_valueAxisNonStyles;
@property(copy, nonatomic, setter=p_setValueAxisStyles:) NSArray *p_valueAxisStyles;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSeriesGenericPropertyMap : TSSPropertyMap
{
}

+ (void)savePropertyMap:(id)arg1 toArchive:(struct ChartSeriesGenericPropertyMapArchive *)arg2 archiver:(id)arg3;
+ (id)imageFillProperties;
+ (id)properties;
- (void)saveToArchive:(struct ChartSeriesGenericPropertyMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ChartSeriesGenericPropertyMapArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSCHStylePasteboardData : TSSStyle
{
    TSCHPropertyValueStorageContainer *mStyleNetwork;
    _Bool mEntireChart;
    TSWPParagraphStyle *mInteropParagraphStyle;
    TSWPShapeStyle *mInteropShapeStyle;
}

+ (id)properties;
@property(nonatomic) _Bool entireChart; // @synthesize entireChart=mEntireChart;
@property(retain, nonatomic) TSWPShapeStyle *interopShapeStyle; // @synthesize interopShapeStyle=mInteropShapeStyle;
@property(retain, nonatomic) TSWPParagraphStyle *interopParagraphStyle; // @synthesize interopParagraphStyle=mInteropParagraphStyle;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)chartStyleStateWithMapper:(id)arg1;
- (id)pasteboardDescription;
- (id)allStyles;
@property(copy, nonatomic) NSArray *paragraphStyles;
@property(copy, nonatomic) NSArray *seriesStyles;
@property(copy, nonatomic) NSArray *categoryAxisStyles;
@property(copy, nonatomic) NSArray *valueAxisStyles;
@property(retain, nonatomic) TSCHLegendStyle *legendStyle;
@property(retain, nonatomic) TSCHChartStyle *chartStyle;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataLayerAnimationValues : NSObject
{
    CALayer *mLayer;
    NSString *mKey;
    NSArray *mValues;
    NSArray *mKeyTimes;
    _Bool mNeedPresentationLayerValues;
}

+ (id)animationValuesWithLayer:(id)arg1 key:(id)arg2 values:(id)arg3 keyTimes:(id)arg4 needPresentationLayerValues:(_Bool)arg5;
+ (id)animationValuesWithLayer:(id)arg1 key:(id)arg2 values:(id)arg3;
+ (id)animationValuesWithLayer:(id)arg1 key:(id)arg2 values:(id)arg3 keyTimes:(id)arg4;
@property(readonly, nonatomic) _Bool needPresentationLayerValues; // @synthesize needPresentationLayerValues=mNeedPresentationLayerValues;
@property(readonly, nonatomic) NSArray *keyTimes; // @synthesize keyTimes=mKeyTimes;
@property(readonly, nonatomic) NSArray *values; // @synthesize values=mValues;
@property(readonly, nonatomic) NSString *key; // @synthesize key=mKey;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=mLayer;
- (id)description;
- (void)dealloc;
- (id)initWithLayer:(id)arg1 key:(id)arg2 values:(id)arg3 keyTimes:(id)arg4 needPresentationLayerValues:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataLayerAnimationInfo : NSObject <NSCopying>
{
    _Bool mShouldAnimate;
    _Bool mAboveIntercept;
    _Bool mCrossesIntercept;
    NSArray *mKeyTimes;
    struct CGRect mInterceptRect;
    _Bool mHorizontalChart;
    double mDuration;
    struct CGRect mChartBodyFrameInRepElementSpace;
    NSMutableArray *mLayerAnimationValues;
    CAMediaTimingFunction *mTimingFunction;
    _Bool mElementUndefined;
    _Bool mAtIntercept;
    _Bool mCurrentAtIntercept;
    _Bool mCurrentAboveIntercept;
}

+ (id)animationInfo;
@property(nonatomic) _Bool currentAboveIntercept; // @synthesize currentAboveIntercept=mCurrentAboveIntercept;
@property(nonatomic) _Bool atIntercept; // @synthesize atIntercept=mAtIntercept;
@property(nonatomic) _Bool currentAtIntercept; // @synthesize currentAtIntercept=mCurrentAtIntercept;
@property(nonatomic) _Bool elementUndefined; // @synthesize elementUndefined=mElementUndefined;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=mTimingFunction;
@property(readonly, nonatomic) NSArray *layerAnimationValues; // @synthesize layerAnimationValues=mLayerAnimationValues;
@property(nonatomic) struct CGRect chartBodyFrameInRepElementSpace; // @synthesize chartBodyFrameInRepElementSpace=mChartBodyFrameInRepElementSpace;
@property(nonatomic) double duration; // @synthesize duration=mDuration;
@property(nonatomic) _Bool horizontalChart; // @synthesize horizontalChart=mHorizontalChart;
@property(nonatomic) struct CGRect interceptRect; // @synthesize interceptRect=mInterceptRect;
@property(copy, nonatomic) NSArray *keyTimes; // @synthesize keyTimes=mKeyTimes;
@property(nonatomic) _Bool crossesIntercept; // @synthesize crossesIntercept=mCrossesIntercept;
@property(nonatomic) _Bool aboveIntercept; // @synthesize aboveIntercept=mAboveIntercept;
@property(nonatomic) _Bool shouldAnimate; // @synthesize shouldAnimate=mShouldAnimate;
- (id).cxx_construct;
- (void)addImageContentsAnimationForLayer:(id)arg1 fromImage:(id)arg2 toImage:(id)arg3 keyTimes:(id)arg4;
- (void)addAnimationForLayer:(id)arg1 key:(id)arg2 values:(id)arg3 keyTimes:(id)arg4 needPresentationLayerValues:(_Bool)arg5;
- (void)addAnimationForLayer:(id)arg1 key:(id)arg2 values:(id)arg3 keyTimes:(id)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartSizeAxis : TSCHChartAxis
{
}

- (double)doubleModelToAxisValue:(double)arg1 forSeries:(id)arg2;
- (void)updateGridValueTypeInterceptInAnalysis:(id)arg1;
- (id)computeMinorGridlinesFromMajorGridlinesInAnalysis:(id)arg1;
- (id)computeMajorGridlinesFromMinMaxInAnalysis:(id)arg1;
- (void)adjustMinMaxForDataRangeInAnalysis:(id)arg1;
- (id)userMax;
- (id)userMin;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataScatterChartRep : TSCHMultiDataChartRep
{
}

- (void)updateAppearanceForElementLayer:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)createMultiDataElementShapeLayerForSeriesIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataScatterSeriesRenderingElementShapeLayer : CALayer <TSCHMultiDataElementShapeLayer>
{
}

- (id)currentValueLayer;
- (_Bool)aboveIntercept;
- (void)updateElementFrame:(struct CGRect)arg1 forSeries:(id)arg2 addingAnimationsToAnimationInfo:(id)arg3;
- (void)updateElementFrameToNullForSeries:(id)arg1 addingAnimationsToAnimationInfo:(id)arg2;
- (void)p_addAnimationsForUpdatingImage:(struct CGImage *)arg1 frame:(struct CGRect)arg2 toAnimationInfo:(id)arg3;
- (id)chartRep;
- (void)setFill:(id)arg1 stroke:(id)arg2 withViewScale:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataBarChartRep : TSCHMultiDataChartRep
{
}

- (void)updateAppearanceForElementLayer:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (void)updateElementFrame:(struct CGRect)arg1 forElementLayer:(id)arg2 series:(id)arg3 addingAnimationsToAnimationInfo:(id)arg4;
- (void)updateElementLayerLayoutForCurrentRepElementIndexAnimationInfo:(id)arg1;
- (void)p_calculateInterceptForElementFrame:(struct CGRect)arg1 elementLayer:(id)arg2 animationInfo:(id)arg3;
- (_Bool)p_repElementIsAboveInterceptForSeriesIndex:(unsigned long long)arg1 groupIndex:(unsigned long long)arg2;
- (struct CGRect)currentRepElementBoundsInNaturalSpace;
- (struct CGRect)p_renderingElementFrameForBarElementFrame:(struct CGRect)arg1;
- (struct CGRect)p_clampRenderingElementFrame:(struct CGRect)arg1 barElementFrame:(struct CGRect)arg2;
- (id)p_currentBarSeriesModelCache;
- (unsigned long long)p_currentGroupIndex;
- (unsigned long long)p_currentSeriesIndex;
- (id)p_barElementsRenderer;
- (id)createMultiDataElementShapeLayerForSeriesIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataBarElementShapeLayer : CAShapeLayer <TSCHMultiDataElementShapeLayer, TSCHMultiDataAnimatingPathLayerProtocol>
{
    _Bool mAboveIntercept;
    struct CGPath *mPresentationPath;
}

@property(nonatomic) struct CGPath *presentationPath; // @synthesize presentationPath=mPresentationPath;
- (void)setPath:(struct CGPath *)arg1;
- (id)currentValueLayer;
- (_Bool)aboveIntercept;
- (void)updateElementFrame:(struct CGRect)arg1 forSeries:(id)arg2 addingAnimationsToAnimationInfo:(id)arg3;
- (void)updateElementFrameToNullForSeries:(id)arg1 addingAnimationsToAnimationInfo:(id)arg2;
- (void)p_addAnimationsForUpdatingPath:(struct CGPath *)arg1 toAnimationInfo:(id)arg2;
- (void)setFill:(id)arg1 stroke:(id)arg2 withViewScale:(double)arg3;
- (id)chartRep;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataBarFillElementShapeLayer : TSCHMultiDataAnimatingFrameLayer <TSCHMultiDataElementShapeLayer>
{
    TSCHMultiDataBarElementShapeLayer *mShapeLayer;
    CALayer *mFillLayer;
    TSDFill *mFill;
    _Bool mAboveIntercept;
    TSDFill *_p_fill;
}

@property(retain, nonatomic) TSDFill *p_fill; // @synthesize p_fill=_p_fill;
@property(retain, nonatomic) TSDFill *fill; // @synthesize fill=mFill;
@property(nonatomic) _Bool aboveIntercept; // @synthesize aboveIntercept=mAboveIntercept;
- (void)setDelegate:(id)arg1;
- (void)setContentsScale:(double)arg1;
- (void)updateElementFrame:(struct CGRect)arg1 forSeries:(id)arg2 addingAnimationsToAnimationInfo:(id)arg3;
- (void)updateElementFrameToNullForSeries:(id)arg1 addingAnimationsToAnimationInfo:(id)arg2;
- (void)p_addAnimationsForLayer:(id)arg1 updatingFrame:(struct CGRect)arg2 toAnimationInfo:(id)arg3;
- (void)p_addAnimationsForUpdatingFillLayerFrame:(struct CGRect)arg1 image:(struct CGImage *)arg2 toAnimationInfo:(id)arg3;
- (struct CGRect)p_fillFrameFromFrame:(struct CGRect)arg1 aboveIntercept:(_Bool)arg2 animationInfo:(id)arg3;
- (void)setFill:(id)arg1 stroke:(id)arg2 withViewScale:(double)arg3;
- (_Bool)p_revealsFillLayer;
- (_Bool)p_usesFillLayer;
- (_Bool)p_hasNoFill;
- (_Bool)p_isColorFill;
- (id)p_imageWithFrame:(struct CGRect)arg1;
- (id)chartRep;
- (id)currentValueLayer;
- (void)dealloc;
- (id)initWithLayer:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataBubbleChartRep : TSCHMultiDataChartRep
{
}

- (_Bool)overlayLabelsForSeriesIndex:(unsigned long long)arg1;
- (id)interpolations;
- (void)updateAppearanceForElementLayer:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)createMultiDataElementShapeLayerForSeriesIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHMultiDataBubbleShapeLayer : CATransformLayer <TSCHMultiDataElementShapeLayer>
{
    TSDFill *mFill;
    double mViewScale;
    CAShapeLayer *mMaskLayer;
    CAShapeLayer *mStrokeLayer;
    CALayer *mImageLayer;
    double _viewScale;
}

@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(retain, nonatomic) TSDFill *fill; // @synthesize fill=mFill;
- (void)setContentsScale:(double)arg1;
- (void)setDelegate:(id)arg1;
- (id)currentValueLayer;
- (_Bool)aboveIntercept;
- (void)updateElementFrame:(struct CGRect)arg1 forSeries:(id)arg2 addingAnimationsToAnimationInfo:(id)arg3;
- (void)updateElementFrameToNullForSeries:(id)arg1 addingAnimationsToAnimationInfo:(id)arg2;
- (struct CGAffineTransform)p_renderingSymbolElementTransform;
- (id)p_bubbleElementsRenderer;
- (void)p_addAnimationsForUpdatingPath:(struct CGPath *)arg1 position:(struct CGPoint)arg2 toAnimationInfo:(id)arg3 onLayer:(id)arg4;
- (void)p_addLayerAnimationsForUpdatingImage:(struct CGImage *)arg1 bounds:(struct CGRect)arg2 position:(struct CGPoint)arg3 toAnimationInfo:(id)arg4;
- (void)setFill:(id)arg1 stroke:(id)arg2 withViewScale:(double)arg3;
- (id)chartRep;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHDeprecatedChartDrawableInfoForUpgrade : TSPObject
{
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFStyleStubForUpgrade : TSPObject
{
}

+ (Class)realStyleClass;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartNonStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFLegendStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFLegendNonStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartAxisStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartAxisNonStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartSeriesStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHPreUFFChartSeriesNonStyleForUpgrade : TSCHPreUFFStyleStubForUpgrade
{
}

+ (Class)realStyleClass;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartUIState : NSObject <NSCopying>
{
    _Bool _useFullKeyboard;
    unsigned long long _lastRowSelectedInCDE;
    unsigned long long _lastRowCountInCDE;
    unsigned long long _lastColSelectedInCDE;
    unsigned long long _lastColCountInCDE;
}

@property(readonly, nonatomic) _Bool useFullKeyboard; // @synthesize useFullKeyboard=_useFullKeyboard;
@property(readonly, nonatomic) unsigned long long lastColCountInCDE; // @synthesize lastColCountInCDE=_lastColCountInCDE;
@property(readonly, nonatomic) unsigned long long lastColSelectedInCDE; // @synthesize lastColSelectedInCDE=_lastColSelectedInCDE;
@property(readonly, nonatomic) unsigned long long lastRowCountInCDE; // @synthesize lastRowCountInCDE=_lastRowCountInCDE;
@property(readonly, nonatomic) unsigned long long lastRowSelectedInCDE; // @synthesize lastRowSelectedInCDE=_lastRowSelectedInCDE;
- (void)saveToArchive:(struct ChartUIState *)arg1;
- (id)initWithArchive:(const struct ChartUIState *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithRowRange:(struct _NSRange)arg1 colRange:(struct _NSRange)arg2 useFullKeyboard:(_Bool)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisAnalysis : NSObject
{
    long long _retainCount;
    double _min;
    double _max;
    double _modelMin;
    double _modelMax;
    NSArray *_majorGridLocations;
    NSArray *_minorGridLocations;
    NSArray *_totals;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(copy, nonatomic) NSArray *totals; // @synthesize totals=_totals;
@property(copy, nonatomic) NSArray *minorGridLocations; // @synthesize minorGridLocations=_minorGridLocations;
@property(copy, nonatomic) NSArray *majorGridLocations; // @synthesize majorGridLocations=_majorGridLocations;
@property(nonatomic) double modelMax; // @synthesize modelMax=_modelMax;
@property(nonatomic) double modelMin; // @synthesize modelMin=_modelMin;
@property(nonatomic) double max; // @synthesize max=_max;
@property(nonatomic) double min; // @synthesize min=_min;
- (void)dealloc;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartAxisInterceptAnalysis : NSObject
{
    int _gridValueType;
    double _axisInterceptPosition;
}

@property(nonatomic) int gridValueType; // @synthesize gridValueType=_gridValueType;
@property(nonatomic) double axisInterceptPosition; // @synthesize axisInterceptPosition=_axisInterceptPosition;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartMainTitleLayoutItem : TSCHChartTitleLayoutItem
{
}

- (id)titleSelectionPath;
- (unsigned long long)titleParagraphStyleIndex;
- (id)titleTextForModel:(id)arg1;
- (_Bool)isTitleOn;

@end

__attribute__((visibility("hidden")))
@interface TSCHChartDataSetNameLayoutItem : TSCHChartTitleLayoutItem
{
}

@property(readonly, nonatomic) _Bool isAboveChartBody;
- (id)titleSelectionPath;
- (unsigned long long)titleParagraphStyleIndex;
- (id)titleTextForModel:(id)arg1;
- (_Bool)isTitleOn;
- (struct CGSize)calcMinSize;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DAbstractLimitingSeriesUpgrader : NSObject
{
    TSCHChartInfo *mChartInfo;
    CDUnknownBlockType mWillModifyBlock;
}

+ (id)upgraderWithChartInfo:(id)arg1;
+ (double)depthFactorForAdjustingNumberOfSeries:(unsigned long long)arg1 chartType:(id)arg2 fromOldLimitingSeries:(unsigned long long)arg3 toNewLimitingSeries:(unsigned long long)arg4;
+ (_Bool)chartTypeUsesSeriesLimiting:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType willModifyBlock; // @synthesize willModifyBlock=mWillModifyBlock;
- (void)upgrade;
- (void)mutateInfoByAdjustingScaleFromLayoutSettings:(const CDStruct_9aa9521f *)arg1 toLayoutSettings:(const CDStruct_9aa9521f *)arg2;
- (id)adjustedScaleFromLayoutSettings:(const CDStruct_9aa9521f *)arg1 toLayoutSettings:(const CDStruct_9aa9521f *)arg2;
- (unsigned long long)numberOfSeries;
- (void)mutateInfoWithContainingViewport:(id)arg1 scene:(id)arg2;
- (id)constantDepthInfoChartScaleForInfoChartScale:(id)arg1;
- (void)mutateInfoWithMutations:(id)arg1;
- (id)configuredSceneWithLayoutSettings:(CDStruct_9aa9521f)arg1;
- (void)configureScene:(id)arg1;
- (CDStruct_9aa9521f)upgradedLayoutSettings;
- (CDStruct_9aa9521f)oldLayoutSettings;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSCH3DChartClippingShaderEffect : TSCH3DShaderEffect
{
}

@end

__attribute__((visibility("hidden")))
@interface TSDGLLayerContext : NSObject <TSDGLLayerContext>
{
    EAGLContext *mContext;
    unsigned int mRenderbuffer;
    unsigned int mFramebuffer;
}

- (void)unlock;
- (void)lock;
- (void)presentRenderbuffer;
- (void)teardown;
- (_Bool)createFramebufferFromLayer:(id)arg1;
- (id)init;
- (_Bool)makeCurrentContext;
- (_Bool)isValid;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDGLLayer : CAEAGLLayer
{
    NSObject<TSDGLLayerDelegate> *mDelegate;
    id <TSDGLLayerContext> mContext;
    CADisplayLink *mDisplayLink;
}

@property(nonatomic) NSObject<TSDGLLayerDelegate> *delegate; // @synthesize delegate=mDelegate;
- (void)displayAtCurrentLayerTime;
- (void)unlock;
- (void)lock;
- (void)resumeAnimation;
- (void)pauseAnimation;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setCurrentContext;
- (void)p_drawFrameFromDisplayLink:(id)arg1;
- (void)p_drawFrameAtLayerTime:(double)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 isOpaque:(_Bool)arg2 delegate:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDSimpleTileProvider : TSDTileProvider
{
    SEL mAction;
}

@property(nonatomic) SEL action; // @synthesize action=mAction;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;

@end

__attribute__((visibility("hidden")))
@interface TSDBackgroundLayoutAndRenderState : NSObject
{
    id <TSDBackgroundLayoutAndRenderStateDelegate> mDelegate;
    _Bool mNeedsLayoutAndRender;
    _Bool mNeedsLayoutForTilingLayers;
}

- (void)p_didBackgroundLayoutAndRender;
- (void)setNeedsLayoutForTilingLayers;
- (void)setNeedsLayoutAndRender;
- (id)initWithDelegate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDInteractiveCanvasController : NSObject <TSDCanvasDelegate, TSDErrorPresenter, TSKChangeSourceObserver, NSCoding, TSKScrollViewDelegate, TSDBackgroundLayoutAndRenderStateDelegate, TSDRepTrackerDelegateCreation>
{
    id <TSDInteractiveCanvasControllerDelegate> mDelegate;
    TSDCanvas *mCanvas;
    id <TSDCanvasLayerHosting> mLayerHost;
    struct __CFDictionary *mContainerLayersByRep;
    struct __CFDictionary *mRepLayersByRep;
    struct __CFDictionary *mRepsByRepLayer;
    struct __CFDictionary *mRepsByContainerLayer;
    CALayer *mRepContainerLayer;
    TSDEditorController *mEditorController;
    TSDGuideController *mGuideController;
    TSDUserDefinedGuideController *mUserDefinedGuideController;
    _Bool mHasBeenTornDown;
    _Bool mHadLayerHost;
    _Bool mLayerHostHasBeenTornDown;
    NSFormatter *mUnitFormatter;
    _Bool mResizeCanvasOnLayout;
    _Bool mCreateRepsForOffscreenLayouts;
    _Bool mShouldAutoscrollToSelectionAfterLayout;
    _Bool mSuppressAutozoomToSelectionAfterLayout;
    _Bool mShouldAnimateAutoscroll;
    _Bool mShouldCenterSelectionWhenAutoscrolling;
    CALayer *mOverlayLayer;
    _Bool mOverlayLayerSuppressed;
    CALayer *mPopoutLayer;
    NSMutableArray *mDecorators;
    _Bool mShowGrayOverlay;
    _Bool mInDynamicOperation;
    int mDynamicOperationCounter;
    _Bool mInReadMode;
    _Bool mInVersionBrowsingMode;
    struct CGColor *mSelectionHighlightColor;
    _Bool mShowInvisibleObjects;
    TSDCanvasAnimation *mCurrentAnimation;
    TSDTrackerManipulatorCoordinator *mTMCoordinator;
    TSDDynamicOperationController *mDynOpController;
    NSObject<TSDRulerController> *mRulerController;
    _Bool mInspectorModeEnabled;
    NSMutableArray *mInspectorGestureRecognizersToReenable;
    CDUnknownBlockType mInspectorSingleTapBlock;
    struct CGPoint mLastTapPoint;
    struct CGRect mVisibleBoundsRectForTiling;
    struct CGRect mVisibleUnscaledRect;
    struct CGRect mUnobscuredScrollViewFrame;
    TSDBackgroundLayoutAndRenderState *mBackgroundLayoutAndRenderState;
    _Bool mLayoutAndRenderOnThreadDuringScroll;
    _Bool mTemporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
    _Bool mCurrentlyScrolling;
    _Bool mAnimatingScroll;
    _Bool mSuppressedAutozoom;
    _Bool mTextGesturesInFlight;
    id <TSDEditor> mSelectionChangeNotificationDeferredEditor;
    _Bool mShouldAutoscrollToSelectionAfterGestures;
    _Bool mSuspendedLowPriorityThreadDispatcher;
    _Bool mCurrentlyWaitingOnThreadedLayoutAndRender;
    int mDisableThreadedLayoutAndRender;
    NSMutableArray *mHiddenTopLevelLayers;
    _Bool mShouldSuppressRendering;
    _Bool mSupportsBackgroundTileRendering;
    NSMutableSet *mNotificationsToPostWithValidLayouts;
    NSArray *mLayersWithZoomFadeAnimation;
    _Bool mDynamicallyZooming;
    double mDynamicViewScale;
    _Bool mUsesAlternateDrawableSelectionHighlight;
    double mTargetPointSize;
    _Bool mAnimatingViewScale;
    _Bool mSuppressingKeyboard;
    NSObject<TSDImageHUDController> *mImageHUDController;
    long long mImageHUDLock;
    NSObject<TSDImageHUDController> *mIAHUDController;
    long long mIAHUDLock;
    TSDTileStorage *mTileStorage;
    struct CGPoint mZoomCenterInBounds;
    NSMutableArray *mBackgroundRenderingObjects;
    id <TSDAnnotationHosting> mDisplayedAnnotation;
    id <TSDAnnotationPopoverController> mAnnotationPopoverController;
    _Bool mShouldClipThemeContentToCanvas;
    _Bool mShowUserDefinedGuides;
    _Bool mPreventSettingNilEditorOnTextResponder;
}

+ (double)smallRepOutsetForHitTesting;
+ (id)keyPathsForValuesAffectingCurrentViewScale;
+ (id)keyPathsForValuesAffectingViewScale;
+ (id)keyPathsForValuesAffectingEditorController;
+ (id)keyPathsForValuesAffectingDocumentRoot;
+ (_Bool)selectorIsActionMethod:(SEL)arg1;
@property(nonatomic) _Bool supportsBackgroundTileRendering; // @synthesize supportsBackgroundTileRendering=mSupportsBackgroundTileRendering;
@property(nonatomic) _Bool showInvisibleObjects; // @synthesize showInvisibleObjects=mShowInvisibleObjects;
@property(nonatomic) _Bool inReadMode; // @synthesize inReadMode=mInReadMode;
@property(nonatomic) _Bool inVersionBrowsingMode; // @synthesize inVersionBrowsingMode=mInVersionBrowsingMode;
@property(nonatomic) _Bool showGrayOverlay; // @synthesize showGrayOverlay=mShowGrayOverlay;
@property(nonatomic) _Bool overlayLayerSuppressed; // @synthesize overlayLayerSuppressed=mOverlayLayerSuppressed;
@property(readonly, nonatomic) CALayer *overlayLayer; // @synthesize overlayLayer=mOverlayLayer;
@property(readonly, nonatomic) CALayer *repContainerLayer; // @synthesize repContainerLayer=mRepContainerLayer;
@property struct CGRect p_visibleUnscaledRect; // @synthesize p_visibleUnscaledRect=mVisibleUnscaledRect;
@property struct CGRect p_visibleBoundsRectForTiling; // @synthesize p_visibleBoundsRectForTiling=mVisibleBoundsRectForTiling;
@property(nonatomic) _Bool shouldClipThemeContentToCanvas; // @synthesize shouldClipThemeContentToCanvas=mShouldClipThemeContentToCanvas;
@property(nonatomic) struct CGRect unobscuredScrollViewFrame; // @synthesize unobscuredScrollViewFrame=mUnobscuredScrollViewFrame;
@property(readonly, nonatomic) _Bool currentlyScrolling; // @synthesize currentlyScrolling=mCurrentlyScrolling;
@property(nonatomic) _Bool suppressAutozoomToSelectionAfterLayout; // @synthesize suppressAutozoomToSelectionAfterLayout=mSuppressAutozoomToSelectionAfterLayout;
@property(nonatomic) _Bool shouldAutoscrollToSelectionAfterLayout; // @synthesize shouldAutoscrollToSelectionAfterLayout=mShouldAutoscrollToSelectionAfterLayout;
@property(readonly, nonatomic) _Bool currentlyWaitingOnThreadedLayoutAndRender; // @synthesize currentlyWaitingOnThreadedLayoutAndRender=mCurrentlyWaitingOnThreadedLayoutAndRender;
@property(nonatomic) _Bool layoutAndRenderOnThreadDuringScroll; // @synthesize layoutAndRenderOnThreadDuringScroll=mLayoutAndRenderOnThreadDuringScroll;
@property(nonatomic) _Bool createRepsForOffscreenLayouts; // @synthesize createRepsForOffscreenLayouts=mCreateRepsForOffscreenLayouts;
@property(nonatomic) _Bool preventSettingNilEditorOnTextResponder; // @synthesize preventSettingNilEditorOnTextResponder=mPreventSettingNilEditorOnTextResponder;
@property(nonatomic) _Bool resizeCanvasOnLayout; // @synthesize resizeCanvasOnLayout=mResizeCanvasOnLayout;
@property(nonatomic) NSObject<TSDRulerController> *rulerController; // @synthesize rulerController=mRulerController;
@property(nonatomic) _Bool textGesturesInFlight; // @synthesize textGesturesInFlight=mTextGesturesInFlight;
@property(readonly, nonatomic) _Bool animatingViewScale; // @synthesize animatingViewScale=mAnimatingViewScale;
@property(nonatomic) _Bool shouldSuppressRendering; // @synthesize shouldSuppressRendering=mShouldSuppressRendering;
@property(readonly, nonatomic) _Bool inspectorModeEnabled; // @synthesize inspectorModeEnabled=mInspectorModeEnabled;
@property(nonatomic) id <TSDInteractiveCanvasControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(nonatomic) struct CGPoint lastTapPoint; // @synthesize lastTapPoint=mLastTapPoint;
@property(nonatomic) id <TSDCanvasLayerHosting> layerHost; // @synthesize layerHost=mLayerHost;
@property(readonly, nonatomic) id canvasReferenceController;
- (id)viewWithTransferredLayers;
- (void)doubleTappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (void)animateToViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 duration:(double)arg3 orientation:(long long)arg4;
- (void)p_syncWithLayoutThread;
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4 scrollImmediately:(_Bool)arg5 skipZoom:(_Bool)arg6;
- (void)p_autoscrollToSelection:(id)arg1 withInfo:(id)arg2 isInitialSelection:(_Bool)arg3 focusRect:(struct CGRect)arg4;
- (struct CGRect)p_outsetSelectionRect:(struct CGRect)arg1;
- (_Bool)p_centerOnInitialSelection;
- (void)p_setTargetPointSize:(double)arg1;
- (double)p_targetPointSize;
- (void)p_editorDoneChangingSelection:(id)arg1 withFlags:(unsigned long long)arg2;
- (void)p_editorDoneChangingSelection:(id)arg1;
- (void)p_editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)p_textGesturesDidEndNotification:(id)arg1;
- (void)p_textGesturesWillBeginNotification:(id)arg1;
- (void)p_guideColorChanged:(id)arg1;
- (void)p_rulerUnitsDidChangeNotification:(id)arg1;
- (void)p_viewScrollingEnded;
- (_Bool)p_shouldLayoutAndRenderOnThread;
- (_Bool)i_temporarilyDisabledLayoutAndRenderOnThreadDuringScroll;
- (void)enableThreadedLayoutAndRender;
- (void)disableThreadedLayoutAndRender;
- (id)p_backgroundLayoutAndRenderState;
- (_Bool)p_endEditingToBeginEditingRep:(id)arg1;
- (void)i_drawRepWithReadLock:(id)arg1 inContext:(struct CGContext *)arg2 forLayer:(id)arg3;
- (void)p_drawLayerWithReadLock:(id)arg1;
- (id)p_overlayLayerForReps:(id)arg1;
- (void)p_setupPopoutLayerForReps:(id)arg1;
- (void)p_discardLayer:(id)arg1 forRep:(id)arg2;
- (void)p_recursivelyUpdateLayerEdgeAntialiasingForLayer:(id)arg1;
- (void)p_recursivelyUpdateLayerForRep:(id)arg1 accumulatingLayers:(id)arg2 andReps:(id)arg3;
- (void)p_updateLayersFromReps;
- (void)p_updateCanvasSizeFromLayouts;
- (void)p_postNotificationOnMainThreadWithValidLayouts:(id)arg1;
- (id)i_descriptionForViewScale:(double)arg1;
- (id)i_currentAnimation;
- (_Bool)i_inPrintPreviewMode;
- (id)i_tileStorage;
- (void)i_repNeedsDisplay:(id)arg1 inRect:(struct CGRect)arg2;
- (void)i_repNeedsDisplay:(id)arg1;
- (void)i_recordUserViewScale;
- (void)i_viewScrollingEnded;
- (void)i_viewScrollDidChange;
- (double)i_nextCanvasViewScaleDetentForProposedViewScale:(double)arg1 greater:(_Bool)arg2;
- (struct CGSize)i_canvasCenterOffsetForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (double)i_viewScaleForProposedViewScale:(double)arg1 originalViewScale:(double)arg2;
- (void)i_viewScaleDidChange;
- (void)i_canvasContentsScaleDidChange;
- (void)viewDidEndZooming;
- (void)i_viewDidZoomToViewScale:(double)arg1;
- (void)i_viewIsZoomingAtPoint:(struct CGPoint)arg1;
- (void)i_viewWillBeginZooming;
- (void)p_layoutWithReadLock;
- (void)i_layout;
- (void)i_layoutUnregistered:(id)arg1;
- (void)i_layoutRegistered:(id)arg1;
- (void)setAnimationCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (void)setAnimationRepeatAutoreverses:(_Bool)arg1;
- (void)setAnimationRepeatCount:(float)arg1;
- (void)setAnimationTimingFunction:(id)arg1;
- (void)setAnimationStartDate:(id)arg1;
- (void)setAnimationDelay:(double)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setAnimationDidStopSelector:(SEL)arg1;
- (void)setAnimationWillStartSelector:(SEL)arg1;
- (void)setAnimationDelegate:(id)arg1;
- (void)commitAnimations;
- (void)beginAnimations:(id)arg1 context:(void *)arg2;
- (_Bool)canPerformInteractiveAction:(SEL)arg1 withSender:(id)arg2;
- (id)iaHUDController;
- (id)imageHUDController;
- (void)makeEditorPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)deselectAll:(id)arg1;
- (void)p_acquireLockAndPerformAction:(CDUnknownBlockType)arg1;
- (void)p_willEnterForeground:(id)arg1;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (_Bool)selectionContainsOnlyInfosOnCanvas:(id)arg1 model:(id)arg2;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)backgroundLayoutAndRenderStateDidPerformBackgroundWork:(id)arg1;
- (void)backgroundLayoutAndRenderState:(id)arg1 performWorkInBackgroundTilingOnly:(_Bool)arg2;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (_Bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)tappedCanvasBackgroundAtPoint:(struct CGPoint)arg1;
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)updateSelectionForTapOnSelectedRep:(id)arg1;
- (void)updateSelectionForTapAtPoint:(struct CGPoint)arg1 extendingSelection:(_Bool)arg2;
- (id)hitRepChromeAtUnscaledPoint:(struct CGPoint)arg1;
@property(readonly, retain, nonatomic) TSDTrackerManipulatorCoordinator *tmCoordinator;
@property(readonly, retain, nonatomic) TSDDynamicOperationController *dynamicOperationController;
- (void)p_endZoomingOperation;
- (void)p_beginZoomingOperation;
- (void)endScrollingOperation;
- (void)beginScrollingOperation;
- (void)i_invalidateSelectionHighlightLayers;
@property(nonatomic) _Bool usesAlternateDrawableSelectionHighlight;
- (_Bool)isInInspectorDynamicOperation;
- (void)endPossiblyParallelInspectorDynamicOperation;
- (void)beginPossiblyParallelInspectorDynamicOperation;
- (_Bool)isInDynamicOperation;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (void)actionGhostKnobHitForRep:(id)arg1;
- (void)toggleHyperlinkUIForRep:(id)arg1;
- (_Bool)hasAnnotations;
- (void)previousAnnotationBeforeVisibleAnnotation:(id)arg1;
- (void)nextAnnotationAfterVisibleAnnotation:(id)arg1;
- (void)previousAnnotation:(id)arg1;
- (void)nextAnnotation:(id)arg1;
- (id)annotationController;
- (_Bool)attachedCommentsAllowedForDrawable:(id)arg1;
- (void)toggleAnnotationVisibility:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(_Bool)arg4 shouldSetSelection:(_Bool)arg5;
- (void)hideAnnotationUIWithPinned:(_Bool)arg1;
- (void)hideDisplayedAnnotation;
@property(readonly, nonatomic) unsigned int annotationPreferredRectEdge;
- (struct CGRect)annotationRectInParentView;
@property(readonly, nonatomic) struct CGSize annotationPopoverSize;
@property(readonly, nonatomic) _Bool displayedAnnotationPresentedPinned;
@property(readonly, nonatomic) id <TSDAnnotationHosting> displayedAnnotation;
- (void)presentAnnotationUI:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(_Bool)arg4 pinned:(_Bool)arg5 viaKnob:(_Bool)arg6;
- (void)showAnnotation:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(_Bool)arg4 pinned:(_Bool)arg5 shouldSetSelection:(_Bool)arg6 viaKnob:(_Bool)arg7;
- (void)showAnnotation:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(_Bool)arg4 pinned:(_Bool)arg5 shouldSetSelection:(_Bool)arg6;
- (_Bool)p_annotationShouldShowUI:(id)arg1;
- (void)setAnnotationAuthorColor:(id)arg1;
- (void)invalidateComments;
- (_Bool)shouldDisplayCommentUIForAuthor:(id)arg1 info:(id)arg2;
- (_Bool)shouldDisplayCommentUIForInfo:(id)arg1;
@property(nonatomic) _Bool showsComments;
- (void)addOrShowComment:(id)arg1;
- (void)p_addOrShowComment:(id)arg1 selector:(SEL)arg2;
- (void)showOrHideComments:(id)arg1;
- (void)p_annotationAuthorNameDidChange:(id)arg1;
- (void)getCurrentAnnotationAuthor:(id *)arg1 commandToCreateIfNecessary:(id *)arg2;
- (void)getCurrentAnnotationAuthorCreatingIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)p_decorators;
- (void)removeDecorator:(id)arg1;
- (void)addDecorator:(id)arg1;
- (void)closeOverlays;
- (_Bool)shouldPopKnobsOutsideEnclosingScrollView;
- (id)actionGhostKnobForRep:(id)arg1;
- (_Bool)shouldShowOnRepHyperlinkUI;
- (int)defaultKnobTypeForRep:(id)arg1;
- (_Bool)shouldShowPathHighlightOnUnselectedInvisibleShapes;
- (_Bool)shouldEverShowPathHighlightOnInvisibleShapes;
@property(readonly, nonatomic) NSArray *additionalLayersUnderRepLayers;
- (void)layoutIfNeeded;
- (id)layoutForInfoNearestVisibleRect:(id)arg1 intersectingSelection:(id)arg2;
- (id)layoutForInfoNearestVisibleRect:(id)arg1;
- (id)layoutsForInfo:(id)arg1 intersectingSelection:(id)arg2;
- (id)layoutForModel:(id)arg1 withSelection:(id)arg2;
- (id)layoutForInfo:(id)arg1;
- (id)layoutsForModel:(id)arg1 withSelection:(id)arg2;
- (id)layoutsForInfo:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1;
@property(readonly, nonatomic) TSDLayoutController *layoutController;
- (id)hitKnobAtPoint:(struct CGPoint)arg1 returningRep:(id *)arg2;
- (void)p_recursiveHitKnobAtPoint:(struct CGPoint)arg1 inRep:(id)arg2 minDistance:(double *)arg3 hitKnob:(id *)arg4 hitRep:(id *)arg5;
- (id)hitRepsAtPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRepIgnoringClickThrough:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)topLevelRepsForHitTesting;
- (id)topLevelRepsForDragSelecting;
@property(readonly, nonatomic) TSDContainerRep *topLevelContainerRepForEditing;
- (id)unitStringForAngle:(double)arg1 andLength:(double)arg2;
- (id)unitStringForAngle:(double)arg1;
- (id)unitStringForNumber:(double)arg1;
- (id)unitStringForSize:(struct CGSize)arg1;
- (id)unitStringForPoint:(struct CGPoint)arg1;
- (struct CGSize)rulerCenterOffsetSizeForPoint:(struct CGPoint)arg1;
- (id)unitFormatter;
- (struct CGSize)growUnscaledCanvasLayerSize:(struct CGSize)arg1;
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (_Bool)allowNegativeAutoscroll;
- (_Bool)allowAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForScrollingAutomatically;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForAutoscroll;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectValidWhileZooming;
- (struct CGRect)p_calculateVisibleUnscaledRect;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRect;
- (struct CGRect)p_calculateVisibleBoundsRectForTiling;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectForTiling;
- (struct CGRect)p_visibleBoundsRectUsingSizeOfEnclosingScrollView:(_Bool)arg1;
@property(readonly, nonatomic) struct CGRect visibleBoundsRectUsingSizeOfEnclosingScrollView;
@property(readonly, nonatomic) struct CGRect visibleBoundsRect;
- (void)discardRepForClassChange:(id)arg1;
- (void)recreateAllLayoutsAndReps;
- (id)layerForRep:(id)arg1;
- (id)repForLayout:(id)arg1;
- (id)p_repForLayout:(id)arg1 createIfNeeded:(_Bool)arg2;
- (id)repForInfo:(id)arg1;
- (id)repForInfo:(id)arg1 createIfNeeded:(_Bool)arg2;
- (id)repsForInfo:(id)arg1;
- (id)topLevelZOrderedSiblingsOfInfos:(id)arg1;
@property(copy, nonatomic) NSArray *infosToDisplay;
- (id)localizedPercentStringForAlignmentGuide:(id)arg1;
- (id)provideUserDefinedGuides;
- (id)provideDynamicGuidesForLayout:(id)arg1;
- (struct CGRect)boundingRectForActiveGuidesForPoint:(struct CGPoint)arg1;
- (id)infosForGuides;
- (double)offsetForTranslatingGuidesInStorage:(id)arg1 guideType:(int)arg2;
- (double)offsetForTranslatingToCenterRulerForGuidesInStorage:(id)arg1 guideType:(int)arg2;
- (void)translateGuides:(id)arg1 toContainerRect:(struct CGRect)arg2;
- (void)clipGuideToContainer:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (void)translateGuide:(id)arg1 toContainerRect:(struct CGRect)arg2;
- (struct CGRect)visualContainerRectForGuideStorage:(id)arg1;
- (id)guideStorageAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDUserDefinedGuideController *userDefinedGuideController;
- (Class)userDefinedGuideControllerClass;
@property(readonly, nonatomic) TSDGuideController *guideController;
- (void)makeUserDefinedGuidesVisible;
- (void)toggleShouldShowUserDefinedGuides;
@property(nonatomic) _Bool shouldShowUserDefinedGuides;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)isPrinting;
- (_Bool)isCanvasInteractive;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
@property(readonly, nonatomic) struct CGRect visibleUnscaledRectForCanvasUI;
- (id)replaceImageController;
- (void)hideRuler;
- (void)displayRulerForRect:(struct CGRect)arg1;
- (void)displayRulerWithSlowFade:(_Bool)arg1;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (struct CGColor *)newDefaultSelectionHighlightColor;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 onLayer:(id)arg2;
- (void)setNeedsDisplayOnLayer:(id)arg1;
@property(readonly, nonatomic) struct CGSize sizeOfScrollViewEnclosingCanvas;
- (struct CGPoint)contentOffset;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)scrollRectToVisibleWithSelectionOutset:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)scrollRectToVisibleCenter:(struct CGRect)arg1 animated:(_Bool)arg2 onlyScrollNecessaryAxes:(_Bool)arg3;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)unobscuredFrameDidChange;
- (struct CGRect)unobscuredFrameOfView:(id)arg1;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 animated:(_Bool)arg3;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;
- (struct CGPoint)clampedUnscaledContentOffset:(struct CGPoint)arg1 forViewScale:(double)arg2;
- (void)setViewScale:(double)arg1 contentOffset:(struct CGPoint)arg2 animated:(_Bool)arg3;
- (_Bool)shouldResizeCanvasToScrollView;
@property(readonly, nonatomic) struct CGSize canvasScrollingOutset;
@property(readonly, nonatomic) double fitWidthViewScale;
@property(readonly, nonatomic) double currentViewScale;
@property(nonatomic) double viewScale;
@property(readonly, nonatomic) TSDCanvasLayer *canvasLayer;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_editorControllerSelectionDidChangeAndWantsKeyboard:(id)arg1;
- (void)p_editorControllerSelectionDidChange:(id)arg1;
- (_Bool)p_shouldSuppressAutozoomForEditor:(id)arg1;
- (void)p_editorControllerDidChangeCurrentEditors:(id)arg1;
- (void)p_editorControllerDidChangeTextInputEditor:(id)arg1;
- (void)resumeEditing;
- (void)invalidateLayers;
- (void)invalidateVisibleBounds;
- (void)invalidateReps;
- (void)layoutInvalidated;
- (void)scrollToPrimarySelection;
- (void)scrollToPrimarySelectionForEditor:(id)arg1;
- (void)p_scrollToPrimarySelectionForEditor:(id)arg1 skipZoom:(_Bool)arg2;
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2 scrollImmediately:(_Bool)arg3;
- (void)scrollToSelection:(id)arg1 onModel:(id)arg2;
- (struct CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2;
- (void)setSelection:(id)arg1 onModel:(id)arg2 withFlags:(unsigned long long)arg3;
- (void)p_scrollModelToVisible:(id)arg1 withSelection:(id)arg2;
- (void)scrollSearchReferenceToVisible:(id)arg1;
- (void)scrollCurrentSelectionToVisible;
- (id)infoToScrollToForModel:(id)arg1 withSelection:(id)arg2;
- (id)infoForModel:(id)arg1 withSelection:(id)arg2;
- (id)p_setSelection:(id)arg1 onInfo:(id)arg2 withFlags:(unsigned long long)arg3;
- (_Bool)shouldZoomOnSelectionChange;
- (void)zoomWithAnimationToUnscaledRect:(struct CGRect)arg1;
- (void)zoomToCurrentSelection;
- (struct CGPoint)smartZoomCenterForNoSelection;
- (_Bool)canZoomToCurrentSelection;
- (void)endEditing;
- (id)beginEditingRep:(id)arg1;
- (id)beginEditingRep:(id)arg1 clearingSelection:(_Bool)arg2 withEditorProvider:(CDUnknownBlockType)arg3;
- (id)beginEditingRepForInfo:(id)arg1;
- (id)canvasEditor;
- (id)newCanvasEditor;
@property(readonly, nonatomic) TSDEditorController *editorController;
- (void)presentErrors:(id)arg1 withLocalizedDescription:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)presentError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)canvas:(id)arg1 createdRep:(id)arg2;
- (id)additionalVisibleInfosForCanvas:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;
- (void)canvasDidValidateLayoutsWithDependencies:(id)arg1;
- (void)canvasDidUpdateRepsFromLayouts:(id)arg1;
- (void)canvasWillUpdateRepsFromLayouts:(id)arg1;
- (void)canvasDidLayout:(id)arg1;
- (void)canvasDidValidateLayouts:(id)arg1;
- (void)canvasWillLayout:(id)arg1;
- (void)canvasDidUpdateVisibleBounds:(id)arg1;
- (void)canvasLayoutInvalidated:(id)arg1;
- (_Bool)isPrintingCanvas;
@property(readonly, nonatomic) struct CGSize defaultMinimumUnscaledCanvasSize;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
@property(readonly, nonatomic) TSKCommandController *commandController;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
@property(readonly, nonatomic) id <TSKDocumentRootProvider> documentRootProvider;
- (void)removeBackgroundRenderingObject:(id)arg1;
- (void)addBackgroundRenderingObject:(id)arg1;
- (void)teardownBackgroundRendering;
- (void)i_layerHostHasBeenTornDown;
- (void)teardown;
- (void)teardownCanvasEditor;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (void)p_commonInit;
- (void)removeCommonObservers;
- (void)addCommonObservers;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDDrawableInfo : TSPObject <TSDChangeableInfo, TSKDocumentObject, TSKTransformableObject, TSKSearchable>
{
    TSDInfoGeometry *mGeometry;
    NSObject<TSDContainerInfo> *mParentInfo;
    TSPLazyReference *mParentInfoReference;
    _Bool mLocked;
    _Bool mAspectRatioLocked;
    TSSPropertySetChangeDetails *mChanges;
    TSDExteriorTextWrap *mExteriorTextWrap;
    TSPObject<TSDOwningAttachment> *mOwningAttachment;
    TSDDefaultPartitioner *mDefaultPartitioner;
    NSURL *mHyperlinkURL;
    TSDDrawableComment *mComment;
    NSString *mAccessibilityDescription;
}

+ (_Bool)canPartition;
+ (void)setShouldPartitionByDefault:(_Bool)arg1;
+ (_Bool)needsObjectUUID;
@property(copy, nonatomic) NSString *accessibilityDescription; // @synthesize accessibilityDescription=mAccessibilityDescription;
@property(nonatomic) _Bool aspectRatioLocked; // @synthesize aspectRatioLocked=mAspectRatioLocked;
@property(nonatomic, getter=isLocked) _Bool locked; // @synthesize locked=mLocked;
@property(copy, nonatomic) NSURL *hyperlinkURL; // @synthesize hyperlinkURL=mHyperlinkURL;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @synthesize owningAttachment=mOwningAttachment;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
- (struct CGPoint)transformableObjectAnchorPoint;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)transformedGeometryWithTransform:(struct CGAffineTransform)arg1 inBounds:(struct CGRect)arg2;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)containingGroup;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (id)descriptionForPasteboard;
- (_Bool)reverseChunkingIsSupported;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (id)animationFilters;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)canChangeWrapType;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) Class editorClass;
- (void)coalesceChanges:(id)arg1;
- (id)endCollectingChanges;
- (void)willChangeProperties:(id)arg1;
- (void)willChangeProperty:(int)arg1;
- (void)beginCollectingChanges;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) TSDDrawableComment *comment;
@property(readonly, nonatomic) _Bool supportsAttachedComments;
- (_Bool)canAnchor;
- (id)commandToFlipWithOrientation:(int)arg1;
- (void)didUngroupWithCommand:(id)arg1;
- (void)willGroupWithCommand:(id)arg1;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (id)copyWithContext:(id)arg1;
@property(readonly, nonatomic, getter=isLockable) _Bool lockable;
- (id)presetKind;
@property(readonly, nonatomic) _Bool supportsHyperlinks;
- (id)partitioner;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic) _Bool isUserModifiable;
@property(copy, nonatomic) TSDExteriorTextWrap *exteriorTextWrap;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
- (struct CGAffineTransform)transformInRoot;
- (struct CGAffineTransform)fullTransformInRoot;
- (struct CGAffineTransform)computeFullTransform;
- (struct CGAffineTransform)computeLayoutFullTransform;
- (void)performBlockWithTemporaryLayout:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool canSizeBeChangedIncrementally;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (void)saveToArchive:(struct DrawableArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct DrawableArchive *)arg1 unarchiver:(id)arg2;
- (void)setParentInfoDuringUnarchiving:(id)arg1 fromPasteboard:(_Bool)arg2;
- (id)objectUUIDPath;
- (void)setInsertionCenterPosition:(struct CGPoint)arg1;
- (int)elementKind;
- (id)uuidPathPrefixComponentsProvider;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDRep : NSObject <TSDMagicMoveMatching>
{
    TSDCanvas *mCanvas;
    TSDRep<TSDContainerRep> *mParentRep;
    NSArray *mKnobs;
    _Bool mKnobPositionsInvalid;
    _Bool mShowKnobsWhenManipulated;
    _Bool mKnobsAreShowing;
    TSDKnobTracker *mKnobTracker;
    _Bool mSelectionHighlightLayerValid;
    CALayer *mSelectionHighlightLayer;
    unsigned long long mTextureDeliveryStyle;
    int mTextureByGlyphStyle;
    TSDTextureContext *mTextureContext;
    unsigned long long mTextureStage;
    NSDictionary *mTextureActionAttributes;
    NSDictionary *mTextureAnimationInfo;
    _Bool mShowTemporaryHighlight;
    CALayer *mTemporaryHighlightLayer;
    _Bool mShowDragAndDropHighlight;
    CALayer *mDragAndDropHighlightLayer;
    TSDLayout *mTemporaryMixingLayout;
    TSDLayout *mLayout;
    TSDTextureSet *mTexture;
    NSObject<OS_dispatch_queue> *mTextureAccessQueue;
    struct CGColor *mDefaultSelectionHighlightColor;
    TSDLayoutGeometry *mLastGeometryInRoot;
    struct CGRect mOriginalLayerFrameInScaledCanvas;
    TSDTilingBackgroundQueue *mTileQueue;
    long long mTileQueueOnce;
    long long mTileProviderQueueLock;
    NSObject<OS_dispatch_queue> *mTileProviderQueue;
    _Bool mHasBeenRemoved;
}

@property(retain, nonatomic) NSDictionary *textureAnimationInfo; // @synthesize textureAnimationInfo=mTextureAnimationInfo;
@property(nonatomic) NSDictionary *textureActionAttributes; // @synthesize textureActionAttributes=mTextureActionAttributes;
@property(nonatomic) unsigned long long textureStage; // @synthesize textureStage=mTextureStage;
@property(copy, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=mTextureContext;
@property(nonatomic) int textureByGlyphStyle; // @synthesize textureByGlyphStyle=mTextureByGlyphStyle;
@property(nonatomic) unsigned long long textureDeliveryStyle; // @synthesize textureDeliveryStyle=mTextureDeliveryStyle;
@property(nonatomic) TSDKnobTracker *currentKnobTracker; // @synthesize currentKnobTracker=mKnobTracker;
@property(nonatomic) TSDRep<TSDContainerRep> *parentRep; // @synthesize parentRep=mParentRep;
@property(retain, nonatomic) TSDLayout *temporaryMixingLayout; // @synthesize temporaryMixingLayout=mTemporaryMixingLayout;
@property(readonly, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
@property(readonly, nonatomic) NSArray *hyperlinkRegions;
- (_Bool)wantsToDistortWithImagerContext;
- (void)i_shutdownTileQueue;
- (id)i_tileQueue;
- (id)i_queueForTileProvider;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (_Bool)canDrawInParallel;
- (_Bool)canDrawInBackgroundDuringScroll;
- (int)tilingMode;
- (_Bool)directlyManagesLayerContent;
- (struct CGPoint)centerForRotation;
- (struct CGRect)boundsForResizeGuideUI;
- (_Bool)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (_Bool)resizeFromCenterOnly;
- (double)opacity;
- (unsigned long long)adjustedKnobForComputingResizeGeometry:(unsigned long long)arg1;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (struct CGRect)targetRectForEditMenu;
- (id)itemsToAddToEditMenu;
- (_Bool)handlesEditMenu;
- (_Bool)isLocked;
- (_Bool)isPlaceholder;
- (_Bool)isSelectable;
- (int)dragHUDAndGuidesTypeAtCanvasPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (_Bool)shouldShowSizesInRulers;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (_Bool)isOpaque;
- (_Bool)masksToBounds;
- (id)allLayers;
- (void)invalidateAnnotationColor;
- (void)invalidateComments;
- (struct CGPoint)p_commentPoleTopPositionShouldDisplayDirectlyOverRep:(_Bool)arg1;
- (_Bool)shouldShowCommentHighlight;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (void)willBeRemoved;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)repDirectlyManagesContentsScaleOfLayer:(id)arg1;
- (void)didEndDrawingTilingLayerInBackground:(id)arg1 withToken:(id)arg2;
- (_Bool)shouldBeginDrawingTilingLayerInBackground:(id)arg1 returningToken:(id *)arg2 andQueue:(id *)arg3;
- (id)queueForDrawingTilingLayerInBackground:(id)arg1;
- (struct CGRect)visibleBoundsForTilingLayer:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (_Bool)shouldLayoutTilingLayer:(id)arg1;
- (id)textureForContext:(id)arg1;
- (void)setTextureAttributes:(id)arg1;
- (struct CGAffineTransform)unRotatedTransform:(struct CGAffineTransform)arg1;
- (void)markTextureDirty;
@property(readonly, nonatomic) double textureAngle;
@property(retain) TSDTextureSet *texture; // @synthesize texture=mTexture;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (_Bool)canClipThemeContentToCanvas;
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)wantsEditMenuForTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 onKnob:(id)arg2;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (_Bool)isBeingResized;
- (id)dynamicResizeDidBegin;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;
- (void)p_dynamicRotateDidEnd;
- (void)dynamicallyRotatingWithTracker:(id)arg1;
- (struct CGPoint)unscaledGuidePosition;
- (double)angleForRotation;
- (_Bool)isBeingRotated;
- (void)p_dynamicRotateDidBegin;
- (void)dynamicRotateDidBegin;
- (_Bool)demandsExclusiveSelection;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (_Bool)allowRotateDelegate;
- (_Bool)allowResizeDelegate;
- (_Bool)allowDragDelegate;
- (void)dynamicDragDidEnd;
- (struct CGRect)i_originalLayerFrameInScaledCanvas;
- (struct CGPoint)i_dragOffset;
- (void)i_dynamicDragDidEnd;
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint)arg1;
- (_Bool)resetGuidesAfterDragAfterReset;
- (_Bool)exclusivelyProvidesGuidesWhileAligning;
- (_Bool)providesGuidesWhileAligning;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
- (_Bool)isBeingDragged;
- (void)p_dynamicDragDidBegin;
- (void)dynamicDragDidBegin;
- (_Bool)isInDynamicOperation;
- (void)p_dynamicOperationDidEnd;
- (void)dynamicOperationDidEnd;
- (void)p_dynamicOperationDidBegin;
- (void)dynamicOperationDidBegin;
- (id)popoutLayers;
- (id)overlayLayers;
- (id)p_addLayersForKnobsToArray:(id)arg1 withDelegate:(id)arg2 isOverlay:(_Bool)arg3;
- (struct CGPoint)convertKnobPositionFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)i_invalidateSelectionHighlightLayer;
- (id)selectionHighlightLayer;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
@property(nonatomic) struct CGColor *selectionHighlightColor;
- (double)selectionHighlightWidth;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (void)fadeKnobsOut;
- (void)fadeKnobsIn;
- (void)turnKnobsOn;
- (void)showKnobsDuringManipulation:(_Bool)arg1;
- (_Bool)shouldShowKnobs;
- (_Bool)shouldDisplayHyperlinkUI;
@property(readonly, nonatomic) _Bool isEditingPath;
- (struct CGPoint)unscaledActivityLineEndPointForEntry:(id)arg1;
- (_Bool)shouldShowCommentUIDirectlyOverRep;
- (_Bool)shouldCreateCommentKnob;
- (_Bool)shouldCreateLockedKnobs;
- (_Bool)shouldCreateSelectionKnobs;
- (_Bool)shouldCreateKnobs;
- (_Bool)shouldShowSelectionHighlight;
- (double)additionalRotationForKnobOrientation;
- (id)knobForTag:(unsigned long long)arg1;
- (void)p_actionGhostKnobHit;
- (void)p_toggleHyperlinkUIVisibility;
- (void)p_toggleCommentVisibility;
- (id)newTrackerForKnob:(id)arg1;
- (void)invalidateKnobPositions;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGPoint)p_positionOfActionGhostKnobForBounds:(struct CGRect)arg1;
- (struct CGPoint)positionOfActionGhostKnob;
- (struct CGPoint)positionOfHyperlinkKnob;
- (_Bool)forcesPlacementOnTop;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)trackingBoundsForStandardKnobs;
- (struct CGRect)boundsForStandardKnobs;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)addActionGhostKnobToArrayIfNecessary:(id)arg1;
- (void)addHyperlinkKnobToArray:(id)arg1;
- (void)addCommentKnobToArray:(id)arg1;
- (void)addLockedKnobsToArray:(id)arg1;
- (void)addSelectionKnobsToArray:(id)arg1;
- (id)newSelectionKnobForType:(int)arg1 tag:(unsigned long long)arg2;
- (void)addKnobsToArray:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (void)invalidateKnobs;
@property(readonly, nonatomic) NSArray *knobs;
- (void)becameNotSelected;
- (void)becameSelected;
- (_Bool)isSelected;
- (_Bool)isSelectedIgnoringLocking;
- (void)i_configureFontSmoothingForContext:(struct CGContext *)arg1 layer:(id)arg2;
- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (struct CGRect)clipRect;
- (_Bool)isDrawingInFlippedContext;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (id)colorBehindLayer:(id)arg1;
- (Class)layerClass;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)viewScaleDidChange;
- (void)screenScaleDidChange;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)processChanges:(id)arg1;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnLayoutGeometry:(id)arg3;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2;
- (void)computeDirectLayerFrame:(struct CGRect *)arg1 andTransform:(struct CGAffineTransform *)arg2 basedOnTransform:(struct CGAffineTransform)arg3 andSize:(struct CGSize)arg4;
- (void)antiAliasDefeatLayerFrame:(struct CGRect *)arg1 forTransform:(struct CGAffineTransform)arg2;
- (void)antiAliasDefeatLayerTransform:(struct CGAffineTransform *)arg1 forFrame:(struct CGRect)arg2;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (struct CGAffineTransform)layerTransformInRootForZeroAnchor;
- (struct CGAffineTransform)parentLayerInverseTransformInRootForZeroAnchor;
- (struct CGAffineTransform)layerTransform;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (void)updateChildrenFromLayout;
- (id)repForHandleSingleTap;
- (id)repForRotating;
- (id)repForSelecting;
- (id)additionalRepsForDragging;
- (id)repForDragging;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)shouldExpandHitRegionWhenSmall;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (struct CGRect)convertNaturalRectFromLayerRelative:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToLayerRelative:(struct CGRect)arg1;
- (struct CGPoint)convertNaturalPointFromLayerRelative:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToLayerRelative:(struct CGPoint)arg1;
- (struct CGAffineTransform)transformToConvertNaturalFromLayerRelative;
- (struct CGAffineTransform)transformToConvertNaturalToLayerRelative;
- (struct CGPoint)layerOffsetForDragging;
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)i_layerFrameInScaledCanvasIgnoringDragging;
- (struct CGRect)layerFrameInScaledCanvas;
- (struct CGRect)frameInScreenSpace;
- (struct CGRect)frameInUnscaledCanvasIncludingChrome;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointToUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPath *)newPathInScaledCanvasFromNaturalRect:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectFromUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)convertNaturalRectToUnscaledCanvas:(struct CGRect)arg1;
- (struct CGRect)naturalBounds;
- (double)angleInRoot;
- (void)addToSet:(id)arg1;
- (id)parentRepToPerformSelecting;
- (void)i_willEnterForeground;
- (_Bool)hasBeenRemoved;
- (void)i_willBeRemoved;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (id)connectedReps;
- (id)commandController;
- (id)info;
@property(readonly, nonatomic) TSDLayout *layout; // @synthesize layout=mLayout;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController;
- (_Bool)i_hasInteractiveCanvasController;
- (id)description;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)willBeginEyedropperMode;
- (struct CGRect)i_partition_deepClipRect;

@end

__attribute__((visibility("hidden")))
@interface TSDGLStateSnapshot : NSObject <NSCopying>
{
    unsigned int _currentGL_ACTIVE_TEXTURE;
    CDStruct_bf95b13b _currentGL_VIEWPORT;
}

@property(nonatomic) CDStruct_bf95b13b currentGL_VIEWPORT; // @synthesize currentGL_VIEWPORT=_currentGL_VIEWPORT;
@property(nonatomic) unsigned int currentGL_ACTIVE_TEXTURE; // @synthesize currentGL_ACTIVE_TEXTURE=_currentGL_ACTIVE_TEXTURE;
- (void)validateCurrentStateInGetter;
- (void)validateCurrentState;
- (void)validateGL_VIEWPORT;
- (void)validateGL_ACTIVE_TEXTURE;
- (void)updateWithGLStateSnapshot:(id)arg1;
- (void)updateWithCurrentGLState;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCurrentGLState;

@end

__attribute__((visibility("hidden")))
@interface TSDGLState : NSObject
{
    EAGLContext *_GLContext;
    NSMutableArray *_snapshotStack;
}

@property(nonatomic) CDStruct_bf95b13b currentGL_VIEWPORT;
@property(nonatomic) unsigned int currentGL_ACTIVE_TEXTURE;
@property(readonly, nonatomic) CDUnknownBlockType glViewport;
@property(readonly, nonatomic) CDUnknownBlockType glGetIntegerv;
@property(readonly, nonatomic) CDUnknownBlockType glEnable;
@property(readonly, nonatomic) CDUnknownBlockType glDisable;
- (void)p_setEnum:(unsigned int)arg1 enabled:(_Bool)arg2;
@property(readonly, nonatomic) CDUnknownBlockType glActiveTexture;
- (void)validateCurrentState;
- (void)setCurrentGLStateSnapshot:(id)arg1;
- (id)currentGLStateSnapshotValidatingCurrentState:(_Bool)arg1;
- (id)currentGLStateSnapshot;
- (id)copyCurrentGLStateSnapshot;
- (id)popGLState;
- (void)pushGLState;
- (void)updateWithCurrentGLState;
- (void)dealloc;
- (id)initWithGLContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGradient : TSDFill <TSSPreset, TSSPresetSource, TSDMixing, NSCopying, NSMutableCopying>
{
    NSMutableArray *mStops;
    unsigned long long mType;
    double mOpacity;
    struct CGShading *mShadingRef;
    _Bool mIsAdvancedGradient;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)radialGradientWithGradientStops:(id)arg1;
+ (id)radialGradientWithStartColor:(id)arg1 endColor:(id)arg2;
+ (id)linearGradientWithGradientStops:(id)arg1;
+ (id)linearGradientWithStartColor:(id)arg1 endColor:(id)arg2;
+ (void)sortStopsArray:(id)arg1;
+ (_Bool)useQuartzShadings;
+ (_Bool)useInflections;
+ (void)disableInflections;
+ (void)enableInflections;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
@property(nonatomic) _Bool isAdvancedGradient; // @synthesize isAdvancedGradient=mIsAdvancedGradient;
@property(nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) unsigned long long gradientType; // @synthesize gradientType=mType;
- (void)p_setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)p_setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)p_swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)p_moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)p_setGradientType:(unsigned long long)arg1;
- (void)p_evenlyDistributeStops;
- (void)p_reverseStopOrder;
- (id)p_insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)p_insertStopAtFraction:(double)arg1;
- (id)p_removeStopAtIndex:(unsigned long long)arg1;
- (void)p_removeStop:(id)arg1;
- (void)p_insertGradientStop:(id)arg1;
- (void)p_setGradientStops:(id)arg1;
- (SEL)mapThemeAssetSelector;
@property(readonly, nonatomic) NSString *presetKind;
- (void)p_endBitmapWrapperContext:(struct CGContext *)arg1 inContext:(struct CGContext *)arg2 withIntegralBounds:(struct CGRect)arg3;
- (struct CGContext *)p_beginBitmapWrapperContextInContext:(struct CGContext *)arg1 returningIntegralBounds:(struct CGRect *)arg2;
- (void)p_setAlpha:(struct CGContext *)arg1;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (int)fillType;
@property(readonly, nonatomic) _Bool hasAlpha;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) _Bool isOpaque;
- (struct CGAffineTransform)centeredRadialTransformInRect:(struct CGRect)arg1;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)newColorAtFraction:(double)arg1;
- (id)stopAtIndex:(unsigned long long)arg1;
- (id)stopAfterFraction:(double)arg1;
- (id)stopBeforeFraction:(double)arg1;
- (_Bool)isAdvancedGradientIgnoringFlag;
- (void)releaseShadingRef;
@property(readonly, nonatomic) struct CGShading *shadingRef;
- (id)referenceColor;
@property(readonly, nonatomic) TSUColor *lastColor;
@property(readonly, nonatomic) TSUColor *firstColor;
@property(readonly, retain, nonatomic) NSArray *gradientStops;
- (_Bool)isEqualIgnoringTransform:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2 opacity:(double)arg3;
- (id)init;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableGradient : TSDGradient <TSDGradientStopContainer>
{
}

- (void)setFraction:(double)arg1 ofStopAtIndex:(unsigned long long)arg2;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDAngleGradient : TSDGradient <TSDMixing>
{
    double mAngle;
}

@property(nonatomic) double gradientAngle; // @synthesize gradientAngle=mAngle;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)p_paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (struct CGAffineTransform)p_shadingTransformForBounds:(struct CGRect)arg1;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (double)p_bestGradientLengthForRect:(struct CGRect)arg1 atAngle:(double)arg2;
@property(readonly, nonatomic) double gradientAngleInDegrees;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3 angle:(double)arg4;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2 opacity:(double)arg3 angle:(double)arg4;
- (void)setLastColor:(id)arg1;
- (void)setFirstColor:(id)arg1;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)setGradientType:(unsigned long long)arg1;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
- (void)setGradientStops:(id)arg1;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableAngleGradient : TSDAngleGradient <TSDGradientStopContainer>
{
}

@property(nonatomic) double gradientAngleInDegrees; // @dynamic gradientAngleInDegrees;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) double gradientAngle; // @dynamic gradientAngle;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDTransformGradient : TSDGradient <TSDMixing>
{
    struct CGPoint mStart;
    struct CGPoint mEnd;
    struct CGSize mBaseNaturalSize;
    struct CGAffineTransform mTransformBeforeUpgrade;
}

@property(nonatomic) struct CGSize baseNaturalSize; // @synthesize baseNaturalSize=mBaseNaturalSize;
@property(nonatomic) struct CGPoint endPoint; // @synthesize endPoint=mEnd;
@property(nonatomic) struct CGPoint startPoint; // @synthesize startPoint=mStart;
- (void)p_drawQuartzShadingInContext:(struct CGContext *)arg1 withGradientNaturalSize:(struct CGSize)arg2 baseNaturalSize:(struct CGSize)arg3 start:(struct CGPoint)arg4 end:(struct CGPoint)arg5;
- (struct CGPoint)p_scalePoint:(struct CGPoint)arg1 fromShapeWithNaturalSize:(struct CGSize)arg2;
- (struct CGPoint)p_scalePoint:(struct CGPoint)arg1 toShapeWithNaturalSize:(struct CGSize)arg2;
- (void)p_setDefaultValues;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (double)gradientAngleInDegrees;
- (struct CGSize)baseNaturalSizeForBounds:(struct CGRect)arg1;
- (struct CGPoint)endPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGPoint)startPointForPath:(id)arg1 andBounds:(struct CGRect)arg2;
- (struct CGAffineTransform)transformForSize:(struct CGSize)arg1;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 atAngle:(double)arg3;
- (struct CGPoint)normalizedPointForSize:(struct CGSize)arg1 endPoint:(_Bool)arg2;
- (_Bool)isAdvancedGradientIgnoringFlag;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualIgnoringTransform:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (unsigned long long)hash;
- (id)initWithGradient:(id)arg1 inPath:(id)arg2 andBounds:(struct CGRect)arg3;
- (id)initWithGradientStops:(id)arg1 type:(unsigned long long)arg2;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2 type:(unsigned long long)arg3;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableTransformGradient : TSDTransformGradient <TSDGradientStopContainer>
{
}

- (void)setGradientAngleInDegrees:(double)arg1;
- (void)upgradeIfNecessaryWithBaseNaturalSize:(struct CGSize)arg1;
- (void)setEndPoint:(struct CGPoint)arg1 inShapeWithNaturalSize:(struct CGSize)arg2;
- (void)setStartPoint:(struct CGPoint)arg1 inShapeWithNaturalSize:(struct CGSize)arg2;
@property(retain, nonatomic) TSUColor *lastColor;
@property(retain, nonatomic) TSUColor *firstColor;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
@property(nonatomic) unsigned long long gradientType; // @dynamic gradientType;
- (void)evenlyDistributeStops;
- (void)reverseStopOrder;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (id)insertStopAtFraction:(double)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)removeStop:(id)arg1;
- (void)insertGradientStop:(id)arg1;
@property(retain, nonatomic) NSArray *gradientStops; // @dynamic gradientStops;

// Remaining properties
@property(nonatomic) struct CGSize baseNaturalSize; // @dynamic baseNaturalSize;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGPoint endPoint; // @dynamic endPoint;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAdvancedGradient; // @dynamic isAdvancedGradient;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) struct CGPoint startPoint; // @dynamic startPoint;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDLineEnd : NSObject <NSCopying, TSDMixing>
{
    struct CGPath *mPath;
    struct CGPath *mWrapPath;
    struct CGPoint mEndPoint;
    _Bool mIsFilled;
    NSString *mIdentifier;
    int mLineJoin;
}

+ (id)lineEndWithPath:(struct CGPath *)arg1 wrapPath:(struct CGPath *)arg2 endPoint:(struct CGPoint)arg3 isFilled:(_Bool)arg4 identifier:(id)arg5;
+ (id)lineEndWithPath:(struct CGPath *)arg1 endPoint:(struct CGPoint)arg2 isFilled:(_Bool)arg3 identifier:(id)arg4;
+ (id)lineEndWithIdentifier:(id)arg1;
+ (id)lineEndWithType:(int)arg1;
+ (id)none;
+ (id)line;
+ (id)invertedArrow;
+ (id)openCircle;
+ (id)openSquare;
+ (id)filledSquare;
+ (id)filledArrow;
+ (id)openArrow;
+ (id)filledDiamond;
+ (id)filledCircle;
+ (id)simpleArrow;
+ (id)instanceWithArchive:(const struct LineEndArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) int lineJoin; // @synthesize lineJoin=mLineJoin;
@property(readonly, nonatomic) _Bool isFilled; // @synthesize isFilled=mIsFilled;
@property(readonly, nonatomic) struct CGPoint endPoint; // @synthesize endPoint=mEndPoint;
@property(readonly, nonatomic) struct CGPath *path; // @synthesize path=mPath;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=mIdentifier;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)description;
@property(readonly, nonatomic) _Bool isNone;
@property(readonly, nonatomic) struct CGPath *wrapPath;
- (struct CGImage *)newLineEndImageOnRight:(_Bool)arg1 forContentsScale:(double)arg2 withSize:(struct CGSize)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithPath:(struct CGPath *)arg1 endPoint:(struct CGPoint)arg2 isFilled:(_Bool)arg3 identifier:(id)arg4;
- (id)initWithPath:(struct CGPath *)arg1 wrapPath:(struct CGPath *)arg2 endPoint:(struct CGPoint)arg3 isFilled:(_Bool)arg4 identifier:(id)arg5 lineJoin:(int)arg6;
- (void)saveToArchive:(struct LineEndArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct LineEndArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDStrokePattern : NSObject <NSCopying, TSDMixing>
{
    double mPattern[6];
    unsigned long long mCount;
    double mPhase;
    int mType;
}

+ (id)strokePatternWithPattern:(const double *)arg1 count:(unsigned long long)arg2 phase:(double)arg3;
+ (id)dashPatternWithSpacing:(double)arg1;
+ (id)roundDashPatternWithSpacing:(double)arg1;
+ (id)roundDashPattern;
+ (id)longDashPattern;
+ (id)mediumDashPattern;
+ (id)shortDashPattern;
+ (id)emptyPattern;
+ (id)solidPattern;
@property(readonly, nonatomic) double phase; // @synthesize phase=mPhase;
@property(readonly, nonatomic) unsigned long long count; // @synthesize count=mCount;
@property(readonly, nonatomic) int patternType; // @synthesize patternType=mType;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)p_applyToCAShapeLayer:(id)arg1 lineWidth:(double)arg2;
- (void)applyToCAShapeLayer:(id)arg1;
- (void)i_applyToContext:(struct CGContext *)arg1 lineWidth:(double)arg2 capStyle:(unsigned long long *)arg3;
- (void)applyToContext:(struct CGContext *)arg1 lineWidth:(double)arg2;
@property(readonly, nonatomic) _Bool isRoundDash;
@property(readonly, nonatomic) _Bool isDash;
@property(readonly, nonatomic) double *pattern;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPattern:(const double *)arg1 count:(unsigned long long)arg2 phase:(double)arg3;
- (id)p_initWithType:(int)arg1 pattern:(const double *)arg2 count:(unsigned long long)arg3 phase:(double)arg4;
- (void)saveToArchive:(struct StrokePatternArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokePatternArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDStroke : NSObject <TSSThemeAsset, TSDPathPainter, TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    double mWidth;
    double mActualWidth;
    int mCap;
    int mJoin;
    TSDStrokePattern *mPattern;
    double mMiterLimit;
}

+ (_Bool)canMixWithNilObjects;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
+ (id)strokeWithColor:(id)arg1 width:(double)arg2;
+ (id)emptyStroke;
+ (id)stroke;
+ (id)p_newEmptyStroke;
+ (id)p_newStroke;
+ (Class)mutableClass;
+ (id)instanceWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
+ (id)mergeRangeEmptyStroke;
+ (id)zeroWidthEmptyStroke;
+ (id)emptyStrokeWithWidth:(double)arg1;
@property(nonatomic) double actualWidth; // @synthesize actualWidth=mActualWidth;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @synthesize pattern=mPattern;
@property(nonatomic) double miterLimit; // @synthesize miterLimit=mMiterLimit;
@property(nonatomic) int join; // @synthesize join=mJoin;
@property(nonatomic) int cap; // @synthesize cap=mCap;
@property(nonatomic) double width; // @synthesize width=mWidth;
@property(retain, nonatomic) TSUColor *color; // @synthesize color=mColor;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)shouldAntialiasDefeat;
- (_Bool)drawsInOneStep;
- (void)applyToCAShapeLayer:(id)arg1 insideStroke:(_Bool)arg2 withScale:(double)arg3;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToRepCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyDirectlyToRepCALayer;
@property(readonly, nonatomic) _Bool isNearlyWhite;
@property(readonly, nonatomic) _Bool isFrame;
@property(readonly, nonatomic) double suggestedMinimumLineWidth;
@property(readonly, nonatomic) _Bool supportsLineOptions;
@property(readonly, nonatomic) _Bool supportsColor;
@property(readonly, nonatomic) _Bool supportsWidth;
@property(readonly, nonatomic) _Bool supportsPattern;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)pathForLineEnd:(id)arg1 wrapPath:(_Bool)arg2 atPoint:(struct CGPoint)arg3 atAngle:(double)arg4 withScale:(double)arg5;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;
- (void)paintPathWithNormalClip:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)colorForCGContext:(struct CGContext *)arg1;
- (id)strokeLineEnd:(id)arg1;
- (double)lineEndInsetAdjustment;
@property(readonly, nonatomic) _Bool shouldRender;
@property(readonly, nonatomic) _Bool isNullStroke;
- (void)applyInteriorWrapPropertiesToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (void)applyToContext:(struct CGContext *)arg1;
- (void)p_setPatternPropertiesFromStroke:(id)arg1;
- (void)p_setPropertiesFromStroke:(id)arg1;
@property(readonly, nonatomic) struct _TSDStrokeOutsets outsets;
- (struct CGRect)boundsForPath:(id)arg1;
- (_Bool)needsToExtendJoinsForBoundsCalculation;
@property(readonly, nonatomic) _Bool drawsOutsideStrokeBounds;
@property(readonly, nonatomic) _Bool isRoundDash;
@property(readonly, nonatomic) _Bool isDash;
@property(readonly, nonatomic) double dashSpacing;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5;
- (id)init;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
- (void)aaDefeatedPaintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5;
- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEqualToStroke:(id)arg1;
@property(readonly, nonatomic) _Bool solid;
@property(readonly, nonatomic) _Bool empty;
@property(readonly, nonatomic) _Bool dontClearBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableStroke : TSDStroke
{
}

+ (id)emptyStroke;
+ (id)stroke;
- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) _Bool dontClearBackground; // @dynamic dontClearBackground;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(retain, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(retain, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(nonatomic) double width; // @dynamic width;

@end

__attribute__((visibility("hidden")))
@interface TSDImager : NSObject <TSDCanvasDelegate>
{
    NSArray *mInfos;
    struct CGColor *mBackgroundColor;
    struct CGRect mUnscaledClipRect;
    double mViewScale;
    struct CGSize mScaledImageSize;
    struct CGSize mMaximumScaledImageSize;
    _Bool mUseScaledImageSize;
    _Bool mDistortedToMatch;
    _Bool mImageMustHaveEvenDimensions;
    _Bool mShouldReuseBitmapContext;
    struct UIEdgeInsets mContentInset;
    TSKDocumentRoot *mDocumentRoot;
    TSDCanvas *mCanvas;
    struct CGRect mActualScaledClipRect;
    _Bool mDrawingIntoPDF;
    _Bool mIsPrinting;
    _Bool mShouldUseSRGBColorSpace;
    struct CGContext *mReusableBitmapContext;
    struct CGRect mReusableBounds;
    struct CGRect mReusableIntegralBounds;
    struct CGRect mReusableActualScaledClipRect;
    struct CGSize mReusableScaledImageSize;
    _Bool mReusableShouldUseSRGBColorSpace;
    CDUnknownBlockType mPostRenderAction;
}

@property(nonatomic) _Bool isPrinting; // @synthesize isPrinting=mIsPrinting;
@property(nonatomic) _Bool shouldReuseBitmapContext; // @synthesize shouldReuseBitmapContext=mShouldReuseBitmapContext;
@property(nonatomic) _Bool imageMustHaveEvenDimensions; // @synthesize imageMustHaveEvenDimensions=mImageMustHaveEvenDimensions;
@property(nonatomic) _Bool distortedToMatch; // @synthesize distortedToMatch=mDistortedToMatch;
@property(readonly, nonatomic) struct CGRect actualScaledClipRect; // @synthesize actualScaledClipRect=mActualScaledClipRect;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGRect unscaledClipRect; // @synthesize unscaledClipRect=mUnscaledClipRect;
@property(nonatomic) struct CGColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property(retain, nonatomic) NSArray *infos; // @synthesize infos=mInfos;
@property(readonly, retain, nonatomic) TSDCanvas *canvas; // @synthesize canvas=mCanvas;
- (struct CGImage *)p_newImageInReusableContext;
- (void)p_drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2;
- (_Bool)p_configureCanvas;
- (_Bool)isPrintingCanvas;
- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;
- (struct CGRect)visibleScaledBoundsForClippingRepsOnCanvas:(id)arg1;
- (id)documentRoot;
- (_Bool)drawPageInContext:(struct CGContext *)arg1 createPage:(_Bool)arg2;
- (id)pdfData;
- (struct CGImage *)newImage;
@property(nonatomic) struct CGSize maximumScaledImageSize;
@property(nonatomic) struct CGSize scaledImageSize;
@property(nonatomic) double viewScale;
- (void)setPostRenderAction:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDContainerInfo : TSPObject <TSDMutableContainerInfo, TSKDocumentObject>
{
    TSDInfoGeometry *mGeometry;
    NSObject<TSDContainerInfo> *mParentInfo;
    NSMutableArray *mChildInfos;
}

@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=mParentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @synthesize geometry=mGeometry;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct ContainerArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ContainerArchive *)arg1 unarchiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDContainerLayout : TSDLayout
{
}

- (id)containerInfo;
- (void)updateChildrenFromInfo;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDContainerRep : TSDRep <TSDMutableContainerRep>
{
    NSMutableArray *mChildReps;
}

- (id)hitReps:(struct CGPoint)arg1 withSlopBlock:(CDUnknownBlockType)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRepChrome:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)visibleChildLayouts;
- (void)updateChildrenFromLayout;
- (_Bool)canDrawInParallel;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (void)replaceChildRep:(id)arg1 with:(id)arg2;
- (void)removeChildRep:(id)arg1;
- (void)insertChildRep:(id)arg1 above:(id)arg2;
- (void)insertChildRep:(id)arg1 below:(id)arg2;
- (void)insertChildRep:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildRep:(id)arg1;
- (void)setChildReps:(id)arg1;
@property(readonly, nonatomic) NSObject<TSDMutableContainerInfo> *mutableContainerInfo;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childRepsForHitTesting;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvasView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDLayout : TSDAbstractLayout <TSKSearchTarget>
{
    NSObject<TSDInfo> *mInfo;
    int mLayoutState;
    struct CGPoint mBaseAlignmentFrameOriginForFixingInterimPosition;
    struct CGPoint mBaseCapturedAlignmentFrameOriginForInline;
    struct CGRect mDirtyRect;
    struct {
        unsigned int position:1;
        unsigned int size:1;
        unsigned int inlineSize:1;
    } mInvalidFlags;
    TSDLayoutGeometry *mBaseGeometry;
    struct CGRect mInitialBoundsForStandardKnobs;
    struct CGPoint mCapturedInfoGeometryPositionForInline;
    struct CGPoint mCapturedAlignmentFrameOriginForInline;
    NSMutableSet *mConnectedLayouts;
}

@property(readonly, nonatomic) NSSet *connectedLayouts; // @synthesize connectedLayouts=mConnectedLayouts;
@property(readonly, nonatomic) int layoutState; // @synthesize layoutState=mLayoutState;
@property(readonly, nonatomic) TSDLayoutGeometry *originalGeometry; // @synthesize originalGeometry=mBaseGeometry;
@property(readonly, nonatomic) NSObject<TSDInfo> *info; // @synthesize info=mInfo;
- (void)p_invalidateConnectedLayouts;
- (void)removeConnectedLayout:(id)arg1;
- (void)addConnectedLayout:(id)arg1;
- (_Bool)allowsConnections;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (id)childSearchTargets;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)p_recursiveInvalidate;
- (void)p_unregisterWithLayoutController:(id)arg1;
- (void)p_registerWithLayoutController:(id)arg1;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (struct CGRect)i_takeDirtyRect;
- (void)i_accumulateLayoutsIntoSet:(id)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (id)additionalGuides;
- (_Bool)shouldProvideSizingGuides;
- (_Bool)shouldDisplayGuides;
- (_Bool)orderedBefore:(id)arg1;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (id)additionalLayoutsForRepCreation;
- (id)reliedOnLayouts;
- (id)dependentLayouts;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)searchTarget;
- (void)processChangedProperty:(int)arg1;
- (double)scaleForInlineClampingUnrotatedSize:(struct CGSize)arg1 withGeometry:(id)arg2;
- (id)computeLayoutGeometry;
- (id)computeInfoGeometryDuringResize;
- (struct CGPoint)centerForConnecting;
- (struct CGPoint)centerForRotation;
- (struct CGRect)boundsForStandardKnobs;
- (void)validateFromLastInterimPosition;
- (id)newCommandToMoveByOffset:(struct CGPoint)arg1 whenDistributingLayoutsByOffsets:(id)arg2;
- (_Bool)canFlip;
- (struct CGAffineTransform)originalPureTransformInRoot;
- (struct CGAffineTransform)pureTransformInRoot;
- (id)inspectorGeometry;
- (id)pureGeometryInParent;
- (id)pureGeometryInRoot;
- (id)pureGeometry;
- (id)originalPureGeometry;
- (id)initialInfoGeometry;
- (struct CGRect)initialBoundsForStandardKnobs;
- (_Bool)isBeingManipulated;
- (void)endResize;
- (void)takeSizeFromTracker:(id)arg1;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (struct CGSize)minimumSize;
- (void)beginResize;
@property(readonly, nonatomic) _Bool canAspectRatioLockBeChangedByUser;
@property(readonly, nonatomic) _Bool resizeMayChangeAspectRatio;
- (void)endRotate;
- (void)takeRotationFromTracker:(id)arg1;
- (void)beginRotate;
- (_Bool)shouldProvideGuidesDuringExclusiveAlignmentOperation;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)originalTransformForProvidingGuides;
- (struct CGAffineTransform)originalTransformInRoot;
- (void)endDrag;
- (void)dragBy:(struct CGPoint)arg1;
- (void)dragByUnscaled:(struct CGPoint)arg1;
- (void)beginDrag;
- (_Bool)isBeingTransformed;
- (void)pauseDynamicTransformation;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)i_useBaseCapturedAlignmentFrameOriginForInline;
- (void)i_setBaseCapturedAlignmentFrameOriginForInline;
- (struct CGPoint)alignmentFrameOriginForFixingInterimPosition;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
@property(readonly, nonatomic) _Bool isStrokeBeingManipulated;
- (id)stroke;
- (_Bool)isInTopLevelContainerForEditing;
- (_Bool)isInGroup;
- (_Bool)shouldBeDisplayedInShowMode;
- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;
- (Class)repClassOverride;
- (void)processChanges:(id)arg1;
- (id)computeInfoGeometryFromPureLayoutGeometry:(id)arg1;
- (id)layoutGeometryFromInfo;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (void)validate;
@property(readonly, nonatomic) _Bool invalidGeometry;
- (id)layoutController;
- (id)rootLayout;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)parentDidChange;
- (void)parentWillChangeTo:(id)arg1;
- (void)setParent:(id)arg1;
- (void)unregisterFromLayoutController;
- (void)updateChildrenFromInfo;
- (void)invalidateChildren;
- (void)invalidateExteriorWrap;
- (void)invalidateInlineSize;
- (void)invalidateFrame;
- (void)invalidateSize;
- (void)invalidatePosition;
- (void)invalidate;
- (_Bool)shouldValidate;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicGeometry;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (void)setAdjustedInterimPositionY:(double)arg1;
- (void)setAdjustedInterimPositionX:(double)arg1;
@property(readonly, nonatomic) TPInteractiveCanvasController *interactiveCanvasController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDLayoutController : NSObject
{
    TSDCanvas *mCanvas;
    TSDRootLayout *mRootLayout;
    struct __CFDictionary *mLayoutsByInfo;
    NSMutableSet *mInvalidLayouts;
    NSMutableSet *mLayoutsNeedingRecreating;
    NSMutableSet *mInvalidChildrenLayouts;
    TSDLayout *mValidatingLayout;
}

+ (void)temporaryLayoutControllerForInfos:(id)arg1 useInBlock:(CDUnknownBlockType)arg2;
+ (id)allInteractiveLayoutControllers;
- (void)i_removeAllLayouts;
- (void)i_unregisterLayout:(id)arg1;
- (void)i_registerLayout:(id)arg1;
- (void)notifyThatLayoutsChangedOutsideOfLayout;
- (id)validatedLayoutForInfo:(id)arg1 childOfLayout:(id)arg2;
- (id)validatedLayoutsForInfo:(id)arg1;
- (id)validatedLayoutForInfo:(id)arg1;
- (void)validateLayoutWithDependencies:(id)arg1;
- (void)validateLayoutsWithDependencies:(id)arg1;
- (void)validateLayouts:(id)arg1;
- (id)sortLayoutsForDependencies:(id)arg1;
- (void)validateLayouts;
- (struct CGRect)rectOfTopLevelLayouts;
- (id)layoutsInRect:(struct CGRect)arg1;
- (id)layoutForInfo:(id)arg1 childOfLayout:(id)arg2;
- (id)layoutsForInfos:(id)arg1;
- (id)layoutsForInfo:(id)arg1;
- (id)layoutForInfo:(id)arg1;
- (void)invalidateLayoutForRecreation:(id)arg1;
- (void)invalidateChildrenOfLayout:(id)arg1;
- (void)invalidateLayout:(id)arg1;
- (void)setInfos:(id)arg1;
- (id)rootLayout;
- (id)canvas;
- (void)dealloc;
- (id)initWithCanvas:(id)arg1;
- (_Bool)isLayoutOffscreen;

@end

__attribute__((visibility("hidden")))
@interface TSDAbstractLayout : NSObject
{
    TSDAbstractLayout *mParent;
    NSMutableArray *mChildren;
    TSDLayoutGeometry *mGeometry;
    struct CGPoint mInterimPosition;
    _Bool mInterimPositionXSet;
    _Bool mInterimPositionYSet;
    struct CGPoint mLastInterimPosition;
    _Bool mLastInterimPositionXSet;
    _Bool mLastInterimPositionYSet;
}

@property(readonly, nonatomic) struct CGPoint lastInterimPosition; // @synthesize lastInterimPosition=mLastInterimPosition;
@property(nonatomic) TSDAbstractLayout *parent; // @synthesize parent=mParent;
@property(copy, nonatomic) TSDLayoutGeometry *geometry; // @synthesize geometry=mGeometry;
- (_Bool)canRotateChildLayout:(id)arg1;
- (_Bool)supportsFlipping;
- (_Bool)supportsParentRotation;
- (_Bool)supportsRotation;
- (_Bool)supportsInspectorPositioning;
- (_Bool)supportsResize;
- (struct CGPoint)positionInRootForAttachmentPositioner;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (struct CGPoint)alignmentFrameOriginForFixingInterimPosition;
- (void)p_fixTransformFromInterimPosition:(struct CGPoint)arg1 interimPositionXSet:(_Bool)arg2 interimPositionYSet:(_Bool)arg3;
- (void)fixTransformFromLastInterimPosition;
- (void)fixTransformFromInterimPosition;
@property(nonatomic) double interimPositionY;
@property(nonatomic) double interimPositionX;
- (_Bool)shouldSnapWhileResizing;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (struct CGRect)frameForCulling;
- (void)addLayoutsInRect:(struct CGRect)arg1 toArray:(id)arg2 deep:(_Bool)arg3;
- (void)exchangeChildAtIndex:(unsigned long long)arg1 withChildAtIndex:(unsigned long long)arg2;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)removeFromParent;
@property(copy, nonatomic) NSArray *children;
@property(readonly, nonatomic) TSDAbstractLayout *root;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (id)parentLayoutForProvidingGuides;
- (_Bool)providesGuidesForChildLayouts;
- (_Bool)isRootLayoutForInspectorGeometry;
- (_Bool)isAxisAlignedUnflippedInRoot;
- (struct CGRect)clippedRectInRoot:(struct CGRect)arg1;
- (struct CGRect)clipRect;
- (struct CGRect)rectInRoot:(struct CGRect)arg1;
- (struct CGRect)rectInParent:(struct CGRect)arg1;
- (struct CGRect)frameInRoot;
- (struct CGRect)frameInParent;
- (struct CGRect)insertionFrame;
- (struct CGRect)frame;
- (struct CGAffineTransform)transformInRoot;
- (struct CGAffineTransform)transformInParent;
- (struct CGAffineTransform)transform;
- (id)visibleGeometries;
- (id)geometryForTransforming;
- (id)geometryInRoot:(id)arg1;
- (id)geometryInRoot;
- (id)geometryInParent;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) TPPageLayout *pageLayout;
@property(readonly, nonatomic) unsigned int pageIndex;

@end

__attribute__((visibility("hidden")))
@interface TSDRootLayout : TSDAbstractLayout <TSDAdaptiveLayout>
{
    TSDLayoutController *mLayoutController;
    _Bool mSupportsAdaptiveLayout;
    TSUPointerKeyDictionary *mShiftedObjects;
}

- (struct CGPoint)applyAdaptiveLayoutTo:(id)arg1 info:(id)arg2 offset:(struct CGPoint)arg3;
- (void)endDynamicAdaptiveLayout;
- (void)beginDynamicAdaptiveLayout;
- (id)p_shiftedObjects;
- (struct CGRect)clippedRectInRoot:(struct CGRect)arg1;
- (_Bool)isRootLayoutForInspectorGeometry;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (_Bool)providesGuidesForChildLayouts;
- (id)childLayoutsInRect:(struct CGRect)arg1;
- (id)layoutController;
- (void)dealloc;
- (id)initWithLayoutController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDInfoGeometry : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    struct CGPoint mPosition;
    struct CGSize mSize;
    struct {
        unsigned int widthValid:1;
        unsigned int heightValid:1;
        unsigned int horizontalFlip:1;
        unsigned int verticalFlip:1;
    } mFlags;
    double mAngle;
}

+ (id)geometryFromTransform:(struct CGAffineTransform)arg1 withSize:(struct CGSize)arg2;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1;
+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1 widthValid:(_Bool)arg2 heightValid:(_Bool)arg3;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(readonly, nonatomic) struct CGPoint position; // @synthesize position=mPosition;
- (id)description;
- (id)normalizedGeometry;
- (id)geometryWithNewBounds:(struct CGRect)arg1;
- (id)geometryRelativeToGeometry:(id)arg1;
- (id)geometryWithParentGeometry:(id)arg1;
- (id)geometryByAppendingTransform:(struct CGAffineTransform)arg1;
- (id)initWithTransform:(struct CGAffineTransform)arg1 size:(struct CGSize)arg2;
- (id)initWithFullTransform:(struct CGAffineTransform)arg1 widthValid:(_Bool)arg2 heightValid:(_Bool)arg3;
- (struct CGAffineTransform)fullTransform;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isEqualExceptForPosition:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (struct CGPoint)transformedBoundsOrigin;
- (struct CGRect)transformedBounds;
- (struct CGAffineTransform)transformWithoutFlips;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2 withFlips:(_Bool)arg3;
- (struct CGAffineTransform)transformBasedOnPoint:(struct CGPoint)arg1 centeredAtPoint:(struct CGPoint)arg2;
- (struct CGAffineTransform)transformBasedOnRect:(struct CGRect)arg1;
- (struct CGAffineTransform)transform;
- (struct CGPoint)center;
- (struct CGRect)boundsBeforeRotation;
@property(readonly, nonatomic) _Bool verticalFlip;
@property(readonly, nonatomic) _Bool horizontalFlip;
@property(readonly, nonatomic) _Bool heightValid;
@property(readonly, nonatomic) _Bool widthValid;
- (id)initWithLayoutGeometry:(id)arg1;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 horizontalFlip:(_Bool)arg3 verticalFlip:(_Bool)arg4 angle:(double)arg5;
- (id)initWithTransformedBoundsOrigin:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 angle:(double)arg3;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2;
- (id)initWithHeight:(double)arg1;
- (id)initWithWidth:(double)arg1;
- (id)initWithSize:(struct CGSize)arg1;
- (id)init;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPosition:(struct CGPoint)arg1 size:(struct CGSize)arg2 widthValid:(_Bool)arg3 heightValid:(_Bool)arg4 horizontalFlip:(_Bool)arg5 verticalFlip:(_Bool)arg6 angle:(double)arg7;
- (void)saveToArchive:(struct GeometryArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct GeometryArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableInfoGeometry : TSDInfoGeometry
{
}

- (void)setTransformedBoundsOrigin:(struct CGPoint)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setVerticalFlip:(_Bool)arg1;
- (void)setHorizontalFlip:(_Bool)arg1;
- (void)setHeightValid:(_Bool)arg1;
- (void)setWidthValid:(_Bool)arg1;
- (void)setAngle:(double)arg1;
- (void)setSize:(struct CGSize)arg1;
- (void)setPosition:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDLinePreset : NSObject
{
    TSDLineEnd *mHeadLineEnd;
    TSDLineEnd *mTailLineEnd;
    TSDStroke *mStroke;
}

+ (id)lineWithStroke:(id)arg1 headLineEnd:(id)arg2 tailLineEnd:(id)arg3;
@property(readonly, copy, nonatomic) TSDStroke *stroke; // @synthesize stroke=mStroke;
@property(readonly, copy, nonatomic) TSDLineEnd *tailLineEnd; // @synthesize tailLineEnd=mTailLineEnd;
@property(readonly, copy, nonatomic) TSDLineEnd *headLineEnd; // @synthesize headLineEnd=mHeadLineEnd;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithStroke:(id)arg1 headLineEnd:(id)arg2 tailLineEnd:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDLayoutGeometry : NSObject <NSCopying, NSMutableCopying>
{
    struct CGSize mSize;
    struct CGAffineTransform mTransform;
}

+ (id)geometryFromFullTransform:(struct CGAffineTransform)arg1;
@property(readonly, nonatomic) struct CGAffineTransform transform; // @synthesize transform=mTransform;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=mSize;
- (_Bool)differsInMoreThanTranslationFrom:(id)arg1;
- (struct CGAffineTransform)transformByConcatenatingTransformTo:(struct CGAffineTransform)arg1;
- (id)geometryByOutsettingBy:(struct CGSize)arg1;
- (id)geometryByTranslatingBy:(struct CGPoint)arg1;
- (id)geometryByTransformingBy:(struct CGAffineTransform)arg1;
- (id)infoGeometry;
- (struct CGAffineTransform)fullTransform;
- (struct CGAffineTransform)inverseTransform;
- (struct CGRect)frame;
- (struct CGPoint)center;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithInfoGeometry:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)initWithSize:(struct CGSize)arg1 transform:(struct CGAffineTransform)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableLayoutGeometry : TSDLayoutGeometry
{
}

- (void)outsetBy:(struct CGSize)arg1;
- (void)transformBy:(struct CGAffineTransform)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setSize:(struct CGSize)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDCalligraphyStroke : TSDSmartStroke
{
}

+ (Class)mutableClass;
- (struct CGRect)boundsForLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 transform:(struct CGAffineTransform)arg5;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)applyToContext:(struct CGContext *)arg1 insideStroke:(_Bool)arg2;
- (struct CGAffineTransform)transformInContext:(struct CGContext *)arg1;
- (struct CGRect)boundsForPath:(id)arg1;
- (_Bool)drawsOutsideStrokeBounds;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (_Bool)chisel;
- (double)scale;
- (double)angle;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6 miterLimit:(double)arg7;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableCalligraphyStroke : TSDCalligraphyStroke
{
}

- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(copy, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(copy, nonatomic) NSString *strokeName; // @dynamic strokeName;
@property(nonatomic) double width; // @dynamic width;

@end

__attribute__((visibility("hidden")))
@interface TSDAnnotationAuthorReplacementManager : NSObject
{
    TSKDocumentRoot *mDocumentRoot;
}

- (void)replaceAnnotationAuthor:(id)arg1 withExistingAuthor:(id)arg2;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDBrushPathManipulation : TSDPathManipulation
{
    struct CGPath *mBrushStroke;
    double mRepeatLength;
    NSMutableDictionary *mSections;
    NSMutableArray *mMiddleSections;
    NSMutableArray *mSmallSections;
    double mSmallLimitWidth;
    _Bool mSplitAtSharpAngles;
}

@end

__attribute__((visibility("hidden")))
@interface TSDPathCut : NSObject
{
    long long mSegment;
    double mT;
    double mSkew;
}

@property(readonly, nonatomic) double skew; // @synthesize skew=mSkew;
@property(readonly, nonatomic) double t; // @synthesize t=mT;
@property(readonly, nonatomic) long long segment; // @synthesize segment=mSegment;
- (id)description;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 withSkew:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDPathIntersection : NSObject
{
    long long mSegment;
    long long mSegmentB;
    double mT;
    double mTB;
    struct CGPoint mPoint;
}

@property(readonly, nonatomic) double tB; // @synthesize tB=mTB;
@property(readonly, nonatomic) long long segmentB; // @synthesize segmentB=mSegmentB;
@property(nonatomic) struct CGPoint point; // @synthesize point=mPoint;
@property(readonly, nonatomic) double t; // @synthesize t=mT;
@property(readonly, nonatomic) long long segment; // @synthesize segment=mSegment;
- (long long)compareT:(id)arg1;
- (long long)compareSegmentAndT:(id)arg1;
- (id)description;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 onSegmentB:(long long)arg3 atT:(double)arg4 atPoint:(struct CGPoint)arg5;
- (id)initWithSegment:(long long)arg1 atT:(double)arg2 atPoint:(struct CGPoint)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDPathFiller : TSDPathStroker
{
}

- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 inColor:(id)arg3;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingStroker:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDPathSource : NSObject <TSDMixing, NSCopying>
{
    _Bool mHorizontalFlip;
    _Bool mVerticalFlip;
}

+ (id)pathSourceForShapeType:(int)arg1 naturalSize:(struct CGSize)arg2;
+ (id)pathSourceWithArchive:(const struct PathSourceArchive *)arg1;
@property _Bool hasVerticalFlip; // @synthesize hasVerticalFlip=mVerticalFlip;
@property _Bool hasHorizontalFlip; // @synthesize hasHorizontalFlip=mHorizontalFlip;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGAffineTransform)pathFlipTransform;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (double)uniformScaleForScalingToNaturalSize:(struct CGSize)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (struct CGSize)naturalSize;
- (Class)preferredControllerClass;
- (id)interiorWrapPath;
- (id)bezierPathWithoutFlips;
- (id)bezierPath;
- (_Bool)isCircular;
- (_Bool)isRectangularForever;
- (_Bool)isRectangular;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;
- (void)saveSharedToArchive:(struct PathSourceArchive *)arg1;
- (void)loadSharedFromArchive:(const struct PathSourceArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDPointPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;
    struct CGPoint mPoint;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(int)arg1 point:(struct CGPoint)arg2 naturalSize:(struct CGSize)arg3;
+ (id)plusWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)starWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)doubleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)leftSingleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
+ (id)rightSingleArrowWithPoint:(struct CGPoint)arg1 naturalSize:(struct CGSize)arg2;
@property struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property struct CGPoint point; // @synthesize point=mPoint;
@property int type; // @synthesize type=mType;
- (_Bool)p_isFlippedDoubleArrow;
- (_Bool)p_isRightFacingArrow;
- (struct CGPoint)p_getControlKnobPointForPlus;
- (void)p_setControlKnobPointForPlus:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForStarInnerRadius;
- (void)p_setControlKnobPointForStarInnerRadius:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForStarPoints;
- (void)p_setControlKnobPointForStarPoints:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForArrow;
- (void)p_setControlKnobPointForArrow:(struct CGPoint)arg1;
- (struct CGPath *)p_newPlusPath;
- (struct CGPath *)p_newStarPath;
- (struct CGPath *)p_newArrowPath;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGSize)scaleFactorForInscribedRectangle;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (void)setPointValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (struct CGPoint)maxPointValue;
- (struct CGPoint)minPointValue;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(int)arg1 point:(struct CGPoint)arg2 naturalSize:(struct CGSize)arg3;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDScalarPathSource : TSDPathSource <TSDMixing, TSDSmartPathSource>
{
    int mType;
    double mScalar;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;
+ (id)chevronWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)regularPolygonWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)roundedRectangleWithScalar:(double)arg1 naturalSize:(struct CGSize)arg2;
+ (id)rectangleWithNaturalSize:(struct CGSize)arg1;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
@property(nonatomic) double scalar; // @synthesize scalar=mScalar;
@property(nonatomic) int type; // @synthesize type=mType;
- (struct CGPoint)p_getControlKnobPointForChevron;
- (void)p_setControlKnobPointForChevron:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRegularPolygon;
- (void)p_setControlKnobPointForRegularPolygon:(struct CGPoint)arg1;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (struct CGPath *)p_newChevronPath;
- (struct CGPath *)p_newRegularPolygonPath;
- (struct CGPath *)p_newRoundedRectPath;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGSize)scaleFactorForInscribedRectangle;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (id)valueForSetSelector:(SEL)arg1;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
@property(readonly, nonatomic) double maxScalar;
- (void)setScalarValue:(id)arg1;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithType:(int)arg1 scalar:(double)arg2 naturalSize:(struct CGSize)arg3;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDShapeInfo : TSDStyledInfo <TSSThemedObject, TSDMixing, TSDReducableInfo, TSKSearchable>
{
    TSDPathSource *mPathSource;
    TSDShapeStyle *mStyle;
    TSDLineEnd *mHeadLineEnd;
    TSDLineEnd *mTailLineEnd;
}

@property(retain, nonatomic) TSDPathSource *pathSource; // @synthesize pathSource=mPathSource;
- (id)style;
- (id)objectForProperty:(int)arg1;
- (id)commandForSettingBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)animationFilters;
- (id)commandToReplaceImageData:(id)arg1 withReducedImageData:(id)arg2 associatedHint:(id)arg3;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (id)commandToFlipWithOrientation:(int)arg1;
- (void)setValuesForProperties:(id)arg1;
@property(copy, nonatomic) TSDFill *fill;
- (void)setStyle:(id)arg1;
@property(readonly, nonatomic) _Bool supportsShrinkTextToFit;
@property(readonly, nonatomic) _Bool supportsTextInset;
- (void)setGeometry:(id)arg1;
@property(readonly, nonatomic) TSDShapeStyle *shapeStyle;
- (Class)styleClass;
- (Class)repClass;
- (Class)layoutClass;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
@property(retain, nonatomic) TSDLineEnd *tailLineEnd;
@property(retain, nonatomic) TSDLineEnd *headLineEnd;
- (void)saveToArchive:(struct ShapeArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct ShapeArchive *)arg1 unarchiver:(id)arg2;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_correctNearZeroWidthLines;
- (void)p_correctLineSegmentGeometry;
- (int)elementKind;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDShapeRep : TSDStyledRep <TSDMagicMoveMatching>
{
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;
    _Bool mFrameInUnscaledCanvasIsValid;
    _Bool mDirectlyManagesLayerContent;
    struct CGRect mOriginalAliasedAlignmentFrameInLayerFrame;
    _Bool mShadowOnChildrenDisabled;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(nonatomic) _Bool shadowOnChildrenDisabled; // @synthesize shadowOnChildrenDisabled=mShadowOnChildrenDisabled;
- (_Bool)i_editMenuOverlapsEndKnobs;
- (_Bool)shouldShowShadow;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (_Bool)p_drawsSelfInOneStep;
- (_Bool)p_canApplyFillToLayer;
- (_Bool)p_canApplyStrokeToLayer;
- (_Bool)p_pathIsAxisAlignedRect;
- (void)p_endDynamicallyResizingOrMovingLineEnd;
- (void)p_beginDynamicallyResizingOrMovingLineEnd;
- (void)p_drawLineEndForHead:(_Bool)arg1 withDelta:(struct CGPoint)arg2 andStroke:(id)arg3 inContext:(struct CGContext *)arg4 useFastDrawing:(_Bool)arg5;
- (void)setTextureAttributes:(id)arg1;
- (struct CGAffineTransform)naturalToEditablePathSpaceTransform;
- (id)editablePathSource;
- (_Bool)canMakePathEditable;
- (_Bool)isPathEditable;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (_Bool)canDrawInParallel;
- (_Bool)isInvisible;
- (void)invalidateEffectLayersForChildren;
- (id)overlayLayers;
- (id)additionalLayersOverLayer;
- (_Bool)selectionIsAppropriateToShowInvisiblePathHighlight;
- (_Bool)shouldShowInvisiblePathHighlight;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (_Bool)shouldShowSmartShapeKnobs;
- (_Bool)shouldShowAdvancedGradientKnobs;
- (_Bool)shouldShowAdditionalKnobs;
- (void)addSelectionKnobsToArray:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (_Bool)canBeUsedForImageMask;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (_Bool)shouldShowSelectionHighlight;
- (struct CGRect)targetRectForEditMenu;
- (void)dynamicDragDidEnd;
- (void)dynamicDragDidBegin;
- (struct CGRect)aliasedAlignmentFrameInLayerFrame;
- (_Bool)isDraggable;
- (void)processChangedProperty:(int)arg1;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)shouldExpandHitRegionWhenSmall;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (_Bool)shouldHitTestWithFill;
- (void)didUpdateLayer:(id)arg1;
- (id)imageOfStroke:(struct CGRect *)arg1;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (_Bool)isEditingChildRep;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)p_drawChildrenWithoutOpacityInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_endApplyOpacity:(struct CGContext *)arg1 apply:(_Bool)arg2;
- (_Bool)p_beginApplyOpacity:(struct CGContext *)arg1 forDrawingInOneStep:(_Bool)arg2;
- (struct CGRect)clipRect;
- (_Bool)directlyManagesLayerContent;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (struct CGRect)layerFrameInScaledCanvasRelativeToParent;
- (struct CGRect)layerFrameInScaledCanvas;
- (struct CGRect)frameInUnscaledCanvas;
- (id)shapeLayout;
- (id)shapeInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDShapeLayout : TSDStyledLayout
{
    struct {
        unsigned int path:1;
        unsigned int pathBounds:1;
        unsigned int pathBoundsWithoutStroke:1;
        unsigned int pathIsOpen:1;
        unsigned int pathIsLineSegment:1;
        unsigned int alignmentFrame:1;
        unsigned int alignmentFrameInRoot:1;
        unsigned int headAndTail:1;
        unsigned int headLineEnd:1;
        unsigned int tailLineEnd:1;
        unsigned int clippedPath:1;
    } mShapeInvalidFlags;
    TSDBezierPath *mCachedPath;
    struct CGRect mCachedPathBounds;
    struct CGRect mCachedPathBoundsWithoutStroke;
    _Bool mCachedPathIsOpen;
    _Bool mCachedPathIsLineSegment;
    struct CGRect mCachedAlignmentFrame;
    struct CGRect mCachedAlignmentFrameInRoot;
    struct CGAffineTransform mCachedAlignmentFrameInRootTransformInRoot;
    struct CGPoint mHeadPoint;
    struct CGPoint mTailPoint;
    struct CGPoint mHeadLineEndPoint;
    struct CGPoint mTailLineEndPoint;
    double mHeadLineEndAngle;
    double mTailLineEndAngle;
    long long mHeadCutSegment;
    long long mTailCutSegment;
    double mHeadCutT;
    double mTailCutT;
    TSDBezierPath *mCachedClippedPath;
    TSDPathSource *mShrunkenPathSource;
    TSDEditableBezierPathSource *mCachedEditableBezierPathSource;
    TSDPathSource *mCachedPathSource;
    TSDPathSource *mResizePathSource;
    TSDInfoGeometry *mResizeInfoGeometry;
    TSDInfoGeometry *mInitialInfoGeometry;
    TSDMutableStroke *mDynamicStroke;
    TSDFill *mDynamicFill;
}

@property(retain, nonatomic) TSDFill *dynamicFill; // @synthesize dynamicFill=mDynamicFill;
- (void)p_updateResizeInfoGeometryFromResizePathSource;
- (id)p_unitePath:(id)arg1 withLineEndForHead:(_Bool)arg2 stroke:(id)arg3;
- (struct CGRect)p_boundsOfLineEndForHead:(_Bool)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_createClippedPath;
- (void)p_computeAngle:(double *)arg1 point:(struct CGPoint *)arg2 cutSegment:(long long *)arg3 cutT:(double *)arg4 forLineEndAtHead:(_Bool)arg5;
- (void)p_validateTailLineEnd;
- (void)p_validateHeadLineEnd;
- (void)p_validateHeadAndTail;
- (void)p_invalidateClippedPath;
- (void)p_invalidateTail;
- (void)p_invalidateHead;
- (_Bool)p_cachedPathIsLineSegment;
- (_Bool)p_cachedPathIsOpen;
- (struct CGRect)p_cachedPathBoundsWithoutStroke;
- (struct CGRect)p_cachedPathBounds;
- (id)p_cachedPath;
- (id)i_computeWrapPathClosed:(_Bool)arg1;
- (id)i_computeWrapPath;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (unsigned long long)numberOfControlKnobs;
- (id)strokeTailLineEnd;
- (id)strokeHeadLineEnd;
- (struct CGPoint)unclippedTailPoint;
- (struct CGPoint)unclippedHeadPoint;
- (_Bool)isBeingManipulated;
- (void)takeRotationFromTracker:(id)arg1;
- (_Bool)supportsRotation;
- (id)initialInfoGeometry;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (void)dynamicallyMovingLineSegmentWithTracker:(id)arg1;
- (void)endResize;
- (void)takeSizeFromTracker:(id)arg1;
- (struct CGSize)minimumSize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)supportsResize;
- (void)invalidatePathBounds;
- (void)invalidatePath;
- (void)invalidateFrame;
- (_Bool)canResetTextAndObjectHandles;
- (_Bool)canBeIntersected;
@property(readonly, nonatomic) TSDFill *fill;
- (void)aliasPathForScale:(double)arg1 originalStroke:(id)arg2 adjustedStroke:(id *)arg3 adjustedPath:(id *)arg4 startDelta:(struct CGPoint *)arg5 endDelta:(struct CGPoint *)arg6;
- (void)aliasPathForScale:(double)arg1 adjustedStroke:(id *)arg2 adjustedPath:(id *)arg3 startDelta:(struct CGPoint *)arg4 endDelta:(struct CGPoint *)arg5;
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;
- (struct CGPoint)centerForConnecting;
- (_Bool)isInvisibleAutosizingShape;
- (_Bool)shouldBeDisplayedInShowMode;
- (_Bool)isInvisible;
- (struct CGRect)shapeFrameWithTransform:(struct CGAffineTransform)arg1;
- (id)clippedPathForLineEnds;
- (double)lineEndScale;
- (_Bool)isTailEndOnLeft;
- (double)tailLineEndAngle;
- (double)headLineEndAngle;
- (struct CGPoint)tailLineEndPoint;
- (struct CGPoint)headLineEndPoint;
- (struct CGPoint)tailPoint;
- (struct CGPoint)headPoint;
- (id)layoutInfoGeometry;
- (_Bool)pathIsLineSegment;
- (_Bool)pathIsOpen;
- (id)smartPathSource;
- (struct CGRect)pathBoundsWithoutStroke;
- (struct CGRect)pathBounds;
- (id)path;
- (id)editablePathSource;
- (id)pathSource;
- (id)shapeInfo;
- (_Bool)isStrokeBeingManipulated;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
- (id)stroke;
- (struct CGRect)boundsForStandardKnobs;
- (void)processChangedProperty:(int)arg1;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (void)setGeometry:(id)arg1;
- (struct CGAffineTransform)computeLayoutTransform;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (id)textWrapperForExteriorWrap;

@end

__attribute__((visibility("hidden")))
@interface TSDEditorController : NSObject
{
    TSKDocumentRoot *mDocumentRoot;
    NSMutableArray *mEditorStack;
    NSObject<TSDEditor> *mTextInputEditor;
    unsigned long long mTransactionLevel;
    _Bool mDidChangeTextInputEditor;
    _Bool mDidChangeCurrentEditors;
    _Bool mNotifiedWillChangeTextInputEditor;
    _Bool mNotifiedWillChangeCurrentEditors;
    _Bool mIsReentrantResigningTextInputEditors;
    NSMutableArray *mResignedTextInputEditors;
    NSMutableDictionary *mInspectorPropertyValueMap;
    unsigned long long mChangingCurrentEditorsWhenCommittingInspectorChangesCount;
}

- (void)p_didChangeCurrentEditors;
- (void)p_willChangeCurrentEditors;
- (void)p_willChangeCurrentEditorsWithNewEditors:(id)arg1;
- (void)p_didChangeTextInputEditor;
- (void)p_willChangeTextInputEditor;
- (void)p_setTextInputEditor:(id)arg1;
- (void)editorDidChangeSelectionAndWantsKeyboard:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)editorSelectionWasForciblyChanged:(id)arg1;
- (void)editorDidChangeSelection:(id)arg1 withSelectionFlags:(unsigned long long)arg2;
- (void)didChangeCurrentEditorsWhenCommittingInspectorChanges;
- (void)willChangeCurrentEditorsWhenCommittingInspectorChanges;
@property(readonly, nonatomic, getter=isChangingCurrentEditorsWhenCommittingInspectorChanges) _Bool changingCurrentEditorsWhenCommittingInspectorChanges;
- (id)objectForInspectorPropertyKey:(id)arg1;
- (void)removeObjectForInspectorPropertyKey:(id)arg1;
- (void)setObject:(id)arg1 forInspectorPropertyKey:(id)arg2;
- (void)popToEditor:(id)arg1;
- (id)mostSpecificEditorConformingToProtocol:(id)arg1;
- (id)currentEditorsConformingToProtocol:(id)arg1;
- (id)mostSpecificCurrentEditorOfClass:(Class)arg1 conformingToProtocol:(id)arg2;
- (id)mostSpecificCurrentEditorOfClass:(Class)arg1;
- (id)currentEditorsOfClass:(Class)arg1;
- (void)enumerateEditorsOnStackUsingBlock:(CDUnknownBlockType)arg1;
- (void)notifyResignedTextInputEditors;
- (void)endTransaction;
- (void)beginTransaction;
- (void)popEditor:(id)arg1 andPushTextInputEditor:(id)arg2;
- (void)popEditor:(id)arg1;
- (void)pushEditor:(id)arg1;
- (_Bool)anyEditorProhibitsAction:(SEL)arg1;
- (id)editorForEditAction:(SEL)arg1 withSender:(id)arg2 response:(int *)arg3;
- (id)editorForEditAction:(SEL)arg1 withSender:(id)arg2;
- (void)setTextInputEditor:(id)arg1;
- (id)textInputEditor;
- (id)currentEditors;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDCanvasSelection : TSKSelection <TSDCanvasSelection, NSCopying>
{
    NSSet *mInfos;
    TSDDrawableInfo<TSDContainerInfo> *mContainer;
}

+ (id)emptySelection;
+ (Class)archivedSelectionClass;
@property(readonly, nonatomic) TSDDrawableInfo<TSDContainerInfo> *container; // @synthesize container=mContainer;
@property(readonly, copy) NSString *description;
- (id)copyExcludingInfo:(id)arg1;
- (id)copyIncludingInfo:(id)arg1;
- (_Bool)containsUnlockedKindOfClass:(Class)arg1;
@property(readonly, nonatomic) unsigned long long unlockedInfoCount;
@property(readonly, nonatomic) NSSet *unlockedInfos;
- (_Bool)containsKindOfClass:(Class)arg1;
- (id)infosOfClass:(Class)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned long long infoCount;
@property(readonly, nonatomic) NSSet *infos;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithInfos:(id)arg1;
- (id)initWithInfos:(id)arg1 andContainer:(id)arg2;
- (void)saveToArchive:(struct CanvasSelectionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct CanvasSelectionArchive *)arg1 unarchiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDKnob : NSObject
{
    int mType;
    struct CGPoint mPosition;
    _Bool mOffsetValid;
    struct CGPoint mOffset;
    double mRadius;
    unsigned long long mTag;
    TSDRep *mRep;
    _Bool mWorksWhenRepLocked;
    _Bool mWorksWhenInVersionBrowsingMode;
    _Bool mShouldDisplayDirectlyOverRep;
    CALayer *mLayer;
    TSDBezierPath *mHitRegionPath;
    CAShapeLayer *mHitRegionLayer;
}

@property(readonly, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
@property(copy, nonatomic) TSDBezierPath *hitRegionPath; // @synthesize hitRegionPath=mHitRegionPath;
@property(nonatomic) _Bool shouldDisplayDirectlyOverRep; // @synthesize shouldDisplayDirectlyOverRep=mShouldDisplayDirectlyOverRep;
@property(nonatomic) _Bool worksWhenInVersionBrowsingMode; // @synthesize worksWhenInVersionBrowsingMode=mWorksWhenInVersionBrowsingMode;
@property(nonatomic) _Bool worksWhenRepLocked; // @synthesize worksWhenRepLocked=mWorksWhenRepLocked;
@property(nonatomic) unsigned long long tag; // @synthesize tag=mTag;
@property(nonatomic) double radius; // @synthesize radius=mRadius;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=mOffset;
@property(nonatomic) _Bool offsetValid; // @synthesize offsetValid=mOffsetValid;
@property(nonatomic) struct CGPoint position; // @synthesize position=mPosition;
@property(nonatomic) int type; // @synthesize type=mType;
- (struct CGPoint)pixelAlignedScaledCanvasCenterPositionFromKnobPosition:(struct CGPoint)arg1;
- (id)description;
- (_Bool)obscuresKnob:(id)arg1;
- (_Bool)overlapsWithKnob:(id)arg1;
- (void)updateHitRegionPathForRep:(id)arg1;
- (double)i_rotationInDegreesForKnobOnRep:(id)arg1;
- (struct CGRect)boundingBoxOfHitRegionForRep:(id)arg1 scale:(double)arg2;
- (id)hitRegionLayerForRep:(id)arg1;
@property(readonly, nonatomic) CALayer *layer;
- (id)knobImage;
- (int)dragType;
- (_Bool)isHitByUnscaledPoint:(struct CGPoint)arg1 andRep:(id)arg2 returningDistance:(double *)arg3;
- (_Bool)isHitByUnscaledPoint:(struct CGPoint)arg1 andRep:(id)arg2;
- (id)init;
- (void)dealloc;
- (id)initWithType:(int)arg1 position:(struct CGPoint)arg2 radius:(double)arg3 tag:(unsigned long long)arg4 onRep:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDUserDefinedGuideController : NSObject <TSDDecorator, TSKChangeSourceObserver>
{
    TSDInteractiveCanvasController *_icc;
    _Bool _editingGuides;
    _Bool _tornDown;
    NSArray *_currentGuides;
}

@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=_icc;
- (id)decoratorOverlayLayers;
- (void)deleteGuide:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2;
- (void)changeOrientationOfGuide:(id)arg1 toType:(int)arg2 atUnscaledPoint:(struct CGPoint)arg3;
- (void)replaceGuide:(id)arg1 fromStorage:(id)arg2 atUnscaledPoint:(struct CGPoint)arg3;
- (double)positionForGuideType:(int)arg1 atPoint:(struct CGPoint)arg2 inStorage:(id)arg3;
- (id)guideStorageAtPoint:(struct CGPoint)arg1;
- (void)updateCurrentGuides;
@property(readonly, nonatomic) NSArray *currentGuides; // @synthesize currentGuides=_currentGuides;
- (_Bool)shouldShowUserDefinedGuides;
- (void)hideGuides;
- (void)showGuides;
- (void)endEditingGuides;
- (void)beginEditingGuides;
- (id)guideClosestToPoint:(struct CGPoint)arg1 distance:(double *)arg2 requiresSpecifiedType:(_Bool)arg3 desiredType:(int)arg4;
- (id)currentGuidesForHitTestingAtPoint:(struct CGPoint)arg1;
- (void)p_hideUserDefinedGuides;
- (void)p_showUserDefinedGuides;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithInteractiveCanvasController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDBezierPathSource : TSDPathSource <TSDMixing>
{
    TSDBezierPath *mPath;
    _Bool mIsRectangular;
    struct CGSize mNaturalSize;
}

+ (id)pathSourceWithBezierPath:(id)arg1;
@property(nonatomic) struct CGSize naturalSize; // @synthesize naturalSize=mNaturalSize;
- (void)p_setBezierPath:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isCircular;
- (_Bool)isRectangularForever;
- (_Bool)isRectangular;
- (id)bezierPathWithoutFlips;
- (struct CGAffineTransform)transformToNaturalSize;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithNaturalSize:(struct CGSize)arg1;
- (id)initWithBezierPath:(id)arg1;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (void)saveToArchive:(struct PathSourceArchive *)arg1 andBezierArchive:(struct BezierPathSourceArchive *)arg2;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1 andBezierArchive:(const struct BezierPathSourceArchive *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDImageRep : TSDMediaRep <TSDMagicMoveMatching, TSDShapeControlRep>
{
    TSDLayoutGeometry *mLastImageGeometryInRoot;
    TSDLayoutGeometry *mLastMaskGeometryInRoot;
    struct CGAffineTransform mLastLayoutToImageTransform;
    struct CGRect mFrameInUnscaledCanvasRelativeToSuper;
    _Bool mFrameInUnscaledCanvasIsValid;
    CALayer *mContentsLayer;
    CAShapeLayer *mMaskPathLayer;
    CAShapeLayer *mIAMaskLayer;
    CAShapeLayer *mMaskSublayer;
    struct CGAffineTransform mLastPictureFrameLayerTransform;
    _Bool mDirectlyManagesLayerContent;
    _Bool mShowImageHighlight;
    _Bool mInInstantAlphaMode;
    TSDInstantAlphaTracker *mInstantAlphaTracker;
    struct CGImage *mInstantAlphaImage;
    struct CGAffineTransform mBaseMaskLayoutTransform;
    NSRecursiveLock *mLayerUpdateAndSizingStateLock;
    TSDImageRepSizingState *mSizingState;
    _Bool mSizingStateReady;
    NSObject<OS_dispatch_queue> *mSizedImageAccessQueue;
    struct CGImage *mSizedImage;
    struct CGSize mSizedImageSize;
    long long mSizedImageOrientation;
    _Bool mSizedImageHasMaskBakedIn;
    _Bool mSizedImageHasAdjustmentsBakedIn;
    struct CGPath *mSizedImageMaskPath;
    NSCache *mHitTestCache;
    long long mHitTestCacheOnce;
    NSMutableArray *mUpdateFromLayoutBlocks;
    NSObject<OS_dispatch_semaphore> *mUpdateFromLayoutBlocksLock;
}

+ (struct CGPath *)p_newPathToBakeIntoSizedImageForSize:(struct CGSize)arg1 withImageLayout:(id)arg2 orientation:(long long)arg3;
+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(readonly, nonatomic) TSDInstantAlphaTracker *instantAlphaTracker; // @synthesize instantAlphaTracker=mInstantAlphaTracker;
- (void)p_popoverViewPresented:(id)arg1;
- (void)p_hitCacheSetCachedValue:(_Bool)arg1 forPoint:(struct CGPoint)arg2;
- (_Bool)p_hitCacheGetCachedValue:(_Bool *)arg1 forPoint:(struct CGPoint)arg2;
- (void)p_invalidateHitTestCache;
- (_Bool)shouldShowMediaReplaceUI;
- (double)additionalRotationForKnobOrientation;
- (void)addKnobsToArray:(id)arg1;
- (void)updatePositionsOfKnobs:(id)arg1;
- (_Bool)shouldCreateSelectionKnobs;
- (_Bool)shouldShowSmartMaskKnobs;
- (_Bool)p_PDFWantsToForceTiling;
- (_Bool)p_shouldRenderWithMaskToBounds;
- (_Bool)p_shouldBakeMaskIntoSizedImage;
- (void)p_invalidateSizedImageFromQueue;
- (void)p_invalidateSizedImage;
- (void)p_takeSizedImageFromState;
- (void)p_takeSizedImageFromStateIfReady;
- (void)p_didGenerateSizedImageInBackground;
- (void)i_willEnterForeground;
- (void)p_generateSizedImageInBackground:(id)arg1;
- (void)p_generateSizedImage:(id)arg1;
- (void)p_startSizing;
- (void)p_generateSizedImageIfNecessary;
- (_Bool)p_okayToGenerateSizedImage;
- (struct CGSize)p_desiredSizedImageSize;
- (_Bool)shouldShowReflection;
- (_Bool)shouldShowShadow;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (_Bool)p_drawsInOneStep;
- (void)p_updateMaskSublayersForMaskEditMode;
- (void)p_createMaskLayerForLayer:(id)arg1;
- (void)p_disposeMaskLayer;
- (void)p_disposeStrokeLayer;
- (void)p_updateHUD;
- (void)p_cleanUpMaskModeUI;
- (void)p_setUpMaskModeUI;
- (void)p_endEditingMask;
- (void)p_setDefaultMaskWithActionString:(id)arg1;
- (id)p_validatedThumbnailImageProvider;
- (id)p_validatedBitmapImageProvider;
- (id)p_validatedImageProvider;
- (id)p_imageProvider;
- (id)p_imageData;
- (id)textureForContext:(id)arg1;
- (_Bool)p_shouldUseSourceImageForContext:(id)arg1 clipBounds:(struct CGRect)arg2 transform:(struct CGAffineTransform)arg3 image:(struct CGImage *)arg4;
- (void)setTextureAttributes:(id)arg1;
- (void)viewScaleDidChange;
- (id)additionalLayersOverLayer;
- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;
- (void)p_updateMaskLayer:(id)arg1 forRepLayer:(id)arg2 shouldIncludeMask:(_Bool)arg3 shouldIncludeInstantAlpha:(_Bool)arg4;
- (_Bool)p_shouldMaskWithFrameLayers;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)p_getAliasedValuesForMaskToBoundsDirectLayerFrame:(out struct CGRect *)arg1 transform:(out struct CGAffineTransform *)arg2;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGImage *)p_newImageByApplyingAdjustmentsToImage:(struct CGImage *)arg1 alreadyEnhanced:(_Bool)arg2;
- (_Bool)p_directlyManagesContentForLayer:(id)arg1;
- (long long)p_orientationForDirectlyManagedLayer;
- (struct CGImage *)p_imageForDirectlyManagedLayer:(id)arg1;
- (void)p_updateDirectlyManagesLayerContentForLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 withIAMask:(_Bool)arg6 forLayer:(_Bool)arg7 forShadow:(_Bool)arg8 forHitTest:(_Bool)arg9;
- (_Bool)canDrawInParallel;
- (id)imageOfStroke:(struct CGRect *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)endInstantAlphaMode;
- (struct CGImage *)imageForInstantAlpha;
- (void)beginInstantAlphaMode;
- (void)beginEditingMaskInMaskEditMode;
- (void)beginEditingImageInMaskEditMode;
- (void)dynamicMoveSmartShapeKnobDidEndWithTracker:(id)arg1;
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;
- (void)dynamicMoveSmartShapeKnobDidBegin;
- (struct CGPoint)centerForGuideLayerPlacement;
- (struct CGPoint)unscaledGuidePosition;
- (double)angleForRotation;
- (struct CGPoint)centerForRotation;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (_Bool)wantsGuidesWhileResizing;
- (id)infoForTransforming;
- (_Bool)demandsExclusiveSelection;
- (_Bool)allowDragDelegate;
- (struct CGPoint)i_dragOffset;
- (struct CGRect)snapRectForDynamicDragWithOffset:(struct CGPoint)arg1;
- (_Bool)resetGuidesAfterDragAfterReset;
- (_Bool)exclusivelyProvidesGuidesWhileAligning;
- (_Bool)providesGuidesWhileAligning;
- (void)dynamicDragDidBegin;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (id)commandToResetToSize:(struct CGSize)arg1;
- (_Bool)shouldAllowReplacementFromPaste;
- (struct CGAffineTransform)transformForHighlightLayer;
- (struct CGRect)boundsForHighlightLayer;
- (struct CGPoint)positionOfStandardKnob:(id)arg1 forBounds:(struct CGRect)arg2;
- (struct CGRect)boundsForStandardKnobs;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)wantsToDistortWithImagerContext;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (int)tilingMode;
- (id)overlayLayers;
- (void)willBeginEyedropperMode;
- (void)willBeginReadMode;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (void)processChangedProperty:(int)arg1;
- (void)processChanges:(id)arg1;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)becameNotSelected;
- (void)willBeRemoved;
- (void)p_canvasSelectionDidChange:(id)arg1;
- (void)resetMask;
- (void)editMaskWithHUD:(_Bool)arg1;
- (void)endEditingMask;
- (void)endDynamicallyChangingMaskScale:(double)arg1;
- (void)dynamicallySetMaskScale:(double)arg1;
- (void)beginDynamicallyChangingMaskScale;
- (void)maskScaleLimitsReturningMin:(double *)arg1 max:(double *)arg2;
- (double)maskScale;
- (void)maskWithHUD:(_Bool)arg1;
- (void)unhighlightImage;
- (void)highlightImage;
- (id)maskLayout;
- (id)maskInfo;
- (id)imageLayout;
- (id)imageInfo;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDImageInfo : TSDMediaInfo <TSDContainerInfo, TSDMixing, TSSPresetSource, TSSThemedObject, TSKTransformableObject, TSDReducableInfo>
{
    TSPData *mImageData;
    TSPData *mThumbnailImageData;
    TSPData *mOriginalImageData;
    _Bool mInterpretsUntaggedImageDataAsGeneric;
    TSDImageAdjustments *mImageAdjustments;
    TSPData *mAdjustedImageData;
    TSPData *mThumbnailAdjustedImageData;
    TSPData *mEnhancedImageData;
    TSDMediaStyle *mStyle;
    TSDMaskInfo *mMaskInfo;
    TSDBezierPath *mInstantAlphaPath;
    TSDBezierPath *mTracedPath;
    struct CGSize mNaturalSize;
}

+ (id)presetKinds;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)bootstrapPropertyMapForPresetIndex:(unsigned long long)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (void)adjustIncomingImageGeometry:(id)arg1 maskGeometry:(id)arg2 forImageData:(id)arg3 maskedWithInstantAlphaPath:(id)arg4 withNaturalSize:(struct CGSize)arg5 forTargetImageGeometry:(id)arg6 withTargetMaskGeometry:(id)arg7;
+ (id)resampleAndConvertImageDataToSRGB:(id)arg1 resampled:(_Bool *)arg2;
@property(retain, nonatomic) TSPData *thumbnailAdjustedImageData; // @synthesize thumbnailAdjustedImageData=mThumbnailAdjustedImageData;
@property(retain, nonatomic) TSPData *adjustedImageData; // @synthesize adjustedImageData=mAdjustedImageData;
@property(copy, nonatomic) TSDImageAdjustments *imageAdjustments; // @synthesize imageAdjustments=mImageAdjustments;
@property(retain, nonatomic) TSDBezierPath *instantAlphaPath; // @synthesize instantAlphaPath=mInstantAlphaPath;
@property(retain, nonatomic) TSDMaskInfo *maskInfo; // @synthesize maskInfo=mMaskInfo;
- (id)style;
@property(retain, nonatomic) TSPData *originalImageData; // @synthesize originalImageData=mOriginalImageData;
@property(retain, nonatomic) TSPData *thumbnailImageData; // @synthesize thumbnailImageData=mThumbnailImageData;
@property(retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)acceptVisitor:(id)arg1;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@property(nonatomic) struct CGSize naturalSize;
@property(readonly, nonatomic) TSDBezierPath *tracedPath;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (struct CGPoint)centerForReplacingWithNewMedia;
@property(readonly, nonatomic) _Bool canPasteAsPDF;
- (_Bool)isPDF;
- (id)updatedMaskInfoGeometryForImageDraggedBy:(struct CGPoint)arg1;
- (id)defaultMaskInfo;
- (id)defaultMaskInfoWithContext:(id)arg1;
- (_Bool)maskCanBeReset;
- (_Bool)isMasked;
- (id)objectForProperty:(int)arg1;
- (void)p_setAdjustedImageData:(id)arg1 thumbnailData:(id)arg2;
- (struct CGSize)rawDataSize;
- (struct CGSize)defaultOriginalSize;
- (struct CGSize)originalSize;
- (void)setStyle:(id)arg1;
- (id)i_thumbnailForImageData:(id)arg1;
- (void)p_setImageData:(id)arg1 thumbnailData:(id)arg2;
@property(nonatomic) _Bool interpretsUntaggedImageDataAsGeneric;
- (id)mediaFileType;
- (id)mediaDisplayName;
- (id)commandToReplaceImageData:(id)arg1 withReducedImageData:(id)arg2 associatedHint:(id)arg3;
- (struct CGSize)targetSizeForImageData:(id)arg1 associatedHint:(id)arg2;
- (id)imageDatasForReducingFileSizeWithAssociatedHints;
- (struct CGAffineTransform)computeFullTransform;
- (id)geometryWithMask;
- (id)childInfos;
- (id)styleIdentifierTemplateForNewPreset;
- (id)commandToFlipWithOrientation:(int)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) TSDMediaStyle *imageStyle;
- (id)presetKind;
- (Class)repClass;
- (Class)layoutClass;
- (Class)styleClass;
- (void)setExteriorTextWrap:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)copyWithContext:(id)arg1 style:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 thumbnailImageData:(id)arg5 originalImageData:(id)arg6 imageAdjustments:(id)arg7 adjustedImageData:(id)arg8 thumbnailAdjustedImageData:(id)arg9;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 imageData:(id)arg4 originalImageData:(id)arg5;
@property(retain, nonatomic) TSPData *enhancedImageData;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ImageArchive *)arg1 archiver:(id)arg2;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (void)p_upgradeImageThumbnail;
- (void)p_upgradeImageGeometry;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ImageArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDCurveFitter : NSObject
{
    double mErrorDistance;
    long long mErrorIterations;
}

+ (id)curveFitter;
@property(nonatomic) long long errorIterations; // @synthesize errorIterations=mErrorIterations;
@property(nonatomic) double errorDistance; // @synthesize errorDistance=mErrorDistance;
- (void)fitCurveToPointArray:(CDStruct_c3b9c2ee *)arg1 count:(long long)arg2 bezierCallback:(CDUnknownFunctionPointerType)arg3 context:(void *)arg4;
- (void)fitCurveToPoints:(id)arg1 bezierCallback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (id)bezierPathFittingPointArray:(CDStruct_c3b9c2ee *)arg1 count:(long long)arg2;
- (id)bezierPathFittingPoints:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDBezierPath : NSObject <NSCopying, NSCoding>
{
    long long sfr_elementCount;
    long long sfr_elementMax;
    struct PATHSEGMENT *sfr_head;
    double *sfr_elementLength;
    double sfr_totalLength;
    long long sfr_lastSubpathIndex;
    void *sfr_extraSegments;
    double sfr_lineWidth;
    struct CGRect sfr_controlPointBounds;
    double sfr_miterLimit;
    double sfr_flatness;
    double *sfr_dashedLinePattern;
    unsigned long long sfr_dashedLineCount;
    double sfr_dashedLinePhase;
    void *sfr_path;
    long long sfr_extraSegmentCount;
    long long sfr_extraSegmentMax;
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;
}

+ (double)defaultLineWidth;
+ (void)setDefaultLineWidth:(double)arg1;
+ (unsigned long long)defaultLineJoinStyle;
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultLineCapStyle;
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultWindingRule;
+ (void)setDefaultWindingRule:(unsigned long long)arg1;
+ (double)defaultFlatness;
+ (void)setDefaultFlatness:(double)arg1;
+ (double)defaultMiterLimit;
+ (void)setDefaultMiterLimit:(double)arg1;
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (void)clipRect:(struct CGRect)arg1;
+ (void)strokeRect:(struct CGRect)arg1;
+ (void)fillRect:(struct CGRect)arg1;
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;
+ (id)bezierPath;
+ (void)initialize;
+ (double)lineWidth;
+ (void)setLineWidth:(double)arg1;
+ (unsigned long long)lineJoinStyle;
+ (void)setLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)lineCapStyle;
+ (void)setLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)windingRule;
+ (void)setWindingRule:(unsigned long long)arg1;
+ (double)flatness;
+ (void)setFlatness:(double)arg1;
+ (double)miterLimit;
+ (void)setMiterLimit:(double)arg1;
+ (id)bezierPathWithConvexHullOfPoints:(struct CGPoint *)arg1 count:(unsigned long long)arg2;
+ (id)smoothBezierPath:(id)arg1 withThreshold:(double)arg2;
+ (id)exteriorOfBezierPath:(id)arg1;
+ (id)outsideEdgeOfBezierPath:(id)arg1;
+ (id)outlineBezierPath:(id)arg1 withThreshold:(double)arg2;
+ (id)outlineBezierPath:(id)arg1;
+ (id)appendBezierPaths:(id)arg1;
+ (id)excludeBezierPaths:(id)arg1;
+ (id)subtractBezierPaths:(id)arg1;
+ (id)intersectBezierPaths:(id)arg1;
+ (id)uniteBezierPaths:(id)arg1;
+ (id)p_booleanWithBezierPaths:(id)arg1 operation:(int)arg2;
+ (struct CGRect)p_pathToBounds:(Path_1b135553 *)arg1;
+ (id)p_pathToBezier:(Path_1b135553 *)arg1;
+ (Path_1b135553 *)p_bezierToPath:(id)arg1;
+ (id)tracedPathForInstantAlphaBinaryBitmap:(id)arg1 pointSpacing:(double)arg2;
+ (id)tracedPathForImage:(struct CGImage *)arg1 alphaThreshold:(double)arg2 pointSpacing:(double)arg3;
- (id)initWithCString:(const char *)arg1;
- (const char *)cString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)_appendToPath:(id)arg1;
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1;
- (long long)elementCount;
- (double)lengthToElement:(long long)arg1;
- (double)lengthOfElement:(long long)arg1;
- (double)length;
- (void)calculateLengths;
- (double)calculateLengthOfElement:(long long)arg1;
- (_Bool)isClockwise;
- (_Bool)isFlat;
- (struct CGRect)bounds;
- (struct CGRect)controlPointBounds;
- (struct CGPoint)currentPoint;
- (_Bool)isEmpty;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (_Bool)isDiamond;
- (_Bool)isTriangular;
- (struct CGPath *)CGPath;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPathByReversingPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByFlatteningPath;
- (void)flattenIntoPath:(id)arg1;
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)addClip;
- (void)fill;
- (void)stroke;
- (void)_doPath;
- (struct CGPoint)_checkPointForValidity:(struct CGPoint)arg1;
- (_Bool)_isValid:(double)arg1;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)setFlatness:(double)arg1;
- (double)flatness;
- (void)setMiterLimit:(double)arg1;
- (double)miterLimit;
- (void)setWindingRule:(unsigned long long)arg1;
- (unsigned long long)windingRule;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineWidth:(double)arg1;
- (double)lineWidth;
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)relativeLineToPoint:(struct CGPoint)arg1;
- (void)relativeMoveToPoint:(struct CGPoint)arg1;
- (void)removeAllPoints;
- (void)closePath;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)chisel;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;
- (float)curvatureAt:(float)arg1;
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;
- (struct CGPoint)myGradientAt:(float)arg1;
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;
- (struct CGPoint)gradientAt:(float)arg1;
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;
- (id)pressure;
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;
- (void)_deviceClosePath;
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)_deviceLineToPoint:(struct CGPoint)arg1;
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;
- (id)description;
- (id)aliasedPathWithViewScale:(float)arg1 effectiveStrokeWidth:(float)arg2;
- (id)aliasedPathInContext:(struct CGContext *)arg1 effectiveStrokeWidth:(float)arg2;
- (id)p_aliasedPathInContext:(struct CGContext *)arg1 viewScale:(float)arg2 effectiveStrokeWidth:(float)arg3;
- (struct CGPoint)roundPoint:(struct CGPoint)arg1 inContext:(struct CGContext *)arg2 strokeWidth:(int)arg3;
- (void)addPathToContext:(struct CGContext *)arg1;
- (_Bool)intersectsRect:(struct CGRect)arg1 hasFill:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isLineSegment;
@property(readonly, nonatomic) _Bool isOpen;
- (id)pathByWobblingByUpTo:(double)arg1 subdivisions:(unsigned long long)arg2;
- (void)clearStroke:(struct CGContext *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)intersectBezierPath:(id)arg1;
- (id)subtractBezierPath:(id)arg1;
- (id)uniteWithBezierPath:(id)arg1;
- (id)outlineStroke;
- (id)bezierPathByOffsettingPath:(double)arg1 joinStyle:(unsigned long long)arg2 withThreshold:(double)arg3;
- (id)p_beziersFromSegmentIntersections:(id)arg1;
- (id)p_pathAsSegments;
- (id)bezierPathByRemovingRedundantElements;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;
@property(readonly, nonatomic) _Bool containsClosePathElement;
@property(readonly, nonatomic) _Bool isEffectivelyClosed;
- (struct CGPoint)pointAlongPathAtPercentage:(double)arg1;
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;
- (_Bool)pointOnPath:(struct CGPoint)arg1 tolerance:(double)arg2;
- (struct CGRect)boundsIncludingTSDStroke:(id)arg1;
- (struct CGRect)boundsIncludingStroke;
- (struct CGRect)boundsIncludingStrokeWidth:(double)arg1 joinStyle:(unsigned long long)arg2 capStyle:(unsigned long long)arg3 miterLimit:(double)arg4 needsToExtendJoins:(_Bool)arg5;
- (struct CGRect)_addMitersFromSegments:(id)arg1 toRect:(struct CGRect)arg2;
- (void)takeAttributesFromStroke:(id)arg1;
@property(readonly, nonatomic) _Bool isSelfIntersecting;
@property(readonly, nonatomic) _Bool isCompound;
- (void)alignBoundsToOrigin;
- (double)yValueFromXValue:(double)arg1;
- (id)pathBySplittingAtPointOnPath:(struct CGPoint)arg1;
- (double)yValueFromXValue:(double)arg1 elementIndex:(long long *)arg2 parametricValue:(double *)arg3;
- (id)bezierPathByFittingCurve:(id)arg1;
- (id)bezierPathByFittingCurve;
- (void)saveToArchive:(struct Path *)arg1;
- (id)initWithArchive:(const struct Path *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDKnobTracker : NSObject <TSDLayoutManipulatingTracker>
{
    TSDRep *mRep;
    TSDKnob *mKnob;
    struct CGPoint mCurrentPosition;
    struct CGPoint mKnobOffset;
    _Bool mDidBegin;
    _Bool mDidDrag;
    _Bool mDragEnding;
    _Bool mEndedOperationDueToESC;
    _Bool mIsInspectorDrivenTracking;
    TSDAutoscroll *mAutoscroll;
}

@property(retain, nonatomic) TSDAutoscroll *autoscroll; // @synthesize autoscroll=mAutoscroll;
@property(readonly, nonatomic) struct CGPoint knobOffset; // @synthesize knobOffset=mKnobOffset;
@property(readonly, nonatomic) _Bool endedOperationDueToESC; // @synthesize endedOperationDueToESC=mEndedOperationDueToESC;
@property(nonatomic) _Bool dragEnding; // @synthesize dragEnding=mDragEnding;
@property(nonatomic) struct CGPoint currentPosition; // @synthesize currentPosition=mCurrentPosition;
@property(nonatomic) _Bool didDrag; // @synthesize didDrag=mDidDrag;
@property(readonly, nonatomic) _Bool didBegin; // @synthesize didBegin=mDidBegin;
@property(retain, nonatomic) TSDKnob *knob; // @synthesize knob=mKnob;
@property(nonatomic) _Bool isInspectorDrivenTracking; // @synthesize isInspectorDrivenTracking=mIsInspectorDrivenTracking;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(id)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (int)allowedAutoscrollDirections;
- (double)unscaledStartAutoscrollThreshold;
- (void)autoscrollWillNotStart;
- (void)updateAfterAutoscroll:(id)arg1;
- (_Bool)wantsAutoscroll;
- (void)i_resetCurrentPositionToKnobPositionIfAppropriate;
- (void)i_setKnobOffset:(struct CGPoint)arg1;
- (void)willEndMovingKnobDueToESC;
- (_Bool)shouldEndMovingKnobOnESC;
- (_Bool)shouldUseKnobOffset;
- (_Bool)allowHUDToDisplay;
- (_Bool)shouldHideSelectionHighlight;
- (_Bool)shouldHideOtherKnobs;
- (unsigned long long)enabledKnobMask;
- (struct CGAffineTransform)transformInRootForStandardKnobs;
- (struct CGRect)currentBoundsForStandardKnobs;
- (void)endMovingKnob;
- (void)beginMovingKnob;
- (struct CGPoint)convertKnobPositionFromUnscaledCanvas:(struct CGPoint)arg1;
- (struct CGPoint)convertKnobPositionToUnscaledCanvas:(struct CGPoint)arg1;
- (void)moveKnobToCanvasPosition:(struct CGPoint)arg1;
- (void)moveKnobToRepPosition:(struct CGPoint)arg1;
@property(readonly, nonatomic) double delay;
@property(readonly, nonatomic) TSDInteractiveCanvasController *icc;
- (void)dealloc;
- (id)initWithRep:(id)arg1 knob:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDAdjustablePathController : NSObject
{
    TSDShapeRep *mRep;
}

@property(readonly, nonatomic) TSDShapeRep *rep; // @synthesize rep=mRep;
@property(readonly, nonatomic) TSDPathSource *pathSource;
- (void)setGeometry:(id)arg1 previousGeometry:(id)arg2;
- (void)mouseDown:(id)arg1 onControlKnob:(unsigned long long)arg2;
- (void)moveControlKnob:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)positionOfKnob:(unsigned long long)arg1 transformed:(_Bool)arg2;
- (void)drawBorder;
@property(readonly, nonatomic) unsigned long long enabledKnobs;
- (unsigned long long)knobUnderPoint:(struct CGPoint)arg1;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDBezierNode : NSObject
{
    struct CGPoint mIn;
    struct CGPoint mNode;
    struct CGPoint mOut;
    int mReflectedState;
    _Bool mSelected;
    int mType;
}

+ (id)bezierNodeWithPoint:(struct CGPoint)arg1 inControlPoint:(struct CGPoint)arg2 outControlPoint:(struct CGPoint)arg3;
+ (id)bezierNodeWithPoint:(struct CGPoint)arg1;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=mSelected;
@property(nonatomic) int type; // @synthesize type=mType;
@property(nonatomic) int reflectedState; // @synthesize reflectedState=mReflectedState;
@property(nonatomic) struct CGPoint outControlPoint; // @synthesize outControlPoint=mOut;
@property(nonatomic) struct CGPoint inControlPoint; // @synthesize inControlPoint=mIn;
@property(nonatomic) struct CGPoint nodePoint; // @synthesize nodePoint=mNode;
- (id)description;
- (id)typeString;
- (id)reflectedStateString;
- (_Bool)underPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)swapControlPoints;
- (void)updateReflectedState;
@property(readonly, nonatomic) _Bool isCollapsed;
- (void)collapse;
- (void)setInControlPointFromReflection:(struct CGPoint)arg1 constrain:(_Bool)arg2;
- (void)setOutControlPoint:(struct CGPoint)arg1 reflect:(int)arg2 constrain:(_Bool)arg3;
- (void)setInControlPoint:(struct CGPoint)arg1 reflect:(int)arg2 constrain:(_Bool)arg3;
- (void)moveToPoint:(struct CGPoint)arg1;
- (void)setNode:(struct CGPoint)arg1;
- (void)balanceControlPoints;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDBezierSubpath : NSObject
{
    NSMutableArray *mNodes;
    _Bool mClosed;
}

@property(nonatomic, getter=isClosed) _Bool closed; // @synthesize closed=mClosed;
@property(retain, nonatomic) NSMutableArray *nodes; // @synthesize nodes=mNodes;
- (void)convertToHobby;
- (id)splitEdgeAtIndex:(unsigned long long)arg1 atPercentage:(double)arg2;
- (void)addNodesToArray:(id)arg1;
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (void)smoothNode:(id)arg1;
- (void)sharpenAllNodes;
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)insertNodeAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (double)distanceToPoint:(struct CGPoint)arg1 elementIndex:(unsigned long long *)arg2 tValue:(double *)arg3 threshold:(double)arg4;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)deleteSelectedNodes;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
- (void)removeNode:(id)arg1;
@property(readonly, nonatomic) _Bool hasSelectedNode;
@property(readonly, nonatomic) _Bool allNodesSelected;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;
- (id)nodePriorToNode:(id)arg1;
- (void)removeLastNode;
- (void)addNode:(id)arg1;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)reverseDirection;
- (void)updateReflectedState;
- (void)appendToBezierPath:(id)arg1;
- (void)appendToBezierPath:(id)arg1 selectedNodesOnly:(_Bool)arg2 fromIndex:(unsigned long long)arg3;
@property(readonly, nonatomic) TSDBezierPath *bezierPath;
- (_Bool)isCircular;
@property(readonly, nonatomic) _Bool isRectangular;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)addTemporarySmoothNodes;
- (void)removeTemporaryNodes;
- (void)updateSmoothNodes;
- (void)updateSmoothNodes:(id)arg1 addTemporaryNodes:(_Bool)arg2;
- (long long)updateSmoothNodes:(id)arg1 from:(long long)arg2 to:(long long)arg3 closed:(_Bool)arg4 addTemporaryNodes:(_Bool)arg5;
- (void)morphWithMorphInfo:(id)arg1;
- (struct CGPoint)calculateNewControlFromOriginalDelta:(struct CGPoint)arg1 currentDelta:(struct CGPoint)arg2 originalSmoothDelta:(struct CGPoint)arg3 node:(struct CGPoint)arg4;
- (void)smoothAllNodes;

@end

__attribute__((visibility("hidden")))
@interface TSDEditableBezierPathSource : TSDPathSource <TSDRealignablePathSource, TSDMixing>
{
    NSMutableArray *mSubpaths;
    unsigned long long mActiveSubpath;
    _Bool mHasLockedFlipTransform;
    struct CGAffineTransform mLockedFlipTransform;
}

+ (id)editableBezierPathSourceWithBezierPath:(id)arg1;
+ (id)editableBezierPathSourceWithPathSource:(id)arg1;
+ (id)editableBezierPathSource;
@property(retain, nonatomic) NSMutableArray *subpaths; // @synthesize subpaths=mSubpaths;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)closePath;
- (void)smoothCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
@property(retain, nonatomic) NSArray *nodeTypes;
@property(readonly, nonatomic) struct CGPath *subpathForSelection;
- (void)cutAtSelectedNodes;
- (_Bool)canCutAtSelectedNodes;
- (void)splitSelectedNodes;
- (void)splitSelectedEdges;
- (id)splitEdge:(long long)arg1 at:(double)arg2 fromSubpath:(long long)arg3;
- (void)deleteSelectedEdges;
- (void)closeSelectedNodes;
- (_Bool)canCloseSelectedNodes;
- (void)connectSelectedNodes;
- (_Bool)canConnectSelectedNodes;
- (id)subpathsForConnectingUsingFirstSubpathFirstNode:(_Bool *)arg1 andSecondPathFirstNode:(_Bool *)arg2;
- (void)selectSubpathForNode:(id)arg1 toggle:(_Bool)arg2;
@property(nonatomic, getter=isClosed) _Bool closed;
@property(readonly, nonatomic) _Bool isOpen;
- (void)smoothAllNodes;
- (void)smoothNode:(id)arg1;
- (void)sharpenAllNodes;
- (void)toggleSelectedNodesToType:(int)arg1;
- (void)toggleNode:(id)arg1 toType:(int)arg2 prevNode:(id)arg3 nextNode:(id)arg4;
@property(readonly, nonatomic) struct CGRect nodeBounds;
- (id)insertNodeAtPoint:(struct CGPoint)arg1 tolerance:(double)arg2;
- (_Bool)bezierPathUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 tolerance:(double)arg3;
- (double)distanceToPoint:(struct CGPoint)arg1 subpathIndex:(unsigned long long *)arg2 elementIndex:(unsigned long long *)arg3 tValue:(double *)arg4 threshold:(double)arg5;
- (id)bezierNodeUnderPoint:(struct CGPoint)arg1 withTransform:(struct CGAffineTransform)arg2 andTolerance:(double)arg3 returningType:(long long *)arg4;
- (void)deselectAllNodes;
- (void)selectAllNodes;
- (void)deleteSelectedNodes;
- (void)deleteSelectedNodesForced:(_Bool)arg1;
@property(readonly, nonatomic) _Bool deletingSelectedNodesWillDeleteShape;
@property(readonly, nonatomic) _Bool canDeleteSelectedNodes;
@property(readonly, nonatomic) _Bool isCompound;
- (void)removeNode:(id)arg1;
@property(readonly, nonatomic) _Bool allNodesSelected;
@property(readonly, nonatomic) _Bool hasSelectedNode;
- (void)offsetSelectedEdgesByDelta:(struct CGPoint)arg1;
- (void)offsetSelectedNodesByDelta:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDBezierNode *lastNode;
@property(readonly, nonatomic) TSDBezierNode *firstNode;
- (id)nodeAfterNode:(id)arg1;
- (id)nodePriorToNode:(id)arg1;
- (void)removeLastNode;
- (void)addNode:(id)arg1;
- (void)adjustGeometryForAlignToOrigin:(id)arg1;
- (void)alignToOrigin;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (Class)preferredRepClass;
- (struct CGSize)naturalSize;
- (struct CGAffineTransform)pathFlipTransform;
- (void)setLockedFlipTransform:(_Bool)arg1;
- (void)reverseDirection;
@property(retain, nonatomic) NSMutableArray *nodes;
- (void)setBezierPath:(id)arg1;
- (void)convertToHobby;
- (struct CGPath *)pathWithoutFlips;
- (id)bezierPathWithoutFlips;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (void)dealloc;
@property(readonly, nonatomic) _Bool closeIfEndpointsAreEqual;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)init;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;
- (void)addTemporarySmoothNodes;
- (void)updateSmoothNodes;
- (void)morphWithMorphInfo:(id)arg1;
@property(readonly, nonatomic) _Bool isCurved;
@property(readonly, nonatomic) struct CGPoint pathDelta;
- (void)p_adjustZeroBasedPathUsingDelta:(struct CGPoint)arg1;
- (void)p_adjustZeroBasedPathUsingDeltaFromPath:(id)arg1 isAdditive:(_Bool)arg2;
- (void)truncateDelta:(struct CGPoint)arg1;
- (void)truncateDeltaFromZeroBasedPath:(id)arg1;
- (void)prependDeltaFromZeroBasedPath:(id)arg1;
- (void)translateBezierPathToStartAtZero;
- (id)editableBezierPathStartingAtZero;

@end

__attribute__((visibility("hidden")))
@interface TSDCalloutPathSource : TSDPathSource <TSDSmartPathSource, TSDMixing>
{
    double mCornerRadius;
    double mTailSize;
    struct CGPoint mTailPosition;
    struct CGSize mNaturalSize;
    _Bool mIsTailAtCenter;
}

+ (id)quoteBubbleWithTailPosition:(struct CGPoint)arg1 tailSize:(double)arg2 naturalSize:(struct CGSize)arg3;
+ (id)calloutWithCornerRadius:(double)arg1 tailPosition:(struct CGPoint)arg2 tailSize:(double)arg3 naturalSize:(struct CGSize)arg4;
- (struct CGPoint)p_getControlKnobPointForRoundedRect;
- (void)p_setControlKnobPointForRoundedRect:(struct CGPoint)arg1;
- (id)p_buildPath;
- (id)p_basePath;
- (void)p_getTailPath:(id)arg1 center:(struct CGPoint *)arg2 tailSize:(double *)arg3 intersections:(struct CGPoint [2])arg4;
- (struct CGPoint)p_adjustedCenterForPath:(id)arg1;
- (void)p_setTailAtCenter:(_Bool)arg1;
- (void)p_setNaturalSize:(struct CGSize)arg1;
- (void)p_setTailSize:(double)arg1;
- (struct CGPoint)p_tailPosition;
- (void)p_setTailPosition:(struct CGPoint)arg1;
- (void)p_setCornerRadius:(double)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (id)interiorWrapPath;
- (id)bezierPathWithoutFlips;
@property(readonly, nonatomic) _Bool isTailAtCenter;
@property(readonly, nonatomic) struct CGPoint tailCenter;
- (struct CGSize)naturalSize;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (void)setNaturalSize:(struct CGSize)arg1;
- (id)valueForSetSelector:(SEL)arg1;
@property(nonatomic) struct CGPoint tailKnobPosition;
@property(nonatomic) struct CGPoint tailSizeKnobPosition;
@property(readonly, nonatomic) double maxTailSize;
@property(nonatomic) double tailSize;
@property(readonly, nonatomic) double maxCornerRadius;
@property(nonatomic) double cornerRadius;
- (_Bool)isOval;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithCornerRadius:(double)arg1 tailPosition:(struct CGPoint)arg2 tailSize:(double)arg3 naturalSize:(struct CGSize)arg4 tailAtCenter:(_Bool)arg5;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDBezierSegment : NSObject
{
    struct CGPoint mA;
    struct CGPoint mOut;
    struct CGPoint mIn;
    struct CGPoint mB;
}

+ (id)segmentFromPoint:(struct CGPoint)arg1 outPoint:(struct CGPoint)arg2 inPoint:(struct CGPoint)arg3 toPoint:(struct CGPoint)arg4;
- (struct CGPoint)closestPointToPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointAtParametricValue:(double)arg1;
- (void)splitAtParametricValue:(double)arg1 left:(id *)arg2 right:(id *)arg3;
- (double)parametricValueForPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint outPoint;
@property(readonly, nonatomic) struct CGPoint inPoint;
@property(readonly, nonatomic) struct CGPoint toPoint;
@property(readonly, nonatomic) struct CGPoint fromPoint;
- (id)initFromPoint:(struct CGPoint)arg1 outPoint:(struct CGPoint)arg2 inPoint:(struct CGPoint)arg3 toPoint:(struct CGPoint)arg4;
@property(readonly, nonatomic) _Bool bogusSegment;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSDShapeStyle : TSSStyle <TSDMixing>
{
}

+ (id)p_magicMoveProperties;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (id)properties;
+ (void)initialize;
+ (void)saveShapeStylePropertyMap:(id)arg1 toArchive:(struct ShapeStylePropertiesArchive *)arg2 archiver:(id)arg3;
+ (void)loadShapeStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct ShapeStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (_Bool)wantsHighContrastBackgroundColor;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)saveToArchive:(struct ShapeStyleArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct ShapeStyleArchive *)arg1 unarchiver:(id)arg2;
- (const struct ShapeStyleArchive *)shapeStyleArchiveFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)fixImageFillTechniqueForSwatchOfSize:(struct CGSize)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDImageFill : TSDFill <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    TSPData *mImageData;
    TSPData *mOriginalImageData;
    _Bool mInterpretsUntaggedImageDataAsGeneric;
    int mTechnique;
    TSUColor *mTintColor;
    TSUFlushableCachedImage *mStandardSizeTintedImage;
    TSUFlushableCachedImage *mHalfSizeTintedImage;
    TSUFlushableCachedImage *mQuarterSizeTintedImage;
    TSUColor *mReferenceColor;
    struct CGSize mFillSize;
    _Bool mHasIndicatedInterestInProvider;
    NSObject<OS_dispatch_queue> *mTempRenderLock;
    struct CGImage *mTempRenderCopy;
    struct CGImage *mSourceOfTempRenderCopy;
    long long mTempRenderCount;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) _Bool interpretsUntaggedImageDataAsGeneric; // @synthesize interpretsUntaggedImageDataAsGeneric=mInterpretsUntaggedImageDataAsGeneric;
@property(readonly, copy, nonatomic) TSUColor *tintColor; // @synthesize tintColor=mTintColor;
@property(nonatomic) int technique; // @synthesize technique=mTechnique;
@property(readonly, retain, nonatomic) TSPData *originalImageData; // @synthesize originalImageData=mOriginalImageData;
@property(readonly, retain, nonatomic) TSPData *imageData; // @synthesize imageData=mImageData;
- (void)p_drawPDFWithProvider:(id)arg1 inContext:(struct CGContext *)arg2 bounds:(struct CGRect)arg3;
- (void)p_drawBitmapImage:(struct CGImage *)arg1 withOrientation:(long long)arg2 inContext:(struct CGContext *)arg3 bounds:(struct CGRect)arg4;
- (struct CGRect)p_drawnRectForImageSize:(struct CGSize)arg1 destRect:(struct CGRect)arg2 inContext:(struct CGContext *)arg3;
- (id)p_validatedImageProvider;
- (SEL)mapThemeAssetSelector;
@property(readonly, nonatomic) NSString *presetKind;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)p_quarterSizeCachedImage;
- (struct CGImage *)p_newQuarterSizeImage;
- (id)p_halfSizeCachedImage;
- (struct CGImage *)p_newHalfSizeImage;
- (id)p_standardSizeCachedImage;
- (struct CGImage *)p_newStandardSizeImage;
- (struct CGImage *)p_newTintedImageWithScale:(double)arg1;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 forShapeRep:(id)arg2 inContext:(struct CGContext *)arg3;
- (void)p_paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)p_sizeOfFillImageForDestRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (struct CGSize)renderedImageSizeForObjectSize:(struct CGSize)arg1;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (id)p_cachedImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (_Bool)shouldBeReappliedToCALayer:(id)arg1;
- (_Bool)p_shouldApplyTintedImage;
- (int)fillType;
- (_Bool)canApplyToCALayerByAddingSublayers;
- (_Bool)canApplyToCALayer;
- (_Bool)drawsInOneStep;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)referenceColor;
- (id)imageDataAtFillSize;
- (void)p_setFillSizeForApplicationData;
- (_Bool)isOpaque;
@property(readonly, nonatomic) struct CGSize fillSize; // @synthesize fillSize=mFillSize;
@property(readonly, nonatomic) double scale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithGenericImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(struct CGSize)arg4 originalImageData:(id)arg5;
- (id)initWithImageData:(id)arg1 technique:(int)arg2 tintColor:(id)arg3 size:(struct CGSize)arg4 originalImageData:(id)arg5;
- (_Bool)tsch_hasAllResources;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (_Bool)p_shouldPersistFillSizeForData:(id)arg1;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableImageFill : TSDImageFill
{
}

@property(nonatomic) _Bool interpretsUntaggedImageDataAsGeneric; // @dynamic interpretsUntaggedImageDataAsGeneric;
@property(nonatomic) double scale; // @dynamic scale;
@property(nonatomic) struct CGSize fillSize; // @dynamic fillSize;
@property(retain, nonatomic) TSPData *imageData; // @dynamic imageData;
@property(nonatomic) int technique; // @dynamic technique;
@property(copy, nonatomic) TSUColor *tintColor; // @dynamic tintColor;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDImageLayout : TSDMediaLayout <TSDShapeControlLayout>
{
    TSDLayoutGeometry *mImageGeometry;
    TSDMaskLayout *mMaskLayout;
    struct CGPath *mPathToStroke;
    struct CGAffineTransform mLayoutToImageTransform;
    struct CGAffineTransform mLayoutToMaskTransform;
    _Bool mMaskIntersectsImage;
    TSDBezierPath *mTracedPath;
    int mHasAlpha;
    TSDLayoutGeometry *mBaseImageLayoutGeometry;
    TSDInfoGeometry *mDynamicInfoGeometry;
    TSDInfoGeometry *mBaseInfoGeometry;
    int mMaskEditMode;
    _Bool mScalingInMaskMode;
    _Bool mInInstantAlphaMode;
    _Bool mIsUpdatingImageAdjustments;
    TSDImageAdjustments *mDynamicImageAdjustments;
}

@property(readonly, nonatomic, getter=isInInstantAlphaMode) _Bool inInstantAlphaMode; // @synthesize inInstantAlphaMode=mInInstantAlphaMode;
@property(readonly, nonatomic, getter=isInMaskScaleMode) _Bool inMaskScaleMode; // @synthesize inMaskScaleMode=mScalingInMaskMode;
@property(readonly, nonatomic) int maskEditMode; // @synthesize maskEditMode=mMaskEditMode;
- (void)p_destroyDynamicCopies;
- (void)p_setDynamicInfoGeometry:(id)arg1;
- (void)p_createDynamicCopies;
- (_Bool)supportsRotation;
- (id)i_computeWrapPath;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (void)dynamicImageAdjustmentsChangeDidEnd;
- (void)dynamicImageAdjustmentsUpdateToValue:(id)arg1;
- (void)dynamicImageAdjustmentsChangeDidBegin;
- (_Bool)isDynamicallyChangingImageAdjustments;
- (id)imageAdjustments;
- (id)maskLayout;
- (struct CGAffineTransform)imageDataToVisualSizeTransform;
- (struct CGAffineTransform)layoutToMaskTransform;
- (struct CGAffineTransform)layoutToImageTransform;
- (struct CGSize)sizeOfFrameRectIncludingCoverage;
- (struct CGPath *)pathToStroke;
- (_Bool)hasMaskingPath;
- (id)inspectorGeometry;
- (id)imageGeometryInRoot;
- (id)originalImageGeometry;
- (id)imageGeometry;
- (id)imageInfo;
- (void)endInstantAlphaMode;
- (void)beginInstantAlphaMode;
- (void)maskModeScaleDidEnd;
- (void)maskModeScaleDidBegin;
@property(readonly, nonatomic) int maskEditModeForLayoutState;
@property(readonly, nonatomic) int maskEditModeForResizing;
@property(readonly, nonatomic) int maskEditModeForRotating;
@property(readonly, nonatomic) int maskEditModeForDragging;
@property(readonly, nonatomic) _Bool isResizingInMaskEditMode;
@property(readonly, nonatomic) _Bool isRotatingInMaskEditMode;
@property(readonly, nonatomic) _Bool isDraggingInMaskEditMode;
@property(readonly, nonatomic, getter=isInMaskEditMode) _Bool inMaskEditMode;
- (void)endMaskEditMode;
- (void)beginEditingMaskInMaskEditMode;
- (void)beginEditingImageInMaskEditMode;
- (void)maskWasApplied;
- (void)maskWasReset;
- (struct CGRect)pathBoundsWithoutStroke;
@property(readonly, nonatomic) TSDPathSource<TSDSmartPathSource> *smartPathSource;
- (void)takeScaledImageGeometry:(id)arg1 maskGeometry:(id)arg2;
- (void)takeSizeFromTracker:(id)arg1;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (_Bool)shouldSnapWhileResizing;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (struct CGPoint)centerForConnecting;
- (struct CGPoint)centerForRotationInMaskMode;
- (struct CGPoint)centerForRotation;
- (void)takeRotationFromTracker:(id)arg1;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (void)endDrag;
- (_Bool)i_useBaseCapturedAlignmentFrameOriginForInline;
- (void)dragBy:(struct CGPoint)arg1;
- (void)beginDrag;
- (void)beginResize;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)maskIntersectsImage;
- (_Bool)shouldRenderFrameStroke;
- (_Bool)shouldDisplayGuides;
- (_Bool)isInvisible;
- (_Bool)hasAlpha;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (void)updateChildrenFromInfo;
- (void)processChangedProperty:(int)arg1;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (id)currentInfoGeometry;
- (id)visibleGeometries;
- (id)geometryForTransforming;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMediaStyle : TSSStyle <TSDMixing, TSSPreset>
{
}

+ (id)p_magicMoveProperties;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (id)properties;
+ (id)movieStylePresetStyleDescriptor;
+ (id)imageStylePresetStyleDescriptor;
+ (void)initialize;
+ (void)saveMediaStylePropertyMap:(id)arg1 toArchive:(struct MediaStylePropertiesArchive *)arg2 archiver:(id)arg3;
+ (void)loadMediaStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct MediaStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (SEL)mapThemePropertyMapSelector;
@property(readonly, nonatomic) NSString *presetKind;
- (void)saveToArchive:(struct MediaStyleArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct MediaStyleArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDDrawableEditor : NSObject <TSDEditor, TSDStrokeEditor>
{
    TSDInteractiveCanvasController *mICC;
    NSSet *mInfos;
    TSDMultiPaneController *mGraphicInspector;
}

+ (id)keyPathsForValuesAffectingLayouts;
+ (_Bool)shouldSuppressMultiselection;
+ (id)keyPathsForValuesAffectingFirstInfo;
+ (id)keyPathsForValuesAffectingInfo;
@property(retain, nonatomic) NSSet *infos; // @synthesize infos=mInfos;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
- (void)p_flipInOrientation:(int)arg1;
- (void)flipVertically:(id)arg1;
- (void)flipHorizontally:(id)arg1;
- (_Bool)canAddOrShowComment;
- (void)addOrShowComment:(id)arg1;
- (double)pictureFrameAssetScaleForNormalizedWidth:(double)arg1;
- (double)strokeWidthForNormalizedWidth:(double)arg1;
@property(readonly, nonatomic) NSString *strokeColorPickerTitle;
@property(readonly, nonatomic) NSArray *strokeSwatches;
- (void)endChangingStrokeWidth:(id)arg1;
- (void)didChangeStrokeWidth:(id)arg1;
- (void)beginChangingStrokeWidth:(id)arg1;
@property(retain, nonatomic) TSUColor *strokeColor;
- (void)takePatternFromStroke:(id)arg1 withDefaultStroke:(id)arg2;
@property(copy, nonatomic) TSDStroke *stroke;
- (void)applyStylePresetWithIndex:(id)arg1;
- (void)setStyleValue:(id)arg1 forStyleProperty:(int)arg2;
- (id)selectedLayoutsSupportingInspectorPositioning;
- (id)selectedLayoutsSupportingFlipping;
- (id)selectedLayoutsSupportingRotation;
- (id)topLevelInspectorAutosaveName;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingSmartShapeAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingConnectionLineAttributes;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShrinkTextToFit;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingTextInset;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingResize;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingEndpoints;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingFill;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingOpacity;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingReflection;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingShadow;
@property(readonly, nonatomic) NSSet *selectedObjectsSupportingStroke;
- (id)documentRoot;
- (int)canPerformEditorAction:(SEL)arg1 withSender:(id)arg2;
- (int)canPerformAction:(SEL)arg1;
@property(readonly, nonatomic) NSSet *layouts;
@property(readonly, nonatomic) TSDDrawableInfo *firstInfo;
- (id)infosOfClass:(Class)arg1;
@property(readonly, retain, nonatomic) TSDDrawableInfo *info;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) TSKSelection *selection;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDShadow : NSObject <TSDMixing, TSSPreset, TSSPresetSource, NSCopying, NSMutableCopying>
{
    double mAngle;
    double mOffset;
    double mRadius;
    double mOpacity;
    struct CGColor *mColor;
    _Bool mEnabled;
}

+ (id)mixableObjectClasses;
+ (_Bool)canMixWithNilObjects;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (_Bool)automaticallyNotifiesObserversOfTSUColor;
+ (id)keyPathsForValuesAffectingTSUColor;
+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
+ (id)shadowWithNSShadow:(id)arg1;
+ (id)contactShadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 height:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
+ (id)shadowWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
+ (id)defaultDisabledShadow;
+ (id)defaultShadow;
+ (id)p_defaultShadowEnabled:(_Bool)arg1;
+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=mEnabled;
@property(readonly, nonatomic) struct CGColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
@property(readonly, nonatomic) double radius; // @synthesize radius=mRadius;
@property(readonly, nonatomic) double offset; // @synthesize offset=mOffset;
@property(readonly, nonatomic) double angle; // @synthesize angle=mAngle;
- (id)NSShadow;
- (id)shadowByTransformingByTransform:(struct CGAffineTransform)arg1;
- (id)mixedBaseObjectWithObject:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)differenceRequiresRebuilding:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalAngle:(double)arg2;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3 extraOffset:(struct CGSize)arg4;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2 flipped:(_Bool)arg3;
- (void)applyToContext:(struct CGContext *)arg1 viewScale:(double)arg2;
@property(readonly, nonatomic) TSUColor *TSUColor;
@property(readonly, nonatomic) struct CGPoint offsetDelta;
- (id)typeDescription;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (_Bool)showForEditingText;
- (_Bool)isCurvedShadow;
- (_Bool)isDropShadow;
- (_Bool)isContactShadow;
- (unsigned long long)hash;
- (void)dealloc;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)clampOpacity:(double)arg1;
- (double)clampRadius:(double)arg1;
- (double)clampOffset:(double)arg1;
- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
- (struct CGImage *)i_newEmptyImageWithSize:(struct CGSize)arg1;
- (id)i_initWithOpacity:(double)arg1 color:(struct CGColor *)arg2 enabled:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableShadow : TSDShadow
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setTSUColor:(id)arg1;
- (void)setColor:(struct CGColor *)arg1;
- (void)setOpacity:(double)arg1;
- (void)setRadius:(double)arg1;
- (void)setOffset:(double)arg1;
- (void)setAngle:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMaskInfo : TSDDrawableInfo <TSDMixing>
{
    TSDPathSource *mPathSource;
}

@property(retain, nonatomic) TSDPathSource *pathSource; // @synthesize pathSource=mPathSource;
- (id)objectForProperty:(int)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)setGeometry:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 pathSource:(id)arg3;
- (void)saveToArchive:(struct MaskArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct MaskArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMaskLayout : TSDLayout
{
    struct {
        unsigned int path:1;
        unsigned int tightPathBounds:1;
    } mMaskInvalidFlags;
    struct CGPath *mCachedPath;
    struct CGPath *mCachedPathNoScale;
    struct CGRect mCachedTightPathBounds;
    struct CGRect mCachedTightPathBoundsNoScale;
    double mPathScale;
    TSDInfoGeometry *mDynamicInfoGeometry;
    TSDPathSource *mDynamicPathSource;
    _Bool mScalingInMaskMode;
}

@property(nonatomic) double pathScale; // @synthesize pathScale=mPathScale;
- (void)p_destroyDynamicCopies;
- (void)p_setDynamicInfoGeometry:(id)arg1;
- (void)p_createDynamicCopies;
- (struct CGRect)p_cachedTightPathBoundsNoScale;
- (struct CGRect)p_cachedTightPathBounds;
- (void)p_calculateTightPathBoundsIfNecessary;
- (struct CGPath *)p_cachedPathNoScale;
- (struct CGPath *)p_cachedPath;
- (void)p_calculateCachedPathIfNecessary;
- (id)infoGeometry;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (unsigned long long)numberOfControlKnobs;
@property(readonly, nonatomic) _Bool hasSmartPath;
- (void)dynamicallyMovedSmartShapeKnobTo:(struct CGPoint)arg1 withTracker:(id)arg2;
- (void)dynamicMovePathKnobDidBegin;
- (id)pathSource;
- (struct CGRect)pathBounds;
- (struct CGPath *)path;
- (id)maskInfo;
- (_Bool)shouldDisplayGuides;
- (void)maskModeScaleDidEnd;
- (void)maskModeScaleDidBegin;
- (void)dragBy:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSDImageLayout *imageLayout;
- (struct CGAffineTransform)layoutTransformInInfoSpace:(struct CGAffineTransform)arg1;
- (void)endDynamicOperation;
- (void)takeScaledMaskGeometry:(id)arg1;
- (void)resizeWithTransform:(struct CGAffineTransform)arg1 asChild:(_Bool)arg2;
- (void)beginDynamicOperation;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (_Bool)shouldSnapWhileResizing;
- (struct CGAffineTransform)originalTransformForProvidingGuides;
- (struct CGRect)alignmentFrame;
- (void)invalidatePath;
- (void)invalidate;
- (void)processChangedProperty:(int)arg1;
- (struct CGAffineTransform)affineTransformForTightPathBounds;
- (id)computeLayoutGeometry;
- (id)dependentLayouts;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDColorFill : TSDFill <TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
}

+ (id)keyPathsForValuesAffectingBrightness;
+ (id)keyPathsForValuesAffectingSaturation;
+ (id)keyPathsForValuesAffectingHue;
+ (id)keyPathsForValuesAffectingLuminance;
+ (id)keyPathsForValuesAffectingOpacity;
+ (id)keyPathsForValuesAffectingCGColor;
+ (id)brownColor;
+ (id)purpleColor;
+ (id)orangeColor;
+ (id)magentaColor;
+ (id)yellowColor;
+ (id)cyanColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)grayColor;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)clearColor;
+ (id)randomColor;
+ (id)colorWithUIColor:(id)arg1;
+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
+ (id)colorWithColor:(id)arg1;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
@property(readonly, nonatomic) double brightness;
@property(readonly, nonatomic) double saturation;
@property(readonly, nonatomic) double hue;
@property(readonly, nonatomic) double luminance;
@property(readonly, nonatomic) double opacity;
@property(readonly, nonatomic) struct CGColor *CGColor;
- (double)p_hsbComponentWithIndex:(unsigned long long)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)referenceColor;
- (SEL)mapThemeAssetSelector;
- (int)fillType;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCALayer;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)drawsInOneStep;
- (_Bool)isNearlyWhite;
- (_Bool)isClear;
- (_Bool)isOpaque;
- (id)invertedColor;
- (id)grayscaleColor;
- (id)UIColor;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithUIColor:(id)arg1;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (id)initWithColor:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableColorFill : TSDColorFill
{
}

@property(nonatomic) double saturation; // @dynamic saturation;
@property(nonatomic) double brightness; // @dynamic brightness;
@property(nonatomic) double hue; // @dynamic hue;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;

@end

__attribute__((visibility("hidden")))
@interface TSDFill : NSObject <TSDPathPainter, TSSThemeAsset>
{
}

+ (_Bool)tsch_hasAllResourcesForFill:(id)arg1;
+ (id)instanceWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;
+ (void)registerSubclass:(Class)arg1;
+ (id)p_subclassRegistry;
- (int)fillType;
- (id)referenceColor;
- (_Bool)drawsInOneStep;
- (_Bool)isClear;
- (_Bool)isNearlyWhite;
- (_Bool)isOpaque;
- (void)applyToCAShapeLayer:(id)arg1 withScale:(double)arg2;
- (_Bool)canApplyToCAShapeLayer;
- (void)applyToCALayer:(id)arg1 withScale:(double)arg2;
- (_Bool)shouldBeReappliedToCALayer:(id)arg1;
- (_Bool)canApplyToCALayerByAddingSublayers;
- (_Bool)canApplyToCALayer;
- (_Bool)isThemeEquivalent:(id)arg1;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 naturalBounds:(struct CGRect)arg2 inContext:(struct CGContext *)arg3 isPDF:(_Bool)arg4;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
@property(readonly, nonatomic) _Bool tsch_hasAllResources; // @dynamic tsch_hasAllResources;
- (void)saveToArchive:(struct FillArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct FillArchive *)arg1 unarchiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDThumbnailController : NSObject <TSDThumbnailConsumer>
{
    TSKDocumentRoot *_documentRoot;
    id <TSDThumbnailControllerDelegate> _delegate;
    id <TSDThumbnailProducer> _producer;
    TSDThumbnailGenerator *_generator;
    _Bool _thumbnailRequested;
    _Bool _thumbnailerEnabled;
    unsigned int _thumbnailSuspendCount;
    NSMutableSet *_dirtySet;
    TSULRUCache *_thumbnailCache;
    double _delayBeforeRedraw;
    _Bool _tornDown;
    _Bool _callbackScheduled;
    int _delayHandlingStatus;
    NSDate *_drawingStartDate;
    NSObject<OS_dispatch_queue> *_thumbnailGenerationQueue;
}

@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_thumbnailerEnabled;
@property(readonly, nonatomic) NSSet *dirtySet; // @synthesize dirtySet=_dirtySet;
@property(nonatomic) double delayBeforeRedraw; // @synthesize delayBeforeRedraw=_delayBeforeRedraw;
@property(nonatomic) id <TSDThumbnailProducer> producer; // @synthesize producer=_producer;
@property(nonatomic) id <TSDThumbnailControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)p_mustCacheThumbnailsForAllPrincipalThumbnailIdentifiers;
- (_Bool)p_notGeneratingThumbnail;
- (_Bool)p_isThumbnailGenerationActive;
- (void)p_scheduleThumbnailGeneration;
- (void)p_scheduleThumbnailGenerationMainThreadEntry;
- (void)p_thumbnailEvicted:(id)arg1 identifier:(id)arg2;
- (void)p_handleMemoryNotification:(id)arg1;
- (_Bool)shouldCallCommit;
- (void)commitThumbnail:(id)arg1 identifier:(id)arg2;
- (void)updateThumbnail:(id)arg1 identifier:(id)arg2 continueThumbnailing:(_Bool)arg3;
- (id)nextThumbnailIdentifier;
- (void)waitForIdentifiersOfThumbnailsToHaveThumbnails:(id)arg1;
- (id)thumbnail:(id)arg1 waitIfNecessary:(_Bool)arg2;
- (id)cachedThumbnail:(id)arg1;
- (void)invalidateThumbnail:(id)arg1;
- (void)invalidateAllThumbnailsAndOptionallyClearCache:(_Bool)arg1;
- (void)updateThumbnails;
- (void)thumbnailCountDidChange;
@property(nonatomic) struct CGColor *backgroundColor;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
- (void)teardown;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1 cacheSize:(unsigned int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDTGContext : NSObject
{
    id <TSDThumbnailConsumer> _consumer;
    id <TSDThumbnailProducer> _producer;
    id <TSDThumbnailIdentifier> _thumbnailId;
    TSUImage *_thumbnail;
    _Bool _continueThumbnailing;
}

@property(nonatomic) _Bool continueThumbnailing; // @synthesize continueThumbnailing=_continueThumbnailing;
@property(retain, nonatomic) TSUImage *thumbnail; // @synthesize thumbnail=_thumbnail;
@property(nonatomic) id <TSDThumbnailIdentifier> thumbnailId; // @synthesize thumbnailId=_thumbnailId;
@property(readonly, nonatomic) id <TSDThumbnailProducer> producer; // @synthesize producer=_producer;
@property(readonly, nonatomic) id <TSDThumbnailConsumer> consumer; // @synthesize consumer=_consumer;
- (void)dealloc;
- (id)initWithConsumer:(id)arg1 producer:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDThumbnailGenerator : NSObject
{
    TSDImager *_imager;
    TSKDocumentRoot *_documentRoot;
}

- (void)p_mainThreadReadCallback:(id)arg1;
- (void)p_writeCallback:(id)arg1;
- (_Bool)p_initialReadCallback:(id)arg1;
- (struct CGImage *)p_newThumbnailForProducer:(id)arg1 identifier:(id)arg2;
- (id)drawImageSynchronouslyForThumbnailId:(id)arg1 producer:(id)arg2;
@property(nonatomic) struct CGColor *backgroundColor;
- (void)idle;
- (void)generateThumbnailForConsumer:(id)arg1 producer:(id)arg2;
- (void)generateThumbnailForThumbnailId:(id)arg1 consumer:(id)arg2 producer:(id)arg3 continueThumbnailing:(_Bool)arg4;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDBitmapImageProvider : TSDImageProvider
{
    struct CGImageSource *mImageSource;
    struct CGImage *mImage;
    struct CGSize mNaturalSize;
    long long mOrientation;
    _Bool mIsOpaque;
    _Bool mIsValid;
    unsigned long long mDPI;
    NSObject<OS_dispatch_semaphore> *mImageLock;
    long long mCheckIfValidToken;
    struct CGImage *mHalfSizeImage;
    struct CGImage *mQuarterSizeImage;
}

+ (struct CGImageSource *)p_newImageSourceFromFilePath:(id)arg1;
+ (struct CGImageSource *)p_newImageSourceFromCacheForData:(id)arg1 withFilenameSuffix:(id)arg2;
+ (void)clearCacheForData:(id)arg1;
+ (id)p_cacheStringForData:(id)arg1;
+ (void)initialize;
+ (struct CGSize)naturalSizeForImageData:(id)arg1;
+ (id)TSUImageForImageData:(id)arg1;
+ (struct CGImage *)CGImageForImageData:(id)arg1;
- (struct CGImageSource *)CGImageSource;
- (struct CGImageSource *)p_newImageOfSize:(struct CGSize)arg1 andWriteToCacheWithSuffix:(id)arg2;
- (struct CGImageSource *)p_newCGImageSourceForTemporaryUse;
- (void)p_configureOrientationAndSizeFromImageSource:(struct CGImageSource *)arg1 andImage:(struct CGImage *)arg2;
- (struct CGImage *)p_newImageFromSource:(struct CGImageSource *)arg1;
- (struct CGImageSource *)p_newCGImageSource;
- (void)p_loadSourceRefIfNecessary;
- (void)p_loadFullSizedImageIfNecessary;
- (void)p_loadImageMetadata;
- (void)flush;
- (_Bool)hasFlushableContent;
- (struct CGSize)dpiAdjustedNaturalSize;
- (struct CGSize)dpiAdjustedFillSize;
- (unsigned long long)imageDPI;
- (_Bool)isOpaque;
- (long long)orientation;
- (struct CGImage *)p_resampledImageOfSizeType:(int)arg1;
- (struct CGImage *)p_loadOrCreateResampledImageWithScale:(unsigned long long)arg1 andCGImage:(struct CGImage **)arg2;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 lowQuality:(_Bool)arg2;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1 inContext:(struct CGContext *)arg2 orLayer:(id)arg3;
- (struct CGImage *)CGImageForNaturalSize;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (void)dealloc;
- (void)i_commonInit;

@end

__attribute__((visibility("hidden")))
@interface TSDImageProvider : NSObject
{
    int mLoadState;
    TSPData *mImageData;
    int mRetainCount;
    int mOwnerCount;
    TSUFlushingManager *mFlushingManager;
    int mInterest;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (void)ownerAccess;
- (void)removeOwner;
- (void)addOwner;
- (_Bool)hasFlushableContent;
- (void)setFlushingManager:(id)arg1;
- (void)flush;
- (void)removeInterest;
- (void)addInterest;
- (int)interest;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isError;
- (_Bool)isValid;
- (struct CGSize)dpiAdjustedNaturalSize;
- (struct CGSize)naturalSize;
- (id)imageData;
- (void)dealloc;
- (void)i_commonInit;
- (id)initWithImageData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDImageProviderPool : NSObject <TSPDataCullingListener>
{
    TSUPointerKeyDictionary *mImageDataToImageProviderMap;
    unsigned long long mOpenFileDescriptorLimit;
    _Bool mHaveRaisedFileDescriptorLimit;
}

+ (Class)p_providerClassForData:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedPool;
+ (id)_singletonAlloc;
- (void)p_updateFileDescriptorLimit;
- (unsigned long long)p_removeProvidersWithZeroInterest;
- (void)p_didReceiveMemoryWarning:(id)arg1;
- (void)p_freeFileDescriptorsWithProviderCount:(unsigned long long)arg1;
- (unsigned long long)p_providerLimitForFileDescriptorLimit:(unsigned long long)arg1;
- (void)willCullData:(id)arg1;
- (void)flushImageProviders;
- (void)willCloseDocumentContext:(id)arg1;
- (void)removeInterestInProviderForData:(id)arg1;
- (void)addInterestInProviderForData:(id)arg1;
- (id)p_providerForData:(id)arg1 temporary:(_Bool)arg2 shouldValidate:(_Bool)arg3;
- (id)temporaryProviderForData:(id)arg1 shouldValidate:(_Bool)arg2;
- (id)providerForData:(id)arg1 shouldValidate:(_Bool)arg2;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDPDFImageProvider : TSDImageProvider
{
    struct CGPDFDocument *mPDFDocument;
    struct CGSize mNaturalSize;
}

- (struct CGPDFDocument *)p_load;
- (void)p_loadIfNecessary;
- (void)flush;
- (_Bool)hasFlushableContent;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (long long)pageAngle;
- (struct CGPDFDocument *)CGPDFDocument;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDErrorImageProvider : TSDImageProvider
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (struct CGPDFDocument *)p_iconPDFDocument;
- (void)drawImageInContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (_Bool)isError;
- (_Bool)isValid;
- (struct CGSize)naturalSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSDReflection : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    double mOpacity;
    double mFadeAcceleration;
}

+ (_Bool)canMixWithNilObjects;
+ (id)reflection;
+ (id)instanceWithArchive:(const struct ReflectionArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) double fadeAcceleration; // @synthesize fadeAcceleration=mFadeAcceleration;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=mOpacity;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithOpacity:(double)arg1;
- (id)initWithOpacity:(double)arg1 fadeAcceleration:(double)arg2;
- (id)init;
- (void)saveToArchive:(struct ReflectionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ReflectionArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableReflection : TSDReflection
{
}

- (void)setFadeAcceleration:(double)arg1;
- (void)setOpacity:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDTexturedRectangle : NSObject <NSCopying>
{
    struct CGPoint mOffset;
    struct CGPoint mOriginalPosition;
    struct CGSize mSize;
    struct CGRect mContentRect;
    struct CGRect mOriginalFrame;
    CALayer *mLayer;
    CDUnknownBlockType mRenderBlock;
    struct CGImage *mSourceImage;
    struct CGImage *mBakedImage;
    TSDTextureSet *mParent;
    long long mTextureType;
    double mTextureOpacity;
    unsigned int mSingleTextureName;
    _Bool mSingleTextureContainsMipmaps;
    _Bool mIsFlattened;
    NSMutableDictionary *mAttributes;
    NSMutableArray *mTags;
    struct CGColorSpace *mColorSpace;
    _Bool _isVerticalText;
    double _textBaseline;
    double _textXHeight;
    TSUColor *_textColor;
    NSString *_text;
    struct CGSize _singleTextureSize;
    struct _NSRange _textRange;
}

+ (struct CGRect)boundingRectOnCanvasForTextures:(id)arg1;
+ (struct CGRect)boundingRectForTextures:(id)arg1;
@property(nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) TSUColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double textXHeight; // @synthesize textXHeight=_textXHeight;
@property(nonatomic) double textBaseline; // @synthesize textBaseline=_textBaseline;
@property(nonatomic) _Bool isVerticalText; // @synthesize isVerticalText=_isVerticalText;
@property(readonly, nonatomic) struct CGSize singleTextureSize; // @synthesize singleTextureSize=_singleTextureSize;
@property(retain, nonatomic) NSMutableArray *tags; // @synthesize tags=mTags;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) long long textureType; // @synthesize textureType=mTextureType;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) TSDTextureSet *parent; // @synthesize parent=mParent;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(nonatomic) _Bool isFlattened; // @synthesize isFlattened=mIsFlattened;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=mLayer;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(nonatomic) struct CGRect contentRect; // @synthesize contentRect=mContentRect;
- (struct CGRect)convertToCanvasCoordinates:(struct CGRect)arg1;
@property(readonly, nonatomic) struct CGRect frameOnCanvas;
@property(readonly, nonatomic) CALayer *parentLayer;
@property(readonly, nonatomic) _Bool isBackgroundTexture;
- (void)renderIntoContext:(struct CGContext *)arg1;
- (void)bakeLayerWithAngle:(double)arg1 scale:(double)arg2;
@property(readonly, nonatomic) struct CGImage *image;
@property(readonly, nonatomic) double singleTextureOpacity;
- (void)releaseSingleTexture;
@property(readonly, nonatomic) unsigned int singleTextureTarget;
@property(readonly, nonatomic) unsigned int singleTextureName;
- (void)setupSingleTexture;
- (void)setupSingleTextureAndGenerateMipMaps:(_Bool)arg1;
- (void)renderLayerContentsIfNeeded;
@property(readonly, nonatomic) _Bool isRenderable;
- (void)resetToSourceImage;
- (struct CGImage *)p_newImageAndBufferWithAngle:(double)arg1 scale:(double)arg2 offset:(struct CGPoint)arg3;
- (struct CGColorSpace *)p_colorSpace;
- (void)resetAnchorPoint;
- (void)adjustAnchorRelativeToParentsCenterOfRotation:(struct CGPoint)arg1 isMagicMove:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isImageSource;
@property(readonly, nonatomic) struct CGRect frame;
@property(nonatomic) struct CGPoint offset;
- (void)p_updateFrame;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1 offset:(struct CGPoint)arg2 renderBlock:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDTextureSet : NSObject <NSCopying>
{
    struct CGPoint mCenter;
    struct CGRect mBounds;
    struct CGPoint mOriginalPosition;
    _Bool mIsBaked;
    _Bool mShouldIncludeFinalTexturesInVisibleSet;
    _Bool mShouldTransformUsingTextureCenter;
    unsigned long long mChunkCount;
    NSMutableArray *mTextures;
    NSMutableArray *mAllTextures;
    TSUNoCopyDictionary *mStageIndexForTexture;
    NSMutableDictionary *mFinalTextureForStage;
    NSMutableDictionary *mBoundingRectForStage;
    NSMutableDictionary *mReverseFinalTextureForStage;
    TSUNoCopyDictionary *mFinalTexturesToStageMap;
    TSUNoCopyDictionary *mReverseFinalTexturesToStageMap;
    NSDictionary *mBakedAttributes;
    struct _NSRange mActiveChunkIndices;
    CALayer *mLayer;
    _Bool mIsMagicMove;
    double mTextureOpacity;
    double mTextureAngle;
    long long mTextureZOrder;
    _Bool mIsBackground;
    CALayer *mAlternateLayer;
    TSDRep *mRep;
    struct CGColorSpace *mColorSpace;
    _Bool _isFlippedHorizontally;
    long long mMaxStageIndex;
    long long _stageIndex;
    double _textureAnimationPercent;
    long long _objectType;
}

@property(nonatomic) _Bool isFlippedHorizontally; // @synthesize isFlippedHorizontally=_isFlippedHorizontally;
@property(nonatomic) long long objectType; // @synthesize objectType=_objectType;
@property(nonatomic) double textureAnimationPercent; // @synthesize textureAnimationPercent=_textureAnimationPercent;
@property(readonly, nonatomic) long long stageIndex; // @synthesize stageIndex=_stageIndex;
@property TSDRep *rep; // @synthesize rep=mRep;
@property(nonatomic) long long textureZOrder; // @synthesize textureZOrder=mTextureZOrder;
@property(nonatomic) double textureOpacity; // @synthesize textureOpacity=mTextureOpacity;
@property(nonatomic) double textureAngle; // @synthesize textureAngle=mTextureAngle;
@property(nonatomic) _Bool shouldTransformUsingTextureCenter; // @synthesize shouldTransformUsingTextureCenter=mShouldTransformUsingTextureCenter;
@property(nonatomic) _Bool shouldIncludeFinalTexturesInVisibleSet; // @synthesize shouldIncludeFinalTexturesInVisibleSet=mShouldIncludeFinalTexturesInVisibleSet;
@property(nonatomic) struct CGPoint originalPosition; // @synthesize originalPosition=mOriginalPosition;
@property(readonly, nonatomic) long long maxStageIndex; // @synthesize maxStageIndex=mMaxStageIndex;
@property(nonatomic) _Bool isMagicMove; // @synthesize isMagicMove=mIsMagicMove;
@property(nonatomic) _Bool isBaked; // @synthesize isBaked=mIsBaked;
@property(nonatomic) _Bool isBackground; // @synthesize isBackground=mIsBackground;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(readonly, nonatomic) unsigned long long chunkCount; // @synthesize chunkCount=mChunkCount;
@property(nonatomic) struct CGPoint center; // @synthesize center=mCenter;
@property(retain, nonatomic) NSDictionary *boundingRectForStage; // @synthesize boundingRectForStage=mBoundingRectForStage;
@property(readonly, nonatomic) struct CGRect boundingRect; // @synthesize boundingRect=mBounds;
@property(retain, nonatomic) CALayer *alternateLayer; // @synthesize alternateLayer=mAlternateLayer;
@property(readonly, nonatomic) NSArray *allTextures; // @synthesize allTextures=mAllTextures;
- (id)description;
- (void)addPerspectiveLayerToTexture:(id)arg1 withShowSize:(struct CGSize)arg2;
@property(readonly, nonatomic) _Bool isRenderable;
- (void)renderIntoContext:(struct CGContext *)arg1 requiresTransparentBackground:(_Bool)arg2;
@property(readonly, nonatomic) struct CGRect frame;
- (void)setBoundingRect:(struct CGRect)arg1 forStage:(long long)arg2;
- (void)setBoundingRect:(struct CGRect)arg1;
- (_Bool)isBackgroundTexture:(id)arg1;
- (void)applyActionEffect:(id)arg1 viewScale:(double)arg2 isMagicMove:(_Bool)arg3 shouldBake:(_Bool)arg4 applyScaleOnly:(_Bool)arg5 ignoreScale:(_Bool)arg6 shouldCheckActionKeys:(_Bool)arg7;
- (void)resetToOriginalSource;
- (void)p_applyPositionFromAttributes:(id)arg1 viewScale:(double)arg2;
- (void)p_resetAttributesWithViewScale:(double)arg1;
- (void)resetAnchorPoint;
- (void)adjustAnchorPointRelativeToCenterOfRotation;
- (void)setLayerGeometryFromRep:(id)arg1;
- (void)hideLayersOfFinalTextures;
- (id)finalTextureForStage:(long long)arg1 reverse:(_Bool)arg2;
- (long long)stageIndexForTexture:(id)arg1;
- (id)newFlattenedTexture;
- (id)newFlattenedTextureFromTextures:(id)arg1 newRect:(struct CGRect)arg2;
- (id)visibleTexturesWithTextureType:(long long)arg1;
- (id)firstVisibleTextureForTextureType:(long long)arg1;
- (void)removeRenderable:(id)arg1;
- (id)visibleTexturesForStage:(long long)arg1 isBuildIn:(_Bool)arg2 shouldFlatten:(_Bool)arg3;
@property(readonly, nonatomic) NSArray *visibleTextures;
- (void)renderLayerContentsIfNeeded;
@property(readonly, nonatomic) _Bool isImageSource;
- (void)addFinalTexture:(id)arg1 forStage:(long long)arg2 reverse:(_Bool)arg3;
- (void)addRenderable:(id)arg1 forStage:(long long)arg2;
- (void)addRenderable:(id)arg1;
- (struct CGRect)boundingRectForStage:(long long)arg1 isBuildIn:(_Bool)arg2;
@property(readonly, nonatomic) CALayer *layer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)teardown;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDGuideController : NSObject <TSDDecorator>
{
    TSDInteractiveCanvasController *mICC;
    NSMutableDictionary *mVerticalSpacings;
    NSMutableDictionary *mHorizontalSpacings;
    NSMutableArray *mVerticalSizingGuides;
    NSMutableArray *mHorizontalSizingGuides;
    NSMutableArray *mGuidesForSnappingY;
    NSMutableArray *mGuidesForSnappingX;
    NSMutableArray *mSpacingGuidesForSnappingX;
    NSMutableArray *mSpacingGuidesForSnappingY;
    NSMutableArray *mSpacingCenterGuidesForSnappingX;
    NSMutableArray *mSpacingCenterGuidesForSnappingY;
    NSSet *mCurrentGuides;
    NSMutableSet *mCurrentSizingGuideUILayers;
    _Bool mShouldAlignEdges;
    _Bool mShouldAlignCenters;
    _Bool mShouldAlignToSpacingGuides;
    _Bool mShouldAlignToSizingGuides;
    _Bool mShouldAlignEdgesToMasterGuides;
    _Bool mDoNotRemoveExistingGuidesWhenDisplaying;
    _Bool mDidJustSnapInX;
    _Bool mDidJustSnapInY;
}

+ (id)guideColor;
+ (_Bool)shouldAlignEdgesToMasterGuides;
+ (void)setShouldAlignEdgesToMasterGuides:(_Bool)arg1;
+ (_Bool)shouldAlignCenters;
+ (void)setShouldAlignCenters:(_Bool)arg1;
+ (_Bool)shouldAlignToSizingGuides;
+ (void)setGuideColor:(id)arg1;
+ (void)setShouldAlignToSizingGuides:(_Bool)arg1;
+ (_Bool)shouldAlignToSpacingGuides;
+ (void)setShouldAlignToSpacingGuides:(_Bool)arg1;
+ (_Bool)shouldAlignEdges;
+ (void)setShouldAlignEdges:(_Bool)arg1;
+ (id)defaultGuideColor;
+ (void)initialize;
@property(readonly, nonatomic) _Bool didJustSnapInY; // @synthesize didJustSnapInY=mDidJustSnapInY;
@property(readonly, nonatomic) _Bool didJustSnapInX; // @synthesize didJustSnapInX=mDidJustSnapInX;
@property(nonatomic) _Bool doNotRemoveExistingGuidesWhenDisplaying; // @synthesize doNotRemoveExistingGuidesWhenDisplaying=mDoNotRemoveExistingGuidesWhenDisplaying;
@property(readonly, nonatomic) TSDInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController=mICC;
- (float)p_spacingForCenterOrSpacingGuide:(id)arg1;
- (id)p_closestGuideForOffset:(double)arg1 predicate:(id)arg2 inArray:(id)arg3;
- (id)p_guideClosestToEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (id)p_guidesForOffset:(double)arg1 predicate:(id)arg2 inArray:(id)arg3;
- (id)p_guidesForEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (void)p_getOffset:(double *)arg1 andGuidesArray:(id *)arg2 forEdge:(int)arg3 ofFrame:(struct CGRect)arg4;
- (void)p_addGuide:(id)arg1 toSortedArray:(id)arg2;
- (void)p_addSpacingGuidesForFrame:(struct CGRect)arg1 spacing:(id)arg2 isVerticalSpacing:(_Bool)arg3;
- (void)p_addGuidesForLayout:(id)arg1;
- (_Bool)p_guidesAreRelevantForEdge:(int)arg1 whileDraggingKnobTag:(unsigned long long)arg2;
- (_Bool)p_sizingGuidesAreRelevantForOrientation:(int)arg1 whileDraggingKnobTag:(unsigned long long)arg2;
- (double)p_maxSnap;
- (id)decoratorOverlayLayers;
- (void)endAlignmentOperation;
- (void)hideAlignmentGuides;
- (void)hideSizingGuides;
- (void)showSizingGuideUIForRep:(id)arg1 matchingWidth:(_Bool)arg2 matchingHeight:(_Bool)arg3;
- (void)showSizingGuidesAlignedWithLayout:(id)arg1 forKnobTag:(unsigned long long)arg2;
- (void)showGuidesAlignedWithRect:(struct CGRect)arg1 forKnobTag:(unsigned long long)arg2 shouldRenderX:(_Bool)arg3 shouldRenderY:(_Bool)arg4 shouldRenderSizeGuides:(_Bool)arg5;
- (void)showGuidesAlignedWithRect:(struct CGRect)arg1 forKnobTag:(unsigned long long)arg2;
- (void)showGuidesAlignedWithRect:(struct CGRect)arg1 shouldRenderX:(_Bool)arg2 shouldRenderY:(_Bool)arg3;
- (struct CGPoint)snapRectToGuides:(struct CGRect)arg1 forKnobTag:(unsigned long long)arg2 snapSize:(_Bool)arg3;
- (struct CGPoint)snapRectToGuides:(struct CGRect)arg1 forKnobTag:(unsigned long long)arg2;
- (struct CGPoint)snapRectToGuides:(struct CGRect)arg1;
- (void)beginAlignmentOperationForReps:(id)arg1 preventCenterGuides:(_Bool)arg2 preventSpacingGuides:(_Bool)arg3;
- (void)beginAlignmentOperationForReps:(id)arg1;
- (void)beginAlignmentOperationForRep:(id)arg1;
- (id)initWithInteractiveCanvasController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDAlignmentGuide : TSDAbstractGuide
{
    int mType;
    double mStart;
    double mEnd;
    _Bool mDynamic;
    _Bool mInfinite;
    _Bool mSnapsToMin;
    _Bool mSnapsToMax;
    _Bool mSnapsToMid;
    CALayer *mLayer;
    TSDUserDefinedGuide *mModelGuide;
}

@property(retain, nonatomic) TSDUserDefinedGuide *modelGuide; // @synthesize modelGuide=mModelGuide;
@property(nonatomic) _Bool snapsToMax; // @synthesize snapsToMax=mSnapsToMax;
@property(nonatomic) _Bool snapsToMid; // @synthesize snapsToMid=mSnapsToMid;
@property(nonatomic) _Bool snapsToMin; // @synthesize snapsToMin=mSnapsToMin;
@property(nonatomic) _Bool infinite; // @synthesize infinite=mInfinite;
@property(nonatomic) _Bool dynamic; // @synthesize dynamic=mDynamic;
@property(nonatomic) int guideType; // @synthesize guideType=mType;
@property(nonatomic) double end; // @synthesize end=mEnd;
@property(nonatomic) double start; // @synthesize start=mStart;
- (id)layerWithICC:(id)arg1;
- (double)distanceToPoint:(struct CGPoint)arg1;
- (void)setOffset:(double)arg1;
- (_Bool)canBeSnappedToByEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (void)dealloc;
- (id)initWithType:(int)arg1 offset:(double)arg2;
- (id)initWithRect:(struct CGRect)arg1 edge:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDGLVoronoiTriangleDataCell : NSObject
{
    unsigned long long _triangleCount;
    unsigned long long _vertexCount;
    CDStruct_b2fbf00d *_vertexData;
    CDStruct_6e3f967a _centerPoint;
    struct CGRect _bounds;
}

@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) CDStruct_b2fbf00d centerPoint; // @synthesize centerPoint=_centerPoint;
@property(readonly, nonatomic) CDStruct_b2fbf00d *vertexData; // @synthesize vertexData=_vertexData;
@property(readonly, nonatomic) unsigned long long vertexCount; // @synthesize vertexCount=_vertexCount;
@property(readonly, nonatomic) unsigned long long triangleCount; // @synthesize triangleCount=_triangleCount;
- (id).cxx_construct;
- (void)dealloc;
- (id)initWithTrianglePoints:(CDStruct_b2fbf00d *)arg1;
- (id)initWithEdges:(vector_5a9f1b73)arg1;
- (id)cellsBySplittingCellIntoTriangles;
- (void)p_setupTriangleDataWithEdges:(vector_5a9f1b73)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLVoronoiTriangleData : NSObject
{
    unsigned long long *_triangleIndexToCellIndexMappingTable;
    unsigned long long *_triangleIndexToCellTriangleIndexMappingTable;
    unsigned long long _triangleIndexToCellMappingTableCount;
    unsigned long long _triangleCount;
    NSArray *_cells;
    struct CGRect _bounds;
}

@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) NSArray *cells; // @synthesize cells=_cells;
@property(readonly, nonatomic) unsigned long long triangleCount; // @synthesize triangleCount=_triangleCount;
- (id).cxx_construct;
- (unsigned long long)triangleIndexInCellFromGlobalTriangleIndex:(unsigned long long)arg1;
- (unsigned long long)cellIndexFromTriangleIndex:(unsigned long long)arg1;
- (id)cellFromTriangleIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long cellCount;
- (void)dealloc;
- (id)initWithPoints:(unsigned long long)arg1 clippedToRect:(struct CGRect)arg2 percentOfCellsToSplit:(double)arg3;
- (void)p_setupDataWithPointCount:(unsigned long long)arg1 clippedToRect:(struct CGRect)arg2 percentOfCellsToSplit:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDShadowSwatch : NSObject <TSDPathPainter>
{
    TSDShadow *mShadow;
    struct CGImage *mShadowSwatchImage;
}

@property(readonly, nonatomic) TSDShadow *shadow; // @synthesize shadow=mShadow;
- (void)p_drawCurvedShadowInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 forShadow:(id)arg3 forImage:(struct CGImage *)arg4 forSwatchRect:(struct CGRect)arg5;
- (void)p_drawContactShadowInContext:(struct CGContext *)arg1 inRect:(struct CGRect)arg2 forShadow:(id)arg3 forImage:(struct CGImage *)arg4 forSwatchRect:(struct CGRect)arg5;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 forImage:(struct CGImage *)arg3 swatchRect:(struct CGRect)arg4 wantsStroke:(_Bool)arg5;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithShadow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieInfo : TSDMediaInfo <TSDMixing>
{
    TSPData *mMovieData;
    NSURL *mMovieRemoteURL;
    TSPData *mImportedAuxiliaryMovieData;
    TSPData *mAudioOnlyImageData;
    double mStartTime;
    double mEndTime;
    double mPosterTime;
    TSPData *mPosterImageData;
    _Bool mPosterImageGeneratedWithAlphaSupport;
    struct CGSize mNaturalSize;
    unsigned long long mLoopOption;
    float mVolume;
    _Bool mAudioOnly;
    _Bool mStreaming;
    TSDMediaStyle *mStyle;
}

+ (id)presetKinds;
+ (double)defaultPosterTimeForDuration:(double)arg1;
@property(nonatomic) unsigned long long loopOption; // @synthesize loopOption=mLoopOption;
@property(nonatomic, getter=isStreaming) _Bool streaming; // @synthesize streaming=mStreaming;
@property(retain, nonatomic) TSPData *posterImageData; // @synthesize posterImageData=mPosterImageData;
- (id)style;
- (_Bool)supportsHyperlinks;
- (int)intValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (_Bool)supportsAttachedComments;
- (id)synchronouslyGenerateDefaultPosterImageForContext:(id)arg1;
- (id)generateEmptyPosterImageForContext:(id)arg1;
- (id)makePosterImageGeneratorWithAVAsset:(id)arg1;
- (id)makeAVAssetWithOptions:(id)arg1;
- (id)makeAVAsset;
- (void)acceptVisitor:(id)arg1;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (id)animationFilters;
- (_Bool)canChangeWrapType;
- (Class)repClass;
- (Class)layoutClass;
- (Class)styleClass;
- (void)p_setPropertiesFromLoadedAsset:(id)arg1;
- (struct CGSize)rawDataSize;
- (id)styleIdentifierTemplateForNewPreset;
- (id)presetKind;
- (void)setStyle:(id)arg1;
- (id)mediaFileType;
- (id)mediaDisplayName;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieRemoteURL:(id)arg4 loadedAsset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 movieData:(id)arg4 loadedAsset:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
@property(nonatomic, getter=isAudioOnly) _Bool audioOnly;
@property(nonatomic) float volume;
@property(nonatomic) double posterTime;
@property(nonatomic) double endTime;
@property(nonatomic) double startTime;
@property(retain, nonatomic) TSPData *audioOnlyImageData;
@property(retain, nonatomic) TSPData *importedAuxiliaryMovieData;
@property(retain, nonatomic) NSURL *movieRemoteURL;
@property(retain, nonatomic) TSPData *movieData;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct MovieArchive *)arg1 archiver:(id)arg2;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct MovieArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieRep : TSDMediaRep <TSKMediaPlayerControllerDelegate>
{
    NSObject<TSKMediaPlayerController> *mPlayerController;
    _Bool mCurrentlyObservingPlayerLayer;
    _Bool mPlayerLayerShouldBeDisplayed;
    CALayer *mPlayerLayer;
    CALayer *mLayerToStroke;
    CALayer *mMovieReflectionLayer;
    CALayer *mMovieReflectionMaskLayer;
    CALayer *mReflectionPlayerLayer;
    CALayer *mReflectionPlayerStrokeMaskLayer;
    CALayer *mPlayerStrokeLayer;
    CALayer *mReflectionPlayerStrokeLayer;
    TSDFrameRep *mReflectionFrameRep;
    CALayer *mReflectionFrameMaskLayer;
    AVAsset *mAssetForPlayability;
    _Bool mDidCheckPlayability;
    _Bool mIsPlayable;
    _Bool mPlayButtonKnobVisible;
    _Bool mDidCancelUpdatingPlayButtonVisibility;
    _Bool mInReadMode;
    struct CGImage *mAlternatePosterImage;
    unsigned long long mIsChangingDynamicVisibleTimeCount;
    float mDynamicVolume;
    _Bool mIsChangingDynamicVolume;
    _Bool mNeedsTeardownPlayerController;
    _Bool mDelayTearingDownPlayerController;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(nonatomic) struct CGImage *alternatePosterImage; // @synthesize alternatePosterImage=mAlternatePosterImage;
@property(readonly, nonatomic, getter=isPlayable) _Bool playable; // @synthesize playable=mIsPlayable;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)willBeginEyedropperMode;
- (void)dynamicVolumeChangeDidEnd;
- (void)dynamicVolumeUpdateToValue:(float)arg1;
- (void)dynamicVolumeChangeDidBegin;
@property(readonly, nonatomic) float volume;
- (void)dynamicVisibleTimeChangeDidEnd;
- (void)dynamicVisibleTimeUpdateToValue:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dynamicVisibleTimeChangeDidBegin;
@property(readonly, nonatomic) double visibleTime;
- (void)dynamicRotateDidEndWithTracker:(id)arg1;
- (void)dynamicRotateDidBegin;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (_Bool)isDraggable;
- (_Bool)canResetMediaSize;
- (id)additionalLayersOverLayer;
- (id)additionalLayersUnderLayer;
- (void)p_updateEndTime;
- (void)p_updateStartTime;
- (void)p_updateVolume;
- (void)p_teardownPlayerControllerIfNeeded;
- (void)p_setNeedsTeardownPlayerControllerOnUpdateLayer;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerControllerIfNecessary;
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;
- (void)p_togglePlaying;
- (void)p_playForKnob;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
@property(readonly, nonatomic) NSObject<TSKMediaPlayerController> *playerController;
- (void)p_updatePlayButtonVisibility;
@property(readonly, nonatomic) _Bool p_playButtonFitsInFrame;
- (void)p_cancelUpdatingUIStateForMoviePlayability;
- (void)p_stopUpdatingUIStateForMoviePlayability;
- (void)p_updateUIStateForMoviePlayability;
- (id)p_playButtonKnob;
- (_Bool)shouldShowMediaReplaceUI;
- (void)willEndReadMode;
- (void)willBeginReadMode;
- (void)willBeRemoved;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (id)newTrackerForKnob:(id)arg1;
- (unsigned long long)enabledKnobMask;
- (void)addKnobsToArray:(id)arg1;
- (void)p_addPlayButtonToKnobs:(id)arg1;
- (void)screenScaleDidChange;
- (void)p_updateRepeatMode;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)wantsToHandleTapsWhenLocked;
@property(readonly, nonatomic) _Bool shouldSingleTapPlay;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)processChangedProperty:(int)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (struct CGImage *)newFrameMaskForViewScale:(double)arg1 frameRect:(struct CGRect *)arg2;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)p_drawInContext:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(double)arg4 withMask:(_Bool)arg5 forShadowOrHitTest:(_Bool)arg6;
- (void)p_drawPosterImageInContext:(struct CGContext *)arg1;
- (void)p_updateMovieReflectionMaskLayer;
- (void)p_drawReflectionGradientIntoMovieReflectionLayer:(struct CGContext *)arg1 reflectionSize:(struct CGSize)arg2;
- (void)p_updateStrokeLayerForStroke:(id)arg1 repLayer:(id)arg2;
- (void)p_applyBasicStrokeToLayer:(id)arg1 layer:(id)arg2 bounds:(struct CGRect)arg3;
- (void)p_drawStrokeInContext:(struct CGContext *)arg1;
- (void)p_drawReflectionStrokeInContext:(struct CGContext *)arg1;
- (void)p_commonDrawStrokeInContext:(struct CGContext *)arg1;
- (void)i_updateFrameRep;
- (void)p_updateReflectionFrameRep;
- (void)updateFromLayout;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)p_placeReflectionPlayerLayer:(struct CGRect)arg1 transform:(struct CGAffineTransform)arg2;
- (void)p_setPositionAndBoundsIfDifferent:(id)arg1 position:(struct CGPoint)arg2 bounds:(struct CGRect)arg3;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)p_arrangeLayerVisibility:(id)arg1;
- (struct CGRect)p_strokeFrameForLayerFrame:(struct CGRect)arg1;
- (void)p_setupStrokeLayers:(_Bool)arg1 needsMaskLayer:(_Bool)arg2 isFrame:(_Bool)arg3;
- (void)p_checkAndsyncTilingLayerState:(_Bool)arg1;
- (void)p_setupPlayerStrokeLayers:(_Bool)arg1;
- (_Bool)p_needsTilingLayerForStroke:(id)arg1;
- (void)setShapeReflectionPlayerStrokeLayer:(id)arg1;
- (void)p_setupTilingReflectionPlayerStrokeLayer;
- (void)p_setupShapeReflectionPlayerStrokeLayer;
- (id)reflectionPlayerStrokeLayer;
- (id)p_tilingLayerForReflectionStroke;
- (id)p_shapeLayerForReflectionStroke;
- (void)p_setupShapePlayerStrokeLayer;
- (void)p_setupTilingPlayerStrokeLayer;
- (id)playerStrokeLayer;
- (id)p_tilingLayerForPlayerStroke;
- (id)p_shapeLayerForPlayerStroke;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_setupPlayerLayerIfNecessary;
- (void)p_setupReflectionPlayerLayerIfNecessary;
- (void)createReflectionLayer;
- (_Bool)shouldShowReflection;
- (void)disposeReflectionLayer;
- (void)p_reallyDisposeReflectionLayers;
- (_Bool)p_shouldHideReflectionLayers;
- (void)p_showReflectionLayers;
- (void)p_hideReflectionLayers;
- (void)p_disposeReflectionStrokeLayers;
- (void)p_disposeMaskLayer;
- (void)p_disposeStrokeLayer;
- (void)p_createReflectionPlayerStrokeMaskLayer;
- (void)p_createMaskLayerForLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (void)dealloc;
- (id)movieLayout;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDCanvasAnimation : NSObject
{
    NSString *_animationID;
    void *_context;
    id _delegate;
    SEL _willStartSelector;
    SEL _didStopSelector;
    double _duration;
    double _delay;
    NSDate *_startDate;
    CAMediaTimingFunction *_timingFunction;
    float _repeatCount;
    _Bool _repeatAutoreverses;
    TSUNoCopyDictionary *_animationDictionariesForLayers;
    CDUnknownBlockType _completionBlock;
    unsigned int _outstandingAnimationCount;
    _Bool _firstAnimationDidStart;
    _Bool _allAnimationsFinishedBeforeStopping;
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) _Bool repeatAutoreverses; // @synthesize repeatAutoreverses=_repeatAutoreverses;
@property(nonatomic) float repeatCount; // @synthesize repeatCount=_repeatCount;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction; // @synthesize timingFunction=_timingFunction;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) SEL didStopSelector; // @synthesize didStopSelector=_didStopSelector;
@property(nonatomic) SEL willStartSelector; // @synthesize willStartSelector=_willStartSelector;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) void *context; // @synthesize context=_context;
@property(readonly, retain, nonatomic) NSString *animationID; // @synthesize animationID=_animationID;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
- (void)setAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithAnimationID:(id)arg1 context:(void *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDRepDragTracker : NSObject <TSDLayoutManipulatingTracker, TSDDecorator, TSDRepTracker, TSDRepDragTracker>
{
    TSDRep *mRep;
    _Bool mDidBeginDrag;
    _Bool mHaveShownHUD;
    _Bool mHaveShownSecondHUD;
    _Bool mHaveShownRuler;
    _Bool mIsInspectorDrivenTracking;
    _Bool mIsDragInsertDrivenTracking;
    _Bool mIsArrowkeyDrivenTracking;
    struct CGPoint mInitialDragPoint;
    struct CGPoint mActualDragPoint;
    struct CGPoint mPreviousActualDragPoint;
    struct CGPoint mLogicalDragPoint;
    TSDHUDViewController *mSecondHUDController;
    struct CGPoint mUnscaledDragDelta;
    _Bool mRoundDragDelta;
    NSTimer *mRulerTimer;
    TSDAutoscroll *mAutoscroll;
    struct CGPoint mAutoscrollPoint;
    id <TSDRepDragTrackerDelegate> mDelegate;
    _Bool mInWillBeginDynamicOperation;
    _Bool mInDidEndDynamicOperation;
    TSUPointerKeyDictionary *mMapRepsToSnapOffsets;
    _Bool mShouldConstrain;
    double mSnapLevel;
    double mConstraintAngle;
    struct CGPoint mConstrainingPoint;
    _Bool mConstraintGuidesShowing;
    CAShapeLayer *mGuideLayer;
    _Bool mShouldShowGuides;
    _Bool mShouldSnapToGuides;
    _Bool mAlreadyInCommandGroup;
    NSMutableSet *mConnectedLineLayouts;
    _Bool mShowDragHUD;
    _Bool mShouldShowRuler;
    _Bool mTrackerDidBeginDragging;
}

@property(nonatomic) _Bool isArrowkeyDrivenTracking; // @synthesize isArrowkeyDrivenTracking=mIsArrowkeyDrivenTracking;
@property(nonatomic) _Bool alreadyInCommandGroup; // @synthesize alreadyInCommandGroup=mAlreadyInCommandGroup;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
@property(nonatomic) _Bool isInspectorDrivenTracking; // @synthesize isInspectorDrivenTracking=mIsInspectorDrivenTracking;
@property(nonatomic) _Bool shouldSnapToGuides; // @synthesize shouldSnapToGuides=mShouldSnapToGuides;
@property(nonatomic) _Bool shouldShowGuides; // @synthesize shouldShowGuides=mShouldShowGuides;
@property(nonatomic) _Bool shouldShowRuler; // @synthesize shouldShowRuler=mShouldShowRuler;
@property(nonatomic) _Bool showDragHUD; // @synthesize showDragHUD=mShowDragHUD;
@property(nonatomic) _Bool isDragInsertDrivenTracking; // @synthesize isDragInsertDrivenTracking=mIsDragInsertDrivenTracking;
@property(readonly, nonatomic) _Bool didBeginDrag; // @synthesize didBeginDrag=mDidBeginDrag;
- (id)p_repsForInfos:(id)arg1 fromReps:(id)arg2;
- (id)p_infosFromReps:(id)arg1;
- (_Bool)p_delegateIsHandlingDrag;
- (void)p_makeSiblingRepsOfRep:(id)arg1 performBlock:(CDUnknownBlockType)arg2;
- (void)p_hideGuideLayer;
- (void)p_showGuideLayer;
- (struct CGRect)p_selectedInfosRect;
- (void)p_updateGuides;
- (void)p_displayRulerAndRect;
- (void)p_hideHUD;
- (void)p_updateHUDAtPoint:(struct CGPoint)arg1;
- (void)p_updateHUDFromTimer;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (_Bool)allowsDelegateToDisplayUIForDragOperation;
- (id)decoratorOverlayLayers;
- (void)didChangeCurrentlyTransformingReps;
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (id)repsForGuidesWhenManipulatingReps:(id)arg1;
- (void)didEndDynamicOperationForReps:(id)arg1;
- (void)commitChangesForReps:(id)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (void)willBeginDynamicOperationForReps:(id)arg1;
- (_Bool)handlesCopyingObjects;
- (void)p_didBeginDrag;
- (void)setConstrainingPoint:(struct CGPoint)arg1;
- (void)setSnapLevel:(double)arg1;
- (void)setShouldConstrain:(_Bool)arg1;
- (void)setLogicalDragPoint:(struct CGPoint)arg1;
- (void)setActualDragPoint:(struct CGPoint)arg1;
- (void)addUnscaledDragDelta:(struct CGPoint)arg1 roundDeltaToViewScale:(_Bool)arg2;
- (void)endPossibleRepDragGesture;
- (void)willEndPossibleRepDragGesture;
- (void)beginShowingDragUIForInitialDragPoint:(struct CGPoint)arg1;
- (id)selectionBehaviorForReps:(id)arg1;
- (void)dealloc;
- (id)initWithRep:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDRepRotateTracker : NSObject <TSDDecorator, TSDLayoutManipulatingTracker, TSDRepTracker>
{
    TSDRep *mRep;
    _Bool mDidBeginRotation;
    _Bool mMovedMinimumDistance;
    struct CGPoint mCenterForRotation;
    double mSnapThreshold;
    double mRotateDeltaInRadians;
    double mCurrentLogicalAngleInDegrees;
    double mCurrentPhysicalAngleInDegrees;
    double mPreviousSnap;
    double mOriginalAngleInDegrees;
    double mOriginalAngleForRotationInDegrees;
    CAShapeLayer *mGuideLayer;
    _Bool mHaveSproingedHUD;
    _Bool mShouldShowHUD;
    id <TSDRepTrackerDelegate> mDelegate;
    _Bool mDelegateRespondsToContinuedDragging;
    TSDRep *mOriginalNonFloatingRep;
    _Bool mIsInspectorDrivenTracking;
}

@property(nonatomic) _Bool isInspectorDrivenTracking; // @synthesize isInspectorDrivenTracking=mIsInspectorDrivenTracking;
@property(nonatomic) double snapThreshold; // @synthesize snapThreshold=mSnapThreshold;
@property(readonly, nonatomic) double originalAngleInDegrees; // @synthesize originalAngleInDegrees=mOriginalAngleInDegrees;
@property(readonly, nonatomic) double currentLogicalAngleInDegrees; // @synthesize currentLogicalAngleInDegrees=mCurrentLogicalAngleInDegrees;
@property(nonatomic) struct CGPoint centerForRotation; // @synthesize centerForRotation=mCenterForRotation;
@property(nonatomic) _Bool shouldShowHUD; // @synthesize shouldShowHUD=mShouldShowHUD;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=mRep;
- (void)p_makeSiblingRepsPerformBlock:(CDUnknownBlockType)arg1;
- (_Bool)p_shouldApplyRotateToSiblingsOfRep;
- (void)p_hideGuideLayer;
- (void)p_updateGuideLayerWithAngle:(double)arg1 didSnap:(_Bool)arg2;
- (void)p_hideHUD;
- (void)p_sproingHUD;
- (void)p_updateHUDWithAngle:(double)arg1;
- (void)p_begin;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)decoratorOverlayLayers;
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(id)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (struct CGAffineTransform)rotateTransform;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (void)addRotateDelta:(double)arg1;
- (void)dealloc;
- (id)initWithRep:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDFrame : TSDStroke
{
    TSDFrameSpec *mSpec;
    NSString *mFrameName;
    double mAssetScale;
    _Bool mScaledSizesValid;
    double mLeftWidth;
    double mRightWidth;
    double mTopHeight;
    double mBottomHeight;
    struct CGSize mAdornmentSize;
}

+ (Class)mutableClass;
@property(readonly, nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mSpec;
@property(readonly, nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;
- (struct CGSize)p_minimumRenderedSize;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (_Bool)canApplyDirectlyToRepCALayer;
- (_Bool)isNullStroke;
- (double)equivalentStrokeWidth;
- (struct _TSDStrokeOutsets)outsets;
- (_Bool)containsPoint:(struct CGPoint)arg1 whenStrokingRect:(struct CGRect)arg2;
- (_Bool)shouldRenderForSizeIncludingCoverage:(struct CGSize)arg1;
- (_Bool)shouldRender;
- (_Bool)supportsLineOptions;
- (_Bool)supportsColor;
- (_Bool)supportsPattern;
- (_Bool)isFrame;
- (struct CGRect)coverageRectWithoutAdornment:(struct CGRect)arg1;
- (struct CGRect)coverageRect:(struct CGRect)arg1;
- (struct CGRect)p_coverageRectWithAdornment:(struct CGRect)arg1;
- (struct CGRect)p_coverageRectWithoutAdornment:(struct CGRect)arg1;
- (struct CGRect)p_uncoveredRectWithoutAdornment:(struct CGRect)arg1;
- (_Bool)hasMask;
- (double)minimumAssetScale;
- (id)archivableFrameName;
- (id)frameName;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFrameName:(id)arg1;
- (id)initWithFrameSpec:(id)arg1;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2;
- (id)initWithFrameSpec:(id)arg1 assetScale:(double)arg2 archivableFrameName:(id)arg3;
- (id)strokeByTransformingByTransform:(struct CGAffineTransform)arg1;
- (_Bool)i_willRenderForRect:(struct CGRect)arg1;
- (struct CGRect)i_adornmentRectForRect:(struct CGRect)arg1;
- (double)i_bottomHeight;
- (double)i_topHeight;
- (double)i_rightWidth;
- (double)i_leftWidth;
- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableFrame : TSDFrame
{
}

@property(nonatomic) double assetScale; // @dynamic assetScale;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDHobbyPathGenerator : NSObject
{
    _Bool mClosed;
    struct vector<CGPoint, std::__1::allocator<CGPoint>> *mPoints;
    struct vector<CGPoint, std::__1::allocator<CGPoint>> *mMorphedPoints;
}

- (void)adjustRotationalSymmetry:(id)arg1;
- (void)adjustRatio:(id)arg1;
- (void)adjustNodeTypes:(id)arg1;
- (void)adjustRemoveStraightNodes:(id)arg1;
- (void)adjustStraightenUp:(id)arg1;
- (void)adjustStraightEdges:(id)arg1;
- (void)calculateClosings;
- (id)calculateHobbyPath;
- (void)morphPointsTo:(id)arg1;
- (double)distanceForSegment:(unsigned long long)arg1 overRange:(struct _NSRange)arg2 furthestNode:(unsigned long long *)arg3 inSubpath:(id)arg4;
- (id)hobbyPathFrom:(id)arg1 morphedPath:(id *)arg2;
- (_Bool)pathWillClose:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDSwatchCache : NSObject
{
    NSOperationQueue *mOperationQueue;
}

+ (id)swatchCache;
- (id)imageForMoviePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 movieInfo:(id)arg4 shouldClipVertically:(_Bool)arg5 documentRoot:(id)arg6;
- (id)imageForMoviePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 shouldClipVertically:(_Bool)arg6 documentRoot:(id)arg7;
- (id)p_thumbnailImageDataForImageData:(id)arg1;
- (id)p_maskInfoForMovieInfo:(id)arg1 context:(id)arg2;
- (struct CGSize)imageSizeForPreset:(id)arg1 swatchSize:(struct CGSize)arg2;
- (id)imageForImagePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 shouldClipVertically:(_Bool)arg6 documentRoot:(id)arg7;
- (struct CGImage *)p_newImageWithConnectionLineKnobsForShape:(id)arg1 atScale:(double)arg2 ofSize:(struct CGSize)arg3 overImage:(struct CGImage *)arg4;
- (id)imageForShapePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 angle:(double)arg6 documentRoot:(id)arg7;
- (id)imageForImagePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 imageInfo:(id)arg4 shouldClipVertically:(_Bool)arg5 documentRoot:(id)arg6;
- (id)imageForShapePreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 shapeType:(int)arg4 angle:(double)arg5 documentRoot:(id)arg6;
- (void)applyFakeShadowForWhitePresetsIfNecessary:(id)arg1 documentRoot:(id)arg2;
- (struct CGSize)shapeSwatchInset;
- (void)warmStyle:(id)arg1 withFillProperty:(int)arg2 documentRoot:(id)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDStyleWarmingOperation : NSOperation
{
    TSSStyle *mStyle;
    int mProperty;
    TSKAccessController *mAccessController;
}

- (void)warm;
- (void)main;
- (id)initWithStyle:(id)arg1 property:(int)arg2 accessController:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDAutoscroll : NSObject
{
    NSObject<TSDAutoscrollDelegate> *mTarget;
    struct CGPoint mPoint;
    int mDirections;
    double mRepeatInterval;
    NSTimer *mTimer;
    unsigned long long mCount;
    _Bool mActive;
    struct CGPoint mLastAutoscrollDelta;
    double mLastFired;
}

+ (void)startAutoscroll:(id)arg1 unscaledPoint:(struct CGPoint)arg2;
@property(readonly, nonatomic) struct CGPoint lastAutoscrollDelta; // @synthesize lastAutoscrollDelta=mLastAutoscrollDelta;
@property(nonatomic) _Bool active; // @synthesize active=mActive;
@property(nonatomic) unsigned long long count; // @synthesize count=mCount;
@property(nonatomic) double repeatInterval; // @synthesize repeatInterval=mRepeatInterval;
@property(nonatomic) int directions; // @synthesize directions=mDirections;
@property(nonatomic) struct CGPoint point; // @synthesize point=mPoint;
@property(nonatomic) NSObject<TSDAutoscrollDelegate> *target; // @synthesize target=mTarget;
- (void)timerFired:(id)arg1;
- (unsigned long long)p_deltaForCount:(unsigned long long)arg1;
- (void)invalidate;
- (_Bool)startAutoscroll:(id)arg1 unscaledPoint:(struct CGPoint)arg2 directions:(int)arg3 repeatInterval:(double)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDTilingLayer : CALayer
{
    int mTilingMode;
    struct CGSize mTileSize;
    struct {
        unsigned int tiled:1;
        unsigned int hasCustomContents:1;
        unsigned int drawsInBackground:1;
        unsigned int needsTileLayout:1;
        unsigned int needsTileDisplay:1;
        unsigned int needsSelfDisplay:1;
    } mFlags;
    struct CGRect mLastVisibleBounds;
    struct CGSize mLastBoundsSize;
    CALayer *mProviderContentLayer;
    NSMutableArray *mDirtyTiles;
    _Bool mHasEverHadTileLayout;
}

+ (struct CGImage *)p_newGeneratedCheckerboardImage;
+ (struct CGImage *)p_newCheckerboardImage;
@property(nonatomic) int tilingMode; // @synthesize tilingMode=mTilingMode;
- (id)p_nonTileAndContentLayers;
- (id)p_tileAndContentLayers;
- (id)p_tileLayers;
- (_Bool)p_updateTileSizeWithLayerSize:(struct CGSize)arg1;
- (void)i_setNeedsTileDisplayForTile:(id)arg1;
- (void)i_drawTileInBackground:(id)arg1 inRect:(struct CGRect)arg2;
- (void)i_drawRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 inBackground:(_Bool)arg3;
- (void)i_drawTile:(id)arg1 inContext:(struct CGContext *)arg2;
- (_Bool)tilingSafeHasContents;
- (void)tilingSafeSetSublayers:(id)arg1;
@property(nonatomic) _Bool drawsInBackground;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)layoutSublayers;
- (void)cancelLayoutForTilingLayers;
- (void)setNeedsLayoutForTilingLayers;
- (void)setNeedsLayout;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)display;
- (void)setTileContents:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsScale:(double)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDTilingTileLayer : TSDNoDefaultImplicitActionLayer
{
    unsigned long long mIndex;
    _Bool mNeedsTileDisplay;
    CDStruct_73b5d383 mLocation;
}

@property(nonatomic) CDStruct_4bcfbbae location; // @synthesize location=mLocation;
@property(nonatomic) _Bool needsTileDisplay; // @synthesize needsTileDisplay=mNeedsTileDisplay;
@property(nonatomic) unsigned long long index; // @synthesize index=mIndex;
- (id)tileContentsLayer;
- (void)setNeedsDisplayInRectIgnoringBackground:(struct CGRect)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)updateFrameWithTileSize:(struct CGSize)arg1 tilesWide:(unsigned long long)arg2 tilesHigh:(unsigned long long)arg3;
- (id)hitTest:(struct CGPoint)arg1;
- (void)cancelLayoutForTilingLayers;
- (void)setNeedsLayoutForTilingLayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)display;

@end

__attribute__((visibility("hidden")))
@interface TSDTilingLimitedQueue : TSUWidthLimitedQueue
{
}

- (id)initWithLimit:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDTilingBackgroundQueue : NSObject
{
    NSObject<OS_dispatch_semaphore> *mCanEnqueueReaders;
    NSObject<OS_dispatch_group> *mInFlightReaders;
    int mReaderSpinLock;
    unsigned long long mReaderCount;
    NSObject<OS_dispatch_semaphore> *mReadLockUnlockSignal;
    NSObject<OS_dispatch_semaphore> *mReadLockLockedSignal;
    _Bool mHoldingRead;
    long long mShutdownToken;
    _Bool mShuttingDown;
    TSKAccessController *mAccessController;
}

+ (_Bool)isHoldingReadLockFromBackgroundQueue;
+ (id)p_sharedLimitedQueue;
@property(getter=isShuttingDown) _Bool shuttingDown; // @synthesize shuttingDown=mShuttingDown;
- (void)p_readUnlock;
- (void)p_readLock;
- (void)drainAndPerformSync:(CDUnknownBlockType)arg1;
- (void)performAsync:(CDUnknownBlockType)arg1;
- (void)shutdown;
- (void)dealloc;
- (id)initWithAccessController:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDExteriorTextWrap : NSObject <NSCopying, NSMutableCopying>
{
    _Bool _isHTMLWrap;
    int _type;
    int _direction;
    int _fitType;
    double _margin;
    double _alphaThreshold;
}

+ (id)exteriorTextWrapWithIsHTMLWrap:(_Bool)arg1 type:(int)arg2 direction:(int)arg3 fitType:(int)arg4 margin:(double)arg5 alphaThreshold:(double)arg6;
+ (id)exteriorTextWrap;
@property(readonly, nonatomic) double alphaThreshold; // @synthesize alphaThreshold=_alphaThreshold;
@property(readonly, nonatomic) double margin; // @synthesize margin=_margin;
@property(readonly, nonatomic) int fitType; // @synthesize fitType=_fitType;
@property(readonly, nonatomic) int direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
@property(readonly, nonatomic) _Bool isHTMLWrap; // @synthesize isHTMLWrap=_isHTMLWrap;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIsHTMLWrap:(_Bool)arg1 type:(int)arg2 direction:(int)arg3 fitType:(int)arg4 margin:(double)arg5 alphaThreshold:(double)arg6;
- (id)init;
- (void)saveToArchive:(struct ExteriorTextWrapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ExteriorTextWrapArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableExteriorTextWrap : TSDExteriorTextWrap
{
}

- (void)setAlphaThreshold:(double)arg1;
- (void)setMargin:(double)arg1;
- (void)setFitType:(int)arg1;
- (void)setDirection:(int)arg1;
- (void)setType:(int)arg1;
- (void)setIsHTMLWrap:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDDrawableLayout : TSDLayout <TSDWrappable>
{
    TSDWrapPolygon *mCachedWrapPolygon;
    TSDBezierPath *mCachedWrapPath;
    TSDBezierPath *mCachedExternalWrapPath;
}

- (_Bool)supportsInspectorPositioning;
- (void)invalidateParentForWrap;
- (void)i_invalidateWrap;
- (_Bool)allowsConnections;
- (void)parentDidChange;
- (void)processChangedProperty:(int)arg1;
- (void)setGeometry:(id)arg1;
- (void)dragBy:(struct CGPoint)arg1;
- (void)invalidateExteriorWrap;
- (void)invalidate;
@property(readonly, nonatomic) _Bool hasAlpha;
- (int)wrapFitType;
- (int)wrapDirection;
- (int)wrapType;
- (_Bool)isHTMLWrap;
- (id)wrapPolygon;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (id)i_computeWrapPath;
- (id)i_computeWrapPathClosed:(_Bool)arg1;
- (struct CGRect)boundsInRoot;
- (struct CGRect)boundsInfluencingExteriorWrap;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDCanvas : NSObject
{
    id <TSDCanvasDelegate> mDelegate;
    TSDInteractiveCanvasController *mCanvasController;
    NSArray *mInfos;
    NSArray *mTopLevelReps;
    NSSet *mAllReps;
    struct __CFDictionary *mRepsByLayout;
    TSDLayoutController *mLayoutController;
    _Bool mIsTemporaryForLayout;
    struct CGSize mUnscaledSize;
    double mViewScale;
    double mContentsScale;
    struct {
        unsigned int layout:1;
        unsigned int reps:1;
        unsigned int visibleBounds:1;
        unsigned int layers:1;
    } mInvalidFlags;
    _Bool mInLayout;
    NSArray *mPreviouslyVisibleLayouts;
    _Bool mIgnoringClickThrough;
    struct CGColor *mBackgroundColor;
    struct UIEdgeInsets mContentInset;
    _Bool mClipToCanvas;
    _Bool mAllowsFontSubpixelQuantization;
    _Bool mSuppressesShadowsAndReflections;
}

@property(readonly, nonatomic) _Bool isTemporaryForLayout; // @synthesize isTemporaryForLayout=mIsTemporaryForLayout;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;
@property(nonatomic) _Bool suppressesShadowsAndReflections; // @synthesize suppressesShadowsAndReflections=mSuppressesShadowsAndReflections;
@property(nonatomic) _Bool allowsFontSubpixelQuantization; // @synthesize allowsFontSubpixelQuantization=mAllowsFontSubpixelQuantization;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGColor *backgroundColor; // @synthesize backgroundColor=mBackgroundColor;
@property(readonly, nonatomic) TSDLayoutController *layoutController; // @synthesize layoutController=mLayoutController;
@property(copy, nonatomic) NSArray *infosToDisplay; // @synthesize infosToDisplay=mInfos;
@property(nonatomic) id <TSDCanvasDelegate> delegate; // @synthesize delegate=mDelegate;
- (void)p_removeAllReps;
- (void)orderRepsForLayout:(id)arg1;
- (_Bool)p_updateRepsFromLayouts;
- (void)p_layoutWithReadLock;
- (struct CGRect)p_bounds;
- (struct CGImage *)i_newImageInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2 integralBounds:(struct CGRect)arg3 distortedToMatch:(_Bool)arg4;
- (struct CGContext *)i_createContextToDrawImageInScaledRect:(struct CGRect)arg1 withTargetIntegralSize:(struct CGSize)arg2 returningBounds:(struct CGRect *)arg3 integralBounds:(struct CGRect *)arg4 forceSRGB:(_Bool)arg5;
- (struct CGImage *)i_imageInScaledRect:(struct CGRect)arg1 withTargetIntegralSize:(struct CGSize)arg2 distortedToMatch:(_Bool)arg3 forceSRGB:(_Bool)arg4;
- (struct CGImage *)i_imageInScaledRect:(struct CGRect)arg1 forceSRGB:(_Bool)arg2;
- (struct CGImage *)i_image;
- (void)i_clipsImagesToBounds:(_Bool)arg1;
- (void)i_drawRepsInContext:(struct CGContext *)arg1;
- (void)i_drawRepsInContext:(struct CGContext *)arg1 distort:(struct CGAffineTransform)arg2;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)i_drawBackgroundInContext:(struct CGContext *)arg1 bounds:(struct CGRect)arg2;
- (void)i_drawBackgroundInContext:(struct CGContext *)arg1;
- (struct CGRect)i_clipRectForCreatingRepsFromLayouts;
- (struct CGRect)i_unscaledRectOfLayouts;
- (struct CGRect)i_approximateScaledFrameOfEditingMenuAtPoint:(struct CGPoint)arg1;
- (void)i_unregisterRep:(id)arg1;
- (void)i_registerRep:(id)arg1;
- (_Bool)i_shouldIgnoreClickThrough;
- (void)i_performBlockWhileIgnoringClickThrough:(CDUnknownBlockType)arg1;
- (_Bool)p_expandHitRegionOfPoint:(struct CGPoint)arg1 forRep:(id)arg2 smallRepOutset:(double)arg3 forShortestDistance:(double *)arg4;
- (_Bool)p_shouldRep:(id)arg1 countAsClosestSmallRepForSizeLimit:(double)arg2;
- (id)hitRep:(struct CGPoint)arg1 inTopLevelReps:(id)arg2 smallRepOutset:(double)arg3 passingTest:(CDUnknownBlockType)arg4;
- (struct CGRect)visibleUnscaledRectForClippingReps;
- (struct CGSize)convertBoundsToUnscaledSize:(struct CGSize)arg1;
- (struct CGSize)convertUnscaledToBoundsSize:(struct CGSize)arg1;
- (struct CGPoint)convertBoundsToUnscaledPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertUnscaledToBoundsPoint:(struct CGPoint)arg1;
- (struct CGRect)convertBoundsToUnscaledRect:(struct CGRect)arg1;
- (struct CGRect)convertUnscaledToBoundsRect:(struct CGRect)arg1;
- (double)contentsScale;
- (void)i_setContentsScale:(double)arg1;
- (_Bool)isDrawingIntoPDF;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldShowTextOverflowGlyphs;
- (_Bool)isPrinting;
@property(readonly, nonatomic) _Bool isCanvasInteractive;
- (_Bool)spellCheckingSuppressed;
- (_Bool)spellCheckingSupported;
@property(readonly, nonatomic) _Bool supportsAdaptiveLayout;
- (_Bool)i_needsLayout;
- (void)layoutIfNeeded;
- (void)invalidateLayers;
- (void)invalidateVisibleBounds;
- (void)invalidateReps;
- (void)layoutInvalidated;
- (void)recreateAllLayoutsAndReps;
- (id)allReps;
- (id)topLevelReps;
- (id)repForLayout:(id)arg1;
- (void)i_updateInfosInLayoutController;
- (void)i_setInfosToDisplay:(id)arg1 updatingLayoutController:(_Bool)arg2;
@property(readonly, nonatomic) TSDInteractiveCanvasController *canvasController;
- (void)i_setCanvasController:(id)arg1;
@property(readonly, nonatomic) TSKAccessController *accessController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier;
- (id)commandController;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (void)dealloc;
- (void)teardown;
- (id)initForTemporaryLayout;
- (id)init;
- (id)textRendererForLayer:(id)arg1 context:(struct CGContext *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDArchivedCanvasSelection : TSPObject <TSKArchivedSelection>
{
    TSKSelection<TSDCanvasSelection> *mSelection;
}

@property(retain, nonatomic) TSKSelection *selection; // @synthesize selection=mSelection;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieLayout : TSDMediaLayout
{
    TSDInfoGeometry *mDynamicInfoGeometry;
}

- (void)p_destroyDynamicCopies;
- (void)p_createDynamicCopies;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (id)computeLayoutGeometry;
- (struct CGRect)fullReflectionFrame;
- (struct CGRect)fullReflectionBoundsForRect:(struct CGRect)arg1;
- (void)endDynamicOperation;
- (void)endResize;
- (void)takeSizeFromTracker:(id)arg1;
- (void)beginDynamicOperation;
- (void)takeRotationFromTracker:(id)arg1;
- (id)movieInfo;
- (id)layoutGeometryFromInfo;
- (_Bool)supportsRotation;
- (id)i_computeWrapPath;
- (void)processChangedProperty:(int)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDWrapPolygon : NSObject <NSCopying>
{
    void *mPolygon;
    _Bool mIntersectsSelf;
    _Bool mComputedSelfIntersection;
    struct CGRect mBounds;
    _Bool mComputedBounds;
}

- (id).cxx_construct;
- (struct CGPoint)intersectionPointBetween:(struct CGPoint)arg1 and:(struct CGPoint)arg2;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPath;
- (struct CGRect)bounds;
- (void *)polygon;
- (_Bool)intersectsSelf;
- (void)setIntersectsSelf:(_Bool)arg1;
- (void)setPath:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPath:(id)arg1;
- (void)p_computeIntersectionState;
- (int)p_countSegments;
- (void)p_setPolygon:(CDStruct_727a4eeb *)arg1;
- (void)p_freePolygon;

@end

__attribute__((visibility("hidden")))
@interface TSDImageRepSizingState : NSObject
{
    struct CGSize mDesiredSize;
    TSDImageProvider *mProvider;
    struct CGPath *mMaskPath;
    _Bool mIncludesAdjustments;
    int mStatus;
    struct CGImage *mSizedImage;
    long long mSizedImageOrientation;
}

@property(nonatomic) _Bool sizedImageIncludesAdjustments; // @synthesize sizedImageIncludesAdjustments=mIncludesAdjustments;
@property(readonly, nonatomic) struct CGPath *maskPath; // @synthesize maskPath=mMaskPath;
@property(nonatomic) long long sizedImageOrientation; // @synthesize sizedImageOrientation=mSizedImageOrientation;
@property(nonatomic) struct CGImage *sizedImage; // @synthesize sizedImage=mSizedImage;
@property(nonatomic) int status; // @synthesize status=mStatus;
@property(retain, nonatomic) TSDImageProvider *provider; // @synthesize provider=mProvider;
@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=mDesiredSize;
- (void)generateSizedImage;
@property(readonly, nonatomic) _Bool sizedImageHasMask;
- (void)dealloc;
- (id)initWithDesiredSize:(struct CGSize)arg1 provider:(id)arg2 maskPath:(struct CGPath *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDFrameSpec : NSObject <NSCopying>
{
    NSBundle *mBundle;
    NSString *mFrameName;
    double mLeftInset;
    double mRightInset;
    double mTopInset;
    double mBottomInset;
    struct CGPoint mAdornmentPosition;
    double mMinimumAssetScale;
    int mTilingMode;
    _Bool mDisplayInPicker;
    _Bool mHasImages;
    _Bool mHasMask;
    _Bool mHasAdornment;
    NSMutableDictionary *mProvidersByKey;
    _Bool mLoadedImageMetrics;
    double mLeftWidth;
    double mRightWidth;
    double mTopHeight;
    double mBottomHeight;
    struct CGSize mAdornmentSize;
    int mInterest;
}

+ (id)p_imageKeys;
+ (id)frameSpecWithName:(id)arg1;
+ (id)frameSpecs;
@property(readonly, nonatomic) _Bool displayInPicker; // @synthesize displayInPicker=mDisplayInPicker;
@property(readonly, copy, nonatomic) NSString *frameName; // @synthesize frameName=mFrameName;
- (void)p_loadImageMetrics;
- (id)p_imageDataForKey:(id)arg1;
- (id)p_infoDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithBundle:(id)arg1;
- (int)i_tilingMode;
- (struct CGPoint)i_adornmentPosition;
- (double)i_minimumAssetScale;
- (struct CGSize)i_adornmentSize;
- (double)i_bottomHeight;
- (double)i_topHeight;
- (double)i_rightWidth;
- (double)i_leftWidth;
- (double)i_bottomInset;
- (double)i_topInset;
- (double)i_rightInset;
- (double)i_leftInset;
- (id)i_providerForIndex:(int)arg1 mask:(_Bool)arg2;
- (void)i_removeInterestInProviders;
- (void)i_addInterestInProviders;
- (_Bool)i_hasAdornment;
- (_Bool)i_hasMask;
- (_Bool)i_hasImages;

@end

__attribute__((visibility("hidden")))
@interface TSDFrameRep : NSObject
{
    TSDFrame *mFrame;
    NSArray *mImages;
    NSArray *mMasks;
    TSDBitmapImageProvider *mAdornment;
    CALayer *mMaskLayer;
    _Bool mShouldEnableBlendMode;
}

- (void)p_adjustRepeatingLayer:(id)arg1 withImageRect:(struct CGRect)arg2 start:(double)arg3 end:(double)arg4 vertical:(_Bool)arg5;
- (void)p_setRepeatingLayerWithIndex:(unsigned int)arg1 sublayers:(id)arg2 maskLayers:(id)arg3 toRect:(struct CGRect)arg4 start:(double)arg5 end:(double)arg6;
- (void)p_setUnreplicatedLayerWithIndex:(unsigned int)arg1 sublayers:(id)arg2 maskLayers:(id)arg3 toRect:(struct CGRect)arg4;
- (id)p_createRepeatingLayerWithImage:(struct CGImage *)arg1 vertical:(_Bool)arg2 screenScale:(double)arg3;
- (void)p_addEdgeLayerForIndex:(unsigned int)arg1 toLayer:(id)arg2 maskLayer:(id)arg3;
- (void)p_addUnreplicatedLayerForIndex:(unsigned int)arg1 toLayer:(id)arg2 maskLayer:(id)arg3;
- (void)p_drawTiles:(id)arg1 inContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 start:(double)arg4 end:(double)arg5 vertical:(_Bool)arg6;
- (void)p_drawFrameIntoRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 withImages:(id)arg3 atViewScale:(double)arg4 isMask:(_Bool)arg5;
- (struct CGImage *)p_newRenderedFrameForMask:(_Bool)arg1 size:(struct CGSize)arg2 forCALayer:(_Bool)arg3 viewScale:(double)arg4;
- (struct CGImage *)newFrameForMask:(_Bool)arg1 size:(struct CGSize)arg2 forCALayer:(_Bool)arg3 viewScale:(double)arg4;
- (void)updateCALayer:(id)arg1 toRect:(struct CGRect)arg2 withRepLayer:(id)arg3 maskLayer:(id)arg4 viewScale:(double)arg5 maskLayerTransform:(struct CGAffineTransform)arg6;
- (id)applyToCALayer:(id)arg1 withRepLayer:(id)arg2 maskLayer:(id)arg3 viewScale:(double)arg4;
- (void)blendMaskBeforeRenderingImageInContext:(struct CGContext *)arg1;
- (void)applyMaskForRectWithCoverage:(struct CGRect)arg1 toContext:(struct CGContext *)arg2;
- (void)frameRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2 withTotalScale:(double)arg3;
- (id)frame;
- (void)dealloc;
- (id)initWithTSDFrame:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDFrameImageCacheEntry : NSObject
{
    TSDFrameSpec *mFrameSpec;
    double mAssetScale;
    struct CGSize mSize;
    double mViewScale;
    struct CGImage *mImages[4];
}

@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(nonatomic) double assetScale; // @synthesize assetScale=mAssetScale;
@property(nonatomic) TSDFrameSpec *frameSpec; // @synthesize frameSpec=mFrameSpec;
- (void)setImage:(struct CGImage *)arg1 forCALayer:(_Bool)arg2 mask:(_Bool)arg3;
- (struct CGImage *)newImageForCALayer:(_Bool)arg1 mask:(_Bool)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDFrameImageCache : NSObject
{
    NSMutableArray *mEntries;
}

+ (id)sharedFrameImageCache;
- (void)p_didReceiveMemoryWarning:(id)arg1;
- (id)p_newEntryForFrame:(id)arg1 size:(struct CGSize)arg2 viewScale:(double)arg3 createIfNeeded:(_Bool)arg4;
- (struct CGImage *)setCachedImage:(struct CGImage *)arg1 forFrame:(id)arg2 size:(struct CGSize)arg3 viewScale:(double)arg4 forCALayer:(_Bool)arg5 mask:(_Bool)arg6;
- (struct CGImage *)newCachedImageForFrame:(id)arg1 size:(struct CGSize)arg2 viewScale:(double)arg3 forCALayer:(_Bool)arg4 mask:(_Bool)arg5;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDGroupInfo : TSDDrawableInfo <TSDMutableContainerInfo, TSDMixing, TSKDocumentObject, TSDSelectionStatisticsContributor>
{
    NSMutableArray *mChildInfos;
    _Bool mIsInDocument;
}

+ (id)p_drawablesToInsertForGroup:(id)arg1 filteredWithTarget:(id)arg2 action:(SEL)arg3 didUngroup:(_Bool *)arg4;
+ (id)drawablesToInsertForGroup:(id)arg1 filteredWithTarget:(id)arg2 action:(SEL)arg3;
+ (id)groupGeometryFromChildrenInfos:(id)arg1;
- (void)processSelectedStoragesWithStatisticsController:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)commandToFlipWithOrientation:(int)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (_Bool)canAnchor;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)ensureGeometryFitsChildren;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)makeChildGeometriesRelativeAndComputeOwnAbsoluteGeometry;
- (id)ungroupedGeometryForChildInfo:(id)arg1;
- (id)groupedGeometryForChildInfo:(id)arg1;
- (void)removeAllChildrenInDocument:(_Bool)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (id)allNestedChildrenInfosIncludingGroups;
- (id)allNestedChildrenInfos;
- (id)copyWithContext:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (_Bool)aspectRatioLocked;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct GroupArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct GroupArchive *)arg1 unarchiver:(id)arg2 upgradeDOLC:(_Bool)arg3;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)containsDisallowedElementKind:(unsigned int)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDCommentStorage : TSPObject <TSPCopying>
{
    NSString *mText;
    NSDate *mCreationDate;
    TSKAnnotationAuthor *mAuthor;
    id <TSDCommentStorageDelegate> mDelegate;
}

- (void)p_notifyDelegate;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithContext:(id)arg1;
- (void)loadFromArchive:(const struct CommentStorageArchive *)arg1 unarchiver:(id)arg2;
- (id)creationDateString;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)appendText:(id)arg1;
- (void)dealloc;
@property(copy, nonatomic) NSString *text;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 author:(id)arg2;
- (id)initWithContext:(id)arg1 text:(id)arg2 creationDate:(id)arg3 author:(id)arg4;
@property(nonatomic) id <TSDCommentStorageDelegate> delegate;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
@property(copy, nonatomic) NSDate *creationDate;

@end

__attribute__((visibility("hidden")))
@interface TSDGroupRep : TSDContainerRep <TSDMagicMoveMatching>
{
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
- (_Bool)p_handleSubselectionTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleMultipleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)wantsToHandleTapsWhenLocked;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (id)dynamicResizeDidBegin;
- (void)dynamicOperationDidBegin;
- (id)allRepsContainedInGroup;
- (void)setNeedsDisplay;
- (void)processChangedProperty:(int)arg1;
- (_Bool)intersectsUnscaledRect:(struct CGRect)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertNaturalPointFromUnscaledCanvas:(struct CGPoint)arg1;
- (_Bool)shouldShowCommentHighlight;
- (struct CGRect)frameInUnscaledCanvas;
- (struct CGColor *)selectionHighlightColor;
- (_Bool)shouldShowSelectionHighlight;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (struct CGRect)clipRect;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)isDraggable;
- (Class)layerClass;
- (_Bool)directlyManagesLayerContent;

@end

__attribute__((visibility("hidden")))
@interface TSDGroupLayout : TSDContainerLayout <TSDWrappableParent>
{
    TSDLayoutGeometry *mDynamicLayoutGeometry;
    struct CGRect mBoundsForStandardKnobs;
    TSDBezierPath *mCachedWrapPath;
    TSDBezierPath *mCachedExternalWrapPath;
}

- (void)p_invalidateDescendentWrapPaths;
- (void)p_invalidateParentForWrap;
- (void)p_destroyDynamicCopies;
- (void)setDynamicGeometry:(id)arg1;
- (void)p_createDynamicCopies;
- (id)descendentWrappables;
- (void)wrappableChildInvalidated;
- (id)i_externalWrapPath;
- (id)i_wrapPath;
- (id)i_computeWrapPath;
- (id)p_childWrapPathsFrom:(id)arg1;
- (_Bool)supportsFlipping;
- (_Bool)canFlip;
- (_Bool)supportsRotation;
- (_Bool)supportsParentRotation;
- (_Bool)allowsConnections;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (_Bool)providesGuidesForChildLayouts;
- (void)setGeometry:(id)arg1;
- (void)dragBy:(struct CGPoint)arg1;
- (void)invalidateExteriorWrap;
- (void)invalidate;
- (void)endDynamicOperation;
- (struct CGSize)minimumSize;
- (void)takeSizeFromTracker:(id)arg1;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)takeRotationFromTracker:(id)arg1;
- (id)computeInfoGeometryDuringResize;
- (void)beginDynamicOperation;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)alignmentFrame;
- (struct CGRect)clipRect;
- (struct CGRect)boundsForStandardKnobs;
- (void)processChangedProperty:(int)arg1;
- (id)computeLayoutGeometry;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (id)reliedOnLayouts;
- (id)layoutGeometryFromInfo;
- (id)visibleGeometries;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDAudioLayout : TSDMediaLayout
{
}

- (id)movieInfo;
- (int)wrapType;
- (_Bool)canFlip;
- (_Bool)allowsConnections;
- (struct CGRect)alignmentFrame;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (_Bool)shouldDisplayGuides;
- (id)layoutGeometryFromInfo;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)supportsRotation;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDAudioRep : TSDMediaRep <TSKMediaPlayerControllerDelegate, TSDAudioHUDControllerDelegate>
{
    TSKAVPlayerController *mPlayerController;
    CALayer *mPlayPauseButtonLayer;
    CALayer *mAudioImageLayer;
    float mDynamicVolume;
    _Bool mIsChangingDynamicVolume;
    id <TSDAudioHUDController> mAudioHUDController;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
@property(readonly, nonatomic) id <TSDAudioHUDController> audioHUDController; // @synthesize audioHUDController=mAudioHUDController;
- (void)p_teardownAudioHUD;
- (void)p_updateAudioHUDWithFrame:(struct CGRect)arg1;
- (void)setupPlayerControllerForAudioHUDController:(id)arg1;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
@property(readonly, nonatomic) TSKAVPlayerController *playerController;
- (void)p_teardownPlayerController;
- (void)p_setupPlayerControllerIfNecessary;
- (_Bool)p_shouldPlayerControllerExistThroughoutSelection;
- (void)dynamicVolumeChangeDidEnd;
- (void)dynamicVolumeUpdateToValue:(float)arg1;
- (void)dynamicVolumeChangeDidBegin;
@property(readonly, nonatomic) float volume;
- (void)p_updateButtonForPlaying:(_Bool)arg1 pressed:(_Bool)arg2;
- (id)textureWithContext:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)didEndZooming;
- (void)willBeginZooming;
- (_Bool)exclusivelyProvidesGuidesWhileAligning;
- (_Bool)providesGuidesWhileAligning;
- (struct CGRect)boundsForStandardKnobs;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (_Bool)shouldShowKnobs;
- (_Bool)p_isEditingAnimations;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)shouldShowSizesInRulers;
- (_Bool)shouldShowDragHUD;
- (_Bool)isDraggable;
- (void)updatePositionsOfKnobs:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (_Bool)shouldCreateSelectionKnobs;
- (id)newTrackerForKnob:(id)arg1;
@property(readonly, nonatomic) _Bool shouldBecomeSelectedWhenPlaying;
- (void)p_updateEndTime;
- (void)p_updateStartTime;
- (void)p_updateVolume;
- (void)p_updateRepeatMode;
- (void)processChangedProperty:(int)arg1;
- (_Bool)p_isPlaying;
- (_Bool)shouldAllowReplacementFromDrop;
- (_Bool)shouldAllowReplacementFromPaste;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (void)updatePlayButtonForPoint:(struct CGPoint)arg1;
- (_Bool)hitPlayPauseButtonWithPoint:(struct CGPoint)arg1;
- (void)willBeginReadMode;
- (void)willBeRemoved;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)p_shouldShowPlayPauseLayers;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (_Bool)shouldShowMediaReplaceUI;
- (_Bool)canResetMediaSize;
- (Class)layerClass;
- (_Bool)directlyManagesLayerContent;
- (void)dealloc;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDGLDataBufferAttribute : NSObject
{
    _Bool _isNormalized;
    unsigned int _bufferUsage;
    int _dataType;
    int _componentCount;
    int _locationInShader;
    NSString *_name;
    unsigned long long _bufferOffset;
    TSDGLDataArrayBuffer *_dataArrayBuffer;
    TSDGLDataBuffer *_dataBuffer;
}

+ (id)attributeWithName:(id)arg1 bufferUsage:(unsigned int)arg2 dataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;
@property(nonatomic) TSDGLDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(nonatomic) TSDGLDataArrayBuffer *dataArrayBuffer; // @synthesize dataArrayBuffer=_dataArrayBuffer;
@property(nonatomic) unsigned long long bufferOffset; // @synthesize bufferOffset=_bufferOffset;
@property(nonatomic) int locationInShader; // @synthesize locationInShader=_locationInShader;
@property(readonly, nonatomic) _Bool isNormalized; // @synthesize isNormalized=_isNormalized;
@property(readonly, nonatomic) int componentCount; // @synthesize componentCount=_componentCount;
@property(readonly, nonatomic) int dataType; // @synthesize dataType=_dataType;
@property(readonly, nonatomic) unsigned int bufferUsage; // @synthesize bufferUsage=_bufferUsage;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (void)setComponentCount:(int)arg1;
- (void)setBufferUsage:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 bufferUsage:(unsigned int)arg2 dataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDGLDataArrayBuffer : NSObject <TSDGLDataBufferAccessor>
{
    NSMutableArray *_vertexAttributes;
    unsigned long long mVertexCount;
    unsigned long long _dataTypeSizeInBytes;
    unsigned int _bufferUsage;
    long long *mNeedsUpdateFirstIndex;
    long long *mNeedsUpdateLastIndex;
    char *mGLData;
    _Bool mGLDataBufferHasBeenSetup;
    unsigned int *mGLDataBuffers;
    NSMutableDictionary *mAttributeOffsetsDictionary;
    unsigned long long _GLDataBufferEntrySize;
    unsigned long long _bufferCount;
    unsigned long long _currentBufferIndex;
}

@property(nonatomic) unsigned long long currentBufferIndex; // @synthesize currentBufferIndex=_currentBufferIndex;
@property(readonly, nonatomic) unsigned long long bufferCount; // @synthesize bufferCount=_bufferCount;
@property(readonly, nonatomic) unsigned long long GLDataBufferEntrySize; // @synthesize GLDataBufferEntrySize=_GLDataBufferEntrySize;
@property(readonly, copy) NSString *description;
- (void)setGLPoint4D:(CDStruct_818bb265)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_818bb265)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_b2fbf00d)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_b2fbf00d)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)vertexCount;
@property(readonly, nonatomic) _Bool hasUpdatedData;
- (char *)GLDataPointer;
- (void)swapGLDataBuffers;
- (void)disableVertexAttributeArrayBuffersWithShader:(id)arg1;
- (void)enableVertexAttributeArrayBuffersWithShader:(id)arg1;
- (void)addIndexNeedsUpdate:(long long)arg1;
- (void)addIndexRangeNeedsUpdate:(struct _NSRange)arg1;
- (void)addAllIndexesNeedUpdate;
- (void)dealloc;
- (id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 bufferCount:(unsigned long long)arg3;
- (unsigned long long)p_bufferOffsetOfAttribute:(id)arg1 atIndex:(unsigned long long)arg2 component:(unsigned long long)arg3;
- (void)updateDataBufferIfNecessary;
- (void)p_setupGLDataBufferIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDGLDataBuffer : NSObject <TSDGLDataBufferAccessor>
{
    unsigned long long mCurrentBufferIndex;
    NSMutableArray *mArrayBuffers;
    NSMutableDictionary *mAttributeToArrayBuffersDictionary;
    unsigned long long mElementArrayCount;
    unsigned short *mGLElementData;
    _Bool mGLElementDataBufferWasSetup;
    unsigned int mGLElementDataBuffer;
    struct CGSize mGLElementMeshSize;
    unsigned long long mGLElementQuadParticleCount;
    unsigned int mGLVertexArrayObjects[2];
    _Bool _isUpdatingRawDataBuffer;
    _Bool _didTeardown;
    _Bool _isEnabled;
    TSDGLShader *_enabledShader;
    _Bool _isDoubleBuffered;
    unsigned int _drawMode;
    unsigned long long _vertexCount;
    NSArray *_vertexAttributes;
}

@property(readonly) _Bool isDoubleBuffered; // @synthesize isDoubleBuffered=_isDoubleBuffered;
@property(nonatomic) unsigned int drawMode; // @synthesize drawMode=_drawMode;
@property(readonly) NSArray *vertexAttributes; // @synthesize vertexAttributes=_vertexAttributes;
@property(readonly) unsigned long long vertexCount; // @synthesize vertexCount=_vertexCount;
- (_Bool)p_setAttributeUpdateData:(CDStruct_c6084d62 *)arg1 fromAttribute:(id)arg2;
- (void)updateDataBufferAttributes:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)vertexAttributeNamed:(id)arg1;
- (void)setDataForAttribute:(id)arg1 atIndex:(unsigned long long)arg2 fromAttribute:(id)arg3 dataBuffer:(id)arg4 index:(unsigned long long)arg5;
- (void)setGLPoint4D:(CDStruct_818bb265)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_818bb265)GLPoint4DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint3D:(CDStruct_03942939)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_03942939)GLPoint3DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setGLPoint2D:(CDStruct_b2fbf00d)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (CDStruct_b2fbf00d)GLPoint2DForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setCGFloat:(double)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)setGLfloat:(float)arg1 forAttribute:(id)arg2 atIndex:(unsigned long long)arg3;
- (float)GLfloatForAttribute:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)drawWithShader:(id)arg1 range:(struct _NSRange)arg2 deactivateShaderWhenDone:(_Bool)arg3;
- (void)drawWithShader:(id)arg1 deactivateShaderWhenDone:(_Bool)arg2;
- (void)drawWithShader:(id)arg1;
- (void)disableDataBufferWithShader:(id)arg1;
- (void)enableDataBufferWithShader:(id)arg1;
- (void)disableElementArrayBuffer;
- (void)enableElementArrayBuffer;
- (void)setGLushort:(unsigned short)arg1 forIndexElement:(unsigned long long)arg2;
- (unsigned short)GLushortForIndexElement:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)teardown;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 textureFlipped:(_Bool)arg3;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2 meshSize:(struct CGSize)arg3 textureFlipped:(_Bool)arg4 includeCenterAttribute:(_Bool)arg5;
- (id)initWithVertexAttributes:(id)arg1 quadParticleCount:(unsigned long long)arg2;
- (id)initWithVertexAttributes:(id)arg1 meshSize:(struct CGSize)arg2;
- (id)initWithVertexAttributes:(id)arg1 vertexCount:(unsigned long long)arg2 indexElementCount:(unsigned long long)arg3 doubleBuffered:(_Bool)arg4;
- (void)p_setupGLElementArrayBufferIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifier : NSObject
{
    int _uniformLocation;
    _Bool _needsUpdate;
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) int uniformLocation; // @synthesize uniformLocation=_uniformLocation;
@property(readonly, nonatomic) _Bool needsUpdate; // @synthesize needsUpdate=_needsUpdate;
- (void)updateUniformLocationWithShaderProgramObject:(int)arg1;
- (void)setGLUniformCheckWithShader:(id)arg1;
- (void)setGLUniformWithShader:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierInt : TSDGLShaderQualifier
{
    int _GLintValue;
    int _proposedGLintValue;
}

@property(nonatomic) int proposedGLintValue; // @synthesize proposedGLintValue=_proposedGLintValue;
@property(readonly, nonatomic) int GLintValue; // @synthesize GLintValue=_GLintValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierFloat : TSDGLShaderQualifier
{
    float _GLfloatValue;
    float _proposedGLfloatValue;
}

@property(nonatomic) float proposedGLfloatValue; // @synthesize proposedGLfloatValue=_proposedGLfloatValue;
@property(readonly, nonatomic) float GLfloatValue; // @synthesize GLfloatValue=_GLfloatValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierPoint2D : TSDGLShaderQualifier
{
    CDStruct_6e3f967a _GLPoint2DValue;
    CDStruct_6e3f967a _proposedGLPoint2DValue;
}

@property(nonatomic) CDStruct_b2fbf00d proposedGLPoint2DValue; // @synthesize proposedGLPoint2DValue=_proposedGLPoint2DValue;
@property(readonly, nonatomic) CDStruct_b2fbf00d GLPoint2DValue; // @synthesize GLPoint2DValue=_GLPoint2DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierPoint3D : TSDGLShaderQualifier
{
    CDStruct_03942939 _GLPoint3DValue;
    CDStruct_03942939 _proposedGLPoint3DValue;
}

@property(nonatomic) CDStruct_03942939 proposedGLPoint3DValue; // @synthesize proposedGLPoint3DValue=_proposedGLPoint3DValue;
@property(readonly, nonatomic) CDStruct_03942939 GLPoint3DValue; // @synthesize GLPoint3DValue=_GLPoint3DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierPoint4D : TSDGLShaderQualifier
{
    CDStruct_f2e236b6 _GLPoint4DValue;
    CDStruct_f2e236b6 _proposedGLPoint4DValue;
}

@property(nonatomic) CDStruct_818bb265 proposedGLPoint4DValue; // @synthesize proposedGLPoint4DValue=_proposedGLPoint4DValue;
@property(readonly, nonatomic) CDStruct_818bb265 GLPoint4DValue; // @synthesize GLPoint4DValue=_GLPoint4DValue;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierMat3 : TSDGLShaderQualifier
{
    struct CGAffineTransform _affineTransform;
    struct CGAffineTransform _proposedAffineTransform;
}

@property(nonatomic) struct CGAffineTransform proposedAffineTransform; // @synthesize proposedAffineTransform=_proposedAffineTransform;
@property(readonly, nonatomic) struct CGAffineTransform affineTransform; // @synthesize affineTransform=_affineTransform;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;
- (id)initWithAffineTransform:(struct CGAffineTransform)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShaderQualifierMat4 : TSDGLShaderQualifier
{
    struct CATransform3D _transform3D;
    struct CATransform3D _proposedTransform3D;
}

@property(nonatomic) struct CATransform3D proposedTransform3D; // @synthesize proposedTransform3D=_proposedTransform3D;
@property(readonly, nonatomic) struct CATransform3D transform3D; // @synthesize transform3D=_transform3D;
- (id)description;
- (void)setGLUniformWithShader:(id)arg1;
- (id)initWithTransform3D:(struct CATransform3D)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShader : NSObject
{
    NSMutableDictionary *_uniforms;
    NSMutableSet *_uniformsNeedingUpdate;
    NSMutableDictionary *_attributeLocations;
    _Bool _isActive;
    unsigned int _programObject;
    NSString *_name;
}

@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(readonly, nonatomic) unsigned int programObject; // @synthesize programObject=_programObject;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (_Bool)validateUniforms;
- (void)deactivate;
- (void)activate;
- (void)p_setQualifiersIfNecessary;
- (int)locationForAttribute:(id)arg1;
- (int)locationForUniform:(id)arg1;
- (void)setMat4WithTransform3D:(struct CATransform3D)arg1 forUniform:(id)arg2;
- (void)setMat4WithTransform3D:(struct CATransform3D)arg1 forShaderQualifier:(id)arg2;
- (void)setMat3WithAffineTransform:(struct CGAffineTransform)arg1 forUniform:(id)arg2;
- (void)setMat3WithAffineTransform:(struct CGAffineTransform)arg1 forShaderQualifier:(id)arg2;
- (void)setColor:(CDStruct_818bb265)arg1 forUniform:(id)arg2;
- (void)setPoint4D:(CDStruct_818bb265)arg1 forUniform:(id)arg2;
- (void)setPoint4D:(CDStruct_818bb265)arg1 forShaderQualifier:(id)arg2;
- (void)setPoint3D:(CDStruct_03942939)arg1 forUniform:(id)arg2;
- (void)setPoint3D:(CDStruct_03942939)arg1 forShaderQualifier:(id)arg2;
- (void)setLifeSpan:(CDStruct_b2fbf00d)arg1 forUniform:(id)arg2;
- (void)setPoint2D:(CDStruct_b2fbf00d)arg1 forUniform:(id)arg2;
- (void)setPoint2D:(CDStruct_b2fbf00d)arg1 forShaderQualifier:(id)arg2;
- (void)setCGFloat:(double)arg1 forUniform:(id)arg2;
- (void)setGLFloat:(float)arg1 forUniform:(id)arg2;
- (void)setGLFloat:(float)arg1 forShaderQualifier:(id)arg2;
- (void)setInteger:(long long)arg1 forUniform:(id)arg2;
- (void)setGLint:(int)arg1 forUniform:(id)arg2;
- (void)setInteger:(long long)arg1 forShaderQualifier:(id)arg2;
- (void)setGLint:(int)arg1 forShaderQualifier:(id)arg2;
- (id)p_qualifierForUniform:(id)arg1 class:(Class)arg2;
- (id)shaderQualifierForUniform:(id)arg1 type:(long long)arg2;
- (_Bool)loadVertexShader:(id)arg1 fragmentShader:(id)arg2 defines:(id)arg3;
- (_Bool)p_compileShader:(unsigned int *)arg1 withType:(unsigned int)arg2 shaderString:(id)arg3 defines:(id)arg4;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithVertexShader:(id)arg1 fragmentShader:(id)arg2 uniforms:(id)arg3 attributes:(id)arg4 defines:(id)arg5;
- (id)initWithVertexShader:(id)arg1 fragmentShader:(id)arg2;
- (id)initWithVertexShaderFileName:(id)arg1 fragmentShaderFileName:(id)arg2 bundle:(id)arg3 uniforms:(id)arg4 attributes:(id)arg5 defines:(id)arg6;
- (id)p_contentsOfShader:(id)arg1 extension:(id)arg2 bundle:(id)arg3;
- (id)initWithShaderFileName:(id)arg1 bundle:(id)arg2 uniforms:(id)arg3 attributes:(id)arg4 defines:(id)arg5;
- (id)initWithShaderFileName:(id)arg1 bundle:(id)arg2;
- (id)initWithDefaultUniformMotionBlurShader;
- (id)initWithDefaultHorizontalBlurShader;
- (id)initWithDefaultVerticalBlurShader;
- (id)initWithDefaultVelocityVisualizerShader;
- (id)initWithDefaultVelocityCollectionShaderWithSampleCount:(unsigned long long)arg1 isSingleObject:(_Bool)arg2;
- (id)initWithDefaultVelocityMeshShader;
- (id)initWithDefaultVelocityShader;
- (id)initWithDefaultRandomColorTextureShader;
- (id)initWithDefaultRandomColorShader;
- (id)initWithDefaultTextureAndOpacityShaderWithMotionBlur:(_Bool)arg1 ignoreTextureOpacity:(_Bool)arg2;
- (id)initWithDefaultTextureAndOpacityShader;
- (id)initWithDefaultTextureCoordinatesShader;
- (id)initWithDefaultTextureShaderWithMotionBlur:(_Bool)arg1 ignoreTextureOpacity:(_Bool)arg2;
- (id)initWithDefaultTextureShader;

@end

__attribute__((visibility("hidden")))
@interface TSDDefaultPartitioner : NSObject <TSDPartitioner, TSDCanvasDelegate>
{
    NSObject<TSDInfo> *mInfo;
    TSDCanvas *mCanvas;
    TSDLayout *mLayout;
    TSUPointerKeyDictionary *mMainRepsByCanvas;
    TSUPointerKeyDictionary *mCachedImagesByCanvas;
    TSUPointerKeyDictionary *mPartialRepsByCanvas;
}

- (unsigned long long)p_edgesForHintBounds:(struct CGRect)arg1;
- (id)p_nextHintForSize:(struct CGSize)arg1 previousHint:(id)arg2 horizontally:(_Bool)arg3;
- (id)p_firstHintForSize:(struct CGSize)arg1;
- (void)p_teardownLayouts;
- (void)p_generateLayouts;
- (void)i_unregisterPartialRep:(id)arg1;
- (void)i_registerPartialRep:(id)arg1;
- (void)i_removeCachedImageForCanvas:(id)arg1;
- (void)i_setCachedImage:(struct CGImage *)arg1 forCanvas:(id)arg2;
- (struct CGImage *)i_cachedImageForCanvas:(id)arg1;
- (id)i_repForCanvas:(id)arg1;
- (id)i_layout;
- (id)documentRoot;
- (id)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)nextHintForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (_Bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (id)hintForLayout:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDPartitionedPartialLayout : TSDLayout
{
    struct CGRect mBounds;
    TSDDefaultPartitioner *mPartitioner;
}

@property(readonly, nonatomic) TSDDefaultPartitioner *partitioner; // @synthesize partitioner=mPartitioner;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=mBounds;
- (id)computeLayoutGeometry;
- (Class)repClassOverride;
- (id)initWithInfo:(id)arg1 bounds:(struct CGRect)arg2 partitioner:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDPartitionedPartialRep : TSDRep
{
}

- (struct CGRect)p_convertBaseToNaturalRect:(struct CGRect)arg1;
- (struct CGImage *)p_newImageForCachingBaseRep;
- (struct CGRect)p_clipRect;
- (struct UIEdgeInsets)p_edgeInsetsForClipping;
- (id)hyperlinkRegions;
- (id)i_queueForTileProvider;
- (void)resetCachedPartitionedRendering;
- (void)didUpdateLayer:(id)arg1;
- (void)addBitmapsToRenderingQualityInfo:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)willBeRemoved;
- (struct CGRect)clipRect;
- (struct CGRect)layerFrameInScaledCanvas;
- (_Bool)directlyManagesLayerContent;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDDefaultHint : NSObject <TSDHint>
{
    struct CGRect mBounds;
    unsigned long long mEdges;
}

+ (Class)archivedHintClass;
@property(readonly, nonatomic) unsigned long long edges; // @synthesize edges=mEdges;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=mBounds;
- (id)lastChildHint;
- (id)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(id)arg1;
- (_Bool)isLastPartitionHorizontally:(_Bool)arg1;
- (id)copyForArchiving;
- (id)initWithBounds:(struct CGRect)arg1 edges:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDCanvasLayer : TSDNoDefaultImplicitActionLayer
{
    TSDInteractiveCanvasController *mController;
    struct CGSize mUnscaledSize;
    struct UIEdgeInsets mContentInset;
    double mViewScale;
    unsigned long long mViewScaleAnimationCount;
    _Bool mAllowsPinchZoom;
    double mMinimumPinchViewScale;
    double mMaximumPinchViewScale;
    _Bool mShowsScaleFeedback;
    _Bool mIsInfinite;
    _Bool mHorizontallyCenteredInScrollView;
    _Bool mVerticallyCenteredInScrollView;
    _Bool mDisableLayout;
}

@property(nonatomic) _Bool verticallyCenteredInScrollView; // @synthesize verticallyCenteredInScrollView=mVerticallyCenteredInScrollView;
@property(nonatomic) _Bool horizontallyCenteredInScrollView; // @synthesize horizontallyCenteredInScrollView=mHorizontallyCenteredInScrollView;
@property(nonatomic, getter=isLayoutDisabled) _Bool disableLayout; // @synthesize disableLayout=mDisableLayout;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=mContentInset;
@property(nonatomic) struct CGSize unscaledSize; // @synthesize unscaledSize=mUnscaledSize;
@property(nonatomic) TSDInteractiveCanvasController *controller; // @synthesize controller=mController;
@property(nonatomic, getter=isInfinite) _Bool infinite; // @synthesize infinite=mIsInfinite;
@property(nonatomic) _Bool showsScaleFeedback; // @synthesize showsScaleFeedback=mShowsScaleFeedback;
@property(nonatomic) _Bool allowsPinchZoom; // @synthesize allowsPinchZoom=mAllowsPinchZoom;
@property(nonatomic) double maximumPinchViewScale; // @synthesize maximumPinchViewScale=mMaximumPinchViewScale;
@property(nonatomic) double minimumPinchViewScale; // @synthesize minimumPinchViewScale=mMinimumPinchViewScale;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
- (void)p_fixFrameAndScrollView;
- (struct CGRect)p_fixedBoundsForScrollViewSize:(struct CGSize)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;
- (void)p_setEnclosingScrollViewZoomParameters;
- (void)p_setViewScale:(double)arg1 preservingScrollOffset:(_Bool)arg2;
- (void)p_setViewScale:(double)arg1;
- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)setScrollViewFrameMaintainingApparentScrollPosition:(struct CGRect)arg1;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 animation:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)animateToViewScale:(double)arg1 contentCenter:(struct CGPoint)arg2 contentInset:(struct UIEdgeInsets)arg3 duration:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setViewScale:(double)arg1 andScrollViewFrame:(struct CGRect)arg2 maintainPosition:(_Bool)arg3 animated:(_Bool)arg4;
- (struct CGPoint)p_contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1 viewScale:(double)arg2 contentInset:(struct UIEdgeInsets)arg3;
- (struct CGPoint)contentOffsetForUnscaledContentCenter:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint unscaledContentCenter;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
- (void)p_reenableDrawingAfterResumingFromBackground;
- (void)layoutSublayers;
- (void)layoutIfNeededIgnoringDisabledLayout;
- (void)setNeedsLayout;
- (void)fixFrameAndScrollView;
@property(nonatomic) _Bool centeredInScrollView; // @dynamic centeredInScrollView;
- (void)teardown;
- (void)p_scrollViewScrollerStyleDidChange:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)p_commonInit;

@end

__attribute__((visibility("hidden")))
@interface TSDBrushStroke : TSDSmartStroke
{
}

+ (struct CGImage *)newCGImageFromGL;
+ (void)applicationDidBecomeActive;
+ (void)applicationWillResignActive;
+ (id)renderQueue;
+ (id)brushProgram;
+ (id)sharedContext;
+ (void)loadSectionsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc *)arg2;
+ (id)loadImageForBrush:(id)arg1;
+ (void)loadLineEndsForBrush:(id)arg1 inSVGDoc:(struct _xmlDoc *)arg2;
+ (void)loadLineEndTextureForBrush:(id)arg1 lineEnd:(id)arg2 path:(struct CGPath *)arg3 andBounds:(struct CGRect)arg4;
+ (void)loadBrush:(id)arg1;
+ (id)cacheDirectory;
+ (Class)mutableClass;
- (void)brushPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)brushPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(void *)arg4 sectionIndex:(unsigned long long *)arg5 viewScale:(double)arg6;
- (void)brushSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 withScaling:(CDStruct_c3b9c2ee)arg4 inElementRange:(struct _NSRange)arg5 into:(void *)arg6 viewScale:(double)arg7;
- (void)paintPath:(struct CGPath *)arg1 wantsInteriorStroke:(_Bool)arg2 inContext:(struct CGContext *)arg3 useFastDrawing:(_Bool)arg4;
- (void)glBrushPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)finishOpenGLRenderInContext:(struct CGContext *)arg1 pathVertexData:(vector_b5dead7b *)arg2;
- (void)renderOpenGLSection:(id)arg1 sectionIndex:(unsigned long long)arg2 ontoPath:(id)arg3 withScaling:(CDStruct_c3b9c2ee)arg4 inElementRange:(struct _NSRange)arg5 into:(vector_b5dead7b *)arg6 viewScale:(double)arg7;
- (id)brushTextureForId:(id)arg1;
- (_Bool)needsToExtendJoinsForBoundsCalculation;
- (int)cap;
- (id)description;
- (_Bool)supportsPattern;
- (_Bool)drawsInOneStep;
- (_Bool)prefersToApplyToCAShapeLayerDuringManipulation;
- (_Bool)canApplyToCAShapeLayer;
- (void)paintLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 atAngle:(double)arg3 withScale:(double)arg4 inContext:(struct CGContext *)arg5 useFastDrawing:(_Bool)arg6;
- (id)strokeLineEnd:(id)arg1;
- (double)suggestedMinimumLineWidth;
- (double)lineEndInsetAdjustment;
- (struct CGImage *)maskForId:(id)arg1;
- (id)brushBoundsForId:(id)arg1;
- (id)brushPathsForId:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableBrushStroke : TSDBrushStroke
{
}

- (void)setPatternPropertiesFromStroke:(id)arg1;
- (void)setPropertiesFromStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(nonatomic) double actualWidth; // @dynamic actualWidth;
@property(nonatomic) int cap; // @dynamic cap;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;
@property(nonatomic) int join; // @dynamic join;
@property(nonatomic) double miterLimit; // @dynamic miterLimit;
@property(copy, nonatomic) TSDStrokePattern *pattern; // @dynamic pattern;
@property(copy, nonatomic) NSString *strokeName; // @dynamic strokeName;
@property(nonatomic) double width; // @dynamic width;

@end

__attribute__((visibility("hidden")))
@interface TSDSmartStroke : TSDStroke
{
    NSString *mStrokeName;
}

+ (id)strokeWithName:(id)arg1 color:(id)arg2 width:(double)arg3;
+ (Class)classForName:(id)arg1;
@property(copy, nonatomic) NSString *strokeName; // @synthesize strokeName=mStrokeName;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)shouldAntialiasDefeat;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)canApplyDirectlyToRepCALayer;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithColor:(id)arg1 width:(double)arg2 cap:(int)arg3 join:(int)arg4 pattern:(id)arg5 miterLimit:(double)arg6;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6;
- (id)initWithName:(id)arg1 color:(id)arg2 width:(double)arg3 cap:(int)arg4 join:(int)arg5 pattern:(id)arg6 miterLimit:(double)arg7;
- (void)saveToArchive:(struct StrokeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokeArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDPathManipulation : NSObject
{
    TSDPathManipulation *mPrecedingManipulation;
}

- (_Bool)canDecomposeRectIntoParts;
- (struct CGPath *)manipulatePath:(struct CGPath *)arg1 withLineWidth:(double)arg2;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingManipulation:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDPathStroker : NSObject
{
    TSUColor *mColor;
    double mWidth;
    TSDPathStroker *mPrecedingStroker;
}

@property(nonatomic) double width; // @synthesize width=mWidth;
- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2 inColor:(id)arg3;
- (void)dealloc;
- (id)initWithProperties:(id)arg1 bundle:(id)arg2 dataManager:(void *)arg3 precedingStroker:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveAnimationMatch : NSObject
{
    TSDTextureSet *_morphTexture;
    TSDTextureSet *_morphQueuedTexture;
    TSDTextureSet *_morphQueuedForDeletionTexture;
    NSLock *_morphTextureUpdateLock;
    _Bool _isUsingMorphTexture;
    _Bool _didUseMorphTexture;
    _Bool _hasBeenTornDown;
    _Bool _isMorphMatch;
    _Bool _isTextStyleIdenticalExceptSize;
    _Bool _shouldDisableTextMorphing;
    TSDTextureSet *_outgoingTexture;
    TSDTextureSet *_incomingTexture;
}

+ (id)animationMatch;
+ (unsigned long long)magicMoveMorphTexturesPerSecond;
@property(nonatomic) _Bool shouldDisableTextMorphing; // @synthesize shouldDisableTextMorphing=_shouldDisableTextMorphing;
@property(nonatomic) _Bool isTextStyleIdenticalExceptSize; // @synthesize isTextStyleIdenticalExceptSize=_isTextStyleIdenticalExceptSize;
@property(nonatomic) _Bool isMorphMatch; // @synthesize isMorphMatch=_isMorphMatch;
@property(retain, nonatomic) TSDTextureSet *incomingTexture; // @synthesize incomingTexture=_incomingTexture;
@property(retain, nonatomic) TSDTextureSet *outgoingTexture; // @synthesize outgoingTexture=_outgoingTexture;
- (void)unlockCurrentMorphTexture;
- (id)lockCurrentMorphTexture;
- (void)addMorphTexture:(id)arg1;
@property(readonly, nonatomic) _Bool isMatched;
- (id)description;
- (void)teardown;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveMatchObject : NSObject
{
    TSDRep *_rep;
    long long _zOrder;
    NSMutableDictionary *_attributes;
    NSString *_stringValue;
    NSString *_name;
    struct CGPoint _position;
    struct _NSRange _stringRange;
}

+ (id)matchObjectWithTextRep:(id)arg1 position:(struct CGPoint)arg2 stringValue:(id)arg3 stringRange:(struct _NSRange)arg4;
+ (id)matchObjectWithRep:(id)arg1 position:(struct CGPoint)arg2;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) struct _NSRange stringRange; // @synthesize stringRange=_stringRange;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(retain, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic) long long zOrder; // @synthesize zOrder=_zOrder;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
@property(retain, nonatomic) TSDRep *rep; // @synthesize rep=_rep;
- (_Bool)conflictsWithMatchObject:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRep:(id)arg1 position:(struct CGPoint)arg2 stringValue:(id)arg3 stringRange:(struct _NSRange)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveMatch : NSObject <TSDMatchingAlgorithmMatch>
{
    TSDMagicMoveMatchObject *_outgoingObject;
    TSDMagicMoveMatchObject *_incomingObject;
    long long _matchType;
    double _distance;
    double _zOrderDistance;
    double _attributeMatchPercent;
    TSDTextureContext *_textureContext;
    long long _matchCost;
    NSString *_name;
}

+ (id)matchWithOutgoingObject:(id)arg1 incomingObject:(id)arg2 matchType:(long long)arg3 attributeMatchPercent:(double)arg4 textureContext:(id)arg5;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) long long matchCost; // @synthesize matchCost=_matchCost;
@property(retain, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=_textureContext;
@property(nonatomic) double attributeMatchPercent; // @synthesize attributeMatchPercent=_attributeMatchPercent;
@property(nonatomic) double zOrderDistance; // @synthesize zOrderDistance=_zOrderDistance;
@property(nonatomic) double distance; // @synthesize distance=_distance;
@property(nonatomic) long long matchType; // @synthesize matchType=_matchType;
@property(readonly, nonatomic) TSDMagicMoveMatchObject *incomingObject; // @synthesize incomingObject=_incomingObject;
@property(readonly, nonatomic) TSDMagicMoveMatchObject *outgoingObject; // @synthesize outgoingObject=_outgoingObject;
- (_Bool)conflictsWithMatch:(id)arg1;
- (id)description;
- (void)p_updateMagicMoveCost;
- (long long)compareToMatch:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) _Bool isTextMatch;
@property(readonly, nonatomic) id incomingMatchObject;
@property(readonly, nonatomic) id outgoingMatchObject;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveMatchingEngine : NSObject
{
    NSMutableArray *_matches;
}

+ (id)matchingEngine;
- (id)matchResults;
- (void)addMatches:(id)arg1;
- (void)addMatch:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveTextureZOrdererMatch : NSObject
{
    _Bool _isOutgoingZIndexUnmatched;
    _Bool _isIncomingZIndexUnmatched;
    TSDTextureSet *_outgoingTexture;
    TSDTextureSet *_incomingTexture;
    long long _outgoingZIndex;
    long long _incomingZIndex;
    TSDMagicMoveAnimationMatch *_animationMatch;
}

@property(readonly, nonatomic) TSDMagicMoveAnimationMatch *animationMatch; // @synthesize animationMatch=_animationMatch;
@property(readonly, nonatomic) _Bool isIncomingZIndexUnmatched; // @synthesize isIncomingZIndexUnmatched=_isIncomingZIndexUnmatched;
@property(readonly, nonatomic) _Bool isOutgoingZIndexUnmatched; // @synthesize isOutgoingZIndexUnmatched=_isOutgoingZIndexUnmatched;
@property(nonatomic) long long incomingZIndex; // @synthesize incomingZIndex=_incomingZIndex;
@property(nonatomic) long long outgoingZIndex; // @synthesize outgoingZIndex=_outgoingZIndex;
@property(readonly, nonatomic) TSDTextureSet *incomingTexture; // @synthesize incomingTexture=_incomingTexture;
@property(readonly, nonatomic) TSDTextureSet *outgoingTexture; // @synthesize outgoingTexture=_outgoingTexture;
- (id)description;
- (double)interpolatedZIndexAtPercent:(double)arg1;
- (double)intersectionPercentWithZOrdererMatch:(id)arg1;
- (_Bool)intersectsZOrdererMatch:(id)arg1;
- (_Bool)intersectsZOrdererMatch:(id)arg1 withAttemptedZIndex:(long long)arg2;
- (id)initWithAnimationMatch:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMagicMoveTextureZOrderer : NSObject
{
    NSArray *_zOrderMatches;
    NSArray *_outgoingTexturesInZOrder;
    NSArray *_incomingTexturesInZOrder;
    double *_percentTexturesTimes;
    NSArray *_percentTextures;
    unsigned long long _zOrderIntersectionsCount;
}

@property(readonly, nonatomic) unsigned long long zOrderIntersectionsCount; // @synthesize zOrderIntersectionsCount=_zOrderIntersectionsCount;
- (void)p_calculateTextureArraysFromIntersections;
- (unsigned long long)p_bestZIndexForUnassignedMatch:(id)arg1 inMatchArray:(id)arg2;
- (id)p_debugDescription;
- (unsigned long long)p_zIntersectionsBetweenZOrdererMatches:(id)arg1;
- (void)p_setupZOrderMatchesWithAnimationMatches:(id)arg1;
- (void)p_adjustZOrdererMatchesZIndexByTextureType:(id)arg1;
- (id)p_arrayBySortingMatches:(id)arg1 withInterpolatedPercent:(double)arg2;
- (void)p_addVisibleTexturesFromMatches:(id)arg1 toArray:(id)arg2 interpolatedPercent:(double)arg3;
- (id)texturedRectanglesAtPercent:(double)arg1;
- (void)dealloc;
- (id)initWithAnimationMatches:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMatchingAlgorithm : NSObject
{
    long long *mCostMatrix;
    char *mMaskMatrix;
    _Bool *mIsStarInColumn;
    _Bool *mIsStarInRow;
    _Bool *mIsColCovered;
    _Bool *mIsRowCovered;
    id *mObjectMapping;
    long long mMatrixDimension;
    long long mZ0Row;
    long long mZ0Col;
    NSMutableArray *mResults;
}

+ (id)bestMatchesFromArray:(id)arg1;
- (id)p_bestMatchesFromArray:(id)arg1;
- (int)p_doStep6;
- (int)p_doStep5;
- (int)p_doStep4;
- (int)p_step4IndexOfStarredZeroInRow:(int)arg1;
- (_Bool)p_step4FindAZeroAndReturnRow:(int *)arg1 column:(int *)arg2;
- (int)p_doStep3;
- (int)p_doStep2;
- (int)p_doStep1;
- (void)p_deallocateMatrices;
- (void)p_allocateMatrices;

@end

__attribute__((visibility("hidden")))
@interface TSDFPSCounter : NSObject
{
    NSMutableArray *_dateArray;
    double _startTimeInterval;
    double _endTimeInterval;
    unsigned long long _frameCount;
}

- (id)p_getFPSInfo:(_Bool)arg1;
- (void)writeFPSInfoToLog:(id)arg1 identifier:(id)arg2 type:(id)arg3 direction:(id)arg4 duration:(double)arg5 graphing:(_Bool)arg6 slide:(long long)arg7;
- (id)fpsGraphString;
- (id)fpsSummaryString;
- (id)p_fpsSummaryStringIncludingGraph:(_Bool)arg1;
- (void)addFrameAtDrawTime:(double)arg1 duration:(double)arg2;
- (void)addFrameAtDrawTime:(double)arg1;
- (void)addFrame;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDFPSCACounter : TSDFPSCounter
{
    unsigned int mCAFrameCount;
    NSTimer *mTimer;
    unsigned long long mMaxFrameDelta;
    _Bool _shouldRunTimer;
}

@property(nonatomic) _Bool shouldRunTimer; // @synthesize shouldRunTimer=_shouldRunTimer;
- (void)stopLoggingFPS;
- (void)startLoggingFPS;
- (void)p_updateFrameCount;
- (void)reset;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDTrackerManipulatorCoordinator : NSObject
{
    NSMutableSet *mRegisteredTMs;
    NSObject<TSDTrackerManipulator> *mControllingTM;
}

+ (void)p_removeDynamicSubclass:(id)arg1;
+ (void)p_dynamicallySubclassGRForNotification:(id)arg1;
@property(readonly, nonatomic) NSObject<TSDTrackerManipulator> *controllingTM; // @synthesize controllingTM=mControllingTM;
- (void)p_notifyControlChange;
- (void)operationDidEnd;
- (void)operationWillEnd;
- (_Bool)relinquishTrackerManipulatorControl:(id)arg1;
- (_Bool)takeControlWithTrackerManipulator:(id)arg1;
- (_Bool)hasRegisteredTrackerManipulator:(id)arg1;
- (void)unregisterTrackerManipulator:(id)arg1;
- (void)registerTrackerManipulator:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDDynamicOperationController : NSObject
{
    TSDInteractiveCanvasController *mICC;
    _Bool mOperationIsDynamic;
    _Bool mResetGuides;
    _Bool mSupportsAlignmentGuides;
    _Bool mPossibleDynamicOperation;
    NSMutableSet *mReps;
    NSMutableSet *mAllTransformedReps;
    TSDAutoscroll *mAutoscroll;
}

@property(readonly, nonatomic) NSSet *allTransformedReps; // @synthesize allTransformedReps=mAllTransformedReps;
@property(readonly, nonatomic) NSSet *currentlyTransformingReps; // @synthesize currentlyTransformingReps=mReps;
- (void)p_resetGuidesForCleanup:(_Bool)arg1;
- (void)invalidateGuides;
- (void)handleTrackerManipulator:(id)arg1;
- (void)p_controllingTMDidResetInOperation:(id)arg1;
- (void)handleGestureRecognizer:(id)arg1;
- (void)stopTransformingReps:(id)arg1;
- (void)startTransformingReps:(id)arg1;
- (void)p_cleanupOperation;
- (void)cancelOperation;
- (_Bool)isOperationDynamic;
- (_Bool)isInPossibleDynamicOperation;
- (_Bool)isInOperation;
- (void)p_beginDynamicOperationForReps:(id)arg1;
- (void)beginOperation;
- (void)beginPossibleDynamicOperation;
- (void)dealloc;
- (id)initWithInteractiveCanvasController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDSpacingGuide : TSDAlignmentGuide
{
    TSDSpacing *mParentSpacing;
    struct CGRect mGeneratingObjectRect;
    TSDSpacingGuideUILayer *mSpacingUILayer;
    TSDSwappableAxesGeometry *mVerticalGeom;
}

@property(nonatomic) TSDSpacing *parentSpacing; // @synthesize parentSpacing=mParentSpacing;
- (id)description;
- (id)layerWithICC:(id)arg1;
- (long long)compare:(id)arg1;
- (_Bool)canBeSnappedToByEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (void)dealloc;
- (id)initForEdge:(int)arg1 ofGeneratingObjectRect:(struct CGRect)arg2 andParentSpacing:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDSizingGuide : TSDAbstractGuide
{
    struct CGRect mAlignmentFrame;
    CALayer *mLayer;
    _Bool mIsHorizontal;
}

- (id)description;
- (id)layerWithICC:(id)arg1;
- (id)initWithType:(int)arg1 frame:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDCenterAlignmentGuide : TSDAlignmentGuide
{
    struct CGRect mLeftGeneratingObjectRect;
    struct CGRect mRightGeneratingObjectRect;
    TSDSpacingGuideUILayer *mLeftSpacingUILayer;
    TSDSpacingGuideUILayer *mRightSpacingUILayer;
    TSDSwappableAxesGeometry *mVerticalGeom;
}

- (id)description;
- (id)layerWithICC:(id)arg1;
- (_Bool)canBeSnappedToByEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (int)integerOffset;
- (double)exactOffset;
- (long long)compare:(id)arg1;
- (void)dealloc;
- (id)initBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2 withGuideType:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDSpacing : NSObject
{
    NSMutableSet *mSpacingRects;
    NSMutableSet *mAssociatedFrames;
    CALayer *mLayer;
    _Bool mHasBeenDrawn;
    TSDSwappableAxesGeometry *mHorizontalGeom;
}

@property(readonly, nonatomic) NSMutableSet *associatedFrames; // @synthesize associatedFrames=mAssociatedFrames;
- (id)description;
- (void)updateSpacingUIWithICC:(id)arg1;
- (id)spacingRectsLayerForGuideRect:(struct CGRect)arg1 withICC:(id)arg2;
- (void)needsRedraw;
- (_Bool)containsNonIntersectingSpacingRectsWithRect:(struct CGRect)arg1 forEdge:(int)arg2;
- (_Bool)needsGuideForEdge:(int)arg1 ofRect:(struct CGRect)arg2;
- (void)addSpacingRect:(struct CGRect)arg1 forFrame:(struct CGRect)arg2 andFrame:(struct CGRect)arg3;
- (long long)compare:(id)arg1;
- (int)guideType;
- (double)exactOffset;
- (int)integerOffset;
- (void)dealloc;
- (id)initWithGuideType:(int)arg1 withSpacingRect:(struct CGRect)arg2 forFrame:(struct CGRect)arg3 andFrame:(struct CGRect)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDSwappableAxesGeometry : NSObject
{
    NSDictionary *mAdditionalOrientationIndependentValues;
    _Bool mFlipped;
}

+ (id)geometryWithXAxisAlongEdge:(int)arg1;
+ (id)swappedAxesGeometry;
+ (id)standardAxesGeometry;
@property(readonly, nonatomic) _Bool isFlipped; // @synthesize isFlipped=mFlipped;
- (id)description;
- (struct CGPoint)makePointWithX:(double)arg1 Y:(double)arg2;
- (double)pointY:(struct CGPoint)arg1;
- (double)pointX:(struct CGPoint)arg1;
- (struct CGRect)makeVerticalSpacingRectBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2;
- (struct CGRect)makeHorizontalSpacingRectBetweenRect:(struct CGRect)arg1 andRect:(struct CGRect)arg2;
- (struct CGRect)makeRectWithX:(double)arg1 Y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (double)rectHeight:(struct CGRect)arg1;
- (double)rectWidth:(struct CGRect)arg1;
- (double)rectMaxY:(struct CGRect)arg1;
- (double)rectMaxX:(struct CGRect)arg1;
- (double)rectMidY:(struct CGRect)arg1;
- (double)rectMidX:(struct CGRect)arg1;
- (double)rectMinY:(struct CGRect)arg1;
- (double)rectMinX:(struct CGRect)arg1;
- (_Bool)rect:(struct CGRect)arg1 verticallyOverlapsRect:(struct CGRect)arg2;
- (_Bool)rect:(struct CGRect)arg1 horizontallyOverlapsRect:(struct CGRect)arg2;
@property(readonly, nonatomic) int verticalOrientation;
@property(readonly, nonatomic) int horizontalOrientation;
- (int)edgeForStandardRectEdge:(int)arg1;
- (unsigned long long)knobTagForStandardKnobTag:(unsigned long long)arg1;
- (id)initFlipped:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLParticleSystem : NSObject
{
    _Bool *_visibilities;
    _Bool _isInitialized;
    _Bool _isDataBufferInitialized;
    unsigned long long _textureCount;
    _Bool _hasParticleTexture;
    _Bool _shouldDraw;
    unsigned long long _particleCount;
    unsigned long long _visibleParticleCount;
    unsigned long long _particlesWide;
    unsigned long long _particlesHigh;
    double _duration;
    unsigned long long _direction;
    TSDGLDataBufferAttribute *_positionAttribute;
    TSDGLDataBufferAttribute *_centerAttribute;
    TSDGLDataBufferAttribute *_texCoordAttribute;
    TSDGLDataBufferAttribute *_particleTexCoordAttribute;
    TSDGLDataBufferAttribute *_colorAttribute;
    TSDGLDataBufferAttribute *_lifeSpanAttribute;
    TSDGLDataBufferAttribute *_speedAttribute;
    TSDGLDataBufferAttribute *_rotationAttribute;
    TSDGLDataBufferAttribute *_scaleAttribute;
    TSDGLDataBuffer *_dataBuffer;
    TSDGLShader *_shader;
    struct CGSize _particleSize;
    struct CGSize _objectSize;
    struct CGSize _slideSize;
}

+ (_Bool)useGLSL;
+ (_Bool)willOverrideVisibilities;
+ (_Bool)shouldDrawInvisibleParticles;
+ (_Bool)willOverrideColors;
+ (_Bool)willOverrideStartingPoints;
+ (_Bool)willOverrideGeometry;
+ (unsigned long long)numberOfVerticesPerParticle;
+ (id)newDataBufferAttributeWithName:(id)arg1;
@property(readonly, nonatomic) _Bool shouldDraw; // @synthesize shouldDraw=_shouldDraw;
@property(readonly, nonatomic) TSDGLShader *shader; // @synthesize shader=_shader;
@property(readonly, nonatomic) TSDGLDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *scaleAttribute; // @synthesize scaleAttribute=_scaleAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *rotationAttribute; // @synthesize rotationAttribute=_rotationAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *speedAttribute; // @synthesize speedAttribute=_speedAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *lifeSpanAttribute; // @synthesize lifeSpanAttribute=_lifeSpanAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *colorAttribute; // @synthesize colorAttribute=_colorAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *particleTexCoordAttribute; // @synthesize particleTexCoordAttribute=_particleTexCoordAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *texCoordAttribute; // @synthesize texCoordAttribute=_texCoordAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *centerAttribute; // @synthesize centerAttribute=_centerAttribute;
@property(readonly, nonatomic) TSDGLDataBufferAttribute *positionAttribute; // @synthesize positionAttribute=_positionAttribute;
@property(readonly, nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) struct CGSize slideSize; // @synthesize slideSize=_slideSize;
@property(readonly, nonatomic) struct CGSize objectSize; // @synthesize objectSize=_objectSize;
@property(readonly, nonatomic) struct CGSize particleSize; // @synthesize particleSize=_particleSize;
@property(readonly, nonatomic) unsigned long long particlesHigh; // @synthesize particlesHigh=_particlesHigh;
@property(readonly, nonatomic) unsigned long long particlesWide; // @synthesize particlesWide=_particlesWide;
@property(readonly, nonatomic) unsigned long long visibleParticleCount; // @synthesize visibleParticleCount=_visibleParticleCount;
@property(readonly, nonatomic) unsigned long long particleCount; // @synthesize particleCount=_particleCount;
- (void)drawGLSLWithPercent:(double)arg1 opacity:(double)arg2;
- (void)setupGLSL;
- (_Bool)visibilityAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_818bb265)colorAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)centerAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)vertexPositionAtVertexIndex:(unsigned long long)arg1 particleIndexPoint:(struct CGPoint)arg2;
- (struct CGContext *)newContextFromTexture:(id)arg1;
@property(readonly, nonatomic) NSArray *dataBufferAttributes;
- (struct CGPoint)indexPointFromIndex:(unsigned long long)arg1;
- (unsigned long long)indexFromPoint:(struct CGPoint)arg1;
- (id)description;
- (void)setupWithTexture:(id)arg1 particleTextureSize:(struct CGSize)arg2 reverseDrawOrder:(_Bool)arg3;
- (void)dealloc;
- (id)initWithNumberOfParticles:(unsigned long long)arg1 objectSize:(struct CGSize)arg2 slideSize:(struct CGSize)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 shader:(id)arg6;
- (id)initWithParticleSize:(struct CGSize)arg1 particleSystemSize:(struct CGSize)arg2 objectSize:(struct CGSize)arg3 slideSize:(struct CGSize)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 shader:(id)arg7;
- (void)p_logParticleInformation;
- (struct CGSize)p_particleSystemSizeWithRequestedNumber:(unsigned long long)arg1 objectSize:(struct CGSize)arg2;
- (void)p_reverseParticleDataDrawOrder;
- (void)p_setupVertexData;
- (void)p_setupParticleDataWithTexture:(id)arg1;
- (void)p_setupDataBufferWithParticleCount:(unsigned long long)arg1 visibleParticleCount:(unsigned long long)arg2;
- (void)p_setDataBufferAttribute:(id *)arg1 withName:(id)arg2 defaultDataType:(int)arg3 normalized:(_Bool)arg4 componentCount:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLineInfo : TSDShapeInfo
{
    TSDDrawableInfo *mConnectedFrom;
    TSDDrawableInfo *mConnectedTo;
    NSString *mConnectedFromUUIDString;
    NSString *mConnectedToUUIDString;
    struct {
        unsigned int connectedFrom:1;
        unsigned int connectedTo:1;
    } mInvalidFlags;
}

+ (id)cleanupInfos:(id)arg1 duringCommand:(id)arg2 updateGeometries:(_Bool)arg3;
@property(copy, nonatomic) NSString *connectedToUUIDString; // @synthesize connectedToUUIDString=mConnectedToUUIDString;
@property(retain, nonatomic) TSDDrawableInfo *connectedTo; // @synthesize connectedTo=mConnectedTo;
@property(copy, nonatomic) NSString *connectedFromUUIDString; // @synthesize connectedFromUUIDString=mConnectedFromUUIDString;
@property(retain, nonatomic) TSDDrawableInfo *connectedFrom; // @synthesize connectedFrom=mConnectedFrom;
- (long long)mixingTypeWithObject:(id)arg1;
- (void)acceptVisitor:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (void)performBlockWithTemporaryLayout:(CDUnknownBlockType)arg1;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (_Bool)canAnchor;
- (struct CGAffineTransform)computeLayoutFullTransform;
- (void)computeLayoutInfoGeometry:(id *)arg1 andPathSource:(id *)arg2;
- (id)computeLayoutInfoGeometry;
- (id)presetKind;
- (Class)repClass;
- (Class)layoutClass;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (void)saveGeometryToArchive:(struct GeometryArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ConnectionLineArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ConnectionLineArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLinePathSource : TSDBezierPathSource <TSDSmartPathSource>
{
    int mType;
    double mOutsetFrom;
    double mOutsetTo;
}

+ (id)pathSourceAtAngleOfSize:(struct CGSize)arg1 forType:(int)arg2;
+ (id)pathSourceOfLength:(double)arg1;
@property(nonatomic) double outsetTo; // @synthesize outsetTo=mOutsetTo;
@property(nonatomic) double outsetFrom; // @synthesize outsetFrom=mOutsetFrom;
@property(nonatomic) int type; // @synthesize type=mType;
- (id)description;
- (void)p_setBezierPath:(id)arg1;
- (_Bool)isLineSegment;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (struct CGPath *)newFeedbackPathForKnob:(unsigned long long)arg1;
- (id)getFeedbackStringForKnob:(unsigned long long)arg1;
- (struct CGPoint)fixedPointForControlKnobChange;
- (id)bezierPath;
- (void)scaleToNaturalSize:(struct CGSize)arg1;
- (void)setControlKnobPosition:(unsigned long long)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (long long)pathElementIndexForKnobTag:(unsigned long long)arg1;
@property(readonly) unsigned long long numberOfControlKnobs;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)bend;
- (id)initWithBezierPath:(id)arg1;
- (void)saveToArchive:(struct PathSourceArchive *)arg1;
- (id)initWithArchive:(const struct PathSourceArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLineLayout : TSDConnectionLineAbstractLayout
{
    double mStartClipT;
    double mEndClipT;
}

- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (id)quadraticCurve:(struct CGPoint [3])arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLineRep : TSDShapeRep
{
    TSDPathSource *mLastPathSource;
}

+ (_Bool)canConnectToRep:(id)arg1;
+ (id)infosToConnectFromSelection:(id)arg1 withInteractiveCanvasController:(id)arg2;
- (_Bool)p_controlKnobVisible;
- (_Bool)p_isConnectedToLockedObjects;
- (_Bool)p_isConnected;
- (_Bool)i_editMenuOverlapsEndKnobs;
- (struct CGPoint)i_dragOffset;
- (void)updateFromLayout;
- (_Bool)canBeUsedForImageMask;
- (_Bool)directlyManagesLayerContent;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (struct CGRect)targetRectForEditMenu;
- (_Bool)canMakePathEditable;
- (_Bool)isDraggable;
- (_Bool)isSelectable;
- (id)additionalRepsForDragging;
- (_Bool)shouldCreateSelectionKnobs;
- (unsigned long long)enabledKnobMask;
- (double)shortestDistanceToPoint:(struct CGPoint)arg1 countAsHit:(_Bool *)arg2;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (_Bool)shouldShowCommentHighlight;
- (_Bool)shouldCreateKnobs;
- (_Bool)shouldShowSmartShapeKnobs;
- (id)newTrackerForKnob:(id)arg1;
- (_Bool)canConnectToRep:(id)arg1;
- (id)connectionLineLayout;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDTileProvider : NSObject
{
    id <NSObject> mTarget;
    TSDTileStorage *mTileStorage;
    TSKAccessController *mAccessController;
    NSObject<OS_dispatch_queue> *mQueue;
    CDStruct_2d1207dd mVisibleTileRect;
}

@property CDStruct_2d1207dd visibleTileRect; // @synthesize visibleTileRect=mVisibleTileRect;
- (id)p_bucketKey;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;
- (void)removeStoredImages;
- (void)flush;
- (id)contentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTile:(id)arg3 atLocation:(CDStruct_4bcfbbae)arg4 takingReadLock:(_Bool)arg5;
- (void)provideContentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTile:(id)arg3 atLocation:(CDStruct_4bcfbbae)arg4 inGroup:(id)arg5 limitedBySemaphore:(id)arg6 takingReadLock:(_Bool)arg7 startBlock:(CDUnknownBlockType)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 queue:(id)arg2 storage:(id)arg3 accessController:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDRepTileProvider : TSDTileProvider
{
}

- (void)endDrawingOperation;
- (void)beginDrawingOperation;
- (void)drawTargetInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)canTargetDrawInParallel;
- (_Bool)isTargetOpaque;
- (id)initWithRep:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDTileStorage : NSObject <NSCacheDelegate>
{
    NSCache *mCache;
    TSUPointerKeyDictionary *mReverseCacheKeys;
    NSObject<OS_dispatch_semaphore> *mReverseCacheKeysLock;
    NSObject<OS_dispatch_queue> *mCacheKeysQueue;
    NSMutableDictionary *mCacheKeysByBucket;
}

- (id)p_cacheKeyForImageInRect:(struct CGRect)arg1 contentsScale:(double)arg2 tileLocation:(CDStruct_4bcfbbae)arg3;
- (void)removeAllContents;
- (void)removeImagesInBucket:(id)arg1;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (id)contentsInRect:(struct CGRect)arg1 contentsScale:(double)arg2 forTileAtLocation:(CDStruct_4bcfbbae)arg3 inBucket:(id)arg4;
- (void)storeContents:(id)arg1 inRect:(struct CGRect)arg2 contentsScale:(double)arg3 forTileAtLocation:(CDStruct_4bcfbbae)arg4 inBucket:(id)arg5;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDBidirectionalGeometricOperator : NSObject
{
    NSMutableDictionary *mStandardValues;
    NSMutableDictionary *mSwappedValues;
}

- (id)valueForKey:(id)arg1 swapped:(_Bool)arg2;
- (void)executeBidirectionalOperation:(CDUnknownBlockType)arg1;
- (void)setOrientationDependentValueForKey:(id)arg1 withStandardValue:(id)arg2 andSwappedValue:(id)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDDefaultRenderingObjects : NSObject
{
}

+ (id)p_transposedArrayOfColorFills:(id)arg1;
+ (id)p_frameInspectorDictionary;
+ (double)defaultAssetScaleForFrame:(id)arg1;
+ (id)defaultGrayscaleFillsWithNoFillButton:(_Bool)arg1 forTheme:(id)arg2;
+ (id)defaultGrayscaleTextColorsForTheme:(id)arg1;
+ (id)defaultShadowsForTheme:(id)arg1;
+ (id)defaultFrames;
+ (id)defaultEndpoints;
+ (id)defaultLines;
+ (id)defaultPresetImageStrokesForTheme:(id)arg1;
+ (id)defaultPresetStrokesForShapes;
+ (id)defaultStrokes;
+ (id)defaultBasicStrokes;
+ (id)defaultColorAndGrayscaleFillsForTheme:(id)arg1 withNoFillButton:(_Bool)arg2;
+ (id)defaultColorAndGrayscaleFillsForTheme:(id)arg1;
+ (id)defaultImageFillsForTheme:(id)arg1;
+ (id)defaultGradientFillsForTheme:(id)arg1;
+ (id)defaultColorFillsForTheme:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDGLTextureInfo : NSObject
{
    _Bool _containsMipmaps;
    unsigned int _name;
    unsigned int _target;
    unsigned int _height;
    unsigned int _width;
}

+ (id)textureInfoWithName:(unsigned int)arg1 target:(unsigned int)arg2 width:(unsigned int)arg3 height:(unsigned int)arg4 containsMipmaps:(_Bool)arg5;
@property(readonly, nonatomic) unsigned int width; // @synthesize width=_width;
@property(readonly, nonatomic) unsigned int height; // @synthesize height=_height;
@property(readonly, nonatomic) unsigned int target; // @synthesize target=_target;
@property(readonly, nonatomic) _Bool containsMipmaps; // @synthesize containsMipmaps=_containsMipmaps;
@property(readonly, nonatomic) unsigned int name; // @synthesize name=_name;
- (id)description;
- (void)teardown;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithName:(unsigned int)arg1 target:(unsigned int)arg2 width:(unsigned int)arg3 height:(unsigned int)arg4 containsMipmaps:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDGLTextureLoader : NSObject
{
}

+ (id)textureWithContentsOfFile:(id)arg1 generateMipmaps:(_Bool)arg2 error:(id *)arg3;
+ (id)textureWithCGImage:(struct CGImage *)arg1 generateMipmaps:(_Bool)arg2 error:(id *)arg3;
+ (id)p_textureInfoFromCGImage:(struct CGImage *)arg1 generateMipmaps:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDGLMotionBlurEffect : NSObject
{
    struct CGSize _framebufferSize;
    struct CGSize _slideSize;
    TSDGLFrameBuffer *_combinedFramebuffer;
    TSDGLShader *_velocityVisualizerShader;
    TSDGLShader *_velocityCollectionShader;
    TSDGLFrameBuffer *_velocityFramebuffer;
    TSDGLShader *_defaultTextureShader;
    TSDGLFrameBuffer *_colorFramebuffer;
    TSDGLDataBuffer *_colorFBODataBuffer;
    TSDGLDataBuffer *_velocityFBODataBuffer;
    TSDGLDataBuffer *_velocitySquashedFBODataBuffer;
    TSDGLDataBuffer *_FBODataBuffer;
    TSDGLShader *_velocityTileMaxVerticalShader;
    TSDGLShader *_velocityTileMaxHorizontalShader;
    TSDGLShader *_velocityNeighborMaxHorizontalShader;
    TSDGLShader *_velocityNeighborMaxVerticalShader;
    int _originalViewport[4];
    _Bool _isSingleObject;
    double _motionBlurStrength;
    long long _debugDrawMode;
    double _framebufferScale;
    TSDGLState *_GLState;
}

@property(retain, nonatomic) TSDGLState *GLState; // @synthesize GLState=_GLState;
@property(nonatomic) double framebufferScale; // @synthesize framebufferScale=_framebufferScale;
@property(nonatomic) long long debugDrawMode; // @synthesize debugDrawMode=_debugDrawMode;
@property(nonatomic) double motionBlurStrength; // @synthesize motionBlurStrength=_motionBlurStrength;
@property(nonatomic) _Bool isSingleObject; // @synthesize isSingleObject=_isSingleObject;
- (void)p_setupVelocityFramebufferIfNecessary;
- (void)p_setupShaders;
- (void)setupMotionBlurEffectIfNecessary;
- (void)p_dilateVelocityBufferWithCurrentGLFramebuffer:(int)arg1;
- (void)p_blitIntoVelocityFramebufferWithCurrentGLFramebuffer:(int)arg1;
- (void)p_blitIntoColorFramebufferWithCurrentGLFramebuffer:(int)arg1;
- (struct CGSize)p_squashedVelocityFramebufferSize;
- (struct CGSize)p_velocityFramebufferTextureScale;
- (struct CGSize)p_velocityFramebufferSize;
- (void)drawResultWithCurrentGLFramebuffer:(int)arg1;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindVelocityFramebuffer;
- (void)bindColorFramebuffer;
- (void)bindColorAndVelocityFramebuffer;
- (void)p_updateMaxVelocityInShadersWithScale:(double)arg1 isColorFBO:(_Bool)arg2;
- (void)updateVelocityScaleInShader:(id)arg1;
- (struct CGSize)velocityScaleForColorFBO:(_Bool)arg1;
- (id)description;
- (void)teardown;
- (void)dealloc;
- (id)initWithFramebufferSize:(struct CGSize)arg1 slideSize:(struct CGSize)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDGLTextureParameter : NSObject
{
    unsigned int _pname;
    unsigned long long _paramCount;
    int *_intData;
    float *_floatData;
}

+ (id)textureParameterWithPName:(unsigned int)arg1 floatParameters:(float *)arg2 count:(unsigned long long)arg3;
+ (id)textureParameterWithPName:(unsigned int)arg1 floatParameter:(float)arg2;
+ (id)textureParameterWithPName:(unsigned int)arg1 integerParameters:(int *)arg2 count:(unsigned long long)arg3;
+ (id)textureParameterWithPName:(unsigned int)arg1 integerParameter:(int)arg2;
+ (id)stringWithCurrentTextureParameters;
- (void)setGLTextureParameter;
- (void)dealloc;
- (id)initWithPName:(unsigned int)arg1 paramCount:(unsigned long long)arg2 intData:(int *)arg3 floatData:(float *)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDGLFrameBufferTextureConfig : NSObject
{
    _Bool _isTextureNameGenerated;
    int _GLInternalFormat;
    unsigned int _GLFormat;
    unsigned int _GLType;
    unsigned int _attachment;
    NSString *_name;
    NSArray *_textureParameters;
    struct CGSize _size;
}

+ (id)textureConfigWithSize:(struct CGSize)arg1 name:(id)arg2;
+ (id)textureConfigWithSize:(struct CGSize)arg1 textureParameters:(id)arg2 name:(id)arg3;
+ (id)textureConfigWithSize:(struct CGSize)arg1 attachment:(unsigned int)arg2 textureParameters:(id)arg3 name:(id)arg4;
+ (id)textureConfigWithSize:(struct CGSize)arg1 internalFormat:(int)arg2 format:(unsigned int)arg3 type:(unsigned int)arg4 attachment:(unsigned int)arg5 textureParameters:(id)arg6 name:(id)arg7;
@property(readonly, nonatomic) NSArray *textureParameters; // @synthesize textureParameters=_textureParameters;
@property(readonly, nonatomic) unsigned int attachment; // @synthesize attachment=_attachment;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) unsigned int GLType; // @synthesize GLType=_GLType;
@property(readonly, nonatomic) unsigned int GLFormat; // @synthesize GLFormat=_GLFormat;
@property(readonly, nonatomic) int GLInternalFormat; // @synthesize GLInternalFormat=_GLInternalFormat;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 internalFormat:(int)arg2 format:(unsigned int)arg3 type:(unsigned int)arg4 attachment:(unsigned int)arg5 textureParameters:(id)arg6 name:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSDGLFrameBufferTextureLookupInfo : NSObject
{
    unsigned int _attachment;
    unsigned int _textureName;
    long long _indexOnAttachment;
    NSString *_name;
    struct CGSize _textureSize;
}

+ (id)textureLookupInfoWithAttachment:(unsigned int)arg1 indexOnAttachment:(long long)arg2 textureName:(unsigned int)arg3 textureSize:(struct CGSize)arg4 name:(id)arg5;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) struct CGSize textureSize; // @synthesize textureSize=_textureSize;
@property(readonly, nonatomic) unsigned int textureName; // @synthesize textureName=_textureName;
@property(nonatomic) long long indexOnAttachment; // @synthesize indexOnAttachment=_indexOnAttachment;
@property(nonatomic) unsigned int attachment; // @synthesize attachment=_attachment;
- (id)description;
- (void)dealloc;
- (id)initWithAttachment:(unsigned int)arg1 indexOnAttachment:(long long)arg2 textureName:(unsigned int)arg3 textureSize:(struct CGSize)arg4 name:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDGLFrameBuffer : NSObject
{
    NSArray *_textureConfigs;
    NSDictionary *_namesToTextureDict;
    NSMutableArray *_currentTextureLookupInfoByAttachment;
    NSMutableArray *_desiredTextureLookupInfoByAttachment;
    NSArray *_textureConfigsByAttachment;
    NSArray *_textureLookupInfosByAttachment;
    long long _currentBindingOption;
    unsigned int _currentDrawBuffers[1];
    int _currentDrawBufferCount;
    unsigned int _currentReadBuffer;
    unsigned int _framebuffer;
    _Bool _isUsingNonDefaultAttachments;
    _Bool _isBound;
    _Bool _shouldDeleteTexturesOnTeardown;
    NSString *_name;
    struct CGSize _size;
}

+ (void)setCurrentGLFramebuffer:(int)arg1 withBindingOption:(long long)arg2;
+ (void)setCurrentGLFramebuffer:(int)arg1;
+ (int)currentGLFramebufferWithBindingOption:(long long)arg1;
+ (int)currentGLFramebuffer;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) _Bool shouldDeleteTexturesOnTeardown; // @synthesize shouldDeleteTexturesOnTeardown=_shouldDeleteTexturesOnTeardown;
@property(readonly, nonatomic) _Bool isBound; // @synthesize isBound=_isBound;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (unsigned int)currentGLTexture;
- (unsigned int)currentGLTextureAtAttachment:(unsigned int)arg1;
- (void)teardown;
- (struct CGSize)sizeOfGLTextureNamed:(id)arg1;
- (unsigned int)GLTextureNamed:(id)arg1;
- (unsigned int)GLTextureAtIndex:(unsigned long long)arg1;
- (unsigned int)GLTextureAtIndex:(unsigned long long)arg1 attachment:(unsigned int)arg2;
- (void)setCurrentTexturesToNext;
- (void)setCurrentTextureToNextAtAttachment:(unsigned int)arg1;
- (void)setCurrentTextureNamed:(id)arg1 atAttachment:(unsigned int)arg2;
- (void)setCurrentTextureNamed:(id)arg1;
- (void)setCurrentTextureIndex:(unsigned long long)arg1;
- (void)setCurrentTextureIndex:(unsigned long long)arg1 atAttachment:(unsigned int)arg2;
- (long long)currentTextureIndexAtAttachment:(unsigned int)arg1;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1 withBindingOption:(long long)arg2;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindFramebufferWithBindingOption:(long long)arg1;
- (void)p_setFramebufferTextureAtAttachmentIndex:(long long)arg1 bindingOption:(long long)arg2;
- (void)p_setDrawBuffersAndReadBuffer;
- (_Bool)p_isCurrentDrawBuffersEqualToDrawbuffers:(unsigned int *)arg1 count:(long long)arg2;
- (void)bindFramebuffer;
- (void)setupFramebufferIfNecessary;
- (id)description;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1;
- (id)initWithSize:(struct CGSize)arg1 textureCount:(unsigned long long)arg2;
- (id)initWithSize:(struct CGSize)arg1 textureConfigs:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDCAAnimationCache : NSObject
{
    NSDictionary *_overrideInitialValuesDict;
    double _animationDuration;
    long long _cacheValuesCount;
    struct CGPoint *_anchorPointCache;
    double *_anchorPointZCache;
    double *_borderWidthCache;
    struct CGRect *_boundsCache;
    _Bool *_doubleSidedCache;
    _Bool *_hiddenCache;
    double *_opacityCache;
    struct CGPoint *_positionCache;
    struct CATransform3D *_transformCache;
    double *_transformRotationCache;
    double *_transformRotationXCache;
    double *_transformRotationYCache;
    double *_transformRotationZCache;
    double *_transformScaleXCache;
    double *_transformScaleYCache;
    double *_transformScaleXYCache;
    struct CGPoint *_transformTranslationCache;
    double *_transformTranslationXCache;
    double *_transformTranslationYCache;
    double *_transformTranslationZCache;
    double *_zPositionCache;
    _Bool _anchorPointAnimationExists;
    _Bool _anchorPointZAnimationExists;
    _Bool _borderColorAnimationExists;
    _Bool _borderWidthAnimationExists;
    _Bool _boundsAnimationExists;
    _Bool _contentsAnimationExists;
    _Bool _doubleSidedAnimationExists;
    _Bool _doubleSidedInitialValue;
    _Bool _hiddenAnimationExists;
    _Bool _hiddenInitialValue;
    _Bool _opacityAnimationExists;
    _Bool _positionAnimationExists;
    _Bool _transformAnimationExists;
    _Bool _transformRotationAnimationExists;
    _Bool _transformRotationXAnimationExists;
    _Bool _transformRotationYAnimationExists;
    _Bool _transformRotationZAnimationExists;
    _Bool _transformScaleXAnimationExists;
    _Bool _transformScaleYAnimationExists;
    _Bool _transformScaleXYAnimationExists;
    _Bool _transformTranslationAnimationExists;
    _Bool _transformTranslationXAnimationExists;
    _Bool _transformTranslationYAnimationExists;
    _Bool _transformTranslationZAnimationExists;
    _Bool _zPositionAnimationExists;
    CALayer *_layer;
    CAAnimation *_animation;
    double _anchorPointZInitialValue;
    struct CGColor *_borderColorInitialValue;
    double _borderWidthInitialValue;
    struct CGImage *_contentsInitialValue;
    double _opacityInitialValue;
    double _transformRotationInitialValue;
    double _transformRotationXInitialValue;
    double _transformRotationYInitialValue;
    double _transformRotationZInitialValue;
    double _transformScaleXInitialValue;
    double _transformScaleYInitialValue;
    double _transformScaleXYInitialValue;
    double _transformTranslationXInitialValue;
    double _transformTranslationYInitialValue;
    double _transformTranslationZInitialValue;
    double _zPositionInitialValue;
    NSDictionary *_initialValues;
    struct CGPoint _anchorPointInitialValue;
    struct CGPoint _positionInitialValue;
    struct CGPoint _transformTranslationInitialValue;
    struct CGRect _boundsInitialValue;
    struct CATransform3D _transformInitialValue;
}

@property(readonly, nonatomic) NSDictionary *initialValues; // @synthesize initialValues=_initialValues;
@property(readonly, nonatomic) double zPositionInitialValue; // @synthesize zPositionInitialValue=_zPositionInitialValue;
@property(readonly, nonatomic) _Bool zPositionAnimationExists; // @synthesize zPositionAnimationExists=_zPositionAnimationExists;
@property(readonly, nonatomic) double transformTranslationZInitialValue; // @synthesize transformTranslationZInitialValue=_transformTranslationZInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationZAnimationExists; // @synthesize transformTranslationZAnimationExists=_transformTranslationZAnimationExists;
@property(readonly, nonatomic) double transformTranslationYInitialValue; // @synthesize transformTranslationYInitialValue=_transformTranslationYInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationYAnimationExists; // @synthesize transformTranslationYAnimationExists=_transformTranslationYAnimationExists;
@property(readonly, nonatomic) double transformTranslationXInitialValue; // @synthesize transformTranslationXInitialValue=_transformTranslationXInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationXAnimationExists; // @synthesize transformTranslationXAnimationExists=_transformTranslationXAnimationExists;
@property(readonly, nonatomic) struct CGPoint transformTranslationInitialValue; // @synthesize transformTranslationInitialValue=_transformTranslationInitialValue;
@property(readonly, nonatomic) _Bool transformTranslationAnimationExists; // @synthesize transformTranslationAnimationExists=_transformTranslationAnimationExists;
@property(readonly, nonatomic) double transformScaleXYInitialValue; // @synthesize transformScaleXYInitialValue=_transformScaleXYInitialValue;
@property(readonly, nonatomic) _Bool transformScaleXYAnimationExists; // @synthesize transformScaleXYAnimationExists=_transformScaleXYAnimationExists;
@property(readonly, nonatomic) double transformScaleYInitialValue; // @synthesize transformScaleYInitialValue=_transformScaleYInitialValue;
@property(readonly, nonatomic) _Bool transformScaleYAnimationExists; // @synthesize transformScaleYAnimationExists=_transformScaleYAnimationExists;
@property(readonly, nonatomic) double transformScaleXInitialValue; // @synthesize transformScaleXInitialValue=_transformScaleXInitialValue;
@property(readonly, nonatomic) _Bool transformScaleXAnimationExists; // @synthesize transformScaleXAnimationExists=_transformScaleXAnimationExists;
@property(readonly, nonatomic) double transformRotationZInitialValue; // @synthesize transformRotationZInitialValue=_transformRotationZInitialValue;
@property(readonly, nonatomic) _Bool transformRotationZAnimationExists; // @synthesize transformRotationZAnimationExists=_transformRotationZAnimationExists;
@property(readonly, nonatomic) double transformRotationYInitialValue; // @synthesize transformRotationYInitialValue=_transformRotationYInitialValue;
@property(readonly, nonatomic) _Bool transformRotationYAnimationExists; // @synthesize transformRotationYAnimationExists=_transformRotationYAnimationExists;
@property(readonly, nonatomic) double transformRotationXInitialValue; // @synthesize transformRotationXInitialValue=_transformRotationXInitialValue;
@property(readonly, nonatomic) _Bool transformRotationXAnimationExists; // @synthesize transformRotationXAnimationExists=_transformRotationXAnimationExists;
@property(readonly, nonatomic) double transformRotationInitialValue; // @synthesize transformRotationInitialValue=_transformRotationInitialValue;
@property(readonly, nonatomic) _Bool transformRotationAnimationExists; // @synthesize transformRotationAnimationExists=_transformRotationAnimationExists;
@property(readonly, nonatomic) struct CATransform3D transformInitialValue; // @synthesize transformInitialValue=_transformInitialValue;
@property(readonly, nonatomic) _Bool transformAnimationExists; // @synthesize transformAnimationExists=_transformAnimationExists;
@property(readonly, nonatomic) struct CGPoint positionInitialValue; // @synthesize positionInitialValue=_positionInitialValue;
@property(readonly, nonatomic) _Bool positionAnimationExists; // @synthesize positionAnimationExists=_positionAnimationExists;
@property(readonly, nonatomic) double opacityInitialValue; // @synthesize opacityInitialValue=_opacityInitialValue;
@property(readonly, nonatomic) _Bool opacityAnimationExists; // @synthesize opacityAnimationExists=_opacityAnimationExists;
@property(readonly, nonatomic) _Bool hiddenInitialValue; // @synthesize hiddenInitialValue=_hiddenInitialValue;
@property(readonly, nonatomic) _Bool hiddenAnimationExists; // @synthesize hiddenAnimationExists=_hiddenAnimationExists;
@property(readonly, nonatomic) _Bool doubleSidedInitialValue; // @synthesize doubleSidedInitialValue=_doubleSidedInitialValue;
@property(readonly, nonatomic) _Bool doubleSidedAnimationExists; // @synthesize doubleSidedAnimationExists=_doubleSidedAnimationExists;
@property(readonly, nonatomic) struct CGImage *contentsInitialValue; // @synthesize contentsInitialValue=_contentsInitialValue;
@property(readonly, nonatomic) _Bool contentsAnimationExists; // @synthesize contentsAnimationExists=_contentsAnimationExists;
@property(readonly, nonatomic) struct CGRect boundsInitialValue; // @synthesize boundsInitialValue=_boundsInitialValue;
@property(readonly, nonatomic) _Bool boundsAnimationExists; // @synthesize boundsAnimationExists=_boundsAnimationExists;
@property(readonly, nonatomic) double borderWidthInitialValue; // @synthesize borderWidthInitialValue=_borderWidthInitialValue;
@property(readonly, nonatomic) _Bool borderWidthAnimationExists; // @synthesize borderWidthAnimationExists=_borderWidthAnimationExists;
@property(readonly, nonatomic) struct CGColor *borderColorInitialValue; // @synthesize borderColorInitialValue=_borderColorInitialValue;
@property(readonly, nonatomic) _Bool borderColorAnimationExists; // @synthesize borderColorAnimationExists=_borderColorAnimationExists;
@property(readonly, nonatomic) double anchorPointZInitialValue; // @synthesize anchorPointZInitialValue=_anchorPointZInitialValue;
@property(readonly, nonatomic) _Bool anchorPointZAnimationExists; // @synthesize anchorPointZAnimationExists=_anchorPointZAnimationExists;
@property(readonly, nonatomic) struct CGPoint anchorPointInitialValue; // @synthesize anchorPointInitialValue=_anchorPointInitialValue;
@property(readonly, nonatomic) _Bool anchorPointAnimationExists; // @synthesize anchorPointAnimationExists=_anchorPointAnimationExists;
@property(readonly, nonatomic) CAAnimation *animation; // @synthesize animation=_animation;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=_layer;
- (double)zPositionCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformTranslationXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)transformTranslationCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleXYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformScaleXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationYCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationXCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)transformRotationCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CATransform3D)transformCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)positionCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)opacityCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (_Bool)hiddenCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (_Bool)doubleSidedCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGRect)boundsCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)borderWidthCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (double)anchorPointZCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (struct CGPoint)anchorPointCachedValueAtTime:(double)arg1 layer:(id)arg2 animation:(id)arg3;
- (void)dealloc;
- (id)initWithLayer:(id)arg1 animation:(id)arg2 overrideInitialValues:(id)arg3 cacheAnimationValues:(_Bool)arg4;
- (_Bool)verifyCache;
- (_Bool)p_setupAndCacheAnimationValues:(_Bool)arg1 verifyOnly:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDAnnotationController : NSObject
{
}

+ (double)commentFontSize;
- (void)setFilteredAuthors:(id)arg1;
- (void)commitCommentText:(id)arg1 forAnnotation:(id)arg2;
- (void)didShowAnnotation:(id)arg1;
- (void)willShowAnnotation:(id)arg1;
- (void)updateCurrentAnnotation:(id)arg1;
- (void)previousAnnotation:(id)arg1;
- (void)nextAnnotation:(id)arg1;
- (void)unregisterDelegate:(id)arg1;
- (void)registerDelegate:(id)arg1;
@property(nonatomic) _Bool textSelectionChangeShouldDismissAnnotations;
@property(readonly, nonatomic) unsigned long long documentAnnotationCount;
@property(readonly, nonatomic) NSString *annotationNavigationString;
- (id)annotationNavigationTypeStringUsedForNavigating:(_Bool)arg1;
@property(readonly, nonatomic) _Bool hasAnnotations;

@end

__attribute__((visibility("hidden")))
@interface TSDNoDefaultImplicitActionLayer : CALayer
{
}

+ (id)defaultActionForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDAbstractGuide : NSObject
{
    double mOffset;
    TSDLayout *mSnappingObjectLayout;
    struct CGRect mSnappingObjectFrame;
    _Bool mLocationInvalidated;
    struct CGColor *mGuideColor;
}

@property(nonatomic) struct CGColor *guideColor; // @synthesize guideColor=mGuideColor;
@property(nonatomic) struct CGRect snappingObjectFrame; // @synthesize snappingObjectFrame=mSnappingObjectFrame;
@property(retain, nonatomic) TSDLayout *snappingObjectLayout; // @synthesize snappingObjectLayout=mSnappingObjectLayout;
@property(nonatomic) double offset; // @synthesize offset=mOffset;
- (void)dealloc;
- (id)description;
- (_Bool)canBeSnappedToByEdge:(int)arg1 ofFrame:(struct CGRect)arg2;
- (id)init;
- (id)layerWithICC:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDSizingGuideUILayer : CALayer
{
}

- (id)initForLayout:(id)arg1 withICC:(id)arg2 showWidth:(_Bool)arg3 showHeight:(_Bool)arg4;
- (id)initForRect:(struct CGRect)arg1 withICC:(id)arg2 showWidth:(_Bool)arg3 showHeight:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDSpacingGuideUILayer : CALayer
{
    CAShapeLayer *mArrowLayer;
    _Bool mUseVisibleRect;
    double mWidth;
    TSDSwappableAxesGeometry *mHorizontalGeom;
    struct CGColor *mGuideColor;
}

- (void)p_generateArrowLayerForSpacingRect:(struct CGRect)arg1 andViewScale:(double)arg2;
- (void)setFrameFromSpacingRect:(struct CGRect)arg1 icc:(id)arg2;
- (id)initWithSpacingRect:(struct CGRect)arg1 ofOrientation:(int)arg2 icc:(id)arg3 useVisibleRect:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDStyledInfo : TSDDrawableInfo <TSSStyleClient>
{
}

- (id)commandForSettingBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)styleIdentifierTemplateForNewPreset;
- (id)propertyMapForNewPreset;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)i_setValue:(id)arg1 forProperty:(int)arg2;
- (void)setValuesForProperties:(id)arg1;
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)objectForProperty:(int)arg1;
- (id)boxedValueForProperty:(int)arg1;
@property(copy, nonatomic) TSDShadow *shadow;
@property(copy, nonatomic) TSDReflection *reflection;
@property(nonatomic) float opacity;
@property(copy, nonatomic) TSDStroke *stroke;
- (id)commandForPasteStyleWithContext:(id)arg1 pasteboardStyles:(id)arg2;
- (id)stylesForCopyStyle;
@property(retain, nonatomic) TSSStyle *style;
- (Class)styleClass;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDStyledLayout : TSDDrawableLayout
{
    _Bool mIsUpdatingOpacity;
    double mDynamicOpacity;
}

- (void)dynamicOpacityChangeDidEnd;
- (void)dynamicOpacityUpdateToValue:(double)arg1;
- (void)dynamicOpacityChangeDidBegin;
- (_Bool)canFlip;
- (_Bool)isInvisible;
@property(readonly, nonatomic) double opacity;
- (struct CGRect)frameForCulling;
- (struct CGRect)reflectionFrameForSubRect:(struct CGRect)arg1;
- (struct CGRect)reflectionFrameInRoot;
- (struct CGRect)reflectionFrame;
- (struct CGRect)i_baseFrame;
- (struct CGRect)reflectionBoundsForRect:(struct CGRect)arg1;
- (struct CGRect)shadowedNaturalBoundsWithoutOffset;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)aliasedAlignmentFrameForScale:(double)arg1;
- (id)styledInfo;

@end

__attribute__((visibility("hidden")))
@interface TSDStyledRep : TSDRep
{
    CALayer *mShadowLayer;
    CALayer *mReflectionLayer;
    struct CGPoint mOriginalReflectionLayerPositionInScaledCanvas;
    _Bool mIsUpdatingReflectionOpacity;
    TSDMutableReflection *mDynamicReflection;
    _Bool mIsUpdatingShadow;
    TSDShadow *mDynamicShadow;
    struct {
        unsigned int shadowInvalid:1;
    } mFlags;
}

@property(readonly, nonatomic) CALayer *reflectionLayer; // @synthesize reflectionLayer=mReflectionLayer;
@property(readonly, nonatomic) CALayer *shadowLayer; // @synthesize shadowLayer=mShadowLayer;
- (id)textureForContext:(id)arg1;
- (struct CGImage *)newFrameMaskForViewScale:(double)arg1 frameRect:(struct CGRect *)arg2;
- (void)calculateTextureClipBounds:(struct CGRect *)arg1 andOffset:(struct CGPoint *)arg2 withTransform:(struct CGAffineTransform *)arg3 andRectOnCanvas:(struct CGRect *)arg4 textureContext:(id)arg5 isUsingImageTexture:(_Bool)arg6;
- (void)setTextureAttributes:(id)arg1;
- (void)dynamicDragDidBegin;
- (void)dynamicShadowChangeDidEnd;
- (void)dynamicShadowUpdateToValue:(id)arg1;
- (void)dynamicShadowChangeDidBegin;
- (void)dynamicReflectionOpacityChangeDidEnd;
- (void)dynamicReflectionOpacityUpdateToValue:(double)arg1;
- (void)dynamicReflectionOpacityChangeDidBegin;
- (id)pathSourceForSelectionHighlightBehavior;
- (_Bool)shouldShowSelectionHighlight;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (void)drawInContextWithoutEffectsOrChildrenForAlphaOnly:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffectsForAlphaOnly:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffectsOrChildren:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1;
- (void)drawInContextWithoutEffects:(struct CGContext *)arg1 withContent:(_Bool)arg2 withStroke:(_Bool)arg3 withOpacity:(_Bool)arg4 forAlphaOnly:(_Bool)arg5 drawChildren:(_Bool)arg6;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawReflectionInContext:(struct CGContext *)arg1 drawChildren:(_Bool)arg2;
- (void)drawReflectionInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 shouldClipGradient:(_Bool)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)drawShadowInContext:(struct CGContext *)arg1 withChildren:(_Bool)arg2 withDrawableOpacity:(_Bool)arg3;
- (void)drawReflectionIntoReflectionFrameInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 drawChildren:(_Bool)arg4;
- (void)p_drawReflectionIntoReflectionFrameInContext:(struct CGContext *)arg1 withTransparencyLayer:(_Bool)arg2 applyingOpacity:(_Bool)arg3 shouldClipGradient:(_Bool)arg4 withBlock:(CDUnknownBlockType)arg5;
- (void)drawGradientWithAlphaOverReflection:(struct CGContext *)arg1 applyingOpacity:(_Bool)arg2 reflectionSize:(struct CGSize)arg3;
- (struct CGImage *)p_newReflectionImageWithSize:(struct CGSize)arg1 applyOpacity:(_Bool)arg2 viewScale:(double)arg3 withBlock:(CDUnknownBlockType)arg4;
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 unflipped:(_Bool)arg2 withChildren:(_Bool)arg3;
- (struct CGImage *)newShadowImageWithSize:(struct CGSize)arg1 shadow:(id)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (_Bool)canDrawShadowInOneStepWithChildren:(_Bool)arg1;
- (void)positionShadowLayer:(id)arg1 forShadow:(id)arg2 withNaturalBounds:(struct CGRect)arg3;
- (void)invalidateShadowLayer;
- (void)didUpdateEffectLayersForLayer:(id)arg1;
- (struct CGRect)reflectionLayerFrame;
- (struct CGRect)reflectionLayerFrameInRoot;
- (_Bool)isInvisible;
- (void)willUpdateEffectLayersForLayer:(id)arg1;
- (void)disposeReflectionLayer;
- (void)createReflectionLayer;
- (_Bool)shouldShowShadow;
- (_Bool)shouldShowReflection;
@property(readonly, nonatomic) TSDShadow *shadow;
@property(readonly, nonatomic) TSDReflection *reflection;
- (struct CGRect)p_rectWithEffectsAppliedToRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2 includeShadow:(_Bool)arg3 includeReflection:(_Bool)arg4;
- (struct CGRect)rectWithEffectsAppliedToRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double opacity;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawReflectionInContext:(struct CGContext *)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (struct CGRect)p_clipRectInRootForTransform:(struct CGAffineTransform)arg1 includeShadow:(_Bool)arg2 includeReflection:(_Bool)arg3;
- (struct CGRect)clipRect;
- (struct CGRect)clipRectWithoutEffects;
- (void)viewScaleDidChange;
- (void)setNeedsDisplay;
- (id)styledLayout;
- (id)styledInfo;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDHyperlinkRegion : NSObject
{
    NSURL *mURL;
    TSDBezierPath *mBezierPath;
}

+ (id)hyperlinkRegionWithURL:(id)arg1 bezierPath:(id)arg2;
@property(retain, nonatomic) TSDBezierPath *bezierPath; // @synthesize bezierPath=mBezierPath;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=mURL;
- (id)initWithURL:(id)arg1 bezierPath:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDInsertionContext : NSObject
{
}

+ (id)dragInsertionContextWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 shouldEndEditing:(_Bool)arg3 fromDragToInsertController:(_Bool)arg4 insertFloating:(_Bool)arg5;
+ (id)dragInsertionContextWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 fromDragToInsertController:(_Bool)arg3 insertFloating:(_Bool)arg4;
+ (id)nonInteractiveFloatingInsertionContext;
+ (id)nonInteractiveInsertionContext;
@property(readonly, nonatomic, getter=isInteractive) _Bool interactive;
@property(readonly, nonatomic) _Bool fromDragToInsertController;
@property(readonly, nonatomic) _Bool insertFromDrag;
@property(readonly, nonatomic) _Bool insertFloating;
@property(readonly, nonatomic) _Bool shouldEndEditing;
@property(readonly, nonatomic) struct CGPoint preferredCenter;
@property(readonly, nonatomic, getter=isPreferredCenterRequired) _Bool preferredCenterRequired;
@property(readonly, nonatomic) _Bool hasPreferredCenter;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDNonInteractiveInsertionContext : TSDInsertionContext
{
}

- (_Bool)isInteractive;
- (struct CGPoint)preferredCenter;
- (_Bool)fromDragToInsertController;
- (_Bool)insertFromDrag;
- (_Bool)insertFloating;
- (_Bool)shouldEndEditing;
- (_Bool)isPreferredCenterRequired;
- (_Bool)hasPreferredCenter;

@end

__attribute__((visibility("hidden")))
@interface TSDNonInteractiveFloatingInsertionContext : TSDNonInteractiveInsertionContext
{
}

- (_Bool)insertFloating;

@end

__attribute__((visibility("hidden")))
@interface TSDDragInsertionContext : TSDInsertionContext
{
    struct CGPoint mPreferredCenter;
    _Bool mPreferredCenterRequired;
    _Bool mShouldEndEditing;
    _Bool mFromDragToInsertController;
    _Bool mInsertFloating;
}

- (_Bool)fromDragToInsertController;
- (_Bool)shouldEndEditing;
- (struct CGPoint)preferredCenter;
- (_Bool)isPreferredCenterRequired;
- (_Bool)isInteractive;
- (_Bool)insertFromDrag;
- (_Bool)insertFloating;
- (_Bool)hasPreferredCenter;
- (id)init;
- (id)initWithPreferredCenter:(struct CGPoint)arg1 required:(_Bool)arg2 shouldEndEditing:(_Bool)arg3 fromDragToInsertController:(_Bool)arg4 insertFloating:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDCanvasZoomTracker : NSObject
{
    TSDCanvasLayer *mCanvasLayer;
    NSObject<TSDCanvasZoomTrackerDelegate> *mDelegate;
    _Bool mAlwaysUsesTranslationSprings;
    _Bool mSnapsViewScale;
    _Bool mAnimateTransform;
    struct CGAffineTransform mSavedTransform;
    struct CGPoint mZoomOrigin;
    _Bool mHasGestureOrigin;
    struct CGPoint mGestureOrigin;
    struct CGPoint mGestureOffset;
    struct CGPoint mSavedContentOffset;
    _Bool mIsZooming;
    unsigned long long mZoomVelocitySampleCount;
    double mZoomVelocity;
    double mZoomStartTime;
    _Bool mIsShowingZoomHUD;
}

@property(nonatomic) _Bool animateTransform; // @synthesize animateTransform=mAnimateTransform;
@property(nonatomic) _Bool snapsViewScale; // @synthesize snapsViewScale=mSnapsViewScale;
@property(nonatomic) _Bool alwaysUsesTranslationSprings; // @synthesize alwaysUsesTranslationSprings=mAlwaysUsesTranslationSprings;
@property(nonatomic) __weak NSObject<TSDCanvasZoomTrackerDelegate> *delegate; // @synthesize delegate=mDelegate;
- (void)p_finishZoomWithFinalScaleFactor:(double)arg1 contentOffset:(struct CGPoint)arg2;
- (void)zoomWithScale:(double)arg1 velocity:(double)arg2 locationInView:(struct CGPoint)arg3 phase:(int)arg4;
- (id)initWithCanvasLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDHUDViewController : UIViewController
{
    double mLastTimeUpdated;
    NSString *mLastStringSet;
    NSTimer *mStringTimer;
    NSMutableSet *mObjectsShowingHUD;
    TSDCanvasView *mCanvasView;
    struct CGPoint mTouchPoint;
    struct CGPoint mHUDPoint;
    int mHUDOffset;
}

+ (id)sharedHUDViewController;
- (void)p_labelTextTimerFired;
- (void)hideHUDForKey:(id)arg1;
- (void)showHUDForKey:(id)arg1 forTouchPoint:(struct CGPoint)arg2 inCanvasView:(id)arg3 withNudge:(struct CGSize)arg4 size:(int)arg5;
- (void)showHUDForKey:(id)arg1 forTouchPoint:(struct CGPoint)arg2 inCanvasView:(id)arg3 withUpwardsNudge:(double)arg4 size:(int)arg5;
- (void)showHUDForKey:(id)arg1 forTouchPoint:(struct CGPoint)arg2 inCanvasView:(id)arg3 withUpwardsNudge:(double)arg4;
- (void)setLabelText:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDInstantAlphaBinaryBitmap : NSObject
{
    long long mWidth;
    long long mHeight;
    long long mRowBytes;
    char *mData;
}

@property(readonly, nonatomic) char *data; // @synthesize data=mData;
@property(readonly, nonatomic) long long rowBytes; // @synthesize rowBytes=mRowBytes;
@property(readonly, nonatomic) long long height; // @synthesize height=mHeight;
@property(readonly, nonatomic) long long width; // @synthesize width=mWidth;
- (id)medianBitmap;
- (void)unionWithBitmap:(id)arg1;
- (void)dealloc;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2 rowBytes:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDInstantAlphaImage : NSObject
{
    long long mWidth;
    long long mHeight;
    unsigned int *mImageData;
}

- (unsigned int)averageColorAtXPosition:(long long)arg1 yPosition:(long long)arg2;
- (void)dealloc;
- (id)initWithWidth:(long long)arg1 height:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDInstantAlphaTracker : NSObject <TSDLayoutManipulatingTracker>
{
    TSDImageRep *mImageRep;
    _Bool mCurrentlyInOperation;
    struct CGPoint mStartPoint;
    TSUColor *mStartColor;
    long long mTolerance;
    _Bool mAllowDisconnectedRegions;
    _Bool mOperationShouldSubtract;
    double mAngleInRadiansForUIFeedback;
    struct CGPoint mControllingPoint;
    struct CGSize mUnderlyingImageSize;
    struct CGSize mRawImageSize;
    struct CGSize mVisualImageSize;
    TSDInstantAlphaImage *mMaskingImage;
    NSMutableArray *mDecoratorLayers;
    TSUColor *mFillColor;
    TSDInstantAlphaBinaryBitmap *mLastBitmap;
    TSUIntegerKeyDictionary *mWandBitmapCache;
    TSUIntegerKeyDictionary *mDisconnectedBitmapCache;
    _Bool mOperationWasCancelled;
}

+ (id)newInstantAlphaImageWithCGImage:(struct CGImage *)arg1 ofSize:(struct CGSize)arg2;
+ (id)newMaskSeedFillWithPoint:(struct CGPoint)arg1 inImage:(id)arg2 tolerance:(unsigned long long)arg3 oldFill:(id)arg4;
+ (id)newMaskBitmapWithPoint:(struct CGPoint)arg1 image:(id)arg2 tolerance:(unsigned long long)arg3 oldMaskBitmap:(id)arg4;
@property(nonatomic) struct CGPoint controllingPoint; // @synthesize controllingPoint=mControllingPoint;
@property(nonatomic) double angleInRadiansForUIFeedback; // @synthesize angleInRadiansForUIFeedback=mAngleInRadiansForUIFeedback;
@property(nonatomic) _Bool operationShouldSubtract; // @synthesize operationShouldSubtract=mOperationShouldSubtract;
@property(nonatomic) _Bool allowDisconnectedRegions; // @synthesize allowDisconnectedRegions=mAllowDisconnectedRegions;
@property(nonatomic) long long tolerance; // @synthesize tolerance=mTolerance;
- (id)bezierPathForIABitmap:(id)arg1;
- (struct CGPoint)p_convertNaturalPointToImagePoint:(struct CGPoint)arg1;
- (_Bool)operationShouldBeDynamic;
- (_Bool)supportsAlignmentGuides;
- (void)commitChangesForReps:(id)arg1;
- (_Bool)shouldOpenCommandGroupToCommitChangesForReps:(id)arg1;
- (void)changeDynamicLayoutsForReps:(id)arg1;
- (void)p_updateDecoratorLayersWithMask:(id)arg1;
- (id)decoratorLayers;
- (void)cancelCurrentOperation;
- (void)beginIAOperationAtPoint:(struct CGPoint)arg1;
- (id)colorForOperationAtPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDInstantAlphaSeedFill : NSObject
{
}

+ (id)newSeedFillWithImage:(id)arg1 seedPoint:(struct CGPoint)arg2 context:(CDStruct_31de062f *)arg3 oldFill:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSDCapabilities : NSObject
{
    long long _platform;
    long long _deviceType;
    long long _device;
    long long _renderer;
}

+ (id)currentCapabilities;
@property(readonly, nonatomic) long long renderer; // @synthesize renderer=_renderer;
@property(readonly, nonatomic) long long device; // @synthesize device=_device;
@property(readonly, nonatomic) long long deviceType; // @synthesize deviceType=_deviceType;
@property(readonly, nonatomic) long long platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) struct CGSize maximumHardcodedTextureSize;
- (struct CGSize)maximumTextureSizeWithGLContext:(id)arg1;
@property(readonly, nonatomic) _Bool hasLightningPort;
@property(readonly, nonatomic) _Bool isRendererH5OrBelow;
@property(readonly, nonatomic) _Bool isRendererH4OrBelow;
@property(readonly, nonatomic) _Bool isRendererH3OrBelow;
- (id)init;
- (void)p_setupDevice;
- (void)p_setupPlatform;

@end

__attribute__((visibility("hidden")))
@interface TSDBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSDStyledDrawableEditor : TSDDrawableEditor
{
}

- (id)styleClassesToCheckForPasteStyle;
@property(readonly, nonatomic) NSSet *styledInfos;

@end

__attribute__((visibility("hidden")))
@interface TSDSwatchRenderingResult : NSObject
{
    struct CGImage *foreground;
    struct CGImage *background;
}

+ (id)renderingResultWithForeground:(struct CGImage *)arg1 background:(struct CGImage *)arg2;
@property(readonly, nonatomic) struct CGImage *background; // @synthesize background;
@property(readonly, nonatomic) struct CGImage *foreground; // @synthesize foreground;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDSwatchRenderingOperation : NSOperation
{
    UIView *mView;
    NSObject<TSSPreset> *mPreset;
    struct CGSize mImageSize;
    double mImageScale;
    struct CGRect mSwatchFrame;
    TSKDocumentRoot *mDocumentRoot;
    struct CGImage *mDeliveredImage;
    unsigned long long mInsertPopoverPageType;
    unsigned long long mInsertPopoverPageNumber;
    NSString *mIdentifier;
}

@property(copy) NSString *identifier; // @synthesize identifier=mIdentifier;
@property unsigned long long insertPopoverPageNumber; // @synthesize insertPopoverPageNumber=mInsertPopoverPageNumber;
@property unsigned long long insertPopoverPageType; // @synthesize insertPopoverPageType=mInsertPopoverPageType;
@property(readonly) TSKDocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
@property(readonly) struct CGRect swatchFrame; // @synthesize swatchFrame=mSwatchFrame;
@property(readonly) double imageScale; // @synthesize imageScale=mImageScale;
@property(readonly) struct CGSize imageSize; // @synthesize imageSize=mImageSize;
@property(readonly) NSObject<TSSPreset> *preset; // @synthesize preset=mPreset;
@property(retain) UIView *view; // @synthesize view=mView;
- (void)main;
- (void)doWorkWithReadLock;
- (struct UIEdgeInsets)swatchEdgeInsets;
- (_Bool)needsPressedStateBackground;
@property(readonly, nonatomic) struct CGImage *deliveredImage;
- (void)deliverCGImage:(struct CGImage *)arg1;
- (void)p_deliverResultOnMainThread:(id)arg1;
- (struct CGImage *)p_newSwatchPressedStateBackgroundFromCGImage:(struct CGImage *)arg1;
- (void)p_animateSwatchIn;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 documentRoot:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDShapeRenderingOperation : TSDSwatchRenderingOperation
{
    int mShapeType;
    double mAngle;
}

- (void)doWorkWithReadLock;
- (_Bool)needsPressedStateBackground;
- (struct UIEdgeInsets)swatchEdgeInsets;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 angle:(double)arg6 documentRoot:(id)arg7;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 shapeType:(int)arg5 documentRoot:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface TSDImageRenderingOperation : TSDSwatchRenderingOperation
{
    TSDImageInfo *mImageInfo;
    _Bool mShouldClipVertically;
}

@property(retain) TSDImageInfo *imageInfo; // @synthesize imageInfo=mImageInfo;
- (void)doWorkWithReadLock;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 documentRoot:(id)arg6;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 imageInfo:(id)arg5 documentRoot:(id)arg6 shouldClipVertically:(_Bool)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieRenderingOperation : TSDSwatchRenderingOperation
{
    TSDMovieInfo *mMovieInfo;
    _Bool mShouldClipVertically;
}

@property(retain) TSDMovieInfo *movieInfo; // @synthesize movieInfo=mMovieInfo;
- (void)doWorkWithReadLock;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 documentRoot:(id)arg6;
- (id)initWithPreset:(id)arg1 imageSize:(struct CGSize)arg2 imageScale:(double)arg3 swatchFrame:(struct CGRect)arg4 movieInfo:(id)arg5 documentRoot:(id)arg6 shouldClipVertically:(_Bool)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSDLockedDrawableEditor : TSDDrawableEditor
{
    TSDDrawableEditor *mAuxiliaryDrawableEditor;
}

@property(retain, nonatomic) TSDDrawableEditor *auxiliaryDrawableEditor; // @synthesize auxiliaryDrawableEditor=mAuxiliaryDrawableEditor;
- (void)p_unlock:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDGradientStop : NSObject <TSDMixing, NSCopying, NSMutableCopying>
{
    TSUColor *mColor;
    double mFraction;
    double mInflection;
}

+ (id)gradientStopWithColor:(id)arg1 fraction:(double)arg2 inflection:(double)arg3;
+ (id)gradientStopWithColor:(id)arg1 fraction:(double)arg2;
@property(readonly, nonatomic) double inflection; // @synthesize inflection=mInflection;
@property(readonly, nonatomic) double fraction; // @synthesize fraction=mFraction;
@property(readonly, copy, nonatomic) TSUColor *color; // @synthesize color=mColor;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)gradientStopWithInflection:(double)arg1;
- (id)gradientStopWithColor:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)p_setInflection:(double)arg1;
- (void)p_setFraction:(double)arg1;
- (void)p_setColor:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)initWithGradientStop:(id)arg1;
- (id)initWithColor:(id)arg1 fraction:(double)arg2 inflection:(double)arg3;
- (id)initWithColor:(id)arg1 fraction:(double)arg2;
- (void)saveToArchive:(struct GradientArchive_GradientStop *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct GradientArchive_GradientStop *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableGradientStop : TSDGradientStop
{
}

@property(nonatomic) double inflection; // @dynamic inflection;
@property(nonatomic) double fraction; // @dynamic fraction;
@property(copy, nonatomic) TSUColor *color; // @dynamic color;

@end

__attribute__((visibility("hidden")))
@interface TSDBitmapRenderingQualityInfo : NSObject
{
    int mQuality;
    float mCanvasScale;
    NSMutableDictionary *mImageMap;
}

@property(readonly, nonatomic) int quality; // @synthesize quality=mQuality;
- (struct CGImage *)degradedImageRefForProvider:(id)arg1 ofSize:(struct CGSize)arg2;
- (void)cacheProvider:(id)arg1 ofSize:(struct CGSize)arg2;
- (void)dealloc;
- (id)initWithQuality:(int)arg1 canvasScale:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDBitmapRenderingQualityImageMapValue : NSObject
{
    struct CGSize mMaxSize;
    struct CGImage *mDegradedImageRef;
}

- (struct CGImage *)degradedImageRefForForProvider:(id)arg1 quality:(int)arg2 canvasScale:(float)arg3;
- (void)addSize:(struct CGSize)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDInfoImporter : NSObject
{
    TSPObjectContext *mContext;
    NSURL *mURL;
    TSPData *mData;
    TSSTheme *mTheme;
    id <TSDInfoImporterDelegate> mDelegate;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (Class)p_classForTSPData:(id)arg1;
+ (Class)p_classForURL:(id)arg1;
+ (_Bool)i_canImportFileWithData:(id)arg1 type:(id)arg2;
+ (_Bool)i_canImportFileAtURL:(id)arg1 type:(id)arg2;
+ (id)i_supportedFileTypesForSubclass;
+ (id)supportedRemoteURLSchemes;
+ (id)supportedImageFileTypes;
+ (id)supportedFileTypes;
+ (id)p_registeredSubclasses;
@property(nonatomic) id <TSDInfoImporterDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) TSSTheme *theme; // @synthesize theme=mTheme;
@property(readonly, nonatomic) TSPData *data; // @synthesize data=mData;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=mURL;
@property(readonly, nonatomic) TSPObjectContext *context; // @synthesize context=mContext;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) TSDDrawableInfo *info;
@property(readonly, nonatomic) TSUProgress *progress;
- (void)cancel;
- (void)importInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithContext:(id)arg1 data:(id)arg2 theme:(id)arg3;
- (id)initWithContext:(id)arg1 URL:(id)arg2 theme:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDInfoImporterPlaceholder : TSDInfoImporter
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)initWithContext:(id)arg1 data:(id)arg2 theme:(id)arg3;
- (id)initWithContext:(id)arg1 URL:(id)arg2 theme:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieInfoImporter : TSDInfoImporter
{
    NSObject<OS_dispatch_queue> *mImportQueue;
    CDUnknownBlockType mCompletionHandler;
    TSUScaledProgress *mProgress;
    TSPData *mMovieData;
    AVAsset *mAsset;
    TSDMovieCompatibilityChecker *mCompatibilityChecker;
    AVAssetImageGenerator *mPosterImageGenerator;
    TSDDrawableInfo *mInfo;
    NSError *mError;
    _Bool mIsCancelled;
    _Bool mDidMessageDelegateAboutMovieCompatibility;
}

+ (id)supportedMovieRemoteURLSchemes;
+ (_Bool)i_canImportFileWithData:(id)arg1 type:(id)arg2;
+ (_Bool)i_canImportFileAtURL:(id)arg1 type:(id)arg2;
+ (id)i_supportedFileTypesForSubclass;
- (id)error;
- (id)info;
- (id)progress;
- (void)cancel;
- (void)p_finishImportingWithInfo:(id)arg1 error:(id)arg2;
- (void)p_tellMovieCompatibilityProviderToIgnoreCompatibilityLevelIfNeeded;
- (void)p_importInfoFromAnimatedGIF;
- (void)p_importInfoFromAsset;
- (void)p_importInfoFromAssetConvertingIfNeededToRequiredCompatibilityLevel:(long long)arg1 fromCompatibilityLevel:(long long)arg2;
- (void)importInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)p_isURLRemote;
- (void)dealloc;
- (id)initWithContext:(id)arg1 data:(id)arg2 theme:(id)arg3;
- (id)initWithContext:(id)arg1 URL:(id)arg2 theme:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDImageInfoImporter : TSDInfoImporter
{
    NSObject<OS_dispatch_queue> *mImportQueue;
    TSUBasicProgress *mProgress;
    TSDDrawableInfo *mInfo;
    NSError *mError;
    int mIsCancelled;
}

+ (_Bool)i_canImportFileWithData:(id)arg1 type:(id)arg2;
+ (_Bool)i_canImportFileAtURL:(id)arg1 type:(id)arg2;
+ (id)i_supportedFileTypesForSubclass;
- (id)error;
- (id)info;
- (id)progress;
- (void)cancel;
- (id)p_emptyImageStyle;
- (void)p_finishImportingWithInfo:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)importInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 data:(id)arg2 theme:(id)arg3;
- (id)initWithContext:(id)arg1 URL:(id)arg2 theme:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieCompatibilityChecker : NSObject
{
    AVAsset *mAsset;
    long long mCompatibilityLevel;
    NSError *mError;
    CDStruct_79c71658 mCustomMaxPlayableVideoDimensions;
    NSSet *mCustomPlayableVideoCodecTypes;
    int mCustomMaxPlayableVideoPixelsPerFrame;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=mError;
@property(readonly, nonatomic) long long compatibilityLevel; // @synthesize compatibilityLevel=mCompatibilityLevel;
- (_Bool)p_isAudioTrackPlayableOnAllDevices:(id)arg1;
- (id)p_sampleDescriptionExtensionAtomDataFromVideoFormatDescription:(struct opaqueCMFormatDescription *)arg1 forAtomType:(id)arg2;
- (_Bool)p_isH263VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isMPEG4VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isH264VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isSorenson3VideoFormatPlayableOnAllDevices:(struct opaqueCMFormatDescription *)arg1;
- (_Bool)p_isVideoTrackPlayableOnAllDevices:(id)arg1;
- (_Bool)p_assetHasSupportedFileTypeOnAllDevices;
- (_Bool)p_isLoadedAssetPlayableOnAllDevices;
- (void)cancel;
- (void)p_didFinishCheckingCompatibilityUpToLevel:(long long)arg1 actualLevel:(long long)arg2 didCancel:(_Bool)arg3 error:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)checkCustomCompatibilityWithVideoCodecTypes:(id)arg1 maxPlayableVideoDimensions:(struct CGSize)arg2 maxPlayableVideoPixelsPerFrame:(int)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)checkCompatibilityUpToLevel:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAsset:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDDropShadow : TSDShadow
{
}

+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (id)initWithAngle:(double)arg1 offset:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableDropShadow : TSDDropShadow
{
}

- (void)setTSUColor:(id)arg1;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
@property(nonatomic) struct CGColor *color; // @dynamic color;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) double radius; // @dynamic radius;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) double angle; // @dynamic angle;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDImageResamplingOperation : NSObject
{
    TSDImageProvider *mImageProvider;
    struct CGSize mDesiredSize;
    NSString *mDisplayName;
    struct CGPath *mMaskingPath;
    TSPObjectContext *mObjectContext;
}

@property(nonatomic) struct CGPath *maskingPath; // @synthesize maskingPath=mMaskingPath;
@property(retain, nonatomic) TSPObjectContext *objectContext; // @synthesize objectContext=mObjectContext;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=mDisplayName;
@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=mDesiredSize;
@property(retain, nonatomic) TSDImageProvider *imageProvider; // @synthesize imageProvider=mImageProvider;
- (id)performResampleOperationWithResampleOptions:(unsigned long long)arg1 bitmapContextOptions:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithImageProvider:(id)arg1 desiredSize:(struct CGSize)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDContactShadow : TSDShadow
{
    double mHeight;
}

+ (id)contactShadowWithOffset:(double)arg1 height:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageFromContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 bounds:(struct CGRect)arg3 unflipped:(_Bool)arg4;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (double)clampOffset:(double)arg1;
- (double)clampRadius:(double)arg1;
@property(readonly, nonatomic) double perspective;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)shadowType;
- (id)initWithOffset:(double)arg1 height:(double)arg2 radius:(double)arg3 opacity:(double)arg4 color:(struct CGColor *)arg5 enabled:(_Bool)arg6;
- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableContactShadow : TSDContactShadow
{
}

@property(nonatomic) TSUColor *TSUColor;
@property(nonatomic) struct CGColor *color; // @dynamic color;
- (void)setOpacity:(double)arg1;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) long long radius; // @dynamic radius;
@property(nonatomic) double perspective; // @dynamic perspective;
@property(nonatomic) double height; // @dynamic height;

// Remaining properties
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;

@end

__attribute__((visibility("hidden")))
@interface TSDCurvedShadow : TSDShadow
{
    double mCurve;
}

+ (id)curvedShadowWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
+ (id)instanceWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) double curve; // @synthesize curve=mCurve;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (struct CGImage *)newShadowImageForRep:(id)arg1 withSize:(struct CGSize)arg2 drawSelector:(SEL)arg3 unflipped:(_Bool)arg4;
- (struct CGRect)boundsForRep:(id)arg1;
- (struct CGRect)boundsInNaturalSpaceForRep:(id)arg1;
- (struct CGRect)shadowBoundsForRect:(struct CGRect)arg1 additionalTransform:(struct CGAffineTransform)arg2;
- (_Bool)showForEditingText;
- (_Bool)isEqual:(id)arg1;
- (id)newShadowClampedForSwatches;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)offsetFromCurve;
- (double)getVerticalOffset:(struct CGSize)arg1;
- (struct CGPoint)boundsShiftForSize:(struct CGSize)arg1;
- (struct CGRect)expandedBoundsForRect:(struct CGRect)arg1;
- (double)paddingForBlur;
- (unsigned long long)shadowType;
- (double)clampOffset:(double)arg1;
- (id)description;
- (id)initWithOffset:(double)arg1 angle:(double)arg2 radius:(double)arg3 curve:(double)arg4 opacity:(double)arg5 color:(struct CGColor *)arg6 enabled:(_Bool)arg7;
- (void)saveToArchive:(struct ShadowArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ShadowArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableCurvedShadow : TSDCurvedShadow
{
}

@property(nonatomic) TSUColor *TSUColor;
@property(nonatomic) struct CGColor *color; // @dynamic color;
@property(nonatomic) double opacity; // @dynamic opacity;
@property(nonatomic) long long radius; // @dynamic radius;
@property(nonatomic) double angle; // @dynamic angle;
@property(nonatomic) double offset; // @dynamic offset;
@property(nonatomic) double curve; // @dynamic curve;

// Remaining properties
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;

@end

__attribute__((visibility("hidden")))
@interface TSDGLShadow : NSObject
{
}

+ (id)sharedContext;
+ (id)renderQueue;
- (void)createOffscreenRenderBuffer:(struct CGSize)arg1 framebuffer:(id)arg2 requiresDepth:(_Bool)arg3 colorRenderBuffer:(unsigned int *)arg4 depthRenderBuffer:(unsigned int *)arg5;
- (struct CGImage *)newCGImageFromGLBuffer:(char **)arg1;
- (void)setupGLTextureParameters;

@end

__attribute__((visibility("hidden")))
@interface TSDGLCurvedShadow : TSDGLShadow
{
    TSDGLFrameBuffer *mAlphaFrameBuffer;
    TSDGLDataBuffer *mAlphaDataBuffer;
    TSDGLShader *mAlphaShader;
    TSDGLShader *mCurvedShader;
    TSDGLFrameBuffer *mCurveInterpolationFrameBuffer;
    TSDGLDataBuffer *mCurveInterpolationDataBuffer;
    TSDGLShader *mCurveInterpolationShader;
    char *mBuffer;
    CIContext *mCIContext;
}

+ (void)applicationDidBecomeActive;
+ (void)applicationWillResignActive;
- (void)releaseShaders;
- (void)p_deleteFramebuffersWithCurrentGLFramebuffer:(int)arg1;
- (void)p_unbindFramebuffersWithCurrentGLFramebuffer:(int)arg1;
- (struct CGImage *)newCurvedAlphaCGImageForImage:(struct CGImage *)arg1 size:(struct CGSize)arg2;
- (struct CGImage *)newCGImageWithTexture:(id)arg1 size:(struct CGSize)arg2 shader:(id)arg3 framebuffer:(id)arg4 databuffer:(id)arg5;
- (void)p_bindCurvedInterpolationShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)p_bindCurvedShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)p_bindAlphaShaderForShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (id)p_blurredCIImage:(id)arg1 blurRadius:(double)arg2;
- (void)p_newBlurredImageFromCIImage:(id)arg1 blurRadius:(double)arg2 halfBlurredImage:(struct CGImage **)arg3 blurredImage:(struct CGImage **)arg4 framebufferSize:(struct CGSize)arg5;
- (id)p_newTintedCIImageFromImage:(id)arg1 withColor:(CDStruct_818bb265)arg2 framebufferSize:(struct CGSize)arg3;
- (_Bool)p_shrinkImageIfNecessary:(struct CGImage *)arg1 originalSize:(struct CGSize)arg2 newImage:(struct CGImage **)arg3 newSize:(struct CGSize *)arg4;
- (void)p_setupCIContextForFramebufferSize:(struct CGSize)arg1;
- (void)drawShadow:(id)arg1 forImage:(struct CGImage *)arg2 inContext:(struct CGContext *)arg3 forSize:(struct CGSize)arg4;
- (double)baseBlurRadiusForCurvedShadow:(id)arg1 framebufferSize:(struct CGSize)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLineAbstractLayout : TSDShapeLayout
{
    TSDBezierPath *mClippedBezierPath;
    TSDConnectionLinePathSource *mOriginalPathSource;
    TSDConnectionLinePathSource *mConnectedPathSource;
    TSDInfoGeometry *mConnectedInfoGeometry;
    TSDLayout *mConnectedFrom;
    TSDLayout *mConnectedTo;
    TSDBezierPath *mCachedFromWrapPath;
    TSDBezierPath *mCachedToWrapPath;
    double mCachedFromOutset;
    double mCachedToOutset;
    TSDBezierPath *mCachedFromOutsetWrapPath;
    TSDBezierPath *mCachedToOutsetWrapPath;
    TSDLayout *mOldConnectedFrom;
    TSDLayout *mOldConnectedTo;
    _Bool mValidConnections;
    _Bool mVisibleLine;
    _Bool mValidLine;
    struct CGPoint mLooseEndPosition;
    struct CGPoint mAcumulatedDrag;
    _Bool mUseResizePoints[3];
    struct CGPoint mResizeControlPoints[3];
    _Bool mUseDynamicOutsets;
    double mDynamicOutsetFrom;
    double mDynamicOutsetTo;
}

@property(nonatomic) double dynamicOutsetTo; // @synthesize dynamicOutsetTo=mDynamicOutsetTo;
@property(nonatomic) double dynamicOutsetFrom; // @synthesize dynamicOutsetFrom=mDynamicOutsetFrom;
@property(nonatomic) _Bool useDynamicOutsets; // @synthesize useDynamicOutsets=mUseDynamicOutsets;
@property(readonly, nonatomic) _Bool validLine; // @synthesize validLine=mValidLine;
@property(nonatomic) TSDLayout *connectedTo; // @synthesize connectedTo=mConnectedTo;
@property(nonatomic) TSDLayout *connectedFrom; // @synthesize connectedFrom=mConnectedFrom;
- (id)p_infoForConnectingToInfo:(id)arg1;
- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)pauseDynamicTransformation;
- (struct CGPoint)i_accumulatedDrag;
- (void)endDynamicOperation;
- (void)beginDynamicOperation;
- (_Bool)shouldDisplayGuides;
- (struct CGPoint)unclippedTailPoint;
- (struct CGPoint)unclippedHeadPoint;
- (id)path;
- (_Bool)pathIsOpen;
- (_Bool)pathIsLineSegment;
- (void)invalidatePath;
- (void)invalidatePosition;
- (struct CGRect)boundsForStandardKnobs;
- (id)layoutInfoGeometry;
- (id)pathSource;
@property(readonly, nonatomic) TSDConnectionLinePathSource *connectedPathSource;
- (int)wrapType;
- (_Bool)canResetTextAndObjectHandles;
- (_Bool)canBeIntersected;
- (_Bool)canFlip;
- (_Bool)canEndpointsCoincide;
- (_Bool)isInvisible;
- (void)updateConnectedPath;
- (id)clipPath:(id)arg1 onLayout:(id)arg2 outset:(double)arg3 reversed:(_Bool)arg4 isValid:(_Bool *)arg5;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (void)checkConnections;
- (void)validate;
- (void)invalidateConnections;
- (void)removeConnections;
- (void)connectedLayoutInvalidated:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (void)parentDidChange;
- (void)updateRepPath;
- (_Bool)supportsFlipping;
- (_Bool)supportsRotation;
- (_Bool)supportsResize;
- (id)additionalLayoutsForRepCreation;
- (id)reliedOnLayouts;
- (_Bool)shouldValidate;
- (id)connectionLineInfo;
@property(readonly, nonatomic) double outsetTo;
@property(readonly, nonatomic) double outsetFrom;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSDConnectionLineOrthogonalLayout : TSDConnectionLineAbstractLayout
{
}

- (struct CGPoint)getControlKnobPosition:(unsigned long long)arg1;
- (void)addEndpointSnapsToXs:(vector_3f7ffb82 *)arg1 andYs:(vector_3f7ffb82 *)arg2;
- (struct CGPoint)axisSnapPoint:(struct CGPoint)arg1 toXs:(vector_3f7ffb82)arg2 toYs:(vector_3f7ffb82)arg3 withThreshold:(double)arg4;
- (_Bool)canEndpointsCoincide;
- (struct CGPoint)controlPointForPointA:(struct CGPoint)arg1 pointB:(struct CGPoint)arg2 andOriginalA:(struct CGPoint)arg3 originalB:(struct CGPoint)arg4;
- (id)createConnectedPathFrom:(id)arg1 to:(id)arg2 withControlPoints:(struct CGPoint [3])arg3;
- (struct CGRect)orthoRectOfLayout:(id)arg1 outset:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDEditableBezierPathSourceMorphInfo : NSObject
{
    TSDEditableBezierPathSource *mOriginal;
    TSDEditableBezierPathSource *mSmoothOriginal;
    TSUPointerKeyDictionary *mOriginalNodeIndexMapping;
}

@property(retain, nonatomic) TSDEditableBezierPathSource *smoothOriginal; // @synthesize smoothOriginal=mSmoothOriginal;
@property(retain, nonatomic) TSDEditableBezierPathSource *original; // @synthesize original=mOriginal;
- (id)originalSmoothNodeForNode:(id)arg1;
- (unsigned long long)originalNodeIndexForNode:(id)arg1;
- (unsigned long long)originalSubpathIndexForNode:(id)arg1;
- (id)originalNodeForNode:(id)arg1;
- (void)dealloc;
- (id)initWithEditableBezierPathSource:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDUserDefinedGuide : NSObject
{
    double mPosition;
    int mGuideType;
}

@property(readonly, nonatomic) int guideType; // @synthesize guideType=mGuideType;
@property(readonly, nonatomic) double position; // @synthesize position=mPosition;
- (id)description;
- (id)alignmentGuideForEditing;
- (id)alignmentGuide;
- (id)initWithTSDAlignmentGuide:(id)arg1;
- (id)initWithPosition:(double)arg1 type:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDGuideStorage : TSPObject <TSPCopying>
{
    NSMutableSet *mGuides;
}

@property(retain, nonatomic) NSSet *guides; // @synthesize guides=mGuides;
- (id)description;
- (id)alignmentGuidesForEditing;
- (id)alignmentGuides;
- (id)provideDynamicGuides;
- (unsigned long long)count;
- (void)removeGuide:(id)arg1;
- (void)addGuide:(id)arg1;
- (void)dealloc;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDChangePropagationMap : NSObject <TSDChangePropagationMap>
{
    TSUNoCopyDictionary *mDictionary;
    NSMutableSet *mClassesOfChangedPrototypes;
}

- (id)prototypePassingTest:(CDUnknownBlockType)arg1;
- (id)prototypeChangeForPrototype:(id)arg1;
- (void)p_addClassesForPrototype:(id)arg1;
- (_Bool)hasAnyChangesForPrototypesOfClasses:(id)arg1;
- (void)recordDeleteChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (void)recordNewValueForModifyChangeForPrototype:(id)arg1 property:(int)arg2 newBoxedValue:(id)arg3;
- (void)recordOldValueForModifyChangeForPrototype:(id)arg1 property:(int)arg2 oldBoxedValue:(id)arg3;
- (void)recordModifyChangeForPrototype:(id)arg1 property:(int)arg2 oldBoxedValue:(id)arg3 newBoxedValue:(id)arg4;
- (void)recordReplacementChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDGLEdgeDistanceField : NSObject
{
    unsigned int _inputTexture;
    struct CGSize _textureSize;
    struct CGSize _resultTextureSize;
    struct CGSize _squareSize;
    struct UIEdgeInsets _edgeInsets;
    double _downsampleScale;
    TSDGLFrameBuffer *_exteriorFramebuffer;
    TSDGLFrameBuffer *_interiorFramebuffer;
    TSDGLDataBuffer *_origDataBuffer;
    TSDGLDataBuffer *_rectDataBuffer;
    TSDGLDataBuffer *_squareDataBuffer;
    TSDGLState *_GLState;
    int _oldViewport[4];
}

+ (id)distanceFieldTextureWithTexture:(unsigned int)arg1 textureSize:(struct CGSize)arg2 maxDistance:(long long)arg3 edgeInsets:(struct UIEdgeInsets)arg4 downsampleScale:(double)arg5 floatTexture:(_Bool)arg6 GLState:(id)arg7;
+ (void)didEndUsingShaders;
+ (void)willBeginUsingShaders;
- (unsigned int)p_gradientTextureFromCombinedTexture:(unsigned int)arg1 withCurrentGLFramebuffer:(int)arg2;
- (unsigned int)p_combinedTextureWithCurrentGLFramebuffer:(int)arg1 floatTexture:(_Bool)arg2;
- (void)p_floodTextureInFramebuffer:(id)arg1 maxDistance:(long long)arg2;
- (void)p_seedTextureFromTexture:(unsigned int)arg1 invertSeed:(_Bool)arg2;
- (void)p_writeIntoSquareTexture;
- (void)p_setupShaders;
- (void)p_setupBuffers;
- (void)dealloc;
- (id)initWithTexture:(unsigned int)arg1 textureSize:(struct CGSize)arg2 edgeInsets:(struct UIEdgeInsets)arg3 downsampleScale:(double)arg4 GLState:(id)arg5;
- (void)teardown;

@end

__attribute__((visibility("hidden")))
@interface TSDGLEdgeDistanceFieldMorphEffect : NSObject
{
    _Bool _didTeardown;
    struct CGRect _outgoingTextBounds;
    struct CGRect _incomingTextBounds;
    struct CGAffineTransform _outgoingTextureEdgeInsetsAdjustmentMatrix;
    struct CGAffineTransform _incomingTextureEdgeInsetsAdjustmentMatrix;
    CDStruct_d6fcdff4 _textureAdjustment;
    _Bool _didSetupTextureAdjustment;
    _Bool _isTextStyleIdenticalExceptSize;
    TSDGLTextureInfo *_outgoingTextureInfo;
    TSDGLTextureInfo *_incomingTextureInfo;
    TSDGLShader *_shader;
}

+ (void)didEndUsingShaders;
+ (void)willBeginUsingShaders;
@property(nonatomic) _Bool isTextStyleIdenticalExceptSize; // @synthesize isTextStyleIdenticalExceptSize=_isTextStyleIdenticalExceptSize;
@property(readonly, nonatomic) TSDGLShader *shader; // @synthesize shader=_shader;
@property(readonly, nonatomic) TSDGLTextureInfo *incomingTextureInfo; // @synthesize incomingTextureInfo=_incomingTextureInfo;
@property(readonly, nonatomic) TSDGLTextureInfo *outgoingTextureInfo; // @synthesize outgoingTextureInfo=_outgoingTextureInfo;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D)arg2 generateTextureMatrices:(_Bool)arg3;
- (void)setupShaderWithMorphPercent:(double)arg1 MVPMatrix:(struct CATransform3D)arg2 outgoingTextureMatrix:(struct CGAffineTransform)arg3 incomingTextureMatrix:(struct CGAffineTransform)arg4;
- (CDStruct_d6fcdff4)textureMatchingTextureAdjustment;
- (void)setupIfNecessary;
- (struct CGAffineTransform)p_affineTransformWithTextureAdjustment:(CDStruct_d6fcdff4)arg1 textureSize:(struct CGSize)arg2;
- (double)p_errorFromApplyingTextureAdjustment:(CDStruct_d6fcdff4)arg1 toOutgoingScanlineCenters:(struct CGPoint *)arg2 outgoingScanlineZeroes:(struct CGPoint *)arg3 incomingScanlineCenters:(struct CGPoint *)arg4 incomingScanlineZeroes:(struct CGPoint *)arg5 samples:(unsigned long long)arg6;
- (double)p_errorFromApplyingTextureAdjustment:(CDStruct_d6fcdff4)arg1 toOutgoingValue:(double)arg2 incomingValue:(double)arg3 sample:(unsigned long long)arg4 sampleCount:(unsigned long long)arg5;
- (void)p_fillScanlineCenters:(struct CGPoint *)arg1 scanlineMinMaxZeroes:(struct CGPoint *)arg2 samples:(unsigned long long)arg3 fromTexture:(unsigned int)arg4 textureSize:(struct CGSize)arg5;
- (struct CGRect)p_actualPixelBoundsOfTexturedRectangle:(id)arg1;
- (struct CGContext *)newContextFromTexture:(id)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithOutgoingTextureName:(unsigned int)arg1 outgoingTextureSize:(struct CGSize)arg2 outgoingTextBounds:(struct CGRect)arg3 outgoingColor:(CDStruct_818bb265)arg4 incomingTextureName:(unsigned int)arg5 incomingTextureSize:(struct CGSize)arg6 incomingTextBounds:(struct CGRect)arg7 incomingColor:(CDStruct_818bb265)arg8 GLState:(id)arg9 motionBlur:(_Bool)arg10 motionBlurIgnoreTextureOpacity:(_Bool)arg11;
- (id)initWithOutgoingTR:(id)arg1 incomingTR:(id)arg2 GLState:(id)arg3 motionBlur:(_Bool)arg4 motionBlurIgnoreTextureOpacity:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDGLEdgeDistanceFieldTraceEffect : NSObject
{
    _Bool _canDraw;
    _Bool _didTeardown;
    long long _traceTextureMaxValue;
    struct CGAffineTransform _textureEdgeInsetsAdjustmentMatrix;
    NSArray *_strokeLineSegment;
    struct __CFArray *_zeroesArray;
    struct CGSize _bufferSize;
    _Bool _isValid;
    TSDGLTextureInfo *_edgeDistanceFieldTextureInfo;
    TSDGLTextureInfo *_traceTextureInfo;
    TSDGLShader *_shader;
    struct CGPoint _randomStrokePoint;
}

+ (void)didEndUsingShaders;
+ (void)willBeginUsingShaders;
@property(readonly, nonatomic) struct CGPoint randomStrokePoint; // @synthesize randomStrokePoint=_randomStrokePoint;
@property(readonly, nonatomic) TSDGLShader *shader; // @synthesize shader=_shader;
@property(readonly, nonatomic) TSDGLTextureInfo *traceTextureInfo; // @synthesize traceTextureInfo=_traceTextureInfo;
@property(readonly, nonatomic) TSDGLTextureInfo *edgeDistanceFieldTextureInfo; // @synthesize edgeDistanceFieldTextureInfo=_edgeDistanceFieldTextureInfo;
@property(readonly, nonatomic) _Bool isValid; // @synthesize isValid=_isValid;
- (void)p_addNearbyPixelsToArray:(struct __CFArray *)arg1 pixel:(struct CGPoint)arg2 edgeDataBuffer:(float *)arg3 dataBuffer:(char *)arg4 tempDataBuffer:(char *)arg5 localMaximumLookupBuffer:(_Bool *)arg6 bufferSize:(struct CGSize)arg7;
- (_Bool)p_generateTraceTextureInfoWithStrokeWidth:(double)arg1 clockwise:(_Bool)arg2;
- (void)p_fillFloatBuffer:(float *)arg1 withRGBAData:(char *)arg2 bufferSize:(struct CGSize)arg3;
- (id)p_houghTransformWithZeroes:(struct __CFArray *)arg1 bufferSize:(struct CGSize)arg2;
- (struct CGPoint)p_normalizedPointInTexturedRectangleFrameFromPoint:(struct CGPoint)arg1 inBufferSize:(struct CGSize)arg2;
@property(readonly, nonatomic) NSArray *strokeLineSegment;
- (void)setupShaderWithPercent:(double)arg1 MVPMatrix:(struct CATransform3D)arg2 opacity:(double)arg3 color:(CDStruct_818bb265)arg4 strokeFadeHardnessLeading:(double)arg5 strokeFadeHardnessTrailing:(double)arg6;
- (void)teardown;
- (id)description;
- (void)dealloc;
- (id)initWithTR:(id)arg1 strokeWidth:(double)arg2 downsampleScale:(double)arg3 clockwise:(_Bool)arg4 GLState:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSDReplaceDeletePrototypeChange : NSObject <TSDPrototypeChange>
{
    _Bool mPrototypeIsBeingReplaced;
    _Bool mPrototypeIsBeingDeleted;
    id mReplacement;
    id mPrototype;
}

@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
@property(readonly, retain) id replacement; // @synthesize replacement=mReplacement;
@property(readonly) _Bool prototypeIsBeingDeleted; // @synthesize prototypeIsBeingDeleted=mPrototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced; // @synthesize prototypeIsBeingReplaced=mPrototypeIsBeingReplaced;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
- (id)changedPropertySet;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initDeletePrototypeChangeForPrototype:(id)arg1 replacement:(id)arg2;
- (id)initReplacePrototypeChangeForPrototype:(id)arg1 toReplacement:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDModifyPrototypeChange : NSObject <TSDPrototypeChange>
{
    id mPrototype;
    TSSMutablePropertySet *mChangedPropertySet;
    TSSPropertyMap *mChangedPropertyMapBeforeChange;
    TSSPropertyMap *mChangedPropertyMapAfterChange;
    TSDPropertySourceForModifyPrototypeChange *mPropertySourceBeforeChange;
    TSDPropertySourceForModifyPrototypeChange *mPropertySourceAfterChange;
    TSSMutablePropertySet *mPropertiesWithOldValuesRecordedButNotNewValues;
}

@property(readonly, retain) TSSMutablePropertySet *i_propertiesWithOldValuesRecordedButNotNewValues; // @synthesize i_propertiesWithOldValuesRecordedButNotNewValues=mPropertiesWithOldValuesRecordedButNotNewValues;
@property(readonly, retain) TSSPropertyMap *changedPropertyMapAfterChange; // @synthesize changedPropertyMapAfterChange=mChangedPropertyMapAfterChange;
@property(readonly, retain) TSSPropertyMap *changedPropertyMapBeforeChange; // @synthesize changedPropertyMapBeforeChange=mChangedPropertyMapBeforeChange;
@property(readonly, retain) TSSMutablePropertySet *changedPropertySet; // @synthesize changedPropertySet=mChangedPropertySet;
@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced;
@property(readonly) _Bool prototypeIsBeingModified;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initModifyPrototypeChangeForPrototype:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDNoChangePrototypeChange : NSObject <TSDPrototypeChange>
{
    id mPrototype;
}

@property(readonly, retain) id prototype; // @synthesize prototype=mPrototype;
- (_Bool)propertiesAreChanging:(id)arg1;
- (_Bool)propertyIsChanging:(int)arg1;
@property(readonly, retain) id <TSSPropertySource> propertiesAfterChange;
@property(readonly, retain) id <TSSPropertySource> propertiesBeforeChange;
@property(readonly, retain) id replacement;
- (id)changedPropertySet;
@property(readonly) _Bool prototypeIsBeingDeleted;
@property(readonly) _Bool prototypeIsBeingReplaced;
@property(readonly) _Bool prototypeIsBeingModified;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initNoChangePrototypeChangeForPrototype:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDPropertySourceForModifyPrototypeChange : NSObject <TSSPropertySource>
{
    TSDModifyPrototypeChange *mChange;
    _Bool mAfterChange;
}

- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (id)p_propertyMap;
- (id)initWithPrototypeChange:(id)arg1 afterChange:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDMediaInfo : TSDStyledInfo
{
    struct CGSize mOriginalSize;
    struct {
        unsigned int isPlaceholder:1;
        unsigned int wasMediaReplaced:1;
    } mFlags;
}

@property(nonatomic) struct CGSize originalSize; // @synthesize originalSize=mOriginalSize;
- (id)commandForSettingBoxedValue:(id)arg1 forProperty:(int)arg2;
- (struct CGPoint)centerForReplacingWithNewMedia;
- (void)updateGeometryToReplaceMediaInfo:(id)arg1;
- (void)takePropertiesFromReplacedMediaInfo:(id)arg1;
@property(readonly, nonatomic) struct CGSize rawDataSize;
@property(readonly, nonatomic) NSString *mediaFileType;
@property(readonly, nonatomic) NSString *mediaDisplayName;
- (void)setGeometry:(id)arg1;
@property(nonatomic) _Bool wasMediaReplaced;
@property(nonatomic) _Bool isPlaceholder;
@property(nonatomic) unsigned int flags;
@property(readonly, nonatomic) struct CGSize defaultOriginalSize;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDMediaRep : TSDStyledRep
{
    _Bool mIsZooming;
    CALayer *mTapToReplaceLayer;
    CAShapeLayer *mMaskLayer;
    CAShapeLayer *mStrokeLayer;
    CALayer *mFrameMaskLayer;
    TSDFrameRep *mFrameRep;
    struct CGRect mLastPictureFrameLayerRect;
}

- (void)p_updateTapToReplaceLayerPosition;
- (struct CGPoint)p_scaledPositionOfImageReplaceKnob;
- (struct CGSize)p_replaceButtonSize;
- (void)p_addLayerForReplaceButtonToArray:(id)arg1;
- (id)p_tapToReplaceLayer;
- (_Bool)replaceButtonContainsPoint:(struct CGPoint)arg1;
- (id)currentReplaceButtonHighlightedImage;
- (id)currentReplaceButtonImage;
- (id)visibleMediaReplaceButtonLayer;
@property(readonly, nonatomic) _Bool shouldShowMediaReplaceUI;
- (_Bool)shouldAllowReplacementFromPaste;
- (_Bool)shouldAllowReplacementFromDrop;
- (_Bool)isPlaceholder;
- (_Bool)canResetMediaSize;
- (id)commandToResetMediaToInsertedSize;
- (id)commandToResetMediaToRawPixelSize;
- (id)commandToResetToSize:(struct CGSize)arg1;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (void)didEndZooming;
- (void)willBeginZooming;
- (void)processChangedProperty:(int)arg1;
@property(readonly, nonatomic) TSDMediaLayout *mediaLayout;
@property(readonly, nonatomic) TSDMediaInfo *mediaInfo;
- (void)dealloc;
- (_Bool)i_shouldRenderStroke:(id)arg1;
- (void)i_updateFrameRep;

@end

__attribute__((visibility("hidden")))
@interface TSDMediaLayout : TSDStyledLayout
{
    struct CGRect mCachedAlignmentFrame;
    struct {
        unsigned int alignmentFrame:1;
    } mMediaInvalidFlags;
    TSDMutableStroke *mDynamicStroke;
    _Bool mShouldRenderFrameStroke;
    struct CGRect mBoundsForStandardKnobs;
}

- (void)invalidateAlignmentFrame;
- (struct CGRect)alignmentFrameInRoot;
- (struct CGRect)alignmentFrame;
- (struct CGRect)computeAlignmentFrameInRoot:(_Bool)arg1;
- (void)setGeometry:(id)arg1;
- (void)dynamicStrokeWidthChangeDidEnd;
- (void)dynamicStrokeWidthUpdateToValue:(double)arg1;
- (void)dynamicStrokeWidthChangeDidBegin;
- (id)stroke;
- (_Bool)isStrokeBeingManipulated;
- (id)mediaInfo;
- (id)initWithInfo:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (_Bool)supportsRotation;
@property(nonatomic) _Bool shouldRenderFrameStroke;
@property(nonatomic) struct CGRect boundsForStandardKnobs;

@end

__attribute__((visibility("hidden")))
@interface TSDGLBloomEffect : NSObject
{
    struct CGSize _effectSize;
    struct CGSize _blurBufferSize;
    TSDGLFrameBuffer *_colorFramebuffer;
    TSDGLFrameBuffer *_blurFramebuffer;
    TSDGLDataBuffer *_dataBuffer;
    TSDGLDataBuffer *_blurTransferDataBuffer;
    TSDGLDataBuffer *_blurDataBuffer;
    TSDGLShader *_blurHorizontalShader;
    TSDGLShader *_blurVerticalShader;
    TSDGLShader *_bloomShader;
    TSDGLShader *_fboTransferShader;
    int _oldViewportRect[4];
    _Bool _oldViewportRectInitialized;
}

- (void)drawBloomEffectWithMVPMatrix:(struct CATransform3D)arg1 bloomAmount:(double)arg2 currentGLFramebuffer:(int)arg3 GLState:(id)arg4;
- (void)p_blurColorBufferWithPreviousFramebuffer:(int)arg1 GLState:(id)arg2;
- (void)unbindFramebufferAndBindGLFramebuffer:(int)arg1;
- (void)bindFramebuffer;
- (void)p_setupBuffers;
- (void)p_setupShaders;
- (void)teardown;
- (void)dealloc;
- (id)initWithEffectSize:(struct CGSize)arg1 blurScale:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDDrawableComment : NSObject <TSDAnnotationHosting, TSDCommentStorageDelegate>
{
    TSDDrawableInfo *mParent;
    TSDCommentStorage *mStorage;
}

@property(nonatomic) TSDDrawableInfo *parent; // @synthesize parent=mParent;
- (void)commentStorageTextDidChange:(id)arg1;
- (void)commitText:(id)arg1;
- (id)commandForDeletingComment;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@property(readonly, nonatomic) NSDate *date;
- (void)setAuthor:(id)arg1;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) id <TSKModel> hostingModel;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(copy, nonatomic) TSDCommentStorage *storage;
- (Class)editorClass;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (id)initWithParent:(id)arg1 storage:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSDQuicklookPersistenceAdditions : NSObject
{
}

+ (id)imageFillFromColorFill:(id)arg1 objContext:(id)arg2;
+ (id)imageDataFromCGColor:(struct CGColor *)arg1 objContext:(id)arg2;
+ (struct CGSize)imageColorSize;

@end

__attribute__((visibility("hidden")))
@interface TSDTextureContext : NSObject <NSCopying>
{
    id <TSDAnimationSession> _session;
    unsigned int _isMagicMove:1;
    unsigned int _shouldAddFinal:1;
    unsigned int _shouldAddMasks:1;
    unsigned int _shouldAddReversedFinal:1;
    unsigned int _shouldAddMagicMoveObjectOnly:1;
    unsigned int _shouldNotAddContainedReps:1;
    unsigned int _shouldNotAddShapeAttributes:1;
    unsigned int _shouldNotAddText:1;
    unsigned int _shouldNotCacheTexture:1;
    unsigned int _shouldSeparateReflection:1;
    unsigned int _shouldSeparateShadow:1;
    unsigned int _shouldSeparateStroke:1;
    unsigned int _shouldSeparateText:1;
    unsigned int _shouldIgnoreScaleInSourceImage:1;
    unsigned int _shouldDistortToFit:1;
    unsigned int _shouldForceTextureGeneration:1;
    _Bool _shouldAddNoShapeAttributes;
}

+ (id)contextWithTextureContext:(id)arg1;
+ (id)contextWithSession:(id)arg1;
+ (id)context;
@property(nonatomic) _Bool shouldIgnoreScaleInSourceImage; // @synthesize shouldIgnoreScaleInSourceImage=_shouldIgnoreScaleInSourceImage;
@property(nonatomic) _Bool shouldForceTextureGeneration; // @synthesize shouldForceTextureGeneration=_shouldForceTextureGeneration;
@property(nonatomic) _Bool shouldSeparateText; // @synthesize shouldSeparateText=_shouldSeparateText;
@property(nonatomic) _Bool shouldSeparateStroke; // @synthesize shouldSeparateStroke=_shouldSeparateStroke;
@property(nonatomic) _Bool shouldSeparateShadow; // @synthesize shouldSeparateShadow=_shouldSeparateShadow;
@property(nonatomic) _Bool shouldSeparateReflection; // @synthesize shouldSeparateReflection=_shouldSeparateReflection;
@property(nonatomic) _Bool shouldNotCacheTexture; // @synthesize shouldNotCacheTexture=_shouldNotCacheTexture;
@property(nonatomic) _Bool shouldNotAddText; // @synthesize shouldNotAddText=_shouldNotAddText;
@property(nonatomic) _Bool shouldNotAddShapeAttributes; // @synthesize shouldNotAddShapeAttributes=_shouldAddNoShapeAttributes;
@property(nonatomic) _Bool shouldNotAddContainedReps; // @synthesize shouldNotAddContainedReps=_shouldNotAddContainedReps;
@property(nonatomic) _Bool shouldDistortToFit; // @synthesize shouldDistortToFit=_shouldDistortToFit;
@property(nonatomic) _Bool shouldAddReversedFinal; // @synthesize shouldAddReversedFinal=_shouldAddReversedFinal;
@property(nonatomic) _Bool shouldAddMasks; // @synthesize shouldAddMasks=_shouldAddMasks;
@property(nonatomic) _Bool shouldAddMagicMoveObjectOnly; // @synthesize shouldAddMagicMoveObjectOnly=_shouldAddMagicMoveObjectOnly;
@property(nonatomic) _Bool shouldAddFinal; // @synthesize shouldAddFinal=_shouldAddFinal;
@property(nonatomic) _Bool isMagicMove; // @synthesize isMagicMove=_isMagicMove;
@property(nonatomic) id <TSDAnimationSession> session; // @synthesize session=_session;
- (void)reset;
- (unsigned long long)hash;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSDMovieTimePropertyTracker : NSObject
{
    TSDMovieRep *mMovieRep;
    int mTimeProperty;
    double mRequestedTime;
    double mTolerance;
    double mPreciseTime;
    unsigned long long mPendingTimeChangeRequestCount;
    CDUnknownBlockType mCommitCompletionHandler;
    AVAssetImageGenerator *mMovieAssetImageGenerator;
    _Bool mChangesPosterTime;
    _Bool mDynamicVisibleTimeChangeDidBegin;
    _Bool mDidCancel;
}

@property(readonly, nonatomic) double preciseTime; // @synthesize preciseTime=mPreciseTime;
@property(nonatomic) double tolerance; // @synthesize tolerance=mTolerance;
@property(nonatomic) double requestedTime; // @synthesize requestedTime=mRequestedTime;
@property(readonly, nonatomic) _Bool changesPosterTime; // @synthesize changesPosterTime=mChangesPosterTime;
- (void)p_stopPreviewingTimeChanges;
- (void)p_startPreviewingTimeChangesIfNeeded;
- (void)cancel;
- (id)p_commandForCommittingTimeProperty:(int)arg1;
- (void)p_completeChangesWithImageData:(id)arg1 commandForCommittingTime:(id)arg2 error:(id)arg3;
- (void)p_commitChanges;
- (void)commitChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)p_updatePreciseTime;
- (void)dealloc;
- (id)init;
- (id)initWithMovieRep:(id)arg1 timeProperty:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSDImageAdjuster : NSObject
{
    TSDImageAdjustments *mImageAdjustments;
}

- (struct CGImage *)p_newImageFromCIImage:(id)arg1 underlyingImage:(struct CGImage *)arg2;
- (struct CGImage *)newFilteredImageForImage:(struct CGImage *)arg1 enhancedImage:(struct CGImage **)arg2;
- (void)dealloc;
- (id)initWithImageAdjustments:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSDImageAdjustments : NSObject <NSCopying, NSMutableCopying, TSDMixing>
{
    double mExposure;
    double mSaturation;
    double mContrast;
    double mHighlights;
    double mShadows;
    double mSharpness;
    double mDenoise;
    double mTemperature;
    double mTint;
    double mBottomLevel;
    double mTopLevel;
    double mGamma;
    _Bool mEnhance;
    _Bool mRepresentsSageAdjustments;
}

- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)imageAdjustmentsWithoutEnhance;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) _Bool representsSageAdjustments;
@property(readonly, nonatomic) _Bool enhance;
@property(readonly, nonatomic) double gamma;
@property(readonly, nonatomic) double topLevel;
@property(readonly, nonatomic) double bottomLevel;
@property(readonly, nonatomic) double tint;
@property(readonly, nonatomic) double temperature;
@property(readonly, nonatomic) double denoise;
@property(readonly, nonatomic) double sharpness;
@property(readonly, nonatomic) double shadows;
@property(readonly, nonatomic) double highlights;
@property(readonly, nonatomic) double contrast;
@property(readonly, nonatomic) double saturation;
@property(readonly, nonatomic) double exposure;
- (id)init;
- (void)saveToArchive:(struct ImageAdjustmentsArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ImageAdjustmentsArchive *)arg1 unarchiver:(id)arg2;
- (void)i_initFromDefaultArchive;

@end

__attribute__((visibility("hidden")))
@interface TSDMutableImageAdjustments : TSDImageAdjustments
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) _Bool representsSageAdjustments;
@property(nonatomic) _Bool enhance;
@property(nonatomic) double gamma;
@property(nonatomic) double topLevel;
@property(nonatomic) double bottomLevel;
@property(nonatomic) double tint;
@property(nonatomic) double temperature;
@property(nonatomic) double denoise;
@property(nonatomic) double sharpness;
@property(nonatomic) double shadows;
@property(nonatomic) double highlights;
@property(nonatomic) double contrast;
@property(nonatomic) double saturation;
@property(nonatomic) double exposure;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandController : NSObject
{
    TSKDocumentRoot *_documentRoot;
    NSMutableArray *_commandQueue;
    TSKCommandGroup *_currentGroup;
    unsigned long long _currentGroupOpenCount;
    _Bool _isAutomaticGroupOpen;
    _Bool _automaticGroupNeedsClose;
    _Bool _isClosingAutomaticGroup;
    NSMutableArray *_automaticGroupCloseHandlers;
    unsigned long long _indexOfGroupThatSetCurrentSelectionBehavior;
    TSKCommandSelectionBehavior *_currentSelectionBehavior;
    NSMutableIndexSet *_progressiveEnqueuingEnabledIndexes;
    TSKChangeGroup *_changeGroup;
    TSKCommand *_executingCommand;
    TSKCommandGroup *_committedLastChanceCommands;
    _Bool _isInLastChanceWrite;
    _Bool _isUndoing;
    _Bool _isRedoing;
    TSKCommandHistory *_historyOverride;
    NSMutableArray *_historyOverrides;
    TSKCommandSelectionBehaviorHistory *_selectionBehaviorHistoryOverride;
    unsigned long long _localEditingCount;
    unsigned long long _localEditingMinUndoCount;
    _Bool _localEditingCanRedo;
    _Bool _processingChanges;
    unsigned long long _enableUndoRedoCount;
}

+ (_Bool)executingInCommandCommitPhase;
@property(readonly, nonatomic, getter=isAutomaticGroupingEnabled) _Bool automaticGroupingEnabled; // @synthesize automaticGroupingEnabled=_isAutomaticGroupOpen;
@property(readonly) TSKCommandGroup *currentGroup; // @synthesize currentGroup=_currentGroup;
- (void)p_completeUndoPendingPreflightCommand;
- (void)p_undoPendingPreflightCommand;
- (void)rejectPendingPreflightCommand;
@property(readonly) TSKAccessController *accessController;
@property(readonly) TSKDocumentRoot *documentRoot;
- (_Bool)processingChanges;
- (void)p_postAsyncPhaseChanges:(id)arg1;
- (void)p_postSyncPhaseChanges:(id)arg1;
- (void)p_postChanges:(id)arg1 forSyncPhase:(_Bool)arg2;
- (void)endLocalEditing;
- (void)beginLocalEditing;
- (void)endFieldEditing;
- (_Bool)isInsideModalEditingSession;
- (void)beginFieldEditing;
- (void)rejectMark;
- (void)acceptMark;
- (void)mark;
- (void)protected_performIndirectCommand:(id)arg1 fromCommand:(id)arg2;
- (void)protected_commitLastChanceCommand:(id)arg1;
- (void)protected_lastChanceWrite;
- (void)protected_willCommitCommands:(id)arg1;
- (void)p_completePostingCollectedChanges;
- (void)p_writeWhileCollectingChangesForCommandPhase:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)p_redoCommandQueueItem:(id)arg1;
- (void)p_performRedoForCommandQueueItem:(id)arg1;
- (void)redo;
- (_Bool)canRedo;
- (unsigned long long)p_redoCount;
- (void)p_completeUndoRedoForCommandQueueItem:(id)arg1;
- (void)p_undoCommandQueueItem:(id)arg1;
- (void)p_performUndoForCommandQueueItem:(id)arg1;
- (void)undoNestedGroup;
- (void)undo;
- (void)disableUndoRedo;
- (void)enableUndoRedo;
- (_Bool)canUndo;
- (unsigned long long)p_undoCount;
- (id)redoActionString;
- (id)undoActionString;
- (void)p_completeCommitForCommandQueueItem:(id)arg1 shouldAddToHistory:(id)arg2;
- (_Bool)isRedoing;
- (_Bool)isUndoing;
- (_Bool)canCoalesce;
- (id)executingCommand;
- (void)p_commitCommandQueueItem:(id)arg1;
- (_Bool)p_processCommandQueueItem:(id)arg1;
- (void)p_performCommitForCommandQueueItem:(id)arg1;
- (void)p_serviceCommandQueue;
- (void)p_enqueueCommand:(id)arg1 phase:(int)arg2 withSelectionBehavior:(id)arg3;
- (void)p_restoreUndoRedoState:(id)arg1;
- (void)enqueueCommand:(id)arg1 withSelectionBehavior:(id)arg2;
- (void)enqueueCommand:(id)arg1;
- (void)p_addSelectionBehavior:(id)arg1;
- (void)p_closeAutomaticGroupIfAppropriate;
- (void)forceCloseAutomaticGroup;
- (void)enableAutomaticGroupingUntilNextEventWithCloseHandler:(CDUnknownBlockType)arg1;
- (void)p_completeCommitForRemainingCommandsInGroup:(id)arg1;
- (void)p_commitRemainingCommandsInGroup:(id)arg1;
- (_Bool)p_willCommitRemainingCommandsInGroup:(id)arg1;
- (void)p_performCommitForRemainingCommandsInCurrentGroup;
@property(readonly, nonatomic, getter=isProgressiveEnqueuingInCurrentGroupEnabled) _Bool progressiveEnqueuingInCurrentGroupEnabled;
- (void)p_enableProgressiveEnqueuingInGroupAtIndex:(unsigned long long)arg1;
- (void)enableProgressiveEnqueuingInCurrentGroup;
@property(readonly) long long groupingLevel;
- (void)closeGroup;
- (void)closeGroupWithSelectionBehavior:(id)arg1;
- (void)p_openGroupAtIndex:(unsigned long long)arg1;
- (void)openGroupWithSelectionBehavior:(id)arg1;
- (void)openGroup;
@property(readonly, nonatomic) TSKCommandSelectionBehaviorHistory *p_selectionBehaviorHistory;
@property(readonly, nonatomic) TSKCommandHistory *p_history;
- (void)p_postHistoryChangedNotificationDueToFieldEditing:(_Bool)arg1;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandControllerQueueItem : NSObject
{
    TSKCommand *_command;
    int _phase;
    TSKCommandSelectionBehavior *_selectionBehavior;
}

@property(readonly, nonatomic) TSKCommandSelectionBehavior *selectionBehavior; // @synthesize selectionBehavior=_selectionBehavior;
@property(readonly, nonatomic) int phase; // @synthesize phase=_phase;
@property(readonly, nonatomic) TSKCommand *command; // @synthesize command=_command;
- (void)dealloc;
- (id)initWithCommand:(id)arg1 phase:(int)arg2 selectionBehavior:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSKApplicationDelegate : NSObject <TSKApplicationDelegate>
{
    id <TSKCompatibilityDelegate> _compatibilityDelegate;
}

+ (id)documentDirectoryPath;
+ (id)sharedDelegate;
+ (void)setDelegate:(id)arg1;
+ (id)platform_sharedDelegate;
@property(retain, nonatomic) id <TSKCompatibilityDelegate> compatibilityDelegate; // @synthesize compatibilityDelegate=_compatibilityDelegate;
@property(readonly, getter=isInBackground) _Bool inBackground;
@property(readonly, getter=isActivating) _Bool activating;
- (_Bool)shouldGenerateGuidesForOffscreenLayouts;
@property(readonly, nonatomic) _Bool performanceModeEnabled;
@property(readonly, nonatomic) _Bool designModeEnabled;
- (id)defaultHyperlinkURL;
- (_Bool)openURL:(id)arg1;
- (id)invalidURLSchemes;
- (id)appChartPropertyOverrides;
- (id)previewImageForType:(id)arg1;
- (_Bool)shouldValidateMasterLayoutWhileInsertingRows;
- (_Bool)supportsScrollingInPhoneCommentUI;
- (_Bool)supportsRTL;
- (_Bool)shouldRenderCurvedShadow;
- (_Bool)shouldRenderContactShadow;
- (struct CGRect)applicationToolbarFrame;
@property(readonly, nonatomic) _Bool isCanvasFullScreen;
@property(readonly, nonatomic) _Bool centerOnInitialSelection;
- (id)createCompatibilityDelegate;
@property(readonly, nonatomic) NSString *templateTypeDisplayName;
@property(readonly, nonatomic) NSString *documentTypeDisplayName;
@property(readonly, nonatomic) NSString *applicationName;
- (id)init;
@property(readonly, nonatomic) _Bool textInspectorShowsMoreSubpane;
@property(readonly, nonatomic) _Bool tableCellInspectorShowsNaturalAlignment;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsRepeatHeaderRowsSwitch;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsFreezeHeaderColumnsSwitch;
@property(readonly, nonatomic) _Bool tableHeaderInspectorShowsFreezeHeaderRowsSwitch;

@end

__attribute__((visibility("hidden")))
@interface TSKThreadDispatcher : NSObject
{
}

+ (id)sharedInstance;
- (id)p_dispatchQueue;
- (void)dispatchSelector:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
- (void)dispatch:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKLowPriorityThreadDispatcher : TSKThreadDispatcher
{
    NSObject<OS_dispatch_queue> *_queue;
    int _suspendCount;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedLowPriorityDispatcher;
+ (id)_singletonAlloc;
- (id)p_dispatchQueue;
- (void)resume;
- (void)suspend;
@property(readonly, getter=isSuspended) _Bool suspended;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSKAccessController : NSObject
{
    struct _opaque_pthread_rwlock_t _rwLock;
    _Bool _secondaryThreadWriting;
    NSCondition *_cond;
    NSMutableDictionary *_signalIdentifiers;
    NSMutableDictionary *_waitIdentifiers;
    struct __CFRunLoopSource *_mainThreadPingSource;
    NSMutableArray *_pendingMainThreadInvocations;
    struct _TSKThreadInfo _readerInfo[64];
    unsigned int _readerCount;
    NSMutableArray *_writerQueue;
    struct _TSKThreadTicketInfo _ticketInfo[64];
    unsigned int _ticketCount;
    _Bool _writeHeld;
    _Bool _writeBlockedMainThread;
    TSUWeakReference *_delegate;
}

- (_Bool)currentThreadHasWriteLock;
- (void)p_signalThread:(id)arg1;
- (_Bool)p_waitWithCondition:(id)arg1 untilDate:(id)arg2;
- (void)p_flushPendingMainThreadBlocksQueueAcquiringLock:(_Bool)arg1;
- (void)p_performReadOnMainThread:(id)arg1;
- (void)p_scheduleMainThreadRead:(id)arg1;
- (void)p_dequeueWrite;
- (void)p_enqueueWriteAndBlock;
- (id)p_threadIdentifier;
- (void)p_writeUnlockAndPerformWithMainThreadBlocked:(CDUnknownBlockType)arg1;
- (void)p_writeUnlock;
- (void)p_writeLockAndBlockMainThread:(_Bool)arg1;
- (void)p_asyncPerformSelectorOnMainThread:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)p_blockMainThreadForWrite;
- (void)p_readUnlockReleasingRealLock:(_Bool)arg1;
- (void)p_readUnlock;
- (_Bool)hasWrite;
- (_Bool)hasRead;
- (_Bool)p_hasWrite;
- (_Bool)p_hasRead;
- (void)p_readLockTakingRealLock:(_Bool)arg1;
- (void)p_readLock;
- (void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void *)arg5 passReadResultToMainThreadRead:(_Bool)arg6;
- (void)performRead:(SEL)arg1 thenWrite:(SEL)arg2 thenReadOnMainThread:(SEL)arg3 withTarget:(id)arg4 argument:(void *)arg5;
- (void)performRead:(SEL)arg1 thenReadOnMainThread:(SEL)arg2 withTarget:(id)arg3 argument:(void *)arg4;
- (void)performWrite:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)performWrite:(CDUnknownBlockType)arg1 blockMainThread:(_Bool)arg2;
- (void)performWrite:(CDUnknownBlockType)arg1;
- (void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3 argument2:(void *)arg4;
- (void)performRead:(SEL)arg1 withTarget:(id)arg2 argument:(void *)arg3;
- (void)performReadWithTicket:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)performReadGrantingTicket:(CDUnknownBlockType)arg1;
- (void)performRead:(CDUnknownBlockType)arg1;
- (void)spinMainThreadRunLoopUntil:(SEL)arg1 onTarget:(id)arg2;
- (void)signalIdentifier:(id)arg1;
- (_Bool)waitOnIdentifier:(id)arg1 untilDate:(id)arg2 releaseReadWhileWaiting:(_Bool)arg3;
- (void)waitOnIdentifier:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKACReadArguments : NSObject
{
    SEL _selector;
    id _target;
    void *_argument;
    id _argument2;
}

@property(readonly, nonatomic) id argument2; // @synthesize argument2=_argument2;
@property(readonly, nonatomic) void *argument; // @synthesize argument=_argument;
@property(readonly, nonatomic) id target; // @synthesize target=_target;
@property(readonly, nonatomic) SEL selector; // @synthesize selector=_selector;
- (void)dealloc;
- (id)initWithSelector:(SEL)arg1 target:(id)arg2 argument:(void *)arg3 argument2:(id)arg4;
- (id)initWithSelector:(SEL)arg1 target:(id)arg2 argument:(void *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSKAnimatedGIFFrame : NSObject
{
    struct CGImage *mImage;
    double mTime;
}

@property(readonly, nonatomic) struct CGImage *image; // @synthesize image=mImage;
@property(readonly, nonatomic) double time; // @synthesize time=mTime;
- (id)description;
- (void)dealloc;
- (id)initWithCGImage:(struct CGImage *)arg1 time:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKAnimatedGIFController : NSObject <TSKMediaPlayerController>
{
    id <TSKMediaPlayerControllerDelegate> mDelegate;
    struct CGImageSource *mSource;
    NSArray *mFrames;
    NSMutableSet *mLayers;
    _Bool mPlaying;
    double mLastDisplayUpdateTime;
    unsigned long long mDisplayLinkCounter;
    double mAbsoluteCurrentTime;
    float mRate;
    float mRateBeforeScrubbing;
    unsigned long long mScrubbingCount;
    double mStartTime;
    double mEndTime;
    float mVolume;
    long long mRepeatMode;
    CADisplayLink *mDisplayLink;
    _Bool fastReversing;
    _Bool fastForwarding;
}

@property(nonatomic, getter=isFastForwarding) _Bool fastForwarding; // @synthesize fastForwarding;
@property(nonatomic, getter=isFastReversing) _Bool fastReversing; // @synthesize fastReversing;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=mRepeatMode;
@property(nonatomic) double endTime; // @synthesize endTime=mEndTime;
@property(nonatomic) double startTime; // @synthesize startTime=mStartTime;
@property(nonatomic) double lastDisplayUpdateTime; // @synthesize lastDisplayUpdateTime=mLastDisplayUpdateTime;
@property(nonatomic) float volume; // @synthesize volume=mVolume;
@property(readonly, nonatomic) id <TSKMediaPlayerControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(nonatomic) float rate; // @synthesize rate=mRate;
- (void)p_updateLayers;
- (void)p_displayLinkDidTrigger:(id)arg1;
- (void)p_disableDisplayLink;
- (void)p_enableDisplayLink;
- (void)p_getAbsoluteMovieTime:(double *)arg1 shouldStopPlayback:(_Bool *)arg2 shouldReversePlayback:(_Bool *)arg3;
- (void)p_updateDisplayLink;
- (void)p_prepareFrameTimes;
@property(readonly, nonatomic) struct CGImage *imageForCurrentTime;
- (id)newLayer;
- (void)removeLayer:(id)arg1;
- (void)addLayer:(id)arg1;
- (void)removePeriodicTimeObserver:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(CDUnknownBlockType)arg2;
- (struct CGImage *)imageForTime:(double)arg1;
- (void)seekToEnd;
- (void)seekToBeginning;
- (void)seekForwardByOneFrame;
- (void)seekBackwardByOneFrame;
@property(readonly, nonatomic) _Bool canFastForward;
@property(readonly, nonatomic) _Bool canFastReverse;
- (void)endScrubbing;
- (void)cancelPendingSeeks;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
@property(readonly, nonatomic, getter=isScrubbing) _Bool scrubbing;
- (void)beginScrubbing;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double absoluteDuration;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) double absoluteCurrentTime;
- (void)p_setAbsoluteCurrentTime:(double)arg1;
@property(readonly, nonatomic) double currentTime;
@property(nonatomic, getter=isPlaying) _Bool playing;
@property(readonly, nonatomic) _Bool canPlay;
- (void)teardown;
- (void)dealloc;
- (id)initWithData:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKCountedObserver : NSObject
{
    TSUWeakReference *mWeakObserver;
    unsigned long long mCount;
}

- (unsigned long long)decrementCount;
- (unsigned long long)incrementCount;
- (id)observer;
- (void)dealloc;
- (id)initWithObserver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeNotificationInfo : NSObject
{
    TSKCountedObserver *_countedObserver;
    TSKChangeEntry *_entry;
}

@property(readonly, retain) TSKChangeEntry *entry; // @synthesize entry=_entry;
@property(readonly, retain) TSKCountedObserver *countedObserver; // @synthesize countedObserver=_countedObserver;
- (void)dealloc;
- (id)initWithCountedObserver:(id)arg1 changeEntry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeNotifier : NSObject
{
    struct __CFDictionary *mChangeSourceObservers;
    struct __CFDictionary *mChangeSourceOfClassObservers;
}

- (void)asyncProcessChanges:(id)arg1;
- (void)syncProcessChanges:(id)arg1;
- (void)p_processChanges:(id)arg1 asyncCallback:(_Bool)arg2;
- (void)removeObserver:(id)arg1 forChangeSourceOfClass:(Class)arg2;
- (void)addObserver:(id)arg1 forChangeSourceOfClass:(Class)arg2;
- (void)removeObserver:(id)arg1 forChangeSource:(id)arg2;
- (void)addObserver:(id)arg1 forChangeSource:(id)arg2;
- (void)p_removeObserver:(id)arg1 forChangeSource:(id)arg2 isClass:(_Bool)arg3;
- (void)p_addObserver:(id)arg1 forChangeSource:(id)arg2 isClass:(_Bool)arg3;
- (id)p_findCountedObserverForObserver:(id)arg1 inArray:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKTreeNode : TSPObject
{
    NSString *mDisplayName;
    id mObject;
    NSMutableArray *mChildren;
}

- (id)description;
- (id)shallowCopy;
- (void)enumerateAllChildrenWithBlock:(CDUnknownBlockType)arg1;
- (id)childEnumerator;
- (void)removeAllChildren;
- (void)removeChildAtIndex:(unsigned long long)arg1;
- (void)removeChildWithDataObject:(id)arg1;
- (void)removeChildWithName:(id)arg1;
- (void)addNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildWithName:(id)arg1 object:(id)arg2;
- (_Bool)hasChildWithName:(id)arg1;
- (long long)indexOfNodeWithObject:(id)arg1;
- (id)nodeWithObject:(id)arg1;
- (id)nodeAtIndex:(unsigned long long)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
@property(retain, nonatomic) id dataObject;
@property(retain, nonatomic) NSMutableArray *children;
@property(retain, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_Unarchiving : TSKAddedToDocumentContext
{
}

- (_Bool)autoUpdateSmartFields;
- (_Bool)wasUnarchived;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_Importing : TSKAddedToDocumentContext
{
    NSString *mImporterID;
}

- (id)importerID;
- (id)description;
- (id)initWithImporterID:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_ImportingMasterTemplate : TSKAddedToDocumentContext_Importing
{
}

- (_Bool)wasImportedFromMasterTemplate;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_Pasting : TSKAddedToDocumentContext
{
    NSMutableArray *mAddedDrawables;
    struct __CFDictionary *mTableIDMap;
}

- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)wasPasted;
- (id)description;
- (void)setTableIDMap:(struct __CFDictionary *)arg1;
- (struct __CFDictionary *)tableIDMap;
- (id)addedDrawables;
- (void)addDrawable:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_PastingMatchStyle : TSKAddedToDocumentContext_Pasting
{
}

- (_Bool)matchStyle;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_DragCopy : TSKAddedToDocumentContext_Pasting
{
}

- (_Bool)wasDragOperation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_DragMove : TSKAddedToDocumentContext_DragCopy
{
}

- (_Bool)wasDragMoved;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_MoveSection : TSKAddedToDocumentContext_DragMove
{
}

- (_Bool)preserveChangeTracking;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_InsertingPrototype : TSKAddedToDocumentContext
{
}

- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)wasPasted;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_Moving : TSKAddedToDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasMoved;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_Unhiding : TSKAddedToDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasUnhidden;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_UndoDelete : TSKAddedToDocumentContext
{
}

- (_Bool)wasUndoDelete;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_ExportFootnotes : TSKAddedToDocumentContext
{
}

- (_Bool)preserveChangeTracking;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext_SubstorageForChangeTrackingCopy : TSKAddedToDocumentContext
{
}

- (_Bool)changeTrackingSubstorage;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKRemovedFromDocumentContext_Moving : TSKRemovedFromDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasMoved;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKRemovedFromDocumentContext_Hiding : TSKRemovedFromDocumentContext
{
}

- (id)undoContext;
- (_Bool)wasHidden;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSKRemovedFromDocumentContext : NSObject
{
}

+ (id)hidingContext;
+ (id)movingContext;
- (id)undoContext;
- (_Bool)wasHidden;
- (_Bool)wasMoved;

@end

__attribute__((visibility("hidden")))
@interface TSKAddedToDocumentContext : NSObject
{
}

+ (id)changeTrackingSubstorageForCopyContext;
+ (id)exportFootnoteContext;
+ (id)undoDeleteContext;
+ (id)unhidingContext;
+ (id)movingContext;
+ (id)insertingPrototypeContext;
+ (id)dragCopyContext;
+ (id)moveSectionContext;
+ (id)dragMoveContext;
+ (id)pastingMatchStyleContext;
+ (id)pastingContext;
+ (id)importingMasterTemplateContextWithImporterID:(id)arg1;
+ (id)importingContextWithImporterID:(id)arg1;
+ (id)unarchivingContext;
- (id)addedDrawables;
- (void)addDrawable:(id)arg1;
- (void)setTableIDMap:(struct __CFDictionary *)arg1;
- (struct __CFDictionary *)tableIDMap;
- (id)undoContext;
- (_Bool)changeTrackingSubstorage;
- (_Bool)preserveChangeTracking;
- (_Bool)matchStyle;
- (_Bool)syncChanges;
- (_Bool)uniqueBookmarks;
- (_Bool)autoUpdateSmartFields;
- (_Bool)invokeDOLC;
- (_Bool)wasUndoDelete;
- (_Bool)wasUnhidden;
- (_Bool)wasMoved;
- (_Bool)wasDragMoved;
- (_Bool)wasDragOperation;
- (_Bool)wasPasted;
- (_Bool)wasImportedFromMasterTemplate;
- (_Bool)wasImported;
- (id)importerID;
- (_Bool)wasUnarchived;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeEntry : NSObject
{
    id mChangeSource;
    NSMutableArray *mChanges;
}

@property(readonly, nonatomic) NSMutableArray *changes; // @synthesize changes=mChanges;
@property(readonly, nonatomic) id changeSource; // @synthesize changeSource=mChangeSource;
- (void)dealloc;
- (id)initWithChangeSource:(id)arg1 changes:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeGroup : NSObject <NSCopying>
{
    NSMutableArray *mChangesArray;
}

@property(readonly, nonatomic) NSMutableArray *changesArray; // @synthesize changesArray=mChangesArray;
- (void)registerChange:(int)arg1 details:(id)arg2 forChangeSource:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKAnimatedGIFLayer : CALayer
{
    TSKAnimatedGIFController *mController;
}

+ (id)defaultActionForKey:(id)arg1;
- (void)display;
@property(nonatomic) TSKAnimatedGIFController *controller;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeRecord : NSObject
{
    int mKind;
    id mDetails;
}

+ (id)changeRecordWithKind:(int)arg1 details:(id)arg2;
@property(readonly, nonatomic) id details; // @synthesize details=mDetails;
@property(readonly, nonatomic) int kind; // @synthesize kind=mKind;
@property(readonly, nonatomic) _Bool allowedInCommit;
- (void)dealloc;
- (id)initWithKind:(int)arg1 details:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKSearch : NSObject
{
    _Bool _isComplete;
    NSString *_string;
    unsigned long long _options;
    CDUnknownBlockType _hitBlock;
}

@property(nonatomic) _Bool isComplete; // @synthesize isComplete=_isComplete;
@property(copy, nonatomic) CDUnknownBlockType hitBlock; // @synthesize hitBlock=_hitBlock;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void)dealloc;
- (id)initWithString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSKAddAnnotationAuthorCommand : TSKCommand
{
    TSKAnnotationAuthor *mAnnotationAuthor;
    TSKDocumentRoot *mDocumentRoot;
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1 annotationAuthor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandHistory : TSPObject
{
    NSMutableArray *_commands;
    unsigned long long _undoCount;
    unsigned long long _mark;
    NSMutableArray *_markedRedoCommands;
    unsigned long long _undoCountAtUnarchive;
    unsigned long long _removedCommandCountSinceUnarchive;
    unsigned long long _undoCountAtLastSave;
    unsigned long long _removedCommandCountSinceLastSave;
    _Bool _documentEditedSinceLastSave;
    TSKCommand<TSKPreflightCommand> *_pendingPreflightCommand;
    id <TSKCommandHistoryDelegate> _delegate;
}

@property(nonatomic) id <TSKCommandHistoryDelegate> delegate; // @synthesize delegate=_delegate;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (void)documentWasSaved;
- (_Bool)isDocumentEditedSinceLastSave;
- (void)p_removeCommandsOverMaxUndoDepthAfterAddingCommandsWithCount:(unsigned long long)arg1;
- (struct _NSRange)p_rangeOfCommandsOverMaxUndoDepthAfterAddingCommandsWithCount:(unsigned long long)arg1;
- (struct _NSRange)p_rangeOfRedoCommands;
- (void)clear;
- (id)commandsRemovedByAcceptingMarkedCommands;
- (id)rejectMarkedCommands;
- (void)acceptMarkedCommands;
- (void)p_endMark:(_Bool)arg1;
- (void)beginMark;
- (unsigned long long)redoCount;
- (unsigned long long)undoCount;
- (void)replaceLastCommandWithCommand:(id)arg1;
- (void)coalesceWithCommand:(id)arg1;
- (_Bool)canCoalesceWithCommand:(id)arg1;
- (id)redoActionString;
- (id)undoActionString;
- (id)lastCommand;
- (id)popRedo;
- (id)popUndo;
- (id)commandsRemovedByAddingCommand;
- (void)addCommand:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
@property(retain, nonatomic) TSKCommand<TSKPreflightCommand> *pendingPreflightCommand;

@end

__attribute__((visibility("hidden")))
@interface TSKWarning : NSObject
{
    NSString *_message;
    NSDictionary *_userInfo;
    NSSet *_affectedObjects;
    NSString *_localizedLocation;
}

+ (id)warningWithMessage:(id)arg1 affectedObjects:(id)arg2;
+ (id)warningWithMessage:(id)arg1 affectedObject:(id)arg2;
+ (id)warningWithMessage:(id)arg1;
@property(copy, nonatomic) NSString *localizedLocation; // @synthesize localizedLocation=_localizedLocation;
@property(copy, nonatomic) NSSet *affectedObjects; // @synthesize affectedObjects=_affectedObjects;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithMessage:(id)arg1 affectedObjects:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKDocumentRootICloudObserver : NSObject
{
    long long _identifier;
    NSOperationQueue *_operationQueue;
    CDUnknownBlockType _block;
    long long _identifer;
}

@property(readonly, nonatomic) long long identifer; // @synthesize identifer=_identifer;
- (void)invokeWithDocumentRoot:(id)arg1;
- (void)dealloc;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKDocumentRoot : TSPObject <TSKAccessControllerDelegate, TSKModel>
{
    TSKAccessController *_accessController;
    TSKCommandController *_commandController;
    TSKChangeNotifier *_changeNotifier;
    _Bool _isFindActive;
    TSKPasteboardController *_pasteboardController;
    id <TSKUndoRedoState> _undoRedoState;
    TSKAnnotationAuthorStorage *_annotationAuthorStorage;
    NSSet *_filteredAuthors;
    NSMutableArray *_activityLogEntries;
    NSObject<OS_dispatch_queue> *_iCloudTeardownStackQueue;
    NSMutableArray *_iCloudTeardownStack;
    _Bool _isBeingLocalized;
    NSObject<TSKSearchReference> *_activeSearchReference;
    NSDictionary *_searchReferencesToHighlight;
}

+ (Class)commandControllerClass;
@property(retain, nonatomic) NSDictionary *searchReferencesToHighlight; // @synthesize searchReferencesToHighlight=_searchReferencesToHighlight;
@property(retain, nonatomic) NSObject<TSKSearchReference> *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(readonly, nonatomic) _Bool isBeingLocalized; // @synthesize isBeingLocalized=_isBeingLocalized;
@property(retain, nonatomic) NSSet *filteredAuthors; // @synthesize filteredAuthors=_filteredAuthors;
@property(retain, nonatomic) TSKAnnotationAuthorStorage *annotationAuthorStorage; // @synthesize annotationAuthorStorage=_annotationAuthorStorage;
@property(retain, nonatomic) id <TSKUndoRedoState> undoRedoState; // @synthesize undoRedoState=_undoRedoState;
@property(nonatomic, getter=isFindActive) _Bool findActive; // @synthesize findActive=_isFindActive;
@property(retain, nonatomic) TSKPasteboardController *pasteboardController; // @synthesize pasteboardController=_pasteboardController;
@property(readonly, nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=_changeNotifier;
@property(readonly, nonatomic) TSKCommandController *commandController; // @synthesize commandController=_commandController;
@property(readonly, nonatomic) TSKAccessController *accessController; // @synthesize accessController=_accessController;
- (void)gilligan_documentDidRemoveObject:(id)arg1;
- (void)gilligan_documentWillRemoveObject:(id)arg1;
- (void)gilligan_documentWillInsertObject:(id)arg1;
- (void)gilligan_documentDidInsertObject:(id)arg1;
- (void)updateForNonCommandChangesWithWriteLock:(id)arg1;
- (void)willRelinquishReadLock;
- (void)didAcquireReadLock;
@property(readonly, nonatomic) _Bool hasICloudConflict;
- (_Bool)hasICloudTeardownObserver;
- (void)notifyICloudTeardownObservers;
- (void)removeICloudTeardownObserver:(long long)arg1;
- (long long)addObserverForICloudTeardownWithBlock:(CDUnknownBlockType)arg1;
- (id)commandForPropagatingPresetChangeCommand:(id)arg1 alwaysPreserveAppearance:(_Bool)arg2;
- (unsigned long long)nextRootSearchTargetIndexFromIndex:(unsigned long long)arg1 forString:(id)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (void)coalesceChanges:(id)arg1;
@property(readonly, nonatomic) NSString *cachedRedoActionString;
@property(readonly, nonatomic) NSString *cachedUndoActionString;
@property(readonly, nonatomic) unsigned long long cachedRedoCount;
@property(readonly, nonatomic) unsigned long long cachedUndoCount;
- (void)clearCommandHistory;
@property(readonly, nonatomic) _Bool hasCommands;
@property(readonly, nonatomic) TSKCommandSelectionBehaviorHistory *commandSelectionBehaviorHistory;
@property(readonly, nonatomic) TSKCommandHistory *commandHistory;
@property(readonly, nonatomic) TSKDocumentSupport *documentSupport;
- (id)activityLogEntries;
- (id)additionalDocumentPropertiesForWrite;
- (void)saveToArchive:(struct DocumentArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct DocumentArchive *)arg1 unarchiver:(id)arg2;
- (id)modelEnumeratorForObjectsRespondingToSelector:(SEL)arg1;
- (id)modelEnumeratorForObjectsConformingToProtocol:(id)arg1;
- (id)modelEnumeratorForObjectsOfClass:(Class)arg1;
- (id)modelEnumeratorForObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1;
- (id)modelEnumerator;
- (_Bool)documentDisallowsHighlightsOnStorage:(id)arg1;
- (_Bool)shouldShowComments;
- (_Bool)isDirectionRightToLeft;
@property(readonly, nonatomic) NSString *creationLanguage;
@property(readonly, nonatomic) unsigned long long writingDirectionForStorage;
@property(readonly, nonatomic) unsigned long long writingDirection;
- (void)documentDidLoad;
- (void)didSaveWithEncryptionChange;
- (_Bool)documentCacheHasAtMostFileProtection:(id)arg1;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (struct CGImageSource *)newImageSourceForDocumentCachePath:(id)arg1;
- (_Bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (id)dataFromDocumentCachePath:(id)arg1;
@property(readonly, nonatomic) unsigned long long applicationType;
@property(readonly, retain) TSULocale *documentLocale;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (id)UIStateForChart:(id)arg1;
- (Class)thumbnailImagerClass;
@property(readonly, retain) TSPObject *webState;
- (id)createWebStateRoot;
- (void)enumerateStyleClientsUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) TSSStylesheet *stylesheet;
- (void)setThemeForTemplateImport:(id)arg1;
@property(retain, nonatomic) TSSTheme *theme;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKCOIdAddress : TSKCOAddress
{
    NSString *mId;
}

+ (id)addressWithUUIDPath:(id)arg1;
+ (id)addressWithUUID:(id)arg1;
+ (id)idFromIdPath:(id)arg1;
+ (id)addressWithIdPath:(id)arg1;
+ (id)addressWithPath:(id)arg1;
+ (id)addressWithId:(id)arg1;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=mId;
- (id)pathElement;
- (void)dealloc;
- (id)initWithParent:(id)arg1 identifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKSelection : NSObject
{
}

+ (Class)archivedSelectionClass;
- (long long)compare:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKAnnotationAuthorStorage : TSPObject
{
    NSMutableSet *mAuthors;
}

@property(readonly, nonatomic) NSSet *authors; // @synthesize authors=mAuthors;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
- (id)packageLocator;
- (unsigned int)delayedArchivingPriority;
- (_Bool)shouldDelayArchiving;
- (id)description;
- (void)didRemoveAuthorRelationshipFromDocument;
- (void)didAddAuthorRelationshipToDocument;
- (id)nextAuthorColor;
- (id)authorWithName:(id)arg1;
- (void)removeAuthor:(id)arg1;
- (void)p_addAuthor:(id)arg1 isFromDocumentSupport:(_Bool)arg2;
- (void)addAuthor:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSKCommand : TSPObject
{
    TSKCommandContainer *_persistedUndoCollectionContainer;
    TSKCommandContainer *_currentUndoCollectionContainer;
    TSPObject<TSKPersistentUndoRedoState> *_undoRedoState;
    TSKCommandController *_commandController;
}

+ (id)commandFromArrayOfCommands:(id)arg1;
@property(nonatomic) TSKCommandController *commandController; // @synthesize commandController=_commandController;
- (void)dealloc;
- (void)saveToArchive:(struct CommandArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct CommandArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isCommandObject;
- (_Bool)canImplicitlyGroupWithCommand:(id)arg1;
- (void)coalesceWithCommand:(id)arg1;
- (_Bool)canCoalesceWithCommand:(id)arg1;
- (void)performIndirectCommand:(id)arg1;
- (id)stopCollectingUndo;
- (void)beginCollectingUndo;
- (void)registerChange:(int)arg1 details:(id)arg2 forChangeSource:(id)arg3;
- (id)actionString;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (_Bool)shouldRunSynchronously;
- (id)initWithContext:(id)arg1;
@property(retain, nonatomic) TSPObject<TSKPersistentUndoRedoState> *undoRedoState;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandGroup : TSKCommand <TSDPropagatableCommand, TSKInnerCommandsProvider>
{
    NSMutableArray *_commands;
    NSMutableIndexSet *_processResults;
    NSMutableArray *_committedCommands;
    NSString *_actionString;
}

@property(readonly) NSArray *commands; // @synthesize commands=_commands;
- (void)setCommandController:(id)arg1;
- (void)setActionString:(id)arg1;
- (id)actionString;
- (void)redo;
- (void)undo;
- (id)i_removeCommittedCommandAtIndex:(unsigned long long)arg1;
- (id)i_uncommittedCommands;
- (void)i_commitRemainingCommands;
- (void)commit;
- (_Bool)process;
- (_Bool)shouldRunSynchronously;
- (void)i_addCommittedCommand:(id)arg1;
- (void)addCommandsFromArray:(id)arg1;
- (void)addCommand:(id)arg1;
- (void)addCommandIfNotNil:(id)arg1;
- (void)saveToArchive:(struct CommandGroupArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct CommandGroupArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (const struct CommandGroupArchive *)commandGroupArchiveFromUnarchiver:(id)arg1;
@property(readonly) _Bool isEmpty;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)populateChangePropagationMapAfterCommit:(id)arg1;
- (void)populateChangePropagationMapBeforeCommit:(id)arg1;
- (_Bool)modifiesAnyObjectPassingTest:(CDUnknownBlockType)arg1;
- (_Bool)shouldBePropagated;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandContainer : TSPObject <TSKInnerCommandsProvider>
{
    NSMutableArray *mCommands;
}

- (void)redo;
- (void)undo;
- (_Bool)hasCommands;
- (void)addCommand:(id)arg1;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)populateChangePropagationMapAfterCommit:(id)arg1;
- (_Bool)modifiesAnyObjectPassingTest:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKAnnotationAuthor : TSPObject
{
    NSString *mName;
    TSUColor *mColor;
}

+ (id)defaultAuthorName;
+ (id)authorColorNameForIndex:(unsigned long long)arg1;
+ (id)authorColorAppearanceNameForIndex:(unsigned long long)arg1;
+ (id)authorMenuSwatchColorForIndex:(unsigned long long)arg1;
+ (id)authorStorageColorForIndex:(unsigned long long)arg1;
+ (id)authorColorForIndex:(unsigned long long)arg1 forKey:(id)arg2;
+ (unsigned long long)presetColorCount;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)allowsImplicitComponentOwnership;
- (id)componentRootObject;
@property(readonly, nonatomic) _Bool showAuthorComments;
@property(readonly, nonatomic) NSString *menuSwatchColorForAuthor;
@property(readonly, nonatomic) NSString *appearanceColorForAuthor;
@property(readonly, nonatomic) NSString *authorColorName;
@property(readonly, nonatomic) TSUColor *gradientEndColor;
@property(readonly, nonatomic) TSUColor *gradientStartColor;
@property(readonly, nonatomic) TSUColor *sidebarSelectedBorderColor;
@property(readonly, nonatomic) TSUColor *sidebarChangeBarColor;
@property(readonly, nonatomic) TSUColor *sidebarUsernameColor;
@property(readonly, nonatomic) TSUColor *sidebarSelectedColor;
@property(readonly, nonatomic) TSUColor *sidebarHoverColor;
@property(readonly, nonatomic) TSUColor *popoverColor;
@property(readonly, nonatomic) TSUColor *flagFillColor;
@property(readonly, nonatomic) TSUColor *changeAdornmentsColor;
@property(readonly, nonatomic) TSUColor *flagPressedColor;
@property(readonly, nonatomic) TSUColor *flagStrokeColor;
@property(readonly, nonatomic) TSUColor *cellViolatorColor;
@property(readonly, nonatomic) TSUColor *textHighlightColor;
@property(readonly, nonatomic) TSUColor *textMarkupColor;
@property(readonly, nonatomic) TSUColor *popoverAuthorLabelColor;
@property(readonly, nonatomic) TSUColor *popoverButtonTintColor;
- (unsigned long long)p_authorColorIndex;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 name:(id)arg2 color:(id)arg3;
@property(retain, nonatomic) TSUColor *storageColor;
@property(copy, nonatomic) NSString *name;

@end

__attribute__((visibility("hidden")))
@interface TSKAnnotationAuthorTextHighlightColorProvider : NSObject <TSKCGColorProvider>
{
    TSKAnnotationAuthor *mAnnotationAuthor;
}

- (struct CGColor *)cgColor;
- (void)dealloc;
- (id)initWithAnnotationAuthor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKDocumentModelEnumerator : NSEnumerator
{
    _Bool _stop;
    _Bool _filterBeforeAddingChildren;
    id <TSKModel> _root;
    NSMutableArray *_enumeratorStack;
    CDUnknownBlockType _filter;
}

@property(copy, nonatomic) CDUnknownBlockType filter; // @synthesize filter=_filter;
@property(retain, nonatomic) NSMutableArray *enumeratorStack; // @synthesize enumeratorStack=_enumeratorStack;
@property(retain, nonatomic) id <TSKModel> root; // @synthesize root=_root;
@property(nonatomic) _Bool filterBeforeAddingChildren; // @synthesize filterBeforeAddingChildren=_filterBeforeAddingChildren;
- (void)enumerateUsingBlock:(CDUnknownBlockType)arg1;
- (id)nextObject;
- (void)dealloc;
- (id)initWithEnumerator:(id)arg1 filter:(CDUnknownBlockType)arg2;
- (id)initWithRootModelObject:(id)arg1 filter:(CDUnknownBlockType)arg2;
- (void)enumerateReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKReplaceAllCommand : TSKCommand
{
    NSMutableArray *_commands;
    NSString *_findString;
    NSString *_replaceString;
    unsigned long long _options;
    unsigned long long _countOfItemsReplaced;
}

@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(readonly, retain, nonatomic) NSString *replaceString; // @synthesize replaceString=_replaceString;
@property(readonly, retain, nonatomic) NSString *findString; // @synthesize findString=_findString;
@property(nonatomic) unsigned long long countOfItemsReplaced; // @synthesize countOfItemsReplaced=_countOfItemsReplaced;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1 findString:(id)arg2 replaceString:(id)arg3 options:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSKReplaceAllChildCommand : TSKCommand
{
    TSKReplaceAllCommand *_parent;
    unsigned int _countOfItemsReplaced;
}

@property(nonatomic) TSKReplaceAllCommand *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) unsigned int countOfItemsReplaced; // @synthesize countOfItemsReplaced=_countOfItemsReplaced;
@property(readonly, nonatomic) unsigned long long options;
@property(readonly, nonatomic) NSString *replaceString;
@property(readonly, nonatomic) NSString *findString;
- (void)saveToArchive:(struct ReplaceAllChildCommandArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ReplaceAllChildCommandArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithParentCommand:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKPulseAnimationController : TSKHighlightController
{
    id <TSKPulseAnimationControllerProtocol> _delegate;
    _Bool _pulsating;
    _Bool _autohide;
    double _duration;
    double _pulseOffset;
}

@property(nonatomic) double pulseOffset; // @synthesize pulseOffset=_pulseOffset;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool autohide; // @synthesize autohide=_autohide;
@property(nonatomic) _Bool pulsating; // @synthesize pulsating=_pulsating;
- (void)startAnimating;
- (_Bool)drawRoundedRect;
- (void)stop;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)disconnect;
- (void)reset;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKHighlightController : NSObject
{
    CALayer *_imageLayer;
    TSUImage *_image;
    struct CGRect _overallRect;
    struct CGAffineTransform _canvasTransform;
    struct CGAffineTransform _layerTransform;
    CALayer *_containingLayer;
    double _viewScale;
    struct CGPath *_path;
}

@property(retain, nonatomic) TSUImage *image; // @synthesize image=_image;
@property(nonatomic) struct CGPath *path; // @synthesize path=_path;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(readonly, nonatomic) CALayer *layer; // @synthesize layer=_containingLayer;
- (void)setCanvasTransform:(struct CGAffineTransform)arg1 layerTransform:(struct CGAffineTransform)arg2;
@property(nonatomic) struct CGAffineTransform transform;
- (struct CGRect)buildLayersForPath:(struct CGPath *)arg1 withImage:(id)arg2;
- (void)createLayerWithZOrder:(double)arg1 contentsScaleForLayers:(double)arg2;
- (void)hide;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (_Bool)drawRoundedRect;
- (void)reset;
- (void)disconnect;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSKHighlightArrayController : NSObject <TSKPulseAnimationControllerProtocol>
{
    NSMutableArray *_layers;
    NSMutableArray *_controllers;
    double _zOrder;
    id <TSKHighlightArrayControllerProtocol> _delegate;
    _Bool _creatingLayers;
    struct CGAffineTransform _canvasTransform;
    struct CGAffineTransform _layerTransform;
    _Bool _shouldPulsate;
    _Bool _pulsating;
    _Bool _autohide;
    double _viewScale;
}

@property(nonatomic) _Bool autohide; // @synthesize autohide=_autohide;
@property(nonatomic) _Bool pulsating; // @synthesize pulsating=_pulsating;
@property(nonatomic) _Bool shouldPulsate; // @synthesize shouldPulsate=_shouldPulsate;
@property(readonly, nonatomic) NSArray *layers; // @synthesize layers=_layers;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
- (void)setCanvasTransform:(struct CGAffineTransform)arg1 layerTransform:(struct CGAffineTransform)arg2;
@property(nonatomic) struct CGAffineTransform transform;
- (id)buildHighlightsForSearchReferences:(id)arg1 contentsScaleForLayers:(double)arg2;
- (void)reset;
- (void)disconnect;
- (void)pulseAnimationDidStopForPulse:(id)arg1;
- (void)stop;
- (void)startAnimating;
- (void)dealloc;
- (id)initWithZOrder:(double)arg1 delegate:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKRulerUnits : NSObject
{
    int _rulerUnits;
    _Bool _showRulerAsPercentage;
    _Bool _centerRulerOrigin;
    int _preferredPixelUnit;
    NSFormatter *_formatter;
    NSFormatter *_lenientFormatter;
    NSFormatter *_highPrecisionFormatter;
    NSFormatter *_lenientHighPrecisionFormatter;
}

+ (id)formatterForRulerUnits:(int)arg1 decimalPlaces:(int)arg2 trailingZeros:(_Bool)arg3 lenient:(_Bool)arg4;
+ (id)instance;
@property(nonatomic) int preferredPixelUnit; // @synthesize preferredPixelUnit=_preferredPixelUnit;
@property(nonatomic) _Bool centerRulerOrigin; // @synthesize centerRulerOrigin=_centerRulerOrigin;
@property(nonatomic) _Bool showRulerAsPercentage; // @synthesize showRulerAsPercentage=_showRulerAsPercentage;
@property(nonatomic) int rulerUnits; // @synthesize rulerUnits=_rulerUnits;
- (id)localizedCompatibleRulerUnits;
- (id)compatibleRulerUnits;
- (id)formatter:(_Bool)arg1 lenient:(_Bool)arg2;
- (double)convertPointsToRulerUnits:(double)arg1;
- (double)convertRulerUnitsToPoints:(double)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKPicaFormatter : NSFormatter
{
    NSString *mPicaSeparator;
    NSNumber *mMinimum;
    NSNumber *mMaximum;
}

@property(copy, nonatomic) NSNumber *maximum; // @synthesize maximum=mMaximum;
@property(copy, nonatomic) NSNumber *minimum; // @synthesize minimum=mMinimum;
@property(copy, nonatomic) NSString *picaSeparator; // @synthesize picaSeparator=mPicaSeparator;
- (_Bool)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPicaSeparator:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKSetAnnotationAuthorColorCommand : TSKCommand
{
    TSUColor *mColor;
    TSKAnnotationAuthor *mAuthor;
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_do;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithContext:(id)arg1 annotationAuthor:(id)arg2 color:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSKBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSKShuffleMapping : NSObject <NSCopying>
{
    unsigned short mStartIndex;
    unsigned short mEndIndex;
    unsigned short *mMapping;
    _Bool mIsVertical;
    _Bool mIsMoveOperation;
    unsigned short mFirstMovedIndex;
    unsigned short mDestinationIndexForMove;
    unsigned short mNumberOfIndicesMoved;
}

@property(readonly, nonatomic) unsigned short *mapping; // @synthesize mapping=mMapping;
@property(readonly, nonatomic) unsigned short endIndex; // @synthesize endIndex=mEndIndex;
@property(readonly, nonatomic) unsigned short startIndex; // @synthesize startIndex=mStartIndex;
- (void)swapIndex:(unsigned short)arg1 withIndex:(unsigned short)arg2;
- (void)remove:(unsigned short)arg1 indicesAtIndex:(unsigned short)arg2;
- (void)insert:(unsigned short)arg1 indicesAtIndex:(unsigned short)arg2 insertingBefore:(_Bool)arg3;
- (void)enumerateMappingRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)isMove;
- (_Bool)isVertical;
- (unsigned short)reverseMapIndex:(unsigned short)arg1;
- (unsigned short)mapIndex:(unsigned short)arg1;
- (id)copyInverse;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) unsigned short mappingSize; // @dynamic mappingSize;
- (void)saveToArchive:(struct ShuffleMappingArchive *)arg1;
- (id)initWithArchive:(const struct ShuffleMappingArchive *)arg1;
- (void)dealloc;
- (id)initForMovedIndicesStartingAtIndex:(unsigned short)arg1 destinationIndex:(unsigned short)arg2 numberOfIndices:(unsigned short)arg3 vertical:(_Bool)arg4;
- (id)initWithStartIndex:(unsigned short)arg1 endIndex:(unsigned short)arg2;
- (id)initWithStartIndex:(unsigned short)arg1 endIndex:(unsigned short)arg2 mapping:(unsigned short *)arg3;
- (struct)contiguousMappingForRange:(struct)arg1 inTable:(struct __CFUUID *)arg2;
- (CDStruct_0441cfb5)reverseMapCoordinate:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)mapCoordinate:(CDStruct_0441cfb5)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKTintLayer : CAReplicatorLayer
{
    CALayer *_contentsLayer;
}

@property(retain, nonatomic) CALayer *contentsLayer; // @synthesize contentsLayer=_contentsLayer;
- (void)layoutSublayers;
@property struct CGColor *tintColor;
- (void)setNeedsDisplay;
- (void)setContents:(id)arg1;
- (id)contents;

@end

__attribute__((visibility("hidden")))
@interface TSKProgressiveCommandGroup : TSKCommandGroup
{
}

- (void)saveToArchive:(struct ProgressiveCommandGroupArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ProgressiveCommandGroupArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (const struct CommandGroupArchive *)commandGroupArchiveFromUnarchiver:(id)arg1;
- (const struct ProgressiveCommandGroupArchive *)progressiveCommandGroupArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKAVPlayerController : NSObject <TSKMediaPlayerController>
{
    AVPlayer *mPlayer;
    id <TSKMediaPlayerControllerDelegate> mDelegate;
    _Bool mStreaming;
    long long mRepeatMode;
    float mVolume;
    float mRateBeforeScrubbing;
    unsigned long long mScrubbingCount;
    _Bool mCanPlay;
    _Bool mPlaying;
    _Bool mFastReversing;
    _Bool mFastForwarding;
    _Bool mIsObservingStatus;
}

+ (id)keyPathsForValuesAffectingCanFastForward;
+ (id)keyPathsForValuesAffectingCanFastReverse;
+ (id)keyPathsForValuesAffectingRate;
+ (_Bool)automaticallyNotifiesObserversOfRate;
+ (id)keyPathsForValuesAffectingEndTime;
+ (_Bool)automaticallyNotifiesObserversOfEndTime;
+ (id)keyPathsForValuesAffectingStartTime;
+ (_Bool)automaticallyNotifiesObserversOfStartTime;
+ (id)keyPathsForValuesAffectingAbsoluteDuration;
+ (id)keyPathsForValuesAffectingDuration;
@property(nonatomic, getter=isFastForwarding) _Bool fastForwarding; // @synthesize fastForwarding=mFastForwarding;
@property(nonatomic, getter=isFastReversing) _Bool fastReversing; // @synthesize fastReversing=mFastReversing;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=mPlaying;
@property(readonly, nonatomic) _Bool canPlay; // @synthesize canPlay=mCanPlay;
@property(nonatomic) float volume; // @synthesize volume=mVolume;
@property(nonatomic) long long repeatMode; // @synthesize repeatMode=mRepeatMode;
@property(readonly, nonatomic) AVPlayer *player; // @synthesize player=mPlayer;
@property(readonly, nonatomic) id <TSKMediaPlayerControllerDelegate> delegate; // @synthesize delegate=mDelegate;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_playerItemDidJumpTime:(id)arg1;
- (void)p_playbackDidFailWithError:(id)arg1;
- (void)p_playerItemDidPlayToEndTime:(id)arg1;
- (void)playerItemDidPlayToEndTimeAtRate:(float)arg1;
- (void)removePeriodicTimeObserver:(id)arg1;
- (id)addPeriodicTimeObserverForInterval:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)p_closedCaptioningStatusDidChange:(id)arg1;
- (void)p_updateClosedCaptionDisplayEnabled;
- (void)p_stopObservingClosedCaptionDisplayEnabled;
- (void)p_startObservingClosedCaptionDisplayEnabled;
- (_Bool)p_canFastForwardAtCurrentTime;
@property(readonly, nonatomic) _Bool canFastForward;
- (_Bool)p_canFastReverseAtCurrentTime;
@property(readonly, nonatomic) _Bool canFastReverse;
@property(nonatomic) float rate;
- (void)seekToEnd;
- (void)seekToBeginning;
- (void)seekBackwardByOneFrame;
- (void)seekForwardByOneFrame;
- (void)endScrubbing;
- (void)cancelPendingSeeks;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scrubToTime:(double)arg1 withTolerance:(double)arg2;
- (void)beginScrubbing;
@property(readonly, nonatomic, getter=isScrubbing) _Bool scrubbing;
@property(readonly, nonatomic) double remainingTime;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic) double absoluteCurrentTime;
- (void)p_applyVolumeToPlayerItem;
@property(nonatomic) double endTime;
@property(nonatomic) double startTime;
@property(readonly, nonatomic) double absoluteDuration;
@property(readonly, nonatomic) double duration;
- (id)newLayer;
- (void)teardown;
- (void)dealloc;
- (id)init;
- (id)initWithPlayer:(id)arg1 delegate:(id)arg2 streaming:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKMoviePlaybackRegistry : NSObject
{
}

+ (id)sharedMoviePlaybackRegistry;
- (void)objectDidEndMoviePlayback:(id)arg1;
- (void)objectWillBeginMoviePlayback:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKFidgetResolver : NSObject
{
    double _fidgetThreshold;
    id *_values;
    double *_times;
    unsigned long long _head;
}

@property(nonatomic) double fidgetThreshold; // @synthesize fidgetThreshold=_fidgetThreshold;
- (unsigned long long)p_previousValidIndexFromIndex:(unsigned long long)arg1;
- (void)p_advanceHead;
- (void)pushValue:(id)arg1 withTime:(double)arg2;
- (void)pushValue:(id)arg1;
@property(readonly, nonatomic) id nonFidgetValue;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKStarRatingViewRenderer : NSObject
{
}

+ (void)renderRating:(long long)arg1 intoContext:(struct CGContext *)arg2 rect:(struct CGRect)arg3 style:(int)arg4 showDots:(_Bool)arg5 color:(id)arg6;
+ (struct CGPath *)newStarPath:(double)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSKCOAbstractOperation : NSObject <TSKCOOperation>
{
    _Bool mNoop;
}

@property(readonly, nonatomic) _Bool isNoop; // @synthesize isNoop=mNoop;
- (void)dealloc;
- (id)initWithNoop:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKChangeCollector : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)threadCollector;
+ (id)_singletonAlloc;
- (void)registerChange:(int)arg1 details:(id)arg2 forChangeSource:(id)arg3;
- (id)peekCollectedChanges;
- (id)endCollectingChanges;
- (void)beginCollectingChanges;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandSelectionBehavior : TSPObject
{
}

@property(readonly, nonatomic) _Bool modifiesUndoRedoState;
- (void)registerSelectionChangesForRedo;
- (void)registerSelectionChangesForUndo;
- (void)registerSelectionChangesForCommit;

@end

__attribute__((visibility("hidden")))
@interface TSKCommandSelectionBehaviorHistory : TSPObject
{
    TSUNoCopyDictionary *mCommandSelectionBehaviorsForCommands;
}

- (void)clear;
- (void)setCommandSelectionBehavior:(id)arg1 forCommand:(id)arg2;
- (id)commandSelectionBehaviorForCommand:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)saveToArchive:(struct CommandSelectionBehaviorHistoryArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct CommandSelectionBehaviorHistoryArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;

@end

__attribute__((visibility("hidden")))
@interface TSKUndoRedoStateCommandSelectionBehavior : TSKCommandSelectionBehavior
{
    TSPObject<TSKPersistentUndoRedoState> *mPersistentUndoRedoState;
}

- (_Bool)modifiesUndoRedoState;
- (void)p_swapUndoRedoStateWithDocument;
- (void)registerSelectionChangesForRedo;
- (void)registerSelectionChangesForUndo;
- (void)registerSelectionChangesForCommit;
@property(retain, nonatomic, setter=p_setPersistentUndoRedoState:) id <TSKPersistentUndoRedoState> p_persistentUndoRedoState;
@property(readonly, retain, nonatomic) id <TSKUndoRedoState> undoRedoState;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 initialUndoRedoState:(id)arg2;
- (void)saveToArchive:(struct UndoRedoStateCommandSelectionBehaviorArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct UndoRedoStateCommandSelectionBehaviorArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKDocumentSupport : TSPObject <TSKCommandHistoryDelegate>
{
    TSPLazyReference *_commandHistoryReference;
    TSPLazyReference *_commandSelectionBehaviorHistoryReference;
    TSPObject *_webState;
    unsigned long long _cachedUndoCount;
    unsigned long long _cachedRedoCount;
    NSString *_cachedUndoActionString;
    NSString *_cachedRedoActionString;
}

@property(readonly, nonatomic) NSString *cachedRedoActionString; // @synthesize cachedRedoActionString=_cachedRedoActionString;
@property(readonly, nonatomic) NSString *cachedUndoActionString; // @synthesize cachedUndoActionString=_cachedUndoActionString;
@property(readonly, nonatomic) unsigned long long cachedRedoCount; // @synthesize cachedRedoCount=_cachedRedoCount;
@property(readonly, nonatomic) unsigned long long cachedUndoCount; // @synthesize cachedUndoCount=_cachedUndoCount;
@property(retain, nonatomic) TSPObject *webState; // @synthesize webState=_webState;
- (void)commandHistoryChanged:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)documentWasSaved;
@property(readonly, nonatomic) _Bool isDocumentEditedSinceLastSave;
- (void)clearCommandHistory;
@property(readonly, nonatomic) _Bool hasCommands;
- (id)newCommandSelectionBehaviorHistoryReference;
@property(readonly, nonatomic) TSKCommandSelectionBehaviorHistory *commandSelectionBehaviorHistory;
- (void)didLoadCommandHistory:(id)arg1;
- (id)newCommandHistoryReference;
@property(readonly, nonatomic) TSKCommandHistory *commandHistory;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSKCOAddress : NSObject
{
    TSKCOAddress *mParent;
    NSArray *mAllPathElements;
}

@property(readonly, nonatomic) TSKCOAddress *parent; // @synthesize parent=mParent;
- (id)description;
- (_Bool)equals:(id)arg1;
- (_Bool)contains:(id)arg1;
- (_Bool)hasSamePrefix:(id)arg1;
@property(readonly, nonatomic) NSArray *allPathElements;
- (id)path;
@property(readonly, nonatomic) NSString *pathElement;
- (void)dealloc;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSKViewState : TSPObject
{
    TSPObject *_viewStateRoot;
}

+ (id)viewStateWithRoot:(id)arg1 context:(id)arg2;
@property(retain, nonatomic) TSPObject *viewStateRoot; // @synthesize viewStateRoot=_viewStateRoot;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (void)dealloc;
- (id)initWithViewStateRoot:(id)arg1 context:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSKGradientShapeLayer : CAShapeLayer
{
    CAGradientLayer *_gradient;
    CAShapeLayer *_shapeMask;
}

@property(retain, nonatomic) CAShapeLayer *shapeMask; // @synthesize shapeMask=_shapeMask;
@property(retain, nonatomic) CAGradientLayer *gradient; // @synthesize gradient=_gradient;
- (void)p_flatten;
- (void)p_createGradientTreeIfNeeded;
- (_Bool)isGradientTree;
@property(copy) NSString *type;
@property struct CGPoint endPoint;
@property struct CGPoint startPoint;
@property(copy) NSArray *locations;
@property(copy) NSArray *colors;
- (void)setLineDashPattern:(id)arg1;
- (void)setLineDashPhase:(double)arg1;
- (void)setLineJoin:(id)arg1;
- (void)setLineCap:(id)arg1;
- (void)setMiterLimit:(double)arg1;
- (void)setLineWidth:(double)arg1;
- (void)setStrokeEnd:(double)arg1;
- (void)setStrokeStart:(double)arg1;
- (void)setStrokeColor:(struct CGColor *)arg1;
- (void)setFillRule:(id)arg1;
- (void)setFillColor:(struct CGColor *)arg1;
- (void)setPath:(struct CGPath *)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSKAVQueuePlayerController : TSKAVPlayerController
{
    NSArray *mAssets;
}

- (void)p_enqueueAssetsFromIndex:(unsigned long long)arg1;
- (void)skipToAssetAtIndex:(unsigned long long)arg1;
- (void)playerItemDidPlayToEndTimeAtRate:(float)arg1;
- (void)dealloc;
- (id)initWithQueuePlayer:(id)arg1 delegate:(id)arg2 assets:(id)arg3 initialAssetIndex:(unsigned long long)arg4;
- (id)initWithQueuePlayer:(id)arg1 delegate:(id)arg2 assets:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSSPropertyMap : NSObject <NSCopying, TSSPropertySource>
{
    struct TSSPropertyStore *mStore;
}

+ (id)propertyMapWithDictionary:(id)arg1;
+ (id)propertyMapWithPropertiesAndValues:(int)arg1;
+ (id)propertyMapWithPropertyMap:(id)arg1;
+ (id)propertyMap;
- (id)propertyMapWithProperties:(id)arg1;
- (id)propertyMapByRemovingValuesForProperties:(id)arg1;
- (id)propertyMapByRemovingValuesFromPropertyMap:(id)arg1;
- (id)propertyMapByAddingValuesFromPropertyMap:(id)arg1;
- (id)diffPropertyNames:(id)arg1;
- (id)diffOnlyDifferences:(id)arg1;
- (id)diff:(id)arg1;
- (void)minusPropertyMap:(id)arg1;
- (void)filterWithProperties:(id)arg1;
- (void)removeAllPropertyValues;
- (void)removeValuesForProperties:(id)arg1;
- (void)removeValueForProperty:(int)arg1;
- (_Bool)containsAnyPropertyInProperties:(id)arg1;
- (_Bool)definesProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (void)removeValuesFromPropertyMap:(id)arg1;
- (void)addValuesFromPropertyMap:(id)arg1;
- (void)setBoolValue:(_Bool)arg1 forProperty:(int)arg2;
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setObject:(id)arg1 forProperty:(int)arg2;
- (void)setBoxedObject:(id)arg1 forProperty:(int)arg2;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
@property(readonly, copy) NSString *description;
- (void)enumeratePropertiesAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)old_description;
- (void)p_getAllKeys:(int *)arg1;
- (id)allProperties;
- (id)allKeys;
- (unsigned long long)count;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFirstKey:(int)arg1 andArgumentList:(struct __va_list_tag [1])arg2;
- (id)initWithPropertiesAndValues:(int)arg1;
- (id)initWithPropertyMap:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)pSetRepeatedArrayOfBools:(const RepeatedField_12b14242 *)arg1 forProperty:(int)arg2 defaultValues:(_Bool [9])arg3 validator:(id)arg4;
- (void)pSetRepeatedArrayOfInts:(const RepeatedField_c2891982 *)arg1 forProperty:(int)arg2 defaultValues:(int [9])arg3 min:(int)arg4 max:(int)arg5 validator:(id)arg6 usePreviousValueOnDefault:(_Bool)arg7;
- (void)pSetRepeatedArrayOfInts:(const RepeatedField_c2891982 *)arg1 forProperty:(int)arg2 defaultValues:(int [9])arg3 min:(int)arg4 max:(int)arg5 validator:(id)arg6;
- (void)pSetArrayOfBools:(_Bool [9])arg1 forProperty:(int)arg2;
- (void)pSetArrayOfInts:(int [9])arg1 forProperty:(int)arg2;
- (void)pSetRepeatedArrayOfFloats:(const RepeatedField_324622b8 *)arg1 forProperty:(int)arg2 defaultValues:(double [9])arg3 validator:(id)arg4;
- (void)pSetArrayOfFloats:(double [9])arg1 forProperty:(int)arg2;
- (void)pSetArrayOfObjects:(id [9])arg1 forProperty:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSStyle : TSPObject <NSCopying, TSSPropertyValueValidator, TSSStyleObject, TSSThemeAsset, TSSPropertySource, TSSStyleClient, TSKModel, TSKTransformableObject>
{
    TSSPropertyMap *mOverridePropertyMap;
    NSString *mName;
    NSString *mStyleIdentifier;
    TSSStyle *mParent;
    _Bool mIsVariation;
    TSSStylesheet *mStylesheet;
}

+ (double)fontSizeForFontSize:(double)arg1 scalingFactor:(double)arg2;
+ (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
+ (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
+ (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
+ (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
+ (id)propertiesAllowingNSNull;
+ (id)defaultPropertyMap;
+ (id)defaultStyleWithContext:(id)arg1;
+ (double)defaultDoubleValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)boxedDefaultValueForProperty:(int)arg1;
+ (id)description;
+ (id)properties;
+ (int)muxDefaultPropertyForSpecificProperty:(int)arg1;
+ (id)validateFontInPropertyMap:(id)arg1 parentStyle:(id)arg2 checkedFontMap:(id)arg3;
+ (id)validateFontName:(id)arg1 size:(double)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4 checkedFontMap:(id)arg5 newFontName:(id *)arg6 newBold:(_Bool *)arg7 newItalic:(_Bool *)arg8;
+ (struct __CTFont *)pCreateFontWithName:(id)arg1 fontSize:(double)arg2;
+ (id)pReplacementForMissingFontName:(id)arg1 outBold:(int *)arg2 outItalic:(int *)arg3 outQuiet:(_Bool *)arg4;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
@property(readonly, nonatomic) _Bool isVariation; // @synthesize isVariation=mIsVariation;
@property(readonly, nonatomic) TSSStyle *parent; // @synthesize parent=mParent;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)propertyMapThatNeedsToBeTransformedWithTransformedObjects:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (_Bool)transformsFontSizes;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
- (_Bool)validateObjectValue:(id *)arg1 withClass:(Class)arg2 forProperty:(int)arg3;
- (_Bool)validateDoubleValue:(double *)arg1 forProperty:(int)arg2;
- (_Bool)validateFloatValue:(float *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValueAsBool:(int *)arg1 forProperty:(int)arg2;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2 min:(int)arg3 max:(int)arg4;
- (_Bool)validateIntValue:(int *)arg1 forProperty:(int)arg2;
- (_Bool)isAncestorOf:(id)arg1;
- (_Bool)isDescendentOf:(id)arg1;
- (_Bool)isParentOf:(id)arg1;
- (_Bool)isChildOf:(id)arg1;
@property(readonly, nonatomic) NSSet *children;
- (void)setParent:(id)arg1;
@property(readonly, nonatomic) TSSStyle *rootIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *firstIdentifiedAncestor;
@property(readonly, nonatomic) TSSStyle *baseStyleForVariation;
@property(readonly, nonatomic) TSSStyle *rootAncestor;
- (_Bool)overridePropertyMapIsEqualTo:(id)arg1;
- (void)setOverridePropertyMap:(id)arg1;
@property(readonly, nonatomic) TSSPropertyMap *overridePropertyMap;
- (_Bool)hasEqualValues:(id)arg1 forProperties:(id)arg2;
- (_Bool)hasEqualValuesToPropertyMap:(id)arg1 forProperties:(id)arg2;
- (_Bool)p_hasEqualValuesTo:(id)arg1 forProperty:(int)arg2;
- (_Bool)hasEqualPropertyValues:(id)arg1;
- (id)newOverridePropertyMapWithPropertyMap:(id)arg1;
- (id)overridePropertyMapWithPropertyMap:(id)arg1 overridePropertyMap:(id)arg2 collapseSourceOverrides:(_Bool)arg3;
- (id)fullPropertyMap;
- (id)copyPropertyMap;
- (id)propertyMapIgnoringStyle:(id)arg1;
- (id)propertyMap;
- (double)overrideCGFloatValueForProperty:(int)arg1;
- (double)overrideDoubleValueForProperty:(int)arg1;
- (float)overrideFloatValueForProperty:(int)arg1;
- (int)overrideIntValueForProperty:(int)arg1;
- (id)overrideValueForProperty:(int)arg1;
- (id)boxedOverrideValueForProperty:(int)arg1;
- (unsigned long long)overrideCount;
- (id)overriddenProperties;
- (_Bool)overridesAnyProperty;
- (_Bool)overridesProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
@property(readonly, nonatomic) NSString *contentTag;
- (_Bool)definesProperty:(int)arg1;
@property(readonly, nonatomic) _Bool isIdentified;
@property(readonly, nonatomic) _Bool isNamed;
- (void)removeAllValues;
- (void)removeValueForProperty:(int)arg1;
- (void)setValuesForProperties:(id)arg1;
- (void)setCGFloatValue:(double)arg1 forProperty:(int)arg2;
- (void)setDoubleValue:(double)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setValue:(id)arg1 forProperty:(int)arg2;
- (void)setBoxedValue:(id)arg1 forProperty:(int)arg2;
- (id)valuesForProperties:(id)arg1;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)valueForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (id)boxedValueForProperty:(int)arg1;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;
- (id)copyFlattenedWithContext:(id)arg1;
- (_Bool)isEqualToStyle:(id)arg1 ignoreObjectContext:(_Bool)arg2;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)init;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
- (void)setStylesheet:(id)arg1;
- (void)setStyleIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *styleIdentifier;
@property(copy, nonatomic) NSString *name;
- (int)intValueForMUXedProperty:(int)arg1;
- (id)constrainShapeStyleForContext:(id)arg1;
- (void)constrainStrokeForSwatchGeneration;
- (void)constrainShadowForSwatchGeneration;
- (void)fadeReflectionForSwatchGeneration;
- (void)saveToArchive:(struct StyleArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct StyleArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)allowsImplicitComponentOwnership;
- (id)componentRootObject;
- (void)saveParagraphStylePropertiesToArchive:(struct ParagraphStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)saveCharacterStylePropertiesToArchive:(struct CharacterStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)loadParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct ParagraphStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (void)loadCharacterStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct CharacterStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (void)setBoolValue:(_Bool)arg1 forProperty:(int)arg2;
- (_Bool)boolValueForProperty:(int)arg1 defaultValue:(_Bool)arg2;
- (id)validateFontWithCheckedFontMap:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSStylesheet : TSPObject <TSKTransformableObject>
{
    TSSStylesheet *mParent;
    TSSStylesheet *mChild;
    TSUMutableRetainedPointerSet *mStyles;
    NSMutableDictionary *mIdentifierToStyleMap;
    TSURetainedPointerKeyDictionary *mParentToChildrenStyleMap;
    _Bool mIsLocked;
    _Bool mCanCullStyles;
}

+ (id)variationMapForVaryingCharacterStyle:(id)arg1 overParagraphStyle:(id)arg2 withPropertyMap:(id)arg3;
+ (id)p_presenterNotesListStyleIdentifierForListLabelType:(int)arg1;
+ (id)presenterNotesParagraphStyleIdentifier;
@property(readonly, nonatomic) TSSStylesheet *child; // @synthesize child=mChild;
@property(readonly, nonatomic) TSSStylesheet *parent; // @synthesize parent=mParent;
- (id)unusedStyleIdentifierWithPackageString:(id)arg1 styleDescriptor:(id)arg2 contentTag:(id)arg3;
- (id)pVariationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4;
- (void)p_removeStyleFromParentChildren:(id)arg1;
- (void)p_addStyleToParentChildren:(id)arg1;
- (void)p_setParent:(id)arg1 ofStyle:(id)arg2;
- (void)p_setIdentifier:(id)arg1 ofStyle:(id)arg2;
- (void)p_removeStyle:(id)arg1;
- (void)p_addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)unlockStylesheetForDurationOfBlock:(CDUnknownBlockType)arg1;
- (void)didLoadChildObjectFromDocumentSupport:(id)arg1;
- (id)variationOfStyle:(id)arg1 exactPropertyMap:(id)arg2;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 matchStyles:(id)arg3 context:(id)arg4;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2 context:(id)arg3;
- (id)variationOfStyleMatchingStyle:(id)arg1 withNewParentStyle:(id)arg2;
- (id)variationOfStyle:(id)arg1 propertyMap:(id)arg2;
- (id)firstRootlessStyleOfClass:(Class)arg1 withOverridePropertyMap:(id)arg2;
- (id)namedStylesOfClass:(Class)arg1;
- (id)firstCascadedStylePassingTest:(CDUnknownBlockType)arg1;
- (id)cascadedStylesPassingTest:(CDUnknownBlockType)arg1;
- (id)stylesPassingTest:(CDUnknownBlockType)arg1;
- (id)p_stylesPassingTest:(CDUnknownBlockType)arg1 cascade:(_Bool)arg2;
- (void)enumerateCascadedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)identifiedStylesOfClass:(Class)arg1;
- (id)identifiedStyles;
- (id)stylesOfClass:(Class)arg1;
- (id)stylesWithName:(id)arg1;
- (id)childrenOfStyle:(id)arg1;
- (void)setParent:(id)arg1 ofStyle:(id)arg2;
- (void)setIdentifier:(id)arg1 ofStyle:(id)arg2;
- (id)cascadedStyleWithIdentifier:(id)arg1 componentMask:(int)arg2;
- (id)styleWithIdentifier:(id)arg1 componentMask:(int)arg2;
- (id)cascadedStyleWithIdentifier:(id)arg1;
- (id)styleWithIdentifier:(id)arg1;
- (_Bool)cascadedContainsStyle:(id)arg1;
- (_Bool)containsStyle:(id)arg1;
- (void)removeStyle:(id)arg1;
- (void)addStyle:(id)arg1 withParent:(id)arg2 identifier:(id)arg3;
- (void)addStyle:(id)arg1 withParent:(id)arg2;
- (void)addStyle:(id)arg1 withIdentifier:(id)arg2;
- (void)addStyle:(id)arg1;
- (unsigned long long)descendantCount;
- (id)rootAncestor;
- (_Bool)isAncestorOf:(id)arg1;
- (_Bool)isDescendentOf:(id)arg1;
- (_Bool)isParentOf:(id)arg1;
- (_Bool)isChildOf:(id)arg1;
- (void)setParent:(id)arg1 withParentStyleMap:(struct __CFDictionary *)arg2;
- (void)setParent:(id)arg1;
@property(readonly, nonatomic) NSSet *styles;
@property(nonatomic) _Bool canCullStyles;
@property(nonatomic) _Bool isLocked;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 canCullStyles:(_Bool)arg2;
- (id)addDuplicateOfStyle:(id)arg1 withIdentifier:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveStyles:(id)arg1 toArchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (unsigned int)delayedArchivingPriority;
- (_Bool)shouldDelayArchiving;
- (set_6550bfbd *)p_allFilteredIdentifiersInArchive:(const struct StylesheetArchive *)arg1 unarchiver:(id)arg2;
- (id)headerAndFooterStyle;
- (id)defaultColumnStyle;
- (id)defaultParagraphStyle;
- (id)defaultListStyle;
- (id)hyperlinkStyle;
- (id)defaultCharacterStyle;
- (id)variationOfCharacterStyle:(id)arg1 paragraphStyle:(id)arg2 propertyMap:(id)arg3;
- (id)_defaultStyleOfClass:(Class)arg1 withIdentifier:(id)arg2 wasCreated:(_Bool *)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (id)_defaultColumnStyleWasCreated:(_Bool *)arg1;
- (id)_defaultListStyleWasCreated:(_Bool *)arg1;
- (id)_defaultParagraphStyleWasCreated:(_Bool *)arg1;
- (id)_hyperlinkStyleWasCreated:(_Bool *)arg1;
- (id)_defaultCharacterStyleWasCreated:(_Bool *)arg1;
- (id)p_newDefaultPresenterNotesListStyleWithContext:(id)arg1 forListLabelType:(int)arg2;
- (id)p_defaultPresenterNotesListStylePropertyMapForListLabelType:(int)arg1;
- (id)p_defaultPresenterNotesParagraphStyleWithContext:(id)arg1;
- (id)p_defaultPresenterNotesParagraphStylePropertyMap;
- (void)p_upgradeDefaultPresenterNotesStylesResetExisting:(_Bool)arg1;
- (void)upgradeDefaultPresenterNotesStyles;
- (void)addDefaultPresenterNotesStylesIfAbsent;
@property(readonly, nonatomic) TSWPParagraphStyle *defaultPresenterNotesParagraphStyle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSStylesheetPasteboardProxy : TSPObject
{
    TSSStylesheet *mStylesheet;
    TSUMutableRetainedPointerSet *mReferencedStyles;
    NSObject<OS_dispatch_queue> *mReferencedStylesQueue;
    _Bool mSelfArchiving;
}

- (void)saveToArchiver:(id)arg1;
- (void)addStyleReference:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 stylesheet:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSSTheme : TSPObject <TSSPresetSource, TSKModel>
{
    NSString *mThemeIdentifier;
    TSSStylesheet *mStylesheet;
    NSMutableDictionary *mPresetsByKind;
}

+ (id)presetBootstrapOrder;
+ (void)registerPresetSourceClass:(Class)arg1;
+ (void)registerPresetSourceClasses;
+ (id)presetSources;
+ (id)themeWithContext:(id)arg1 alternate:(int)arg2;
+ (void)tschRegisterPresetSourceClasses;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (void)tsdRegisterPresetSourceClasses;
+ (void)tstRegisterPresetSourceClasses;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
- (void)checkThemeStylesheetConsistency;
- (void)checkAndFixThemeStylesheetConsistencyForThemeStyles;
- (void)bootstrapThemeAlternate:(int)arg1;
- (id)p_identifierForBootstrapTheme:(int)arg1;
- (id)modelPathComponentForChild:(id)arg1;
- (id)childEnumerator;
- (_Bool)containsCGColor:(struct CGColor *)arg1;
- (id)colors;
- (unsigned long long)indexOfPreset:(id)arg1;
- (id)presetOfKind:(id)arg1 index:(unsigned long long)arg2;
- (void)movePresetOfKind:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)removePreset:(id)arg1;
- (void)insertPreset:(id)arg1 ofKind:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)addPreset:(id)arg1 ofKind:(id)arg2;
- (void)setPresets:(id)arg1 ofKind:(id)arg2;
- (void)disablePresetValidation;
- (void)enablePresetValidation;
- (_Bool)hasPresetsOfKind:(id)arg1;
- (id)presetsOfKind:(id)arg1;
@property(nonatomic) _Bool isLocked;
@property(retain, nonatomic) NSString *themeIdentifier;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)tschSaveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)tschLoadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (void)tsdSaveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)tsdLoadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (void)installContactCurvedShadowPresets;
- (void)installMoviePresets;
- (void)saveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)tstSaveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)tstLoadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (void)tswpSaveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (void)tswpLoadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (void)removeTextStylesOfPresetKinds:(id)arg1 notReferencedInDocumentRoot:(id)arg2;
- (id)unmodifiableStyles;
- (id)undeletableStyles;
- (void)createCommentInfoStyleIfNeeded;
- (void)createDefaultParagraphStyleIfNeeded;
- (void)modifyHyperlinkStyleToMatchSage;
- (id)defaultColumnStyle;
- (id)defaultListStyle;
- (id)defaultParagraphStyle;
- (id)hyperlinkStyle;
- (id)defaultCharacterStyle;
- (id)paragraphPresetStyles;
- (id)paragraphStylesWithPartialContentTag:(id)arg1;
- (id)paragraphStylesWithContentTag:(id)arg1;
- (id)paragraphStyleWithContentTag:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSThemeAssetMapper : NSObject
{
    TSSTheme *mFromTheme;
    TSSTheme *mToTheme;
    TSUCustomCallBackDictionary *mAssetMap;
}

@property(readonly, nonatomic) TSSTheme *toTheme; // @synthesize toTheme=mToTheme;
@property(readonly, nonatomic) TSSTheme *fromTheme; // @synthesize fromTheme=mFromTheme;
- (void)clearMappingCache;
- (void)cacheAssetMappings:(id)arg1;
- (void)cacheMappingFromAsset:(id)arg1 toAsset:(id)arg2;
- (id)mapStyle:(id)arg1;
- (id)mapPresetsWithKindFromPreset:(id)arg1;
- (id)mappedAssetForAsset:(id)arg1;
- (id)init;
- (id)initWithFromTheme:(id)arg1 toTheme:(id)arg2;
- (void)dealloc;
- (id)mapChartPreset:(id)arg1;
- (_Bool)p_hasCachedMappingsForPresetsOfKind:(id)arg1;
- (id)mapMaster:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSSPropertySet : NSObject <NSCopying, NSMutableCopying>
{
    id mIndexSet;
}

+ (id)propertySetFromUnionOfPropertySets:(id)arg1;
+ (id)propertySetWithArray:(id)arg1;
+ (id)propertySet;
+ (id)propertySetWithProperties:(int)arg1;
+ (id)propertySetWithProperty:(int)arg1;
+ (id)p_mutableIndexSetWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)propertyStrings;
- (id)propertySetByIntersectingWithPropertySet:(id)arg1;
- (id)propertySetByRemovingPropertiesFromSet:(id)arg1;
- (id)propertySetByRemovingProperties:(int)arg1;
- (id)propertySetByRemovingProperty:(int)arg1;
- (id)propertySetByAddingProperty:(int)arg1;
- (id)propertySetByAddingPropertiesFromSet:(id)arg1;
- (id)propertySetByAddingProperties:(int)arg1;
- (_Bool)intersectsProperties:(id)arg1;
- (void)enumeratePropertiesUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)containsProperties:(id)arg1;
- (_Bool)containsProperty:(int)arg1;
- (unsigned long long)count;
- (id)initWithProperties:(int)arg1;
- (id)initWithPropertySet:(id)arg1;
- (id)initWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (void)dealloc;
- (id)init;
- (id)initWithIndexSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSSMutablePropertySet : TSSPropertySet
{
}

- (void)intersectPropertySet:(id)arg1;
- (void)removeProperties:(id)arg1;
- (void)removeProperty:(int)arg1;
- (void)addProperties:(id)arg1;
- (void)addProperty:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPropertySet:(id)arg1;
- (id)initWithFirstProperty:(int)arg1 argumentList:(struct __va_list_tag [1])arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSSStylePromise : NSObject <TSSStyleObject>
{
    TSSStyle *_sourceStyle;
    NSMutableArray *_promisees;
}

+ (id)promiseForStyle:(id)arg1;
- (void)fulfillWithStyle:(id)arg1;
- (void)addPromisee:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSSStyleMapper : NSObject <TSKStyleMapper>
{
    TSSStylesheet *_targetStylesheet;
    TSSStylesheet *_targetThemeStylesheet;
    TSKAddedToDocumentContext *_dolcContext;
    TSURetainedPointerKeyDictionary *_styleMap;
    NSMutableArray *_mappingContext;
    NSMutableSet *_createdStyles;
    _Bool _forceMatchStyle;
    _Bool _varyInThemeStylesheet;
    _Bool _clientsMustRemap;
}

@property(nonatomic) _Bool clientsMustRemap; // @synthesize clientsMustRemap=_clientsMustRemap;
@property(readonly, nonatomic) NSSet *createdStyles; // @synthesize createdStyles=_createdStyles;
@property(nonatomic) _Bool forceMatchStyle; // @synthesize forceMatchStyle=_forceMatchStyle;
- (void)varyInThemeStylesheetIf:(_Bool)arg1 forDurationOfBlock:(CDUnknownBlockType)arg2;
- (void)varyInThemeStylesheetForDurationOfBlock:(CDUnknownBlockType)arg1;
- (id)mappedStyleForStyle:(id)arg1 inThemeStylesheet:(_Bool)arg2;
- (id)mappedStyleForStyle:(id)arg1;
- (id)_mappedStyleForStyle:(id)arg1 depth:(unsigned long long)arg2;
- (_Bool)shouldMapParentOfStyle:(id)arg1;
- (id)targetParentForStyle:(id)arg1;
- (id)targetParentByNameMatchForStyle:(id)arg1;
- (id)targetParentByContentTagMatchForStyle:(id)arg1;
- (id)targetParentByIdentifierPackageDescriptorFallbackMatchForStyle:(id)arg1;
- (id)targetParentByIdentifierExactMatchForStyle:(id)arg1;
- (id)createRootStyleForStyle:(id)arg1 withPropertyMap:(id)arg2;
- (id)stylesheetForNewRootStyleFromStyle:(id)arg1;
- (void)popMappingContext:(id)arg1;
- (void)pushMappingContext:(id)arg1;
@property(readonly, nonatomic) TSSStylesheet *targetStylesheet;
- (id)initWithTargetStylesheet:(id)arg1 newStyleDOLCContext:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSSPropertySetChangeDetails : NSObject
{
    TSSMutablePropertySet *mChangedProperties;
}

- (id)changedProperties;
- (void)addChangedProperties:(id)arg1;
- (void)addChangedProperty:(int)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithChangedProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableSelection : TSKSelection <NSCopying, TSDTextSelection>
{
    int mSelectionType;
    CDStruct_0441cfb5 mAnchorCellID;
    TSTCellRegion *mCellRegion;
    TSTCellRegion *mBaseRegion;
    CDStruct_0441cfb5 mCursorCellID;
    struct _NSRange mSearchReferenceRange;
}

@property(nonatomic) struct _NSRange searchReferenceRange; // @synthesize searchReferenceRange=mSearchReferenceRange;
@property(readonly, nonatomic) CDStruct_0441cfb5 cursorCellID; // @synthesize cursorCellID=mCursorCellID;
@property(readonly, nonatomic) TSTCellRegion *baseRegion; // @synthesize baseRegion=mBaseRegion;
@property(readonly, nonatomic) CDStruct_0441cfb5 anchorCellID; // @synthesize anchorCellID=mAnchorCellID;
@property(readonly, nonatomic) int selectionType; // @synthesize selectionType=mSelectionType;
@property(readonly, nonatomic) TSTCellRegion *cellRegion; // @synthesize cellRegion=mCellRegion;
- (id).cxx_construct;
@property(readonly, nonatomic) _Bool isAtEndOfLine;
@property(readonly, nonatomic) struct _NSRange range;
- (_Bool)intersectsPartialMergeRangeInTable:(id)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)containsCell:(CDStruct_0441cfb5)arg1;
- (_Bool)containsSelection:(id)arg1;
- (_Bool)areCellsInTheSameRegionInTable:(id)arg1;
- (_Bool)isEqualToSelection:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)remove:(int)arg1 atIndex:(unsigned short)arg2 count:(unsigned short)arg3;
- (void)insert:(int)arg1 atIndex:(unsigned short)arg2 count:(unsigned short)arg3;
- (void)enumerateSelectedCellsInTable:(id)arg1 withFlags:(unsigned long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateSelectedCellsInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)selectionByMovingInTableInfo:(id)arg1 inDirection:(int)arg2 withModifierKeys:(int)arg3 forReferenceMove:(_Bool)arg4 suppressWrap:(_Bool)arg5;
- (id)selectionByMovingInTableInfo:(id)arg1 inDirection:(int)arg2 withModifierKeys:(int)arg3 forReferenceMove:(_Bool)arg4;
- (id)selectionByRemovingCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 withAnchor:(CDStruct_0441cfb5)arg3 cursor:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)selectionByAddingCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 withAnchor:(CDStruct_0441cfb5)arg3 cursor:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)selectionByExtendingWithCellRange:(CDStruct_5f1f7aa9)arg1 inTable:(id)arg2 selectionType:(int)arg3 cursorCell:(CDStruct_0441cfb5)arg4;
- (void)saveToArchive:(struct SelectionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct SelectionArchive *)arg1 unarchiver:(id)arg2;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2;
- (id)initWithTableModel:(id)arg1 andPreviousSelection:(id)arg2 offsetBy:(CDStruct_79c71658)arg3;
- (id)initWithTableModel:(id)arg1 rowOrColumn:(int)arg2 index:(unsigned int)arg3 count:(unsigned int)arg4;
- (id)initWithTableModel:(id)arg1 startingColumnIndex:(unsigned short)arg2 numberOfColumns:(unsigned short)arg3;
- (id)initWithTableModel:(id)arg1 startingRowIndex:(unsigned short)arg2 numberOfRows:(unsigned short)arg3;
- (id)initWithTableModel:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (id)initWithTableModel:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 selectionType:(int)arg3;
- (id)initWithTableModel:(id)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (id)initWithTableModel:(id)arg1 selectionType:(int)arg2;
- (id)initWithTableModel:(id)arg1 cellRange:(CDStruct_5f1f7aa9)arg2 type:(int)arg3 anchorCellID:(CDStruct_0441cfb5)arg4 cursorCellID:(CDStruct_0441cfb5)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 selectionType:(int)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 baseRegion:(id)arg5;
- (id)initWithTableModel:(id)arg1 cellRegion:(id)arg2 anchorCellID:(CDStruct_0441cfb5)arg3 cursorCellID:(CDStruct_0441cfb5)arg4 baseRegion:(id)arg5 selectionType:(int)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTableModel : TSPObject <TSTTableStrokeProviding, TSDMixing>
{
    TSTTableDataStore *mDataStore;
    struct __CFUUID *mTableID;
    struct __CFUUID *mFromTableID;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfHeaderRows;
    unsigned short mNumberOfHeaderColumns;
    unsigned short mNumberOfFooterRows;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsFrozen;
    unsigned short mNumberOfHiddenRows;
    unsigned short mNumberOfHiddenColumns;
    unsigned short mNumberOfUserHiddenRows;
    unsigned short mNumberOfUserHiddenColumns;
    unsigned short mNumberOfFilteredRows;
    double mDefaultRowHeight;
    double mDefaultColumnWidth;
    NSString *mTableName;
    _Bool mTableNameEnabled;
    double mTableNameHeight;
    _Bool mTableNameBorderEnabled;
    _Bool mRepeatingHeaderRowsEnabled;
    _Bool mRepeatingHeaderColumnsEnabled;
    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForRows;
    TSTHiddenStateFormulaOwner *mHiddenStateFormulaOwnerForColumns;
    TSTSortRuleReferenceTracker *mSortRuleReferenceTracker;
    unsigned long long mPresetID;
    _Bool mStyleApplyClearsAll;
    struct {
        TSTTableStyle *tableStyle;
        TSTCellStyle *bodyCellStyle;
        TSTCellStyle *headerRowCellStyle;
        TSTCellStyle *headerColumnCellStyle;
        TSTCellStyle *footerRowCellStyle;
        TSWPParagraphStyle *bodyTextStyle;
        TSWPParagraphStyle *headerRowTextStyle;
        TSWPParagraphStyle *headerColumnTextStyle;
        TSWPParagraphStyle *footerRowTextStyle;
        TSWPParagraphStyle *tableNameStyle;
        TSWPShapeStyle *tableNameShapeStyle;
    } mStyles;
    struct _TSTDefaultCellBlock mDefaultCells;
    TSCEOwnerFormulaMap *mFormulasForUndo;
    TSTImportWarningSetByCoordinateMap *mWarningSetsForUndo;
    TSCECalculationEngine *mCalcEngine;
    TSTCellDictionary *mCellsPendingWrite;
    struct _opaque_pthread_mutex_t mCellsToInvalidateAfterRecalcLock;
    TSCECellCoordinateVector *mCellsToInvalidateAfterRecalc;
    TSCECellCoordinateVector *mCellsToInvalidateNonoverflowingAfterRecalc;
    TSTConditionalStyleFormulaOwner *mConditionalStyleFormulaOwner;
    TSWPStorage *mDeprecatedProvider;
    _Bool mWasUnarchivedFromAProvidedTable;
    TSTTableFilterSet *mFilterSet;
    TSTTableSortOrder *mSortOrder;
}

+ (struct __CFDictionary *)newIDMapForPastedTablesInDrawables:(id)arg1 calculationEngine:(id)arg2;
+ (CDStruct_5f1f7aa9)cellRangeForTableArea:(int)arg1 givenTableSize:(CDStruct_d65e47c4)arg2 numberOfHeaderRows:(unsigned short)arg3 numberOfFooterRows:(unsigned short)arg4 numberOfHeaderColumns:(unsigned short)arg5;
+ (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalRows:(unsigned short)arg5;
+ (void)chooseUniqueNameForTables:(id)arg1 inContainer:(id)arg2 forPaste:(_Bool)arg3;
+ (id)unnamedTableString;
+ (void)load;
@property(retain, nonatomic) TSTImportWarningSetByCoordinateMap *warningSetsForUndo; // @synthesize warningSetsForUndo=mWarningSetsForUndo;
@property(retain, nonatomic) TSCEOwnerFormulaMap *formulasForUndo; // @synthesize formulasForUndo=mFormulasForUndo;
@property(nonatomic) TSCECalculationEngine *calcEngine; // @synthesize calcEngine=mCalcEngine;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateNonoverflowingAfterRecalc; // @synthesize cellsToInvalidateNonoverflowingAfterRecalc=mCellsToInvalidateNonoverflowingAfterRecalc;
@property(readonly, nonatomic) TSCECellCoordinateVector *cellsToInvalidateAfterRecalc; // @synthesize cellsToInvalidateAfterRecalc=mCellsToInvalidateAfterRecalc;
@property(readonly, nonatomic) TSTCellDictionary *cellsPendingWrite; // @synthesize cellsPendingWrite=mCellsPendingWrite;
@property(nonatomic) _Bool wasUnarchivedFromAProvidedTable; // @synthesize wasUnarchivedFromAProvidedTable=mWasUnarchivedFromAProvidedTable;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenColumns; // @synthesize numberOfUserHiddenColumns=mNumberOfUserHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfUserHiddenRows; // @synthesize numberOfUserHiddenRows=mNumberOfUserHiddenRows;
@property(readonly, nonatomic) unsigned short numberOfHiddenColumns; // @synthesize numberOfHiddenColumns=mNumberOfHiddenColumns;
@property(readonly, nonatomic) unsigned short numberOfHiddenRows; // @synthesize numberOfHiddenRows=mNumberOfHiddenRows;
- (id).cxx_construct;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)allRichTextPayloadStorages;
- (void)upgradeFromPreUFF;
- (void)transformStrokes:(struct CGAffineTransform)arg1 transformedObjects:(id)arg2 inBounds:(struct CGRect)arg3;
- (void)p_scaleStrokesOnCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2 transformedObjects:(id)arg3 scale:(double)arg4;
- (void)p_scaleStrokeFromProperty:(int)arg1 style:(id)arg2 pmap:(id)arg3 scale:(double)arg4;
- (CDStruct_5f1f7aa9)minPopulatedCellRange;
- (void)validate;
- (void)private_validateMergeCellsPedantically;
- (void)validateStyles;
- (void)moveCalcEngineReferencesFromSourceTable:(struct __CFUUID *)arg1 sourceRange:(CDStruct_5f1f7aa9)arg2 sourceOffset:(CDStruct_79c71658)arg3;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)mapTableStylesToStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)cellWasModifiedInCurrentRecalcCycle:(CDStruct_0441cfb5)arg1;
- (_Bool)hasFormulas;
- (CDStruct_5744d895)referenceToHiddenStateFromColumn:(unsigned char)arg1 toColumn:(unsigned char)arg2;
- (CDStruct_5744d895)referenceToHiddenStateFromRow:(unsigned short)arg1 toRow:(unsigned short)arg2;
- (void)registerAllFormulasWithCalculationEngine:(id)arg1;
- (void)copyPasteboardCustomFormatsToDocumentAndUpdateCellsInRegion:(id)arg1;
- (void)remapTableIDsInFormulasWithMap:(struct __CFDictionary *)arg1 calcEngine:(id)arg2;
- (id)cellRegionWithConditionalStyleMatchingCell:(CDStruct_0441cfb5)arg1;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 inTableWithHeaderColumns:(unsigned short)arg2 headerRows:(unsigned short)arg3 footerRows:(unsigned short)arg4 totalColumns:(unsigned short)arg5 totalRows:(unsigned short)arg6 tableArea:(int)arg7 outTopStroke:(id *)arg8 outLeftStroke:(id *)arg9 outBottomStroke:(id *)arg10 outRightStroke:(id *)arg11;
- (void)defaultStrokesForCellID:(CDStruct_0441cfb5)arg1 outTopStroke:(id *)arg2 outLeftStroke:(id *)arg3 outBottomStroke:(id *)arg4 outRightStroke:(id *)arg5;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
@property(readonly, nonatomic) TSDFill *footerRowsFill;
@property(readonly, nonatomic) TSDFill *headerRowsFill;
@property(readonly, nonatomic) TSDFill *headerColumnsFill;
@property(readonly, nonatomic) TSDFill *bodyFill;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (id)mergedGridIndicesForDirection:(int)arg1;
- (_Bool)hasMergeRanges;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyColumns;
@property(readonly, nonatomic) unsigned short numberOfVisibleBodyRows;
- (int)hidingStateForColumn:(unsigned char)arg1;
- (int)hidingStateForRow:(unsigned short)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1 forAction:(int)arg2;
- (_Bool)isRowHidden:(unsigned short)arg1 forAction:(int)arg2;
- (CDStruct_5f1f7aa9)footerRowRange;
- (CDStruct_5f1f7aa9)headerColumnRange;
- (CDStruct_5f1f7aa9)headerRowRange;
- (CDStruct_5f1f7aa9)bodyRowRange;
- (CDStruct_5f1f7aa9)bodyColumnRange;
- (CDStruct_5f1f7aa9)bodyRange;
- (CDStruct_5f1f7aa9)range;
@property NSArray *rowHeights;
@property NSArray *columnWidths;
- (void)setWidth:(double)arg1 ofColumn:(unsigned char)arg2;
- (void)setHeight:(double)arg1 ofRow:(unsigned short)arg2;
- (id)rowNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(CDStruct_5f1f7aa9 *)arg2 restrictToBodyRange:(_Bool)arg3;
- (id)columnNameForCellID:(CDStruct_0441cfb5)arg1 cellRangeContainingName:(CDStruct_5f1f7aa9 *)arg2 restrictToBodyRange:(_Bool)arg3;
- (id)defaultTextStyleForTableArea:(int)arg1;
- (id)defaultCellStyleForTableArea:(int)arg1;
- (void)p_fetchCellHoldingReadLock:(void *)arg1 returnCode:(void *)arg2;
- (id)applyCellDiff:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (int)defaultCell:(id)arg1 forTableArea:(int)arg2;
- (id)defaultCellForTableArea:(int)arg1;
- (CDStruct_5f1f7aa9)cellRangeForTableArea:(int)arg1;
- (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3 avoidNames:(id)arg4;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2 needsNewName:(_Bool)arg3;
- (void)chooseUniqueNameInContainer:(id)arg1 forPaste:(_Bool)arg2;
- (void)setStorageParentToInfo:(id)arg1;
- (id)bandedFillObject;
- (_Bool)useBandedFill;
@property(readonly, nonatomic) TSTCell *defaultHeaderColumnCell;
@property(readonly, nonatomic) TSTCell *defaultHeaderRowCell;
@property(readonly, nonatomic) TSTCell *defaultFooterRowCell;
@property(readonly, nonatomic) TSTCell *defaultBodyCell;
- (void)clearFromTableID;
@property(readonly, nonatomic) struct __CFUUID *fromTableID;
- (void)setTableID:(struct __CFUUID *)arg1;
@property(readonly, nonatomic) struct __CFUUID *tableID;
- (_Bool)canTranspose;
- (void)dirtyFilterState;
- (void)filterSetUpdated;
- (_Bool)hasActiveFilters;
- (void)setFilterRulesAtAbsoluteIndices:(id)arg1 enabled:(_Bool)arg2;
- (void)setFilterSetType:(int)arg1;
- (void)enableFilterSet:(_Bool)arg1;
- (void)enableFilter:(_Bool)arg1 atIndex:(unsigned long long)arg2;
- (void)enableRule:(_Bool)arg1 atIndex:(unsigned long long)arg2 inFilterIndex:(unsigned long long)arg3;
- (void)mutateFormulaFiltersUsingBlock:(CDUnknownBlockType)arg1;
- (void)setNeedsFilterFormulaRewriteForImport:(_Bool)arg1;
- (_Bool)needsFilterFormulaRewriteForImport;
- (id)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (id)removeFilterRules:(id)arg1;
- (id)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(_Bool)arg4;
- (id)addRules:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)duplicateFilterSet;
@property(copy, nonatomic) TSTTableFilterSet *filterSet;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForColumns;
- (void)resetSortRuleReferenceTrackerForInsert;
@property(copy, nonatomic) TSTTableSortOrder *sortOrder;
@property(readonly, nonatomic) TSTSortRuleReferenceTracker *sortRuleReferenceTracker;
@property(nonatomic) TSTConditionalStyleFormulaOwner *conditionalStyleFormulaOwner;
@property(readonly, nonatomic) TSTHiddenStateFormulaOwner *hiddenStateFormulaOwnerForRows;
- (id)dataStore;
@property(readonly, nonatomic) TSDStroke *tableNameBorderStroke;
@property(readonly, nonatomic) int tableWritingDirection;
@property(readonly, nonatomic) _Bool hasAlternatingRows;
@property(readonly, nonatomic) _Bool hasTableBorder;
- (void)setTableNameShapeStyle:(id)arg1;
@property(readonly, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
- (void)setTableNameStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setFooterRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setHeaderRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setBodyTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setFooterRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setHeaderRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setBodyCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
- (void)setTableStyle:(id)arg1;
@property(readonly, nonatomic) TSTTableStyle *tableStyle;
@property(nonatomic) _Bool headerColumnsFrozen;
@property(nonatomic) _Bool headerRowsFrozen;
@property(nonatomic) unsigned long long presetID;
@property(nonatomic) unsigned short numberOfHeaderColumns;
@property(nonatomic) unsigned short numberOfFooterRows;
@property(nonatomic) unsigned short numberOfHeaderRows;
@property(nonatomic) unsigned short numberOfColumns;
@property(nonatomic) unsigned short numberOfRows;
@property(nonatomic) _Bool styleApplyClearsAll;
@property(nonatomic) _Bool repeatingHeaderColumnsEnabled;
@property(nonatomic) _Bool repeatingHeaderRowsEnabled;
@property(nonatomic) double tableNameHeight;
@property(nonatomic) _Bool tableNameBorderEnabled;
@property(nonatomic) _Bool tableNameEnabled;
@property(retain, nonatomic) NSString *tableName;
- (void)bakeFormulas;
- (void)setDrawableIsBeingCopied:(_Bool)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) TSKDocumentRoot *documentRoot;
- (id)initWithContext:(id)arg1 fromSourceModel:(id)arg2 region:(id)arg3 tableInfo:(id)arg4 waitForCalcEngine:(_Bool)arg5;
- (id)initWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3 styles:(id)arg4 tableInfo:(id)arg5;
- (void)setupDefaultCells;
- (void)resetStyles:(id)arg1;
- (void)p_releaseExistingDefaultStyles;
- (id)init;
- (void)p_clearDataListEntriesInRange:(CDStruct_5f1f7aa9)arg1 ignoreSizeChecks:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTRWRetainedPointerKeyDictionary : NSObject
{
    struct _opaque_pthread_rwlock_t mRWLock;
    TSURetainedPointerKeyDictionary *mRetainedPointerKeyDictionary;
}

- (void)removeAllObjects;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableTile : TSPObject
{
    unsigned char mMaxColumn;
    unsigned short mMaxRow;
    unsigned short mNumCells;
    NSMutableArray *mRowInfos;
    unsigned short mNumRows;
    unsigned char mStorageVersion;
}

- (id)description;
- (void)validate;
- (void)debugListRows;
- (void)debugDump;
@property(readonly, nonatomic) NSArray *rowInfos;
@property(readonly, nonatomic) unsigned short numRows;
@property(readonly, nonatomic) unsigned short numCells;
@property(readonly, nonatomic) unsigned short maxRow;
@property(readonly, nonatomic) unsigned char maxColumn;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithRows:(id)arg1 context:(id)arg2;
- (void)i_upgradeTileRowInfosWithDataStore:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTWidthHeightCollection : NSObject
{
    struct vector<std::__1::pair<TSUColumnRowCoordinate, double>, std::__1::allocator<std::__1::pair<TSUColumnRowCoordinate, double>>> mFittingHeights;
    vector_40b16ab8 mResetHeights;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)enumerateResetHeightsUsingBlock:(CDUnknownBlockType)arg1;
- (void)addResetHeightForCellID:(CDStruct_0441cfb5)arg1;
- (void)enumerateFittingHeightsUsingBlock:(CDUnknownBlockType)arg1;
- (void)addFittingHeight:(double)arg1 forCellID:(CDStruct_0441cfb5)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTConcurrentMutableIndexSet : NSObject
{
    struct _opaque_pthread_rwlock_t mRWLock;
    NSMutableIndexSet *mMutableIndexSet;
}

- (void)removeAllIndexes;
- (void)addIndex:(unsigned long long)arg1;
- (void)enumerateIndexesUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableInfo : TSDDrawableInfo <TSCECalculationEngineRegistration, TSCEFormulaOwning, TSCEReferenceResolving, TSCETableModeling, TSKCustomFormatContainingInfo, TSKModel, TSKSearchable, TSSThemedObject, TSSPresetSource, TSSStyleClient, TSDContainerInfo, TSDMixing, TSWPStorageParent>
{
    TSTTableModel *mTableModel;
    _Bool mIsFormulaEditing;
    _Bool mHasReference;
    CDStruct_0441cfb5 mEditingCellID;
    CDStruct_0441cfb5 mPreviousEditingCellID;
    TSTTablePartitioner *mPartitioner;
    TSTMasterLayout *mMasterLayout;
    TSTEditingState *mEditingState;
}

+ (id)presetKinds;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (_Bool)canPartition;
+ (_Bool)needsObjectUUID;
+ (id)tablePrototypeWithIndex:(long long)arg1 context:(id)arg2 geometry:(id)arg3 styles:(id)arg4;
+ (id)geometryForPrototypeIndex:(long long)arg1 withCanvasPoint:(struct CGPoint)arg2;
+ (unsigned short)numberOfColumnsForProtoIndex:(unsigned long long)arg1;
+ (unsigned short)numberOfRowsForProtoIndex:(unsigned long long)arg1;
@property(nonatomic) _Bool hasReference; // @synthesize hasReference=mHasReference;
@property(readonly, nonatomic) CDStruct_0441cfb5 previousEditingCellID; // @synthesize previousEditingCellID=mPreviousEditingCellID;
@property(readonly, nonatomic) TSTEditingState *editingState; // @synthesize editingState=mEditingState;
@property(nonatomic) CDStruct_0441cfb5 editingCellID; // @synthesize editingCellID=mEditingCellID;
- (id).cxx_construct;
- (id)commandToReplaceCustomFormat:(id)arg1 withReplacementFormat:(id)arg2;
- (id)changeDetailsForCustomFormatListDidUpdateToCustomFormatWrapper:(id)arg1;
- (void)performBlockWithStylesheetForAddingStyles:(CDUnknownBlockType)arg1;
- (void)didReplaceTextsInStoragesWithPlaceHolderString;
- (id)allWPStorages;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (void)didCopy;
- (void)willCopyWithOtherDrawables:(id)arg1;
- (void)debugDump;
- (void)validate;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingCellRange;
- (id)childInfos;
- (id)trackerForController:(id)arg1;
- (id)mergedContainedStorages;
- (id)descriptionForPasteboardWithSource:(id)arg1;
- (id)descriptionForExactCopy;
- (id)descriptionForPasteboard;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)childCommandForReplaceAllCommand:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(CDUnknownBlockType)arg3;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (void)scaleInfoGeometry:(struct CGSize)arg1;
@property(nonatomic) long long contentWritingDirection;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2 scaleFactor:(struct CGSize)arg3 shouldClearObjectPlaceholderFlag:(_Bool)arg4;
- (void)setGeometry:(id)arg1 resizeInternal:(_Bool)arg2 scaleFactor:(struct CGSize)arg3;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (void)p_bakeMixedCellStrokesIntoTable:(id)arg1 outgoingTable:(id)arg2 incomingTable:(id)arg3 fraction:(double)arg4;
- (long long)mixingTypeWithObject:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (id)p_containedTextForTableDeliveryStyle:(int)arg1 chunkIndex:(unsigned long long)arg2;
- (_Bool)reverseChunkingIsSupported;
- (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2;
- (Class)layoutClass;
- (_Bool)supportsAttachedComments;
- (int)elementKind;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
- (void)clearPartitioner;
@property(readonly, nonatomic) TSTTablePartitioner *partitioner;
- (_Bool)supportsHyperlinks;
- (Class)editorClass;
- (Class)repClass;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (id)documentRoot;
- (_Bool)isSafeToConvertToText;
- (_Bool)isSafeToConvertToAttributedString;
- (_Bool)isSafeToConvertToImage;
- (double)masterLayoutEffectiveTableNameHeight;
- (void)shiftGeometryToExcludeTableNameHeight;
- (void)shiftGeometryToIncludeTableNameHeight;
- (void)p_didLoadRichTextPayloadTable:(id)arg1;
- (id)componentRootObject;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TableInfoArchive *)arg1 archiver:(id)arg2;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct TableInfoArchive *)arg1 unarchiver:(id)arg2;
- (void)setupTableModelForPrototypeIndex:(long long)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 carrySelection:(_Bool)arg3 waitForCalcEngine:(_Bool)arg4;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 tableModel:(id)arg4 carrySelection:(_Bool)arg5 waitForCalcEngine:(_Bool)arg6;
- (id)initWithContext:(id)arg1 fromSourceInfo:(id)arg2 cellRegion:(id)arg3 carrySelection:(_Bool)arg4 waitForCalcEngine:(_Bool)arg5;
- (id)initWithContext:(id)arg1 otherTableInfo:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 styles:(id)arg3;
- (id)initForTestingWithContext:(id)arg1 rows:(unsigned short)arg2 columns:(unsigned short)arg3;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 rows:(unsigned short)arg3 columns:(unsigned short)arg4 styles:(id)arg5;
- (id)objectToArchiveInDependencyTracker;
- (struct __CFUUID *)resolverID;
- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(id)arg1;
- (void)retainForCalculationEngine:(id)arg1;
- (id)endRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(id)arg3;
- (void)invalidateForCalculationEngine:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;
- (void)notifyTableOfNewResults;
- (void)performReadForOneOffFormulaEvaluation:(id)arg1 forCellID:(CDStruct_0441cfb5 *)arg2;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (int)registerWithCalculationEngine:(id)arg1;
- (_Bool)isRegisteredWithCalculationEngine:(id)arg1;
- (_Bool)registerLast;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTCellIterator : NSObject
{
    TSTTableModel *mTableModel;
    TSTCellRegion *mModelRegion;
    struct NSObject *mModelRegionIterator;
    TSTTableDataStore *mTableDataStore;
    CDStruct_0441cfb5 mPreviousCellID;
    TSTTableTileRowInfo *mCurRow;
    TSTTableTile *mCurTile;
    unsigned short mCurRowID;
    struct _NSRange mCurTileRange;
    TSTCell *mCell;
    _Bool mSkipStyleOnlyCells;
    _Bool mSkipCommentStorageOnlyCells;
    _Bool mDontExpandCellRefs;
    int mRowWalkDirection;
    _Bool mDontCheckSize;
    _Bool mDontReturnMergeRegions;
    _Bool mReturnHiddenCells;
    _Bool mDontInflateFormulas;
    _Bool mReturnEmptyCells;
}

@property(readonly, nonatomic) TSTTableModel *tableModel; // @synthesize tableModel=mTableModel;
@property(readonly) int rowWalkDirection; // @synthesize rowWalkDirection=mRowWalkDirection;
@property(readonly) _Bool dontExpandCellRefs; // @synthesize dontExpandCellRefs=mDontExpandCellRefs;
- (id).cxx_construct;
- (void)terminate;
- (_Bool)getNext:(CDStruct_6188ab8e *)arg1;
- (_Bool)p_getData:(CDStruct_6188ab8e *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)p_resetIterData:(CDStruct_6188ab8e *)arg1;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1 flags:(unsigned long long)arg2;
- (id)initWithTableModel:(id)arg1;
- (id)initWithTableModel:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithTableModel:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithTableModel:(id)arg1 region:(id)arg2;
- (id)initWithTableModel:(id)arg1 region:(id)arg2 flags:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTCellStyle : TSSStyle <TSDMixing>
{
}

+ (void)initDefaultPropertyMap:(id)arg1 forTableArea:(int)arg2 presetID:(unsigned long long)arg3 colors:(id)arg4 alternate:(int)arg5;
+ (void)p_initFooterRowRegionPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initHeaderColumnRegionPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initHeaderRowRegionPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)p_initBodyRegionPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)textStyleIDForPreset:(unsigned long long)arg1 andTableArea:(int)arg2;
+ (id)styleIDForPreset:(unsigned long long)arg1 andTableArea:(int)arg2;
+ (id)regionStringForTableArea:(int)arg1;
+ (id)nonEmphasisCellProperties;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (SEL)mapThemePropertyMapSelector;
- (void)tstMapCellStylePropertyMap:(id)arg1;
- (void)dealloc;
- (void)validate;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveCellStyleToArchive:(struct CellStyleArchive *)arg1 archiver:(id)arg2;
- (void)loadCellStyleFromArchive:(const struct CellStyleArchive *)arg1 unarchiver:(id)arg2;
- (void)saveCellStylePropertiesToArchive:(struct CellStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)loadCellStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct CellStylePropertiesArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTPersistentCellMap : TSPContainedObject <TSTCellMap>
{
    CDStruct_0441cfb5 *mCellIDs;
    id *mCells;
    unsigned long long mCapacity;
    unsigned long long mCount;
    _Bool mMayModifyFormulasInCells;
    _Bool mMayModifyValuesReferencedByFormulas;
    _Bool mIgnoreHiddenCellsWhenApplying;
    _Bool mAppliesToHidden;
}

@property(nonatomic) _Bool appliesToHidden; // @synthesize appliesToHidden=mAppliesToHidden;
- (void)saveToArchive:(struct CellMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct CellMapArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)mayModifyValuesReferencedByFormulas;
- (_Bool)mayModifyFormulasInCells;
- (id)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5 *)cellIDs;
- (unsigned long long)count;
- (void)setMayModifyValuesReferencedByFormulas:(_Bool)arg1;
- (void)setMayModifyFormulasInCells:(_Bool)arg1;
- (void)dealloc;
- (id)initWithOwner:(id)arg1 andCapacity:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTableTileRowInfo : TSPContainedObject
{
    struct __CFData *mStorageBuffer;
    unsigned short mStorageOffsets[255];
    unsigned short mBufferSize;
    unsigned short mTileRowIndex;
    unsigned short mCellCount;
    unsigned char mMaxTileColumnIndex;
    _Bool mMaxTileColumnIndexValid;
    unsigned char mStorageVersion;
}

@property(readonly, nonatomic) unsigned short cellCount; // @synthesize cellCount=mCellCount;
@property(nonatomic) unsigned short tileRowIndex; // @synthesize tileRowIndex=mTileRowIndex;
- (id)description;
- (id)p_debugDumpCompact;
- (void)validate;
- (void)debugDump;
- (void)saveToArchive:(struct TileRowInfo *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TileRowInfo *)arg1 owner:(id)arg2;
- (void)dealloc;
- (id)initWithOwner:(id)arg1 tileRowIndex:(unsigned short)arg2;
- (void)i_upgradeWithDataStore:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTConfiguration : NSObject
{
    _Bool mSupportsContainedTextEditing;
    _Bool mSupportsResumingTextEditing;
    _Bool mBeginEditingOnSingleTap;
    _Bool mSupportsMergedCells;
    _Bool mSupportsHiddenCells;
    _Bool mReturnWhileEditingNavigates;
    _Bool mTabWhileEditingNavigates;
    _Bool mArrowKeyAtEdgeWhileEditingNavigates;
    _Bool mArrowKeysWrap;
    _Bool mArrowKeysNavigateWhenEditingBeganByTyping;
    _Bool mBackTabWraps;
    _Bool mTabAtEdgeAddsRow;
    _Bool mTabAtEdgeAddsColumn;
    _Bool mPastesTile;
    _Bool mAllowHorizontalAutoresize;
    _Bool mSelectsCellOnInitialTap;
    _Bool mDragByHandleOnly;
    _Bool mCornersCanDragResize;
    _Bool mSupportsControlCells;
    _Bool mHasLargerFonts;
    _Bool mSupportsFrozenHeaders;
    _Bool mSupportsAutoResizedTables;
    _Bool mSupportsCreateChartFromSelection;
    _Bool mSelectionUsesBezierPath;
    _Bool mUsesWholeChromeResizer;
    _Bool mSupportsCanvasReferenceEditing;
    _Bool mUsesLimitedAutomaticFormatParsing;
    _Bool mSupportsFormulaEditing;
    _Bool mSupportsImplicitEditing;
    _Bool mFormulaEqualsTokenIsSelectable;
    _Bool mAllowFreeformFormulaText;
    _Bool mAllowWhitespaceInFormulas;
    _Bool mRequireMatchedFunctionTokens;
    _Bool mShowsHideUnhideUI;
    _Bool mExportPermanentHidingState;
    _Bool mShowsCellOverflowIndicator;
    _Bool mSupportsAutofill;
    _Bool mUsesLimitedNumberFormatInspector;
    _Bool mHeadersFrozenByDefault;
    _Bool mCreateLargeDefaultTables;
    _Bool mTableNameEnabledInNewTables;
    _Bool mSupportsRowColumnAdderKnob;
    _Bool mSupportsDragDropMoveMode;
    _Bool mExportsCellComments;
    _Bool mExportsCellAnnotations;
    _Bool mSupportsRepeatHeaderRowsOnEachPage;
    _Bool mSupportsTableTranspose;
    _Bool mFollowsLinksOnFirstTap;
    _Bool mSupportsBidiTablesUI;
    _Bool _formulaEditorEvaluatesFormulas;
    _Bool _showReferenceHighlightsOnFormulaCellSelection;
    _Bool _tokenizeFormulaStringLiterals;
    _Bool _cellEditorsCanScrollToNonLocalTableSelection;
    _Bool _formulaCellEditorSupportsTextTokenEditor;
    _Bool _disableImplicitNaming;
    _Bool _supportsComplexReorganizeUI;
    _Bool _supportsQuickFilterUI;
    _Bool _pasteFilterHidingAsUserHiding;
    _Bool _allowsFullyFilteredTables;
    _Bool _supportsTableColumnAutocomplete;
    _Bool _supportsInlineAttachments;
    unsigned int mMaxNumberOfRows;
    unsigned int mMaxNumberOfColumns;
    unsigned int mMaxNumberOfPopulatedCells;
}

+ (void)resetSharedTableConfiguration;
+ (id)sharedTableConfiguration;
@property(nonatomic) _Bool supportsInlineAttachments; // @synthesize supportsInlineAttachments=_supportsInlineAttachments;
@property(nonatomic) _Bool supportsTableColumnAutocomplete; // @synthesize supportsTableColumnAutocomplete=_supportsTableColumnAutocomplete;
@property(nonatomic) _Bool allowsFullyFilteredTables; // @synthesize allowsFullyFilteredTables=_allowsFullyFilteredTables;
@property(nonatomic) _Bool pasteFilterHidingAsUserHiding; // @synthesize pasteFilterHidingAsUserHiding=_pasteFilterHidingAsUserHiding;
@property(nonatomic) _Bool supportsQuickFilterUI; // @synthesize supportsQuickFilterUI=_supportsQuickFilterUI;
@property(nonatomic) _Bool supportsComplexReorganizeUI; // @synthesize supportsComplexReorganizeUI=_supportsComplexReorganizeUI;
@property(nonatomic) _Bool disableImplicitNaming; // @synthesize disableImplicitNaming=_disableImplicitNaming;
@property(nonatomic) _Bool formulaCellEditorSupportsTextTokenEditor; // @synthesize formulaCellEditorSupportsTextTokenEditor=_formulaCellEditorSupportsTextTokenEditor;
@property(nonatomic) _Bool cellEditorsCanScrollToNonLocalTableSelection; // @synthesize cellEditorsCanScrollToNonLocalTableSelection=_cellEditorsCanScrollToNonLocalTableSelection;
@property(nonatomic) _Bool tokenizeFormulaStringLiterals; // @synthesize tokenizeFormulaStringLiterals=_tokenizeFormulaStringLiterals;
@property(nonatomic) _Bool showReferenceHighlightsOnFormulaCellSelection; // @synthesize showReferenceHighlightsOnFormulaCellSelection=_showReferenceHighlightsOnFormulaCellSelection;
@property(nonatomic) _Bool formulaEditorEvaluatesFormulas; // @synthesize formulaEditorEvaluatesFormulas=_formulaEditorEvaluatesFormulas;
@property(nonatomic) _Bool supportsBidiTablesUI; // @synthesize supportsBidiTablesUI=mSupportsBidiTablesUI;
@property(nonatomic) _Bool followsLinksOnFirstTap; // @synthesize followsLinksOnFirstTap=mFollowsLinksOnFirstTap;
@property(nonatomic) _Bool supportsTableTranspose; // @synthesize supportsTableTranspose=mSupportsTableTranspose;
@property(nonatomic) _Bool supportsRepeatHeaderRowsOnEachPage; // @synthesize supportsRepeatHeaderRowsOnEachPage=mSupportsRepeatHeaderRowsOnEachPage;
@property(nonatomic) _Bool exportsCellAnnotations; // @synthesize exportsCellAnnotations=mExportsCellAnnotations;
@property(nonatomic) _Bool exportsCellComments; // @synthesize exportsCellComments=mExportsCellComments;
@property(nonatomic) _Bool supportsDragDropMoveMode; // @synthesize supportsDragDropMoveMode=mSupportsDragDropMoveMode;
@property(nonatomic) _Bool supportsRowColumnAdderKnob; // @synthesize supportsRowColumnAdderKnob=mSupportsRowColumnAdderKnob;
@property(nonatomic) _Bool tableNameEnabledInNewTables; // @synthesize tableNameEnabledInNewTables=mTableNameEnabledInNewTables;
@property(nonatomic) _Bool createLargeDefaultTables; // @synthesize createLargeDefaultTables=mCreateLargeDefaultTables;
@property(nonatomic) _Bool headersFrozenByDefault; // @synthesize headersFrozenByDefault=mHeadersFrozenByDefault;
@property(nonatomic) _Bool usesLimitedNumberFormatInspector; // @synthesize usesLimitedNumberFormatInspector=mUsesLimitedNumberFormatInspector;
@property(nonatomic) _Bool supportsAutofill; // @synthesize supportsAutofill=mSupportsAutofill;
@property(nonatomic) _Bool showsCellOverflowIndicator; // @synthesize showsCellOverflowIndicator=mShowsCellOverflowIndicator;
@property(nonatomic) _Bool exportPermanentHidingState; // @synthesize exportPermanentHidingState=mExportPermanentHidingState;
@property(nonatomic) _Bool showsHideUnhideUI; // @synthesize showsHideUnhideUI=mShowsHideUnhideUI;
@property(nonatomic) _Bool requireMatchedFunctionTokens; // @synthesize requireMatchedFunctionTokens=mRequireMatchedFunctionTokens;
@property(nonatomic) _Bool allowWhitespaceInFormulas; // @synthesize allowWhitespaceInFormulas=mAllowWhitespaceInFormulas;
@property(nonatomic) _Bool allowFreeformFormulaText; // @synthesize allowFreeformFormulaText=mAllowFreeformFormulaText;
@property(nonatomic) _Bool formulaEqualsTokenIsSelectable; // @synthesize formulaEqualsTokenIsSelectable=mFormulaEqualsTokenIsSelectable;
@property(nonatomic) _Bool supportsImplicitEditing; // @synthesize supportsImplicitEditing=mSupportsImplicitEditing;
@property(nonatomic) _Bool supportsFormulaEditing; // @synthesize supportsFormulaEditing=mSupportsFormulaEditing;
@property(nonatomic) _Bool usesLimitedAutomaticFormatParsing; // @synthesize usesLimitedAutomaticFormatParsing=mUsesLimitedAutomaticFormatParsing;
@property(nonatomic) _Bool supportsCanvasReferenceEditing; // @synthesize supportsCanvasReferenceEditing=mSupportsCanvasReferenceEditing;
@property(nonatomic) _Bool usesWholeChromeResizer; // @synthesize usesWholeChromeResizer=mUsesWholeChromeResizer;
@property(nonatomic) _Bool selectionUsesBezierPath; // @synthesize selectionUsesBezierPath=mSelectionUsesBezierPath;
@property(nonatomic) _Bool supportsCreateChartFromSelection; // @synthesize supportsCreateChartFromSelection=mSupportsCreateChartFromSelection;
@property(nonatomic) _Bool supportsAutoResizedTables; // @synthesize supportsAutoResizedTables=mSupportsAutoResizedTables;
@property(nonatomic) _Bool supportsFrozenHeaders; // @synthesize supportsFrozenHeaders=mSupportsFrozenHeaders;
@property(nonatomic) _Bool hasLargerFonts; // @synthesize hasLargerFonts=mHasLargerFonts;
@property(nonatomic) _Bool supportsControlCells; // @synthesize supportsControlCells=mSupportsControlCells;
@property(nonatomic) _Bool cornersCanDragResize; // @synthesize cornersCanDragResize=mCornersCanDragResize;
@property(nonatomic) _Bool dragByHandleOnly; // @synthesize dragByHandleOnly=mDragByHandleOnly;
@property(nonatomic) _Bool selectsCellOnInitialTap; // @synthesize selectsCellOnInitialTap=mSelectsCellOnInitialTap;
@property(nonatomic) _Bool allowHorizontalAutoresize; // @synthesize allowHorizontalAutoresize=mAllowHorizontalAutoresize;
@property(nonatomic) _Bool pastesTile; // @synthesize pastesTile=mPastesTile;
@property(nonatomic) _Bool tabAtEdgeAddsColumn; // @synthesize tabAtEdgeAddsColumn=mTabAtEdgeAddsColumn;
@property(nonatomic) _Bool tabAtEdgeAddsRow; // @synthesize tabAtEdgeAddsRow=mTabAtEdgeAddsRow;
@property(nonatomic) _Bool backTabWraps; // @synthesize backTabWraps=mBackTabWraps;
@property(nonatomic) _Bool arrowKeysNavigateWhenEditingBeganByTyping; // @synthesize arrowKeysNavigateWhenEditingBeganByTyping=mArrowKeysNavigateWhenEditingBeganByTyping;
@property(nonatomic) _Bool arrowKeysWrap; // @synthesize arrowKeysWrap=mArrowKeysWrap;
@property(nonatomic) _Bool arrowKeyAtEdgeWhileEditingNavigates; // @synthesize arrowKeyAtEdgeWhileEditingNavigates=mArrowKeyAtEdgeWhileEditingNavigates;
@property(nonatomic) _Bool tabWhileEditingNavigates; // @synthesize tabWhileEditingNavigates=mTabWhileEditingNavigates;
@property(nonatomic) _Bool returnWhileEditingNavigates; // @synthesize returnWhileEditingNavigates=mReturnWhileEditingNavigates;
@property(nonatomic) _Bool supportsHiddenCells; // @synthesize supportsHiddenCells=mSupportsHiddenCells;
@property(nonatomic) _Bool supportsMergedCells; // @synthesize supportsMergedCells=mSupportsMergedCells;
@property(nonatomic) _Bool beginEditingOnSingleTap; // @synthesize beginEditingOnSingleTap=mBeginEditingOnSingleTap;
@property(nonatomic) _Bool supportsResumingTextEditing; // @synthesize supportsResumingTextEditing=mSupportsResumingTextEditing;
@property(nonatomic) _Bool supportsContainedTextEditing; // @synthesize supportsContainedTextEditing=mSupportsContainedTextEditing;
@property(nonatomic) unsigned int maxNumberOfPopulatedCells; // @synthesize maxNumberOfPopulatedCells=mMaxNumberOfPopulatedCells;
@property(nonatomic) unsigned int maxNumberOfColumns; // @synthesize maxNumberOfColumns=mMaxNumberOfColumns;
@property(nonatomic) unsigned int maxNumberOfRows; // @synthesize maxNumberOfRows=mMaxNumberOfRows;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataStore : TSPContainedObject
{
    struct TSTTableRBTreeNode_s *mColumnTileIndex;
    struct TSTTableRBTreeNode_s *mRowTileIndex;
    TSTTileIDKeyDict *mTileStorage;
    TSTTableHeaderStorage *mRowHeaderStorage;
    TSPLazyReference *mColumnHeaderStorageReference;
    TSPLazyReference *mConditionalStyleSetTableReference;
    TSPLazyReference *mStringTableReference;
    TSPLazyReference *mStyleTableReference;
    TSPLazyReference *mFormulaTableReference;
    TSPLazyReference *mFormulaErrorTableReference;
    TSPLazyReference *mRichTextPayloadTableReference;
    TSPLazyReference *mFormatTableReference;
    TSPLazyReference *mMultipleChoiceListFormatTableReference;
    TSPLazyReference *mCommentStorageTableReference;
    TSPLazyReference *mImportWarningSetTableReference;
    TSTCustomFormatList *mPasteboardCustomFormatList;
    TSUIntToIntDictionary *mPasteboardCustomFormatMap;
    unsigned short mNextRowStripID;
    unsigned short mNextColumnStripID;
    TSTMergeRegionMap *mMergedCellRanges;
    unsigned int mCellCount;
    _Bool mCellCountValid;
    unsigned int mStorageVersion;
}

- (void)validate;
- (void)debugDump;
- (void)saveToArchive:(struct DataStore *)arg1 archiver:(id)arg2;
- (void)upgradeDataStoreCellStorage;
- (_Bool)needToUpgradeCellStorage;
- (void)setStorageParentToInfo:(id)arg1;
- (id)initWithArchive:(const struct DataStore *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (void)p_updateTileStorageToCurrentVersion;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;
- (void)clearPasteboardCustomFormatList;
- (void)copyPasteboardCustomFormatsFromDataStore:(id)arg1;
- (id)p_pasteboardCustomFormatMap;
- (id)p_pasteboardCustomFormatList;
@property(readonly, nonatomic) _Bool hasPasteboardCustomFormats; // @dynamic hasPasteboardCustomFormats;
- (unsigned int)copyPasteboardCustomFormat:(unsigned int)arg1 toDocument:(id)arg2 clearingPasteboardFormat:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTCellMapTile : TSPObject
{
    unsigned long long mIndexOffset;
    unsigned long long mCapacity;
    NSMutableArray *mCells;
    CDStruct_0441cfb5 *mCellIDs;
}

@property(readonly) unsigned long long indexOffset; // @synthesize indexOffset=mIndexOffset;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct CellMapTileArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct CellMapTileArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isFull;
- (id)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (unsigned long long)count;
- (void)setIndexOffset:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 indexOffset:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTTiledCellMap : TSPContainedObject <TSTCellMap>
{
    NSMutableArray *mTiles;
    unsigned long long mCount;
    _Bool mMayModifyFormulasInCells;
    _Bool mMayModifyValuesReferencedByFormulas;
    _Bool mAppliesToHidden;
}

@property(nonatomic) _Bool mayModifyValuesReferencedByFormulas; // @synthesize mayModifyValuesReferencedByFormulas=mMayModifyValuesReferencedByFormulas;
@property(nonatomic) _Bool mayModifyFormulasInCells; // @synthesize mayModifyFormulasInCells=mMayModifyFormulasInCells;
@property(nonatomic) _Bool appliesToHidden; // @synthesize appliesToHidden=mAppliesToHidden;
- (void)saveToArchive:(struct TiledCellMapArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TiledCellMapArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (id)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (id)tileForIndex:(unsigned long long)arg1;
- (unsigned long long)tileIndexForIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataObject : NSObject
{
    unsigned int mRefCount;
}

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataRichTextPayload : TSTTableDataObject
{
    TSTRichTextPayload *mPayload;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithRichTextPayload:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataCommentStorage : TSTTableDataObject
{
    TSDCommentStorage *mCommentStorage;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithCommentStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataImportWarningSet : TSTTableDataObject
{
    TSTImportWarningSet *mImportWarningSet;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithImportWarningSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataString : TSTTableDataObject
{
    NSString *mString;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataFormat : TSTTableDataObject
{
    CDStruct_bfed0e84 mFormat;
}

- (id).cxx_construct;
- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithFormat:(CDStruct_bfed0e84)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataFormula : TSTTableDataObject
{
    struct TSCEFormula *mFormula;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithFormula:(const struct TSCEFormula *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataStyle : TSTTableDataObject
{
    TSSStyle *mStyle;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataConditionalStyleSet : TSTTableDataObject
{
    TSTConditionalStyleSet *mConditionalStyleSet;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithConditionalStyleSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataFormulaError : TSTTableDataObject
{
    TSWPStorage *mFormulaError;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithFormulaError:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataCustomFormat : TSTTableDataObject
{
    struct TSUCustomFormat *mCustomFormat;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithCustomFormat:(struct TSUCustomFormat *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataMultipleChoiceList : TSTTableDataObject
{
    TSTPopUpMenuModel *mPopUpMenuModel;
}

- (void)dealloc;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initObjectWithPopUpMenuModel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataList : TSPObject
{
    int mListType;
    unsigned int mNextID;
    TSTIntegerKeyDict *mData;
    TSTTableDataObjectKeyDict *mIDs;
}

+ (id)newObjectForUnarchiver:(id)arg1;
@property(readonly, nonatomic) unsigned int nextID; // @synthesize nextID=mNextID;
@property(readonly, nonatomic) TSTIntegerKeyDict *data;
- (void)enumerateCustomFormatsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateCustomFormatObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)allRichTextPayloadStorages;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithType:(int)arg1 context:(id)arg2;
- (void)p_setupWithType:(int)arg1 nextKeyID:(unsigned int)arg2;
- (_Bool)supportsIDMapForType:(int)arg1;
- (void)p_customFormatList_setNextID:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTIntegerKeyDict : NSObject
{
    struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
}

- (id)allValues;
- (long long)count;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)transformWithFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 andState:(void *)arg3;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(unsigned int)arg1;
- (void)removeFirstObject;
- (void)setObject:(id)arg1 forKey:(unsigned int)arg2;
- (id)objectForKey:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStyle : TSSStyle <TSTTableStrokeProviding, TSDMixing>
{
}

+ (id)p_magicMoveProperties;
+ (void)initDefaultPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (void)initDefaultStrokePresetListInPropertyMap:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3;
+ (id)styleIDForPreset:(unsigned long long)arg1;
+ (id)nonEmphasisTableProperties;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@property(readonly, nonatomic) TSDStroke *footerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *footerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerRowSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerRowBorderStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnSeparatorStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyRowStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *headerColumnBorderStroke;
@property(readonly, nonatomic) TSDStroke *bodyRowStroke;
@property(readonly, nonatomic) TSDStroke *bodyColumnStroke;
@property(readonly, nonatomic) TSDStroke *defaultVerticalBorderStroke;
@property(readonly, nonatomic) TSDStroke *defaultHorizontalBorderStroke;
@property(readonly, nonatomic) TSDStroke *borderStrokeEvenIfNotVisible;
- (SEL)mapThemePropertyMapSelector;
- (void)validate;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveTableStylePropertiesToArchive:(struct TableStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)loadTableStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct TableStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (unsigned int)maskForStrokePresets:(id)arg1;
- (unsigned int)maskForStrokePreset:(unsigned long long)arg1;
- (id)exteriorStrokeForStrokePreset:(unsigned long long)arg1;
- (id)verticalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)horizontalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)strokeForStrokePreset:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTileIDKeyDict : TSPContainedObject
{
    struct hash_map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, TSTIntHasher, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
}

- (long long)count;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2;
- (void)makeTilesPerformSelector:(SEL)arg1;
- (void)removeAllTiles;
- (void)removeTileForID:(CDStruct_d65e47c4)arg1;
- (void)setTile:(id)arg1 forID:(CDStruct_d65e47c4)arg2;
- (id)tileForID:(CDStruct_d65e47c4)arg1;
- (void)saveToArchive:(struct TileStorage *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TileStorage *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableHeaderStorage : TSPContainedObject <TSTTableHeaderStorage>
{
    TSTTableHeaderStorageBucket *mBuckets[1];
}

- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(id)arg1 forKey:(unsigned int)arg2;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
- (void)saveToArchive:(struct HeaderStorage *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct HeaderStorage *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTableHeaderInfo : NSObject
{
    TSTCellStyle *mCellStyle;
    TSWPParagraphStyle *mTextStyle;
    double mSize;
    unsigned char mHidingState;
    unsigned short mNumberOfCells;
}

@property(nonatomic) unsigned short numberOfCells; // @synthesize numberOfCells=mNumberOfCells;
@property(nonatomic) unsigned char hidingState; // @synthesize hidingState=mHidingState;
@property(nonatomic) double size; // @synthesize size=mSize;
@property(retain, nonatomic) TSWPParagraphStyle *textStyle; // @synthesize textStyle=mTextStyle;
@property(retain, nonatomic) TSTCellStyle *cellStyle; // @synthesize cellStyle=mCellStyle;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSTEphemeralFilter : NSObject
{
    unsigned long long mFilterIndex;
    unsigned char mColumnIndex;
    NSArray *mRules;
    _Bool mEnabled;
}

+ (id)filterWithIndex:(unsigned long long)arg1 columnIndex:(unsigned char)arg2 rules:(id)arg3 enabled:(_Bool)arg4;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=mEnabled;
@property(readonly, nonatomic) unsigned char columnIndex; // @synthesize columnIndex=mColumnIndex;
@property(readonly, nonatomic) unsigned long long filterIndex; // @synthesize filterIndex=mFilterIndex;
- (id)description;
- (id)filterByRemovingRuleAtIndex:(unsigned long long)arg1;
- (id)filterByAddingRule:(id)arg1;
- (id)filterWithRule:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)ruleAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long ruleCount;
- (void)dealloc;
- (id)initWithIndex:(unsigned long long)arg1 columnIndex:(unsigned char)arg2 rules:(id)arg3 enabled:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTTableHeaderStorageBucket : TSPObject <TSTTableHeaderStorage>
{
    struct map<unsigned int, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, SFUtility::ObjcSharedPtr<NSObject>>>> *mMap;
    double mHorizontalScaleFactor;
}

@property(nonatomic) double horizontalScaleFactor; // @synthesize horizontalScaleFactor=mHorizontalScaleFactor;
- (unsigned int)lowerBound:(unsigned int)arg1;
- (unsigned int)upperBound:(unsigned int)arg1;
- (unsigned int)maxKey;
- (unsigned int)minKey;
- (long long)count;
- (void)shiftKeysAtIndex:(unsigned int)arg1 amount:(int)arg2;
- (void)applyFunction:(CDUnknownFunctionPointerType)arg1 withState:(void *)arg2 willModify:(_Bool)arg3;
- (void)makeHeadersPerformSelector:(SEL)arg1 willModify:(_Bool)arg2;
- (void)removeAllHeaders;
- (void)removeHeaderForKey:(unsigned int)arg1;
- (void)setHeader:(id)arg1 forKey:(unsigned int)arg2;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2 createIfNotThere:(_Bool)arg3;
- (id)headerForKey:(unsigned int)arg1 willModify:(_Bool)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)packageLocator;
- (unsigned long long)flushableSize;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTCellDiff : TSPObject <NSCopying>
{
    TSSPropertyMap *mPropertyMapToSet;
    TSSPropertyMap *mPropertyMapToReset;
    TSSPropertyMap *_propertyMapToSet;
    TSSPropertyMap *_propertyMapToReset;
}

+ (id)cellDiff;
@property(readonly, nonatomic) TSSPropertyMap *propertyMapToReset; // @synthesize propertyMapToReset=_propertyMapToReset;
@property(readonly, nonatomic) TSSPropertyMap *propertyMapToSet; // @synthesize propertyMapToSet=_propertyMapToSet;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)objectApplyingDiffToObject:(id)arg1 andUpdateInverse:(id)arg2;
- (void)setPropertiesFromMap:(id)arg1;
- (void)resetFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)resetIntValue:(int)arg1 forProperty:(int)arg2;
- (void)resetObject:(id)arg1 forProperty:(int)arg2;
- (void)setFloatValue:(float)arg1 forProperty:(int)arg2;
- (void)setIntValue:(int)arg1 forProperty:(int)arg2;
- (void)setObject:(id)arg1 forProperty:(int)arg2;
- (_Bool)resetsProperty:(int)arg1;
- (_Bool)setsProperty:(int)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTracingManager : NSObject
{
    TSMTraceBuffer *mBuffer;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutProcessChangesActions : NSObject
{
    _Bool _layoutInvalidate;
    _Bool _layoutInvalidateProvider;
    _Bool _layoutInvalidateSize;
    _Bool _layoutInvalidateTableNameVisibility;
    _Bool _layoutSpacesInvalidateCoordinates;
    _Bool _layoutSpacesInvalidateTableOffsets;
    _Bool _layoutInvalidateChildren;
    _Bool _layoutUpdateChildren;
}

@property(nonatomic) _Bool layoutUpdateChildren; // @synthesize layoutUpdateChildren=_layoutUpdateChildren;
@property(nonatomic) _Bool layoutInvalidateChildren; // @synthesize layoutInvalidateChildren=_layoutInvalidateChildren;
@property(nonatomic) _Bool layoutSpacesInvalidateTableOffsets; // @synthesize layoutSpacesInvalidateTableOffsets=_layoutSpacesInvalidateTableOffsets;
@property(nonatomic) _Bool layoutSpacesInvalidateCoordinates; // @synthesize layoutSpacesInvalidateCoordinates=_layoutSpacesInvalidateCoordinates;
@property(nonatomic) _Bool layoutInvalidateTableNameVisibility; // @synthesize layoutInvalidateTableNameVisibility=_layoutInvalidateTableNameVisibility;
@property(nonatomic) _Bool layoutInvalidateSize; // @synthesize layoutInvalidateSize=_layoutInvalidateSize;
@property(nonatomic) _Bool layoutInvalidateProvider; // @synthesize layoutInvalidateProvider=_layoutInvalidateProvider;
@property(nonatomic) _Bool layoutInvalidate; // @synthesize layoutInvalidate=_layoutInvalidate;

@end

__attribute__((visibility("hidden")))
@interface TSTLayout : TSWPTextHostLayout <TSKSearchTarget, TSWPColumnMetrics, TSWPLayoutParent, TSWPStorageObserver>
{
    TSTMasterLayout *mMasterLayout;
    TSTLayoutHint *mLayoutHint;
    struct CGRect mCanvasVisibleRect;
    struct CGRect mPreviousVisibleStrokeFrame;
    _Bool mProcessChangesFiltering;
    _Bool mTabsVisible;
    _Bool mTableNameVisibilityIsValid;
    _Bool mTableNameVisible;
    _Bool mNewCanvasRevealedHorizontally;
    _Bool mNewCanvasRevealedVertically;
    _Bool mLayoutDirectionIsLeftToRight;
    TSTLayoutSpaceBundle *mSpaceBundle;
    struct {
        double tableNameHeight;
        struct CGSize scaleToFitParent;
        struct CGSize scaleToFitEnclosingTextColumn;
    } mCached;
    struct CGRect mRenderingFrameForLayoutGeometryFromInfo;
    TSWPLayout *mContainedTextEditingLayout;
    NSMutableDictionary *mAttachmentCellLayouts;
    struct UIEdgeInsets mCachedPaddingForEditingCell;
    struct CGRect mComputedEditingCellContentFrame;
    int mCachedVerticalAlignmentForEditingCell;
    struct CGSize mTableSizeWithoutStrokes;
    struct CGSize mStrokeDelta;
    struct CGSize mCapturedStrokeFrameSizeForInline;
    CDStruct_5f1f7aa9 mEditingSpillingTextRange;
    CDStruct_5f1f7aa9 mPrevEditingSpillingTextRange;
    int mContainedTextEditorParagraphAlignment;
    _Bool mContainedTextEditorTextWraps;
    _Bool mContainedTextEditorSpills;
    struct CGSize mSpillingTextSize;
    int mCoordinatesChangedMaskForChrome;
    _Bool mShouldUpdateAttachmentChildren;
}

@property(nonatomic) _Bool processChangesFiltering; // @synthesize processChangesFiltering=mProcessChangesFiltering;
@property(retain, nonatomic) TSTLayoutHint *layoutHint; // @synthesize layoutHint=mLayoutHint;
@property(nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(nonatomic) CDStruct_5f1f7aa9 prevEditingSpillingTextRange; // @synthesize prevEditingSpillingTextRange=mPrevEditingSpillingTextRange;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingSpillingTextRange; // @synthesize editingSpillingTextRange=mEditingSpillingTextRange;
@property(retain, nonatomic) TSTLayoutSpaceBundle *spaceBundle; // @synthesize spaceBundle=mSpaceBundle;
@property(readonly, nonatomic) struct UIEdgeInsets paddingForEditingCell; // @synthesize paddingForEditingCell=mCachedPaddingForEditingCell;
@property(retain, nonatomic) TSWPLayout *containedTextEditingLayout; // @synthesize containedTextEditingLayout=mContainedTextEditingLayout;
@property(nonatomic) _Bool newCanvasRevealedVertically; // @synthesize newCanvasRevealedVertically=mNewCanvasRevealedVertically;
@property(nonatomic) _Bool newCanvasRevealedHorizontally; // @synthesize newCanvasRevealedHorizontally=mNewCanvasRevealedHorizontally;
- (id).cxx_construct;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (_Bool)p_getLayoutDirectionLeftToRight;
- (int)p_defaultAlignmentForTableWritingDirection;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (int)reapCoordinatesChangedMaskForChrome;
- (void)processChanges:(id)arg1;
- (void)p_processChangeActions:(id)arg1;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2 actions:(id)arg3;
- (struct CGSize)initialTextSize;
- (struct CGRect)p_maskRectForRichTextLayout:(id)arg1;
- (struct CGRect)p_maskRectForTextEditingLayout:(id)arg1;
- (struct CGRect)maskRectForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (id)dependentLayouts;
- (struct CGRect)p_computeSpillingTextFrameForEditingLayout:(id)arg1 textSize:(struct CGSize)arg2 editingSpillRange:(CDStruct_5f1f7aa9 *)arg3;
- (struct CGRect)p_autosizedFrameForRichTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)p_autosizedFrameForTextEditingLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (_Bool)p_layoutWhollyContainsGridRange:(CDStruct_58eae27c)arg1;
- (struct CGSize)p_rangeUpAndLeftOfIntersectionRangeOfGridRange:(CDStruct_58eae27c)arg1;
- (struct CGRect)p_nonAutosizedFrameForRichTextLayout:(id)arg1;
- (struct CGRect)p_nonAutosizedFrameForTextEditingLayout:(id)arg1;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (double)maxAutoGrowWidthForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (int)naturalAlignmentForTextLayout:(id)arg1;
- (CDStruct_0441cfb5)p_cellIDForWPLayout:(id)arg1;
- (int)naturalAlignmentForCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) struct CGRect computedEditingCellContentFrame;
- (struct CGRect)p_textFrameForWrappingCell:(CDStruct_0441cfb5)arg1 defaultRowHeight:(_Bool *)arg2;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (_Bool)orderedBefore:(id)arg1;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (id)childSearchTargets;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)layoutSearchForSpellingErrorsWithHitBlock:(CDUnknownBlockType)arg1 stop:(_Bool *)arg2;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (void)removeAttachmentCellLayouts;
- (void)removeContainedTextEditingLayout;
- (void)updateChildrenFromInfo;
- (id)children;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (void)p_prepareAttachmentCells;
- (void)setupContainedTextEditingLayout:(CDStruct_0441cfb5)arg1;
- (void)p_updateCachedStyleInformationFromCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_5f1f7aa9)p_spillRangeForMaskingRichTextLayout:(id)arg1;
- (CDStruct_5f1f7aa9)p_spillRangeToRightForCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_5f1f7aa9)p_maximumSpillRangeForCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isBeingManipulated;
- (void)validateTableNameVisibility;
- (void)invalidateTableNameVisibility;
- (void)bezierPathsForCellRegion:(id)arg1 selectionMask:(unsigned int)arg2 transform:(struct CGAffineTransform)arg3 viewScale:(double)arg4 inset:(double)arg5 block:(CDUnknownBlockType)arg6;
- (void)invalidatePosition;
- (void)invalidateSize;
- (void)invalidate;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)validate;
- (_Bool)isZoomedEditing;
- (_Bool)inFindReplaceMode;
- (_Bool)inPrintPreviewMode;
- (id)additionalGuides;
- (struct CGRect)alignmentFrameForProvidingGuidesInRoot;
- (struct CGRect)alignmentFrame;
- (int)wrapFitType;
- (id)initialInfoGeometry;
- (id)computeLayoutGeometry;
- (id)layoutGeometryFromInfo;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (struct CGPoint)infoGeometryPositionForCurrentAttachedLayoutGeometry;
- (struct CGSize)minimumSize;
- (void)takeSizeFromTracker:(id)arg1;
- (void)beginResize;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canRotateChildLayout:(id)arg1;
- (_Bool)supportsRotation;
- (void)offsetGeometryBy:(struct CGPoint)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (id)initWithInfo:(id)arg1 layoutHint:(id)arg2;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(nonatomic) struct CGSize scaleToFit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TSTWPTableInfo : TSTTableInfo
{
}

- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct WPTableInfoArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct WPTableInfoArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTCell : NSObject <NSCopying>
{
    struct {
        unsigned int mUnused:8;
        unsigned int mValueType:8;
        unsigned int mCellFlags:16;
        union {
            double mDouble;
            struct {
                unsigned int mID;
                NSString *mString;
            } mString;
            NSDate *mDate;
        } mValue;
        unsigned int mCellStyleID;
        TSTCellStyle *mCellStyle;
        unsigned int mTextStyleID;
        TSWPParagraphStyle *mTextStyle;
        unsigned int mConditionalStyleSetID;
        TSTConditionalStyleSet *mConditionalStyleSet;
        unsigned char mConditionalAppliedRule;
        unsigned int mFormulaID;
        struct TSCEFormula *mFormula;
        unsigned int mFormulaErrorID;
        TSWPStorage *mFormulaError;
        unsigned int mRichTextPayloadID;
        TSTRichTextPayload *mRichTextPayload;
        unsigned int mCommentStorageID;
        TSDCommentStorage *mCommentStorage;
        unsigned int mImportWarningSetID;
        TSTImportWarningSet *mImportWarningSet;
        struct {
            unsigned int mExplicitFormatFlags:16;
            unsigned int mCurrentCellFormatID;
            CDStruct_bfed0e84 mCurrentCellFormat;
            unsigned int mNumberFormatID;
            TSUFormatObject *mNumberFormatRef;
            unsigned int mCurrencyFormatID;
            TSUFormatObject *mCurrencyFormatRef;
            unsigned int mDurationFormatID;
            TSUFormatObject *mDurationFormatRef;
            unsigned int mDateFormatID;
            TSUFormatObject *mDateFormatRef;
            unsigned int mControlFormatID;
            TSUFormatObject *mControlFormatRef;
            unsigned int mCustomFormatID;
            TSUFormatObject *mCustomFormatRef;
            unsigned int mBaseFormatID;
            TSUFormatObject *mBaseFormatRef;
            unsigned int mMultipleChoiceListFormatID;
            TSUFormatObject *mMultipleChoiceListFormatRef;
        } mCellFormats;
        unsigned char mStrokePresetNumber;
    } mPrivate;
}

+ (id)cell;
- (id).cxx_construct;
- (void)applyFormulaResult:(const struct TSCEValue *)arg1 context:(id)arg2 hasWarnings:(_Bool)arg3 outWriteDidBeginOrEndWithTextCell:(_Bool *)arg4;
- (void)applyFormulaResult:(const struct TSCEValue *)arg1;
- (id)applyCellDiff:(id)arg1;
- (id)description;
- (_Bool)isCellContentsEqualToCell:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)writeToStorageRef:(struct TSTCellStorage *)arg1;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2 suppressingFormulaInflation:(_Bool)arg3;
- (void)inflateFromStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2;
- (void)dealloc;
- (id)initWithStorageRef:(struct TSTCellStorage *)arg1 dataStore:(id)arg2;
- (id)initWithCell:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutSpace : NSObject
{
    TSTLayoutSpaceBundle *mBundle;
    int mLayoutSpaceType;
    _Bool mInvalidTableOffset;
    unsigned char mInvalidColumnIndex;
    unsigned short mInvalidRowIndex;
    CDStruct_58eae27c mGridRange;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    double mViewScale;
    struct CGAffineTransform mTransformToCanvas;
    struct CGAffineTransform mTransformFromCanvas;
    struct CGAffineTransform mTransformToDevice;
    struct CGAffineTransform mTransformFromDevice;
    _Bool mDrawBlackAndWhite;
    _Bool mDrawPreventAntialias;
    struct CGPoint mTableOffset;
    TSTCoordinateArray *mHeaderRowColumnCoordinates;
    TSTCoordinateArray *mBodyColumnCoordinates;
    TSTCoordinateArray *mHeaderColumnRowCoordinates;
    TSTCoordinateArray *mBodyRowCoordinates;
    struct CGRect mCachedFrame;
    struct CGRect mCachedAlignedFrame;
    struct CGRect mCachedStrokeFrame;
    struct CGRect mCachedAlignedStrokeFrame;
    _Bool mLayoutDirectionIsLeftToRight;
    struct _opaque_pthread_rwlock_t mLock;
}

@property(nonatomic) struct CGPoint tableOffset; // @synthesize tableOffset=mTableOffset;
@property(nonatomic) _Bool drawPreventAntialias; // @synthesize drawPreventAntialias=mDrawPreventAntialias;
@property(nonatomic) _Bool drawBlackAndWhite; // @synthesize drawBlackAndWhite=mDrawBlackAndWhite;
@property(nonatomic) struct CGAffineTransform transformFromDevice; // @synthesize transformFromDevice=mTransformFromDevice;
@property(nonatomic) struct CGAffineTransform transformToDevice; // @synthesize transformToDevice=mTransformToDevice;
@property(nonatomic) struct CGAffineTransform transformFromCanvas; // @synthesize transformFromCanvas=mTransformFromCanvas;
@property(nonatomic) struct CGAffineTransform transformToCanvas; // @synthesize transformToCanvas=mTransformToCanvas;
@property(nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) _Bool headerRowsRepeat; // @synthesize headerRowsRepeat=mHeaderRowsRepeat;
@property(nonatomic) _Bool headerColumnsRepeat; // @synthesize headerColumnsRepeat=mHeaderColumnsRepeat;
@property(readonly, nonatomic) _Bool layoutDirectionIsLeftToRight; // @synthesize layoutDirectionIsLeftToRight=mLayoutDirectionIsLeftToRight;
@property(readonly, nonatomic) int layoutSpaceType; // @synthesize layoutSpaceType=mLayoutSpaceType;
@property(readonly, nonatomic) TSTLayoutSpaceBundle *bundle; // @synthesize bundle=mBundle;
- (id).cxx_construct;
- (int)validateCoordinateCache:(id)arg1;
- (void)validateCachedFrames;
- (void)drawStrokesInGridRange:(CDStruct_58eae27c)arg1 clearStrokes:(_Bool)arg2 context:(struct CGContext *)arg3;
- (void)p_drawStrokeForGridRow:(unsigned int)arg1 strokeRect:(CDStruct_58eae27c)arg2 clearStroke:(_Bool)arg3 shadowType:(int)arg4 context:(struct CGContext *)arg5;
- (void)p_drawStrokeForGridColumn:(unsigned int)arg1 strokeRect:(CDStruct_58eae27c)arg2 clearStroke:(_Bool)arg3 shadowType:(int)arg4 context:(struct CGContext *)arg5;
- (int)validateTableOffset:(id)arg1;
- (int)validate:(id)arg1;
- (void)invalidateTableOffset;
- (void)invalidateCoordinatesAfterRow:(unsigned short)arg1;
- (void)invalidateCoordinatesAfterColumn:(unsigned char)arg1;
- (void)invalidateCoordinates;
- (void)unlock;
- (void)lockForWrite;
- (void)lockForRead;
- (id)description;
- (void)dealloc;
- (id)initWithLayoutSpaceBundle:(id)arg1 type:(int)arg2;
@property(readonly, nonatomic) _Bool isCorner;
@property(readonly, nonatomic) _Bool isRows;
@property(readonly, nonatomic) _Bool isColumns;
@property(readonly, nonatomic) _Bool isRepeat;
@property(readonly, nonatomic) _Bool isFrozen;
@property(readonly, nonatomic) _Bool isMain;
- (_Bool)p_getLayoutDirectionLeftToRight;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *layout;

@end

__attribute__((visibility("hidden")))
@interface TSTCoordinateArray : NSObject
{
    unsigned int mOffset;
    unsigned int mCount;
    double *mCoordinates;
    double mAverage;
    NSMutableIndexSet *mVisibleIndices;
    _Bool mLayoutDirectionIsLeftToRight;
    double mTableWidth;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (void)hasRightToLeftOrderingWithWidth:(double)arg1;
- (id)initWithCount:(unsigned int)arg1 atOffset:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTFormulaTokenContext : NSObject
{
    TSTExpressionNode *mExpressionNode;
    unsigned long long mParenNestingLevel;
    unsigned long long mArgumentIndex;
}

+ (id)tokenContextWithExpressionNode:(id)arg1 parenNestingLevel:(unsigned long long)arg2 argumentIndex:(unsigned long long)arg3;
+ (id)tokenContextWithExpressionNode:(id)arg1 parenNestingLevel:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long argumentIndex; // @synthesize argumentIndex=mArgumentIndex;
@property(readonly, nonatomic) unsigned long long parenNestingLevel; // @synthesize parenNestingLevel=mParenNestingLevel;
@property(readonly, nonatomic) TSTExpressionNode *expressionNode; // @synthesize expressionNode=mExpressionNode;
- (id)debugDescription;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithExpressionNode:(id)arg1 parenNestingLevel:(unsigned long long)arg2 argumentIndex:(unsigned long long)arg3;
- (id)initWithExpressionNode:(id)arg1 parenNestingLevel:(unsigned long long)arg2;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSTCellRangeIterator : NSObject
{
    TSTCellIterator *mCellIterator;
    CDStruct_6188ab8e mIterData;
    _Bool mIterDataValid;
    _Bool mCellValidForDelegate;
    id <TSTCellRangeIteratorDelegate> mDelegate;
}

- (id).cxx_construct;
- (_Bool)processRange;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1 delegate:(id)arg2;
- (id)initWithTableModel:(id)arg1 region:(id)arg2 delegate:(id)arg3;
- (id)initWithTableModel:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 delegate:(id)arg3;
@property(readonly, nonatomic) _Bool cellValid;

@end

__attribute__((visibility("hidden")))
@interface TSTWPColumnCache : TSUConcurrentCache
{
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStylePreset : TSPObject <TSSPreset, TSSStyleClient, TSKModel>
{
    unsigned long long mPresetID;
    TSTTableStyleNetwork *mStyleNetwork;
}

- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TableStylePresetArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)styleNetworkInStylesheet:(id)arg1;
- (id)swatchImage;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithStyleNetwork:(id)arg1 presetID:(unsigned long long)arg2;
- (id)p_documentRoot;
@property(copy, nonatomic) TSTTableStyleNetwork *styleNetwork;
@property(nonatomic) unsigned long long presetID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStrokePreset : TSPObject <TSSPreset>
{
    unsigned long long mIndex;
}

- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TableStrokePresetArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)setIndex:(unsigned long long)arg1;
- (unsigned long long)index;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStyleNetwork : TSPObject <NSFastEnumeration>
{
    unsigned long long mPresetID;
    TSTTableStyle *mTableStyle;
    TSTCellStyle *mHeaderRowCellStyle;
    TSTCellStyle *mHeaderColumnCellStyle;
    TSTCellStyle *mFooterRowCellStyle;
    TSTCellStyle *mBodyCellStyle;
    TSWPParagraphStyle *mHeaderRowTextStyle;
    TSWPParagraphStyle *mHeaderColumnTextStyle;
    TSWPParagraphStyle *mFooterRowTextStyle;
    TSWPParagraphStyle *mBodyTextStyle;
    TSWPParagraphStyle *mTableNameStyle;
    TSWPShapeStyle *mTableNameShapeStyle;
}

+ (id)identifiersForPresetID:(unsigned long long)arg1;
+ (id)defaultTableNameShapeStyleWithContext:(id)arg1;
+ (id)tableNameShapeStyleIDForPreset:(unsigned long long)arg1;
+ (id)tableNameStyleIDForPreset:(unsigned long long)arg1;
+ (id)networkFromTheme:(id)arg1 presetIndex:(unsigned long long)arg2;
+ (id)networkFromTheme:(id)arg1 presetID:(unsigned long long)arg2;
+ (id)networkFromStylesheet:(id)arg1 presetID:(unsigned long long)arg2;
+ (id)createStylesInStylesheet:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)networkWithContext:(id)arg1 presetID:(unsigned long long)arg2 colors:(id)arg3 alternate:(int)arg4;
+ (id)networkCapturedFromMasterLayout:(id)arg1;
+ (id)networkFromTableModel:(id)arg1;
- (void)p_flattenStrokesIntoPropertyMap:(id)arg1 masterLayout:(id)arg2;
- (void)p_updateAccumulationDict:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 key:(id)arg3 currentMax:(unsigned long long *)arg4 cellIDWithCurrentMax:(CDStruct_0441cfb5 *)arg5;
- (id)p_getCleanTextStyleAtCellID:(CDStruct_0441cfb5)arg1 tableModel:(id)arg2 tableArea:(int)arg3;
- (id)p_getCleanCellStyleForCellID:(CDStruct_0441cfb5)arg1 tableModel:(id)arg2 tableArea:(int)arg3;
- (CDStruct_0441cfb5)p_representativeStyleCellInRange:(CDStruct_5f1f7aa9)arg1 tableModel:(id)arg2;
- (void)p_captureAndFlattenStyles:(id)arg1;
- (void)saveToArchive:(struct TableStyleNetworkArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct TableStyleNetworkArchive *)arg1 withUnarchiver:(id)arg2;
- (id)initWithArchive:(const struct TableStyleNetworkArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 fromDictionary:(id)arg2 withPreset:(unsigned long long)arg3;
- (_Bool)valid;
- (id)dictionaryWithPreset:(unsigned long long)arg1;
- (id)styleArray;
- (void)setStylesFromTableModel:(id)arg1;
- (void)setTextStyle:(id)arg1 forTableArea:(int)arg2;
- (void)setCellStyle:(id)arg1 forTableArea:(int)arg2;
- (id)textStyleForTableArea:(int)arg1;
- (id)cellStyleForTableArea:(int)arg1;
- (_Bool)stylesInStylesheet:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copy;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1 context:(id)arg2;
- (id)initWithContext:(id)arg1 fromArray:(id)arg2 presetID:(unsigned long long)arg3;
- (id)initWithContext:(id)arg1;
@property(nonatomic) unsigned long long presetID;
@property(retain, nonatomic) TSWPShapeStyle *tableNameShapeStyle;
@property(retain, nonatomic) TSWPParagraphStyle *tableNameStyle;
- (void)setHeaderRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerRowTextStyle;
- (void)setFooterRowTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *footerRowTextStyle;
- (void)setHeaderColumnTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *headerColumnTextStyle;
- (void)setBodyTextStyle:(id)arg1;
@property(readonly, nonatomic) TSWPParagraphStyle *bodyTextStyle;
- (void)setHeaderRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerRowCellStyle;
- (void)setFooterRowCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *footerRowCellStyle;
- (void)setHeaderColumnCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *headerColumnCellStyle;
- (void)setBodyCellStyle:(id)arg1;
@property(readonly, nonatomic) TSTCellStyle *bodyCellStyle;
@property(retain, nonatomic) TSTTableStyle *tableStyle;

@end

__attribute__((visibility("hidden")))
@interface TSTLocalStylesKey : NSObject <NSCopying>
{
    TSTCellStyle *_cellStyle;
    TSWPParagraphStyle *_textStyle;
}

@property(retain) TSWPParagraphStyle *textStyle; // @synthesize textStyle=_textStyle;
@property(retain) TSTCellStyle *cellStyle; // @synthesize cellStyle=_cellStyle;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface TSTLocalAccumulator : NSObject
{
    CDStruct_0441cfb5 _idOfFirstOccurence;
    unsigned long long _count;
}

@property unsigned long long count; // @synthesize count=_count;
@property CDStruct_0441cfb5 idOfFirstOccurence; // @synthesize idOfFirstOccurence=_idOfFirstOccurence;
- (id).cxx_construct;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStrokePresetList : NSObject
{
    unsigned long long mCount;
    TSTTableStrokePresetData *mPresets[15];
}

+ (id)instanceWithArchive:(const struct StrokePresetListArchive *)arg1 unarchiver:(id)arg2;
+ (id)strokePresetListForDefaultPropertyMapWithFatStroke:(id)arg1 andThinStroke:(id)arg2;
+ (id)strokePresetListForDefaultPropertyMapWithHorizontalStroke:(id)arg1 verticalStroke:(id)arg2 exteriorStroke:(id)arg3;
+ (id)strokePresetListForDefaultPropertyMapForTablePresetID:(unsigned long long)arg1 colors:(id)arg2;
+ (id)init;
- (void)setStroke:(id)arg1 forPresetIndex:(unsigned long long)arg2;
- (unsigned int)maskForStrokePresets:(id)arg1;
- (unsigned int)maskForStrokePreset:(unsigned long long)arg1;
- (id)exteriorStrokeForStrokePreset:(unsigned long long)arg1;
- (id)verticalStrokeForStrokePreset:(unsigned long long)arg1;
- (id)horizontalStrokeForStrokePreset:(unsigned long long)arg1;
- (void)saveToArchive:(struct StrokePresetListArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct StrokePresetListArchive *)arg1 unarchiver:(id)arg2;
- (void)setStrokePreset:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)presetAtIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)count;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSTTableStrokePresetData : NSObject
{
    TSDStroke *mHorizontalStroke;
    TSDStroke *mVerticalStroke;
    TSDStroke *mExteriorStroke;
    unsigned int mVisibleMask;
}

@property(nonatomic) unsigned int mask; // @synthesize mask=mVisibleMask;
@property(retain, nonatomic) TSDStroke *exteriorStroke; // @synthesize exteriorStroke=mExteriorStroke;
@property(retain, nonatomic) TSDStroke *verticalStroke; // @synthesize verticalStroke=mVerticalStroke;
@property(retain, nonatomic) TSDStroke *horizontalStroke; // @synthesize horizontalStroke=mHorizontalStroke;
- (_Bool)isEqual:(id)arg1;
- (void)saveToArchive:(struct StrokePresetDataArchive *)arg1 archiver:(id)arg2;
- (id)initWithDeprecatedArchive:(const struct Deprecated_StrokePresetDataArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithArchive:(const struct StrokePresetDataArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithMask:(unsigned int)arg1 horizontalStroke:(id)arg2 verticalStroke:(id)arg3 exteriorStroke:(id)arg4;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutCellIterator : TSTCellIterator
{
    TSTMasterLayout *mMasterLayout;
    CDStruct_5f1f7aa9 mLayoutRange;
    CDStruct_0441cfb5 mLayoutCellID;
    TSTCell *mLayoutCell;
    CDStruct_6188ab8e mModelIteratorData;
    _Bool mQueriedModel;
    _Bool mModelIteratorHasCell;
    unsigned short mNumberOfLayoutColumns;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfRows;
}

@property(readonly, nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=mMasterLayout;
- (id).cxx_construct;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (void)dealloc;
- (id)initWithMasterLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2 flags:(unsigned long long)arg3;
- (id)initWithMasterLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithLayout:(id)arg1 range:(CDStruct_5f1f7aa9)arg2;
- (id)initWithMasterLayout:(id)arg1;
- (id)initWithLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeDefaultVendor : NSObject
{
    _Bool _isValid;
    unsigned int _headerSideBorderColumn;
    unsigned int _headerColumnSeparatorColumn;
    unsigned int _bodySideBorderColumn;
    unsigned int _topBorderRow;
    unsigned int _headerRowSeparatorRow;
    unsigned int _footerRowSeparatorRow;
    unsigned int _bottomBorderRow;
    id <TSTTableStrokeProviding> _strokeProvider;
    TSTMasterLayout *_masterLayout;
    NSPointerArray *_strokeTypeToLayerMap;
}

@property(nonatomic) unsigned int bottomBorderRow; // @synthesize bottomBorderRow=_bottomBorderRow;
@property(nonatomic) unsigned int footerRowSeparatorRow; // @synthesize footerRowSeparatorRow=_footerRowSeparatorRow;
@property(nonatomic) unsigned int headerRowSeparatorRow; // @synthesize headerRowSeparatorRow=_headerRowSeparatorRow;
@property(nonatomic) unsigned int topBorderRow; // @synthesize topBorderRow=_topBorderRow;
@property(nonatomic) unsigned int bodySideBorderColumn; // @synthesize bodySideBorderColumn=_bodySideBorderColumn;
@property(nonatomic) unsigned int headerColumnSeparatorColumn; // @synthesize headerColumnSeparatorColumn=_headerColumnSeparatorColumn;
@property(nonatomic) unsigned int headerSideBorderColumn; // @synthesize headerSideBorderColumn=_headerSideBorderColumn;
@property(retain, nonatomic) NSPointerArray *strokeTypeToLayerMap; // @synthesize strokeTypeToLayerMap=_strokeTypeToLayerMap;
@property(nonatomic) _Bool isValid; // @synthesize isValid=_isValid;
@property(nonatomic) TSTMasterLayout *masterLayout; // @synthesize masterLayout=_masterLayout;
@property(nonatomic) id <TSTTableStrokeProviding> strokeProvider; // @synthesize strokeProvider=_strokeProvider;
- (void)p_updateStrokeLayer:(id)arg1 forRowStrokeType:(int)arg2;
- (void)p_updateStrokeLayer:(id)arg1 forColumnStrokeType:(int)arg2;
- (int)p_strokeTypeForRow:(unsigned int)arg1;
- (int)p_strokeTypeForColumn:(unsigned int)arg1;
- (_Bool)validate;
- (_Bool)validateGeometry;
- (void)invalidate;
- (id)strokeLayerForStrokeType:(int)arg1;
- (id)strokeLayerForRow:(unsigned int)arg1;
- (id)strokeLayerForColumn:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithMasterLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableDataObjectKeyDict : NSObject
{
    struct hash_map<SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int, TSTTableDataObjectHasher, TSTTableDataObjectEqual, std::__1::allocator<std::__1::pair<const SFUtility::ObjcSharedPtr<TSTTableDataObject>, unsigned int>>> *mMap;
}

- (unsigned long long)count;
- (void)removeAllKeys;
- (void)removeKeyForObject:(id)arg1;
- (void)setKey:(unsigned int)arg1 forObject:(id)arg2;
- (unsigned int)keyForObject:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTExpressionNode : TSPObject <TSTFormulaToken>
{
    NSArray *mChildren;
    TSCEFunctionArgumentSpec *mArgumentSpec;
    TSTWPTokenAttachment *mTokenAttachment;
    unsigned long long mFirstIndex;
    unsigned long long mLastIndex;
    NSString *mWhitespaceBefore;
    NSString *mWhitespaceAfter;
}

@property(retain, nonatomic) NSString *whitespaceAfter; // @synthesize whitespaceAfter=mWhitespaceAfter;
@property(retain, nonatomic) NSString *whitespaceBefore; // @synthesize whitespaceBefore=mWhitespaceBefore;
@property(nonatomic) unsigned long long lastIndex; // @synthesize lastIndex=mLastIndex;
@property(nonatomic) unsigned long long firstIndex; // @synthesize firstIndex=mFirstIndex;
@property(nonatomic) TSTWPTokenAttachment *tokenAttachment; // @synthesize tokenAttachment=mTokenAttachment;
- (id)description;
- (void)saveToArchive:(struct ExpressionNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ExpressionNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (long long)compareFirstLastIndices:(id)arg1;
- (void)enumerateExpressionNodesUsingBlock:(CDUnknownBlockType)arg1;
- (void)addTSTCanvasReferencesToSet:(id)arg1 inRangeContext:(int)arg2 withColorHelper:(id)arg3 preferringNodesFromStorage:(id)arg4 allVisitedNodes:(id)arg5;
- (_Bool)hasMenu;
@property(readonly, retain, nonatomic) TSDMultiPaneController *popover;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)detokenizedText;
- (id)formulaPlainText;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
@property(retain, nonatomic) NSArray *children;
@property(retain, nonatomic) TSCEFunctionArgumentSpec *argumentSpec;
- (id)copyByResolvingIdentifiers:(id)arg1 hostTable:(id)arg2 forceReferenceInterpretation:(_Bool)arg3;
- (_Bool)forceReferenceInterpretationOfChildren;
- (id)deepCopyIntoContext:(id)arg1 bakeModes:(_Bool)arg2 withTokenDict:(id)arg3;
- (id)copyIntoContext:(id)arg1 bakeModes:(_Bool)arg2 children:(id)arg3;
- (void)dealloc;
- (id)initWithContext:(id)arg1 firstIndex:(unsigned long long)arg2 lastIndex:(unsigned long long)arg3;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) NSString *string; // @dynamic string;
@property(readonly, nonatomic) int tokenType; // @dynamic tokenType;

@end

__attribute__((visibility("hidden")))
@interface TSTFormula : NSObject <NSCopying>
{
    TSTExpressionNode *mExpressionTree;
    TSCECalculationEngine *mCalculationEngine;
    TSTTableInfo *mHostInfo;
    NSString *mInitialWhitespace;
    CDStruct_0441cfb5 mHostCell;
    _Bool mSyntaxError;
    _Bool mFixupFormulas;
    _Bool mFormulaWasFixable;
    _Bool mFormulaFixupsShouldStick;
    _Bool mEmpty;
    _Bool mRequireEqualsToken;
}

+ (id)p_charactersToTemporarilyChopOffEndToFixSyntaxError;
+ (int)formulaQuoteContextAtCharIndex:(unsigned long long)arg1 inStorage:(id)arg2;
+ (id)equalsCharacters;
+ (id)rightParenCharacters;
+ (id)leftParenCharacters;
+ (id)doubleQuoteCharacters;
+ (id)leadingSingleQuoteEscapeCharacters;
+ (id)singleQuoteCharacters;
+ (id)formulaForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2 inTable:(id)arg3;
@property(nonatomic) _Bool requireEqualsToken; // @synthesize requireEqualsToken=mRequireEqualsToken;
@property(copy, nonatomic) NSString *initialWhitespace; // @synthesize initialWhitespace=mInitialWhitespace;
@property(nonatomic, getter=isEmpty) _Bool empty; // @synthesize empty=mEmpty;
@property(readonly, nonatomic) _Bool formulaFixupsShouldStick; // @synthesize formulaFixupsShouldStick=mFormulaFixupsShouldStick;
@property(readonly, nonatomic) _Bool formulaWasFixable; // @synthesize formulaWasFixable=mFormulaWasFixable;
@property(nonatomic) _Bool fixupFormulas; // @synthesize fixupFormulas=mFixupFormulas;
@property(nonatomic, getter=isSyntaxError) _Bool syntaxError; // @synthesize syntaxError=mSyntaxError;
@property(retain, nonatomic) TSCECalculationEngine *calculationEngine; // @synthesize calculationEngine=mCalculationEngine;
@property(retain, nonatomic) TSTExpressionNode *expressionTree; // @synthesize expressionTree=mExpressionTree;
- (id).cxx_construct;
- (id)p_formulaAsTextReturningTokenValues:(_Bool)arg1;
- (id)formulaDetokenizedText;
- (id)formulaPlainText;
- (id)p_fixFormula:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)reparseWithStorage:(id)arg1 adjustExpressionTree:(CDUnknownBlockType)arg2;
- (void)reparseWithStorage:(id)arg1;
- (id)nodesToCheckForBareArgumentPlaceholders;
- (_Bool)hasBareArgumentPlaceholders;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
@property(readonly, nonatomic) struct TSCEFormula formula;
- (void)reset;
- (void)dealloc;
- (id)initWithCalculationEngine:(id)arg1 hostCell:(CDStruct_0441cfb5)arg2 hostTable:(id)arg3;
- (id)initWithContext:(id)arg1 calculationEngine:(id)arg2 hostCell:(CDStruct_0441cfb5)arg3 TSCEFormula:(const struct TSCEFormula *)arg4 ownerID:(struct __CFUUID *)arg5;
- (id)initWithCalculationEngine:(id)arg1 expressionTree:(id)arg2 hostCell:(CDStruct_0441cfb5)arg3 hostTable:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTOperatorNode : TSTExpressionNode
{
    unsigned short mOperator;
}

- (void)saveToArchive:(struct OperatorNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct OperatorNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)argumentSpec;
- (id)string;
- (int)tokenType;
@property(nonatomic) unsigned short operatorChar;
- (_Bool)forceReferenceInterpretationOfChildren;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2;
- (id)initWithContext:(id)arg1 operatorChar:(unsigned short)arg2 children:(id)arg3 firstIndex:(unsigned long long)arg4 lastIndex:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSTNumberNode : TSTExpressionNode
{
    double mNumber;
    NSString *mString;
}

- (void)saveToArchive:(struct NumberNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct NumberNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)exportString;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)argumentSpec;
@property(retain, nonatomic) NSString *string;
- (int)tokenType;
@property(nonatomic) double number;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 string:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 number:(double)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 number:(double)arg2 string:(id)arg3 firstIndex:(unsigned long long)arg4 lastIndex:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeWidthCache : NSObject
{
    unsigned int mCount;
    struct _opaque_pthread_rwlock_t mLock;
    vector_3f7ffb82 mStrokeWidth;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)invalidate;
- (void)setStrokeWidth:(double)arg1 forGridIndex:(unsigned int)arg2;
- (double)strokeWidthForGridIndex:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTFunctionNode : TSTExpressionNode
{
    int mFunctionIndex;
    TSTFunctionEndNode *mFunctionEndNode;
    NSString *mWhitespaceAfterFunctionName;
    NSString *mWhitespaceAfterLeftParen;
    NSArray *mWhitespaceAfterDelimiters;
    NSString *mInvalidFunctionName;
}

+ (id)newSumNodeWithContext:(id)arg1 children:(id)arg2;
+ (id)newDefaultFunctionNodeWithContext:(id)arg1 functionIndex:(int)arg2;
@property(retain, nonatomic) NSString *invalidFunctionName; // @synthesize invalidFunctionName=mInvalidFunctionName;
@property(retain, nonatomic) NSString *whitespaceAfterFunctionName; // @synthesize whitespaceAfterFunctionName=mWhitespaceAfterFunctionName;
@property(retain, nonatomic) NSArray *whitespaceAfterDelimiters; // @synthesize whitespaceAfterDelimiters=mWhitespaceAfterDelimiters;
@property(retain) NSString *whitespaceAfterLeftParen; // @synthesize whitespaceAfterLeftParen=mWhitespaceAfterLeftParen;
@property(readonly, nonatomic) int functionIndex; // @synthesize functionIndex=mFunctionIndex;
- (void)p_resetArgumentSpecForChildren;
- (id)p_functionSpec;
- (void)saveToArchive:(struct FunctionNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct FunctionNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)addTSTCanvasReferencesToSet:(id)arg1 inRangeContext:(int)arg2 withColorHelper:(id)arg3 preferringNodesFromStorage:(id)arg4 allVisitedNodes:(id)arg5;
- (id)formulaPlainText;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2 unwrapped:(_Bool)arg3;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
- (_Bool)isDescendantOfChild:(id)arg1;
- (_Bool)isMissingRequiredArgument;
- (_Bool)isEmptyFunctionNode;
- (void)resurrectModeTokens;
@property(retain, nonatomic) TSTFunctionEndNode *functionEndNode;
- (void)setChildren:(id)arg1;
@property(readonly, nonatomic) short maxArguments;
@property(readonly, nonatomic) short minArguments;
@property(readonly, nonatomic) unsigned long long numArguments;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 functionIndex:(int)arg2 children:(id)arg3 firstIndex:(unsigned long long)arg4 lastIndex:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSTBooleanNode : TSTExpressionNode
{
    _Bool mValue;
}

- (void)saveToArchive:(struct BooleanNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct BooleanNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
@property(nonatomic) _Bool value;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 boolValue:(_Bool)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTArrayNode : TSTExpressionNode
{
    struct TSCEVectorIndexPair mDimensions;
    NSString *mWhitespaceBeforeFirstChild;
    NSArray *mWhitespaceAfterDelimiters;
}

@property(retain) NSArray *whitespaceAfterDelimiters; // @synthesize whitespaceAfterDelimiters=mWhitespaceAfterDelimiters;
@property(retain) NSString *whitespaceBeforeFirstChild; // @synthesize whitespaceBeforeFirstChild=mWhitespaceBeforeFirstChild;
- (id).cxx_construct;
- (void)saveToArchive:(struct ArrayNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ArrayNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)argumentSpec;
- (id)string;
- (int)tokenType;
- (struct TSCEVectorIndexPair)dimensions;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 firstIndex:(unsigned long long)arg2 lastIndex:(unsigned long long)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 columns:(unsigned char)arg3 rows:(unsigned short)arg4 firstIndex:(unsigned long long)arg5 lastIndex:(unsigned long long)arg6;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTListNode : TSTExpressionNode
{
    NSString *mWhitespaceAfterLeftParen;
    NSArray *mWhitespaceAfterDelimiters;
}

@property(retain, nonatomic) NSArray *whitespaceAfterDelimiters; // @synthesize whitespaceAfterDelimiters=mWhitespaceAfterDelimiters;
@property(retain) NSString *whitespaceAfterLeftParen; // @synthesize whitespaceAfterLeftParen=mWhitespaceAfterLeftParen;
- (void)saveToArchive:(struct ListNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ListNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)argumentSpec;
- (id)string;
- (int)tokenType;
- (id)description;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 firstIndex:(unsigned long long)arg2 lastIndex:(unsigned long long)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTWPLayout : TSWPLayout
{
    _Bool _cachedCellWraps;
    _Bool _cacheIsValid;
    CDStruct_0441cfb5 _cachedCellID;
    int _cachedVerticalAlignment;
    int _cachedParagraphAlignment;
    unsigned int _cachedAutoSizeFlags;
    TSTCellStyle *_cachedCellStyle;
    TSWPParagraphStyle *_cachedTextStyle;
    CDStruct_5f1f7aa9 _cachedMergeRange;
    CDStruct_5f1f7aa9 _cachedMaskSpillRange;
    TSWPPadding *_cachedPadding;
    struct CGRect _cachedMaskRect;
    struct CGRect _cachedAutosizedFrame;
}

@property(nonatomic) _Bool cacheIsValid; // @synthesize cacheIsValid=_cacheIsValid;
@property(nonatomic) struct CGRect cachedAutosizedFrame; // @synthesize cachedAutosizedFrame=_cachedAutosizedFrame;
@property(retain, nonatomic) TSWPPadding *cachedPadding; // @synthesize cachedPadding=_cachedPadding;
@property(nonatomic) CDStruct_5f1f7aa9 cachedMaskSpillRange; // @synthesize cachedMaskSpillRange=_cachedMaskSpillRange;
@property(nonatomic) struct CGRect cachedMaskRect; // @synthesize cachedMaskRect=_cachedMaskRect;
@property(nonatomic) unsigned int cachedAutoSizeFlags; // @synthesize cachedAutoSizeFlags=_cachedAutoSizeFlags;
@property(nonatomic) CDStruct_5f1f7aa9 cachedMergeRange; // @synthesize cachedMergeRange=_cachedMergeRange;
@property(nonatomic) int cachedParagraphAlignment; // @synthesize cachedParagraphAlignment=_cachedParagraphAlignment;
@property(nonatomic) int cachedVerticalAlignment; // @synthesize cachedVerticalAlignment=_cachedVerticalAlignment;
@property(nonatomic) _Bool cachedCellWraps; // @synthesize cachedCellWraps=_cachedCellWraps;
@property(retain, nonatomic) TSWPParagraphStyle *cachedTextStyle; // @synthesize cachedTextStyle=_cachedTextStyle;
@property(retain, nonatomic) TSTCellStyle *cachedCellStyle; // @synthesize cachedCellStyle=_cachedCellStyle;
@property(nonatomic) CDStruct_0441cfb5 cachedCellID; // @synthesize cachedCellID=_cachedCellID;
- (id).cxx_construct;
- (void)validate;
- (void)invalidate;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 parentLayout:(id)arg2 cellID:(CDStruct_0441cfb5)arg3 frame:(struct CGRect)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTTableSortOrder : NSObject <NSCopying>
{
    NSIndexSet *mCachedIndices;
    int mType;
    NSArray *mRules;
}

+ (id)sortOrderWithRules:(id)arg1 type:(int)arg2;
@property(readonly, nonatomic) NSArray *rules; // @synthesize rules=mRules;
@property(readonly, nonatomic) int type; // @synthesize type=mType;
- (void)encodeToArchive:(struct TableSortOrderArchive *)arg1;
- (id)initFromArchive:(const struct TableSortOrderArchive *)arg1;
- (id)sortOrderByReplacingRulesWithRules:(id)arg1;
- (id)sortOrderByReplacingRuleAtIndex:(unsigned long long)arg1 withRule:(id)arg2;
- (id)sortOrderByRemovingRuleAtIndex:(unsigned long long)arg1;
- (id)sortOrderByAddingRule:(id)arg1;
- (id)sortOrderByChangingTypeTo:(int)arg1;
@property(readonly, nonatomic) NSIndexSet *columnIndices;
@property(readonly, nonatomic) unsigned long long ruleCount;
@property(readonly, nonatomic) _Bool empty;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRules:(id)arg1 type:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTStringNode : TSTExpressionNode
{
    NSString *mValue;
}

- (id)p_languageGuessForString:(id)arg1 isRTL:(_Bool *)arg2;
- (void)saveToArchive:(struct StringNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct StringNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)formulaPlainText;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
@property(retain, nonatomic) NSString *value;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (void)dealloc;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 stringValue:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTDateNode : TSTExpressionNode
{
    NSDate *mValue;
    _Bool mBlank;
    NSString *mDateFormat;
}

@property(nonatomic, getter=isBlank) _Bool blank; // @synthesize blank=mBlank;
- (id)description;
- (void)saveToArchive:(struct DateNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct DateNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (struct TSTDurationWrapper)durationWrapper;
- (id)date;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
@property(retain, nonatomic) NSString *format;
@property(retain, nonatomic) NSDate *value;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 asBlank:(_Bool)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 dateValue:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTReferenceNode : TSTExpressionNode
{
    CDStruct_5744d895 mRangeReference;
    unsigned char mStickyBits;
    struct __CFUUID *mHostTableID;
    TSDMultiPaneController *mMenuPopoverController;
    _Bool mRangeWithFunction;
    TSCECalculationEngine *mCalculationEngine;
    int mRangeContext;
    NSString *mRefString;
    NSString *mFormulaPlainText;
    TSTReferenceColorHelper *mReferenceColorHelper;
    _Bool mBlankForKeyboardInsertion;
}

@property(retain, nonatomic) TSTReferenceColorHelper *referenceColorHelper; // @synthesize referenceColorHelper=mReferenceColorHelper;
@property(nonatomic) int rangeContext; // @synthesize rangeContext=mRangeContext;
@property(readonly, retain, nonatomic) TSCECalculationEngine *calculationEngine; // @synthesize calculationEngine=mCalculationEngine;
@property(nonatomic, getter=isRangeWithFunction) _Bool rangeWithFunction; // @synthesize rangeWithFunction=mRangeWithFunction;
@property(nonatomic) unsigned char stickyBits; // @synthesize stickyBits=mStickyBits;
- (id).cxx_construct;
- (void)saveToArchive:(struct ReferenceNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ReferenceNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_resetMenu;
- (_Bool)isValidReference;
- (void)p_invalidate;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)p_buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 forRangeComponent:(CDStruct_0441cfb5)arg2 stickyBits:(unsigned char)arg3 hostCell:(CDStruct_0441cfb5)arg4;
- (id)formulaPlainText;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
- (id)asTableSelection;
@property(nonatomic, getter=isBlankForKeyboardInsertion) _Bool blankForKeyboardInsertion;
@property(readonly, nonatomic, getter=isSimpleRowOrColumnReference) _Bool simpleRowOrColumnReference;
@property(readonly, nonatomic, getter=isResizable) _Bool resizable;
@property(readonly, nonatomic, getter=isLocalReference) _Bool localReference;
@property(readonly, nonatomic, getter=isSingleASTNode) _Bool singleASTNode;
@property(readonly, nonatomic, getter=isNonSpanningRange) _Bool nonSpanningRange;
@property(readonly, nonatomic, getter=isRange) _Bool range;
@property(nonatomic, setter=setHostTableID:) struct __CFUUID *hostTableID; // @synthesize hostTableID=mHostTableID;
@property(nonatomic, setter=setTableID:) struct __CFUUID *tableID;
@property(nonatomic) CDStruct_db54a1d4 rangeCoordinate; // @dynamic rangeCoordinate;
@property(nonatomic) CDStruct_5744d895 rangeReference; // @dynamic rangeReference;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithReferenceStart:(id)arg1 referenceEnd:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 calculationEngine:(id)arg2 cellRange:(struct)arg3 stickyBits:(unsigned char)arg4 hostTableID:(struct __CFUUID *)arg5 tableID:(struct __CFUUID *)arg6 referenceColorHelper:(id)arg7 firstIndex:(unsigned long long)arg8 lastIndex:(unsigned long long)arg9;

@end

__attribute__((visibility("hidden")))
@interface TSTDurationNode : TSTExpressionNode
{
    struct TSTDurationWrapper mValue;
    _Bool mBlank;
}

@property(nonatomic, getter=isBlank) _Bool blank; // @synthesize blank=mBlank;
@property(nonatomic) struct TSTDurationWrapper value; // @synthesize value=mValue;
- (id).cxx_construct;
- (id)description;
- (void)saveToArchive:(struct DurationNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct DurationNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)format;
- (struct TSTDurationWrapper)durationWrapper;
- (id)date;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 asBlank:(_Bool)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 duration:(struct TSTDurationWrapper)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTArgumentPlaceholderNode : TSTExpressionNode
{
    short mMode;
    NSString *mDetokenizedText;
}

+ (id)argumentSpecForFunctionIndex:(int)arg1 argumentIndex:(int)arg2;
@property(nonatomic) short mode; // @synthesize mode=mMode;
- (void)saveToArchive:(struct ArgumentPlaceholderNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ArgumentPlaceholderNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)hasMenu;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)detokenizedText;
- (id)formulaPlainText;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
- (id)bakedValue;
- (void)setArgumentSpec:(id)arg1;
- (void)p_invalidate;
- (id)copyIntoContext:(id)arg1 bakeModes:(_Bool)arg2 children:(id)arg3;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 argumentSpec:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 firstIndex:(unsigned long long)arg2 lastIndex:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTPostfixOperatorNode : TSTOperatorNode
{
}

- (void)saveToArchive:(struct PostfixOperatorNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct PostfixOperatorNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTPrefixOperatorNode : TSTOperatorNode
{
}

- (void)saveToArchive:(struct PrefixOperatorNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct PrefixOperatorNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTFunctionEndNode : TSTExpressionNode
{
    TSTFunctionNode *mFunctionNode;
}

- (void)saveToArchive:(struct FunctionEndNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct FunctionEndNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)exportString;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)string;
- (int)tokenType;
@property(nonatomic) TSTFunctionNode *functionNode;
- (void)dealloc;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 functionNode:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTWPRep : TSWPRep
{
}

- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTEmptyExpressionNode : TSTExpressionNode
{
}

- (id)description;
- (void)saveToArchive:(struct EmptyExpressionNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct EmptyExpressionNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)string;
- (int)tokenType;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTEphemeralCellMap : NSObject <TSTCellMap>
{
    CDStruct_0441cfb5 *mCellIDs;
    id *mCells;
    unsigned long long mCapacity;
    unsigned long long mCount;
    _Bool mMayModifyValuesReferencedByFormulas;
    _Bool mIgnoreHiddenCellsWhenApplying;
    _Bool mAppliesToHidden;
}

@property(nonatomic) _Bool appliesToHidden; // @synthesize appliesToHidden=mAppliesToHidden;
- (void)setMayModifyValuesReferencedByFormulas:(_Bool)arg1;
- (_Bool)mayModifyValuesReferencedByFormulas;
- (_Bool)mayModifyFormulasInCells;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (id)cellAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)cellIDAtIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5 *)cellIDs;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeLayerStack : NSObject
{
    struct _opaque_pthread_rwlock_t mRWLock;
    NSPointerArray *_strokeLayers;
    long long _stackKind;
    long long _type;
    long long _maxStrokeIndex;
}

+ (double)maxWidthForLeftStrokes:(id)arg1 mergedWithRightStrokes:(id)arg2 atRowIndex:(long long)arg3;
+ (double)maxWidthForLeftStrokes:(id)arg1 mergedWithRightStrokes:(id)arg2 inRange:(struct TSTSimpleRange)arg3 cachedMax:(double)arg4;
+ (double)maxWidthForTopStrokes:(id)arg1 mergedWithBottomStrokes:(id)arg2 atColumnIndex:(long long)arg3;
+ (double)maxWidthForTopStrokes:(id)arg1 mergedWithBottomStrokes:(id)arg2 inRange:(struct TSTSimpleRange)arg3 cachedMax:(double)arg4;
+ (id)mergeLeftStrokes:(id)arg1 withRightStrokes:(id)arg2;
+ (id)mergeTopStrokes:(id)arg1 withBottomStrokes:(id)arg2;
+ (id)strokeLayerStackWithStackKind:(long long)arg1 andStrokeLayer:(id)arg2 atLayerIndex:(long long)arg3;
+ (id)strokeLayerStackWithStackKind:(long long)arg1;
@property(nonatomic) long long maxStrokeIndex; // @synthesize maxStrokeIndex=_maxStrokeIndex;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) long long stackKind; // @synthesize stackKind=_stackKind;
@property(retain, nonatomic) NSPointerArray *strokeLayers; // @synthesize strokeLayers=_strokeLayers;
- (void)unlock;
- (void)lockForWrite;
- (void)lockForRead;
- (void)p_invalidateStrokesAtLayerIndex:(long long)arg1;
- (void)enumerateStrokesAndCapsInRange:(struct TSTSimpleRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateStrokesAndCapsFrom:(unsigned int)arg1 to:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateStrokesInRange:(struct TSTSimpleRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateStrokesFrom:(unsigned int)arg1 to:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)lookupStrokeAtIndex:(long long)arg1;
- (void)invalidateStrokesAtLayerIndex:(long long)arg1 atRange:(struct TSTSimpleRange)arg2;
- (void)invalidateStrokesAtLayerIndex:(long long)arg1;
- (_Bool)replaceStrokeLayerAtLayerIndex:(long long)arg1 withStrokeLayer:(id)arg2;
- (void)insertStroke:(id)arg1 atRange:(struct TSTSimpleRange)arg2 atLayerIndex:(long long)arg3;
- (void)dealloc;
- (id)initMergedCopyWithMajorStrokes:(id)arg1 andMinorStrokes:(id)arg2;
- (id)initWithStackKind:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeLayerTemporaryMergedStack : TSTStrokeLayerStack
{
}

+ (double)p_maxWidthForMajorStrokes:(id)arg1 mergedWithMinorStrokes:(id)arg2 atIndex:(long long)arg3;
+ (double)p_maxWidthForMajorStrokes:(id)arg1 mergedWithMinorStrokes:(id)arg2 inRange:(struct TSTSimpleRange)arg3 cachedMax:(double)arg4;
- (void)lockForWrite;
- (void)lockForRead;
- (void)unlock;
- (double)p_widthOfStrokesAtIndex:(long long)arg1;
- (double)p_maxWidthOfStrokesInRange:(struct TSTSimpleRange)arg1 cachedMax:(double)arg2;
- (id)initWithMajorStrokes:(id)arg1 andMinorStrokes:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTSortRuleReferenceTracker : NSObject <TSCEReferenceTrackerDelegate>
{
    TSTTableInfo *mTableInfo;
    NSMutableSet *mReferences;
    TSCEReferenceTracker *mReferenceTracker;
}

@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (id)initFromArchive:(const struct SortRuleReferenceTrackerArchive *)arg1 unarchiver:(id)arg2;
- (void)encodeToArchive:(struct SortRuleReferenceTrackerArchive *)arg1 archiver:(id)arg2;
- (id)commandForUpdatingWithSpec:(id)arg1 formulas:(id)arg2;
- (void)referencedCellWasModified:(id)arg1;
- (void)trackedReferenceWasDeleted:(id)arg1 fromOwnerID:(struct __CFUUID *)arg2;
- (id)cellRangeWasInserted:(CDStruct_5744d895)arg1;
- (_Bool)shouldRewriteOnTranspose;
- (_Bool)shouldRewriteOnCellMerge;
- (_Bool)shouldRewriteOnTectonicShift;
- (_Bool)shouldRewriteOnRangeMove;
- (_Bool)shouldRewriteOnSort;
- (void)setOwnerID:(struct __CFUUID *)arg1;
- (struct __CFUUID *)ownerID;
- (void)updateForSortRules:(id)arg1;
- (id)p_ruleReferenceForTrackedReference:(id)arg1;
- (unsigned char)p_columnForTrackedReference:(id)arg1;
- (CDStruct_39788696)p_cReferenceForColumnIndex:(unsigned char)arg1;
- (void)unregisterFromCalculationEngine;
- (void)registerWithCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineChoosingUniqueID:(id)arg1;
- (void)dealloc;
- (id)initWithTableInfo:(id)arg1 context:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTMasterLayout : NSObject <TSKChangeSourceObserver>
{
    TSKChangeNotifier *mChangeNotifier;
    int mReferenceCount;
    TSTTableInfo *mTableInfo;
    TSTWPColumnCache *mCellIDToWPColumnCache;
    TSTDupContentCache *mDupContentCache;
    TSTWPColumnCache *mTempWPColumnCache;
    TSTWidthHeightCache *mWidthHeightCache;
    TSTHiddenRowsColumnsCache *mHiddenRowsColumnsCache;
    NSMutableArray *mChangeDescriptors;
    NSObject<OS_dispatch_group> *mLayoutInFlight;
    TSUWidthLimitedQueue *mLayoutQueue;
    unsigned int mMaxConcurrentTasks;
    unsigned int mNumCellsPerTask;
    _Bool mHeaderColumnsFrozen;
    _Bool mHeaderRowsFrozen;
    _Bool mHeaderColumnsRepeat;
    _Bool mHeaderRowsRepeat;
    _Bool mTableNameEnabled;
    struct CGRect mTableNameBounds;
    double mCachedTableNameHeight;
    unsigned short mCachedNumberOfHeaderColumns;
    unsigned long long mCachedMaxNumberOfColumns;
    unsigned short mCachedNumberOfHeaderRows;
    unsigned short mCachedNumberOfFooterRows;
    unsigned long long mCachedMaxNumberOfRows;
    TSTStrokeDefaultVendor *mStrokesDefaultVendor;
    NSPointerArray *mTopRowStrokes;
    NSPointerArray *mBottomRowStrokes;
    NSPointerArray *mLeftColumnStrokes;
    NSPointerArray *mRightColumnStrokes;
    TSTConcurrentMutableIndexSet *mSpillStrokeColumns;
    struct _opaque_pthread_rwlock_t mStrokesRWLock;
    TSTStrokeWidthCache *mColumnToStrokeWidthCache;
    TSTStrokeWidthCache *mRowToStrokeHeightCache;
    TSTRWRetainedPointerKeyDictionary *mParaStyleToHeightCache;
    NSLock *mLock;
    _Bool mBandedFillIsValid;
    _Bool mUseBandedFill;
    TSDFill *mBandedFillObject;
    int mTableEnvironment;
    int mTableRowsBehavior;
    _Bool mTableDefaultFontHeightsAreValid;
    double mTableDefaultFontHeightForArea[4];
    _Bool mInDynamicLayoutMode;
    NSMutableSet *mDynamicLayouts;
    double mDynamicAddOrRemoveColumnElementSize;
    double mDynamicAddOrRemoveRowElementSize;
    _Bool mDynamicBandedFill;
    _Bool mDynamicBandedFillSetting;
    int mDynamicColumnAdjustment;
    id <TSTLayoutDynamicColumnSwapProtocol> mDynamicColumnSwapDelegate;
    double mDynamicColumnTabSize;
    id <TSTLayoutDynamicContentProtocol> mDynamicContentDelegate;
    TSUColor *mDynamicFontColor;
    CDStruct_5f1f7aa9 mDynamicFontColorCellRange;
    CDStruct_5f1f7aa9 mDynamicHidingRowsCols;
    int mDynamicHidingRowsColsDirection;
    CDStruct_5f1f7aa9 mDynamicHidingContent;
    CDStruct_5f1f7aa9 mDynamicHidingText;
    TSDInfoGeometry *mDynamicInfoGeometry;
    _Bool mDynamicRepResize;
    _Bool mDynamicRepressFrozenHeader;
    _Bool mDynamicResizingColumns;
    CDStruct_5f1f7aa9 mDynamicResizingColumnRange;
    double mDynamicResizingColumnAdjustment;
    _Bool mDynamicResizingRows;
    CDStruct_5f1f7aa9 mDynamicResizingRowRange;
    double mDynamicResizingRowAdjustment;
    CDStruct_5f1f7aa9 mDynamicRevealingRowsCols;
    int mDynamicRevealingRowsColsDirection;
    int mDynamicRowAdjustment;
    id <TSTLayoutDynamicRowSwapProtocol> mDynamicRowSwapDelegate;
    double mDynamicRowTabSize;
    TSDLayoutGeometry *mDynamicSavedLayoutGeometry;
    TSTCellRegion *mDynamicSelectionRegion;
    double mDynamicWidthResize;
    double mDynamicHeightResize;
    double mDynamicTableNameResize;
    TSTLayoutDynamicResizeInfo *mDynamicResizeInfo;
    CDStruct_0441cfb5 mDynamicSuppressingConditionalStylesCellID;
    id <TSTLayoutDynamicCellFillProtocol> mDynamicCellFillDelegate;
    _Bool mEmptyFilteredTable;
    TSWPEditingController *mContainedTextEditor;
    TSTMergeRangeSortedSet *mMergeRanges;
    _Bool mProcessHiddenRowsForExport;
    struct CGSize mMaximumPartitionSize;
}

+ (double)effectiveTableNameHeightForModel:(id)arg1;
+ (struct CGSize)tableNameTextSize:(id)arg1;
+ (id)tableNameTextEngine:(id)arg1;
@property(nonatomic) TSKChangeNotifier *changeNotifier; // @synthesize changeNotifier=mChangeNotifier;
@property(nonatomic) struct CGSize maximumPartitionSize; // @synthesize maximumPartitionSize=mMaximumPartitionSize;
@property(nonatomic) _Bool processHiddenRowsForExport; // @synthesize processHiddenRowsForExport=mProcessHiddenRowsForExport;
@property(nonatomic) TSTMergeRangeSortedSet *mergeRanges; // @synthesize mergeRanges=mMergeRanges;
@property(readonly, nonatomic) NSMutableArray *changeDescriptors; // @synthesize changeDescriptors=mChangeDescriptors;
@property(nonatomic) TSWPEditingController *containedTextEditor; // @synthesize containedTextEditor=mContainedTextEditor;
@property(readonly, nonatomic) CDStruct_0441cfb5 dynamicSuppressingConditionalStylesCellID; // @synthesize dynamicSuppressingConditionalStylesCellID=mDynamicSuppressingConditionalStylesCellID;
@property(readonly, nonatomic) double dynamicTableNameResize; // @synthesize dynamicTableNameResize=mDynamicTableNameResize;
@property(readonly, nonatomic) TSTCellRegion *dynamicSelectionRegion; // @synthesize dynamicSelectionRegion=mDynamicSelectionRegion;
@property(copy, nonatomic) TSDLayoutGeometry *dynamicSavedLayoutGeometry; // @synthesize dynamicSavedLayoutGeometry=mDynamicSavedLayoutGeometry;
@property(readonly, nonatomic) double dynamicRowTabSize; // @synthesize dynamicRowTabSize=mDynamicRowTabSize;
@property(readonly, nonatomic) int dynamicRowAdjustment; // @synthesize dynamicRowAdjustment=mDynamicRowAdjustment;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingRowRange; // @synthesize dynamicResizingRowRange=mDynamicResizingRowRange;
@property(readonly, nonatomic) double dynamicResizingRowAdjustment; // @synthesize dynamicResizingRowAdjustment=mDynamicResizingRowAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingRows; // @synthesize dynamicResizingRows=mDynamicResizingRows;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicResizingColumnRange; // @synthesize dynamicResizingColumnRange=mDynamicResizingColumnRange;
@property(readonly, nonatomic) double dynamicResizingColumnAdjustment; // @synthesize dynamicResizingColumnAdjustment=mDynamicResizingColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicResizingColumns; // @synthesize dynamicResizingColumns=mDynamicResizingColumns;
@property(nonatomic) double dynamicWidthResize; // @synthesize dynamicWidthResize=mDynamicWidthResize;
@property(nonatomic) double dynamicHeightResize; // @synthesize dynamicHeightResize=mDynamicHeightResize;
@property(readonly, nonatomic) TSDInfoGeometry *dynamicInfoGeometry; // @synthesize dynamicInfoGeometry=mDynamicInfoGeometry;
@property(nonatomic) _Bool dynamicRepResize; // @synthesize dynamicRepResize=mDynamicRepResize;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 dynamicFontColorCellRange; // @synthesize dynamicFontColorCellRange=mDynamicFontColorCellRange;
@property(readonly, nonatomic) TSUColor *dynamicFontColor; // @synthesize dynamicFontColor=mDynamicFontColor;
@property(readonly, nonatomic) double dynamicColumnTabSize; // @synthesize dynamicColumnTabSize=mDynamicColumnTabSize;
@property(readonly, nonatomic) int dynamicColumnAdjustment; // @synthesize dynamicColumnAdjustment=mDynamicColumnAdjustment;
@property(readonly, nonatomic) _Bool dynamicBandedFillSetting; // @synthesize dynamicBandedFillSetting=mDynamicBandedFillSetting;
@property(readonly, nonatomic) _Bool dynamicBandedFill; // @synthesize dynamicBandedFill=mDynamicBandedFill;
@property(readonly, nonatomic) double dynamicAddOrRemoveRowElementSize; // @synthesize dynamicAddOrRemoveRowElementSize=mDynamicAddOrRemoveRowElementSize;
@property(readonly, nonatomic) double dynamicAddOrRemoveColumnElementSize; // @synthesize dynamicAddOrRemoveColumnElementSize=mDynamicAddOrRemoveColumnElementSize;
@property(readonly, nonatomic) NSMutableSet *dynamicLayouts; // @synthesize dynamicLayouts=mDynamicLayouts;
@property(readonly, nonatomic) _Bool inDynamicLayoutMode; // @synthesize inDynamicLayoutMode=mInDynamicLayoutMode;
@property(nonatomic) unsigned int numCellsPerTask; // @synthesize numCellsPerTask=mNumCellsPerTask;
@property(nonatomic) unsigned int maxConcurrentTasks; // @synthesize maxConcurrentTasks=mMaxConcurrentTasks;
@property(readonly, nonatomic) int tableRowsBehavior; // @synthesize tableRowsBehavior=mTableRowsBehavior;
@property(nonatomic) int tableEnvironment; // @synthesize tableEnvironment=mTableEnvironment;
@property(readonly, nonatomic) TSDFill *bandedFillObject; // @synthesize bandedFillObject=mBandedFillObject;
@property(readonly, nonatomic) TSTHiddenRowsColumnsCache *hiddenRowsColumnsCache; // @synthesize hiddenRowsColumnsCache=mHiddenRowsColumnsCache;
@property(readonly, nonatomic) TSTWidthHeightCache *widthHeightCache; // @synthesize widthHeightCache=mWidthHeightCache;
@property(readonly, nonatomic) TSTWPColumnCache *tempWPColumnCache; // @synthesize tempWPColumnCache=mTempWPColumnCache;
@property(readonly, nonatomic) TSTDupContentCache *dupContentCache; // @synthesize dupContentCache=mDupContentCache;
@property(readonly, nonatomic) TSTWPColumnCache *cellIDToWPColumnCache; // @synthesize cellIDToWPColumnCache=mCellIDToWPColumnCache;
@property(readonly, nonatomic) TSTStrokeDefaultVendor *strokesDefaultVendor; // @synthesize strokesDefaultVendor=mStrokesDefaultVendor;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (id).cxx_construct;
- (double)fontHeightOfParagraphStyle:(id)arg1;
- (struct UIEdgeInsets)defaultPaddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)paddingForCellID:(CDStruct_0441cfb5)arg1;
- (struct UIEdgeInsets)edgeInsetsFromPadding:(id)arg1;
- (id)accountingParagraphStylePropertyMapForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)newTextEngineForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)waitForLayoutToComplete;
- (void)processLayoutTask:(id)arg1;
- (void)measureTextForLayoutState:(id)arg1;
- (void)queueCellForValidation:(CDStruct_5f1f7aa9)arg1 cell:(id)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 wrap:(_Bool)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 prop:(_Bool)arg7 layoutCacheFlags:(int)arg8 layoutTask:(id)arg9;
- (id)validateCellForDrawing:(CDStruct_0441cfb5)arg1 cell:(id)arg2 contents:(id)arg3 wrap:(_Bool)arg4 verticalAlignment:(int)arg5 padding:(id)arg6 layoutCacheFlags:(int)arg7 pageNumber:(unsigned long long)arg8 pageCount:(unsigned long long)arg9;
- (void)validateFittingWidthsForRegion:(id)arg1;
- (id)validateFittingInfoForChangeDescriptors:(id)arg1 rowsNeedingFittingInfo:(id)arg2 regionForStrokeValidation:(id)arg3;
- (id)p_newCellRegionForValidatingFittingInfoForRegion:(id)arg1 inserting:(_Bool)arg2 rowsCols:(int)arg3 inRange:(CDStruct_5f1f7aa9)arg4;
- (void)p_validateFittingInfoForCellID:(CDStruct_0441cfb5)arg1 inMergeRange:(CDStruct_5f1f7aa9)arg2;
- (CDStruct_0441cfb5)p_validateFittingInfoForEmptyCellsBetween:(CDStruct_0441cfb5)arg1 andCellID:(CDStruct_0441cfb5)arg2 inRange:(CDStruct_5f1f7aa9)arg3 widthHeightCollection:(id)arg4;
- (void)p_validateFittingInfoForEmptyCellsOnSingleRowBetween:(CDStruct_0441cfb5)arg1 andEndCellID:(CDStruct_0441cfb5)arg2 widthHeightCollection:(id)arg3;
- (void)validateFittingInfoWithCellRange:(CDStruct_5f1f7aa9)arg1 regionForStrokeValidation:(id)arg2;
- (void)validateFittingInfoWithCellRangeWorker:(CDStruct_5f1f7aa9)arg1 regionForStrokeValidation:(id)arg2;
- (void)validateFittingInfoForCell:(id)arg1 cellID:(CDStruct_0441cfb5)arg2 mergeRange:(CDStruct_5f1f7aa9)arg3 setFitting:(_Bool)arg4 layoutTask:(id)arg5 widthHeightCollection:(id)arg6;
- (void)validateRowVisibility:(id)arg1;
- (void)updateWHCForMergeRanges;
- (void)validateChangeDescriptorQueue;
- (void)validateMasterLayoutForChangeDescriptors:(id)arg1;
- (void)validate;
- (void)wasRemovedFromDocumentRoot;
- (void)willBeAddedToDocumentRoot:(id)arg1;
- (void)addChangeDescriptor:(id)arg1;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2 andStrokeRange:(CDStruct_5f1f7aa9)arg3;
- (void)addChangeDescriptorWithType:(int)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)p_processChange:(id)arg1 forChangeSource:(id)arg2;
@property(readonly, nonatomic) _Bool isGrouped;
- (id)adjustedDynamicSavedLayoutGeometry;
- (struct CGAffineTransform)transformForTargetSize:(struct CGSize)arg1 withRawTableSize:(struct CGSize)arg2 andStrokeDelta:(struct CGSize)arg3;
- (void)validateDynamicResizeInfo;
- (void)invalidateDynamicResizeInfo;
- (void)updateDynamicResizeInfo:(id)arg1;
- (void)captureDynamicResizeInfo;
- (_Bool)isDynamicallySwappingColumns;
@property(readonly, nonatomic) id <TSTLayoutDynamicColumnSwapProtocol> dynamicColumnSwapDelegate; // @synthesize dynamicColumnSwapDelegate=mDynamicColumnSwapDelegate;
- (_Bool)isDynamicallySwappingRows;
@property(readonly, nonatomic) id <TSTLayoutDynamicRowSwapProtocol> dynamicRowSwapDelegate; // @synthesize dynamicRowSwapDelegate=mDynamicRowSwapDelegate;
- (_Bool)isDynamicallyChangingFontColorOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyChangingContent;
@property(readonly, nonatomic) id <TSTLayoutDynamicContentProtocol> dynamicContentDelegate; // @synthesize dynamicContentDelegate=mDynamicContentDelegate;
- (_Bool)isDynamicallyChangingCellFill;
@property(readonly, nonatomic) id <TSTLayoutDynamicCellFillProtocol> dynamicCellFillDelegate;
- (void)updateDynamicCellFillDelegate:(id)arg1;
- (void)updateDynamicSuppressingConditionalStylesCellID:(CDStruct_0441cfb5)arg1;
- (void)updateDynamicColumnSwapDelegate:(id)arg1;
- (void)updateDynamicRowSwapDelegate:(id)arg1;
- (void)updateDynamicFontColor:(id)arg1 andRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicContentDelegate:(id)arg1;
- (void)updateDynamicRevealingRowsCols:(int)arg1 revealingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicInfoGeometry:(id)arg1;
- (void)updateDynamicHidingText:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingContent:(CDStruct_5f1f7aa9)arg1;
- (void)updateDynamicHidingRowsCols:(int)arg1 hidingCellRange:(CDStruct_5f1f7aa9)arg2;
- (void)updateDynamicRepressFrozenHeader:(_Bool)arg1;
- (void)updateDynamicBandedFill:(_Bool)arg1 setting:(_Bool)arg2;
- (void)updateDynamicRowTabSize:(double)arg1;
- (void)updateDynamicColumnTabSize:(double)arg1;
- (_Bool)updateDynamicChangeRowOrColumnCount:(int)arg1 count:(int)arg2 newlyAddedElementSize:(double)arg3;
- (_Bool)isDynamicallyRepressingFrozenHeaders;
- (_Bool)isDynamicallySettingBandedFill;
- (_Bool)isDynamicallyRowTabResizing;
- (_Bool)isDynamicallyColumnTabResizing;
- (_Bool)isDynamicallyChangingSelection;
- (void)updateDynamicSelectionRegion:(id)arg1;
- (_Bool)isDynamicallyChangingRowOrColumnCount;
- (_Bool)isDynamicallyChangingColumnCount;
- (_Bool)isDynamicallyChangingRowCount;
- (_Bool)isDynamicallyResizingTableName;
- (void)updateDynamicTableNameSize:(double)arg1;
- (_Bool)isDynamicallyRevealingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyRevealingRowsCols;
- (void)updateDynamicResize:(int)arg1 resizingRange:(CDStruct_5f1f7aa9)arg2 resizeAdjustment:(double)arg3;
- (_Bool)isDynamicallyChangingInfoGeometry;
- (_Bool)isDynamicallyHidingTextOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsColsCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyHidingRowsCols:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyHidingRowsCols;
@property(readonly, nonatomic) TSTLayout *dynamicLayout;
- (_Bool)containsAnyContentInRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)firstEmptyBodyRow;
- (CDStruct_5f1f7aa9)expandCellRangeToVisibleNeighbors:(CDStruct_5f1f7aa9)arg1;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (_Bool)isDynamicallyResizingCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)isDynamicallyResizing:(int)arg1 rowColIndex:(unsigned short)arg2;
- (_Bool)isDynamicallyResizing:(int)arg1;
- (CDStruct_0441cfb5)layoutCellIDForModelCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)modelCellIDForStrokesOfLayoutCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)modelCellIDForLayoutCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)removeDynamicLayoutEndIfNecessary:(id)arg1;
- (void)addDynamicLayoutBeginIfNecessary:(id)arg1;
- (void)endDynamicMode;
- (void)cancelDynamicModeChanges;
- (void)p_cancelDynamicRowColCountChanges;
- (void)beginDynamicMode:(id)arg1;
- (void)calculateRawTableSize:(struct CGSize *)arg1 andStrokeDelta:(struct CGSize *)arg2;
- (void)validateDefaultFontHeights;
- (void)invalidateDefaultFontHeights;
- (void)validateTableRowsBehavior;
- (void)validateBandedFill;
- (void)invalidateBandedFill;
- (_Bool)shouldRowUseBandedFill:(unsigned short)arg1;
@property(readonly, nonatomic) _Bool useBandedFill;
- (void)validateStrokesForRegion:(id)arg1 regionAlreadyValidated:(id)arg2;
- (id)regionForStrokeValidationFromChangeDescriptors:(id)arg1;
- (void)updateStrokesForCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)enumerateMergedStrokesAndCapsForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesAndCapsForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridRow:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateMergedStrokesForGridColumn:(unsigned int)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)clearDynamicStrokesForCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)strokesForCellID:(CDStruct_0441cfb5)arg1 top:(id *)arg2 left:(id *)arg3 bottom:(id *)arg4 right:(id *)arg5;
- (void)setDynamicStrokesForCellID:(CDStruct_0441cfb5)arg1 topStroke:(id)arg2 bottomStroke:(id)arg3 rightStroke:(id)arg4 leftStroke:(id)arg5;
- (void)setCustomStrokesForCellID:(CDStruct_0441cfb5)arg1 topStroke:(id)arg2 bottomStroke:(id)arg3 rightStroke:(id)arg4 leftStroke:(id)arg5;
- (void)setStrokesForCellID:(CDStruct_0441cfb5)arg1 atLayerIndex:(long long)arg2 topStroke:(id)arg3 bottomStroke:(id)arg4 rightStroke:(id)arg5 leftStroke:(id)arg6;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 atColumnIndex:(unsigned int)arg2;
- (double)strokeHeightOfGridRow:(unsigned int)arg1 beginColumn:(unsigned int)arg2 endColumn:(unsigned int)arg3;
- (id)mergedStrokesForGridRow:(unsigned int)arg1;
- (id)p_strokesForGridRow:(unsigned int)arg1 isTop:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridRowForVisibility:(unsigned int *)arg1 isTop:(_Bool)arg2;
- (void)setStroke:(id)arg1 forGridRow:(unsigned int)arg2 atLayerIndex:(long long)arg3 isTop:(_Bool)arg4 beginColumn:(unsigned int)arg5 endColumn:(unsigned int)arg6;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 atRowIndex:(unsigned int)arg2;
- (double)strokeWidthOfGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (id)mergedStrokesForGridColumn:(unsigned int)arg1;
- (id)p_strokesForGridColumn:(unsigned int)arg1 isLeft:(_Bool)arg2 takeStrokeWriteLock:(_Bool)arg3;
- (_Bool)adjustGridColumnForVisibility:(unsigned int *)arg1 isLeft:(_Bool)arg2;
- (void)setStrokeSpillForGridColumn:(unsigned int)arg1 beginRow:(unsigned int)arg2 endRow:(unsigned int)arg3;
- (void)setStroke:(id)arg1 forGridColumn:(unsigned int)arg2 atLayerIndex:(long long)arg3 isLeft:(_Bool)arg4 beginRow:(unsigned int)arg5 endRow:(unsigned int)arg6;
- (void)validateStrokesArrays;
- (void)invalidateStrokeSpills;
- (void)invalidateStrokeRange:(CDStruct_5f1f7aa9)arg1 atLayerIndex:(long long)arg2;
- (void)invalidateStrokeDefaults;
- (int)tableAreaForCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableNameHeight;
- (double)calculatedTableNameHeightIncludingDynamicResize:(_Bool)arg1;
- (double)calculatedTableNameHeight;
- (double)tableNameHeight;
- (struct CGSize)tableNameTextSize;
- (id)tableNameTextEngine;
- (void)clearModelHeightWidthCacheForCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)resetModelHeightWidthCache;
- (void)validateLayoutHint:(id)arg1;
- (_Bool)hintIsValid:(id)arg1;
- (id)newLayoutHint;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
@property(readonly, nonatomic) _Bool emptyFilteredTable; // @synthesize emptyFilteredTable=mEmptyFilteredTable;
@property(readonly, nonatomic) TSTTableModel *tableModel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutHint : NSObject <TSDHint>
{
    _Bool mIsValid;
    _Bool mHorizontal;
    CDStruct_5f1f7aa9 mCellRange;
    CDStruct_0441cfb5 mCacheHintID;
    NSNumber *mPartitioningPass;
    unsigned int mPartitionPosition;
    struct CGSize mMaximumSize;
    struct CGSize mEffectiveSize;
    TSTLayout *mLayout;
}

+ (Class)archivedHintClass;
@property(retain, nonatomic) NSNumber *partitioningPass; // @synthesize partitioningPass=mPartitioningPass;
@property(nonatomic) _Bool horizontal; // @synthesize horizontal=mHorizontal;
@property(nonatomic) TSTLayout *layout; // @synthesize layout=mLayout;
@property(nonatomic) struct CGSize effectiveSize; // @synthesize effectiveSize=mEffectiveSize;
@property(nonatomic) struct CGSize maximumSize; // @synthesize maximumSize=mMaximumSize;
@property(nonatomic) unsigned int partitionPosition; // @synthesize partitionPosition=mPartitionPosition;
@property(nonatomic) CDStruct_0441cfb5 cacheHintID; // @synthesize cacheHintID=mCacheHintID;
@property(nonatomic) CDStruct_5f1f7aa9 cellRange; // @synthesize cellRange=mCellRange;
@property(nonatomic) _Bool isValid; // @synthesize isValid=mIsValid;
- (id).cxx_construct;
@property(readonly, copy) NSString *description;
- (void)invalidate;
- (void)saveToArchive:(struct LayoutHintArchive *)arg1;
- (id)initWithArchive:(const struct LayoutHintArchive *)arg1;
- (_Bool)isFirstHint;
- (id)lastChildHint;
- (id)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(id)arg1;
- (id)copyForArchiving;
- (oneway void)release;
- (void)dealloc;
- (id)init;
- (id)initWithRange:(CDStruct_5f1f7aa9)arg1 hintId:(CDStruct_0441cfb5)arg2 partitionPosition:(unsigned int)arg3 maximumSize:(struct CGSize)arg4 effectiveSize:(struct CGSize)arg5 layout:(id)arg6 validity:(_Bool)arg7 horizontal:(_Bool)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTArchivedLayoutHint : TSPObject <TSDArchivedHint>
{
    TSTLayoutHint *mHint;
}

@property(retain, nonatomic) TSTLayoutHint *hint; // @synthesize hint=mHint;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 hint:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTablePartitioner : NSObject <TSDPartitioner>
{
    TSTTableInfo *mTableInfo;
    TSDInfoGeometry *mInfoGeometry;
    double mFirstPartitionWidth;
    struct CGSize mScaleToFit;
    TSTLayout *mScaledLayout;
    TSUPointerKeyDictionary *mHintMatricesByCanvas;
    NSMutableDictionary *mPartitioningPassCache;
}

@property(copy, nonatomic) TSDInfoGeometry *infoGeometry; // @synthesize infoGeometry=mInfoGeometry;
@property(nonatomic) struct CGSize scaleToFit; // @synthesize scaleToFit=mScaleToFit;
@property(readonly, nonatomic) double inlineTableWidth; // @synthesize inlineTableWidth=mFirstPartitionWidth;
@property(readonly, nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
- (void)p_flushCacheAfterPartitioningFinished:(id)arg1 lastHint:(id)arg2 horizontally:(_Bool)arg3;
- (id)hintCacheKeyForHint:(id)arg1;
- (id)hintCacheKeyForPartitioningPass:(id)arg1 andHintID:(CDStruct_0441cfb5)arg2;
- (id)partitioningPassForHint:(id)arg1 withPreviousHint:(id)arg2;
- (id)partitioningPassForFirstPartitionSize:(struct CGSize)arg1;
@property(readonly, nonatomic) TSTLayout *scaledLayout;
@property(readonly, nonatomic) _Bool scaleIsValid;
- (_Bool)shouldReuseLayout:(id)arg1 forSize:(struct CGSize)arg2 parentLayout:(id)arg3 hint:(id)arg4;
- (id)hintForLayout:(id)arg1;
- (_Bool)p_didFinishPartitioningHint:(id)arg1 horizontally:(_Bool)arg2;
- (_Bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (id)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)nextHintForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (CDStruct_5f1f7aa9)measureCellRangeForNextPartitionOfSize:(struct CGSize)arg1 previousHint:(id)arg2 horizontally:(_Bool)arg3;
- (void)validateScaledLayout;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutSpaceBundle : NSObject
{
    TSTLayout *mLayout;
    TSTLayoutSpace *mSpace;
    TSTLayoutSpace *mFrozenHeaderColumnsSpace;
    TSTLayoutSpace *mFrozenHeaderRowsSpace;
    TSTLayoutSpace *mFrozenHeaderCornerSpace;
    TSTLayoutSpace *mRepeatHeaderColumnsSpace;
    TSTLayoutSpace *mRepeatHeaderRowsSpace;
    TSTLayoutSpace *mRepeatHeaderCornerSpace;
}

@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderCornerSpace; // @synthesize repeatHeaderCornerSpace=mRepeatHeaderCornerSpace;
@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderRowsSpace; // @synthesize repeatHeaderRowsSpace=mRepeatHeaderRowsSpace;
@property(retain, nonatomic) TSTLayoutSpace *repeatHeaderColumnsSpace; // @synthesize repeatHeaderColumnsSpace=mRepeatHeaderColumnsSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderCornerSpace; // @synthesize frozenHeaderCornerSpace=mFrozenHeaderCornerSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderRowsSpace; // @synthesize frozenHeaderRowsSpace=mFrozenHeaderRowsSpace;
@property(retain, nonatomic) TSTLayoutSpace *frozenHeaderColumnsSpace; // @synthesize frozenHeaderColumnsSpace=mFrozenHeaderColumnsSpace;
@property(retain, nonatomic) TSTLayoutSpace *space; // @synthesize space=mSpace;
@property(nonatomic) TSTLayout *layout; // @synthesize layout=mLayout;
- (id)description;
- (_Bool)performActionOnRepeatLayoutSpaces:(CDUnknownBlockType)arg1;
- (_Bool)performActionOnFrozenLayoutSpaces:(CDUnknownBlockType)arg1;
- (void)performActionOnEachLayoutSpace:(CDUnknownBlockType)arg1;
- (int)validateLayoutSpaces;
- (id)getSpaceContainingCellID:(CDStruct_0441cfb5)arg1;
- (void)invalidateTableOffsets;
- (void)invalidateCoordinatesAfterRow:(unsigned short)arg1;
- (void)invalidateCoordinatesAfterColumn:(unsigned char)arg1;
- (void)invalidateCoordinates;
- (void)dealloc;
- (id)initWithLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTMergeRegionMapIterator : NSObject
{
    TSTMergeRegionMap *mMergeRegionMap;
    struct __hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*>> {
        struct __hash_iterator<std::__1::__hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *>*> {
            struct __hash_node<std::__1::pair<TSUColumnRowCoordinate, TSUColumnRowSize>, void *> *__node_;
        } __i_;
    } mMergeRegionIterator;
}

- (id).cxx_construct;
- (void)reset;
- (void)dealloc;
- (_Bool)hasNextMergeRegion;
- (CDStruct_5f1f7aa9)nextMergeRegion;
- (id)initWithMergeRegionMap:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTMergeRegionMap : TSPObject
{
    struct hash_map<TSUColumnRowCoordinate, TSUColumnRowCoordinate, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowCoordinate>>> mCellIDToMergeRegionTopLeft;
    struct hash_map<TSUColumnRowCoordinate, TSUColumnRowSize, TSTCellIDHasher, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, TSUColumnRowSize>>> mMergeRegionTopLeftToMergeRegionSize;
    CDStruct_5f1f7aa9 mUnionedMergeRange;
}

+ (id)mergeRegionMapFromMap:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)hasRangeSpanningRows;
- (id)mergedGridIndicesForDimension:(int)arg1;
- (_Bool)find:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)unionedMergeRange;
- (_Bool)partiallyIntersectsCellRegion:(id)arg1;
- (_Bool)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)mergedRangeForCellID:(CDStruct_0441cfb5)arg1;
- (_Bool)remove:(CDStruct_5f1f7aa9)arg1;
- (_Bool)insert:(CDStruct_5f1f7aa9)arg1;
- (id)description;
- (unsigned long long)count;
- (id)iterator;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initRegionMapFromMap:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
- (id)initRegionMapFromMap:(id)arg1 rowRemapping:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTWidthHeightCache : NSObject
{
    struct vector<TSTWidthHeightCache_Private::WHCCol, std::__1::allocator<TSTWidthHeightCache_Private::WHCCol>> mFittingColumnWidth;
    struct vector<TSTWidthHeightCache_Private::WHCRow, std::__1::allocator<TSTWidthHeightCache_Private::WHCRow>> mFittingRowHeight;
    vector_3f7ffb82 mModelColumnWidth;
    vector_3f7ffb82 mModelRowHeight;
    unsigned short mMaxRow;
    unsigned char mMaxCol;
    struct _opaque_pthread_rwlock_t mLock;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_increaseRowCapacity:(unsigned int)arg1;
- (void)_increaseColCapacity:(unsigned int)arg1;
- (id)validateChangeDescriptors:(id)arg1 tableModel:(id)arg2;
- (void)logInternalState;
- (_Bool)verifyDims:(struct CGSize)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)resetFittingHeightsFromCollection:(id)arg1;
- (void)resetWidthsHeightsForRange:(CDStruct_5f1f7aa9)arg1;
- (void)resetAllCol;
- (void)resetAllRow;
- (void)resetColWidthsStartingWith:(unsigned char)arg1 andEndingWith:(unsigned char)arg2;
- (void)resetRowHeightsStartingWith:(unsigned short)arg1 andEndingWith:(unsigned short)arg2;
- (double)getModelWidthForColumn:(unsigned char)arg1;
- (double)getModelHeightForRow:(unsigned short)arg1;
- (double)getFitWidthForCol:(unsigned char)arg1;
- (double)getFitHeightForRow:(unsigned short)arg1;
- (_Bool)moveColsFrom:(CDStruct_5f1f7aa9)arg1 toCol:(unsigned char)arg2;
- (_Bool)moveRowsFrom:(CDStruct_5f1f7aa9)arg1 toRow:(unsigned short)arg2;
- (_Bool)insertRows:(unsigned short)arg1 atRow:(unsigned short)arg2;
- (_Bool)insertCols:(unsigned short)arg1 atColumn:(unsigned char)arg2;
- (_Bool)deleteRowsStartingWith:(unsigned short)arg1 andEndingWith:(unsigned short)arg2;
- (_Bool)deleteColsStartingWith:(unsigned char)arg1 andEndingWith:(unsigned char)arg2;
- (_Bool)resetModelCacheRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)resetModelCache;
- (_Bool)setModelHeight:(double)arg1 forRow:(unsigned short)arg2;
- (_Bool)setModelWidth:(double)arg1 forColumn:(unsigned char)arg2;
- (void)setFittingHeightsFromCollection:(id)arg1;
- (_Bool)setFitHeight:(double)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)setFitWidth:(double)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (_Bool)setFitDims:(struct CGSize)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithNumRows:(unsigned short)arg1 andNumCols:(unsigned short)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTChangeDescriptor : NSObject
{
    int mChangeDescriptor;
    TSTCellRegion *mCellRegion;
    CDStruct_0441cfb5 mCellID;
    TSTCellRegion *mExpandedRegion;
    TSTCellRegion *mStrokeRegion;
    NSHashTable *mReferenceIdentifiers;
}

+ (id)changeDescriptorWithType:(int)arg1 referenceIdentifiers:(id)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRange:(CDStruct_5f1f7aa9)arg2 strokeRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1 strokeRange:(CDStruct_5f1f7aa9)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRange:(CDStruct_5f1f7aa9)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 strokeRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRange:(CDStruct_5f1f7aa9)arg3 strokeRange:(CDStruct_5f1f7aa9)arg4;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRange:(CDStruct_5f1f7aa9)arg3;
+ (id)changeDescriptorWithType:(int)arg1;
+ (id)changeDescriptorWithType:(int)arg1 cellID:(CDStruct_0441cfb5)arg2 cellRegion:(id)arg3 strokeRegion:(id)arg4;
+ (id)changeDescriptorWithType:(int)arg1 strokeRegion:(id)arg2;
+ (id)changeDescriptorWithType:(int)arg1 cellRegion:(id)arg2 strokeRegion:(id)arg3;
+ (id)changeDescriptorWithType:(int)arg1 cellRegion:(id)arg2;
@property(readonly, nonatomic) NSHashTable *referenceIdentifiers; // @synthesize referenceIdentifiers=mReferenceIdentifiers;
@property(retain, nonatomic) TSTCellRegion *expandedRegion; // @synthesize expandedRegion=mExpandedRegion;
@property(readonly, nonatomic) TSTCellRegion *strokeRegion; // @synthesize strokeRegion=mStrokeRegion;
@property(readonly, nonatomic) CDStruct_0441cfb5 cellID; // @synthesize cellID=mCellID;
@property(readonly, nonatomic) TSTCellRegion *cellRegion; // @synthesize cellRegion=mCellRegion;
@property(readonly, nonatomic) int changeDescriptor; // @synthesize changeDescriptor=mChangeDescriptor;
- (id)description;
- (CDStruct_5f1f7aa9)cellRange;
- (CDStruct_5f1f7aa9)expandedRange;
- (void)setExpandedRange:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_5f1f7aa9)strokeRange;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChangeDescriptorType:(int)arg1 andCellRegion:(id)arg2 andCellID:(CDStruct_0441cfb5)arg3 andStrokeRegion:(id)arg4 andReferenceIdentifiers:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSTCellDictionary : NSObject
{
    TSUIntegerKeyDictionary *mDict;
    struct _opaque_pthread_rwlock_t mDictRWLock;
}

- (void)applyBlockToAllCells:(CDUnknownBlockType)arg1;
- (id)allCells;
- (void)removeAllCells;
- (id)cellAtCellID:(CDStruct_0441cfb5)arg1;
- (void)setCell:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTCustomFormatListStemMatchObject : NSObject <NSCopying>
{
    struct TSUCustomFormat *mCustomFormat;
}

+ (id)stemMatchObjectWithCustomFormat:(struct TSUCustomFormat *)arg1;
@property(readonly, nonatomic) struct TSUCustomFormat *customFormat; // @synthesize customFormat=mCustomFormat;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initObjectWithCustomFormat:(struct TSUCustomFormat *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTCustomFormatListStemMatchKeyedObject : NSObject
{
    unsigned int mKey;
    TSTCustomFormatListStemMatchObject *mObject;
    unsigned int _key;
    TSTCustomFormatListStemMatchObject *_object;
}

+ (id)keyedObjectWithKey:(unsigned int)arg1 object:(id)arg2;
@property(readonly, nonatomic) TSTCustomFormatListStemMatchObject *object; // @synthesize object=_object;
@property(readonly, nonatomic) unsigned int key; // @synthesize key=_key;
- (_Bool)isFullyEqualToCustomFormat:(struct TSUCustomFormat *)arg1;
- (void)dealloc;
- (id)initWithKey:(unsigned int)arg1 object:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTCustomFormatList : TSTTableDataList <TSUCustomFormatList>
{
    NSMutableDictionary *mNamesList;
    NSMutableDictionary *mStemMatchCustomFormats;
}

- (_Bool)rollbackLastCustomFormat:(struct TSUCustomFormat *)arg1;
- (id)newUniqueNameFromName:(id)arg1 preserveSeed:(_Bool)arg2;
- (id)newUniqueNameFromName:(id)arg1;
- (void)p_setupNamesList;
- (id)allNumberKeys;
- (unsigned int)maxKey;
- (long long)count;
- (id)customFormatWrapperForKey:(unsigned int)arg1;
- (struct TSUCustomFormat *)customFormatForKey:(unsigned int)arg1;
- (void)restoreCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (void)removeCustomFormatForKey:(unsigned int)arg1;
- (void)updateCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (void)p_removeCustomFormatForKey:(unsigned int)arg1;
- (unsigned int)importCustomFormat:(struct TSUCustomFormat *)arg1;
- (unsigned int)addPastedCustomFormat:(struct TSUCustomFormat *)arg1 withOldKey:(unsigned int)arg2;
- (unsigned int)addCustomFormat:(struct TSUCustomFormat *)arg1 allowNameOverwrite:(_Bool)arg2;
- (unsigned int)p_addCustomFormat:(struct TSUCustomFormat *)arg1 withMode:(int)arg2 lookupUsingNameStem:(_Bool)arg3;
- (_Bool)supportsIDMapForType:(int)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithType:(int)arg1 context:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTHiddenStateFormulaOwner : TSPObject <TSCEFormulaOwning>
{
    struct __CFUUID *mOwnerID;
    TSTTableInfo *mTableInfo;
    TSCECalculationEngine *mCalculationEngine;
    struct vector<std::__1::pair<unsigned short, bool>, std::__1::allocator<std::__1::pair<unsigned short, bool>>> mPendingComputedShowRowResults;
    NSObject<OS_dispatch_queue> *mPendingComputedShowRowResultsQueue;
    vector_764b4ef2 mCellRangesToInvalidate;
    vector_eef16772 mHiddenRowIndices;
    TSTTableFilterSet *mRewrittenFilterSet;
    NSMutableArray *mThresholdCellValues;
    _Bool mNeedsToUpdateFilterSetForImport;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(id)arg1;
- (void)retainForCalculationEngine:(id)arg1;
- (id)endRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(id)arg3;
- (void)invalidateForCalculationEngine:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dirtyFilterState;
- (void)filterSetUpdated;
- (void)p_registerAllFormulaToCalculationEngine;
- (void)p_removeAllFormulaFromCalculationEngine;
- (int)registerWithCalculationEngineChoosingUniqueID:(id)arg1;
- (void)hiddenStateChangedForIndex:(unsigned short)arg1;
- (CDStruct_5744d895)rangeReferenceFromIndex:(unsigned short)arg1 toIndex:(unsigned short)arg2;
- (CDStruct_78b871e1)cellReferenceForIndex:(unsigned short)arg1;
- (id)calculationEngine;
- (id)tableInfo;
- (void)setTableInfo:(id)arg1;
- (void)setOwnerID:(struct __CFUUID *)arg1;
- (struct __CFUUID *)ownerID;
- (void)dealloc;
- (id)initWithContext:(id)arg1 tableInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTextEngineDelegate : NSObject <TSWPTextDelegate>
{
    TSWPPadding *mPadding;
    int mVerticalAlignment;
    double mMaxWidthForChildren;
}

@property(nonatomic) double maxWidthForChildren; // @synthesize maxWidthForChildren=mMaxWidthForChildren;
- (_Bool)forceWesternLineBreaking;
- (int)verticalAlignment;
- (id)padding;
- (void)dealloc;
- (id)initWithPadding:(struct UIEdgeInsets)arg1 verticalAlignment:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTPopUpMenuModel : TSPObject <TSUMultipleChoiceListChoiceProviding>
{
    NSArray *mItems;
}

- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct PopUpMenuModel *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct PopUpMenuModel *)arg1;
- (id)popUpItemFromDate:(id)arg1 format:(CDStruct_bfed0e84)arg2;
- (id)popUpItemFromString:(id)arg1;
- (id)popUpItemFromBoolean:(_Bool)arg1;
- (id)popUpItemFromNumber:(double)arg1 format:(CDStruct_bfed0e84)arg2;
- (id)displayStringAtIndex:(unsigned long long)arg1;
- (_Bool)booleanAtIndex:(unsigned long long)arg1;
- (CDStruct_bfed0e84)formatAtIndex:(unsigned long long)arg1;
- (id)dateAtIndex:(unsigned long long)arg1;
- (id)stringAtIndex:(unsigned long long)arg1;
- (double)numberAtIndex:(unsigned long long)arg1;
- (int)valueTypeOfItemAtIndex:(unsigned long long)arg1;
- (_Bool)p_booleanForListItem:(id)arg1;
- (id)p_dateForListItem:(id)arg1;
- (id)p_stringForListItem:(id)arg1;
- (double)p_numberForListItem:(id)arg1;
- (int)p_mcListTypeOfListItem:(id)arg1;
- (int)p_mcListTypeForArgType:(int)arg1;
- (id)p_listItemAtIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (_Bool)isEqualToChoices:(id)arg1;
- (id)choices;
- (void)dealloc;
- (id)initWithItems:(id)arg1 context:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutTask : NSObject <NSCopying>
{
    TSTMasterLayout *mMasterLayout;
    NSMutableArray *mCellStatesToLayout;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)writeToMasterLayoutCaches;
- (void)enumerateCellStatesUsingBlock:(CDUnknownBlockType)arg1;
- (void)clear;
- (void)addCellState:(id)arg1;
@property(readonly, nonatomic) unsigned long long numberOfCellStates;
- (void)dealloc;
- (id)initWithLayoutTask:(id)arg1;
- (id)initWithMasterLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTCellStateForLayout : NSObject
{
    _Bool mCellPropsRowHeight;
    _Bool mCellWraps;
    _Bool mForDrawing;
    _Bool mInDynamicLayout;
    CDStruct_0441cfb5 mModelCellID;
    int mVerticalAlignment;
    int mLayoutCacheFlags;
    TSTCell *mCell;
    CDStruct_5f1f7aa9 mMergedRange;
    TSWPColumn *mWPColumn;
    double mMaxWidthForChildren;
    id mCellContents;
    TSTLayoutContentCachedKey *mKeyVal;
    unsigned long long mPageNumber;
    unsigned long long mPageCount;
    struct CGSize mMinSize;
    struct CGSize mMaxSize;
    struct UIEdgeInsets mPaddingInsets;
}

@property(nonatomic) unsigned long long pageCount; // @synthesize pageCount=mPageCount;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=mPageNumber;
@property(nonatomic) int layoutCacheFlags; // @synthesize layoutCacheFlags=mLayoutCacheFlags;
@property(retain, nonatomic) TSTLayoutContentCachedKey *keyVal; // @synthesize keyVal=mKeyVal;
@property(retain, nonatomic) id cellContents; // @synthesize cellContents=mCellContents;
@property(nonatomic) int verticalAlignment; // @synthesize verticalAlignment=mVerticalAlignment;
@property(nonatomic) struct UIEdgeInsets paddingInsets; // @synthesize paddingInsets=mPaddingInsets;
@property(nonatomic) double maxWidthForChildren; // @synthesize maxWidthForChildren=mMaxWidthForChildren;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=mMaxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=mMinSize;
@property(retain, nonatomic) TSWPColumn *wpColumn; // @synthesize wpColumn=mWPColumn;
@property(nonatomic) _Bool inDynamicLayout; // @synthesize inDynamicLayout=mInDynamicLayout;
@property(nonatomic) _Bool forDrawing; // @synthesize forDrawing=mForDrawing;
@property(nonatomic) _Bool cellWraps; // @synthesize cellWraps=mCellWraps;
@property(nonatomic) _Bool cellPropsRowHeight; // @synthesize cellPropsRowHeight=mCellPropsRowHeight;
@property(nonatomic) CDStruct_5f1f7aa9 mergedRange; // @synthesize mergedRange=mMergedRange;
@property(copy, nonatomic) TSTCell *cell; // @synthesize cell=mCell;
@property(nonatomic) CDStruct_0441cfb5 modelCellID; // @synthesize modelCellID=mModelCellID;
@property(readonly, nonatomic) _Bool hasContent;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTWPTokenAttachment : TSWPUIGraphicalAttachment
{
    TSTExpressionNode *mExpressionNode;
    _Bool mActive;
    _Bool mSelected;
    _Bool mNeverShowsMenu;
    struct CGSize mTextSize;
    struct CGRect mMenuRect;
    struct CGImage *mCachedImage;
    double mCachedImageScreenScale;
    _Bool mInInvalidate;
}

@property(nonatomic) double cachedImageScreenScale; // @synthesize cachedImageScreenScale=mCachedImageScreenScale;
@property(nonatomic, getter=neverShowsMenu) _Bool neverShowsMenu; // @synthesize neverShowsMenu=mNeverShowsMenu;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=mSelected;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=mActive;
@property(retain, nonatomic) TSTExpressionNode *expressionNode; // @synthesize expressionNode=mExpressionNode;
- (id).cxx_construct;
- (id)description;
- (void)saveToArchive:(struct TokenAttachmentArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct TokenAttachmentArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)invalidate;
@property(nonatomic) struct CGImage *cachedImage;
- (void)requestRedraw;
- (id)detokenizedText;
- (id)formulaPlainText;
- (id)copyIntoContext:(id)arg1 bakeModes:(_Bool)arg2;
- (id)copyIntoContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 expressionNode:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTCompletionToken : TSTWPTokenAttachment
{
    NSString *mCompletionText;
    struct _NSRange mPrefixRange;
    int mRenderAsTokenType;
    TSTReferenceNode *mEditingReferenceNode;
    TSUColor *mReferenceColor;
    id <TSTCanvasReferenceProvider> mCanvasReferenceProvider;
}

@property(nonatomic) id <TSTCanvasReferenceProvider> canvasReferenceProvider; // @synthesize canvasReferenceProvider=mCanvasReferenceProvider;
@property(retain, nonatomic) TSUColor *referenceColor; // @synthesize referenceColor=mReferenceColor;
@property(retain, nonatomic) TSTReferenceNode *editingReferenceNode; // @synthesize editingReferenceNode=mEditingReferenceNode;
@property(readonly, nonatomic) int renderAsTokenType; // @synthesize renderAsTokenType=mRenderAsTokenType;
@property(nonatomic) struct _NSRange prefixRange; // @synthesize prefixRange=mPrefixRange;
@property(retain, nonatomic) NSString *completionText; // @synthesize completionText=mCompletionText;
- (id).cxx_construct;
- (id)description;
- (void)p_createCanvasReference;
- (void)p_removeCanvasReference;
- (void)saveToArchive:(struct CompletionTokenAttachmentArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct CompletionTokenAttachmentArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)copyIntoContext:(id)arg1 bakeModes:(_Bool)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1 completionText:(id)arg2;
- (id)initWithContext:(id)arg1 expressionNode:(id)arg2;
- (void)makeTokenReflectChoice:(id)arg1;
- (id)tokenText;
- (void)setExpressionNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeLayerToken : NSObject <TSTStrokeLayerStrokeAndRange>
{
    TSDStroke *_stroke;
    unsigned long long _position;
    struct TSTSimpleRange _range;
}

+ (id)tokenWithStroke:(id)arg1 range:(struct TSTSimpleRange)arg2 andPosition:(unsigned long long)arg3;
@property(nonatomic) unsigned long long position; // @synthesize position=_position;
@property(nonatomic) struct TSTSimpleRange range; // @synthesize range=_range;
@property(retain, nonatomic) TSDStroke *stroke; // @synthesize stroke=_stroke;
- (id).cxx_construct;
- (void)dealloc;
- (id)initWithStroke:(id)arg1 range:(struct TSTSimpleRange)arg2 andPosition:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeLayer : NSObject <NSCopying>
{
    struct vector<TSTStrokeLayerRun, std::__1::allocator<TSTStrokeLayerRun>> mStrokeRuns;
}

+ (id)strokeLayer;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_mergeStrokeRunsAtPosition:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)enumerateStrokesUsingBlock:(CDUnknownBlockType)arg1;
- (id)nextStrokeAndRange:(id)arg1;
- (id)findStrokeAndRangeAtIndex:(long long)arg1;
- (long long)startingIndex;
- (void)invalidateRange:(struct TSTSimpleRange)arg1;
- (void)invalidate;
- (void)insertStroke:(id)arg1 inRange:(struct TSTSimpleRange)arg2;
- (void)appendStroke:(id)arg1 inRange:(struct TSTSimpleRange)arg2;
@property(readonly, nonatomic) _Bool isEmpty;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableRepProcessChangesActions : NSObject
{
    _Bool _invalidateAllChrome;
    _Bool _invalidateColumnChrome;
    _Bool _invalidateRowChrome;
    _Bool _hideChromeContextMenuButton;
    _Bool _invalidateKnobs;
    _Bool _invalidateSelection;
    _Bool _invalidateTableName;
    _Bool _updateEditorRemainders;
    _Bool _syncReferenceHighlightState;
    _Bool _setNeedsDisplay;
    _Bool _hideStepperHUD;
    CDStruct_5f1f7aa9 dirtyCellRange;
    CDStruct_5f1f7aa9 dirtyStrokeRange;
}

@property(nonatomic) _Bool hideStepperHUD; // @synthesize hideStepperHUD=_hideStepperHUD;
@property(nonatomic) _Bool setNeedsDisplay; // @synthesize setNeedsDisplay=_setNeedsDisplay;
@property(nonatomic) _Bool syncReferenceHighlightState; // @synthesize syncReferenceHighlightState=_syncReferenceHighlightState;
@property(nonatomic) _Bool updateEditorRemainders; // @synthesize updateEditorRemainders=_updateEditorRemainders;
@property(nonatomic) _Bool invalidateTableName; // @synthesize invalidateTableName=_invalidateTableName;
@property(nonatomic) _Bool invalidateSelection; // @synthesize invalidateSelection=_invalidateSelection;
@property(nonatomic) _Bool invalidateKnobs; // @synthesize invalidateKnobs=_invalidateKnobs;
@property(nonatomic) _Bool hideChromeContextMenuButton; // @synthesize hideChromeContextMenuButton=_hideChromeContextMenuButton;
@property(nonatomic) _Bool invalidateRowChrome; // @synthesize invalidateRowChrome=_invalidateRowChrome;
@property(nonatomic) _Bool invalidateColumnChrome; // @synthesize invalidateColumnChrome=_invalidateColumnChrome;
@property(nonatomic) _Bool invalidateAllChrome; // @synthesize invalidateAllChrome=_invalidateAllChrome;
@property(nonatomic) CDStruct_5f1f7aa9 dirtyStrokeRange; // @synthesize dirtyStrokeRange;
@property(nonatomic) CDStruct_5f1f7aa9 dirtyCellRange; // @synthesize dirtyCellRange;
- (id).cxx_construct;

@end

__attribute__((visibility("hidden")))
@interface TSTTableRep : TSWPTextHostRep <UITextFieldDelegate>
{
    struct CGRect mCanvasVisibleRect;
    struct CGRect mSearchSelectionBounds;
    TSDTilingLayer *mOverlayTableName;
    TSDTilingLayer *mOverlayFrozenHeaderCorner;
    TSDTilingLayer *mOverlayFrozenHeaderRows;
    TSDTilingLayer *mOverlayFrozenHeaderColumns;
    CALayer *mOverlayFrozenHeaderRowsMask;
    CALayer *mOverlayFrozenHeaderColumnsMask;
    CALayer *mOverlayFrozenHeaderTableBodyMask;
    CALayer *mOverlayFrozenHeaderTableNameMask;
    double mCurrentScreenScale;
    CDStruct_5f1f7aa9 mDirtyCellRange;
    _Bool mRecursivelyDrawingInContext;
    NSMutableArray *mAnimationStack;
    id <TSTTableAnimationController> mAnimationController;
    TSTTableCellTextEditingRep *mContainedTextEditingRep;
    TSWPTextEditing *mTableNameTextEditing;
    CDStruct_0441cfb5 mControlCellID;
    CDStruct_0441cfb5 mRatingsDragCellID;
    id <TSTTableChromeProvider> mTableChrome;
    TSTTableReferences *mReferences;
    CAShapeLayer *mHighlightedHyperlinkLayer;
    _Bool mIsAspectOperationInProgress;
    _Bool mIsZoomOperationInProgress;
    _Bool mIsZoomToEditOperationInProgress;
    CDStruct_5f1f7aa9 mZoomToEditVisibleCellRange;
    CAShapeLayer *mFindSelectionHighlightLayer;
    TSTTableSelection *mSourceFillSelection;
    TSTTableSelection *mTargetFillSelection;
    _Bool mWPEndedTableNameEditing;
    _Bool _settingSelection;
    TSTSelectionDragController *mCellDragController;
    _Bool mDragByHandleOnly;
    _Bool mSelectionUsesBezierPath;
    _Bool mSelectsCellOnInitialTap;
    _Bool mUsesWholeChromeResizer;
    id <TSTCanvasReferenceController> mCanvasReferenceController;
    id <TSTTableRepDelegate> mDelegate;
    TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *mVisitorKnobTracker;
    NSSet *mVisibleFillKnobs;
    CDStruct_0441cfb5 mEditingHyperlinkCellID;
    TSWPStorage *mHyperlinkParentStorage;
    _Bool mHyperlinkModified;
    _Bool mInspectingHyperlinkInEditingStorage;
    TSWPHyperlinkField *mHyperlinkField;
    CAShapeLayer *mCellEditingMaskLayer;
    NSMutableDictionary *mChildTextReps;
}

+ (Class)tableRepDelegateClass;
@property(retain, nonatomic) NSMutableDictionary *childTextReps; // @synthesize childTextReps=mChildTextReps;
@property(readonly, nonatomic) _Bool isZoomToEditOperationInProgress; // @synthesize isZoomToEditOperationInProgress=mIsZoomToEditOperationInProgress;
@property(readonly, nonatomic) TSDKnobTracker<TSTTableKnobTrackerVisitorProtocol> *visitorKnobTracker; // @synthesize visitorKnobTracker=mVisitorKnobTracker;
@property(nonatomic) CDStruct_0441cfb5 ratingsDragCellID; // @synthesize ratingsDragCellID=mRatingsDragCellID;
@property(nonatomic) TSTSelectionDragController *cellDragController; // @synthesize cellDragController=mCellDragController;
@property(readonly, nonatomic) id <TSTTableRepDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) id <TSTTableChromeProvider> tableChrome; // @synthesize tableChrome=mTableChrome;
@property(nonatomic) id <TSTTableAnimationController> animationController; // @synthesize animationController=mAnimationController;
@property(readonly, nonatomic) id <TSTCanvasReferenceController> canvasReferenceController; // @synthesize canvasReferenceController=mCanvasReferenceController;
- (id).cxx_construct;
@property(readonly, copy) NSString *description;
- (id)p_textImageForPath:(struct CGPath *)arg1 shouldPulsate:(_Bool)arg2;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)recursivelyDrawInContext:(struct CGContext *)arg1;
- (int)tilingMode;
- (_Bool)canDrawInParallel;
- (_Bool)mustDrawOnMainThreadForInteractiveCanvas;
- (_Bool)canDrawInBackgroundDuringScroll;
- (void)endDragInsertFromPalette;
- (void)beginDragInsertFromPalette;
- (_Bool)canDrawTilingLayerInBackground:(id)arg1;
- (void)invalidateFrozenHeaders;
- (void)validateFrozenHeaderTableBodyMask;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)validateFrozenHeaderColumns;
- (void)validateFrozenHeaderRows;
- (void)validateFrozenHeaderCorner;
- (struct CGRect)p_alignedLayerFrameForLayoutSpace:(id)arg1 transform:(struct CGAffineTransform)arg2;
- (id)p_frozenHeaderOverlayLayers;
- (void)validateTableName;
- (id)p_tableNameOverlayLayers;
- (id)additionalLayersUnderLayer;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)popAnimation;
- (void)pushAnimation:(id)arg1;
@property(readonly, nonatomic) TSTAnimation *currentAnimation;
- (void)orientationDidChange:(id)arg1;
- (void)invalidateComments;
- (void)invalidateAnnotationColor;
- (void)p_invalidateCellCommentBadges;
- (void)dirtyCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)setNeedsDisplayInCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (void)invalidateTableName;
- (void)invalidateCellRange:(CDStruct_5f1f7aa9)arg1 fittingRange:(CDStruct_5f1f7aa9)arg2 invalidateSize:(_Bool)arg3;
- (void)invalidateCellRange:(CDStruct_5f1f7aa9)arg1;
- (void)invalidateSelection;
- (void)updateDynamicModeForEditingSpillText;
- (void)screenScaleDidChange;
- (void)viewScaleDidChange;
- (_Bool)isFullyVisibleWithBorder:(int)arg1;
- (void)validateVisibleRect;
- (void)validateStrokesInEditingSpillingTextRange;
- (void)layoutInRootChangedFrom:(id)arg1 to:(id)arg2 translatedOnly:(_Bool)arg3;
- (void)updateFromLayout;
- (id)editorSelection;
- (void)contentsRectForCellRangeAcrossSpaces:(CDStruct_5f1f7aa9)arg1 contentsCenterInfo:(CDStruct_7bd98050 *)arg2 canvasFrame:(struct CGRect *)arg3 contentsRect:(struct CGRect *)arg4;
- (struct CGRect)boundsForCellSelection:(CDStruct_0441cfb5)arg1;
- (struct CGRect)canvasBoundsForCellRange:(CDStruct_5f1f7aa9)arg1;
- (struct CGRect)deviceBoundsForCellRange:(CDStruct_5f1f7aa9)arg1;
- (id)itemsToAddToEditMenu;
- (_Bool)isDraggable;
- (id)childReps;
- (void)updateChildrenFromLayout;
- (void)willBeRemoved;
- (void)invalidateEditingCell;
- (void)asyncPostTextChangedInRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)handlesEditMenu;
- (_Bool)shouldCommitPendingTextEdit;
- (_Bool)shouldRestartTextEditing;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)dealloc;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (struct CGRect)layerFrameInScaledCanvas;
- (id)repForDragging;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitRep:(struct CGPoint)arg1;
@property(readonly, nonatomic) TSTCellRegion *selectionRegion;
@property(readonly, nonatomic) CALayer *layerForRep;
@property(readonly, nonatomic) struct CGRect canvasVisibleRect;
@property(readonly, nonatomic) struct CGAffineTransform transformFromCanvas;
@property(readonly, nonatomic) struct CGAffineTransform transformToCanvas;
@property(readonly, nonatomic) TSDEditorController *editorController;
@property(readonly, nonatomic) TSDCanvasView *canvasView;
@property(readonly, nonatomic) TSTMasterLayout *masterLayout;
@property(readonly, nonatomic) TSTLayout *tableLayout;
@property(readonly, nonatomic) TSTEditingState *editingState;
@property(readonly, nonatomic) TSTTableModel *tableModel;
@property(readonly, nonatomic) TSTTableInfo *tableInfo;

// Remaining properties
@property(retain, nonatomic) TSTSearchReference *activeSearchReference;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTAnimation : NSObject <NSCopying>
{
    TSTLayout *mLayout;
    int mKind;
    CDStruct_5f1f7aa9 *mCellRanges;
    unsigned long long mCellRangeCount;
    unsigned long long mStageCount;
    unsigned long long mStage;
    _Bool mFinal;
    _Bool mByColumn;
    _Bool mByRow;
    _Bool mByCell;
    _Bool mByContent;
    _Bool mByCellRange;
    _Bool mByMissingCellRange;
    _Bool mReverse;
    _Bool mShowsTableChrome;
    _Bool mShowsOverlayLayers;
    _Bool mExpandBackgroundFill;
    _Bool mDrawsBlackAndWhite;
}

+ (_Bool)deliveryStyleSupportedForExport:(unsigned long long)arg1;
+ (unsigned long long)textureDeliveryStyleFromDeliveryString:(id)arg1;
+ (unsigned long long)stageCountForTextureDeliveryStyle:(unsigned long long)arg1 andTable:(id)arg2;
+ (id)textureDeliveryStylesLocalized:(_Bool)arg1;
+ (id)newAnimationWithLayout:(id)arg1 andCellRange:(CDStruct_5f1f7aa9)arg2;
+ (id)newAnimationWithLayout:(id)arg1 andDeliveryStyle:(unsigned long long)arg2;
@property _Bool drawsBlackAndWhite; // @synthesize drawsBlackAndWhite=mDrawsBlackAndWhite;
@property _Bool expandBackgroundFill; // @synthesize expandBackgroundFill=mExpandBackgroundFill;
@property _Bool showsOverlayLayers; // @synthesize showsOverlayLayers=mShowsOverlayLayers;
@property _Bool showsTableChrome; // @synthesize showsTableChrome=mShowsTableChrome;
@property(readonly) _Bool final; // @synthesize final=mFinal;
@property(readonly) unsigned long long stage; // @synthesize stage=mStage;
@property(readonly) unsigned long long stageCount; // @synthesize stageCount=mStageCount;
- (_Bool)isHidingContentOfCellID:(CDStruct_0441cfb5)arg1;
@property(readonly) _Bool drawStrokes;
@property(readonly) _Bool clipStrokes;
@property(readonly) _Bool drawCellContent;
@property(readonly) _Bool drawCellBackground;
@property(readonly) _Bool drawTableBackground;
@property(readonly) _Bool drawTableName;
@property(readonly) _Bool enabled;
- (void)clearCellRanges;
- (void)addCellRange:(CDStruct_5f1f7aa9)arg1;
@property(readonly) unsigned long long cellRangeCount;
- (CDStruct_5f1f7aa9)cellRangeAtIndex:(unsigned long long)arg1;
- (void)setStage:(unsigned long long)arg1 andFinal:(_Bool)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSTMergeRangeSortedSet : NSObject
{
    struct set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::__1::allocator<TSTMergeRangeElem>> *mSet;
    struct __tree_const_iterator<TSTMergeRangeElem, std::__1::__tree_node<TSTMergeRangeElem, void *>*, long> {
        struct __tree_node<TSTMergeRangeElem, void *> *__ptr_;
    } mIter;
    NSObject<OS_dispatch_semaphore> *mSem;
}

- (id).cxx_construct;
- (void)reset;
- (struct UIEdgeInsets)getPaddingInsets;
- (_Bool)isCheckbox;
- (struct CGSize)getSize;
- (CDStruct_5f1f7aa9)iter;
- (CDStruct_5f1f7aa9)begin;
- (unsigned long long)count;
- (void)addRange:(CDStruct_5f1f7aa9)arg1 andSize:(struct CGSize)arg2 andPaddingInsets:(struct UIEdgeInsets)arg3 andIsCheckbox:(_Bool)arg4;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutContentCachedKey : NSObject <NSCopying>
{
    NSString *mString;
    double mWidth;
    double mHeight;
    TSWPParagraphStyle *mParagraphStyle;
    _Bool mCellWraps;
    int mValueType;
    struct UIEdgeInsets mPaddingInsets;
    int mVerticalAlignment;
    int mWritingDirection;
}

@property(readonly, nonatomic) int writingDirection; // @synthesize writingDirection=mWritingDirection;
@property(readonly, nonatomic) int verticalAlignment; // @synthesize verticalAlignment=mVerticalAlignment;
@property(readonly, nonatomic) struct UIEdgeInsets paddingInsets; // @synthesize paddingInsets=mPaddingInsets;
@property(readonly, nonatomic) int valueType; // @synthesize valueType=mValueType;
@property(readonly, nonatomic) _Bool cellWraps; // @synthesize cellWraps=mCellWraps;
@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=mParagraphStyle;
@property(readonly, nonatomic) double height; // @synthesize height=mHeight;
@property(readonly, nonatomic) double width; // @synthesize width=mWidth;
@property(readonly, nonatomic) NSString *string; // @synthesize string=mString;
- (id)description;
- (_Bool)isEqualToLayoutContentCachedKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 width:(double)arg2 height:(double)arg3 paragraphStyle:(id)arg4 cellWraps:(_Bool)arg5 valueType:(int)arg6 paddingInsets:(struct UIEdgeInsets)arg7 verticalAlignment:(int)arg8 writingDirection:(int)arg9;

@end

__attribute__((visibility("hidden")))
@interface TSTDupContentCache : TSUConcurrentCache
{
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutDynamicResizeInfo : NSObject <TSTLayoutDynamicResizeInfoProtocol>
{
    _Bool mValid;
    int mTableRowsBehavior;
    TSTCellRegion *mRowRegion;
    unsigned short mStartRowIndex;
    unsigned short mNumberOfRows;
    unsigned short mNumberOfResizableRows;
    double *mCapturedRowHeights;
    double *mCurrentRowHeights;
    double *mMinimumRowHeights;
    double mCapturedRowHeightTotal;
    TSTCellRegion *mColumnRegion;
    unsigned char mStartColumnIndex;
    unsigned short mNumberOfColumns;
    unsigned short mNumberOfResizableColumns;
    double *mCapturedColumnWidths;
    double *mCurrentColumnWidths;
    double *mMinimumColumnWidths;
    double mCapturedColumnWidthTotal;
}

- (id)columnWidths;
- (id)rowHeights;
- (void)enumerateRowHeightsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateColumnWidthsUsingBlock:(CDUnknownBlockType)arg1;
- (struct CGSize)capturedTableSize;
- (void)captureNewMinimumRowHeights:(id)arg1;
- (double)applyColumnTotalWidth:(double)arg1;
- (double)applyRowTotalHeight:(double)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (double)getColumnWidthResize:(unsigned char)arg1;
- (double)getRowHeightResize:(unsigned short)arg1;
- (double)getColumnWidth:(unsigned char)arg1;
- (double)getRowHeight:(unsigned short)arg1;
- (double)getColumnInitialWidth:(unsigned char)arg1;
- (double)getRowInitialHeight:(unsigned short)arg1;
- (_Bool)hasWidthForColumn:(unsigned char)arg1;
- (_Bool)hasHeightForRow:(unsigned short)arg1;
- (void)invalidate;
- (_Bool)valid;
- (void)p_captureRowColumnInformation:(id)arg1 columnRegion:(id)arg2 rowRegion:(id)arg3;
- (void)dealloc;
- (id)initWithDynamicResizeInfo:(id)arg1;
- (id)initWithMasterLayout:(id)arg1 rowRegion:(id)arg2;
- (id)initWithMasterLayout:(id)arg1 columnRegion:(id)arg2;
- (id)initWithMasterLayout:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTRichTextPayload : TSPObject <TSPCopying>
{
    TSWPStorage *mStorage;
}

- (_Bool)requiresRichText;
- (id)string;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 storage:(id)arg2;
- (id)initWithStorage:(id)arg1;
@property(retain, nonatomic) TSWPStorage *storage; // @synthesize storage=mStorage;

@end

__attribute__((visibility("hidden")))
@interface TSTTableFilterRule : NSObject <NSCopying>
{
    TSTFormulaPredicate *mPredicate;
    _Bool mDisabled;
    _Bool mDoesNotNeedFormulaRewriteForImport;
}

+ (id)ruleWhereValuesInTable:(id)arg1 inColumn:(unsigned char)arg2 matchCell:(id)arg3;
+ (id)ruleWithFormulaPredicate:(id)arg1;
- (id)initFromArchive:(const struct FilterRuleArchive *)arg1;
- (void)encodeToArchive:(struct FilterRuleArchive *)arg1 archiver:(id)arg2;
- (_Bool)isEnabled;
- (void)setEnabled:(_Bool)arg1;
- (id)localizedTextRepresentation;
- (id)p_formatDurationPredicate;
- (id)p_formatDatePredicate;
- (id)p_formatValuePredicate;
- (id)p_formatTextPredicate;
- (_Bool)matchesCell:(id)arg1;
- (unsigned char)columnIndexForFilterRuleInTableModel:(id)arg1;
- (_Bool)matchesRow:(unsigned short)arg1 withFormulaTableID:(struct __CFUUID *)arg2 withCalculationEngine:(id)arg3;
- (_Bool)needsFormulaRewriteForImport;
- (void)setDoesNotNeedFormulaRewriteForImport;
- (_Bool)needsThreshold;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (struct TSCEFormula *)formula;
- (id)predicate;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initRuleWhereValuesInTable:(id)arg1 inColumn:(unsigned char)arg2 matchCell:(id)arg3;
- (id)initWithFormulaPredicate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTTableFilterSet : TSPObject <TSPCopying>
{
    int mType;
    _Bool mIsEnabled;
    NSArray *mRules;
    _Bool mNeedsFormulaRewriteForImport;
    vector_88016b54 mFilterOffsets;
    vector_277e069e mFilterEnabled;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchive:(struct FilterSetArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct FilterSetArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)setNeedsFormulaRewriteForImport:(_Bool)arg1;
- (_Bool)needsFormulaRewriteForImport;
- (_Bool)isFilterEnabledAtIndex:(unsigned long long)arg1;
- (void)disableFilterAtIndex:(unsigned long long)arg1;
- (void)enableFilterAtIndex:(unsigned long long)arg1;
- (void)setRulesAtAbsoluteIndices:(id)arg1 enabled:(_Bool)arg2;
- (_Bool)isRuleEnabledAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2;
- (void)disableRuleAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2;
- (void)enableRuleAtIndex:(unsigned long long)arg1 inFilterIndex:(unsigned long long)arg2;
- (void)setIsEnabled:(_Bool)arg1;
- (_Bool)isEnabled;
- (id)absoluteRuleIndicesForColumn:(unsigned char)arg1 inTable:(id)arg2;
- (unsigned long long)numberOfRulesInFilter:(unsigned long long)arg1;
- (unsigned long long)ruleIndexInFilter:(unsigned long long)arg1 matchingCell:(id)arg2;
- (_Bool)isFilterRuleEnabledInColumn:(unsigned char)arg1 withTable:(id)arg2;
- (_Bool)isFilterEnabledInColumn:(unsigned char)arg1 withTable:(id)arg2;
- (unsigned long long)firstFilterIndexForColumn:(unsigned char)arg1 inTable:(id)arg2;
- (id)filterIndicesForColumn:(unsigned char)arg1 inTable:(id)arg2;
- (void)enumerateRulesInFilterIndex:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateFiltersForColumn:(unsigned char)arg1 withTable:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateFilterIndicesInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateFiltersInTable:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)replaceRule:(id)arg1 atRuleIndex:(unsigned long long)arg2 inFilter:(unsigned long long)arg3;
- (id)addRules:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)addRules:(id)arg1 atRuleIndices:(id)arg2 inFilter:(unsigned long long)arg3 isNew:(_Bool)arg4;
- (id)removeRulesWithIndices:(id)arg1 inFilter:(unsigned long long)arg2;
- (id)removeRules:(id)arg1;
- (unsigned long long)filterCount;
- (unsigned long long)newFilterIndex;
- (void)setFilterSetType:(int)arg1;
- (int)filterSetType;
- (unsigned long long)ruleCount;
- (id)filterAtIndex:(unsigned long long)arg1 inTable:(id)arg2;
- (id)ruleInFilter:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (id)ruleAtAbsoluteIndex:(unsigned long long)arg1;
- (_Bool)rowIsShown:(unsigned short)arg1 withHiddenStateFormulaOwner:(id)arg2 withCalculationEngine:(id)arg3;
- (_Bool)p_thresholdComparisonMatchesFilter:(long long)arg1 withPredicateType:(int)arg2;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithFilterRules:(id)arg1 type:(int)arg2 context:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTFormulaPredicate : NSObject <NSCopying>
{
    struct TSCEFormula mFormula;
    int mPredicateType;
    int mQualifier1;
    int mQualifier2;
    int mArgIndex0;
    int mArgIndex1;
    int mArgIndex2;
    _Bool mParamsAreDone;
    int mNodeTag0;
    int mNodeTag1;
    int mNodeTag2;
    double mNumberParam1;
    double mNumberParam2;
    NSString *mStringParam1;
    NSDate *mDateTimeParam1;
    NSDate *mDateTimeParam2;
    struct TSCENumberValue *mDurationParam1;
    struct TSCENumberValue *mDurationParam2;
    CDStruct_4ceb3147 mCrossTableRefParam0;
    CDStruct_4ceb3147 mCrossTableRefParam1;
    CDStruct_4ceb3147 mCrossTableRefParam2;
    CDStruct_29631068 mCrossTableRowRefParam0;
    CDStruct_29631068 mCrossTableRowRefParam1;
    CDStruct_29631068 mCrossTableRowRefParam2;
    CDStruct_41fa97f4 mCrossTableColumnRefParam0;
    CDStruct_41fa97f4 mCrossTableColumnRefParam1;
    CDStruct_41fa97f4 mCrossTableColumnRefParam2;
    CDStruct_9527dae1 mPredicateArgs[2];
}

+ (_Bool)isThresholdNeededForType:(int)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initFromArchive:(const struct FormulaPredicateArchive *)arg1;
- (void)encodeToArchive:(struct FormulaPredicateArchive *)arg1 archiver:(id)arg2;
- (id)copyByOffsettingRelativeReferencesWithColumnOffset:(short)arg1 rowOffset:(int)arg2;
- (id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(CDStruct_0441cfb5)arg3;
- (id)copyByRemappingFormulaIDsWithMap:(struct __CFDictionary *)arg1 calcEngine:(id)arg2 error:(_Bool *)arg3;
- (void)p_populateMembersFromFormula;
- (void)p_clearDerivedVariables;
- (id)description;
- (CDStruct_9527dae1 *)predicateArg2atHostCoordinate:(CDStruct_0441cfb5)arg1;
- (CDStruct_9527dae1 *)predicateArg1atHostCoordinate:(CDStruct_0441cfb5)arg1;
- (const CDStruct_29631068 *)crossTableRowRefParam2;
- (const CDStruct_29631068 *)crossTableRowRefParam1;
- (const CDStruct_29631068 *)crossTableRowRefParam0;
- (const CDStruct_41fa97f4 *)crossTableColumnRefParam2;
- (const CDStruct_41fa97f4 *)crossTableColumnRefParam1;
- (const CDStruct_41fa97f4 *)crossTableColumnRefParam0;
- (const CDStruct_4ceb3147 *)crossTableRefParam2;
- (const CDStruct_4ceb3147 *)crossTableRefParam1;
- (const CDStruct_4ceb3147 *)crossTableRefParam0;
- (struct TSCENumberValue *)durationParam2;
- (struct TSCENumberValue *)durationParam1;
- (id)dateTimeParam2;
- (id)dateTimeParam1;
- (id)stringParam1;
- (double)numberParam2;
- (double)numberParam1;
- (int)nodeTag2;
- (int)nodeTag1;
- (int)nodeTag0;
- (void)p_setParamIndex2:(int)arg1;
- (void)p_setParamIndex1:(int)arg1;
- (void)p_setParamIndex0:(int)arg1;
- (void)p_setQualifier2:(int)arg1;
- (void)p_setQualifier1:(int)arg1;
- (void)p_setPredicateType:(int)arg1;
- (int)qualifier2;
- (int)qualifier1;
- (int)predicateType;
- (void)setFormula:(const struct TSCEFormula *)arg1;
- (struct TSCEFormula *)formula;
- (_Bool)evaluateAtCellID:(CDStruct_0441cfb5)arg1 inFormulaOwner:(struct __CFUUID *)arg2 calculationEngine:(id)arg3;
- (_Bool)p_testDataTypesForArg0:(int)arg1 arg1:(int)arg2 arg2:(int)arg3 predShouldReturn:(_Bool *)arg4;
- (int)p_argTypeForNodeTag:(int)arg1 argNum:(unsigned long long)arg2 calculationEngine:(id)arg3 hostCell:(CDStruct_0441cfb5)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLiteralCellType:(int)arg1 argumentCellReference:(CDStruct_78b871e1)arg2 hostCell:(CDStruct_0441cfb5)arg3;
- (id)initWithLiteralTextType:(int)arg1 string:(id)arg2 argumentCellReference:(CDStruct_78b871e1)arg3 hostCell:(CDStruct_0441cfb5)arg4;
- (id)initWithLiteralDurationType:(int)arg1 duration1:(struct TSTDurationWrapper)arg2 duration2:(struct TSTDurationWrapper)arg3 qualifier:(int)arg4 argumentCellReference:(CDStruct_78b871e1)arg5 hostCell:(CDStruct_0441cfb5)arg6;
- (id)initWithLiteralNumberType:(int)arg1 number1:(double)arg2 number2:(double)arg3 qualifier:(int)arg4 argumentCellReference:(CDStruct_78b871e1)arg5 hostCell:(CDStruct_0441cfb5)arg6;
- (id)initWithLiteralDateType:(int)arg1 date1:(id)arg2 date2:(id)arg3 number1:(double)arg4 number2:(double)arg5 qualifier1:(int)arg6 qualifier2:(int)arg7 argumentCellReference:(CDStruct_78b871e1)arg8 hostCell:(CDStruct_0441cfb5)arg9;
- (void)p_appendASTForPeriodBoundary:(struct TSCEASTNodeArray *)arg1 scale:(int)arg2 direction:(int)arg3 offset:(CDStruct_9527dae1)arg4 offsetParamIndex:(int *)arg5 numNodes:(int *)arg6 earlierBound:(_Bool)arg7 isCalPers:(_Bool)arg8 hostCell:(CDStruct_0441cfb5)arg9;
- (id)initWithPredicateType:(int)arg1 arg1:(CDStruct_9527dae1)arg2 arg2:(CDStruct_9527dae1)arg3 qualifier1:(int)arg4 qualifier2:(int)arg5 argumentCellReference:(CDStruct_78b871e1)arg6 hostCell:(CDStruct_0441cfb5)arg7;
- (_Bool)isEqualForInspector:(id)arg1 atHostCoordinate:(CDStruct_0441cfb5)arg2;
- (_Bool)p_predicateArg:(CDStruct_9527dae1 *)arg1 isEqual:(CDStruct_9527dae1 *)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)p_isEqualForNonFormulaItems:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTTableSortRule : NSObject <NSCopying>
{
    unsigned char mColumnIndex;
    int mDirection;
}

+ (id)ruleWithColumnIndex:(unsigned char)arg1 direction:(int)arg2;
@property(readonly, nonatomic) int direction; // @synthesize direction=mDirection;
@property(readonly, nonatomic) unsigned char columnIndex; // @synthesize columnIndex=mColumnIndex;
- (id)initFromArchive:(const struct TableSortOrderArchive_SortRuleArchive *)arg1;
- (void)encodeToArchive:(struct TableSortOrderArchive_SortRuleArchive *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)ruleByChangingDirectionTo:(int)arg1;
- (id)ruleByChangingColumnIndexTo:(unsigned char)arg1;
- (id)initWithColumnIndex:(unsigned char)arg1 direction:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTTableBadge : NSObject
{
    int _badgeType;
    TSUColor *_color;
    double _viewScale;
    struct CGRect _frame;
}

+ (id)badgeWithType:(int)arg1 color:(id)arg2 viewScale:(double)arg3 frame:(struct CGRect)arg4;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(retain, nonatomic) TSUColor *color; // @synthesize color=_color;
@property(nonatomic) int badgeType; // @synthesize badgeType=_badgeType;
- (void)drawInContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTEditingState : TSPObject <TSWPStorageObserver>
{
    TSWPStorage *mEditingStorage;
    TSTTableInfo *mTableInfo;
    TSTCell *mEditingCell;
    CDStruct_0441cfb5 mEditingCellID;
    int mEditingMode;
    TSTTableSelection *mSelection;
    TSTTableSelection *mSelectionReflectingEditingState;
    TSTSearchReference *mSearchReference;
    int mPreviousEditingMode;
    unsigned char mLastColumnHitByTap;
    TSUPointerKeyDictionary *mColoredReferences;
    _Bool mCellWasEditedInCurrentSession;
    _Bool mEditingCellInProxy;
    TSTTextStatisticsTracker *mTracker;
    _Bool mEndingEditingDueToCancelOperation;
    _Bool _dispatchingPreflight;
    CDStruct_0441cfb5 _lastEditingCellID;
}

@property(nonatomic, getter=isDispatchingPreflight) _Bool dispatchingPreflight; // @synthesize dispatchingPreflight=_dispatchingPreflight;
@property(nonatomic) CDStruct_0441cfb5 lastEditingCellID; // @synthesize lastEditingCellID=_lastEditingCellID;
@property(nonatomic) unsigned char lastColumnHitByTap; // @synthesize lastColumnHitByTap=mLastColumnHitByTap;
@property(nonatomic) TSTTextStatisticsTracker *tracker; // @synthesize tracker=mTracker;
@property(nonatomic, getter=isEndingEditingDueToCancelOperation) _Bool endingEditingDueToCancelOperation; // @synthesize endingEditingDueToCancelOperation=mEndingEditingDueToCancelOperation;
@property(retain, nonatomic) TSTSearchReference *searchReference; // @synthesize searchReference=mSearchReference;
@property(nonatomic) _Bool editingCellInProxy; // @synthesize editingCellInProxy=mEditingCellInProxy;
@property(retain, nonatomic) TSWPStorage *editingStorage; // @synthesize editingStorage=mEditingStorage;
- (id).cxx_construct;
- (void)didEndEditingDueToCancelOperation;
- (void)willEndEditingDueToCancelOperation;
- (_Bool)p_shouldSetCellPostFlight;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)p_unregisterStorageObserver;
- (void)p_registerStorageObserver;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
@property(readonly, nonatomic) int editingMode;
- (void)reloadValueFromFocusedCell;
- (void)reloadValue;
- (void)performEndRichTextEditing;
- (id)prepareEditingStorageToEditCell:(CDStruct_0441cfb5)arg1;
- (id)storageForCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 editingCellRange;
@property(retain, nonatomic) TSTCell *editingCell;
@property(copy, nonatomic) TSTTableSelection *selection;
@property(nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
@property(readonly, nonatomic) TSTTableModel *tableModel;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_performRichTextStorageDOLC:(id)arg1 newStorage:(id)arg2;
- (void)dealloc;
@property(readonly, nonatomic) TSKCommandController *commandController;
- (id)initForPasteboardFromSourceInfo:(id)arg1 stylesheet:(id)arg2;
- (id)initWithTableInfo:(id)arg1;
@property(nonatomic) _Bool cellWasEditedInCurrentSession;
@property(nonatomic) CDStruct_0441cfb5 editingCellID;

@end

__attribute__((visibility("hidden")))
@interface TSTCellRegion : NSObject <NSCopying>
{
    unsigned long long mCellRangesCount;
    CDStruct_5f1f7aa9 *mCellRanges;
    CDStruct_5f1f7aa9 mBoundingCellRange;
    unsigned long long mCellCount;
    NSIndexSet *mIntersectingColumnsIndexSet;
    NSIndexSet *mIntersectingRowsIndexSet;
    CDStruct_0441cfb5 mUpperLeftCellID;
    CDStruct_0441cfb5 mBottomRightCellID;
}

+ (id)regionFromColumnIndices:(id)arg1;
+ (id)regionFromRowIndices:(id)arg1;
+ (id)regionFillingRowsFromRegion:(id)arg1;
+ (id)regionFillingColumnsFromRegion:(id)arg1;
+ (id)invalidRegion;
+ (id)region:(id)arg1 subtractingRegion:(id)arg2;
+ (id)region:(id)arg1 addingRegion:(id)arg2;
+ (id)unionEveryRangeInRegion:(id)arg1 withRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 intersectingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 subtractingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)region:(id)arg1 addingRange:(CDStruct_5f1f7aa9)arg2;
+ (id)regionFromCellDiffMap:(id)arg1;
+ (id)regionFromCellMap:(id)arg1;
+ (id)regionFromRange:(CDStruct_5f1f7aa9)arg1;
- (id).cxx_construct;
- (id)description;
- (void)p_calculateUpperLeftAndBottomRightCellIDAndBoundingCellRange;
- (void)p_calculateIntersectingRows;
- (void)p_calculateIntersectingColumns;
- (void)p_calculateAncillaryInformation;
- (void)p_insertRangeIntoRegion:(CDStruct_5f1f7aa9)arg1;
- (void)enumerateMissingColumnsIntersectingCellRange:(CDStruct_5f1f7aa9)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateColumnsIntersectingCellRange:(CDStruct_5f1f7aa9)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateMissingRowsIntersectingCellRange:(CDStruct_5f1f7aa9)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowsIntersectingCellRange:(CDStruct_5f1f7aa9)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateColumnRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateRowRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateInDirection:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRowsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateColumnsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateCellRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateCellIDsUsingBlock:(CDUnknownBlockType)arg1;
- (struct NSObject *)topToBottomIterator;
- (struct NSObject *)rightToLeftIterator;
- (struct NSObject *)iterator;
- (CDStruct_0441cfb5)suitableCursor;
- (CDStruct_0441cfb5)suitableAnchor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isValid;
- (id)intersectingRowsIndexSet;
- (id)intersectingColumnsIndexSet;
@property(readonly, nonatomic) unsigned short numberOfIntersectingRows;
@property(readonly, nonatomic) unsigned short numberOfIntersectingColumns;
- (_Bool)intersectsRow:(unsigned short)arg1;
- (_Bool)intersectsColumn:(unsigned char)arg1;
- (_Bool)partiallyIntersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)intersectsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)equalsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)equalsCellRegion:(id)arg1;
- (_Bool)containsCellRegion:(id)arg1;
- (_Bool)containsCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)containsCellID:(CDStruct_0441cfb5)arg1;
@property(readonly, nonatomic) _Bool isRectangle;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long cellCount;
@property(readonly, nonatomic) CDStruct_5f1f7aa9 boundingCellRange;
@property(readonly, nonatomic) CDStruct_0441cfb5 bottomRightCellID;
@property(readonly, nonatomic) CDStruct_0441cfb5 upperLeftCellID;
- (id)regionByApplyingRowMapping:(id)arg1;
- (id)regionByAddingColumns:(id)arg1;
- (id)regionByAddingRows:(id)arg1;
- (id)regionByIntersectingColumnIndices:(id)arg1;
- (id)regionByIntersectingRowIndices:(id)arg1;
- (id)regionByRemovingColumns:(id)arg1;
- (id)regionByRemovingRows:(id)arg1;
- (id)regionOffsetBy:(CDStruct_79c71658)arg1;
- (id)regionBySubtractingRegion:(id)arg1;
- (id)regionByAddingRegion:(id)arg1;
- (id)regionByUnioningEveryRangeInRegionWithRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByIntersectingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionBySubtractingRange:(CDStruct_5f1f7aa9)arg1;
- (id)regionByAddingRange:(CDStruct_5f1f7aa9)arg1;
- (void)saveToMessage:(struct CellRegion *)arg1;
- (id)initFromMessage:(const struct CellRegion *)arg1;
- (void)dealloc;
- (id)init;
- (void)fillCellRangeRowMajorSet:(set_bf64ed85 *)arg1 leftToRight:(_Bool)arg2;
- (void)fillCellRangeColMajorSet:(set_1b864098 *)arg1 leftToRight:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTCellRegionRowMajorIterator : NSObject <TSTCellRegionIterating>
{
    set_bf64ed85 mCellRangeSet;
    CDStruct_0441cfb5 mCellID;
    CDStruct_5f1f7aa9 mBoundingCellRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (void)dealloc;
- (id)initWithCellRegion:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTCellRegionRowMajorReverseIterator : TSTCellRegionRowMajorIterator
{
}

- (CDStruct_0441cfb5)getNext;
- (id)initWithCellRegion:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTCellRegionColMajorIterator : NSObject <TSTCellRegionIterating>
{
    set_1b864098 mCellRangeSet;
    CDStruct_0441cfb5 mCellID;
    CDStruct_5f1f7aa9 mBoundingCellRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)terminate;
- (CDStruct_0441cfb5)getNext;
- (void)dealloc;
- (id)initWithCellRegion:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTTextStatisticsTracker : NSObject <TSWPTextStatisticsTracking, TSKChangeSourceObserver, TSWPStorageObserver>
{
    id <TSWPStatisticsControlling> mStatisticsController;
    TSTTableInfo *mTableInfo;
    CDStruct_5f1f7aa9 mCellRange;
    NSMutableArray *mStatArray;
    TSWPTextStatistics *mTotalStatistics;
}

- (id).cxx_construct;
- (void)dealloc;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (id)statistics;
- (void)incrementallyUpdateStatisticsUntil:(id)arg1;
- (void)tearDown;
- (id)initWithController:(id)arg1 andObject:(id)arg2;
- (void)p_updateStats:(id)arg1 withCell:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTIdentifierNode : TSTExpressionNode
{
    NSString *mSheetName;
    NSString *mTableName;
    NSString *mIdentifier;
}

- (void)saveToArchive:(struct IdentifierNodeArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct IdentifierNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray *)arg1 hostCell:(CDStruct_0441cfb5)arg2;
- (id)copyByResolvingIdentifiers:(id)arg1 hostTable:(id)arg2 forceReferenceInterpretation:(_Bool)arg3;
- (int)tokenType;
- (id)string;
- (void)setSheetName:(id)arg1;
- (void)setTableName:(id)arg1;
- (id)sheetName;
- (id)tableName;
- (id)identifierWithWhitespaceAppended;
- (id)identifier;
- (void)dealloc;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;
- (id)initWithContext:(id)arg1 identifier:(id)arg2 firstIndex:(unsigned long long)arg3 lastIndex:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSTTemporaryCollectionNode : NSObject
{
    struct TSCEVectorIndexPair mDimensions;
    NSMutableArray *mChildren;
    NSString *mWhitespaceBeforeFirstChild;
    NSMutableArray *mWhitespaceAfterDelimiters;
    unsigned long long mFirstIndex;
    unsigned long long mLastIndex;
}

@property(nonatomic) unsigned long long lastIndex; // @synthesize lastIndex=mLastIndex;
@property(nonatomic) unsigned long long firstIndex; // @synthesize firstIndex=mFirstIndex;
@property(retain, nonatomic) NSMutableArray *whitespaceAfterDelimiters; // @synthesize whitespaceAfterDelimiters=mWhitespaceAfterDelimiters;
@property(retain, nonatomic) NSString *whitespaceBeforeFirstChild; // @synthesize whitespaceBeforeFirstChild=mWhitespaceBeforeFirstChild;
@property(retain, nonatomic) NSMutableArray *children; // @synthesize children=mChildren;
@property(nonatomic) struct TSCEVectorIndexPair dimensions; // @synthesize dimensions=mDimensions;
- (id).cxx_construct;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTConditionalStyleRule : NSObject <NSCopying>
{
    TSTFormulaPredicate *mPredicate;
    TSWPParagraphStyle *mTextStyle;
    TSTCellStyle *mCellStyle;
    int _predicateType;
}

+ (id)conditionalStyleRuleWithRule:(id)arg1;
@property(readonly, nonatomic) int predicateType; // @synthesize predicateType=_predicateType;
- (id)copyByOffsettingRelativeReferencesWithColumnOffset:(short)arg1 rowOffset:(int)arg2;
- (id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(CDStruct_0441cfb5)arg3;
- (id)copyByRemappingFormulaIDsWithMap:(struct __CFDictionary *)arg1 calcEngine:(id)arg2 error:(_Bool *)arg3;
- (id)description;
- (_Bool)evaluateFormulaAtCellID:(CDStruct_0441cfb5)arg1 withCalcEngine:(id)arg2 withFormulaTableID:(struct __CFUUID *)arg3;
@property(readonly, nonatomic) struct TSCEFormula *formula;
@property(readonly, copy, nonatomic) TSTFormulaPredicate *predicate;
@property(readonly, copy, nonatomic) TSWPParagraphStyle *textStyle;
@property(readonly, copy, nonatomic) TSTCellStyle *cellStyle;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithContext:(id)arg1;
- (id)initWithPredicate:(id)arg1 cellStyle:(id)arg2 textStyle:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSTConditionalStyleSet : TSPObject <TSPCopying>
{
    NSMutableArray *mConditionalStyleSetRules;
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (unsigned long long)ruleCount;
- (id)ruleAtIndex:(unsigned long long)arg1;
- (id)rules;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)copyByOffsettingRelativeReferencesWithColumnOffset:(short)arg1 rowOffset:(int)arg2;
- (id)copyByRewritingWithSpec:(id)arg1 inOwner:(id)arg2 inCellCoordinate:(CDStruct_0441cfb5)arg3;
- (id)copyByRemappingFormulaIDsWithMap:(struct __CFDictionary *)arg1 calcEngine:(id)arg2 error:(_Bool *)arg3;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 rules:(id)arg2;
- (id)initWithConditionalStyleSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTConditionalStyleFormulaOwner : NSObject <TSCEFormulaOwning>
{
    TSTTableInfo *mTableInfo;
    TSCECalculationEngine *mCalculationEngine;
    struct __CFUUID *mOwnerID;
    TSCECellCoordinateVector *mCellsToInvalidate;
    TSCECellCoordinateVector *mCellsToRewrite;
}

- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(id)arg1;
- (void)retainForCalculationEngine:(id)arg1;
- (id)endRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(id)arg3;
- (void)invalidateForCalculationEngine:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;
- (int)registerWithCalculationEngineChoosingUniqueID:(id)arg1;
- (void)changedConditionForCellID:(CDStruct_0441cfb5)arg1;
- (void)replaceFormulaForConditionalStyle:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (void)removeFormulaAtCellID:(CDStruct_0441cfb5)arg1;
- (void)addFormulaForConditionalStyle:(id)arg1 atCellID:(CDStruct_0441cfb5)arg2;
- (id)tableInfo;
- (void)setTableInfo:(id)arg1;
- (void)setOwnerID:(struct __CFUUID *)arg1;
- (struct __CFUUID *)ownerID;
- (_Bool)checkConditionForCellID:(CDStruct_0441cfb5)arg1 withConditionalStyle:(id)arg2 withIndex:(unsigned long long *)arg3;
- (void)dealloc;
- (id)initWithTableInfo:(id)arg1;
- (id)initWithTableInfo:(id)arg1 ownerID:(struct __CFUUID *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutDynamicResizeInfoUnify : TSTLayoutDynamicResizeInfo
{
    double mTargetWidth;
    double mTargetHeight;
}

@property(readonly, nonatomic) double targetHeight; // @synthesize targetHeight=mTargetHeight;
@property(readonly, nonatomic) double targetWidth; // @synthesize targetWidth=mTargetWidth;
- (void)applyFixedWidth:(double)arg1;
- (void)applyFixedHeight:(double)arg1;
- (void)captureNewMinimumRowHeights:(id)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (void)p_applyUnifyFixedSize:(double)arg1 region:(id)arg2 direction:(int)arg3 count:(unsigned short)arg4 currentArray:(double *)arg5 minimumArray:(double *)arg6;
- (double)p_applyUnifyResizeFactor:(double)arg1 region:(id)arg2 direction:(int)arg3 totalOfCaptured:(double)arg4 count:(unsigned short)arg5 capturedArray:(double *)arg6 currentArray:(double *)arg7 minimumArray:(double *)arg8;

@end

__attribute__((visibility("hidden")))
@interface TSTLayoutDynamicResizeInfoAccordion : TSTLayoutDynamicResizeInfo
{
}

- (void)captureNewMinimumRowHeights:(id)arg1;
- (double)applyResizeWidthFactor:(double)arg1;
- (double)applyResizeHeightFactor:(double)arg1;
- (double)p_applyAccordionResizeFactor:(double)arg1 region:(id)arg2 direction:(int)arg3 totalOfCaptured:(double)arg4 count:(unsigned short)arg5 capturedArray:(double *)arg6 currentArray:(double *)arg7 minimumArray:(double *)arg8;

@end

__attribute__((visibility("hidden")))
@interface TSTPasteMap : NSObject
{
    set_d5b49e31 mRowTgtToPbMaps;
    set_d5b49e31 mColumnTgtToPbMaps;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)createTgtMergeMapFromPbMergeMap:(id)arg1 andTgtRegion:(id *)arg2 andTgtBodyRange:(CDStruct_5f1f7aa9)arg3;
- (vector_764b4ef2 *)p_tgtRangesForPbRange:(CDStruct_5f1f7aa9)arg1 givenColumnMaps:(const multiset_5f6ec4d0 *)arg2 rowMaps:(const multiset_5f6ec4d0 *)arg3;
- (id)createTgtRegionByIntersectingPbRegion:(id)arg1 andTgtRegion:(id)arg2;
- (id)createTgtRegionFromPbRegion:(id)arg1;
- (CDStruct_0441cfb5)pbCellIDForTgtCellID:(CDStruct_0441cfb5)arg1;
- (CDStruct_5f1f7aa9)pbRangeForTgtRange:(CDStruct_5f1f7aa9)arg1;
- (CDStruct_0441cfb5)p_tgtCellIDForPbCellID:(CDStruct_0441cfb5)arg1 givenColumnMaps:(const multiset_5f6ec4d0 *)arg2 rowMaps:(const multiset_5f6ec4d0 *)arg3;
- (CDStruct_5f1f7aa9)p_tgtRangeForPbRange:(CDStruct_5f1f7aa9)arg1 givenColumnMaps:(const multiset_5f6ec4d0 *)arg2 rowMaps:(const multiset_5f6ec4d0 *)arg3;
- (struct _NSRange)p_tgtRangeFromPbRange:(const struct TSTColumnOrRowMap *)arg1 andMap:(const multiset_5f6ec4d0 *)arg2;
- (unsigned short)p_indexForTgtToPbMaps:(set_d5b49e31 *)arg1 andMap:(struct TSTColumnOrRowMap *)arg2;
- (id)initWithPbTable:(id)arg1 pbRange:(CDStruct_5f1f7aa9)arg2 tgtTable:(id)arg3 tgtRange:(CDStruct_5f1f7aa9)arg4 flag:(int)arg5;
- (id)initWithPbRange:(CDStruct_5f1f7aa9)arg1 tgtRange:(CDStruct_5f1f7aa9)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSTFilteredTableDynamicContentDelegate : NSObject <TSTLayoutDynamicContentProtocol>
{
    TSTTableModel *mTableModel;
}

- (_Bool)dynamicContentMustDrawOnMainThread;
- (_Bool)cell:(id *)arg1 forCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithTableModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTHiddenRowsColumnsCache : NSObject <NSCopying>
{
    TSTHiddenDimensionCache *mHiddenRows;
    TSTHiddenDimensionCache *mHiddenColumns;
}

- (id)description;
- (void)validateChangeDescriptors:(id)arg1;
- (void)validate:(id)arg1;
- (void)pop;
- (void)swap;
- (void)push;
- (void)pushAndValidate:(id)arg1;
- (unsigned short)numberOfVisibleRowsFromHeader:(unsigned short)arg1;
@property(readonly, nonatomic) NSIndexSet *visibleColumnIndices;
@property(readonly, nonatomic) NSIndexSet *visibleRowIndices;
- (CDStruct_0441cfb5)visibleCellOffsetBy:(CDStruct_79c71658)arg1 fromCellID:(CDStruct_0441cfb5)arg2;
- (unsigned char)previousNthVisibleColumn:(unsigned short)arg1 fromColumnIndex:(unsigned char)arg2;
- (unsigned short)previousNthVisibleRow:(unsigned short)arg1 fromRowIndex:(unsigned short)arg2;
- (unsigned char)nextVisibleColumn:(unsigned char)arg1;
- (unsigned char)previousVisibleColumn:(unsigned char)arg1;
- (unsigned short)nextVisibleRow:(unsigned short)arg1;
- (unsigned short)previousVisibleRow:(unsigned short)arg1;
- (_Bool)anyColumnsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)anyRowsUserHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)anyRowsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberColumnsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberRowsUserHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (unsigned short)numberRowsHiddenInCellRange:(CDStruct_5f1f7aa9)arg1;
- (_Bool)isColumnHidden:(unsigned char)arg1;
- (_Bool)isRowUserHidden:(unsigned short)arg1;
- (_Bool)isRowHidden:(unsigned short)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSTHiddenDimensionCache : NSObject <NSCopying>
{
    unsigned long long mCount;
    NSMutableIndexSet *mCachedVisible;
    NSMutableIndexSet *mCachedUserVisible;
    NSMutableIndexSet *mInvalidRanges;
    unsigned long long mMarkIndex;
}

@property(readonly, nonatomic) NSIndexSet *visibleIndices; // @synthesize visibleIndices=mCachedVisible;
- (id)description;
- (void)insertRange:(struct _NSRange)arg1;
- (void)deleteRange:(struct _NSRange)arg1;
- (void)moveRangeFrom:(struct _NSRange)arg1 toIndex:(unsigned long long)arg2;
- (void)setAllInvalidValuesUsingBlock:(CDUnknownBlockType)arg1;
- (void)setAllValuesToZero;
- (unsigned short)numberOfVisibleIndicesToMarkIndexFrom:(unsigned long long)arg1;
- (void)setMarkIndex:(unsigned long long)arg1;
- (unsigned long long)findNthNextVisibleIndex:(unsigned long long)arg1 fromIndex:(unsigned long long)arg2;
- (unsigned long long)findNthPreviousVisibleIndex:(unsigned long long)arg1 fromIndex:(unsigned long long)arg2;
- (unsigned long long)findNextVisibleIndex:(unsigned long long)arg1;
- (unsigned long long)findPreviousVisibleIndex:(unsigned long long)arg1;
- (_Bool)anyUserHiddenIndicesInRange:(struct _NSRange)arg1;
- (_Bool)anyHiddenIndicesInRange:(struct _NSRange)arg1;
- (unsigned long long)numberUserHiddenIndicesInRange:(struct _NSRange)arg1;
- (unsigned long long)numberHiddenIndicesInRange:(struct _NSRange)arg1;
- (_Bool)isIndexUserHidden:(unsigned long long)arg1;
- (_Bool)isIndexHidden:(unsigned long long)arg1;
- (void)invalidate:(struct _NSRange)arg1;
- (void)setCount:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithUserHiddenInformation:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTPersistentSearchableCellMap : TSTPersistentCellMap <TSTSearchableCellMap>
{
    NSMutableDictionary *mCellIDToIndexMap;
}

- (id)findCellFromCellMap:(CDStruct_0441cfb5)arg1;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithArchive:(const struct CellMapArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (id)initWithOwner:(id)arg1 andCapacity:(unsigned long long)arg2;

// Remaining properties
@property(nonatomic) _Bool appliesToHidden;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTEphemeralSearchableCellMap : TSTEphemeralCellMap <TSTSearchableCellMap>
{
    NSMutableDictionary *mCellIDToIndexMap;
}

- (id)findCellFromCellMap:(CDStruct_0441cfb5)arg1;
- (void)popLastCell;
- (void)addCell:(id)arg1 andCellID:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;

// Remaining properties
@property(nonatomic) _Bool appliesToHidden;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTFormulaEqualsTokenAttachment : TSWPUIGraphicalAttachment
{
}

- (id)description;
- (void)saveToArchive:(struct FormulaEqualsTokenAttachmentArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct FormulaEqualsTokenAttachmentArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)wantsSelectionAtPoint:(struct CGPoint)arg1;
- (double)baselineOffset;
- (struct CGSize)size;
- (id)rendererForAttachment;

@end

__attribute__((visibility("hidden")))
@interface TSTFormulaEqualsTokenAttachmentRenderer : NSObject <TSWPGraphicalAttachmentRenderer>
{
}

- (void)drawAttachment:(id)arg1 inContext:(struct CGContext *)arg2 selection:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTCommentHosting : NSObject <TSDAnnotationHosting, TSDCommentStorageDelegate>
{
    TSDCommentStorage *mStorage;
    _Bool _forRollover;
    CDStruct_0441cfb5 mCellID;
    TSTTableInfo *mTableInfo;
}

@property(readonly, nonatomic, getter=isForRollover) _Bool forRollover; // @synthesize forRollover=_forRollover;
@property(readonly, nonatomic) CDStruct_0441cfb5 cellID; // @synthesize cellID=mCellID;
@property(readonly, nonatomic) TSTTableInfo *tableInfo; // @synthesize tableInfo=mTableInfo;
@property(readonly, copy) NSString *description;
- (void)commentStorageTextDidChange:(id)arg1;
- (void)commitText:(id)arg1;
- (id)commandForDeletingComment;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@property(readonly, nonatomic) NSDate *date;
- (void)setAuthor:(id)arg1;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) id <TSKModel> hostingModel;
- (Class)editorClass;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(copy, nonatomic) TSDCommentStorage *storage;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 forTableInfo:(id)arg2 cellID:(CDStruct_0441cfb5)arg3;

// Remaining properties
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSTStrokeAssociatedObject : NSObject
{
    _Bool dontClearBackground;
}

@property(nonatomic) _Bool dontClearBackground; // @synthesize dontClearBackground;

@end

__attribute__((visibility("hidden")))
@interface TSTImportWarningSet : NSObject <TSTCellDiffing>
{
    struct TSTImportWarningSetCellWarningFlags mCellWarning;
    NSString *mOriginalDataFormat;
    struct TSTImportFormulaWarning mFormulaWarning;
}

+ (id)cellDiffClearingAllWarningsWithContext:(id)arg1;
+ (id)warningSetForUnsupportedDataFormat:(id)arg1;
+ (id)warningSetForUnsupportedCondFormat;
+ (id)warningSetForCondFormatUnsupportedTimePeriod;
+ (id)warningSetForCondFormatUnsupportedStyling;
+ (id)warningSetForCondFormatUnsupportedOperator;
+ (id)warningSetForCondFormatStopIfTrue;
+ (id)warningSetForCondFormatParamatersNotAllTheSame;
+ (id)warningSetForCondFormatNotContainsErrors;
+ (id)warningSetForCondFormatExpr;
+ (id)warningSetForCondFormatContainsErrors;
+ (id)warningSetForCondFormatComplexFormula;
+ (id)warningSetForCondFormatAboveAvgStdDev;
+ (id)warningSetForCondFormatAboveAvgEqualAvg;
+ (id)warningSetForTransposeUnmodifiedWithIssues;
+ (id)warningSetForTransposedWithIssues:(id)arg1;
+ (id)warningSetForTransposedWithoutIssues:(id)arg1;
+ (id)warningSetForUnsupportedNameFormula:(id)arg1;
+ (id)warningSetForUnsupportedFunction:(id)arg1 originalFormula:(id)arg2;
+ (id)warningSetForUnsupportedFormula:(id)arg1;
+ (id)warningSetForUnknownName:(id)arg1 originalFormula:(id)arg2;
+ (id)warningSetForSharedFormulaBaseNotFoundFormula:(id)arg1;
+ (id)warningSetForReferenceOutOfBoundsFormula:(id)arg1;
+ (id)warningSetForNaturalLanguageFormula:(id)arg1;
+ (id)warningSetForExternalReferenceFormula:(id)arg1;
+ (id)warningSetForErrorTokenFormula:(id)arg1;
+ (id)warningSetForDifferentBehaviorForFunctionFormula:(id)arg1 originalFormula:(id)arg2;
+ (id)warningSetForArrayedFormula:(id)arg1;
+ (id)warningSetFor3DReferenceFormula:(id)arg1;
+ (id)emptyWarningSet;
+ (id)p_warningSetForFormulaWarningType:(long long)arg1 originalFormula:(id)arg2 supplementaryText:(id)arg3;
+ (id)properties;
- (id).cxx_construct;
- (id)description;
- (void)saveToArchive:(struct ImportWarningSetArchive *)arg1;
- (id)initFromArchive:(const struct ImportWarningSetArchive *)arg1;
- (_Bool)isTransposeWarning;
- (id)warningSetByRemovingWarningsFromSet:(id)arg1;
- (id)cellDiffClearingWarningsWithContext:(id)arg1;
- (id)warningSetByAddingWarningsFromSet:(id)arg1;
- (id)localizedWarningStrings;
- (id)individualWarnings;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)areAnySet;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)propertiesMatchingThoseInMap:(id)arg1;
- (id)objectByRemovingPropertiesInMap:(id)arg1 addingPropertiesInMap:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTImportWarningSetByCoordinateMap : NSObject
{
    struct unordered_map<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>, std::__1::hash<TSUColumnRowCoordinate>, std::__1::equal_to<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<TSTImportWarningSet>>>> _warningSetForCoordinate;
    vector_40b16ab8 _coordinates;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchive:(struct ImportWarningSetByCoordinateMapArchive *)arg1;
- (id)initFromArchive:(const struct ImportWarningSetByCoordinateMapArchive *)arg1;
- (id)warningSetAtCoordinate:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)cellCoordinateForIndex:(unsigned long long)arg1;
- (void)addWarning:(id)arg1 atCellCoordinate:(CDStruct_0441cfb5)arg2;
@property(readonly) unsigned long long count;

@end

__attribute__((visibility("hidden")))
@interface TSTWrappedFormula : TSTFormula
{
    int mFunctionIndex;
}

@property(nonatomic) int functionIndex; // @synthesize functionIndex=mFunctionIndex;
- (void)reparseWithStorage:(id)arg1 adjustExpressionTree:(CDUnknownBlockType)arg2;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(_Bool)arg2;
- (id)nodesToCheckForBareArgumentPlaceholders;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSTSortRuleReferenceTrackerReference : NSObject
{
    unsigned char mColumnIndex;
    TSCETrackedReference *mTrackedReference;
}

+ (id)referenceWithColumnIndex:(unsigned char)arg1 trackedReference:(id)arg2;
@property(retain, nonatomic) TSCETrackedReference *trackedReference; // @synthesize trackedReference=mTrackedReference;
@property(nonatomic) unsigned char columnIndex; // @synthesize columnIndex=mColumnIndex;
- (_Bool)isEqual:(id)arg1;
- (_Bool)hasTrackedReferenceEqualTo:(id)arg1;
- (unsigned long long)hash;
- (id)initWithColumnIndex:(unsigned char)arg1 trackedReference:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSTChartReferenceFormula : TSTWrappedFormula
{
}

- (void)reparseWithStorage:(id)arg1;
- (id)initWithCalculationEngine:(id)arg1 expressionTree:(id)arg2 hostCell:(CDStruct_0441cfb5)arg3 hostTable:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextPresetDisplayItem : NSObject
{
    TSWPTextStylePreset *_preset;
    NSString *_displayName;
}

@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain, nonatomic) TSWPTextStylePreset *preset; // @synthesize preset=_preset;
- (id)description;
- (void)saveToArchive:(struct TextPresetDisplayItemArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TextPresetDisplayItemArchive *)arg1 unarchiver:(id)arg2;
- (void)dealloc;
- (id)initWithPreset:(id)arg1 displayName:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPSearch : TSKSearch
{
    NSString *_searchedString;
    TSWPFilteredString *_filteredString;
    TSWPStorage *_storage;
    struct _NSRange _range;
}

@property(readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property(readonly, retain, nonatomic) TSWPFilteredString *filteredString; // @synthesize filteredString=_filteredString;
@property(readonly, nonatomic) NSString *searchedString; // @synthesize searchedString=_searchedString;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (id).cxx_construct;
- (void)foundHitWithRange:(struct _NSRange)arg1;
- (_Bool)isComplete;
- (void)dealloc;
- (id)initWithString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3 storage:(id)arg4 range:(struct _NSRange)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSWPFilteredString : NSString
{
    unsigned long long _length;
    NSString *_sourceString;
    TSWPDeletionRangeMap *_rangeMap;
    TSWPRangeArray *_sourceRanges;
}

@property(readonly, retain, nonatomic) TSWPRangeArray *sourceRanges; // @synthesize sourceRanges=_sourceRanges;
@property(retain, nonatomic) TSWPDeletionRangeMap *rangeMap; // @synthesize rangeMap=_rangeMap;
@property(nonatomic) NSString *sourceString; // @synthesize sourceString=_sourceString;
- (unsigned long long)length;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 subrange:(struct _NSRange)arg2 removeRanges:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPDefaultGraphicalAttachmentRenderer : NSObject <TSWPGraphicalAttachmentRenderer>
{
}

- (void)drawAttachment:(id)arg1 inContext:(struct CGContext *)arg2 selection:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPUIGraphicalAttachment : TSWPAttachment
{
}

- (_Bool)wantsSelectionAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) double baselineOffset;
@property(readonly, nonatomic) struct CGSize size;
- (void)invalidate;
- (id)rendererForAttachment;
- (int)elementKind;
- (void)saveToArchive:(struct UIGraphicalAttachment *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct UIGraphicalAttachment *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorage : TSPObject <TSDContainerInfo, TSKSearchable, TSSThemedObject, TSWPStorageParent, TSSStyleClient, TSWPTextSource>
{
    NSMutableString *_string;
    struct TSWPAttributeArray *_attributesTable[19];
    TSWPStorageBroadcaster *_broadcaster;
    TSWPDocumentRoot *_documentRoot;
    TSSStylesheet *_stylesheet;
    _Bool _dolcSuppressed;
    _Bool _delayBroadcast;
    struct _NSRange _rangeToBroadcast;
    unsigned long long _changeCount;
    int _WPKind;
    NSObject<TSDContainerInfo> *_parentInfo;
    TSPObject<TSDOwningAttachment> *_owningAttachment;
    unsigned int _disallowElementKinds;
    unsigned int _disallowSmartFieldKinds;
    int _writingDirectionCache;
    _Bool _isInInit;
    _Bool _ignoreContentsChangedNotifications;
}

+ (id)newObjectForUnarchiver:(id)arg1;
+ (_Bool)needsObjectUUID;
+ (Class)pStringClassForWPKind:(int)arg1;
+ (id)filterMarkAttributes:(id)arg1;
+ (id)filterText:(id)arg1 removingAttachments:(_Bool)arg2;
+ (id)filterText:(id)arg1;
+ (_Bool)allowsSmartFieldKind:(int)arg1 forStorageKind:(int)arg2;
+ (void)resetDisallowedSmartFieldKinds;
+ (void)setDisallowedSmartFieldKinds:(unsigned int)arg1 forStorageKind:(int)arg2;
+ (_Bool)allowsElementKind:(int)arg1 forStorageKind:(int)arg2;
+ (void)resetDisallowedElementKinds;
+ (void)setDisallowedElementKinds:(unsigned int)arg1 forStorageKind:(int)arg2;
+ (void)initialize;
+ (struct TSWPAttributeArray *)createAttributeArrayForKind:(int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
+ (struct TSWPAttributeArray *)createEmptyAttributeArrayForKind:(int)arg1;
+ (id)plainTextPasteStringForStorages:(id)arg1 forcePlainText:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long changeCount; // @synthesize changeCount=_changeCount;
@property(nonatomic) _Bool ignoreContentsChangedNotifications; // @synthesize ignoreContentsChangedNotifications=_ignoreContentsChangedNotifications;
@property(readonly, nonatomic) _Bool isInInit; // @synthesize isInInit=_isInInit;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @synthesize owningAttachment=_owningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=_parentInfo;
- (id).cxx_construct;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *debugDescription;
- (int)compareRange:(struct _NSRange)arg1 otherStorage:(id)arg2 otherRange:(struct _NSRange)arg3 options:(unsigned long long)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 storageContext:(id)arg2 objectsContext:(id)arg3 flags:(unsigned int)arg4 kind:(int)arg5;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 context:(id)arg2 flags:(unsigned int)arg3 kind:(int)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 storageContext:(id)arg2 objectsContext:(id)arg3 flags:(unsigned int)arg4;
- (id)newSubstorageWithRange:(struct _NSRange)arg1 context:(id)arg2 flags:(unsigned int)arg3;
- (unsigned long long)moveByLineRange:(struct _NSRange)arg1 up:(_Bool)arg2;
- (unsigned long long)selectionRangeMaxForCharIndex:(unsigned long long)arg1;
- (unsigned long long)selectionRangeMinForCharIndex:(unsigned long long)arg1;
- (struct _NSRange)selectionRangeForCharIndex:(unsigned long long)arg1;
- (_Bool)canPasteAsPlainTextWithUniformParagraphs;
- (_Bool)canPasteAsPlainText;
- (_Bool)p_hasGoodAttributesForPlainTextPaste;
- (_Bool)hasVisibleText;
- (void)capitalizeWithUndoTransaction:(struct TSWPStorageTransaction *)arg1 locale:(id)arg2;
- (void)lowercaseWithUndoTransaction:(struct TSWPStorageTransaction *)arg1 locale:(id)arg2;
- (void)uppercaseWithUndoTransaction:(struct TSWPStorageTransaction *)arg1 locale:(id)arg2;
- (void)p_mutateByWordWithUndoTransaction:(struct TSWPStorageTransaction *)arg1 locale:(id)arg2 transformer:(CDUnknownBlockType)arg3;
- (id)trackerForController:(id)arg1;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (id)referencedStylesOfClass:(Class)arg1;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
@property(readonly, nonatomic) long long contentWritingDirection;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)fontNameAtCharIndex:(unsigned long long)arg1 size:(double *)arg2 effectiveRange:(struct _NSRange *)arg3 styleProvider:(id)arg4;
- (void)fixGlyphVariantFontsForRange:(struct _NSRange)arg1;
- (id)glyphVariantDataAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)removeGlyphVariantDataFromRange:(struct _NSRange)arg1;
- (void)addGlyphVariantData:(id)arg1 toRange:(struct _NSRange)arg2;
- (id)snapshotRubyStateInRange:(struct _NSRange)arg1;
- (_Bool)phoneticsExistOnRange:(struct _NSRange)arg1;
- (void)autoUpdateSmartFieldsWithDocumentRoot:(id)arg1;
- (void)autoUpdateField:(id)arg1 withRange:(struct _NSRange)arg2 documentRoot:(id)arg3 returningInsertedRange:(struct _NSRange *)arg4;
- (void)smartFieldDidChange:(id)arg1;
- (id)placeholderSmartFieldAtRange:(struct _NSRange)arg1;
- (id)placeholderSmartFieldsIntersectingRange:(struct _NSRange)arg1;
- (id)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange)arg2 passingTest:(CDUnknownBlockType)arg3;
- (void)enumerateSmartFieldsWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (_Bool)hasSmartFields;
- (void)removeSmartField:(id)arg1 fromRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addSmartField:(id)arg1 toRange:(struct _NSRange)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)editableSmartFieldAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)extendSelectionToIncludeSmartFields:(id)arg1;
- (struct _NSRange)p_extendRangeToIncludeSmartFields:(struct _NSRange)arg1;
- (unsigned long long)charIndexBeforeAnyAnchoredAttachmentsAtCharIndex:(unsigned long long)arg1;
- (_Bool)anchoredDrawableAttachmentCharacterAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)attachmentRangeForCharIndex:(unsigned long long)arg1 forwards:(_Bool)arg2 attributeKind:(int)arg3;
- (struct _NSRange)attachmentRangeForCharIndex:(unsigned long long)arg1 forwards:(_Bool)arg2;
- (unsigned long long)findCharIndexForAttachment:(id)arg1;
- (struct _NSRange)attachmentIndexRangeForTextRange:(struct _NSRange)arg1;
- (void)enumerateAttachmentsInTextRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateAttachmentsOfClass:(Class)arg1 inTextRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)attachmentIndexForInsertionAtCharIndex:(unsigned long long)arg1;
- (void)replaceWithAttachment:(id)arg1 forAttachmentIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (unsigned long long)attachmentIndexAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtAttachmentIndex:(unsigned long long)arg1 outCharIndex:(unsigned long long *)arg2;
- (unsigned long long)attachmentCount;
- (unsigned long long)findCharacterIndexForContainedInfo:(id)arg1;
- (_Bool)hasPartitionedAttachmentAtStartOfTextRange:(struct _NSRange)arg1;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)insertAttachmentOrFootnote:(id)arg1 range:(struct _NSRange)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4 changeSession:(id)arg5;
- (struct _NSRange)insertAttachmentOrFootnote:(id)arg1 range:(struct _NSRange)arg2;
- (void)invalidateCharIndexForAttachment:(id)arg1;
- (void)invalidatePageCountAttachmentCharIndexes:(_Bool)arg1;
- (void)invalidateFootnoteAttachmentCharIndexes;
- (unsigned long long)findCharIndexForFootnoteAttachment:(id)arg1;
- (id)footnoteStorages;
- (unsigned long long)footnoteIndexForFootnoteStorage:(id)arg1;
- (unsigned long long)footnoteIndexForFootnote:(id)arg1;
- (unsigned long long)autoNumberFootnoteCountForRange:(struct _NSRange)arg1;
- (struct _NSRange)footnoteRangeForTextRange:(struct _NSRange)arg1;
- (id)footnoteAtFootnoteIndex:(unsigned long long)arg1 outCharIndex:(unsigned long long *)arg2;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)footnoteMarkAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAttachmentOrFootnoteMarkAttachmentAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)footnoteIndexForCharIndex:(unsigned long long)arg1;
- (unsigned long long)footnoteCount;
- (void)appendSection:(id)arg1 charIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (struct _NSRange)insertSection:(id)arg1 atCharIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4 changeSession:(id)arg5;
- (id)sectionAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)sectionIndexForSection:(id)arg1;
- (unsigned long long)sectionIndexForCharIndex:(unsigned long long)arg1;
- (void)replaceSectionAtSectionIndex:(unsigned long long)arg1 withSection:(id)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)sectionAtSectionIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)hasSectionForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (_Bool)supportsSectionCopying;
- (_Bool)supportsSections;
- (void)invalidateForStyle:(id)arg1;
- (void)styleDidChangeInRange:(struct _NSRange)arg1;
- (void)setColumnStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)columnStyleAtColumnStyleIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)columnStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)columnStyleCount;
- (_Bool)supportsColumnStyles;
- (id)valueForProperty:(int)arg1 atCharIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)setCharacterStyle:(id)arg1 range:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 left:(_Bool)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)characterStyleAttributeCount;
- (void)setParagraphFlags:(unsigned short)arg1 level:(unsigned long long)arg2 forCharRange:(struct _NSRange)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)setParagraphLevel:(unsigned long long)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setParagraphLevel:(unsigned long long)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned long long)paragraphLevelAtParIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphLevelAtCharIndex:(unsigned long long)arg1;
- (void)setParagraphFlags:(unsigned short)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned short)paragraphFlagsAtCharIndex:(unsigned long long)arg1;
- (void)paragraphFlags:(unsigned short *)arg1 andLevel:(unsigned long long *)arg2 atCharIndex:(unsigned long long)arg3;
- (unsigned long long)listStartAtCharIndex:(unsigned long long)arg1;
- (void)setListStart:(unsigned long long)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (unsigned long long)listNumberForParagraphEnumerator:(const struct TSWPParagraphEnumerator *)arg1 numberingData:(CDStruct_b9fbe577 *)arg2;
- (unsigned long long)listNumberForParagraphIndex:(unsigned long long)arg1 numberingData:(CDStruct_b9fbe577 *)arg2;
- (void)setListStyle:(id)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setListStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)listStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)listStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)listStyleCount;
- (_Bool)supportsListStyles;
- (void)enumerateParagraphsIntersectingTextRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)filterParagraphStylesForHeaderFooter;
- (unsigned long long)findNextParagraphStyleChange:(unsigned long long)arg1 maxCharIndex:(unsigned long long)arg2;
- (void)setParagraphStyle:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setParagraphStyle:(id)arg1 atParIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)setDictationAndAutocorrection:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addAllDictationAndAutocorrectionKeyRangesInRange:(struct _NSRange)arg1 toRanges:(struct TSWPRangeVector *)arg2;
- (id)dictationAndAutocorrectionKeyAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)languageAtParIndex:(unsigned long long)arg1 useStringTokenizer:(_Bool)arg2 useCreationLanguage:(_Bool)arg3;
- (id)languageForTextRange:(struct _NSRange)arg1 useStringTokenizer:(_Bool)arg2 useCreationLanguage:(_Bool)arg3;
- (id)bestCharacterLanguageForTextRange:(struct _NSRange)arg1;
- (void)setLanguage:(id)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)setParagraphWritingDirection:(int)arg1 forCharRange:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (int)writingDirectionForParagraphAtParIndex:(unsigned long long)arg1;
- (int)writingDirectionForParagraphAtCharIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForListAtParIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtParIndex:(unsigned long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (_Bool)paragraphHasListLabelAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)paragraphIndexRangeForCharRange:(struct _NSRange)arg1;
- (struct _NSRange)textRangeForParagraphsInCharRange:(struct _NSRange)arg1;
- (unsigned long long)paragraphEndAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphStartAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForParagraphAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForParagraphAtIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphIndexAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)paragraphCount;
- (unsigned long long)pFirstParIndexInListAtParIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForListAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)listEndAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)textRangeForListsInCharRange:(struct _NSRange)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (_Bool)styleOverridesAppliedToRange:(struct _NSRange)arg1;
- (struct _NSRange)replaceAllOccurrencesOfStyle:(id)arg1 withStyle:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (_Bool)canUserReplaceText;
- (void)continueSearch:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (id)searchInRange:(struct _NSRange)arg1 forString:(id)arg2 options:(unsigned long long)arg3 onHit:(CDUnknownBlockType)arg4;
- (id)searchForString:(id)arg1 options:(unsigned long long)arg2 onHit:(CDUnknownBlockType)arg3;
- (struct _NSRange)rangeForHighlight:(id)arg1;
- (void)findChangesInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2;
- (void)p_findChangesInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2 withAttributeKind:(int)arg3;
- (void)findCommentsInRange:(struct _NSRange)arg1 onHit:(CDUnknownBlockType)arg2;
- (struct _NSRange)rangeOfAnnotationWithOptions:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (struct _NSRange)rangeOfParagraphBreakingCharacter:(unsigned short)arg1 backwards:(_Bool)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 dolcContext:(id)arg2;
- (void)insertStorage:(id)arg1 atCharIndex:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)deleteRange:(struct _NSRange)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)insertPlaceholderText:(id)arg1 atCharIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)insertString:(id)arg1 atCharIndex:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)substringWithSelection:(id)arg1;
- (id)substringWithRange:(struct _NSRange)arg1;
- (struct _NSRange)moveCharactersInRange:(struct _NSRange)arg1 toLocation:(unsigned long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (struct _NSRange)p_replaceCharactersInLogicalSelection:(id)arg1 withString:(id)arg2 withFlags:(unsigned int)arg3 replaceTextData:(CDStruct_a70f6672 *)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 outInsertedRange:(struct _NSRange *)arg7;
- (struct _NSRange)replaceCharactersInSelection:(id)arg1 withString:(id)arg2 withFlags:(unsigned int)arg3 replaceTextData:(CDStruct_a70f6672 *)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 outInsertedRange:(struct _NSRange *)arg7;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 notifyObservers:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (struct _NSRange)appendString:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)extendSelectionForTopicChildren:(id)arg1;
- (struct _NSRange)p_RelocateNonSelectedAnchorsInRange:(struct _NSRange)arg1 selectionInfos:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)relocateNonSelectedAnchorsInSelection:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (unsigned long long)storageLength;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (id)objectAtLocationAtExactCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)rangeByTrimmingRange:(struct _NSRange)arg1 withBlock:(CDUnknownBlockType)arg2;
- (struct _NSRange)rangeByExpandingToIncludePartialWords:(struct _NSRange)arg1;
- (struct _NSRange)nextWordFromIndex:(unsigned long long)arg1 forward:(_Bool)arg2;
- (struct _NSRange)p_rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2 handleNextWordWhitespace:(_Bool)arg3;
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (struct _NSRange)scanLeftForWordAtCharIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeByExtendingRangeToLineBreak:(struct _NSRange)arg1;
- (struct _NSRange)rangeByExtendingRangeToWhitespace:(struct _NSRange)arg1 skipVisibleDeleted:(_Bool)arg2;
- (struct _NSRange)rangeByExtendingRangeToWhitespace:(struct _NSRange)arg1;
- (struct _NSRange)rangeForSelectionWithInsertionSelection:(id)arg1;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1 includingBreaks:(_Bool)arg2;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1;
- (_Bool)isAllWhitespaceInRange:(struct _NSRange)arg1;
- (_Bool)isEmptyParagraphSelection:(id)arg1 outRange:(struct _NSRange *)arg2;
- (_Bool)isWholeParagraphsForRange:(struct _NSRange)arg1 ignoreAttachmentCharacters:(_Bool)arg2 requireParagraphBreakSelected:(_Bool)arg3;
- (unsigned long long)emptyParagraphCount:(struct _NSRange)arg1;
- (unsigned long long)selectedParagraphBreakCount:(struct _NSRange)arg1;
- (unsigned long long)nextCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1 forDelete:(_Bool)arg2;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)wordCount;
- (id)highlightSelectionForSelection:(id)arg1;
- (id)stringForStatisticsInRange:(struct _NSRange)arg1;
- (id)string;
- (id)stringValue;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)range;
- (unsigned long long)length;
- (unsigned long long)characterCount;
- (_Bool)setDOLCSuppressed:(_Bool)arg1;
- (_Bool)isDOLCSuppressed;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorAtParIndex:(unsigned long long)arg1 styleProvider:(id)arg2;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorForCharRange:(struct _NSRange)arg1 styleProvider:(id)arg2 requireHidden:(_Bool)arg3;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorForCharRange:(struct _NSRange)arg1 styleProvider:(id)arg2;
- (struct TSWPParagraphEnumerator)paragraphEnumeratorAtCharIndex:(unsigned long long)arg1 styleProvider:(id)arg2;
- (id)textSourceForLayoutInRange:(struct _NSRange)arg1;
- (void)filterInvalidContentForStorage:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)filterSectionBreaksFromStorage:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (_Bool)allowsSmartFieldKind:(int)arg1;
- (void)removeDisallowedSmartFieldKind:(int)arg1;
- (void)addDisallowedSmartFieldKind:(int)arg1;
- (unsigned int)disallowedSmartFieldKinds;
- (_Bool)canAcceptDrawableAttachments;
- (_Bool)allowsElementKind:(int)arg1;
- (unsigned int)disallowedElementKinds;
- (void)removeDisallowedElementKind:(int)arg1;
- (void)addDisallowedElementKind:(int)arg1;
- (void)setWPKind:(int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (int)wpKind;
- (id)stylesheet;
- (void)setDocumentRoot:(id)arg1;
- (id)documentRoot;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)unarchiverAppendParagraphBreak:(unsigned short)arg1;
- (void)saveRange:(struct _NSRange)arg1 toArchiver:(id)arg2 styleProvider:(id)arg3 archiveChanges:(_Bool)arg4 removeDeletedText:(_Bool)arg5;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)objectUUIDPath;
- (void)dealloc;
- (id)initWithContext:(id)arg1 string:(id)arg2 stylesheet:(id)arg3 kind:(int)arg4;
- (id)initWithContext:(id)arg1 string:(id)arg2 kind:(int)arg3 stylesheet:(id)arg4 paragraphStyle:(id)arg5 listStyle:(id)arg6 section:(id)arg7 columnStyle:(id)arg8 paragraphDirection:(int)arg9;
- (id)initWithContext:(id)arg1 string:(id)arg2 kind:(int)arg3 stylesheet:(id)arg4 paragraphStyle:(id)arg5 listStyle:(id)arg6 section:(id)arg7 columnStyle:(id)arg8;
- (id)rangesForLocalization;
- (id)p_stringWithFormulaAsTextFromRange:(struct _NSRange)arg1 returningTokenValues:(_Bool)arg2;
- (id)stringWithFormulaDetokenizedTextFromRange:(struct _NSRange)arg1;
- (id)stringWithFormulaDetokenizedText;
- (id)stringWithFormulaPlainTextFromRange:(struct _NSRange)arg1;
- (id)stringWithFormulaPlainText;
- (_Bool)isEmptyExceptForFormulaEqualsToken;
- (_Bool)beginsWithFormulaEqualsToken;
- (void)insertUIGraphicalAttachment:(id)arg1;
- (void)takeText:(id)arg1 andSetLanguage:(id)arg2;
- (void)takeText:(id)arg1;
- (id)i_copyIntoContext:(id)arg1 stylesheet:(id)arg2 paragraphStyle:(id)arg3 listStyle:(id)arg4 bakeModes:(_Bool)arg5 resettingHostTableToMatch:(id)arg6 referenceColorHelper:(id)arg7;
- (id)i_copyIntoContext:(id)arg1 stylesheet:(id)arg2;
- (id)p_processEndNode:(id)arg1 startNode:(id)arg2 bakeModes:(_Bool)arg3 tokenDict:(id)arg4;
- (struct _NSRange)rangeForCellID:(CDStruct_0441cfb5)arg1 includingBreak:(_Bool)arg2;
- (_Bool)hasAttachmentsThatChangeWithPageNumberOrPageCount;
- (_Bool)changesWithPageCount;
- (void)appendStoragePreservingEmphasis:(id)arg1 dolcContext:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 parentCommand:(id)arg4;
@property(nonatomic) CDStruct_0441cfb5 hyperlinkCellID; // @dynamic hyperlinkCellID;
- (void)unstashBroadcaster;
- (void)stashBroadcaster;
- (id)valueForBIUProperties:(id)arg1 selection:(id)arg2 insertionStyle:(id)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 options:(unsigned long long)arg3 changedRange:(struct _NSRange *)arg4 changeDelta:(long long *)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 changeSession:(id)arg7;
- (struct __CTFont *)createFontAtCharIndex:(unsigned long long)arg1 scaleTextPercent:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3 styleProvider:(id)arg4;
- (void)splitSmartFieldAtCharIndex:(unsigned long long)arg1 lengthToInsert:(unsigned long long)arg2 dolcContext:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)splitSmartFieldAtCharIndex:(unsigned long long)arg1 lengthToInsert:(unsigned long long)arg2 attributeKind:(int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (id)storageByApplyingCustomFormat:(CDStruct_1127e784)arg1;
- (id)valueForBIUProperties:(id)arg1;
- (_Bool)canBeStoredInAStringValueCell;
- (_Bool)p_passesExtraTablesChecksForStoringInAStringValueCell;
- (void)pApplyOverrideObjectAfterReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 overrideObject:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)pApplyOverrideObjectAfterReplacingCharactersInSelection:(id)arg1 withString:(id)arg2 overrideObject:(id)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (id)pOverrideObjectBeforeReplacingCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 withInsertionBehavior:(int)arg3;
- (id)pOverrideObjectBeforeReplacingCharactersInSelection:(id)arg1 withString:(id)arg2;
- (id)pFindValidInsertionCharStyleFromCharIndex:(unsigned long long)arg1;
- (int)compareAttributeArray1:(struct TSWPAttributeArray *)arg1 array2:(struct TSWPAttributeArray *)arg2 range1:(struct _NSRange)arg3 range2:(struct _NSRange)arg4 attributeIndex1:(unsigned long long)arg5 attributeIndex2:(unsigned long long)arg6;
- (int)compareAttributeArray:(struct TSWPAttributeArray *)arg1 range:(struct _NSRange)arg2 otherStorage:(id)arg3 otherRange:(struct _NSRange)arg4;
- (void)transferAttributeArraySource:(struct TSWPAttributeArray *)arg1 forSourceRange:(struct _NSRange)arg2 toDestStorage:(id)arg3 objectContext:(id)arg4 dolcContext:(id)arg5 flags:(int)arg6;
- (struct _NSRange)replaceAllOccurrencesOfObject:(id)arg1 withObject:(id)arg2 forKind:(int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyFlags:(unsigned short)arg1 level:(unsigned long long)arg2 toParagraphsInCharRange:(struct _NSRange)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyObject:(id)arg1 toParagraphsInCharRange:(struct _NSRange)arg2 forKind:(int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyWritingDirection:(int)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyDataValue:(unsigned int)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)applyFlags:(unsigned short)arg1 level:(unsigned long long)arg2 toParagraphIndexRange:(struct _NSRange)arg3 forKind:(int)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)applyObject:(id)arg1 toParagraphIndexRange:(struct _NSRange)arg2 forKind:(int)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)lowLevelApplyObject:(id)arg1 toCharRange:(struct _NSRange)arg2 forKind:(int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)applyObject:(id)arg1 toCharRange:(struct _NSRange)arg2 forKind:(int)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)insertParagraphData:(CDStruct_8a5ee6e3)arg1 charIndex:(unsigned long long)arg2 attributeArray:(struct TSWPAttributeArray *)arg3 attributeIndex:(unsigned long long)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)insertObject:(id)arg1 charIndex:(unsigned long long)arg2 attributeArray:(struct TSWPAttributeArray *)arg3 attributeIndex:(unsigned long long)arg4 dolcContext:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6;
- (struct _NSRange)insertSpecialCharacter:(unsigned short)arg1 object:(id)arg2 kind:(int)arg3 range:(struct _NSRange)arg4 dolcContext:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 changeSession:(id)arg7;
- (void)p_attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (void)compress:(struct TSWPStorageTransaction *)arg1;
- (void)compressAttributeArrayKind:(int)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (struct TSWPAttributeArray *)attributeArrayForKind:(int)arg1;
- (struct TSWPParagraphAttributeArray *)paragraphAttributeArrayForKind:(int)arg1 withCreate:(_Bool)arg2;
- (struct TSWPAttributeArray *)attributeArrayForKind:(int)arg1 withCreate:(_Bool)arg2 fromUndo:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (struct TSWPAttributeArray *)attributeArrayForKind:(int)arg1 withCreate:(_Bool)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (_Bool)p_shouldAcceptChangesForRange:(struct _NSRange)arg1 removeDeletedText:(_Bool *)arg2;
- (void)p_fillMarkers:(vector_88016b54 *)arg1 startingAtCharIndex:(unsigned long long)arg2 forCount:(unsigned long long)arg3;
- (void)p_fillMarkers:(vector_a36e5995 *)arg1 string:(id)arg2 length:(unsigned long long)arg3 hasAttachments:(_Bool *)arg4 hasFootnotes:(_Bool *)arg5 hasBreaks:(_Bool *)arg6;
- (void)p_lowLevelReplaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2 length:(unsigned long long)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)p_replaceCharactersInSelection:(id)arg1 withString:(id)arg2 length:(unsigned long long)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (void)p_didChangeRange:(struct _NSRange)arg1 delta:(long long)arg2 broadcastKind:(int)arg3;
- (id)pDefaultSectionForContext:(id)arg1;
- (void)undoCTDate:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoDOLC:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoReplaceParagraphData:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoReplaceObject:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoReplaceCharIndex:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoAdjustCharIndexes:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoDeleteAttribute:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoInsertAttribute:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationRange:(struct _NSRange *)arg3;
- (void)undoReplaceText:(const struct TSWPStorageTransactionObject *)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2 notificationDelta:(long long *)arg3 notificationRange:(struct _NSRange *)arg4;
- (struct _NSRange)undoTransaction:(const struct TSWPStorageTransaction *)arg1 redoTransaction:(struct TSWPStorageTransaction *)arg2;
- (struct _NSRange)textRangeIgnoringTrailingLineBreaksForParagraphAtIndex:(unsigned long long)arg1;
- (struct _NSRange)replaceCharactersInSelection:(id)arg1 withStorage:(id)arg2 usePasteRules:(_Bool)arg3 dolcContext:(id)arg4 changeSession:(id)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6;
- (struct _NSRange)replaceCharactersInRange:(struct _NSRange)arg1 withStorage:(id)arg2 usePasteRules:(_Bool)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (void)transferAttributeArraySource:(struct TSWPAttributeArray *)arg1 toAttributeArrayDest:(struct TSWPAttributeArray *)arg2 atCharIndex:(unsigned long long)arg3 dolcContext:(id)arg4 undoTransaction:(struct TSWPStorageTransaction *)arg5;
- (id)stringEquivalentFromRange:(struct _NSRange)arg1;
- (id)stringEquivalentFromRange:(struct _NSRange)arg1 withLayoutParent:(id)arg2;
- (id)plainTextStringFromRange:(struct _NSRange)arg1 convertTextualAttachments:(_Bool)arg2 includeChildTextStorages:(_Bool)arg3 forExport:(_Bool)arg4 withLayoutParent:(id)arg5;
- (_Bool)p_shouldInsertionSplitChange:(id)arg1 changeSession:(id)arg2;
- (void)p_handleChangeSplittingForInsertedRange:(struct _NSRange)arg1 changeSession:(id)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)p_replacementsForSelection:(id)arg1 withString:(id)arg2 changeSession:(id)arg3 shouldTrackDeletions:(_Bool)arg4;
- (id)editableAnnotationForInsertionPointSelection:(id)arg1 includeComments:(_Bool)arg2 withOutRange:(struct _NSRange *)arg3 selectionIsOnEdge:(_Bool *)arg4;
- (_Bool)highlightsAllowed;
- (id)firstHighlightForSelectionRange:(struct _NSRange)arg1 outRange:(struct _NSRange *)arg2 requireComment:(_Bool)arg3;
- (id)firstHighlightForSelectionRange:(struct _NSRange)arg1 outRange:(struct _NSRange *)arg2;
- (id)characterStyleForDeletedRange:(struct _NSRange)arg1;
- (void)changeViewSettingsDidChange;
- (_Bool)selectionContainsVisibleTrackedChanges:(id)arg1;
- (struct _NSRange)rangeForTrackedChanges:(id)arg1;
- (id)changeDetailsForChange:(id)arg1 withRange:(struct _NSRange)arg2;
- (id)changeDetailsAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)previousChangeFromCharIndex:(unsigned long long)arg1 beforeChange:(id)arg2 changeRange:(struct _NSRange *)arg3;
- (id)nextChangeFromCharIndex:(unsigned long long)arg1 afterChange:(id)arg2 changeRange:(struct _NSRange *)arg3;
- (void)applyChanges:(_Bool)arg1 inRange:(struct _NSRange)arg2 inSelectionRange:(struct _NSRange)arg3 outChangedRange:(struct _NSRange *)arg4 outSelectionRange:(struct _NSRange *)arg5 undoTransaction:(struct TSWPStorageTransaction *)arg6 forceAll:(_Bool)arg7;
- (void)applyChange:(id)arg1 changeRange:(struct _NSRange)arg2 accept:(_Bool)arg3 undoTransaction:(struct TSWPStorageTransaction *)arg4;
- (_Bool)isCharRangeEntirelyDeleted:(struct _NSRange)arg1;
- (_Bool)isCharRangePartiallyDeleted:(struct _NSRange)arg1;
- (id)p_undeletedCharIndexesInRange:(struct _NSRange)arg1;
- (_Bool)hasDeletionInRange:(struct _NSRange)arg1;
- (unsigned long long)indexAfterLastVisibleCharInRange:(struct _NSRange)arg1;
- (unsigned long long)indexOfFirstNonDeletedCharInRange:(struct _NSRange)arg1;
- (unsigned long long)indexOfFirstVisibleCharInRange:(struct _NSRange)arg1;
- (unsigned long long)p_indexOfFirstNonDeletedCharInRange:(struct _NSRange)arg1 requireVisible:(_Bool)arg2;
- (_Bool)hasVisibleTextAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasDeletedTextAtCharIndex:(unsigned long long)arg1 range:(struct _NSRange *)arg2;
- (_Bool)hasHiddenTextAtCharIndex:(unsigned long long)arg1 range:(struct _NSRange *)arg2;
- (_Bool)hasHiddenTextAtCharIndex:(unsigned long long)arg1;
- (_Bool)p_hasDeletedTextAtCharIndex:(unsigned long long)arg1 requireHidden:(_Bool)arg2 range:(struct _NSRange *)arg3;
- (id)visibleRangesInRange:(struct _NSRange)arg1;
- (id)hiddenRangesInRange:(struct _NSRange)arg1;
- (id)deletedRangesInRange:(struct _NSRange)arg1;
- (struct TSWPRangeVector)deletedRangeVectorInRange:(struct _NSRange)arg1;
- (id)changeAtCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (id)changeAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct _NSRange)rangeForChange:(id)arg1;
@property(readonly, nonatomic) struct TSWPChangeAttributeArray *deletionChangesTable;
@property(readonly, nonatomic) struct TSWPChangeAttributeArray *insertionChangesTable;
@property(readonly, nonatomic) _Bool hasTrackedChanges;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)defaultSectionForContext:(id)arg1;
- (id)uuidPathPrefixComponentsProvider;
- (id)firstPageCountAttachment;
- (id)firstPageNumberAttachment;
- (struct TPSectionEnumerator)sectionEnumeratorAtSectionIndex:(unsigned long long)arg1;
- (struct TPSectionEnumerator)sectionEnumeratorForCharRange:(struct _NSRange)arg1;
- (struct TPSectionEnumerator)sectionEnumeratorAtCharIndex:(unsigned long long)arg1;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPParagraphStyle : TSSStyle <TSSPreset, TSDMixing>
{
    void *_coreTextParagraphStyle;
    struct __CFDictionary *_styleCache;
    struct __CFDictionary *_scalePercentStyleCaches;
}

+ (id)styleSummaryForPropertyMap:(id)arg1;
+ (id)presetStyleDescriptor;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultPropertyMap;
+ (id)defaultValueForProperty:(int)arg1;
+ (id)p_normalDecimalSeparator;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)paragraphPropertiesAllowingNSNull;
+ (id)propertiesAllowingNSNull;
+ (id)nonEmphasisParagraphProperties;
+ (id)deprecatedProperties;
+ (id)paragraphProperties;
+ (id)properties;
+ (void)initialize;
+ (id)presetStyleDescriptorForOrdinal:(unsigned long long)arg1;
+ (id)defaultStyleWithDefaultPropertiesInContext:(id)arg1;
- (id)styleSummary;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@property(readonly, nonatomic) NSString *presetKind;
- (SEL)mapThemePropertyMapSelector;
- (_Bool)transformsFontSizes;
- (void)localizeForBidi:(_Bool)arg1;
- (void)localizeForRightToLeft;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ParagraphStyleArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (const struct ParagraphStyleArchive *)paragraphStyleArchiveFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ParagraphStyleArchive *)arg1 unarchiver:(id)arg2;
- (id)initialListStyle;
- (void)setInitialListStyle:(id)arg1;
- (id)followingParagraphStyle;
- (struct __CFDictionary *)p_newCoreTextCharacterStyle:(id)arg1 allowLigatures:(_Bool)arg2 scalePercent:(unsigned long long)arg3;
- (struct __CTParagraphStyle *)p_createCoreTextParagraphStyleWithCharacterStyle:(id)arg1 writingDirection:(int)arg2;
- (BOOL)p_coreTextWritingDirectionFromWPWritingDirection:(int)arg1;
- (struct __CTFont *)findCachedFontForCharacterStyle:(id)arg1 scalePercent:(unsigned long long)arg2;
- (struct __CFDictionary *)getTypesetterAttributes:(id)arg1 scalePercent:(unsigned long long)arg2 isRightToLeft:(_Bool)arg3;
- (void)clearStyleCaches;
- (void)setOverridePropertyMap:(id)arg1;
- (id)fullPropertyMap;
- (void)dealloc;
- (double)ascent;

@end

__attribute__((visibility("hidden")))
@interface TSWPCharacterStyle : TSSStyle <TSSPreset>
{
}

+ (id)nullStyleWithContext:(id)arg1;
+ (id)nullStyleName;
+ (id)propertiesAllowingNSNull;
+ (id)nonEmphasisCharacterProperties;
+ (id)emphasisProperties;
+ (id)properties;
- (_Bool)transformsFontSizes;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct CharacterStyleArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (int)writingDirection;
- (void)loadFromArchive:(const struct CharacterStyleArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) NSString *presetKind;

@end

__attribute__((visibility("hidden")))
@interface TSWPColumnStyle : TSSStyle <TSWPColumnMetrics>
{
}

+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultValueForProperty:(int)arg1;
+ (float)defaultFloatValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ColumnStyleArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ColumnStyleArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
- (_Bool)equalWidth;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TSWPListStyle : TSSStyle <TSSPreset>
{
}

+ (id)presetStyleDescriptor;
+ (id)defaultArrayForProperty:(int)arg1;
+ (id)arrayValuedProperties;
+ (id)pDefaultLabelValuesForLabelTypeProperty:(int)arg1;
+ (id)pLabelTypeArrayForType:(int)arg1;
+ (id)nameForLanguageSpecificListStyle:(int)arg1;
+ (id)propertyMapForListTextBullet:(id)arg1;
+ (id)propertyMapForListNumberType:(int)arg1;
+ (id)listStyleWithTextBullet:(id)arg1 inStyleSheet:(id)arg2 withTextBulletPresetStyle:(id)arg3;
+ (id)listStyleWithNumberType:(int)arg1 inStyleSheet:(id)arg2 withNumberedPresetStyle:(id)arg3;
+ (id)textBulletListStyleForPresets:(id)arg1;
+ (id)numberedListStyleForPresets:(id)arg1;
+ (id)harvardStyleWithContext:(id)arg1;
+ (id)defaultStyleWithContext:(id)arg1 type:(int)arg2;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)defaultPropertyMap;
+ (id)defaultLabelTypes;
+ (id)defaultLabelStrings;
+ (id)defaultLabelTieredNumbers;
+ (id)defaultLabelNumberTypes;
+ (id)defaultLabelImages;
+ (id)defaultLabelGeometries;
+ (id)defaultLabelIndents;
+ (id)defaultTextIndents;
+ (id)defaultMissingBulletImage;
+ (void)pGetDefaultTextIndentFloats:(double [9])arg1;
+ (_Bool)defaultTieredNumber;
+ (int)defaultLabelNumberType;
+ (id)defaultLabelString;
+ (int)firstLabelTypeForPropertyMapping:(id)arg1;
+ (int)labelTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2;
+ (int)effectiveTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2;
+ (int)pLabelTypeForLevel:(unsigned long long)arg1 forPropertyMapping:(id)arg2 includeDegenerateLevels:(_Bool)arg3;
+ (_Bool)isDefaultMissingBulletImage:(id)arg1;
+ (id)additionalBulletStrings;
+ (id)textInspectorBulletStrings;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
+ (id)stickyOverrideProperties;
- (id)baseStyleForTopicNumbers;
@property(readonly, nonatomic) NSString *presetKind;
- (double)CGFloatValueForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (double)doubleValueForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (float)floatValueForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (int)intValueForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (id)boxedObjectForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (id)objectForProperty:(int)arg1 atIndex:(unsigned long long)arg2;
- (void)saveToArchive:(struct ListStyleArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct ListStyleArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)overridePropertyMapWithValue:(id)arg1 forProperty:(int)arg2 atParagraphLevels:(id)arg3 withContext:(id)arg4;
- (id)pOverrideArrayWithValue:(id)arg1 forProperty:(int)arg2 atParagraphLevels:(id)arg3 withContext:(id)arg4;
- (int)firstLabelType;
- (int)labelTypeForLevel:(unsigned long long)arg1;
- (int)effectiveTypeForLevel:(unsigned long long)arg1;
- (double)textIndentForLevel:(unsigned long long)arg1 fontSize:(double)arg2;
- (double)labelIndentForLevel:(unsigned long long)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPTab : NSObject <NSCopying>
{
    double _position;
    int _alignment;
    NSString *_leader;
}

+ (id)tab;
+ (id)displayStringFromTabLeader:(id)arg1;
+ (id)stringFromTabAlignment:(int)arg1 isRTL:(_Bool)arg2;
+ (int)tabAlignmentFromString:(id)arg1 isRTL:(_Bool)arg2;
+ (id)tabLeaderFromDisplayString:(id)arg1;
@property(copy, nonatomic) NSString *leader; // @synthesize leader=_leader;
@property(nonatomic) int alignment; // @synthesize alignment=_alignment;
@property(nonatomic) double position; // @synthesize position=_position;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToPosition:(double)arg1;
- (long long)compare:(id)arg1;
- (long long)compareToPosition:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct TabArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TabArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithPosition:(double)arg1 alignment:(int)arg2 leader:(id)arg3;
- (id)init;
- (void)dealloc;
- (void)setPositionInInches:(double)arg1;
- (double)positionInInches;

@end

__attribute__((visibility("hidden")))
@interface TSWPTabs : NSObject <NSCopying, NSFastEnumeration, TSDMixing>
{
    NSMutableArray *_tabs;
}

+ (id)tabs;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)indexForTabWithPosition:(double)arg1 alignment:(int)arg2 leader:(id)arg3;
- (void)setPosition:(double)arg1 forTab:(id)arg2;
- (void)removeTabAtIndex:(unsigned long long)arg1;
- (void)insertTab:(id)arg1;
- (id)tabAfterPosition:(double)arg1;
- (id)tabAtPosition:(double)arg1;
- (id)tabAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)saveToArchive:(struct TabsArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TabsArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithTabs:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPPageLayout : TSDLayout
{
    TSWPLayout *_headerFooterLayouts[2][3];
    struct CGRect _headerFooterClipRects[2][3];
    struct CGRect _headerFooterBorderRects[2][3];
}

- (id).cxx_construct;
- (void)i_clearHeaderFooterLayouts;
- (void)i_insertValidatedHeaderFooterLayouts;
- (_Bool)i_updateHeaderFooterLayouts;
- (struct CGRect)borderRectForHeaderFooter:(int)arg1 atIndex:(int)arg2;
- (void)p_updateHeaderFooterClipAndBorderRect;
- (void)p_updateHeaderFooterClipAndBorderRects:(int)arg1;
- (id)headerFooterLayout:(int)arg1 atIndex:(int)arg2;
- (struct CGRect)clipRectForHeaderFooter:(int)arg1 atIndex:(int)arg2;
- (_Bool)p_isHeaderFooter:(int)arg1 editingAtFragmentIndex:(int)arg2;
- (_Bool)isHeaderFooterLayout:(id)arg1;
- (_Bool)shouldHeaderFooterBeVisible:(int)arg1;
@property(readonly, nonatomic) _Bool hasFooters;
@property(readonly, nonatomic) _Bool hasHeaders;
@property(readonly, nonatomic) _Bool allowsHeaderFooter;
@property(readonly, nonatomic) double footerHeight;
@property(readonly, nonatomic) double headerHeight;
@property(readonly, nonatomic) struct CGRect bodyRect;
@property(readonly, nonatomic) _Bool headerFooterProviderValid;
@property(readonly, nonatomic) id <TSWPHeaderFooterProvider> headerFooterProvider;

@end

__attribute__((visibility("hidden")))
@interface TSWPLineSpacing : NSObject <NSCopying>
{
    int _mode;
    double _amount;
    double _baselineRule;
}

+ (id)lineSpacing;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (double)baselineRule;
- (double)amount;
- (int)mode;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct LineSpacingArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct LineSpacingArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithMode:(int)arg1 amount:(double)arg2;
- (id)initWithMode:(int)arg1 amount:(double)arg2 baselineRule:(double)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPColumn : NSObject <TSWPOffscreenColumn>
{
    TSWPStorage *_storage;
    struct CGRect _frameBounds;
    struct CGAffineTransform _transform;
    unsigned long long _startCharIndex;
    unsigned long long _characterCount;
    unsigned long long _startAnchoredCharIndex;
    unsigned long long _anchoredCharCount;
    unsigned long long _nextWidowPullsDownFromCharIndex;
    double _contentBottom;
    double _erasableContentBottom;
    int _layoutResultFlags;
    unsigned long long _columnIndex;
    unsigned long long _pageNumber;
    unsigned long long _scaleTextPercent;
    id <TSWPStyleProvider> _styleProvider;
    shared_ptr_72f95721 _lineFragmentArray;
    void *_paragraphAdornments;
    _Bool _textIsVertical;
}

+ (id)columnForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2 withColumns:(id)arg3;
+ (struct CGRect)boundsRectForSelection:(id)arg1 columnArray:(id)arg2 includeRuby:(_Bool)arg3;
+ (id)pathForHighlightWithRange:(struct _NSRange)arg1 columnArray:(id)arg2 pathStyle:(int)arg3;
+ (id)footnoteReferenceAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;
+ (id)footnoteMarkAttachmentInColumnArray:(id)arg1 atPoint:(struct CGPoint)arg2;
+ (id)smartFieldWithAttributeKind:(int)arg1 inColumnArray:(id)arg2 atPoint:(struct CGPoint)arg3;
+ (unsigned long long)charIndexForTopicDragAtPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2;
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 pastCenterGoesToNextChar:(_Bool)arg5 isAtEndOfLine:(_Bool *)arg6 leadingEdge:(_Bool *)arg7;
+ (unsigned long long)charIndexForPoint:(struct CGPoint)arg1 inColumnsArray:(id)arg2 allowPastBreak:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
+ (id)closestColumnInColumnsArray:(id)arg1 forPoint:(struct CGPoint)arg2 ignoreEmptyColumns:(_Bool)arg3 ignoreDrawableOnlyColumns:(_Bool)arg4;
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2 useParagraphModeRects:(_Bool)arg3;
+ (struct CGRect)rectForSelection:(id)arg1 withColumns:(id)arg2;
+ (struct CGRect)caretRectForInsertionPoint:(id)arg1 withColumns:(id)arg2;
@property(nonatomic) _Bool textIsVertical; // @synthesize textIsVertical=_textIsVertical;
@property(retain, nonatomic) id <TSWPStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) unsigned long long scaleTextPercent; // @synthesize scaleTextPercent=_scaleTextPercent;
@property(nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(nonatomic) unsigned long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) int layoutResultFlags; // @synthesize layoutResultFlags=_layoutResultFlags;
@property(nonatomic) double erasableContentBottom; // @synthesize erasableContentBottom=_erasableContentBottom;
@property(nonatomic) double contentBottom; // @synthesize contentBottom=_contentBottom;
@property(nonatomic) unsigned long long nextWidowPullsDownFromCharIndex; // @synthesize nextWidowPullsDownFromCharIndex=_nextWidowPullsDownFromCharIndex;
@property(nonatomic) unsigned long long anchoredCharCount; // @synthesize anchoredCharCount=_anchoredCharCount;
@property(nonatomic) unsigned long long startAnchoredCharIndex; // @synthesize startAnchoredCharIndex=_startAnchoredCharIndex;
@property(nonatomic) unsigned long long characterCount; // @synthesize characterCount=_characterCount;
@property(nonatomic) unsigned long long startCharIndex; // @synthesize startCharIndex=_startCharIndex;
@property(nonatomic) struct CGAffineTransform transformFromWP; // @synthesize transformFromWP=_transform;
@property(nonatomic) struct CGRect wpBounds; // @synthesize wpBounds=_frameBounds;
@property(readonly, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)hasPartitionedAttachmentAtStart:(_Bool)arg1;
- (_Bool)onlyHasPartitionedAttachments;
- (_Bool)onlyHasAnchoredDrawable;
- (id)singleLinePartitionedInfoAtStart:(_Bool)arg1;
- (id)partitionedLayoutForInfo:(id)arg1;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2;
- (void)renderWithRenderer:(id)arg1 currentSelection:(id)arg2 limitSelection:(id)arg3 listRange:(struct _NSRange)arg4 rubyGlyphRange:(struct _NSRange)arg5 isCanvasInteractive:(_Bool)arg6 suppressedMisspellingRange:(struct _NSRange)arg7 blackAndWhite:(_Bool)arg8 dictationInterpretations:(const struct TSWPRangeVector *)arg9 autocorrections:(const struct TSWPRangeVector *)arg10 markedRange:(struct _NSRange)arg11 markedText:(id)arg12 renderMode:(int)arg13 pageCount:(unsigned long long)arg14 suppressInvisibles:(_Bool)arg15 currentCanvasSelection:(id)arg16;
- (void)renderWithRenderer:(id)arg1 pageCount:(unsigned long long)arg2;
- (struct _TSWPCharIndexAndPosition)calcAttachmentPositionForDrawable:(id)arg1 atPoint:(struct CGPoint)arg2 inTextLayoutTarget:(id)arg3 tlBoundsInfluencingWrap:(struct CGPoint)arg4 wrapOutset:(struct CGSize)arg5 wrapMargin:(double)arg6 makeInline:(_Bool)arg7;
- (unsigned long long)charIndexFromWPPoint:(struct CGPoint)arg1 pastCenterGoesToNextChar:(_Bool)arg2 allowNotFound:(_Bool)arg3 outFragment:(const struct TSWPLineFragment **)arg4 leadingEdge:(_Bool *)arg5;
- (unsigned long long)charIndexForSelectionFromPoint:(struct CGPoint)arg1 isTail:(_Bool)arg2;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 outFragment:(const struct TSWPLineFragment **)arg6 leadingEdge:(_Bool *)arg7;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 pastCenterGoesToNextChar:(_Bool)arg3 allowNotFound:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
- (id)drawableIntersectionRectsForSelection:(id)arg1 inTarget:(id)arg2;
- (struct CGRect)erasableRectForSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelection:(id)arg1 ranges:(id *)arg2;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3 includeRuby:(_Bool)arg4;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 forParagraphMode:(_Bool)arg3;
- (id)rectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2;
- (id)rectsForSelectionRanges:(id)arg1 selectionType:(int)arg2;
- (id)pMutableRectsForSelectionRange:(struct _NSRange)arg1 selectionType:(int)arg2 includeSpaceAfter:(_Bool)arg3 includeSpaceBefore:(_Bool)arg4 includeLeading:(_Bool)arg5 forParagraphMode:(_Bool)arg6 includeRuby:(_Bool)arg7 inranges:(id)arg8 outranges:(id *)arg9;
- (const struct TSWPLineFragment *)pColumnEndingPartitionedLineFragmentInSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelectionRange:(struct _NSRange)arg1;
- (id)rectsForSelection:(id)arg1;
- (struct CGRect)firstRectForSelection:(id)arg1 includeSpaceAfter:(_Bool)arg2 includeSpaceBefore:(_Bool)arg3 includeLeading:(_Bool)arg4;
- (id)lineSelectionsForSelection:(id)arg1;
@property(readonly, nonatomic) struct CGRect typographicBoundsForCell;
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;
- (unsigned int)fontTraitsForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)caretRectForSelection:(id)arg1;
- (unsigned long long)lineIndexForCharIndex:(unsigned long long)arg1 eol:(_Bool)arg2;
- (const struct TSWPLineFragment *)nearestLineFragmentWithSameVerticalPositionAs:(unsigned long long)arg1 xPos:(double)arg2;
- (const struct TSWPLineFragment *)lineFragmentForCharIndex:(unsigned long long)arg1 knobTag:(unsigned long long)arg2 selectionType:(int)arg3;
- (const struct TSWPLineFragment *)lineFragmentClosestToPoint:(struct CGPoint)arg1 knobTag:(unsigned long long)arg2;
- (double)horizontalOffsetForCharIndex:(unsigned long long)arg1 lineFragmentIndex:(unsigned long long)arg2 bumpPastHyphen:(_Bool)arg3 allowPastLineBounds:(_Bool)arg4;
- (CDStruct_50f584da)lineMetricsAtCharIndex:(unsigned long long)arg1 allowEndOfLine:(_Bool)arg2;
- (struct _NSRange)rangeOfLineFragmentAtIndex:(unsigned long long)arg1;
- (struct CGRect)boundsOfLineFragmentAtIndex:(unsigned long long)arg1;
- (void)makeEmpty:(unsigned long long)arg1 layoutResultFlags:(int)arg2;
- (unsigned long long)lineFragmentCountForBaseline:(double)arg1;
- (void)offsetLineFragmentsByPoint:(struct CGPoint)arg1;
- (void)normalizeLineFragmentOrigins:(struct CGPoint)arg1;
- (const struct TSWPLineFragment *)lineFragmentAtIndex:(unsigned long long)arg1;
- (void)setLineFragmentArray:(const shared_ptr_72f95721 *)arg1;
- (const shared_ptr_72f95721 *)lineFragmentArray;
@property(readonly, nonatomic) unsigned long long countLines;
@property(readonly, nonatomic) struct CGAffineTransform transformToWP;
@property(readonly, nonatomic) struct CGRect frameBounds;
- (void)clearAdornments;
- (void)addAdornmentRect:(const struct TSWPAdornmentRect *)arg1;
- (struct CGRect)changeBarRectForLineFragment:(const struct TSWPLineFragment *)arg1;
- (_Bool)requiresGlyphVectorsForHeightMeasurement;
- (double)textHeight;
@property(readonly, nonatomic) double textBottom;
- (struct CGRect)erasableBounds:(unsigned int)arg1;
- (double)minimumHeightForLayoutOnPage;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 removeFootnoteLayoutCount:(unsigned long long)arg3 removeAutoNumberFootnoteCount:(unsigned long long)arg4;
- (struct CGSize)maxSize;
- (void)incrementRanges:(long long)arg1;
@property(nonatomic) struct _NSRange anchoredRange;
@property(nonatomic) struct _NSRange range;
- (double)logicalBoundsBottom;
- (double)logicalBoundsTop;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 frameBounds:(struct CGRect)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPLayoutManager : NSObject <TSWPStorageObserver>
{
    TSWPStorage *_storage;
    _Bool _isObservingStorage;
    _Bool _useLigatures;
    long long _delta;
    struct _NSRange _dirtyRange;
    TSWPCTTypesetterCache *_typesetterCache;
    struct TSWPTopicNumberHints _cachedTopicNumbers;
    id <TSWPLayoutOwner> _owner;
}

+ (void)fixColumnBoundsForTarget:(id)arg1 storage:(id)arg2 charIndex:(unsigned long long)arg3 firstColumnIndex:(unsigned long long)arg4 precedingHeight:(double)arg5 height:(double)arg6 alreadyHasMargins:(_Bool)arg7 styleProvider:(id)arg8 vertical:(_Bool)arg9;
@property(readonly, nonatomic) id <TSWPLayoutOwner> owner; // @synthesize owner=_owner;
@property(readonly, nonatomic) struct _NSRange dirtyRange; // @synthesize dirtyRange=_dirtyRange;
@property(readonly, retain, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (id).cxx_construct;
- (void).cxx_destruct;
- (int)p_layoutConfigFlagsForTarget:(id)arg1;
@property(readonly, retain, nonatomic) TSWPCTTypesetterCache *typesetterCache;
- (void)destroyLayoutState:(void *)arg1;
- (void)inflateTarget:(id)arg1 fromHints:(const vector_b76bc591 *)arg2 childHint:(id)arg3 anchoredAttachmentPositions:(id)arg4 topicNumbers:(const struct TSWPTopicNumberHints *)arg5;
- (void)deflateTarget:(id)arg1 intoHints:(vector_b76bc591 *)arg2 childHints:(id [2])arg3 anchoredAttachmentPositions:(id *)arg4 topicNumbers:(struct TSWPTopicNumberHints *)arg5 layoutState:(void *)arg6;
- (void *)layoutStateForLayoutAfterHint:(const CDStruct_6026ced1 *)arg1 childHint:(id)arg2 topicNumbers:(const struct TSWPTopicNumberHints *)arg3 textIsVertical:(_Bool)arg4;
- (void *)layoutIntoTarget:(id)arg1 withLayoutState:(void *)arg2 outSync:(_Bool *)arg3;
- (_Bool)needsLayoutInColumn:(id)arg1;
- (void)willRemoveAttachmentLayout:(id)arg1;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)clearTypesetterCache;
- (void)clearOwner;
- (id)styleProvider;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 owner:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPSelection : TSKSelection <NSCopying, TSDTextSelection>
{
    int _type;
    struct _NSRange _range;
    unsigned long long _headChar;
    unsigned long long _tailChar;
    _Bool _leadingEdge;
    unsigned long long _leadingCharIndex;
    _Bool _validVisualRanges;
    int _styleInsertionBehavior;
    int _caretAffinity;
    struct _NSRange _smartFieldRange;
    struct TSWPRangeVector _visualRanges;
}

+ (_Bool)p_checkEndOfLineFlagForRange:(struct _NSRange *)arg1 leadingEdge:(_Bool *)arg2 type:(int *)arg3 endOfLine:(_Bool)arg4 storage:(id)arg5;
+ (id)selectionWithRange:(struct _NSRange)arg1 type:(int)arg2 leadingEdge:(_Bool)arg3 storage:(id)arg4;
+ (id)selectionWithRange:(struct _NSRange)arg1;
+ (Class)archivedSelectionClass;
@property(readonly, nonatomic) _Bool validVisualRanges; // @synthesize validVisualRanges=_validVisualRanges;
@property(readonly, nonatomic) int caretAffinity; // @synthesize caretAffinity=_caretAffinity;
@property(readonly, nonatomic) int styleInsertionBehavior; // @synthesize styleInsertionBehavior=_styleInsertionBehavior;
@property(readonly, nonatomic) unsigned long long leadingCharIndex; // @synthesize leadingCharIndex=_leadingCharIndex;
@property(readonly, nonatomic) _Bool leadingEdge; // @synthesize leadingEdge=_leadingEdge;
@property(nonatomic) unsigned long long tailChar; // @synthesize tailChar=_tailChar;
@property(nonatomic) unsigned long long headChar; // @synthesize headChar=_headChar;
@property(readonly, nonatomic) struct _NSRange smartFieldRange; // @synthesize smartFieldRange=_smartFieldRange;
@property(readonly, nonatomic) struct _NSRange rawRange; // @synthesize rawRange=_range;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isAtEndOfLine;
- (void)saveToArchive:(struct SelectionArchive *)arg1 archiver:(id)arg2;
- (_Bool)intersectsRange:(struct _NSRange)arg1;
- (_Bool)containsCharacterAtIndex:(unsigned long long)arg1 allowRightEdge:(_Bool)arg2;
- (_Bool)containsCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)rightEdge;
- (unsigned long long)leftEdge;
- (unsigned long long)visualRangeCount;
- (void)setHeadChar:(unsigned long long)arg1 tailChar:(unsigned long long)arg2;
- (id)visualRangesArray;
- (struct TSWPRangeVector *)i_visualRanges;
- (const struct TSWPRangeVector *)visualRanges;
- (void)i_setVisualRanges:(const struct TSWPRangeVector *)arg1;
- (struct _NSRange)superRange;
- (unsigned long long)end;
- (unsigned long long)start;
- (id)copyWithVisualRanges:(const struct TSWPRangeVector *)arg1 startChar:(unsigned long long)arg2 endChar:(unsigned long long)arg3 rightToLeft:(_Bool)arg4 sameLine:(_Bool)arg5;
- (id)copyWithNewVisualRanges:(const struct TSWPRangeVector *)arg1;
- (id)constrainToRange:(struct _NSRange)arg1;
- (id)copyWithNewRange:(struct _NSRange)arg1;
- (id)copyWithNewType:(int)arg1;
- (id)copyWithNewVisualTypeRange:(struct _NSRange)arg1 head:(unsigned long long)arg2 tail:(unsigned long long)arg3;
- (id)copyWithNewType:(int)arg1 range:(struct _NSRange)arg2;
- (id)copyWithNewType:(int)arg1 smartFieldRange:(struct _NSRange)arg2;
- (_Bool)isEquivalentForInsertionStyle:(id)arg1;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isValid;
@property(readonly, nonatomic) _Bool isInsertionPoint;
@property(readonly, nonatomic) _Bool isRange;
@property(readonly, nonatomic) _Bool isVisual;
- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithArchive:(const struct SelectionArchive *)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4 smartFieldRange:(struct _NSRange)arg5 leadingEdge:(_Bool)arg6 storage:(id)arg7;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4 smartFieldRange:(struct _NSRange)arg5 leadingEdge:(_Bool)arg6 leadingCharIndex:(unsigned long long)arg7;
@property(readonly, nonatomic) struct _NSRange range;
- (unsigned long long)insertionChar;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPArchivedSelection : TSPObject
{
    TSWPSelection *_selection;
}

@property(retain, nonatomic) TSWPSelection *selection; // @synthesize selection=_selection;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPRenderer : NSObject
{
    struct CGContext *_context;
    _Bool _flipShadows;
    double _viewScale;
    TSDBezierPath *_interiorClippingPath;
}

+ (struct __CTFont *)invisiblesFont;
@property(retain, nonatomic) TSDBezierPath *interiorClippingPath; // @synthesize interiorClippingPath=_interiorClippingPath;
@property(nonatomic) double viewScale; // @synthesize viewScale=_viewScale;
@property(nonatomic) _Bool flipShadows; // @synthesize flipShadows=_flipShadows;
- (void)p_drawListLabelForFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineDrawFlags:(unsigned int)arg3;
- (void)p_drawInvisiblesBreakLine:(const struct TSWPAdornmentLine *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAdornmentGlyphs:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAttachmentAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (_Bool)p_canvasSelectionIncludesDrawableOfAttachmentAtCharIndex:(unsigned long long)arg1 state:(const struct TSWPDrawingState *)arg2;
- (void)p_drawHiddenDeletionsAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawInvisiblesAdornments:(const struct TSWPAdornments *)arg1 lineFragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3;
- (void)p_drawAttachmentGlyphAtPosition:(CDStruct_316206b0)arg1 fragment:(const struct TSWPLineFragment *)arg2;
- (void)p_drawTextInRunsForLine:(struct __CTLine *)arg1 fragment:(const struct TSWPLineFragment *)arg2 state:(const struct TSWPDrawingState *)arg3 tateChuYoko:(_Bool)arg4 baseRange:(struct _NSRange)arg5 isFirstLineRef:(_Bool)arg6;
- (void)p_calculateMarkAdornments:(vector_5a1d2cc3 *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineFragment:(const struct TSWPLineFragment *)arg3;
- (void)p_strokeWavyLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 width:(double)arg3;
- (void)p_strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 width:(double)arg3;
- (void)p_drawAdornmentLineBackgroundRect:(const struct TSWPAdornmentLine *)arg1 lineDrawFlags:(unsigned int)arg2 drawingState:(const struct TSWPDrawingState *)arg3 bounds:(struct CGRect)arg4;
- (void)p_drawAdornmentLine:(const struct TSWPAdornmentLine *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineFragment:(const struct TSWPLineFragment *)arg3 lineFragmentStart:(struct CGPoint)arg4 vertical:(_Bool)arg5;
- (void)p_drawAutocorrectionMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawDictationMarkingsFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2;
- (void)p_drawWordMarkingsForFragment:(const struct TSWPLineFragment *)arg1 color:(id)arg2 ranges:(const struct TSWPRangeVector *)arg3 suppressRange:(struct _NSRange)arg4 drawingState:(const struct TSWPDrawingState *)arg5;
- (_Bool)p_shouldClipFragment:(const struct TSWPLineFragment *)arg1 drawingState:(const struct TSWPDrawingState *)arg2 lineDrawFlags:(unsigned int)arg3 updateRect:(struct CGRect)arg4 outClipRect:(struct CGRect *)arg5;
- (void)drawAdornmentRects:(const vector_e65b05c3 *)arg1 forColumn:(id)arg2 foreground:(_Bool)arg3;
- (void)drawFragment:(const struct TSWPLineFragment *)arg1 updateRect:(struct CGRect)arg2 drawingState:(const struct TSWPDrawingState *)arg3 runState:(CDStruct_3b6efdb6 *)arg4 lineDrawFlags:(unsigned int)arg5;
- (void)didRenderFragments;
- (void)willRenderFragmentsWithDrawingState:(const struct TSWPDrawingState *)arg1;
- (struct CGSize)convertSizeToDeviceSpace:(struct CGSize)arg1;
- (struct CGRect)getClipBoundingBox;
- (void)dealloc;
- (id)initWithContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPAttachment : TSPObject <TSKDocumentObject, TSDOwningAttachment, TSPCopying>
{
    TSWPStorage *_parentStorage;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (int)attributeArrayKind;
@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)infoChanged;
@property(readonly, nonatomic) unsigned long long enabledKnobMask;
@property(readonly, nonatomic) _Bool specifiesEnabledKnobMask;
@property(readonly, nonatomic) _Bool isSearchable;
@property(readonly, nonatomic) Class positionerClass;
@property(readonly, nonatomic) _Bool isAttachedToBodyText;
@property(readonly, nonatomic) _Bool isPartitioned;
@property(readonly, nonatomic) _Bool isAnchored;
@property(readonly, nonatomic) _Bool isDrawable;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (unsigned long long)findCharIndex;
- (id)topLevelAttachment;
- (_Bool)changesWithPageCount;
- (int)elementKind;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (_Bool)changesWithPageNumber;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPColumns : NSObject
{
    unsigned long long _columnCount;
    _Bool _equalWidth;
    double _widthArray[10];
    double _gapArray[9];
}

+ (id)columns;
@property(nonatomic) _Bool equalWidth; // @synthesize equalWidth=_equalWidth;
@property(nonatomic) unsigned long long columnCount; // @synthesize columnCount=_columnCount;
- (id)description;
- (void)setGap:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (double)p_maxEqualGapForBodyWidth:(double)arg1;
- (void)setWidth:(double)arg1 forColumnIndex:(unsigned long long)arg2 bodyWidth:(double)arg3;
- (double)p_equalWidthForEqualGap:(double)arg1;
- (double)p_equalGapForEqualWidth:(double)arg1;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 outWidth:(double *)arg3 outGap:(double *)arg4;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (_Bool)isEqual:(id)arg1;
- (void)p_setColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (void)p_setEqualWidth:(double)arg1 equalGap:(double)arg2;
- (void)saveToArchive:(struct ColumnsArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ColumnsArchive *)arg1 unarchiver:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithEqualColumnCount:(unsigned long long)arg1 gapFraction:(double)arg2;
- (id)initWithColumnCount:(unsigned long long)arg1 equalWidth:(_Bool)arg2 widthArray:(double *)arg3 gapArray:(double *)arg4;
- (id)init;
- (id)initWithColumnCount:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPPadding : NSObject
{
    double _topInset;
    double _leftInset;
    double _bottomInset;
    double _rightInset;
}

+ (id)paddingWithTopInset:(double)arg1 leftInset:(double)arg2 bottomInset:(double)arg3 rightInset:(double)arg4;
+ (id)padding;
@property(nonatomic) double rightInset; // @synthesize rightInset=_rightInset;
@property(nonatomic) double bottomInset; // @synthesize bottomInset=_bottomInset;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(nonatomic) double topInset; // @synthesize topInset=_topInset;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)saveToArchive:(struct PaddingArchive *)arg1 archiver:(id)arg2;
- (void)transform:(struct CGAffineTransform)arg1;
- (id)initWithArchive:(const struct PaddingArchive *)arg1 unarchiver:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTopInset:(double)arg1 leftInset:(double)arg2 bottomInset:(double)arg3 rightInset:(double)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPPageRep : TSDContainerRep
{
}

+ (id)p_overflowKnobImage;
- (id)headerFooterRepForStorage:(id)arg1;
- (id)headerFooterRep:(int)arg1 atIndex:(int)arg2;
- (void)p_updateLayoutBordersVisibility;
- (_Bool)p_headerFooterBorderVisibleForType:(int)arg1;
- (void)p_createHeaderFooterOverflowIndicatorLayerIfNecessaryForType:(int)arg1 fragment:(int)arg2;
- (void)p_createHeaderFooterBorderLayerIfNecessaryForType:(int)arg1;
- (id)p_hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (int)p_hitHeaderFooterFragment:(int)arg1 atPoint:(struct CGPoint)arg2;
- (void)p_updateHeaderFooterRepClipping:(int)arg1;
- (void)p_updateBorderLayers;
- (_Bool)p_hasValidHeaderFooterForType:(int)arg1;
- (void)didUpdateLayer:(id)arg1;
- (double)p_headerFooterBorderWidth;
- (_Bool)p_headerFooterIsVisibleAndInteractive:(int)arg1;
- (void)viewScrollingEnded;
- (void)viewScrollDidChange;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)updateFromLayout;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPChangeDetails : NSObject <TSDAnnotationHosting>
{
    NSString *mChangeTrackingContentString;
    NSString *mChangeTrackingTitleString;
    TSWPChange *_change;
}

@property(retain, nonatomic) TSWPChange *change; // @synthesize change=_change;
@property(readonly, copy) NSString *description;
- (void)p_updateChangeStrings;
- (void)commitText:(id)arg1;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSDate *date;
- (void)setAuthor:(id)arg1;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) id <TSKModel> hostingModel;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToChangeDetails:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChange:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(copy, nonatomic) TSDCommentStorage *storage;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPCommentInfo : TSWPShapeInfo <TSDAnnotationHosting>
{
    TSDCommentStorage *_commentStorage;
}

+ (id)p_defaultShadow;
+ (id)p_defaultFill;
+ (id)p_defaultPadding;
+ (id)p_defaultStroke;
+ (id)commentInfoWithContext:(id)arg1 size:(struct CGSize)arg2 storage:(id)arg3;
+ (void)upgradeCommentInfoStorage:(id)arg1;
+ (void)upgradeCommentInfoStyle:(id)arg1;
+ (void)createCommentInfoStyleInStylesheetIfNeeded:(id)arg1;
+ (id)p_commentParagraphStyleForStylesheet:(id)arg1;
+ (id)p_defaultCommentInfoStyleInStylesheet:(id)arg1;
+ (id)commentStyleIdentifier;
+ (id)bezierPathForExportCommentOutline;
@property(readonly, nonatomic) TSDCommentStorage *commentStorage; // @synthesize commentStorage=_commentStorage;
- (_Bool)wantsAnnotationPopover;
@property(copy, nonatomic) TSDCommentStorage *storage;
- (void)commitText:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) NSDate *date;
- (void)setAuthor:(id)arg1;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) id <TSKModel> hostingModel;
- (void)saveToArchive:(struct CommentInfoArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct CommentInfoArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)searchForAnnotationsWithHitBlock:(CDUnknownBlockType)arg1;
- (_Bool)supportsAttachedComments;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
- (Class)layoutClass;
- (Class)repClass;
- (_Bool)supportsHyperlinks;
- (_Bool)isLockable;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4 wpStorage:(id)arg5;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4 commentStorage:(id)arg5;
- (id)creationDateString;
- (id)pathSourceForExportCommentOutline;

// Remaining properties
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPLayout : TSDLayout <TSWPLayoutTarget, TSWPLayoutOwner>
{
    TSWPLayoutManager *_layoutManager;
    NSMutableArray *_columns;
    _Bool _textLayoutValid;
}

@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(readonly, nonatomic) _Bool shouldWrapAroundExternalDrawables;
- (id)textColorOverride;
@property(readonly, nonatomic) TSDBezierPath *interiorClippingPath;
- (id)styleProvider;
- (struct CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(_Bool)arg2;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (id)p_firstAncestorRespondingToSelector:(SEL)arg1;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)validatedLayoutForInlineDrawable:(id)arg1;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) int naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (struct CGRect)p_protectedRectWithinLayoutForSelectionRect:(struct CGRect)arg1;
- (void)wrappableChildInvalidated:(id)arg1;
- (void)parentDidChange;
- (void)p_clearOutLayoutManager;
- (void)parentWillChangeTo:(id)arg1;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (_Bool)shouldProvideSizingGuides;
- (_Bool)shouldDisplayGuides;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (Class)repClassOverride;
- (void)invalidateParentForAutosizing;
- (_Bool)invalidateForPageCountChange;
- (void)invalidateForFootnoteNumberingChange;
- (void)p_invalidateTextLayout;
- (void)invalidateTextLayout;
- (void *)initialLayoutState;
- (id)computeLayoutGeometry;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (void)validate;
- (void)p_validateTextLayout;
- (id)reliedOnLayouts;
- (id)dependentLayouts;
- (_Bool)p_parentAutosizes;
- (id)p_wpLayoutParent;
- (void)invalidateSize;
- (_Bool)caresAboutStorageChanges;
@property(readonly, nonatomic) _Bool textLayoutValid;
@property(readonly, nonatomic) TSWPLayoutManager *layoutManager;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithInfo:(id)arg1;
- (id)additionalReliedOnLayoutsForTextWrap;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPRep : TSDContainerRep <TSKHighlightArrayControllerProtocol, TSKPulseAnimationControllerProtocol, TSWPHyperlinkHostRepProtocol, TSDDecorator>
{
    CALayer *_textLayers[2];
    CALayer *_caretLayer;
    CAShapeLayer *_selectionLineLayers[2];
    CAShapeLayer *_selectionHighlightLayer;
    CAShapeLayer *_selectionParagraphBorderLayer;
    CAShapeLayer *_markHighlightLayer;
    CAShapeLayer *_smartFieldHighlightLayer;
    CAShapeLayer *_secondaryHighlightLayer;
    struct _NSRange _secondaryHighlightRange;
    int _secondaryHighlightPathStyle;
    TSKHighlightArrayController *_pulseArrayController;
    TSKHighlightArrayController *_highlightArrayController;
    TSKPulseAnimationController *_caretPulseController;
    _Bool _caretAnimationDisabled;
    _Bool _suppressCaret;
    struct _NSRange _suppressedMisspellingRange;
    _Bool _updatingHighlights;
    _Bool _suppressSelectionHighlight;
    struct _NSRange _dragRange;
    TSWPSelection *_lastSelection;
    _Bool _selectionChanged;
    _Bool _markChanged;
    unsigned long long _newSelectionFlags;
    _Bool _repFieldsAreActive;
    _Bool _indentAnimationRunning;
    CALayer *_indentAnimationLayer;
    long long _indentDelta;
    SEL _indentSelector;
    id _indentTarget;
    _Bool _hudStateDirty;
    _Bool _invalidateHUDState;
    _Bool _useKeyboardWhenEditing;
    CALayer *_dragAndDropCaretLayer;
    TSWPSelection *_dropSelection;
    _Bool _findIsShowing;
    TSWPSearchReference *_activeSearchReference;
    TSWPEditingController *_textEditor;
    NSArray *_searchReferences;
}

@property(retain, nonatomic) NSArray *searchReferences; // @synthesize searchReferences=_searchReferences;
@property(readonly, nonatomic) TSWPEditingController *textEditor; // @synthesize textEditor=_textEditor;
@property(nonatomic) _Bool findIsShowing; // @synthesize findIsShowing=_findIsShowing;
@property(retain, nonatomic) TSWPSearchReference *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(nonatomic) TSWPSelection *dropSelection; // @synthesize dropSelection=_dropSelection;
@property(nonatomic) struct _NSRange dragRange; // @synthesize dragRange=_dragRange;
@property(nonatomic, getter=isSelectionHighlightSuppressed) _Bool suppressSelectionHighlight; // @synthesize suppressSelectionHighlight=_suppressSelectionHighlight;
@property(nonatomic) _Bool useKeyboardWhenEditing; // @synthesize useKeyboardWhenEditing=_useKeyboardWhenEditing;
- (id).cxx_construct;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)p_updateHighlights;
- (void)p_setSearchReferencesToHighlight:(id)arg1;
- (void)p_findUIStateChangedNotification:(id)arg1;
- (void)p_setActiveSearchReference:(id)arg1;
- (void)p_activeFindHighlightChangedNotification:(id)arg1;
- (void)p_setPulseControllerActive:(_Bool)arg1 autohide:(_Bool)arg2;
- (void)pulseAnimationDidStopForPulse:(id)arg1;
- (void)pulseAnimationDidStop:(id)arg1;
- (id)selectionForDragAndDropNaturalPoint:(struct CGPoint)arg1 dragIsTopicSelection:(_Bool)arg2;
@property(readonly, nonatomic) struct CGAffineTransform transformToConvertNaturalToScaledRoot;
- (struct CGColor *)p_caretLayerColor;
- (_Bool)p_hasEmptyList;
- (_Bool)p_hasVisibleContents;
- (void)p_editingDidEndNotification:(id)arg1;
- (void)p_markChangedNotification:(id)arg1;
- (void)p_selectionContentsChangedNotification:(id)arg1;
- (void)p_selectionChangedNotification:(id)arg1;
- (void)p_invalidateCommentKnobs;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext *)arg2;
- (void)p_updateSmartFieldHighlightLayer;
- (void)p_hideSmartFieldHighlightLayer;
- (void)p_createSmartFieldHighlightLayer;
- (void)p_updateMarkHighlightLayer;
- (void)p_hideMarkHighlightLayer;
- (void)p_createMarkHighlightLayer;
- (void)p_showSelectionParagraphBorderLayerWithPath:(struct CGPath *)arg1;
- (void)p_hideSelectionParagraphBorderLayer;
- (void)p_hideSelectionHighlightLayer;
- (void)p_createSelectionParagraphBorderLayer;
- (void)p_createSelectionHighlightLayer;
- (void)p_setSelectionHighlightColor;
- (void)p_setSelectionLineLayersHidden:(_Bool)arg1;
- (void)p_createSelectionLineLayers;
- (void)p_stopCaretLayerAnimation;
- (void)p_startCaretLayerAnimation;
- (void)p_hideCaretLayer;
- (void)p_showCaretLayer;
- (_Bool)p_positionCaretLayer:(id)arg1 forSelection:(id)arg2 layerRelative:(_Bool)arg3;
- (id)p_newCaretLayerWithZPosition:(double)arg1;
- (void)p_destroyLayer:(int)arg1;
- (void)p_createLayer:(int)arg1;
- (void)p_drawTextInLayer:(id)arg1 context:(struct CGContext *)arg2 limitSelection:(id)arg3 rubyGlyphRange:(struct _NSRange)arg4 renderMode:(int)arg5 suppressInvisibles:(_Bool)arg6;
- (void)p_teardown;
@property(readonly, nonatomic) _Bool textIsVertical;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)p_drawTextBackgroundLayerInContext:(struct CGContext *)arg1;
- (void)p_drawTextLayerInContext:(struct CGContext *)arg1;
- (void)i_setNeedsDisplayForSelectionChange;
- (void)p_updateForCurrentSelectionWithFlags:(unsigned long long)arg1;
- (void)i_setNeedsErasableDisplayInRange:(struct _NSRange)arg1;
- (void)p_hideSelectionLayers;
- (_Bool)p_isSelectionSingleAnchoredDrawableAttachment;
- (void)p_updateLayersForRangeSelection:(id)arg1 selectionFlags:(unsigned long long)arg2;
- (struct CGPoint)p_pinPoint:(struct CGPoint)arg1 toRect:(struct CGRect)arg2;
- (id)lineSearchReferencesForSearchReference:(id)arg1;
- (id)p_lineSelectionsForSelection:(id)arg1;
- (struct CGPath *)p_newSelectionPathForRange:(struct _NSRange)arg1 headKnobRect:(struct CGRect *)arg2 tailKnobRect:(struct CGRect *)arg3 selectionType:(int)arg4 selection:(id)arg5;
- (struct CGPath *)p_createPathForParagraphSelection:(id)arg1 needsParagraphBorder:(_Bool)arg2;
- (_Bool)p_paragraphModeBorderNeededForColumn:(id)arg1 dragCharIndex:(unsigned long long)arg2 knobTag:(unsigned long long)arg3;
- (struct CGRect)p_paragraphModeRectangleForColumn:(id)arg1 selection:(id)arg2;
- (void)p_updateAnimationWithAnimatingPulse:(_Bool)arg1;
- (void)editingDidEnd;
- (_Bool)doesNeedDisplayOnEditingDidEnd;
- (_Bool)isOverflowing;
- (id)textImageForRect:(struct CGRect)arg1;
- (id)textImageForSelection:(id)arg1 frame:(struct CGRect *)arg2 usingGlyphRect:(_Bool)arg3 shouldPulsate:(_Bool)arg4 suppressInvisibles:(_Bool)arg5;
- (id)p_imageForRect:(struct CGRect)arg1 usingGlyphRect:(_Bool)arg2 drawBackground:(_Bool)arg3 shouldPulsate:(_Bool)arg4 forCaret:(_Bool)arg5 drawSelection:(id)arg6 suppressInvisibles:(_Bool)arg7;
- (void)p_addRoundedRectToContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2 forCaret:(_Bool)arg3;
- (void)p_addRectToContext:(struct CGContext *)arg1 rect:(struct CGRect)arg2;
- (void)p_updateLayersForInsertionPointSelection:(id)arg1;
- (struct CGRect)p_convertNaturalRectToRotated:(struct CGRect)arg1 repAngle:(double)arg2;
- (struct CGRect)glyphRectForRubyFieldAtCharIndex:(unsigned long long)arg1 glyphRange:(struct _NSRange)arg2;
- (unsigned long long)glyphCountForRubyFieldAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)charCountOfGlyphStartingAtCharIndex:(unsigned long long)arg1;
- (unsigned int)fontTraitsForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)glyphRectForRange:(struct _NSRange)arg1 includingLabel:(_Bool)arg2;
- (struct CGRect)columnRectForRange:(struct _NSRange)arg1;
- (struct CGRect)labelRectForCharIndex:(unsigned long long)arg1;
- (id)decoratorOverlayLayers;
- (void)animateIndent:(long long)arg1 target:(id)arg2 action:(SEL)arg3;
- (_Bool)shouldCreateTextKnobs;
- (_Bool)shouldCreateLockedKnobs;
- (_Bool)shouldCreateSelectionKnobs;
- (void)addKnobsToArray:(id)arg1;
- (void)invalidateKnobs;
@property(readonly, nonatomic) TSWPSelection *selection;
@property(readonly, nonatomic) NSArray *columns;
@property(readonly, nonatomic) TSWPStorage *storage;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (id)hyperlinkRegions;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)willDisplayEditHyperlinkUIForHyperlinkField:(id)arg1 beginEditing:(_Bool)arg2;
- (id)hyperlinkContainerRep;
- (id)repForDragging;
- (id)siblings;
- (id)repForCharIndex:(unsigned long long)arg1 isStart:(_Bool)arg2;
- (void)pulseCaret;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)enableCaretAnimation;
- (void)disableCaretAnimation;
- (void)viewScrollingEnded;
- (void)viewScaleDidChange;
- (void)viewDidAppear;
- (void)gesturesDidEnd;
- (void)didEndZooming;
- (void)willBeginZooming;
- (_Bool)isEditing;
- (id)columnForCharIndex:(unsigned long long)arg1;
- (id)closestColumnForPoint:(struct CGPoint)arg1;
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (void)setHighlightedHyperlinkField:(id)arg1;
- (void)clearSecondaryHighlight;
- (void)setSecondaryHighlightRange:(struct _NSRange)arg1 color:(struct CGColor *)arg2 pathStyle:(int)arg3;
- (void)p_updateSecondaryHighlightLayer;
- (id)footnoteReferenceAttachmentAtPoint:(struct CGPoint)arg1;
- (id)footnoteMarkAttachmentAtPoint:(struct CGPoint)arg1;
- (id)rubyFieldAtPoint:(struct CGPoint)arg1;
- (id)smartFieldAtPoint:(struct CGPoint)arg1;
- (_Bool)canEditWithEditor:(id)arg1;
- (id)beginEditing;
- (_Bool)handlesEditMenu;
- (struct CGRect)newTextLayerUnscaledBounds:(struct CGRect)arg1 forNewTextBounds:(struct CGRect)arg2;
- (void)screenScaleDidChange;
- (void)didUpdateLayer:(id)arg1;
- (struct CGRect)clipRect;
- (struct CGRect)p_clipRect:(struct CGRect)arg1;
- (void)updateFromLayout;
- (void)invalidateHUDState;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)drawRubyInContext:(struct CGContext *)arg1 rubyFieldStart:(unsigned long long)arg2 rubyGlyphRange:(struct _NSRange)arg3;
- (void)drawInContext:(struct CGContext *)arg1 limitSelection:(id)arg2 suppressInvisibles:(_Bool)arg3;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInRange:(struct _NSRange)arg1;
- (void)setNeedsDisplay;
- (id)textBackgroundLayer;
- (id)textLayer;
- (void)performBlockOnTextLayers:(CDUnknownBlockType)arg1;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (id)p_hyperlinkAtPoint:(struct CGPoint)arg1;
- (void)spellCheckingStateChanged;
- (void)verticalTextPropertyChanged;
- (int)tilingMode;
- (_Bool)directlyManagesLayerContent;
- (Class)layerClass;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 pastCenterGoesToNextChar:(_Bool)arg4 isAtEndOfLine:(_Bool *)arg5 leadingEdge:(_Bool *)arg6;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 allowNotFound:(_Bool)arg3 isAtEndOfLine:(_Bool *)arg4 leadingEdge:(_Bool *)arg5;
- (unsigned long long)charIndexFromPoint:(struct CGPoint)arg1 allowPastBreak:(_Bool)arg2 isAtEndOfLine:(_Bool *)arg3;
- (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1 isTail:(_Bool)arg2 selectionType:(int)arg3;
- (unsigned long long)charIndexForPointWithPinning:(struct CGPoint)arg1;
- (double)knobOffsetForKnob:(id)arg1 paragraphMode:(_Bool)arg2;
- (struct CGPoint)knobCenterForSelection:(id)arg1 knob:(id)arg2;
- (_Bool)p_shouldShowCommentsIncludingHighlights:(_Bool)arg1;
- (struct CGRect)closestCaretRectForPoint:(struct CGPoint)arg1 inSelection:(_Bool)arg2;
- (struct CGRect)p_topicDragRectForSelection:(id)arg1;
- (struct CGRect)p_caretRectForSelection:(id)arg1;
- (struct CGRect)caretRectForSelection:(id)arg1;
- (CDStruct_7e4c5a1e)wordMetricsAtCharIndex:(unsigned long long)arg1;
- (CDStruct_50f584da)lineMetricsAtCharIndex:(unsigned long long)arg1;
- (CDStruct_50f584da)lineMetricsAtPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForCharIndex:(unsigned long long)arg1 leadingEdge:(_Bool)arg2 caretAffinity:(int)arg3;
- (struct CGRect)caretRectForCharIndex:(unsigned long long)arg1 caretAffinity:(int)arg2;
- (struct CGRect)naturalBoundsRectForHyperlinkField:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1 includeRuby:(_Bool)arg2;
- (struct CGRect)rectForSelection:(id)arg1;
- (_Bool)isPointInSelectedArea:(struct CGPoint)arg1;
- (struct CGRect)selectionRect;
- (struct CGRect)caretRect;
- (struct CGPoint)pinToClosestColumn:(struct CGPoint)arg1;
- (struct CGPoint)pinToNaturalBounds:(struct CGPoint)arg1 andLastLineFragment:(_Bool)arg2;
- (struct _NSRange)range;
- (void)willBeRemoved;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (_Bool)shouldShowKnobs;
- (_Bool)p_shouldDisplaySelectionControls;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) TSWPLayout *layout;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPFont : NSObject
{
    NSString *_fontName;
    NSString *_compatibilityName;
    NSString *_displayName;
    NSString *_familyName;
    unsigned long long _hash;
}

+ (_Bool)isKeyValueProxyLeafType;
+ (id)fontForStyles:(id *)arg1 count:(unsigned long long)arg2;
+ (id)fontWithName:(id)arg1 compatibilityName:(id)arg2;
+ (id)fontWithName:(id)arg1;
@property(copy, nonatomic) NSString *compatibilityName; // @synthesize compatibilityName=_compatibilityName;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(readonly, nonatomic) NSString *familyName;
@property(readonly, nonatomic) NSString *displayName;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithFontName:(id)arg1 compatibilityName:(id)arg2;
- (id)initWithFontName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeInfo : TSDShapeInfo <TSDMixing, TSDContainerInfo, TSWPStorageParent, TSDSelectionStatisticsContributor>
{
    TSWPStorage *_containedStorage;
}

+ (void)setDefaultInstructionalText:(id)arg1;
+ (unsigned long long)numberOfDifferencesBetweenStyleProperties:(id)arg1 betweenOutgoingStorage:(id)arg2 outgoingRange:(struct _NSRange)arg3 incomingStorage:(id)arg4 incomingRange:(struct _NSRange)arg5 maxDifferencesBeforeReturning:(unsigned long long)arg6;
+ (_Bool)shouldDisableTextMorphsFromPropertiesBetweenOutgoingStorage:(id)arg1 outgoingRange:(struct _NSRange)arg2 incomingStorage:(id)arg3 incomingRange:(struct _NSRange)arg4;
+ (_Bool)stylesAreEqualWithOutgoingStorage:(id)arg1 outgoingRange:(struct _NSRange)arg2 incomingStorage:(id)arg3 incomingRange:(struct _NSRange)arg4;
+ (id)textPropertiesAffectingTextMorph;
+ (id)textPropertiesNotAffectingVisualStyle;
+ (id)textPropertiesAffectingVisualStyleExceptSize;
+ (id)textPropertiesAffectingVisualStyle;
+ (id)textPropertiesNeedingCharacterAnimation;
@property(retain, nonatomic) TSWPStorage *containedStorage; // @synthesize containedStorage=_containedStorage;
- (void)processSelectedStoragesWithStatisticsController:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (unsigned long long)chunkCountForTextureDeliveryStyle:(unsigned long long)arg1 byGlyphStyle:(int)arg2 animationFilter:(id)arg3;
- (unsigned long long)p_chunkCountForByBulletGroup;
- (unsigned long long)p_chunkCountForByBullet;
- (_Bool)p_hasListLabelOrContentForParagraphIndex:(unsigned long long)arg1;
- (_Bool)p_hasContentForRange:(struct _NSRange)arg1;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)commandForPasteStyleWithContext:(id)arg1 pasteboardStyles:(id)arg2;
- (id)stylesForCopyStyle;
- (id)styleIdentifierTemplateForNewPreset;
- (id)propertyMapForNewPreset;
- (struct CGPoint)transformableObjectAnchorPoint;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (Class)repClass;
- (Class)layoutClass;
- (void)acceptVisitor:(id)arg1;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)fixPositionOfImportedAutosizedShape;
- (struct CGPoint)autosizePositionOffset;
- (struct CGAffineTransform)autosizedTransformForInfoGeometry:(id)arg1 size:(struct CGSize)arg2;
- (struct CGPoint)autosizePositionOffsetForGeometry:(id)arg1 size:(struct CGSize)arg2;
- (double)pOffsetForVerticalAlignment:(struct CGSize)arg1;
- (double)pOffsetForParagraphAlignment:(struct CGSize)arg1;
@property(readonly, nonatomic) NSString *instructionalText;
@property(readonly, nonatomic) _Bool isTextBox;
@property(readonly, nonatomic) _Bool displaysInstructionalText;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)presetKind;
- (id)initWithContext:(id)arg1 geometry:(id)arg2;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 wpStorage:(id)arg4;
- (id)initWithContext:(id)arg1 geometry:(id)arg2 style:(id)arg3 pathSource:(id)arg4 wpStorage:(id)arg5;
- (void)dealloc;
- (Class)styleClass;
@property(nonatomic) long long contentWritingDirection;
@property(readonly, nonatomic) TSWPShapeStyle *tswpShapeStyle;
@property(retain, nonatomic) TSWPPadding *padding;
@property(retain, nonatomic) TSWPColumns *columns;
@property(readonly, nonatomic) int columnDirection;
@property(nonatomic) int verticalAlignment;
@property(nonatomic) _Bool textIsVertical;
@property(nonatomic) _Bool shrinkTextToFit;
- (_Bool)supportsShrinkTextToFit;
- (_Bool)supportsTextInset;
- (void)saveToArchive:(struct ShapeInfoArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct ShapeInfoArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (id)containedTextForDeliveryStyle:(unsigned long long)arg1 chunkIndex:(unsigned long long)arg2;
- (id)defaultBuildChunkTitle;
- (id)containedTextForRange:(struct _NSRange)arg1;
- (id)p_chunkTitleByRemovingAdditionalLinesFromTitle:(id)arg1;
- (id)containedText;
- (_Bool)isBulleted;
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
- (_Bool)shouldHideEmptyBullets;

// Remaining properties
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText; // @dynamic anchoredToText;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText; // @dynamic floatingAboveText;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @dynamic geometry;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText; // @dynamic inlineWithText;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment; // @dynamic owningAttachment;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse; // @dynamic owningAttachmentNoRecurse;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @dynamic parentInfo;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeLayout : TSDShapeLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver>
{
    TSDWrapPolygon *_cachedInteriorWrapPolygon;
    _Bool _observingStorage;
    TSWPLayout *_containedLayout;
    id <TSWPShapeLayoutDelegate> _delegate;
}

@property id <TSWPShapeLayoutDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) TSWPLayout *containedLayout; // @synthesize containedLayout=_containedLayout;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)processChangedProperty:(int)arg1;
- (id)pathSource;
- (struct CGPoint)autosizePositionOffsetForFixedWidth:(_Bool)arg1 height:(_Bool)arg2;
- (struct CGPoint)autosizePositionOffset;
- (struct CGAffineTransform)autosizedTransformForInfoGeometry:(id)arg1;
- (struct CGAffineTransform)autosizedTransform;
- (struct CGAffineTransform)computeLayoutTransform;
- (id)dependentLayouts;
- (_Bool)resizeMayChangeAspectRatio;
- (_Bool)canAspectRatioLockBeChangedByUser;
- (_Bool)supportsRotation;
- (_Bool)textLayoutShouldLayoutVertically:(id)arg1;
- (_Bool)textLayoutShouldWrapAroundExternalDrawables:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
@property(readonly, nonatomic) _Bool autosizes;
- (unsigned int)cropLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2;
- (id)interiorClippingPath;
- (id)textWrapper;
- (id)interiorWrapPath;
- (id)interiorWrapPolygon;
- (void)updateChildrenFromInfo;
- (void)createContainedLayoutForEditing;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (id)childSearchTargets;
- (_Bool)isInvisibleAutosizingShape;
- (id)instructionalStorageForContainedStorage:(id)arg1 storageKind:(int)arg2;
- (void)createContainedLayoutForInstructionalText;
- (void)destroyContainedLayoutForInstructionalText;
- (void)invalidatePath;
- (void)invalidateSize;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)setChildren:(id)arg1;
- (id)children;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (double)maxAutoGrowWidthForTextLayout:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeRep : TSDShapeRep <TSDMagicMoveMatching, TSDContainerRep, TSWPShapeLayoutDelegate>
{
    _Bool _editingContainedRep;
    CALayer *_overflowGlyphLayer;
    struct CGPoint _originalAutosizePositionOffset;
    TSWPRep *_containedRep;
}

+ (double)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;
+ (id)magicMoveTextMatchesBetweenOutgoingObjects:(id)arg1 andIncomingObjects:(id)arg2 textureContext:(id)arg3 textDeliveryType:(long long)arg4 repToOpacityTextRangeDictMap:(id)arg5;
+ (id)magicMoveAnimationMatchesFromMatches:(id)arg1;
+ (void)p_getOutgoingTextureSet:(id *)arg1 incomingTextureSet:(id *)arg2 withOutgoingRep:(id)arg3 outgoingChunkRange:(struct _NSRange)arg4 incomingRep:(id)arg5 incomingChunkRange:(struct _NSRange)arg6 includeListLabels:(_Bool)arg7;
+ (id)p_textureSetFromRep:(id)arg1 range:(struct _NSRange)arg2 includeListLabel:(_Bool)arg3 desiredContentRect:(struct CGRect)arg4;
+ (_Bool)p_listLabelsAreEqualWithOutgoingStorage:(id)arg1 outgoingCharIndex:(long long)arg2 incomingStorage:(id)arg3 incomingCharIndex:(long long)arg4 shouldMatch:(_Bool *)arg5;
+ (unsigned long long)p_longestChunkInOutgoingObjects:(id)arg1 incomingObjects:(id)arg2 textDeliveryType:(long long)arg3 addOutgoingChunksToArray:(id)arg4 addIncomingChunksToArray:(id)arg5;
+ (id)p_stringByApplyingCapitalizationPropertyFromStorage:(id)arg1 withRange:(struct _NSRange)arg2 toString:(id)arg3;
+ (id)p_potentialMatchesWithChunkLength:(unsigned long long)arg1 outgoingTextChunks:(id)arg2 incomingTextChunks:(id)arg3 textureContext:(id)arg4 textDeliveryType:(long long)arg5;
+ (double)p_mmAttributeMatchPercentWithOutgoingTextChunk:(id)arg1 incomingTextChunk:(id)arg2;
@property(readonly, nonatomic) TSWPRep *containedRep; // @synthesize containedRep=_containedRep;
- (id).cxx_construct;
- (void)shapeLayoutDidChangeContainedStorage:(id)arg1;
- (_Bool)shapeLayoutShouldUpdateInstructionalText:(id)arg1;
- (_Bool)isEditingChildRep;
- (id)resizedGeometryForTransform:(struct CGAffineTransform)arg1;
- (double)pParagraphAlignmentOffset;
- (id)dynamicResizeDidBegin;
- (unsigned long long)enabledKnobMask;
- (id)p_overflowKnobImage;
- (void)processChangedProperty:(int)arg1;
- (_Bool)canBeUsedForImageMask;
- (_Bool)isInvisible;
- (id)additionalLayersOverLayer;
- (id)overlayLayers;
- (void)p_resetOverflowGlyphLayerIfNecessary;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (_Bool)mustDrawTilingLayerOnMainThread:(id)arg1;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (_Bool)isSelectable;
- (_Bool)p_shouldShowTextOverflowGlyph;
- (_Bool)shouldShowKnobs;
- (_Bool)selectionIsAppropriateToShowInvisiblePathHighlight;
- (_Bool)shouldShowSelectionHighlight;
- (id)hyperlinkRegions;
- (void)willBeRemoved;
- (_Bool)wantsToHandleTapsWhenLocked;
- (_Bool)wantsToHandleTapsOnContainingGroup;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool shouldBeginEditingOnSingleClick;
- (_Bool)shouldIgnoreEditMenuTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (int)dragTypeAtCanvasPoint:(struct CGPoint)arg1;
- (_Bool)shouldHitTestWithFill;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)updateChildrenFromLayout;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (id)newTextureRenderableForRange:(struct _NSRange)arg1 includeListLabel:(_Bool)arg2 isMagicMove:(_Bool)arg3 desiredContentRect:(struct CGRect)arg4 includeGroupedShadow:(_Bool)arg5 groupedShadowOnly:(_Bool)arg6;
- (void)p_getBoundsRect:(struct CGRect *)arg1 contentRect:(struct CGRect *)arg2 transform:(struct CGAffineTransform *)arg3 applyReflection:(_Bool *)arg4 applyShadow:(_Bool *)arg5 forRange:(struct _NSRange)arg6 includeListLabel:(_Bool)arg7 isMagicMove:(_Bool)arg8;
- (double)p_textureSetOpacity;
- (_Bool)p_hasContentForRange:(struct _NSRange)arg1 labelOnly:(_Bool)arg2;
- (void)p_drawRubyInContext:(struct CGContext *)arg1 forRange:(struct _NSRange)arg2;
- (struct CGRect)p_rectForRubyFields:(struct _NSRange)arg1;
@property(readonly, nonatomic) TSWPStorage *textStorageForTexture;
- (id)textureForContext:(id)arg1;
- (long long)stageIndexForStorageRange:(struct _NSRange)arg1;
- (id)stageChunks;
@property(readonly, nonatomic) _Bool isShapeInvisible;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPRuleOffset : NSObject <NSCopying>
{
    double _dX;
    double _dY;
}

+ (id)ruleOffset;
@property(readonly, nonatomic) double dY; // @synthesize dY=_dY;
@property(readonly, nonatomic) double dX; // @synthesize dX=_dX;
- (id)description;
- (struct CGSize)sizeValue;
- (struct CGPoint)pointValue;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct Point *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Point *)arg1 unarchiver:(id)arg2;
- (id)init;
- (id)initWithDX:(double)arg1 dY:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPTypesetterAttachmentMap : NSObject
{
    _Bool _layoutNeedsRevalidation;
    TSWPAttachment *_attachment;
    TSDLayout *_layout;
    struct __CTLine *_lineRef;
}

+ (id)mapWithAttachment:(id)arg1 layout:(id)arg2 pageNumber:(unsigned long long)arg3 pageCount:(unsigned long long)arg4 footnoteMarkProvider:(id)arg5 styleProvider:(id)arg6 colorOverride:(id)arg7 textScalePercent:(unsigned long long)arg8;
@property(readonly, nonatomic) struct __CTLine *lineRef; // @synthesize lineRef=_lineRef;
@property(nonatomic) _Bool layoutNeedsRevalidation; // @synthesize layoutNeedsRevalidation=_layoutNeedsRevalidation;
@property(retain, nonatomic) TSDLayout *layout; // @synthesize layout=_layout;
@property(nonatomic) TSWPAttachment *attachment; // @synthesize attachment=_attachment;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPDrawableAttachment : TSWPAttachment
{
    TSDDrawableInfo *_drawableInfo;
    int _hOffsetType;
    double _hOffset;
    int _vOffsetType;
    double _vOffset;
    double _cachedDescent;
    unsigned long long _cachedHash;
    _Bool _cachedWasPICT;
}

+ (void)setPositionerClass:(Class)arg1;
@property(nonatomic) double vOffset; // @synthesize vOffset=_vOffset;
@property(nonatomic) int vOffsetType; // @synthesize vOffsetType=_vOffsetType;
@property(nonatomic) double hOffset; // @synthesize hOffset=_hOffset;
@property(nonatomic) int hOffsetType; // @synthesize hOffsetType=_hOffsetType;
@property(readonly, retain, nonatomic) TSDDrawableInfo *drawable; // @synthesize drawable=_drawableInfo;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)infoChanged;
- (unsigned long long)enabledKnobMask;
- (_Bool)specifiesEnabledKnobMask;
- (_Bool)isSearchable;
- (Class)positionerClass;
- (_Bool)isAnchored;
- (_Bool)isPartitioned;
- (_Bool)isDrawable;
- (_Bool)isHTMLWrap;
- (void)setParentStorage:(id)arg1;
- (void)attachDrawable:(id)arg1;
- (id)detachDrawable;
- (void)invalidate;
@property(readonly, nonatomic) double descent;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)saveMessage:(struct DrawableAttachmentArchive *)arg1 toArchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadMessage:(const struct DrawableAttachmentArchive *)arg1 fromUnarchiver:(id)arg2;
- (id)subclassInitFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 drawable:(id)arg2;
- (id)init;
- (void)dealloc;
- (int)elementKind;
- (id)textStorages;
- (id)textRepresentationForCopy;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextualAttachment : TSWPAttachment
{
}

+ (id)newObjectForUnarchiver:(id)arg1;
- (id)stringEquivalentWithLayoutParent:(id)arg1;
- (void)setStringEquivalent:(id)arg1;
- (id)stringEquivalent;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (void)saveToArchive:(struct TextualAttachmentArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)shouldArchiveStringEquivalent;

@end

__attribute__((visibility("hidden")))
@interface TSWPPageNumberAttachment : TSWPNumberAttachment
{
}

- (_Bool)shouldArchiveStringEquivalent;
- (int)elementKind;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (void)saveToArchiver:(id)arg1;
- (_Bool)changesWithPageNumber;

@end

__attribute__((visibility("hidden")))
@interface TSWPSearchReference : NSObject <TSKSearchReference>
{
    TSWPStorage *_storage;
    TSWPSelection *_selection;
    struct _NSRange _smartFieldRange;
    _Bool _refersToSmartField;
    TSWPSmartField *_smartField;
    _Bool _autohideHighlight;
    _Bool _pulseHighlight;
    NSArray *_findHighlights;
    id <TSKAnnotation> annotation;
    struct CGPoint searchReferencePoint;
}

+ (id)searchReferenceWithStorage:(id)arg1 selection:(id)arg2;
+ (id)searchReferenceWithStorage:(id)arg1 range:(struct _NSRange)arg2;
@property(retain, nonatomic) id <TSKAnnotation> annotation; // @synthesize annotation;
@property(nonatomic) struct CGPoint searchReferencePoint; // @synthesize searchReferencePoint;
@property(nonatomic) _Bool pulseHighlight; // @synthesize pulseHighlight=_pulseHighlight;
@property(nonatomic) _Bool autohideHighlight; // @synthesize autohideHighlight=_autohideHighlight;
@property(retain, nonatomic) NSArray *findHighlights; // @synthesize findHighlights=_findHighlights;
@property(retain, nonatomic) TSWPSelection *selection; // @synthesize selection=_selection;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isSelectable;
- (_Bool)isReplaceable;
- (id)model;
- (id)commandForReplacingWithString:(id)arg1 options:(unsigned long long)arg2;
- (id)searchReferenceEnd;
- (id)searchReferenceStart;
- (id)searchReferenceForReplacingWithString:(id)arg1 options:(unsigned long long)arg2 authorCreatedWithCommand:(id *)arg3;
- (id)storage;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool isInsertionPoint;
@property(nonatomic) struct _NSRange range;
- (_Bool)isEqual:(id)arg1;
@property(retain, nonatomic) TSWPSmartField *smartField;
@property(nonatomic) _Bool refersToSmartField;
@property(nonatomic) struct _NSRange smartFieldRange;
- (void)pUpdateSelection;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 selection:(id)arg2;
- (id)initWithStorage:(id)arg1 range:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPStoragePasteRules : NSObject
{
    unsigned int _flags;
    unsigned int _actionFlags[4];
    unsigned int _lastFlag;
    struct _NSRange _srcLeadRange;
    struct _NSRange _srcTrailRange;
    _Bool _mapDestTrailCS;
    TSWPStorage *_destStorage;
    unsigned long long _sourceColumnStyleCount;
    unsigned long long _sourceSectionCount;
    struct {
        TSWPParagraphStyle *parStyle;
        TSPObject *section;
        TSWPColumnStyle *columnStyle;
        TSWPListStyle *listStyle;
        CDStruct_8a5ee6e3 parData;
        CDStruct_8a5ee6e3 parStartData;
        CDStruct_8a5ee6e3 parBidiData;
    } _paragraphs[4];
}

- (id).cxx_construct;
- (void)didPasteWithIOTransaction:(struct TSWPStorageTransaction *)arg1 atDestRange:(struct _NSRange)arg2;
- (void)willPasteStorage:(id)arg1 intoDestStorage:(id)arg2 atDestRange:(struct _NSRange)arg3;
- (void)setupFlagsForPastingSrcStorage:(id)arg1 intoDestStorage:(id)arg2 atDestRange:(struct _NSRange)arg3;
- (void)mapCharacterStyles:(int)arg1 toRange:(struct _NSRange)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)mapCharacterStyleProperties:(id)arg1 toRange:(struct _NSRange)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)applyParagraph:(int)arg1 toCharIndex:(unsigned long long)arg2 ioTransaction:(struct TSWPStorageTransaction *)arg3;
- (void)addActionFlag:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPInteriorCookie : NSObject
{
    TSWPColumn *_column;
    TSWPShapeLayout *_shapeLayout;
}

@property(nonatomic) TSWPShapeLayout *layout; // @synthesize layout=_shapeLayout;
@property(nonatomic) TSWPColumn *column; // @synthesize column=_column;

@end

__attribute__((visibility("hidden")))
@interface TSWPInteriorTextWrapController : NSObject <TSWPTextWrap>
{
}

+ (id)sharedInteriorTextWrapController;
- (double)nextUnobstructedSpanStartingAt:(struct CGRect)arg1 wrappableAttachments:(id)arg2 userInfo:(id)arg3;
- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(id)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)beginWrappingToColumn:(id)arg1 target:(id)arg2 hasWrapables:(_Bool *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextWrapper : NSObject
{
}

+ (unsigned int)p_wrappedSubrectsForRectOptimized:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;
+ (double)unobstructedSpanForPath:(id)arg1 startingSpan:(struct CGRect)arg2 columnBounds:(struct CGRect)arg3;
+ (unsigned int)p_wrappedSubrectsForRectGPC:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;
+ (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 polygon:(id)arg3 type:(int)arg4 skipHint:(double *)arg5;

@end

__attribute__((visibility("hidden")))
@interface TSWPStoragePasteboardProxy : TSPObject
{
    TSWPStorage *_storage;
    struct _NSRange _range;
    id <TSWPStyleProvider> _styleProvider;
}

@property(readonly, nonatomic) struct _NSRange storageRange; // @synthesize storageRange=_range;
- (id).cxx_construct;
- (void)saveToArchiver:(id)arg1;
- (id)initWithContext:(id)arg1 storage:(id)arg2 range:(struct _NSRange)arg3 styleProvider:(id)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPTableStorage : TSWPStorage
{
}

- (void)rebuildCellAttributes:(struct TSWPStorageTransaction *)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPSmartField : TSPObject <TSKDocumentObject, TSPCopying>
{
    TSWPStorage *_parentStorage;
    unsigned long long _lastTableIndex;
}

+ (id)defaultFieldStyleIdentifier;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (void)loadFromArchive:(const struct SmartFieldArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct SmartFieldArchive *)arg1 archiver:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)text;
- (_Bool)canCopy:(struct _NSRange)arg1;
- (_Bool)allowsPasteAsSmartField;
- (_Bool)allowsEditing;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) int styleAttributeArrayKind;
@property(readonly, nonatomic) int attributeArrayKind;
- (int)smartFieldKind;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPPlaceholderSmartField : TSWPSmartField
{
    _Bool _localizable;
    NSString *_scriptTag;
}

@property(copy, nonatomic) NSString *scriptTag; // @synthesize scriptTag=_scriptTag;
@property(nonatomic) _Bool isLocalizable; // @synthesize isLocalizable=_localizable;
- (void)saveToArchive:(struct PlaceholderSmartFieldArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct PlaceholderSmartFieldArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (int)smartFieldKind;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (const struct PlaceholderSmartFieldArchive *)placeholderSmartFieldArchiveFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageChildEnumerator : NSEnumerator
{
    TSWPStorage *_storage;
    unsigned int _index;
    NSArray *_charOffsetArray;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPHeaderRep : TSWPRep
{
    double _leftClip;
    double _rightClip;
}

@property(nonatomic) double rightClip; // @synthesize rightClip=_rightClip;
@property(nonatomic) double leftClip; // @synthesize leftClip=_leftClip;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPBeginMagnificationUserInfo : NSObject
{
    TSWPRep *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _offset;
    _Bool _animated;
}

@property(nonatomic) _Bool animated; // @synthesize animated=_animated;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGPoint magnificationPoint; // @synthesize magnificationPoint=_magnificationPoint;
@property(nonatomic) TSWPRep *target; // @synthesize target=_target;
- (id).cxx_construct;

@end

__attribute__((visibility("hidden")))
@interface TSWPSelectionHighlightLayer : CAShapeLayer
{
}

- (void)renderInContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextMagnifierTimeWeightedPoint : NSObject
{
    long long m_index;
    struct {
        struct CGPoint point;
        double time;
    } m_points[16];
}

- (id).cxx_construct;
- (double)distanceCoveredInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1;
- (double)distanceCoveredInInterval:(double)arg1;
- (_Bool)historyCovers:(double)arg1;
@property(readonly, nonatomic) struct CGPoint weightedPoint;
- (void)addPoint:(struct CGPoint)arg1;
- (void)clearHistory;

@end

__attribute__((visibility("hidden")))
@interface TSWPUserDefaults : NSObject
{
}

+ (void)registerUserDefaults:(_Bool)arg1;
+ (void)setSpellCheckingEnabled:(_Bool)arg1;
+ (void)setSuperscriptNumericalSuffixes:(_Bool)arg1;
+ (void)setAutomaticallyDetectLists:(_Bool)arg1;
+ (void)setAutomaticallyDetectLinks:(_Bool)arg1;
+ (void)setInvisiblesColor:(id)arg1;
+ (_Bool)spellCheckingEnabled;
+ (_Bool)superscriptNumericalSuffixes;
+ (_Bool)automaticallyDetectLists;
+ (_Bool)automaticallyDetectLinks;
+ (id)invisiblesColor;
+ (_Bool)p_UserDefaultSet:(id)arg1 force:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPText : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPListStyle *_listStyle;
    TSWPColumnStyle *_columnStyle;
    TSUColor *_textColorOverride;
    TSWPStorage *_storage;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    unsigned long long _pageNumber;
    unsigned long long _pageCount;
    int _flags;
    struct CGPoint _anchor;
    int _naturalAlignment;
    int _naturalDirection;
    TSWPTextParentInfo *_parentInfo;
    TSWPTextParentLayout *_parentLayout;
    NSMutableArray *_columns;
    NSObject<TSWPTextDelegate> *_delegate;
    TSWPParagraphStyle *_paragraphStyle;
}

@property(readonly, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property(nonatomic) NSObject<TSWPTextDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) TSUColor *textColorOverride; // @synthesize textColorOverride=_textColorOverride;
@property(readonly, nonatomic) int naturalDirection; // @synthesize naturalDirection=_naturalDirection;
@property(readonly, nonatomic) int naturalAlignment; // @synthesize naturalAlignment=_naturalAlignment;
@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
- (id).cxx_construct;
- (void)p_setParentLayoutMaximumFrameSizeForChildren;
- (_Bool)forceWesternLineBreaking;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (_Bool)caresAboutStorageChanges;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
- (id)currentInlineDrawableLayouts;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)validatedLayoutForInlineDrawable:(id)arg1;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (void)drawText:(id)arg1 inContext:(struct CGContext *)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6 viewScale:(double)arg7;
- (void)drawColumn:(id)arg1 inContext:(struct CGContext *)arg2 isFlipped:(_Bool)arg3 viewScale:(double)arg4;
- (void)drawColumn:(id)arg1 selection:(id)arg2 inContext:(struct CGContext *)arg3 isFlipped:(_Bool)arg4 viewScale:(double)arg5;
- (struct CGSize)measureText:(id)arg1;
- (id)layoutText:(id)arg1 kind:(int)arg2 minSize:(struct CGSize)arg3 maxSize:(struct CGSize)arg4 anchor:(struct CGPoint)arg5 flags:(int)arg6;
- (id)layoutText:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 pageNumber:(unsigned long long)arg5 pageCount:(unsigned long long)arg6 flags:(int)arg7;
- (id)layoutTextStorage:(id)arg1 minSize:(struct CGSize)arg2 maxSize:(struct CGSize)arg3 anchor:(struct CGPoint)arg4 flags:(int)arg5;
- (void)dealloc;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3;
- (id)initWithParagraphStyle:(id)arg1 columnStyle:(id)arg2 alignmentForNaturalAlignment:(int)arg3 naturalDirection:(int)arg4;
- (id)initWithParagraphStyle:(id)arg1 listStyle:(id)arg2 columnStyle:(id)arg3 alignmentForNaturalAlignment:(int)arg4 naturalDirection:(int)arg5;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageMeasurer : NSObject <TSWPLayoutTarget, TSWPLayoutOwner, TSWPColumnMetrics>
{
    TSWPStorage *_storage;
    NSMutableArray *_columns;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    unsigned int _flags;
    struct CGPoint _anchor;
}

@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
- (id).cxx_construct;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (id)textWrapper;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (_Bool)caresAboutStorageChanges;
@property(readonly, nonatomic) _Bool layoutIsValid;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) _Bool textIsVertical;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (void)addAttachmentLayout:(id)arg1;
- (id)currentInlineDrawableLayouts;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)validatedLayoutForInlineDrawable:(id)arg1;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) int naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (struct CGSize)measuredSizeWithFlags:(unsigned int)arg1;
- (id)pLayoutWithMinSize:(struct CGSize)arg1 maxSize:(struct CGSize)arg2 anchor:(struct CGPoint)arg3 flags:(unsigned int)arg4;
- (void)dealloc;
- (id)initWithStorage:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout;
@property(readonly, nonatomic) TSDCanvas *canvas;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextParentInfo : NSObject <TSDInfo>
{
}

- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (id)copyWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextParentLayout : TSDLayout
{
    struct CGSize _maximumFrameSizeForChildren;
}

@property(nonatomic) struct CGSize maximumFrameSizeForChildren; // @synthesize maximumFrameSizeForChildren=_maximumFrameSizeForChildren;
- (id).cxx_construct;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPCTTypesetterCache : NSObject
{
    struct map<unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, boost::shared_ptr<TSWPParagraphTypesetter>>>> _typesetters;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_limitCacheSize:(unsigned long long)arg1;
- (void)clearCache;
- (void)removeTypesetterForParagraphIndex:(unsigned long long)arg1;
- (void)addTypesetterForParagraphIdentifier:(unsigned long long)arg1 typesetter:(shared_ptr_6f812b7d)arg2;
- (shared_ptr_6f812b7d)cachedTypesetterForParagraphIdentifier:(unsigned long long)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPListLabelGeometry : NSObject
{
    double mScale;
    double mBaselineOffset;
    _Bool mScaleWithText;
}

+ (id)listLabelGeometry;
@property(nonatomic) _Bool scaleWithText; // @synthesize scaleWithText=mScaleWithText;
@property(nonatomic) double baselineOffset; // @synthesize baselineOffset=mBaselineOffset;
@property(nonatomic) double scale; // @synthesize scale=mScale;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithScale:(double)arg1 scaleWithText:(_Bool)arg2 baselineOffset:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeStyle : TSDShapeStyle <TSSPreset>
{
}

+ (void)saveShapeStyleLayoutPropertyMap:(id)arg1 toArchive:(struct ShapeStylePropertiesArchive *)arg2 archiver:(id)arg3;
+ (void)loadShapeStyleLayoutPropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct ShapeStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
+ (id)defaultValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)layoutProperties;
+ (id)properties;
+ (id)presetStyleDescriptor;
- (id)defaultParagraphStyle;
- (void)setDefaultParagraphStyle:(id)arg1;
- (id)boxedValueForProperty:(int)arg1 oldBoxedValue:(id)arg2 transformedByTransform:(struct CGAffineTransform)arg3;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ShapeStyleArchive *)arg1 archiver:(id)arg2;
- (const struct ShapeStyleArchive *)shapeStyleArchiveFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (SEL)mapThemePropertyMapSelector;
@property(readonly, nonatomic) NSString *presetKind;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextStylePreset : TSPObject <TSSPreset>
{
    NSString *_presetIdentifier;
    TSWPParagraphStyle *_paragraphStyle;
    TSWPListStyle *_listStyle;
}

@property(retain, nonatomic) TSWPListStyle *listStyle; // @synthesize listStyle=_listStyle;
@property(retain, nonatomic) TSWPParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property(copy, nonatomic) NSString *presetIdentifier; // @synthesize presetIdentifier=_presetIdentifier;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TextStylePresetArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct TextStylePresetArchive *)arg1 unarchiver:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1 presetIdentifier:(id)arg2 paragraphStyle:(id)arg3 listStyle:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPHyperlinkField : TSWPSmartField
{
    NSURL *_url;
}

+ (id)newURLFromURLReference:(id)arg1;
+ (id)urlReferenceFromURL:(id)arg1;
+ (id)defaultMailURL;
+ (id)defaultFileURL;
+ (id)urlWithEmailAddress:(id)arg1 subject:(id)arg2;
+ (id)defaultWebURL;
+ (id)defaultURLFromDefaultsKey:(id)arg1 defaultValue:(id)arg2;
+ (_Bool)schemeIsValidForURLReference:(id)arg1;
+ (_Bool)schemeIsValidForURL:(id)arg1;
+ (int)schemeFromURL:(id)arg1;
+ (id)defaultFieldStyleIdentifier;
- (_Bool)isEqual:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct HyperlinkFieldArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct HyperlinkFieldArchive *)arg1 archiver:(id)arg2;
- (id)fullPath;
- (id)filePath;
- (_Bool)hasDisplayText;
- (_Bool)isFileURL;
- (id)urlPrefix;
- (int)scheme;
- (void)setURLReference:(id)arg1;
- (id)urlReference;
@property(retain, nonatomic, setter=setURL:) NSURL *url;
- (_Bool)allowsEditing;
- (int)smartFieldKind;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 url:(id)arg2;
- (void)dealloc;
@property(readonly, nonatomic) NSString *displayText;

@end

__attribute__((visibility("hidden")))
@interface TSWPCharacterStyleValidateFontResult : NSObject
{
    NSString *_mappedName;
    int _bold;
    int _italic;
    TSKWarning *_warning;
}

@property(nonatomic) int italic; // @synthesize italic=_italic;
@property(nonatomic) int bold; // @synthesize bold=_bold;
@property(retain, nonatomic) TSKWarning *warning; // @synthesize warning=_warning;
@property(retain, nonatomic) NSString *mappedName; // @synthesize mappedName=_mappedName;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPPageCountAttachment : TSWPNumberAttachment
{
}

- (_Bool)shouldArchiveStringEquivalent;
- (_Bool)changesWithPageCount;
- (int)elementKind;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (void)saveToArchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageBroadcaster : NSObject
{
    struct set<id<TSWPStorageObserver>, std::__1::less<id<TSWPStorageObserver>>, std::__1::allocator<id<TSWPStorageObserver>>> _observers;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)broadcastStorage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)removeAllObservers;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextHostLayout : TSDDrawableLayout <TSWPTextEditingHostLayout>
{
    TSWPShapeInfo *_editingShapeInfo;
    TSWPShapeLayout *_editingShapeLayout;
}

@property(retain, nonatomic) TSWPShapeInfo *editingShape; // @synthesize editingShape=_editingShapeInfo;
@property(readonly, nonatomic) TSWPShapeLayout *editingShapeLayout; // @synthesize editingShapeLayout=_editingShapeLayout;
- (void)updateChildrenFromInfo;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextHostRep : TSDRep <TSDContainerRep, TSWPTextEditingHostRep, TSKHighlightArrayControllerProtocol>
{
    TSWPShapeRep *_editingRep;
    TSKHighlightArrayController *_pulseArrayController;
    TSKHighlightArrayController *_highlightArrayController;
    NSObject<TSKSearchReference> *_activeSearchReference;
    NSArray *_searchReferences;
}

@property(retain, nonatomic) NSArray *searchReferences; // @synthesize searchReferences=_searchReferences;
@property(retain, nonatomic) NSObject<TSKSearchReference> *activeSearchReference; // @synthesize activeSearchReference=_activeSearchReference;
@property(retain, nonatomic) TSKHighlightArrayController *highlightArrayController; // @synthesize highlightArrayController=_highlightArrayController;
@property(retain, nonatomic) TSKHighlightArrayController *pulseArrayController; // @synthesize pulseArrayController=_pulseArrayController;
- (void)drawTextBackground:(struct CGContext *)arg1 insetRect:(struct CGRect)arg2 pulsating:(_Bool)arg3;
- (id)overlayLayers;
@property(readonly, nonatomic) _Bool useFindOverlayers;
- (void)updateHighlights;
- (id)lineSearchReferencesForSearchReference:(id)arg1;
- (void)updateFindAnimationWithAnimatingPulse:(_Bool)arg1;
- (void)p_setSearchReferencesToHighlight:(id)arg1;
- (void)p_findUIStateChangedNotification:(id)arg1;
- (void)p_setActiveSearchReference:(id)arg1;
- (void)p_activeFindHighlightChangedNotification:(id)arg1;
- (_Bool)doesRepContainSearchReference:(id)arg1;
- (void)pulseAnimationDidStop:(id)arg1;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath *)arg2 shouldPulsate:(_Bool)arg3;
- (struct CGPath *)newPathForSearchReference:(id)arg1;
- (void)setPulseControllerActive:(_Bool)arg1 autohide:(_Bool)arg2;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)selectChildRep:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)childReps;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (id)hitRep:(struct CGPoint)arg1;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (void)updateChildrenFromLayout;
- (void)willBeRemoved;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextEditing : NSObject
{
    TSWPParagraphStyle *_paragraphStyle;
    TSWPShapeStyle *_shapeStyle;
    TSDInteractiveCanvasController *_icc;
    TSDLayout<TSWPTextEditingHostLayout> *_hostLayout;
    _Bool _isEditing;
    TSWPStorage *_storage;
    TSWPEditingController *_editor;
}

@property(readonly, nonatomic) _Bool isEditing; // @synthesize isEditing=_isEditing;
@property(readonly, nonatomic) TSWPEditingController *editor; // @synthesize editor=_editor;
@property(retain, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (void)p_editingDidEndNotification:(id)arg1;
- (void)p_handleEndEditing;
- (Class)shapeInfoClass;
- (void)editingDidEnd;
- (void)endEditing;
- (void)beginEditingWithViewController:(id)arg1 geometry:(id)arg2;
- (void)beginEditingInRect:(struct CGRect)arg1 interactiveCanvasController:(id)arg2 layout:(id)arg3;
- (void)beginEditingInRect:(struct CGRect)arg1 interactiveCanvasController:(id)arg2 layout:(id)arg3 delegate:(id)arg4;
- (void)beginEditingWithViewController:(id)arg1 layout:(id)arg2 geometry:(id)arg3 delegate:(id)arg4;
@property(readonly, nonatomic) TSPObjectContext *objectContext;
- (void)dealloc;
- (id)initWithShapeStyle:(id)arg1 defaultStorage:(id)arg2;
- (id)initWithParagraphStyle:(id)arg1 shapeStyle:(id)arg2 defaultText:(id)arg3;
- (id)initWithParagraphStyle:(id)arg1 shapeStyle:(id)arg2 defaultText:(id)arg3 stylesheet:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextEditingShapeInfo : TSWPShapeInfo
{
    id <TSWPTextEditingDelegate> _delegate;
}

@property(nonatomic) id <TSWPTextEditingDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)displaysInstructionalText;
- (Class)repClass;
- (Class)layoutClass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextEditingShapeRep : TSWPShapeRep
{
}

- (_Bool)shouldShowInvisiblePathHighlight;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextEditingShapeLayout : TSWPShapeLayout
{
}

- (id)layoutInfoGeometry;

@end

__attribute__((visibility("hidden")))
@interface TSWPDataDetectors : NSObject
{
}

+ (id)scanString:(id)arg1 scanRanges:(id)arg2;
+ (id)calculateScanRanges:(id)arg1 changedRange:(struct _NSRange)arg2;
+ (void)registerDataDetectorClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPFilenameSmartField : TSWPPlaceholderSmartField
{
    unsigned int _displayFlags;
}

@property(nonatomic) unsigned int displayFlags; // @synthesize displayFlags=_displayFlags;
- (int)smartFieldKind;
- (_Bool)allowsPasteAsSmartField;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (const struct PlaceholderSmartFieldArchive *)placeholderSmartFieldArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPDateTimeSmartField : TSWPSmartField
{
    NSString *_format;
    NSString *_localeID;
    long long _dateStyle;
    long long _timeStyle;
    int _updatePlan;
    _Bool _needsUpdate;
    NSDate *_date;
}

+ (id)dateStringFromTime:(double)arg1 withFormat:(id)arg2 localeIdentifier:(id)arg3 dateStyle:(long long)arg4 timeStyle:(long long)arg5;
+ (id)newDateFormatWithLocaleIdentifier:(id)arg1 dateStyle:(long long)arg2 timeStyle:(long long)arg3;
@property(copy, nonatomic) NSDate *date; // @synthesize date=_date;
@property(nonatomic) _Bool needsUpdate; // @synthesize needsUpdate=_needsUpdate;
@property(nonatomic) int updatePlan; // @synthesize updatePlan=_updatePlan;
@property(nonatomic) long long timeStyle; // @synthesize timeStyle=_timeStyle;
@property(nonatomic) long long dateStyle; // @synthesize dateStyle=_dateStyle;
@property(copy, nonatomic) NSString *localeIdentifier; // @synthesize localeIdentifier=_localeID;
@property(copy, nonatomic) NSString *format; // @synthesize format=_format;
- (int)smartFieldKind;
- (void)setFormat:(id)arg1 localeIdentifier:(id)arg2 dateStyle:(long long)arg3 timeStyle:(long long)arg4;
- (void)resetLocale;
- (void)updateInParentStorageWithDolcContext:(id)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (id)generateInlineText;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithLocaleIdentifier:(id)arg1 dateStyle:(long long)arg2 timeStyle:(long long)arg3 autoUpdate:(_Bool)arg4 context:(id)arg5;
- (id)initWithLocaleIdentifier:(id)arg1 dateStyle:(long long)arg2 timeStyle:(long long)arg3 format:(id)arg4 autoUpdate:(_Bool)arg5 context:(id)arg6;
- (id)initWithLocaleIdentifier:(id)arg1 dateStyle:(long long)arg2 timeStyle:(long long)arg3 format:(id)arg4 date:(id)arg5 updatePlan:(int)arg6 context:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface TSWPHeaderLayout : TSWPLayout
{
}

- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (void)addAttachmentLayout:(id)arg1;
- (id)parentLayoutForInlineAttachments;

@end

__attribute__((visibility("hidden")))
@interface TSWPMergeSmartField : TSWPPlaceholderSmartField
{
    NSString *_property;
    NSString *_label;
    NSString *_key;
    int _category;
    _Bool _requiresFollowingWhitespace;
    NSString *_whitespace;
    NSString *_guid;
    NSString *_tableField;
}

@property(copy, nonatomic) NSString *tableField; // @synthesize tableField=_tableField;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(copy, nonatomic) NSString *whitespace; // @synthesize whitespace=_whitespace;
@property(nonatomic) _Bool requiresFollowingWhitespace; // @synthesize requiresFollowingWhitespace=_requiresFollowingWhitespace;
@property(nonatomic) int category; // @synthesize category=_category;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) NSString *property; // @synthesize property=_property;
- (id)scriptTag;
- (int)smartFieldKind;
- (_Bool)allowsPasteAsSmartField;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (const struct PlaceholderSmartFieldArchive *)placeholderSmartFieldArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPUnsupportedHyperlinkField : TSWPPlaceholderSmartField
{
    NSString *_href;
}

@property(copy, nonatomic) NSString *href; // @synthesize href=_href;
- (int)smartFieldKind;
- (_Bool)allowsPasteAsSmartField;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (const struct PlaceholderSmartFieldArchive *)placeholderSmartFieldArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPFootnoteReferenceAttachment : TSWPTextualAttachment
{
    TSWPStorage *_containedStorage;
    NSString *_customMarkString;
}

@property(retain, nonatomic) TSWPStorage *containedStorage; // @synthesize containedStorage=_containedStorage;
@property(retain, nonatomic) NSString *customMarkString; // @synthesize customMarkString=_customMarkString;
- (void)checkDebug;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (_Bool)isSearchable;
- (id)stringEquivalent;
- (unsigned long long)findCharIndex;
- (void)setParentStorage:(id)arg1;
- (void)setContainedStorageParentInfoToStorage:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (int)elementKind;
- (void)applyMark;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 wpStorage:(id)arg2;
- (_Bool)shouldArchiveStringEquivalent;
- (void)saveToArchiver:(id)arg1;
- (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPFootnoteMarkAttachment : TSWPTextualAttachment
{
}

- (_Bool)shouldStyleBeExtended;
- (id)copyWithContext:(id)arg1;
- (int)elementKind;
- (id)stringEquivalent;
- (void)saveToArchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPCitationRecord : TSPObject
{
    _Bool _hideAuthorNames;
    _Bool _hideYear;
    _Bool _shouldRemove;
    _Bool _recordXMLApplied;
    NSString *_endNoteXML;
    NSString *_pageRange;
    NSString *_prefix;
    NSString *_suffix;
    NSString *_authorsString;
    NSString *_title;
    NSString *_year;
    NSString *_type;
}

@property(nonatomic) _Bool recordXMLApplied; // @synthesize recordXMLApplied=_recordXMLApplied;
@property(nonatomic) _Bool shouldRemove; // @synthesize shouldRemove=_shouldRemove;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *year; // @synthesize year=_year;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *authorsString; // @synthesize authorsString=_authorsString;
@property(copy, nonatomic) NSString *suffix; // @synthesize suffix=_suffix;
@property(copy, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
@property(copy, nonatomic) NSString *pageRange; // @synthesize pageRange=_pageRange;
@property(nonatomic) _Bool hideYear; // @synthesize hideYear=_hideYear;
@property(nonatomic) _Bool hideAuthorNames; // @synthesize hideAuthorNames=_hideAuthorNames;
@property(copy, nonatomic) NSString *endNoteXML; // @synthesize endNoteXML=_endNoteXML;
- (void)p_applyEndNoteXML;
- (void)p_copyPropertiesToObject:(id)arg1;
- (id)description;
- (id)authorYearString;
- (_Bool)isRecordEqual:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPCitationSmartField : TSWPSmartField <TSWPCitationRecordHosting>
{
    _Bool _isLocalizable;
    NSArray *_citationRecords;
}

+ (_Bool)isValidCitationField:(id)arg1;
@property(nonatomic) _Bool isLocalizable; // @synthesize isLocalizable=_isLocalizable;
@property(copy, nonatomic) NSArray *citationRecords; // @synthesize citationRecords=_citationRecords;
- (id)bibliographySmartField;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (int)smartFieldKind;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPBookmarkField : TSWPSmartField
{
    NSString *_name;
    _Bool _forRange;
    _Bool _hidden;
}

@property(nonatomic) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) _Bool forRange; // @synthesize forRange=_forRange;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (_Bool)allowsEditing;
- (int)styleAttributeArrayKind;
- (int)attributeArrayKind;
- (int)smartFieldKind;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageIterationEvent : NSObject
{
    NSString *_providerIdentifier;
    int _type;
    NSObject *_object;
    TSWPStorage *_storage;
    struct _NSRange _range;
}

+ (id)characterEventWithRange:(struct _NSRange)arg1;
+ (id)eventWithType:(int)arg1 providerIdentifier:(id)arg2 range:(struct _NSRange)arg3 object:(id)arg4;
@property(nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
@property(readonly, nonatomic) NSObject *object; // @synthesize object=_object;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_providerIdentifier;
- (id).cxx_construct;
- (id)description;
- (_Bool)isRangeEnd;
- (void)dealloc;
- (id)initWithCharacterRange:(struct _NSRange)arg1;
- (id)initWithType:(int)arg1 providerIdentifier:(id)arg2 range:(struct _NSRange)arg3 object:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageRangeProvider : NSObject
{
    NSString *_identifier;
    struct _NSRange _range;
    NSObject *_object;
}

@property(readonly, nonatomic) NSObject *object; // @synthesize object=_object;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id).cxx_construct;
- (void)nextRange;
- (unsigned long long)rangeEnd;
- (void)setRangeStart:(unsigned long long)arg1;
- (unsigned long long)rangeLength;
- (unsigned long long)rangeStart;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageAttributeRangeProvider : TSWPStorageRangeProvider
{
    struct TSWPAttributeEnumerator *_enumerator;
}

- (void)nextRange;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 kind:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageIterator : NSObject
{
    TSWPStorage *_storage;
    unsigned long long _charIndex;
    unsigned long long _startCharIndex;
    NSMutableArray *_rangeProviders;
    NSMutableArray *_locationProviders;
    NSMutableArray *_pendingEvents;
    _Bool _sendEventsForNilObjects;
    _Bool _lastEventWasMarker;
    NSCharacterSet *_markers;
}

@property(retain, nonatomic) NSCharacterSet *markers; // @synthesize markers=_markers;
- (id)description;
- (id)nextEvent;
- (void)p_forceRangeEndForProvider:(id)arg1 providerIndex:(unsigned long long)arg2 atCharIndex:(unsigned long long)arg3;
- (void)p_emitEventForMarkerCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2;
- (void)p_emitEventWithType:(int)arg1 provider:(id)arg2 range:(struct _NSRange)arg3 object:(id)arg4;
- (void)p_emitPendingCharactersAndEvent:(id)arg1;
- (void)addLocationProvider:(id)arg1;
- (void)addAttributeRangeProvider:(int)arg1;
- (void)addRangeProvider:(id)arg1;
- (void)dealloc;
- (id)initWithStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPBibliographySmartField : TSWPSmartField <TSWPCitationRecordHosting>
{
    _Bool _isLocalizable;
    NSArray *_citationRecords;
}

+ (_Bool)isValidBibliographyField:(id)arg1;
@property(nonatomic) _Bool isLocalizable; // @synthesize isLocalizable=_isLocalizable;
@property(copy, nonatomic) NSArray *citationRecords; // @synthesize citationRecords=_citationRecords;
- (_Bool)allowsPasteAsSmartField;
- (id)citationSmartFields;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (int)smartFieldKind;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCSmartField : TSWPPlaceholderSmartField
{
}

- (int)smartFieldKind;
- (const struct PlaceholderSmartFieldArchive *)placeholderSmartFieldArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCPageNumberAttachment : TSWPTextualAttachment
{
    NSString *_pageNumber;
    NSString *_bookmarkName;
}

@property(copy, nonatomic) NSString *bookmarkName; // @synthesize bookmarkName=_bookmarkName;
@property(copy, nonatomic) NSString *pageNumber; // @synthesize pageNumber=_pageNumber;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (id)stringEquivalent;
- (int)elementKind;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageStyler : NSObject
{
    TSWPStorage *_storage;
    int _attributeArrayKind;
}

@property(readonly, retain, nonatomic) TSWPStorage *storage; // @synthesize storage=_storage;
- (void)performStylingInRange:(struct _NSRange)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)applyStyle:(id)arg1 range:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)replacementStyleForStyle:(id)arg1 range:(struct _NSRange)arg2;
- (id)initWithStorage:(id)arg1 attributeArrayKind:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPCharacterStyler : TSWPStorageStyler
{
}

- (void)performStylingInRange:(struct _NSRange)arg1 undoTransaction:(struct TSWPStorageTransaction *)arg2;
- (void)applyStyle:(id)arg1 range:(struct _NSRange)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3;
- (id)initWithStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPSectionPlaceholder : TSPObject <TSKDocumentObject, TSWPSection>
{
    TPDocumentRoot *_documentRoot;
    TSWPStorage *_parentStorage;
}

- (id)description;
- (void)i_ensureHeaderFooterStoragesExistWithStylesheet:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)setParentStorage:(id)arg1;
- (id)parentStorage;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPLoadableFonts : NSObject
{
    struct TSWPLoadableFontInfo *_loadableFonts;
    unsigned int _loadableFontCount;
    _Bool _allFontsLoaded;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedInstance;
+ (id)_singletonAlloc;
- (void)p_loadFontWithInfo:(struct TSWPLoadableFontInfo *)arg1;
- (void)loadFontWithName:(id)arg1;
- (void)loadAll;
- (void)backgroundLoadAll;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSWPStorageStyleProvider : NSObject <TSWPStyleProvider>
{
}

+ (id)styleProviderForStorage:(id)arg1;
- (id)paragraphStyleAtParIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsBoldItalicUnderlineShortcuts;

@end

__attribute__((visibility("hidden")))
@interface TSWPFontCache : NSObject
{
    TSULRUCache *_fontCache;
    NSArray *_familyNames;
    NSMutableDictionary *_familyDisplayNames;
    NSArray *_familyFonts;
    NSMutableArray *_cachedAvailableMembers;
    NSString *_cachedMembersFamilyName;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedCache;
+ (id)_singletonAlloc;
- (void)p_FontWasDownloaded:(id)arg1;
- (id)availableMembersOfFontFamily:(id)arg1;
- (id)displayNameForFontFamily:(id)arg1;
- (id)sortedFontFamilyEntriesForStylesheet:(id)arg1;
- (id)sortedFontFamilies;
- (id)p_excludedFamilyNames;
- (struct __CTFont *)createFontWithName:(id)arg1 size:(double)arg2;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSWPFontCacheKey : NSObject
{
    NSString *_fontName;
    double _fontSize;
    unsigned long long _hash;
}

+ (id)cacheKeyWithFontName:(id)arg1 size:(double)arg2;
@property(readonly, nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(readonly, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithFontName:(id)arg1 size:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPFontCacheValue : NSObject
{
    struct __CTFont *_ctFont;
}

+ (id)cacheValueWithCTFont:(struct __CTFont *)arg1;
@property(readonly, nonatomic) struct __CTFont *ctFont; // @synthesize ctFont=_ctFont;
- (void)dealloc;
- (id)initWithCTFont:(struct __CTFont *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPHyperlinkAction : TSWPTwoPartAction
{
    TSWPHyperlinkField *_hyperlinkField;
    TSDRep<TSWPHyperlinkHostRepProtocol> *_hyperlinkRep;
}

+ (id)hyperlinkActionWithHyperlink:(id)arg1 inRep:(id)arg2 action:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithHyperlink:(id)arg1 inRep:(id)arg2 action:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPInteractiveCanvasController : TSDInteractiveCanvasController
{
    _Bool _isTearingDown;
    _Bool _layoutBordersVisible;
    _Bool _isEditingText;
}

+ (struct CGColor *)layoutBorderColor;
@property(readonly, nonatomic) _Bool isEditingText; // @synthesize isEditingText=_isEditingText;
@property(readonly, nonatomic) _Bool layoutBordersVisible; // @synthesize layoutBordersVisible=_layoutBordersVisible;
@property(readonly, nonatomic) _Bool isTearingDown; // @synthesize isTearingDown=_isTearingDown;
- (id)infosToHideForCanvas:(id)arg1;
- (void)setShowsComments:(_Bool)arg1;
- (_Bool)showsComments;
- (_Bool)cellCommentsAllowedForTableInfo:(id)arg1;
- (void)getColumnLeftPosition:(double *)arg1 columnRightPosition:(double *)arg2;
- (void)getColumnLeftPosition:(double *)arg1 columnRightPosition:(double *)arg2 singleColumnAtSelectionPoint:(_Bool)arg3;
- (void)hideDisplayedAnnotation;
- (void)showAnnotation:(id)arg1 model:(id)arg2 selection:(id)arg3 beginEditing:(_Bool)arg4 pinned:(_Bool)arg5 shouldSetSelection:(_Bool)arg6;
- (id)storageForAnnotationModel:(id)arg1 selection:(id)arg2;
- (_Bool)hyperlinkPopoverIsShown;
- (void)closeHyperlinkPopover;
- (void)showHyperlinkInfoForField:(id)arg1 inRep:(id)arg2 openInEditMode:(_Bool)arg3;
- (id)closestRepToPoint:(struct CGPoint)arg1 forStorage:(id)arg2;
- (id)p_repsForStorage:(id)arg1;
- (void)p_recursivelyAddRep:(id)arg1 forStorage:(id)arg2 toSet:(id)arg3;
- (void)willEndEditingText;
- (void)didBeginEditingText;
@property(readonly, nonatomic) _Bool shouldRespondToTextHyperlinks;
@property(readonly, nonatomic) _Bool handleHyperlinksWithTextGRs;
- (void)withLayoutForModel:(id)arg1 withSelection:(id)arg2 performBlock:(CDUnknownBlockType)arg3;
- (struct CGRect)scrollFocusRectForModel:(id)arg1 withSelection:(id)arg2;
- (void)teardown;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPRubyField : TSWPSmartField
{
    NSString *_rubyText;
}

@property(copy, nonatomic) NSString *rubyText; // @synthesize rubyText=_rubyText;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct RubyFieldArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct RubyFieldArchive *)arg1 archiver:(id)arg2;
- (_Bool)canCopy:(struct _NSRange)arg1;
- (_Bool)allowsEditing;
- (int)styleAttributeArrayKind;
- (int)attributeArrayKind;
- (int)smartFieldKind;
- (id)text;
@property(readonly, nonatomic) int baseTextScript;
@property(readonly, nonatomic) NSString *baseText;
- (void)dealloc;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 rubyText:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPRangeMap : NSObject
{
    struct _NSRange _subRange;
    struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> _unmappedIndexes;
    struct vector<_TSWPCharIndexAndAffinity, std::__1::allocator<_TSWPCharIndexAndAffinity>> _mappedIndexes;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)adjustByDelta:(long long)arg1;
- (struct _NSRange)unmappedCharRange:(struct _NSRange)arg1;
- (struct _NSRange)mappedCharRange:(struct _NSRange)arg1;
- (unsigned long long)p_extendRightMappedIndex:(unsigned long long)arg1;
- (unsigned long long)p_extendLeftMappedIndex:(unsigned long long)arg1;
- (unsigned long long)unmappedCharIndex:(unsigned long long)arg1;
- (unsigned long long)mappedCharIndex:(unsigned long long)arg1;
- (id)initWithSubRange:(struct _NSRange)arg1 unmappedIndexes:(const vector_88016b54 *)arg2 affinity:(int)arg3;
- (id)initWithSubRange:(struct _NSRange)arg1 unmappedIndexes:(const vector_88016b54 *)arg2 isBackwardAffinities:(const vector_277e069e *)arg3;
- (id)initWithSubRange:(struct _NSRange)arg1 unmappedPairIndexes:(const vector_88016b54 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPFontHeightCache : NSObject
{
    struct list<unsigned long, std::__1::allocator<unsigned long>> _fontHashList;
    struct map<unsigned long, TSWPFontHeightCacheEntry, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TSWPFontHeightCacheEntry>>> _fontHashToInfoMap;
    unsigned int _cacheSize;
    unsigned int _maxCacheSize;
    struct _opaque_pthread_rwlock_t _lock;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedCache;
+ (id)_singletonAlloc;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_addEntryForFont:(struct __CTFont *)arg1 heightInfo:(const CDStruct_a6fa95e6 *)arg2;
- (_Bool)p_findEntryForFont:(struct __CTFont *)arg1 outHeightInfo:(CDStruct_a6fa95e6 *)arg2 collision:(_Bool *)arg3;
- (CDStruct_a6fa95e6)fontHeightInfoForFont:(struct __CTFont *)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSWPEndNoteConnection : NSObject
{
    NSArray *_defaultFormats;
    unsigned int _failedPluginLoadingAttempts;
    _Bool _checkedEndNoteAvailability;
    CDStruct_22e7ec3e _availability;
    NSString *_format;
}

+ (void)applyEndNoteXml:(id)arg1 toCitationRecord:(id)arg2;
+ (id)currentPluginDownloadURL;
+ (id)sharedEndNoteConnection;
@property(retain) NSString *format; // @synthesize format=_format;
- (id).cxx_construct;
- (id)p_getProxyObject;
- (_Bool)getBibliographyString:(id *)arg1 andCitationStrings:(id *)arg2 forCitationInfos:(id)arg3 usingPosition:(unsigned int)arg4;
- (_Bool)getBibliographyString:(id *)arg1 andCitationStrings:(id *)arg2 forCitationRecords:(id)arg3 usingPosition:(unsigned int)arg4;
- (_Bool)getFormattedTextForCitation:(id)arg1 usingPosition:(unsigned int)arg2 outCitation:(id *)arg3 outBiblioEntry:(id *)arg4;
- (id)infosForAdjacentCitations:(id)arg1 isFootnote:(_Bool)arg2;
- (id)infoForCitation:(id)arg1 isFootnote:(_Bool)arg2;
- (id)infoForCitation:(id)arg1;
- (id)p_infoForCitation:(id)arg1 isAdjacent:(_Bool)arg2 isFootnote:(_Bool)arg3;
- (_Bool)anyOpenNonEmptyLibraries;
- (_Bool)anyOpenLibraries;
- (id)defaultStyle;
- (id)favoriteStyles;
- (id)outputStyles;
- (id)recordsForSearchString:(id)arg1 forContext:(id)arg2;
- (_Bool)launchEndNote:(_Bool)arg1;
- (_Bool)isEndNoteAvailable;
- (CDStruct_22e7ec3e)availability;
- (id)availableFormats;
- (id)formatForTag:(long long)arg1;
- (long long)tagForFormat:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPRubyTextSource : NSObject <TSWPTextSource>
{
    vector_88016b54 _spaceCharIndexes;
    vector_88016b54 _bidiCharIndexes;
    vector_277e069e _bidiDirectionMarkIsRTLVector;
    id <TSWPTextSource> _source;
    TSWPRangeMap *_rangeMap;
    unsigned long long _length;
    unsigned long long _storageLength;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)storageLength;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (id)string;
- (unsigned long long)length;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (void)dealloc;
- (unsigned int)composedCharacterAtCharIndex:(unsigned long long)arg1 isSurrogatePair:(_Bool *)arg2;
- (id)initWithSource:(id)arg1 subRange:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTranscriber : NSObject
{
    NSString *_displayName;
    NSString *_identifier;
    NSString *_transformIdentifier;
    NSLocale *_romanizationLocale;
}

+ (id)transcriberWithIdentifier:(id)arg1 displayName:(id)arg2 romanizationLocaleID:(id)arg3 transformIdentifier:(id)arg4;
@property(readonly) NSLocale *romanizationLocale; // @synthesize romanizationLocale=_romanizationLocale;
- (id)transcribeText:(id)arg1 withLocale:(id)arg2;
- (id)transcribeText:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 displayName:(id)arg2 romanizationLocaleID:(id)arg3 transformIdentifier:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TSWPTwoPartAction : NSObject
{
    CDUnknownBlockType _startAction;
    CDUnknownBlockType _cancelAction;
    CDUnknownBlockType _finishAction;
    _Bool _performImmediately;
}

+ (id)actionWithStartAction:(CDUnknownBlockType)arg1 cancelAction:(CDUnknownBlockType)arg2 finishAction:(CDUnknownBlockType)arg3;
@property _Bool performImmediately; // @synthesize performImmediately=_performImmediately;
- (void)cancel;
- (void)performFinishAction;
- (void)performStartAction;
- (void)dealloc;
- (id)initWithStartAction:(CDUnknownBlockType)arg1 cancelAction:(CDUnknownBlockType)arg2 finishAction:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPPhonetics : NSObject
{
    NSDictionary *_transcribers;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDictionary;
+ (id)_singletonAlloc;
- (id)transcriberWithIdentifier:(id)arg1;
- (id)pronunciationForBaseText:(id)arg1 locale:(id)arg2 inputLanguage:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextKnob : TSDKnob
{
}

- (int)dragType;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextStatistics : NSObject <NSCopying>
{
    _Bool _isAccurate;
    unsigned long long _wordCount;
    unsigned long long _charactersNoWhiteSpace;
    unsigned long long _charactersWithWhiteSpace;
    unsigned long long _paragraphCount;
}

@property(nonatomic) _Bool isAccurate; // @synthesize isAccurate=_isAccurate;
@property(nonatomic) unsigned long long paragraphCount; // @synthesize paragraphCount=_paragraphCount;
@property(nonatomic) unsigned long long charactersWithWhiteSpace; // @synthesize charactersWithWhiteSpace=_charactersWithWhiteSpace;
@property(nonatomic) unsigned long long charactersNoWhiteSpace; // @synthesize charactersNoWhiteSpace=_charactersNoWhiteSpace;
@property(nonatomic) unsigned long long wordCount; // @synthesize wordCount=_wordCount;
- (_Bool)isEqual:(id)arg1;
- (void)removeTextStatistics:(id)arg1;
- (void)addTextStatistics:(id)arg1;
- (void)setTextStatistics:(id)arg1;
- (void)resetStatistics;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextStatisticsTracker : NSObject <TSWPStorageObserver, TSWPTextStatisticsTracking>
{
    id <TSWPStatisticsControlling> _statisticsController;
    TSWPStorage *_storage;
    TSWPTextStatistics *_storageStatistics;
    NSMutableArray *_paragraphStatistics;
    struct _NSRange _modifiedRange;
    long long _modifiedDelta;
}

@property(readonly, nonatomic) TSWPTextStatistics *statistics; // @synthesize statistics=_storageStatistics;
- (void)p_applyTextRangeOffset:(long long)arg1 startingAtParagraphIndex:(unsigned long long)arg2;
- (void)p_invalidateTrackersInRange:(struct _NSRange)arg1;
- (void)p_removeTrackersInRange:(struct _NSRange)arg1;
- (void)p_insertTrackers:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)p_indexOfRangedStatisticForLocation:(unsigned long long)arg1;
- (void)p_processStorageChanges;
- (void)p_updateStatisticsInRangedStatistic:(id)arg1;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)tearDown;
- (void)incrementallyUpdateStatisticsUntil:(id)arg1;
- (void)dealloc;
- (id)initWithController:(id)arg1 andObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPRangedStatistic : NSObject
{
    struct _NSRange range;
    TSWPTextStatistics *statistics;
}

- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPChange : TSPObject <TSKDocumentObject, TSPCopying>
{
    TSWPStorage *_parentStorage;
    int _kind;
    TSWPChangeSession *_session;
    NSDate *_date;
    _Bool _hidden;
}

@property(nonatomic) TSWPStorage *parentStorage; // @synthesize parentStorage=_parentStorage;
- (_Bool)isFromChangeSession:(id)arg1;
- (_Bool)canMergeWithKind:(int)arg1 session:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1 key:(id)arg2;
- (void)trackedTextDidChange;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
@property(readonly, nonatomic) TSUColor *changeAdornmentsColor;
@property(readonly, nonatomic) TSUColor *textMarkupColor;
@property(readonly, nonatomic) _Bool showsHiddenDeletionMarkup;
@property(readonly, nonatomic) _Bool showsMarkup;
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(readonly, nonatomic) _Bool isDeletion;
@property(readonly, nonatomic) _Bool isInsertion;
- (void)dealloc;
- (id)initWithContext:(id)arg1 kind:(int)arg2 session:(id)arg3;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) TSWPChangeSession *session;

@end

__attribute__((visibility("hidden")))
@interface TSWPChangeSession : TSPObject
{
    unsigned int _sessionUID;
    TSKAnnotationAuthor *_author;
    NSDate *_date;
}

- (_Bool)isEqualToSession:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) TSKAnnotationAuthor *author;
@property(nonatomic) unsigned int sessionUID;

@end

__attribute__((visibility("hidden")))
@interface TSWPTestChangeSessionManager : NSObject <TSWPChangeSessionManager>
{
    TSWPChangeSession *_currentSession;
}

@property(readonly, nonatomic) _Bool isTrackingChanges;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (id)changeSessionAuthorCreatedWithCommand:(id *)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPRangeArray : NSObject <NSCopying>
{
    void *_rangeVectorOpaque;
}

- (id)description;
- (void)enumerateRangesInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeRange:(struct _NSRange)arg1;
- (struct _NSRange *)rangeReferenceAtIndex:(unsigned long long)arg1;
- (void)addRange:(struct _NSRange)arg1;
@property(readonly, nonatomic) unsigned long long start;
@property(readonly, nonatomic) unsigned long long finish;
@property(readonly, nonatomic) _Bool isEmpty;
- (struct _NSRange)rangeAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long rangeCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRangeVector:(const void *)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPFilteredStorage : NSObject <TSWPTextSource>
{
    TSWPStorage *_storage;
    TSWPDeletionRangeMap *_rangeMap;
    unsigned long long _length;
    unsigned long long _storageLength;
}

- (struct _NSRange)rangeForSelectionAtCharIndex:(unsigned long long)arg1 caretIndex:(unsigned long long)arg2;
- (struct _NSRange)whiteSpaceRangeAtCharIndex:(unsigned long long)arg1 includingBreaks:(_Bool)arg2;
- (unsigned long long)nextCharacterIndex:(unsigned long long)arg1;
- (unsigned long long)previousCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)scanBackwardForWordAtCharIndex:(unsigned long long)arg1;
- (unsigned long long)storageLength;
- (_Bool)hasSmartFieldsInRange:(struct _NSRange)arg1;
- (void)enumerateSmartFieldsWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateWithAttributeKind:(int)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)substringWithRange:(struct _NSRange)arg1;
- (_Bool)adjustRangesByDelta:(long long)arg1;
- (_Bool)isWritingDirectionRightToLeftForParagraphAtCharIndex:(unsigned long long)arg1;
- (id)paragraphStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)charIndexRemappedFromStorage:(unsigned long long)arg1;
- (struct _NSRange)charRangeMappedFromStorage:(struct _NSRange)arg1;
- (struct _NSRange)charRangeMappedToStorage:(struct _NSRange)arg1;
- (unsigned long long)charIndexMappedFromStorage:(unsigned long long)arg1;
- (unsigned long long)charIndexMappedToStorage:(unsigned long long)arg1;
- (id)objectAtLocationPriorToMappedCharIndex:(unsigned long long)arg1 forAttributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (long long)hyphenationLocationBeforeIndex:(long long)arg1 inRange:(struct _NSRange)arg2 locale:(struct __CFLocale *)arg3 hyphenChar:(unsigned int *)arg4;
- (struct _NSRange)wordAtCharIndex:(unsigned long long)arg1 includePreviousWord:(_Bool)arg2;
- (id)characterStyleAtCharIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)attachmentOrFootnoteAtCharIndex:(unsigned long long)arg1;
- (id)attachmentAtCharIndex:(unsigned long long)arg1;
- (id)footnoteReferenceAtCharIndex:(unsigned long long)arg1;
- (id)smartFieldsWithAttributeKind:(int)arg1 intersectingRange:(struct _NSRange)arg2;
- (id)smartFieldAtCharIndex:(unsigned long long)arg1 attributeKind:(int)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)attributesAtCharIndex:(unsigned long long)arg1 attributesOfInterest:(_Bool [19])arg2 attributesTable:(id [19])arg3 effectiveRange:(struct _NSRange *)arg4;
- (_Bool)hasColumnStyleForParagraphBreakAtCharIndex:(unsigned long long)arg1;
- (_Bool)hasColumnBreakAtCharIndex:(unsigned long long)arg1;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (id)string;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithStorage:(id)arg1 subRange:(struct _NSRange)arg2 removeRanges:(id)arg3;
- (id)initWithStorage:(id)arg1 subRange:(struct _NSRange)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPDeletionRangeMap : NSObject
{
    unsigned long long _subRangeStart;
    TSWPRangeArray *_removedRanges;
}

- (_Bool)containsCharIndex:(unsigned long long)arg1;
- (id)inverseRangesInStorageRange:(struct _NSRange)arg1;
- (void)adjustByDelta:(long long)arg1;
- (struct _NSRange)unmappedCharRange:(struct _NSRange)arg1;
- (struct _NSRange)mappedCharRange:(struct _NSRange)arg1;
- (unsigned long long)unmappedCharIndex:(unsigned long long)arg1;
- (unsigned long long)mappedCharIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithSubRange:(struct _NSRange)arg1 removeRanges:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPTextReplacement : NSObject <TSWPReplaceAction>
{
    TSWPSelection *_selection;
    NSString *_string;
}

- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithSelection:(id)arg1 string:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTrackedDeletion : NSObject <TSWPReplaceAction>
{
    struct _NSRange _range;
    TSWPChangeSession *_changeSession;
}

- (id).cxx_construct;
- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithRange:(struct _NSRange)arg1 changeSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPNumberAttachment : TSWPTextualAttachment
{
    int _numberFormat;
    NSString *_stringValue;
}

+ (id)newObjectForUnarchiver:(id)arg1;
@property(copy, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(nonatomic) int numberFormat; // @synthesize numberFormat=_numberFormat;
- (id)stringWithNumber:(unsigned long long)arg1;
- (id)stringEquivalentWithLayoutParent:(id)arg1;
- (id)stringEquivalent;
- (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;
- (const struct NumberAttachmentArchive *)numberAttachmentArchiveFromUnarchiver:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTrackedInsertion : NSObject <TSWPReplaceAction>
{
    TSWPSelection *_selection;
    NSString *_string;
    TSWPChangeSession *_changeSession;
}

- (struct _NSRange)insertedRange;
- (long long)delta;
- (unsigned long long)targetCharIndex;
- (void)performWithStorage:(id)arg1 delta:(long long)arg2 undoTransaction:(struct TSWPStorageTransaction *)arg3 replaceBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)initWithSelection:(id)arg1 string:(id)arg2 changeSession:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPURLDataDetector : NSObject <TSWPDataDetectorProtocol>
{
}

+ (id)newURLFromString:(id)arg1;
+ (id)newArrayByScanningString:(id)arg1 scanRange:(struct _NSRange)arg2;
+ (id)scanString:(id)arg1 scanRange:(struct _NSRange)arg2;
+ (struct _NSRange)calculateScanRangeForString:(id)arg1 changedRange:(struct _NSRange)arg2;
+ (struct _NSRange)expandValidRange:(struct _NSRange)arg1 inString:(id)arg2;
+ (void)initURLCharacterSets;
+ (void)setInvalidURLSchemes:(id)arg1;
+ (id)detectorIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TSWPDocumentRoot : TSKDocumentRoot
{
}

@property(readonly, nonatomic, getter=isChangeTrackingEnabled) _Bool changeTrackingEnabled;
@property(readonly, nonatomic) _Bool supportHeaderFooterParagraphAlignmentInInspectors;
- (int)verticalAlignmentForTextStorage:(id)arg1;
- (int)naturalAlignmentAtCharIndex:(unsigned long long)arg1 inTextStorage:(id)arg2;
- (id)unavailableDocumentFonts;
- (id)documentFonts;
- (_Bool)useLigatures;
- (struct __CFLocale *)hyphenationLocale;
- (_Bool)shouldHyphenate;
- (id)changeVisibility;
- (id)changeSessionManagerForModel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPPresetSource : NSObject <TSSPresetSource>
{
}

+ (void)p_bootstrapTextStylePresetsInTheme:(id)arg1 alternate:(int)arg2 reservedCount:(unsigned long long)arg3;
+ (void)p_bootstrapListPresetsInTheme:(id)arg1 alternate:(int)arg2;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3 reservedCount:(unsigned long long)arg4;
+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (void)p_bootstrapShapePresetsInTheme:(id)arg1 alternate:(int)arg2 reservedCount:(unsigned long long)arg3;
+ (void)p_bootstrapTextboxPresetsInTheme:(id)arg1 alternate:(int)arg2 reservedCount:(unsigned long long)arg3;
+ (void)p_bootstrapLinePresetsInTheme:(id)arg1 alternate:(int)arg2 reservedCount:(unsigned long long)arg3;
+ (id)p_bootstrapStrokeInTheme:(id)arg1 alternate:(int)arg2 index:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCMapEntry : NSObject
{
    _Bool _showInTOC;
    TSWPTOCEntryStyle *_tocEntryStyle;
}

@property(nonatomic) _Bool showInTOC; // @synthesize showInTOC=_showInTOC;
@property(retain, nonatomic) TSWPTOCEntryStyle *tocEntryStyle; // @synthesize tocEntryStyle=_tocEntryStyle;
- (id)initWithTOCEntryStyle:(id)arg1 showInTOC:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCSettings : TSPObject <TSPCopying, TSSPreset>
{
    int _scope;
    NSString *_displayName;
    TSURetainedPointerKeyDictionary *_map;
}

@property(retain, nonatomic) TSURetainedPointerKeyDictionary *map; // @synthesize map=_map;
@property(nonatomic) int scope; // @synthesize scope=_scope;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)description;
- (_Bool)showInTOCForParagraphStyle:(id)arg1;
- (id)entryStyleForParagraphStyle:(id)arg1;
- (void)removeIndexedStyle:(id)arg1;
- (void)addIndexedStyle:(id)arg1 withEntryStyle:(id)arg2 showInTOC:(_Bool)arg3;
- (void)addIndexedStyle:(id)arg1 withEntryStyle:(id)arg2;
@property(readonly, nonatomic) NSSet *paragraphStylesShownInTOC;
@property(readonly, nonatomic) NSSet *indexedStyles;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TOCSettingsArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct TOCSettingsArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) NSString *presetKind;
- (_Bool)isThemeEquivalent:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCEntryStyle : TSWPParagraphStyle
{
}

+ (id)defaultValueForProperty:(int)arg1;
+ (int)defaultIntValueForProperty:(int)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TOCEntryStyleArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (const struct ParagraphStyleArchive *)paragraphStyleArchiveFromUnarchiver:(id)arg1;
- (void)p_saveTOCEntryStylePropertiesToArchive:(struct TOCEntryStylePropertiesArchive *)arg1 archiver:(id)arg2;
- (void)p_loadTOCEntryParagraphStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct TOCEntryStylePropertiesArchive *)arg2 unarchiver:(id)arg3;
- (id)presetKind;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
- (id)initWithContext:(id)arg1 name:(id)arg2 basedOnParagraphStyle:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCInfo : TSWPShapeInfo
{
    TSWPTOCPartitioner *_partitioner;
    NSArray *_tocEntries;
    id <TSWPTOCController> _tocController;
    TSWPTOCSettings *_tocSettings;
    NSArray *_pageNumberRanges;
}

+ (_Bool)canPartition;
@property(retain, nonatomic) NSArray *pageNumberRanges; // @synthesize pageNumberRanges=_pageNumberRanges;
@property(retain, nonatomic, setter=setTOCSettings:) TSWPTOCSettings *tocSettings; // @synthesize tocSettings=_tocSettings;
@property(nonatomic) id <TSWPTOCController> tocController; // @synthesize tocController=_tocController;
- (void)saveTOCInfoMessage:(struct TOCInfoArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadTOCInfoMessage:(const struct TOCInfoArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)supportsAttachedComments;
- (void)acceptVisitor:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)p_regenerateStorageContent;
- (id)containedStorageFormattedUsingParagraphStyle:(id)arg1;
@property(readonly, nonatomic) NSSet *paragraphStylesShownInTOC;
@property(retain, nonatomic, setter=setTOCEntries:) NSArray *tocEntries; // @synthesize tocEntries=_tocEntries;
- (id)partitioner;
- (Class)repClass;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCLayout : TSWPShapeLayout
{
    TSWPTOCLayoutHint *_hint;
    unsigned long long _initialCharIndex;
    struct CGSize _maxSize;
}

@property(readonly, nonatomic) unsigned long long initialCharIndex; // @synthesize initialCharIndex=_initialCharIndex;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
- (id).cxx_construct;
- (_Bool)shrinkTextToFit;
- (_Bool)alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (unsigned long long)columnCount;
- (id)layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (id)childSearchTargets;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (double)maxAutoGrowHeightForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (struct CGRect)boundsForStandardKnobs;
- (id)computeLayoutGeometry;
@property(readonly, nonatomic, getter=isLastLayoutInTOC) _Bool lastLayoutInTOC;
- (void)dealloc;
@property(readonly, nonatomic) TSWPTOCLayoutHint *hint;
- (id)initWithInfo:(id)arg1 initialCharIndex:(unsigned long long)arg2 maxSize:(struct CGSize)arg3;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCLayoutHint : NSObject <TSDHint>
{
    struct _NSRange _charRange;
}

+ (Class)archivedHintClass;
@property(readonly, nonatomic) struct _NSRange charRange; // @synthesize charRange=_charRange;
- (id).cxx_construct;
- (void)saveToArchive:(struct TOCLayoutHintArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TOCLayoutHintArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isFirstHint;
- (id)lastChildHint;
- (id)firstChildHint;
- (void)offsetByDelta:(int)arg1;
- (_Bool)overlapsWithSelection:(id)arg1;
- (id)copyForArchiving;
- (id)initWithRange:(struct _NSRange)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCArchivedLayoutHint : TSPObject <TSDArchivedHint>
{
    TSWPTOCLayoutHint *_hint;
}

- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 hint:(id)arg2;
- (void)dealloc;
@property(retain, nonatomic) id <TSDHint> hint;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCPartitioner : NSObject <TSDPartitioner>
{
    TSWPTOCInfo *_info;
}

@property(readonly, nonatomic) TSWPTOCInfo *info; // @synthesize info=_info;
- (id)hintForLayout:(id)arg1;
- (_Bool)didHint:(id)arg1 syncWithNextHint:(id)arg2 horizontally:(_Bool)arg3 delta:(int)arg4;
- (id)layoutForHint:(id)arg1 parentLayout:(id)arg2;
- (id)nextHintForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)nextLayoutForSize:(struct CGSize)arg1 parentLayout:(id)arg2 previousHint:(id)arg3 horizontally:(_Bool)arg4 outFinished:(out _Bool *)arg5;
- (id)initWithInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCRep : TSWPShapeRep
{
}

- (unsigned long long)i_indexOfHitTOCEntryAtPoint:(struct CGPoint)arg1;
- (id)i_paragraphStyleAtPoint:(struct CGPoint)arg1;
- (void)invalidateSubselection;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (id)p_subSelectionLayers;
- (id)p_selectedParagraphStyles;
- (_Bool)canMakePathEditable;
- (_Bool)isDraggable;
- (_Bool)isSelectable;
- (_Bool)shouldShowKnobs;
- (_Bool)shouldCreateKnobs;
- (id)hitRep:(struct CGPoint)arg1;
- (id)paragraphStylesBetweenCharIndex:(unsigned long long)arg1 andCharIndex:(unsigned long long)arg2;
- (unsigned long long)charIndexAtPoint:(struct CGPoint)arg1;
- (id)tocInfo;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCAttachment : TSWPDrawableAttachment
{
}

- (int)elementKind;
- (void)saveTOCAttachmentMessage:(struct TOCAttachmentArchive *)arg1 archiver:(id)arg2;
- (void)loadTOCAttachmentMessage:(const struct TOCAttachmentArchive *)arg1 fromUnarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
@property(readonly, retain, nonatomic) TSWPTOCInfo *tocInfo;

@end

__attribute__((visibility("hidden")))
@interface TSWPTOCEntryData : TSPObject <TSPCopying>
{
    int _numberFormat;
    unsigned long long _paragraphIndex;
    unsigned long long _pageNumber;
    NSString *_heading;
    TSWPParagraphStyle *_indexedStyle;
    TSWPListStyle *_indexedListStyle;
    unsigned long long _indexedListStart;
    unsigned long long _indexedParagraphLevel;
}

+ (id)tocEntryDataWithParagraphIndex:(unsigned long long)arg1 pageNumber:(unsigned long long)arg2 numberFormat:(int)arg3 heading:(id)arg4 indexedStyle:(id)arg5 indexedListStyle:(id)arg6 indexedListStart:(unsigned long long)arg7 indexedParagraphLevel:(unsigned long long)arg8;
@property(readonly, nonatomic) unsigned long long indexedParagraphLevel; // @synthesize indexedParagraphLevel=_indexedParagraphLevel;
@property(readonly, nonatomic) unsigned long long indexedListStart; // @synthesize indexedListStart=_indexedListStart;
@property(readonly, nonatomic) TSWPListStyle *indexedListStyle; // @synthesize indexedListStyle=_indexedListStyle;
@property(readonly, nonatomic) TSWPParagraphStyle *indexedStyle; // @synthesize indexedStyle=_indexedStyle;
@property(readonly, nonatomic) NSString *heading; // @synthesize heading=_heading;
@property(readonly, nonatomic) int numberFormat; // @synthesize numberFormat=_numberFormat;
@property(readonly, nonatomic) unsigned long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(readonly, nonatomic) unsigned long long paragraphIndex; // @synthesize paragraphIndex=_paragraphIndex;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct TOCEntryInstanceArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct TOCEntryInstanceArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithParagraphIndex:(unsigned long long)arg1 pageNumber:(unsigned long long)arg2 numberFormat:(int)arg3 heading:(id)arg4 indexedStyle:(id)arg5 indexedListStyle:(id)arg6 indexedListStart:(unsigned long long)arg7 indexedParagraphLevel:(unsigned long long)arg8;

@end

__attribute__((visibility("hidden")))
@interface TSWPImageBulletProvider : NSObject
{
    NSMutableArray *_images;
    NSMutableArray *_filenames;
}

+ (id)sharedInstance;
- (id)p_predefinedImageNames;
- (id)p_pathToPredefinedImages;
- (id)dataForImageBullet:(id)arg1 withContext:(id)arg2;
- (id)dataForDefaultImageBulletWithContext:(id)arg1;
@property(readonly, nonatomic) NSArray *predefinedImages;

@end

__attribute__((visibility("hidden")))
@interface TSWPHighlight : TSPObject <TSDAnnotationHosting, TSPCopying, TSKDocumentObject, TSDCommentStorageDelegate>
{
    id <TSKModel> hostingModel;
    TSDCommentStorage *_commentStorage;
}

+ (id)defaultHighlightWithContext:(id)arg1 includeCommentWithAuthor:(id)arg2;
@property(retain, nonatomic) TSDCommentStorage *commentStorage; // @synthesize commentStorage=_commentStorage;
@property(nonatomic) id <TSKModel> hostingModel; // @synthesize hostingModel;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)p_invalidateAnnotationResultsForDocumentRoot:(id)arg1 key:(id)arg2;
- (void)commitText:(id)arg1;
- (id)commandForDeletingComment;
@property(readonly, nonatomic) int annotationDisplayStringType;
@property(readonly, nonatomic) int annotationType;
@property(readonly, nonatomic) NSDate *date;
- (void)setAuthor:(id)arg1;
@property(readonly, nonatomic) TSKAnnotationAuthor *author;
- (void)commentStorageTextDidChange:(id)arg1;
@property(copy, nonatomic) TSDCommentStorage *storage;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct HighlightArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isCommentEmpty;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 commentStorage:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) NSString *changeTrackingContentFormatString;
@property(readonly, nonatomic) NSString *changeTrackingContentString;
@property(readonly, nonatomic) NSString *changeTrackingTitleString;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TSWPCommentLayout : TSWPShapeLayout
{
}

- (_Bool)shouldDisplayGuides;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (struct CGSize)minimumSize;
- (_Bool)canResetTextAndObjectHandles;
- (_Bool)canBeIntersected;
- (_Bool)supportsRotation;
- (_Bool)allowsConnections;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (_Bool)shouldBeDisplayedInShowMode;
- (id)fill;
- (id)commentInfo;
- (int)wrapType;
- (Class)repClassOverride;

@end

__attribute__((visibility("hidden")))
@interface TSWPCommentRep : TSWPShapeRep
{
    _Bool _shouldShowNavigationKnobs;
    _Bool _didNavigate;
    CALayer *_headerLayer;
    CALayer *_dateLayer;
    CALayer *_authorLayer;
    _Bool _needsAuthorOrDateUpdate;
}

- (_Bool)p_shouldDraw;
- (_Bool)exclusivelyProvidesGuidesWhileAligning;
- (_Bool)providesGuidesWhileAligning;
- (void)invalidateAnnotationColor;
- (void)didUpdateLayer:(id)arg1;
- (void)screenScaleDidChange;
- (void)viewScaleDidChange;
- (id)additionalLayersOverLayer;
- (id)p_imageForString:(id)arg1 ofSize:(struct CGSize)arg2 baselineOffsetFromBottom:(double)arg3 foregroundColor:(struct CGColor *)arg4;
- (void)addKnobsToArray:(id)arg1;
- (void)p_previousAnnotation;
- (void)p_nextAnnotation;
- (unsigned long long)enabledKnobMask;
- (void)p_deleteComment;
- (_Bool)shouldShowSmartShapeKnobs;
- (_Bool)canBeUsedForImageMask;
- (_Bool)canMakePathEditable;
- (_Bool)directlyManagesVisibilityOfKnob:(id)arg1;
- (_Bool)canUseSpecializedHitRegionForKnob:(id)arg1;
- (void)dynamicDragDidEnd;
- (id)newCommandToApplyGeometry:(id)arg1 toInfo:(id)arg2;
- (id)newTrackerForKnob:(id)arg1;
- (void)didEndZooming;
- (void)recursivelyDrawChildrenInContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)invalidateComments;
- (void)dynamicOperationDidBegin;
- (_Bool)shouldHideSelectionHighlightDueToRectangularPath;
- (double)selectionHighlightWidth;
- (struct CGRect)boundsForHighlightLayer;
- (double)p_effectiveBorderStrokeWidthInPoints;
- (struct CGColor *)selectionHighlightColor;
- (_Bool)forcesPlacementOnTop;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
- (_Bool)shouldShowKnobs;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationInfo : NSObject
{
    Class mAnimationClass;
    NSSet *mValidAnimationTypes;
}

+ (id)localizedEffectNamesForAnimationInfos:(id)arg1 animationType:(int)arg2;
+ (id)effectIdentifiersForAnimationInfos:(id)arg1;
@property(readonly, nonatomic) NSSet *validAnimationTypes; // @synthesize validAnimationTypes=mValidAnimationTypes;
@property(readonly, nonatomic) Class animationClass; // @synthesize animationClass=mAnimationClass;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)thumbnailImageNameForType:(int)arg1;
- (_Bool)isType:(int)arg1;
- (id)localizedNameForType:(int)arg1;
@property(readonly, nonatomic) NSString *localizedTransitionName;
@property(readonly, nonatomic) NSString *localizedActionBuildName;
@property(readonly, nonatomic) NSString *localizedBuildOutName;
@property(readonly, nonatomic) NSString *localizedBuildInName;
@property(readonly, nonatomic) NSDictionary *customAttributeDefaults;
@property(readonly, nonatomic) NSArray *customAttributes;
- (id)customAttributesForAttributeKey:(id)arg1;
@property(readonly, nonatomic) unsigned long long directionType;
@property(readonly, nonatomic) int category;
@property(readonly, nonatomic) NSString *animationFilter;
@property(readonly, nonatomic) NSDictionary *defaultAttributes;
@property(readonly, nonatomic) _Bool isDrift;
@property(readonly, nonatomic) NSString *effectIdentifier;
- (void)dealloc;
- (id)initWithAnimationClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingEvent : NSObject <NSCopying>
{
    double mStartTime;
}

@property(readonly, nonatomic) double startTime; // @synthesize startTime=mStartTime;
- (id)recordingEventByAddingTimeOffset:(double)arg1;
@property(readonly, nonatomic) _Bool canPrecedeDiscontinuity;
@property(readonly, nonatomic, getter=isIgnoredWhenSeeking) _Bool ignoredWhenSeeking;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithStartTime:(double)arg1;
- (void)saveToArchive:(struct RecordingEventArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingLaserEvent : KNRecordingEvent
{
    struct CGPoint mUnitLocation;
}

@property(readonly, nonatomic) struct CGPoint unitLocation; // @synthesize unitLocation=mUnitLocation;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStartTime:(double)arg1;
- (id)initWithStartTime:(double)arg1 unitLocation:(struct CGPoint)arg2;
- (void)saveToArchive:(struct RecordingEventArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingEventTrack : TSPObject
{
    NSString *mType;
    NSArray *mEvents;
}

@property(readonly, nonatomic) NSArray *events; // @synthesize events=mEvents;
@property(readonly, nonatomic) NSString *type; // @synthesize type=mType;
- (id)eventTrackByReplacingSegmentAfterTime:(double)arg1 withEventTrack:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 type:(id)arg2 events:(id)arg3;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct RecordingEventTrackArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct RecordingEventTrackArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionColorPlanes : KNAnimationEffect <KNFrameAnimator, KNAnimationPlugin, KNAnimationPluginArchiving>
{
    TSDGLShader *_colorShader;
    TSDGLShader *_velocityShader;
    TSDGLDataBuffer *_colorDataBuffer;
    TSDGLDataBuffer *_velocityDataBuffer;
    unsigned long long _colorCount;
    TSDGLMotionBlurEffect *_motionBlurEffect;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_drawWithContext:(id)arg1 isVelocity:(_Bool)arg2;
- (struct CATransform3D)p_mvpMatrixWithTexture:(id)arg1 direction:(unsigned long long)arg2 percent:(double)arg3 colorIndex:(unsigned long long)arg4;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationEffect : NSObject <KNAnimationPlugin>
{
    KNAnimationContext *mAnimationContext;
}

+ (id)updateDirectionAttributeValue:(long long)arg1 andCustomTextDirectionValue:(unsigned long long)arg2 turnOffBounce:(_Bool)arg3 turnOffMotionBlur:(_Bool)arg4 forAttributes:(id)arg5;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAbstractSlide : TSPObject <TSSPropertySource, TSSStyleClient, TSKDocumentObject, TSDDrawableContainerInfo, TSKTransformableObject>
{
    KNSlideNode *mSlideNode;
    KNTitlePlaceholderInfo *mTitlePlaceholder;
    KNBodyPlaceholderInfo *mBodyPlaceholder;
    KNObjectPlaceholderInfo *mObjectPlaceholder;
    TSDGuideStorage *mUserDefinedGuideStorage;
    KNSlideStyle *mStyle;
    KNSlideBackgroundInfo *mBackground;
    NSArray *mChildInfos;
    KNSlideNumberPlaceholderInfo *mSlideNumberPlaceholder;
    _Bool mInDocument;
    NSMutableArray *mStaticGuides;
    NSMutableDictionary *mPlaceholdersForTags;
    _Bool mNeedsSlideNodeEventCountUpdate;
    TSUPointerKeyDictionary *mDrawableToGhostInfosMap;
    TSUMutablePointerSet *mDrawablesWithInvalidGhosts;
    _Bool mShouldConsiderAllChunksActive;
    KNTransition *mTransition;
    NSArray *mBuilds;
    NSArray *mBuildChunks;
}

+ (unsigned long long)deliveryGroupCountForBuildChunks:(id)arg1;
+ (id)buildChunksInDeliveryGroupAtIndex:(unsigned long long)arg1 inBuildChunks:(id)arg2;
+ (id)p_firstActiveChunkInChunks:(id)arg1;
+ (_Bool)chunk:(id)arg1 isFirstInDeliveryGroupForChunks:(id)arg2;
+ (unsigned long long)deliveryGroupIndexForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
+ (id)parentSlideForInfo:(id)arg1;
+ (id)newObjectForUnarchiver:(id)arg1;
+ (_Bool)needsObjectUUID;
@property(copy, nonatomic) NSArray *buildChunks; // @synthesize buildChunks=mBuildChunks;
@property(readonly, nonatomic) _Bool inDocument; // @synthesize inDocument=mInDocument;
@property(retain, nonatomic) KNSlideNumberPlaceholderInfo *slideNumberPlaceholder; // @synthesize slideNumberPlaceholder=mSlideNumberPlaceholder;
@property(retain, nonatomic) KNObjectPlaceholderInfo *objectPlaceholder; // @synthesize objectPlaceholder=mObjectPlaceholder;
@property(retain, nonatomic) KNBodyPlaceholderInfo *bodyPlaceholder; // @synthesize bodyPlaceholder=mBodyPlaceholder;
@property(retain, nonatomic) KNTitlePlaceholderInfo *titlePlaceholder; // @synthesize titlePlaceholder=mTitlePlaceholder;
@property(readonly, nonatomic) KNSlideNode *slideNode; // @synthesize slideNode=mSlideNode;
- (void)replaceReferencedStylesUsingBlock:(CDUnknownBlockType)arg1;
- (id)referencedStyles;
- (double)CGFloatValueForProperty:(int)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (id)objectForProperty:(int)arg1;
- (id)boxedObjectForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)copyWithContext:(id)arg1;
- (id)childEnumerator;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (id)infoCorrespondingToInfo:(id)arg1;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (_Bool)canMoveDeliveryGroupFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
@property(readonly, nonatomic) NSArray *buildsGroupedByDeliveryGroup;
@property(readonly, nonatomic) unsigned long long deliveryGroupCount;
- (_Bool)p_canMoveDeliveryGroupBuildChunks:(id)arg1 toIndex:(unsigned long long)arg2;
- (_Bool)p_canMoveDeliveryGroupBuildChunksFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (id)buildChunksInDeliveryGroupAtIndex:(unsigned long long)arg1;
- (id)deliveryGroupIndexesForBuilds:(id)arg1;
- (unsigned long long)deliveryGroupIndexForBuildChunk:(id)arg1;
- (_Bool)hasComplementForBuildChunk:(id)arg1;
- (_Bool)hasComplementForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
- (id)p_calculateActiveBuildChunks;
@property(readonly, nonatomic) NSArray *activeBuildChunks;
- (long long)validateMoveBuildChunks:(id)arg1 toIndex:(unsigned long long)arg2;
- (_Bool)p_areBuildChunksInValidOrder:(id)arg1;
- (long long)canMoveBuildChunk:(id)arg1 toIndex:(unsigned long long)arg2;
- (_Bool)p_isValidToMoveChunk:(id)arg1 toIndex:(unsigned long long)arg2;
- (struct _NSRange)p_rangeForChunksInBuild:(id)arg1;
- (id)p_complementForBuild:(id)arg1;
- (id)activeChunksForDrawable:(id)arg1 animationType:(int)arg2;
- (id)activeChunksForDrawable:(id)arg1;
- (void)removeBuildChunk:(id)arg1;
- (void)insertBuildChunk:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)p_assertChunksInSequenceForBuild:(id)arg1;
- (void)p_buildOrderingDidChangeWithBuild:(id)arg1;
- (void)p_buildChunkOrderingDidChangeWithChunk:(id)arg1;
- (void)removeInvalidBuildsOnDrawable:(id)arg1 usingParentCommand:(id)arg2;
- (id)p_invalidBuildsOnDrawable:(id)arg1;
- (void)removeBuild:(id)arg1;
- (void)insertBuild:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)outBuildForDrawable:(id)arg1;
- (id)inBuildForDrawable:(id)arg1;
- (id)buildsForDrawable:(id)arg1 orderedByFirstChunk:(_Bool)arg2;
- (id)buildsForDrawable:(id)arg1 type:(int)arg2 orderedByFirstChunk:(_Bool)arg3;
@property(readonly, nonatomic) NSArray *buildsOrderedByFirstChunk;
@property(copy, nonatomic) NSArray *builds;
- (void)removeTagForDrawable:(id)arg1;
- (_Bool)infoIsPlaceholder:(id)arg1;
- (id)tagForInfo:(id)arg1;
- (_Bool)infoExistsForTag:(id)arg1;
- (id)infoForTag:(id)arg1;
- (void)setInfo:(id)arg1 forSageTag:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic, getter=isSlideNumberVisible) _Bool slideNumberVisible;
@property(readonly, nonatomic, getter=isObjectVisible) _Bool objectVisible;
@property(readonly, nonatomic, getter=isBodyVisible) _Bool bodyVisible;
@property(readonly, nonatomic, getter=isTitleVisible) _Bool titleVisible;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 listStyle:(id)arg6 layoutPropertyMap:(id)arg7 paragraphPropertyMap:(id)arg8 listPropertyMap:(id)arg9 context:(id)arg10;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetStyle:(id)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(long long)arg4 textPresetIndex:(long long)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 placeholderClass:(Class)arg3;
- (id)defaultSlideNumberPlaceholderWithContext:(id)arg1;
- (id)defaultSlideNumberPlaceholder;
- (id)defaultBodyPlaceholderWithContext:(id)arg1;
- (id)defaultTitlePlaceholderWithContext:(id)arg1;
- (id)defaultBodyPlaceholder;
- (id)defaultTitlePlaceholder;
@property(readonly, nonatomic) NSArray *alignmentGuidesForEditing;
@property(readonly, nonatomic) NSArray *alignmentGuides;
- (void)addStaticGuide:(id)arg1;
@property(readonly, nonatomic) NSArray *staticGuides;
- (void)performBlockOnInfos:(CDUnknownBlockType)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (_Bool)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (void)removeDrawable:(id)arg1;
- (void)insertDrawables:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
- (void)insertDrawable:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
- (void)addDrawable:(id)arg1 dolcContext:(id)arg2;
@property(readonly, nonatomic) NSArray *infosToDisplay;
@property(readonly, nonatomic) NSArray *ownedChildInfos;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
@property(readonly, nonatomic) TSDFill *backgroundFill;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithSlideNode:(id)arg1 context:(id)arg2;
@property(copy, nonatomic) NSDictionary *placeholdersForTags;
@property(retain, nonatomic) KNSlideBackgroundInfo *background;
@property(retain, nonatomic) KNTransition *transition;
@property(retain, nonatomic) KNSlideStyle *style;
@property(retain, nonatomic) TSDGuideStorage *userDefinedGuideStorage;
- (void)p_updateNumberOfBuildChunksImmediatelyWithoutUndoHistory;
- (void)p_updatePreUFFBuildEffects;
- (void)p_updateOverlappingBuildEventTriggers;
- (void)saveToArchive:(struct SlideArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct SlideArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)p_updateBuildsReplacingPlaceholder:(id)arg1 withPlaceholder:(id)arg2;
- (void)i_invalidateActiveChunkCache;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationRegistry : NSObject
{
    NSDictionary *mClassesForTypeAndName;
    NSDictionary *mClassesForTypeAndCategory;
    NSDictionary *mClassesForTypeAndFilter;
    NSDictionary *mClassesForTypeAndObsoleteName;
    NSDictionary *mAlternateEffectIdentifiersForEffectIdentifierAndFilter;
    NSArray *mAnimationInfos;
}

+ (id)localizedNameForUnsupportedAnimation:(id)arg1;
+ (id)localizedCategoryNameForCategory:(int)arg1;
+ (id)categoryNameForPluginClass:(Class)arg1;
+ (id)animationsInBundle;
+ (id)instance;
+ (_Bool)p_dumpRegistry;
- (id)animationInfosForAnimationType:(int)arg1 filter:(id)arg2;
- (_Bool)canMapEffectIdentifier:(id)arg1 animationType:(int)arg2 toEffectIdentifier:(id)arg3 includeObsoleteNames:(_Bool)arg4 forDrawable:(id)arg5;
- (id)allAnimationInfos;
- (id)animationInfoForEffectIdentifier:(id)arg1 animationType:(int)arg2 includeObsoleteNames:(_Bool)arg3 drawable:(id)arg4;
- (id)animationInfoForEffectIdentifier:(id)arg1 animationType:(int)arg2 includeObsoleteNames:(_Bool)arg3;
- (id)animationInfoForEffectIdentifier:(id)arg1 animationType:(int)arg2;
- (id)animationInfosForAnimationType:(int)arg1 category:(id)arg2;
- (id)distinctCategoriesForType:(int)arg1;
- (void)dealloc;
- (id)init;
- (id)p_buildAlternateFilterMap;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationRegistryWithFallbacks : NSObject
{
    KNAnimationRegistry *mRegistry;
    NSMutableDictionary *mFallbacks;
}

- (void)registerFallbackEffectIdentifer:(id)arg1 forEffectIdentifer:(id)arg2;
- (id)animationInfoForEffectIdentifier:(id)arg1 animationType:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAttributes : KNAnimationAttributes
{
}

+ (id)defaultAttributesForEffect:(id)arg1 buildType:(int)arg2;
+ (_Bool)customAttributeKeyIsValid:(id)arg1;
+ (id)supportedCustomAttributes;
- (void)p_writeBuildAttributesToArchive:(struct BuildAttributesArchive *)arg1;
- (void)p_writeSharedAttributesToArchive:(struct BuildAttributesArchive *)arg1;
- (void)p_readTEFAttributesForArchive:(const struct BuildAttributesArchive *)arg1 intoDictionary:(id)arg2;
- (void)p_readBuildAttributesForArchive:(const struct BuildAttributesArchive *)arg1 intoDictionary:(id)arg2;
- (void)p_readSharedAttributesForArchive:(struct AnimationAttributesArchive *)arg1 intoDictionary:(id)arg2;
- (void)encodeToArchive:(struct BuildAttributesArchive *)arg1;
- (id)initFromBuildAttributesArchive:(const struct BuildAttributesArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwarePop : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildChunk : TSPContainedObject <KNInspectableAnimation>
{
    unsigned long long mIndexInBuild;
    double mDelay;
    double mDuration;
    _Bool mAutomatic;
    unsigned long long mReferent;
    KNBuild *mCachedBuild;
    TSPLazyReference *mBuildReference;
    _Bool mNeedsAutomaticFromBuildAttributes;
    _Bool mNeedsReferentFromBuildAttributes;
    _Bool mNeedsDelayFromBuildAttributes;
    _Bool mNeedsDurationFromBuildAttributes;
    unsigned long long mCachedIndexOnSlide;
    unsigned long long mCachedActiveIndexOnSlide;
}

@property(nonatomic) double delay; // @synthesize delay=mDelay;
@property(nonatomic) double duration; // @synthesize duration=mDuration;
@property(readonly, nonatomic) unsigned long long indexInBuild; // @synthesize indexInBuild=mIndexInBuild;
@property(readonly, nonatomic) _Bool canEditAnimations;
@property(readonly, nonatomic) NSSet *inspectableAttributes;
@property(readonly, nonatomic) NSString *title;
- (id)description;
- (id)p_stringForReferent:(unsigned long long)arg1;
- (_Bool)isComplementOfBuildChunk:(id)arg1;
@property(readonly, nonatomic) _Bool hasComplement;
@property(readonly, nonatomic) unsigned long long activeIndexOnSlide;
@property(readonly, nonatomic, getter=isActive) _Bool active;
@property(readonly, nonatomic) _Bool isFirstInDeliveryGroup;
@property(readonly, nonatomic) _Bool isFirstOnSlide;
@property(readonly, nonatomic) _Bool isFirstInBuild;
@property(readonly, nonatomic) unsigned long long deliveryGroupIndex;
@property(readonly, nonatomic) unsigned long long indexOnSlide;
@property(readonly, nonatomic) KNSlide *slide;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned long long eventTrigger;
@property(readonly, nonatomic) NSArray *availableEventTriggers;
- (id)nextChunkOnSlide;
- (id)p_previousChunkOnSlide;
@property(readonly, nonatomic, getter=isAutomaticWithPreviousChunkOnSameDrawable) _Bool automaticWithPreviousChunkOnSameDrawable;
@property(readonly, nonatomic, getter=isAutomaticWithPreviousChunk) _Bool automaticWithPreviousChunk;
@property(readonly, nonatomic) _Bool supportsWithStart;
- (id)p_chunksBuildingWithThisChunk;
- (_Bool)p_chunksBuildingWithThisChunkCanBuildWithChunk:(id)arg1;
- (_Bool)p_canBuildWithChunk:(id)arg1 checkOtherChunksBuildingWithThisChunk:(_Bool)arg2;
- (_Bool)canBuildWithChunk:(id)arg1;
@property(nonatomic) unsigned long long referent;
- (void)p_invalidateSlideCaches;
@property(nonatomic, getter=isAutomatic) _Bool automatic;
@property(readonly, nonatomic) KNBuild *build;
- (void)dealloc;
- (id)initWithIndex:(unsigned long long)arg1 inBuild:(id)arg2 copyingAttributesFromChunk:(id)arg3;
- (id)initWithIndex:(unsigned long long)arg1 inBuild:(id)arg2 referent:(unsigned long long)arg3 copyingRemainingAttributesFromChunk:(id)arg4;
- (id)initWithIndex:(unsigned long long)arg1 inBuild:(id)arg2;
- (void)saveToArchive:(struct BuildChunkArchive *)arg1 archiver:(id)arg2;
- (void)p_setDurationFromBuildAttributes:(id)arg1;
- (void)p_setDelayFromBuildAttributes:(id)arg1 withReferent:(unsigned long long)arg2 automatic:(_Bool)arg3;
- (void)didLoadBuild:(id)arg1;
- (id)initWithArchive:(const struct BuildChunkArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNDocumentRoot : TSADocumentRoot <TSKModel, TSTResolverContainerNameProvider>
{
    KNShow *mShow;
    KNThumbnailManager *mThumbnailManager;
    KNSlidePreviewManager *mSlidePreviewManager;
    KNRecordingSyncMaintainer *mRecordingSyncMaintainer;
    _Bool mIsObservingRecording;
}

+ (void)localizeModelObject:(id)arg1 withTemplateBundle:(id)arg2;
- (void)p_applicationDidBecomeActive:(id)arg1;
- (void)p_applicationWillResignActive:(id)arg1;
- (unsigned long long)writingDirectionForStorage;
- (unsigned long long)writingDirection;
- (void)prepareForSavingAsTemplate;
- (void)preprocessForSaveAsTheme;
- (long long)compareLocationSortingInfo:(id)arg1 toSortingInfo:(id)arg2;
- (id)warningLocationDescriptionForAffectedObjects:(id)arg1 sortingInfo:(id *)arg2;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (id)UIStateForChart:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1 contextContainerName:(id)arg2;
- (id)resolverMatchingName:(id)arg1 contextResolver:(id)arg2;
- (id)resolverContainerNamesMatchingPrefix:(id)arg1;
- (id)resolverContainerForName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)nameForResolverContainer:(id)arg1;
- (id)resolverContainerNameForResolver:(id)arg1;
- (void)changeShowSizeTo:(struct CGSize)arg1;
- (id)resizeCommandForSlideNode:(id)arg1 fromOldSize:(struct CGSize)arg2 transformedObjects:(id)arg3;
- (_Bool)isMultiPageForQuickLook;
- (id)createViewStateRoot;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (void)upgradeTextStylesForUnity;
- (id)protected_defaultTextPresetOrdering;
- (_Bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(_Bool)arg2;
- (id)stylesheet;
- (void)setThemeForTemplateImport:(id)arg1;
- (void)setTheme:(id)arg1;
- (id)theme;
- (id)childEnumerator;
@property(nonatomic) id <KNDocumentRootDelegate> delegate; // @dynamic delegate;
- (void)dealloc;
- (void)willClose;
- (void)documentDidLoad;
- (id)initWithContext:(id)arg1;
- (_Bool)shouldShowComments;
@property(retain, nonatomic) KNShow *show;
- (unsigned long long)applicationType;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct DocumentArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct DocumentArchive *)arg1 unarchiver:(id)arg2;
- (void)updateBuildChunksAndBuildsForChanges:(id)arg1 executingCommandsInSequenceWithBlock:(CDUnknownBlockType)arg2;
- (id)p_buildsNeedingBuildOrChunkUpdateForChanges:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNImager : TSDImager <TSDConnectedInfoReplacing>
{
    unsigned long long mSlideNumber;
    KNAbstractSlide *mSlide;
    _Bool mShouldShowInstructionalText;
}

@property(nonatomic) _Bool shouldShowInstructionalText; // @synthesize shouldShowInstructionalText=mShouldShowInstructionalText;
@property(nonatomic) KNAbstractSlide *slide; // @synthesize slide=mSlide;
@property(nonatomic) unsigned long long slideNumber; // @synthesize slideNumber=mSlideNumber;
- (id)infoToConnectToForConnectionLineConnectedToInfo:(id)arg1;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNMasterChangeBlob : NSObject
{
    KNSlide *mSlide;
    KNSlideStyle *mSlideStyle;
    KNMasterSlide *mMaster;
    KNTitlePlaceholderInfo *mTitlePlaceholder;
    KNBodyPlaceholderInfo *mBodyPlaceholder;
    NSArray *mChildInfos;
}

+ (id)blobWithSlide:(id)arg1;
@property(retain, nonatomic) NSArray *childInfos; // @synthesize childInfos=mChildInfos;
@property(retain, nonatomic) KNBodyPlaceholderInfo *bodyPlaceholder; // @synthesize bodyPlaceholder=mBodyPlaceholder;
@property(retain, nonatomic) KNTitlePlaceholderInfo *titlePlaceholder; // @synthesize titlePlaceholder=mTitlePlaceholder;
@property(retain, nonatomic) KNMasterSlide *master; // @synthesize master=mMaster;
@property(retain, nonatomic) KNSlideStyle *slideStyle; // @synthesize slideStyle=mSlideStyle;
@property(retain, nonatomic) KNSlide *slide; // @synthesize slide=mSlide;
- (id)description;
- (void)saveToArchive:(struct MasterChangeBlobArchive *)arg1 archiver:(id)arg2;
- (void)dealloc;
- (id)initWithArchive:(const struct MasterChangeBlobArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNMasterSlide : KNAbstractSlide <TSSThemeAsset, TSKTransformableObject>
{
    NSString *mName;
    struct CGRect mObjectRect;
    KNClassicStylesheetRecord *mClassicStylesheetRecord;
    NSArray *mBodyParagraphStyles;
    NSArray *mBodyListStyles;
    NSString *mThumbnailTextForTitlePlaceholder;
    NSString *mThumbnailTextForBodyPlaceholder;
    _Bool mSlideObjectsLayerWithMaster;
    _Bool mHasBug16580905;
    _Bool mCalculatedHasBug16580905;
}

+ (id)p_defaultMasterGuideColor;
+ (void)setMasterGuideColor:(id)arg1;
+ (id)masterGuideColor;
+ (void)initialize;
@property(readonly, nonatomic) KNClassicStylesheetRecord *classicStylesheetRecord; // @synthesize classicStylesheetRecord=mClassicStylesheetRecord;
- (id)objectForProperty:(int)arg1;
- (int)intValueForProperty:(int)arg1;
- (_Bool)containsProperty:(int)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)updatePlaceholderText;
- (id)alignmentGuidesForEditing;
- (id)alignmentGuides;
- (void)wasAddedToTheme:(id)arg1;
- (void)willBeAddedToTheme:(id)arg1;
- (_Bool)isThemeContent;
- (id)childEnumerator;
- (id)nonPlaceholderObjects;
- (id)imagePlaceholders;
- (_Bool)isObjectVisible;
- (void)dealloc;
- (SEL)mapThemeAssetSelector;
- (_Bool)isThemeEquivalent:(id)arg1;
- (id)thumbnailTextForPlaceholder:(id)arg1;
- (id)p_defaultThumbnailTextForPlaceholder:(id)arg1;
- (id)tagsforNewPlaceholderInfos:(id)arg1;
- (id)tagforNewPlaceholderInfo:(id)arg1;
- (id)p_defaultTagForDrawable:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1 andSlideNode:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)initWithSlideNode:(id)arg1 context:(id)arg2;
@property(nonatomic) _Bool slideObjectsLayerWithMaster;
@property(retain, nonatomic) NSString *thumbnailTextForBodyPlaceholder;
@property(retain, nonatomic) NSString *thumbnailTextForTitlePlaceholder;
@property(copy, nonatomic) NSArray *bodyListStyles;
@property(copy, nonatomic) NSArray *bodyParagraphStyles;
@property(nonatomic) struct CGRect objectRect;
@property(retain, nonatomic) NSString *name;
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (_Bool)hasBug16580905;
- (void)generateObjectPlaceholderIfNecessary;
- (id)packageLocator;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNPasteboardNativeStorage : TSPObject
{
    NSArray *mDrawables;
    NSArray *mBuilds;
    NSArray *mBuildChunks;
    NSArray *mSlideNodes;
    NSArray *mMasterSlideNodes;
    struct CGSize mOriginalShowSize;
    NSArray *mTextStorageTitleRanges;
    NSArray *mGeometriesInRoot;
    NSString *mSlideNodeUUID;
    struct CGSize _originalShowSize;
}

@property(nonatomic) struct CGSize originalShowSize; // @synthesize originalShowSize=_originalShowSize;
@property(readonly, nonatomic) NSString *slideNodeUUID; // @synthesize slideNodeUUID=mSlideNodeUUID;
@property(readonly, nonatomic) NSArray *geometriesInRoot; // @synthesize geometriesInRoot=mGeometriesInRoot;
@property(readonly, nonatomic) NSArray *textStorageTitleRanges; // @synthesize textStorageTitleRanges=mTextStorageTitleRanges;
@property(readonly, nonatomic) NSArray *slideNodes; // @synthesize slideNodes=mSlideNodes;
@property(readonly, nonatomic) NSArray *buildChunks; // @synthesize buildChunks=mBuildChunks;
@property(readonly, nonatomic) NSArray *builds; // @synthesize builds=mBuilds;
@property(readonly, nonatomic) NSArray *drawables; // @synthesize drawables=mDrawables;
- (void)dealloc;
- (id)initWithContext:(id)arg1 slideNodes:(id)arg2;
- (id)initWithContext:(id)arg1 slideNodes:(id)arg2 textStorageTitleRanges:(id)arg3;
- (id)initWithContext:(id)arg1 drawables:(id)arg2 builds:(id)arg3 buildChunks:(id)arg4;
- (id)initWithContext:(id)arg1 slideNodes:(id)arg2 textStorageTitleRanges:(id)arg3 drawables:(id)arg4 builds:(id)arg5 buildChunks:(id)arg6 drawableGeometriesInRoot:(id)arg7 slideNodeUUID:(id)arg8;
- (void)originalShowSize:(struct CGSize)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct PasteboardNativeStorageArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct PasteboardNativeStorageArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNEmptyMovieFileGenerator : NSObject
{
    NSURL *mGeneratedFileURL;
    double mDuration;
}

@property(readonly, nonatomic) NSURL *generatedFileURL; // @synthesize generatedFileURL=mGeneratedFileURL;
- (void)generateFileWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithGeneratedFileURL:(id)arg1 duration:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNPlaceholderInfo : TSWPShapeInfo
{
    _Bool mIsFromPasteboard;
}

+ (id)newObjectForUnarchiver:(id)arg1;
@property(readonly, nonatomic) _Bool isFromPasteboard; // @synthesize isFromPasteboard=mIsFromPasteboard;
- (_Bool)shouldHideEmptyBullets;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)instructionalText;
- (_Bool)displaysInstructionalText;
- (Class)layoutClass;
- (Class)repClass;
- (id)copyAsShapeInfoWithContext:(id)arg1;
- (int)kind;
- (void)saveToArchive:(struct PlaceholderArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct PlaceholderArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNPlaceholderRep : TSWPShapeRep
{
}

+ (id)mixableObjectClasses;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (_Bool)isPlaceholder;
- (id)textureForContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNShow : TSPObject
{
    KNUIState *mUIState;
    KNTheme *mTheme;
    KNSlideTree *mSlideTree;
    TSSStylesheet *mStylesheet;
    KNRecording *mRecording;
    struct CGSize mSize;
    double mAutoplayTransitionDelay;
    double mAutoplayBuildDelay;
    double mIdleTimerDelay;
    int mMode;
    _Bool mLoopPresentation;
    _Bool mIdleTimerActive;
    _Bool mAutomaticallyPlaysUponOpen;
    _Bool mNeedsToUpdateThumbnails;
    _Bool mWasImportedAsPreUFF;
    KNSoundtrack *mSoundtrack;
}

+ (id)showWithSize:(struct CGSize)arg1 context:(id)arg2;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
@property(nonatomic) struct CGSize size; // @synthesize size=mSize;
@property(retain, nonatomic) KNTheme *theme; // @synthesize theme=mTheme;
@property(readonly, nonatomic) _Bool wasImportedAsPreUFF; // @synthesize wasImportedAsPreUFF=mWasImportedAsPreUFF;
@property(readonly, nonatomic) _Bool needsToUpdateThumbnails; // @synthesize needsToUpdateThumbnails=mNeedsToUpdateThumbnails;
@property(retain, nonatomic) KNUIState *uiState; // @synthesize uiState=mUIState;
- (id)slideNodeAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfSlideNode:(id)arg1;
- (void)willModify;
- (struct CGPoint)center;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 context:(id)arg2;
@property(readonly, nonatomic) _Bool slideNumbersVisible;
@property(retain, nonatomic) KNRecording *recording;
@property(retain, nonatomic) KNSoundtrack *soundtrack;
@property(nonatomic) _Bool automaticallyPlaysUponOpen;
@property(nonatomic) _Bool idleTimerActive;
@property(nonatomic) _Bool loopPresentation;
@property(nonatomic) int mode;
@property(nonatomic) double idleTimerDelay;
@property(nonatomic) double autoplayBuildDelay;
@property(nonatomic) double autoplayTransitionDelay;
@property(retain, nonatomic) KNSlideTree *slideTree;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct ShowArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ShowArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNSlide : KNAbstractSlide <TSKModel, TSSThemedObject, TSKTransformableObject>
{
    KNMasterSlide *mMaster;
    KNNoteInfo *mNote;
    TSDDrawableInfo *mInfoUsingObjectPlaceholderGeometry;
    _Bool mInfoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry;
}

+ (id)blankSlideWithSlideNode:(id)arg1 master:(id)arg2 andShow:(id)arg3;
@property(retain, nonatomic) KNNoteInfo *note; // @synthesize note=mNote;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)updateSlideSpecificLinkCountsWithOldHyperlink:(id)arg1 newHyperlink:(id)arg2;
- (_Bool)p_urlIsSlideSpecific:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (id)infosToDisplay;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (void)acceptVisitor:(id)arg1;
- (_Bool)isNoteSelectionModel:(id)arg1;
- (void)removeDrawable:(id)arg1;
- (void)insertDrawables:(id)arg1 atIndex:(unsigned long long)arg2 dolcContext:(id)arg3;
@property(readonly, nonatomic) _Bool slideObjectsLayerWithMaster;
- (id)infoCorrespondingToMasterInfo:(id)arg1;
- (id)defaultSlideNumberPlaceholderWithContext:(id)arg1;
- (id)defaultBodyPlaceholderWithContext:(id)arg1;
- (id)defaultTitlePlaceholderWithContext:(id)arg1;
- (void)setToMasterUsingBlob:(id)arg1;
- (void)setToMaster:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
@property(nonatomic) _Bool infoUsingObjectPlaceholderGeometryMatchesObjectPlaceholderGeometry;
@property(retain, nonatomic) TSDDrawableInfo *infoUsingObjectPlaceholderGeometry;
@property(retain, nonatomic) KNMasterSlide *master;
- (void)dealloc;
- (id)initWithSlideNode:(id)arg1 master:(id)arg2 andShow:(id)arg3;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct SlideArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct SlideArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)isComponentRoot;
- (id)packageLocator;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNSlideNode : TSPObject <TSKDocumentObject, TSKModel, TSKSearchTarget, TSCEResolverContainer>
{
    TSPLazyReference *mSlideReference;
    NSArray *mChildren;
    KNSlideNode *mParent;
    NSMutableDictionary *mThumbnails;
    _Bool mThumbnailsAreDirty;
    _Bool mIsHidden;
    _Bool mIsCollapsed;
    _Bool mIsCollapsedInOutlineView;
    _Bool mHasBodyInOutlineView;
    _Bool mHasTransition;
    _Bool mHasNote;
    _Bool mSlideNumberVisible;
    unsigned long long mSlideSpecificHyperlinksCount;
    _Bool mHasExplicitBuilds;
    unsigned long long mEventCount;
    NSString *mClassicUniqueID;
    NSString *mUniqueIdentifier;
    NSString *mCopiedFromSlideIdentifier;
    unsigned int mTableNameCounter;
}

+ (id)p_previousToSlideNode:(id)arg1;
+ (id)p_nextAfterSlideNode:(id)arg1;
+ (id)nodesAndDescendantsForNodes:(id)arg1 includeSkippedSlideNodes:(_Bool)arg2 includingCollapsedSlideNodes:(_Bool)arg3;
+ (id)nodesAndDescendantsForNodes:(id)arg1;
+ (id)slideNodeForSelectionModel:(id)arg1 withSelection:(id)arg2;
+ (id)parentSlideNodeForInfo:(id)arg1;
+ (id)lastSlideUnderSlideNode:(id)arg1;
+ (_Bool)needsObjectUUID;
@property(readonly, nonatomic) _Bool hasExplicitBuilds; // @synthesize hasExplicitBuilds=mHasExplicitBuilds;
@property(readonly, nonatomic) unsigned long long eventCount; // @synthesize eventCount=mEventCount;
@property(nonatomic, getter=isCollapsed) _Bool collapsed; // @synthesize collapsed=mIsCollapsed;
@property(readonly, nonatomic) NSDictionary *thumbnails; // @synthesize thumbnails=mThumbnails;
@property(nonatomic) KNSlideNode *parent; // @synthesize parent=mParent;
- (void)p_commonInit;
- (void)generateNewUniqueIdentifier;
- (id)copyForPasteboard:(id)arg1;
- (id)descendantsIncludingSkippedSlideNodes:(_Bool)arg1 includingCollapsedSlideNodes:(_Bool)arg2;
- (id)descendants;
- (void)p_addDescendantsToArray:(id)arg1 includeSkippedSlideNodes:(_Bool)arg2 includeCollapsedSlideNodes:(_Bool)arg3;
- (unsigned int)nextUntitledResolverIndex;
- (_Bool)resolverNameIsUsed:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1;
- (void)removeAllThumbnails;
- (void)removeThumbnailAtSize:(struct CGSize)arg1;
- (void)addThumbnail:(id)arg1 atSize:(struct CGSize)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
@property(nonatomic, getter=isHidden) _Bool hidden;
@property(retain, nonatomic) KNAbstractSlide *slide;
@property(readonly, nonatomic) KNAbstractSlide *slideIfLoaded;
- (id)childSearchTargets;
- (id)childEnumerator;
- (void)uniquifyTableNamesForUpgradeOrImport;
- (void)updateEventCount;
@property(readonly, nonatomic) _Bool hasBuildEvents;
@property(retain, nonatomic) NSArray *children;
@property(readonly, nonatomic) _Bool hasChildren;
@property(readonly, nonatomic) KNSlideNode *previousSkippingHidden;
@property(readonly, nonatomic) KNSlideNode *nextSkippingHidden;
@property(readonly, nonatomic) KNSlideNode *previousSkippingCollapsed;
@property(readonly, nonatomic) KNSlideNode *nextSkippingCollapsed;
@property(readonly, nonatomic) KNSlideNode *previous;
@property(readonly, nonatomic) KNSlideNode *next;
- (void)revert;
- (unsigned long long)depth;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
@property(retain, nonatomic) NSString *copiedFromSlideIdentifier;
@property(nonatomic) NSString *classicUniqueID;
@property(nonatomic) unsigned long long slideSpecificHyperlinksCount;
@property(nonatomic) _Bool isSlideNumberVisible;
@property(nonatomic) _Bool hasNote;
@property(nonatomic) _Bool hasTransition;
@property(nonatomic) _Bool hasBodyInOutlineView;
@property(nonatomic, getter=isCollapsedInOutlineView) _Bool collapsedInOutlineView;
@property(nonatomic) _Bool thumbnailsAreDirty;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct SlideNodeArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct SlideNodeArchive *)arg1 unarchiver:(id)arg2;
- (void)didLoadSlide:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionBlink : KNAnimationEffect <KNActionEffectBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationToLayer:(id)arg1 blinkCount:(double)arg2 duration:(double)arg3 minOpacity:(double)arg4 decreaseOpacityTiming:(id)arg5 increaseOpacityTiming:(id)arg6 result:(id)arg7;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNSlideBackgroundRep : TSDRep <TSDMagicMoveMatching>
{
    CALayer *mBlackBackgroundLayer;
    _Bool mLayerNeedsUpdate;
    _Bool mFillCanApplyToCALayer;
}

+ (id)magicMoveMatchesBetweenOutgoingObjects:(id)arg1 andIncomingObjects:(id)arg2 textureContext:(id)arg3;
- (id)textureForContext:(id)arg1;
- (_Bool)wantsToDistortWithImagerContext;
- (void)processChangedProperty:(int)arg1;
- (id)additionalLayersUnderLayer;
- (void)didUpdateLayer:(id)arg1;
- (int)tilingMode;
- (_Bool)directlyManagesLayerContent;
- (void)drawInContext:(struct CGContext *)arg1;
@property(readonly) KNSlideBackgroundInfo *slideBackgroundInfo;
- (_Bool)isOpaque;
- (_Bool)isSelectable;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNSlideBackgroundLayout : TSDLayout
{
}

- (_Bool)shouldProvideGuidesDuringExclusiveAlignmentOperation;

@end

__attribute__((visibility("hidden")))
@interface KNSlideNumberAttachment : TSWPPageNumberAttachment
{
}

+ (id)newObjectForUnarchiver:(id)arg1;
+ (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;
- (id)stringWithPageNumber:(unsigned long long)arg1 pageCount:(unsigned long long)arg2 charIndex:(unsigned long long)arg3;
- (_Bool)shouldArchiveStringEquivalent;
- (const struct TextualAttachmentArchive *)textualAttachmentArchiveFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildBlurTexture : NSObject
{
    _Bool _didTeardown;
    unsigned int _textureName;
    double _blurAmount;
    struct CGRect _frame;
    struct CGRect _bounds;
}

@property(nonatomic) double blurAmount; // @synthesize blurAmount=_blurAmount;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) unsigned int textureName; // @synthesize textureName=_textureName;
- (id)description;
- (void)dealloc;
- (void)teardown;
- (id)initWithTextureName:(unsigned int)arg1 frame:(struct CGRect)arg2 blurAmount:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNBuildBlur : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    TSDGLShader *_shader;
    NSMapTable *_blurTextures;
    NSMapTable *_dataBuffers;
    struct CATransform3D _projectionMatrix;
    struct CGRect _drawableFrame;
    struct CGRect _animationRect;
}

+ (void)addBlurTexturesToMapTable:(id)arg1 andDataBuffersToMapTable:(id)arg2 withTextures:(id)arg3 blurSteps:(unsigned long long)arg4 maxBlurRadius:(double)arg5 stepsToDecreaseRadius:(double)arg6 capabilities:(id)arg7;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupShadersWithContext:(id)arg1;
- (void)p_setupMVPMatricesWithContext:(id)arg1;
- (void)p_setupBlurTexturesWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNSlideNumberPlaceholderInfo : KNPlaceholderInfo
{
}

- (void)acceptVisitor:(id)arg1;
- (id)textureDeliveryStylesLocalized:(_Bool)arg1 animationFilter:(id)arg2;
- (id)localizedChunkNameForTextureDeliveryStyle:(unsigned long long)arg1 animationFilter:(id)arg2 chunkIndex:(unsigned long long)arg3;
- (id)instructionalText;
- (Class)layoutClass;
- (Class)repClass;
- (int)kind;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNSlideNumberPlaceholderLayout : KNPlaceholderLayout
{
}

@end

__attribute__((visibility("hidden")))
@interface KNSlideNumberPlaceholderRep : KNPlaceholderRep
{
}

+ (id)mixableObjectClasses;
- (_Bool)shouldBeginEditingOnSingleClick;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
- (_Bool)isDraggable;
- (_Bool)isSelectable;

@end

__attribute__((visibility("hidden")))
@interface KNSlideStyle : TSSStyle
{
}

+ (id)defaultValueForProperty:(int)arg1;
+ (id)defaultStyleWithContext:(id)arg1;
+ (id)propertiesAllowingNSNull;
+ (id)properties;
+ (void)createStylePresetInStylesheet:(id)arg1;
- (id)initWithContext:(id)arg1 name:(id)arg2 overridePropertyMap:(id)arg3 isVariation:(_Bool)arg4;
- (void)saveToArchive:(struct SlideStyleArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromArchive:(const struct SlideStyleArchive *)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveSlideStylePropertyMap:(id)arg1 toArchive:(struct SlideStylePropertiesArchive *)arg2 archiver:(id)arg3;
- (void)loadSlideStylePropertiesIntoPropertyMap:(id)arg1 fromArchive:(const struct SlideStylePropertiesArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNSlideTree : TSPContainedObject
{
    KNSlideNode *mRootSlideNode;
    NSMutableArray *mSlideNodeCache;
    NSMutableArray *mDisplayedSlideNodeCache;
    NSMutableDictionary *mSlideNodesForUniqueIdentifiersCache;
    NSMutableDictionary *mSlideNodesForFormulaReferenceNamesCache;
    TSUPointerKeyDictionary *mFormulaReferenceNamesForSlideNodesCache;
}

@property(retain, nonatomic) NSArray *displayedSlideNodes; // @synthesize displayedSlideNodes=mDisplayedSlideNodeCache;
- (void)p_cacheSlideNodes;
- (void)p_clearSlideNodeCache;
- (void)p_addSlideNodeAndDescendantsOfSlideNode:(id)arg1 toArray:(id)arg2 slideNodesForUniqueIdentifiersDictionary:(id)arg3 slideNodesForFormulaReferencesDictionary:(id)arg4 formulaReferenceNamesForSlideNodesDictionary:(id)arg5 visibleSlidesSoFar:(unsigned long long *)arg6 hiddenSlidesSoFar:(unsigned long long *)arg7;
- (void)p_addSlideNodeAndDescendantsOfSlideNode:(id)arg1 toArray:(id)arg2 slideNodesForUniqueIdentifiersDictionary:(id)arg3 slideNodesForFormulaReferencesDictionary:(id)arg4 formulaReferenceNamesForSlideNodesDictionary:(id)arg5;
- (void)invalidateSlideNameCache;
- (id)slideNamesMatchingPrefix:(id)arg1;
- (id)slideNodeForFormulaReferenceName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)formulaReferenceNameForSlideNode:(id)arg1;
- (id)slidesUsingMasterSlide:(id)arg1;
- (unsigned long long)numberOfSlidesUsingMasterSlide:(id)arg1;
- (void)slideIndex:(unsigned long long *)arg1 andEventIndex:(unsigned long long *)arg2 forByBuildPageIndex:(unsigned long long)arg3;
- (unsigned long long)byBuildPageIndexForSlideIndex:(unsigned long long)arg1 andEventIndex:(unsigned long long)arg2;
- (unsigned long long)visiblePageCountIsSeparatedByBuilds:(_Bool)arg1;
- (unsigned long long)slideNumberForSlideNode:(id)arg1;
- (id)slideNodeWithUniqueIdentifier:(id)arg1;
- (unsigned long long)indexOfSlideNode:(id)arg1;
- (id)slideNodeAtIndex:(unsigned long long)arg1 ignoreHiddenNodes:(_Bool)arg2;
- (id)unhiddenSlideNodeAtIndex:(unsigned long long)arg1;
- (void)removeAll;
- (void)reloadDisplayedNodes;
- (id)orderedSlideNodesInSelection:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleSlideNodes;
@property(readonly, nonatomic) NSArray *slideNodes;
- (void)addSlideNode:(id)arg1 atDepth:(int)arg2 dolcContext:(id)arg3;
- (void)removeSlideNode:(id)arg1 fromSlideNode:(id)arg2;
- (void)moveSlideNode:(id)arg1 inSlideNode:(id)arg2 toIndex:(unsigned long long)arg3;
- (void)insertSlideNode:(id)arg1 intoSlideNode:(id)arg2 atIndex:(unsigned long long)arg3 dolcContext:(id)arg4;
- (void)dealloc;
- (id)initWithOwner:(id)arg1;
@property(retain, nonatomic) KNSlideNode *rootSlideNode;
- (void)saveToArchive:(struct SlideTreeArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct SlideTreeArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNTheme : TSATheme <TSSPresetSource, TSKTransformableObject, TSKDocumentObject>
{
    NSString *mUUID;
    NSArray *mMasters;
    NSObject<OS_dispatch_queue> *mDefaultMasterSlideNodeQueue;
    TSUWeakReference *mDefaultMasterSlideNodeReference;
    _Bool mDefaultMasterSlideNodeIsOurBestGuess;
    long long mSlideStyleIndex;
    NSMutableArray *mClassicThemeRecords;
    NSMutableDictionary *mSlideNodesForFormulaReferenceNamesCache;
    TSUPointerKeyDictionary *mFormulaReferenceNamesForSlideNodesCache;
}

+ (void)bootstrapPresetsOfKind:(id)arg1 inTheme:(id)arg2 alternate:(int)arg3;
+ (id)presetKinds;
+ (void)registerPresetSourceClasses;
+ (id)themeNameForCustomOrUnknownTheme;
+ (id)classicThemeNameFromTheme:(id)arg1;
+ (id)nativeThemeNameFromTheme:(id)arg1;
+ (id)generateUUID;
+ (void)initialize;
@property(readonly, nonatomic) _Bool defaultMasterSlideNodeIsOurBestGuess; // @synthesize defaultMasterSlideNodeIsOurBestGuess=mDefaultMasterSlideNodeIsOurBestGuess;
@property(retain, nonatomic) NSArray *classicThemeRecords; // @synthesize classicThemeRecords=mClassicThemeRecords;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (id)modelPathComponentForChild:(id)arg1;
- (id)childEnumerator;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (void)p_cacheSlideNodes;
- (void)invalidateSlideNameCache;
- (id)slideNamesMatchingPrefix:(id)arg1;
- (id)slideNodeForFormulaReferenceName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)formulaReferenceNameForSlideNode:(id)arg1;
- (void)resolveDefaultMaster;
- (id)p_findDefaultMaster;
- (id)i_findDefaultMaster;
- (void)selectSecondMasterAsDefault;
- (void)p_selectSecondMasterAsDefault;
- (id)p_findSecondMaster;
- (void)removeAllClassicThemeRecords;
- (void)addClassicThemeRecord:(id)arg1;
- (void)addDefaultPresenterNotesStylesIfAbsent;
- (id)undeletableStyles;
- (id)mappedMasterForPasteForSlide:(id)arg1;
- (id)mappedMasterForThemeChangeForMaster:(id)arg1;
- (id)mappedMasterForPasteForMaster:(id)arg1;
- (id)p_mappedMasterForMaster:(id)arg1 scoringHeuristic:(CDUnknownBlockType)arg2;
- (int)p_matchScoreForMaster:(id)arg1 toMaster:(id)arg2;
- (void)removeAllMasters;
- (void)removeMasterSlideNode:(id)arg1;
- (id)nameForMasterCopyWithName:(id)arg1;
- (id)masterWithName:(id)arg1;
- (_Bool)containsMasterWithName:(id)arg1;
- (void)insertMasterSlideNode:(id)arg1 withThumbnails:(id)arg2 atIndex:(unsigned long long)arg3 dolcContext:(id)arg4;
- (void)addMasterSlideNode:(id)arg1 withThumbnails:(id)arg2 dolcContext:(id)arg3;
- (void)addMasterSlideNode:(id)arg1 dolcContext:(id)arg2;
@property(readonly, nonatomic) struct CGSize thumbnailSize;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)bootstrapWhiteThemeOfSize:(struct CGSize)arg1;
- (void)bootstrapGradientThemeOfSize:(struct CGSize)arg1;
- (void)bootstrapBlackThemeOfSize:(struct CGSize)arg1;
@property(readonly, nonatomic) double cornerRadius;
- (void)bootstrapThemeOfSize:(struct CGSize)arg1 alternate:(int)arg2;
@property(retain, nonatomic) KNSlideNode *defaultMasterSlideNode;
- (void)p_setDefaultMasterSlideNode:(id)arg1;
@property(retain, nonatomic) NSString *UUID;
@property(retain, nonatomic) NSArray *masters;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionPulse : KNAnimationEffect <KNActionEffectBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationsToLayer:(id)arg1 maxScale:(double)arg2 scaleMin:(double)arg3 scaleMinThreshold:(double)arg4 scaleMaxThreshold:(double)arg5 scaleDownTiming:(id)arg6 scaleUpTiming:(id)arg7 pulseCount:(double)arg8 duration:(double)arg9 result:(id)arg10;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionNull : KNAnimationEffect <KNTransitionAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionAttributes : KNAnimationAttributes
{
}

+ (_Bool)customAttributeKeyIsValid:(id)arg1;
+ (id)supportedCustomAttributes;
+ (id)defaultAttributesForEffect:(id)arg1;
+ (id)p_readDeprecatedAttributesForArchive:(const struct TransitionAttributesArchive *)arg1 intoDictionary:(id)arg2;
+ (void)p_readTransitionAttributesForArchive:(const struct TransitionAttributesArchive *)arg1 intoDictionary:(id)arg2;
+ (void)p_readSharedAttributesForArchive:(struct AnimationAttributesArchive *)arg1 intoDictionary:(id)arg2;
- (void)p_writeTransitionAttributesToArchive:(struct TransitionAttributesArchive *)arg1;
- (void)p_writeSharedAttributesToArchive:(struct TransitionAttributesArchive *)arg1;
- (void)encodeToArchive:(struct TransitionAttributesArchive *)arg1;
- (id)initFromTransitionAttributesArchive:(const struct TransitionAttributesArchive *)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNUIState : NSObject <NSCopying>
{
    KNSlideCollectionSelection *mSlideTreeSelection;
    double mIPadCanvasViewScale;
    struct CGPoint mIPadCanvasOffset;
    double mDesktopCanvasViewScale;
    struct CGPoint mDesktopCanvasOffset;
    _Bool mHasPhoneCanvasViewScale;
    double mPhoneCanvasViewScale;
    _Bool mHasPhoneCanvasOffset;
    struct CGPoint mPhoneCanvasOffset;
    _Bool mHasPhone568CanvasViewScale;
    double mPhone568CanvasViewScale;
    _Bool mHasPhone568CanvasOffset;
    struct CGPoint mPhone568CanvasOffset;
    KNMacUILayout *mDocumentUILayout;
    _Bool mSlideViewFitsContentInWindow;
    double mLightTableZoomScale;
    _Bool mLightTableHidesSkippedSlides;
    struct CGPoint mDesktopMainWindowOrigin;
    struct CGSize mDesktopMainContentSize;
    double mDesktopNavigatorViewWidth;
    double mDesktopOutlineViewWidth;
    double mDesktopPresenterNotesViewHeight;
    NSMutableDictionary *mChartUIState;
    NSSet *mCollapsedSlideNodes;
    _Bool mShowSlideGuides;
    _Bool mShowMasterGuides;
    _Bool mShowsComments;
    _Bool mShowsRuler;
}

@property(nonatomic) _Bool showsRuler; // @synthesize showsRuler=mShowsRuler;
@property(nonatomic) _Bool showsComments; // @synthesize showsComments=mShowsComments;
@property(nonatomic) _Bool showSlideGuides; // @synthesize showSlideGuides=mShowSlideGuides;
@property(nonatomic) _Bool showMasterGuides; // @synthesize showMasterGuides=mShowMasterGuides;
@property(copy, nonatomic) NSSet *collapsedSlideNodes; // @synthesize collapsedSlideNodes=mCollapsedSlideNodes;
@property(nonatomic) double desktopPresenterNotesHeight; // @synthesize desktopPresenterNotesHeight=mDesktopPresenterNotesViewHeight;
@property(nonatomic) double desktopOutlineViewWidth; // @synthesize desktopOutlineViewWidth=mDesktopOutlineViewWidth;
@property(nonatomic) double desktopNavigatorViewWidth; // @synthesize desktopNavigatorViewWidth=mDesktopNavigatorViewWidth;
@property(nonatomic) struct CGSize desktopMainContentSize; // @synthesize desktopMainContentSize=mDesktopMainContentSize;
@property(nonatomic) struct CGPoint desktopMainWindowOrigin; // @synthesize desktopMainWindowOrigin=mDesktopMainWindowOrigin;
@property(nonatomic) _Bool lightTableHidesSkippedSlides; // @synthesize lightTableHidesSkippedSlides=mLightTableHidesSkippedSlides;
@property(nonatomic) double lightTableZoomScale; // @synthesize lightTableZoomScale=mLightTableZoomScale;
@property(nonatomic) _Bool slideViewFitsContentInWindow; // @synthesize slideViewFitsContentInWindow=mSlideViewFitsContentInWindow;
@property(copy, nonatomic) KNMacUILayout *documentUILayout; // @synthesize documentUILayout=mDocumentUILayout;
@property(retain, nonatomic) KNSlideCollectionSelection *slideTreeSelection; // @synthesize slideTreeSelection=mSlideTreeSelection;
- (id).cxx_construct;
- (id)debugDescription;
- (id)archivedUIStateInContext:(id)arg1;
@property(nonatomic) struct CGPoint canvasOffset;
@property(nonatomic) double canvasViewScale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)saveToArchive:(struct UIStateArchive *)arg1 archiver:(id)arg2 context:(id)arg3;
- (void)loadFromArchive:(const struct UIStateArchive *)arg1 unarchiver:(id)arg2 context:(id)arg3;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (id)UIStateForChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNArchivedUIState : TSPObject
{
    KNUIState *mUIState;
}

@property(readonly, nonatomic) KNUIState *uiState; // @synthesize uiState=mUIState;
- (void)dealloc;
- (id)initWithUIState:(id)arg1 context:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNHLController : NSObject
{
}

+ (id)smartFieldForRep:(id)arg1 atUnscaledPoint:(struct CGPoint)arg2 outRep:(id *)arg3;
+ (_Bool)allowEditingOfDisplayText:(id)arg1;
+ (int)hyperlinkTypeFromHyperlinkURL:(id)arg1;
+ (_Bool)URLContainsKeynoteSpecificHyperlink:(id)arg1;
+ (id)uniqueIdentifierFromHyperlinkURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationPluginMenu : NSObject
{
    NSMutableDictionary *mLocalizedStringToDirectionMap;
    NSMutableDictionary *mDirectionToLocalizedStringMap;
    unsigned long long mDefaultDirection;
    NSMutableArray *mLocalizedDirections;
    NSMutableArray *mDirections;
}

+ (id)localizedStringForDirection:(unsigned long long)arg1 shortVersion:(_Bool)arg2;
+ (id)animationPluginMenu;
@property(nonatomic) unsigned long long defaultDirection; // @synthesize defaultDirection=mDefaultDirection;
@property(readonly, nonatomic) NSArray *directions; // @synthesize directions=mDirections;
@property(readonly, nonatomic) NSArray *localizedDirections; // @synthesize localizedDirections=mLocalizedDirections;
@property(readonly, nonatomic) unsigned long long count;
- (unsigned long long)directionForIndex:(unsigned long long)arg1;
- (unsigned long long)indexForDirection:(unsigned long long)arg1;
- (_Bool)containsDirection:(unsigned long long)arg1;
- (void)addDirection:(unsigned long long)arg1 useShortString:(_Bool)arg2;
- (void)addDirection:(unsigned long long)arg1 localizedMenuString:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface KNBuild : TSPObject <NSCopying, TSKTransformableObject, KNInspectableAnimation>
{
    NSArray *mCachedChunks;
    struct _NSRange mCachedActiveChunkRange;
    _Bool mCachedActiveChunkRangeIsValid;
    TSDDrawableInfo *mDrawable;
    NSString *mDelivery;
    KNBuildAttributes *mAttributes;
    KNAbstractSlide *mSlide;
}

+ (id)buildWithEffect:(id)arg1 animationType:(int)arg2 drawable:(id)arg3;
+ (id)menuAnimationInfosForDrawableInfo:(id)arg1 animationType:(int)arg2;
+ (id)supportedAnimationInfosForDrawableInfo:(id)arg1 animationType:(int)arg2;
+ (id)p_drawableFromInfo:(id)arg1;
+ (_Bool)p_shouldExcludeAnimationName:(id)arg1 forDrawable:(id)arg2;
+ (_Bool)needsObjectUUID;
@property(nonatomic) KNAbstractSlide *slide; // @synthesize slide=mSlide;
@property(readonly, nonatomic) _Bool canEditAnimations;
- (_Bool)p_supportsCustomTextDeliveryOptionsForAttributes:(id)arg1;
@property(readonly, nonatomic) NSSet *inspectableAttributes;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
@property(readonly, nonatomic) unsigned long long customJiggleIntensity;
@property(readonly, nonatomic) unsigned long long customScale;
@property(readonly, nonatomic) _Bool customDecay;
@property(readonly, nonatomic) unsigned long long customRepeatCount;
@property(readonly, nonatomic) _Bool customMotionBlur;
@property(readonly, nonatomic) _Bool customBounce;
@property(readonly, nonatomic) unsigned long long customDeliveryOption;
@property(readonly, nonatomic) long long customTextDelivery;
@property(readonly, nonatomic) float custom3DChartRotation;
@property(readonly, nonatomic) double actionOpacity;
@property(readonly, nonatomic) unsigned long long actionRotationDirection;
@property(readonly, nonatomic) double actionRotationAngle;
@property(readonly, nonatomic) double actionScale;
@property(readonly, nonatomic) TSDEditableBezierPathSource *actionMotionPathSource;
@property(readonly, nonatomic) unsigned long long actionAcceleration;
@property(readonly, nonatomic) TSUColor *color;
@property(readonly, nonatomic) unsigned long long direction;
@property(readonly, nonatomic) double durationDefaultForInitialChunk;
@property(readonly, nonatomic) int animationType;
@property(readonly, nonatomic) _Bool supportsCustomTextDelivery;
@property(readonly, nonatomic) _Bool supportsDelivery;
@property(readonly, nonatomic) _Bool supportsBounce;
@property(readonly, nonatomic) _Bool supportsDuration;
@property(readonly, nonatomic) _Bool supportsDirection;
@property(readonly, nonatomic) _Bool isEmphasisBuild;
@property(readonly, nonatomic) _Bool isActionMotionBuild;
@property(readonly, nonatomic) _Bool isActionBuild;
@property(readonly, nonatomic) _Bool hasComplement;
- (_Bool)hasComplementInBuilds:(id)arg1;
- (_Bool)isComplementOfBuild:(id)arg1;
@property(readonly, nonatomic) _Bool isFirst;
@property(readonly, nonatomic) unsigned long long indexOrderedByFirstChunk;
@property(readonly, nonatomic) unsigned long long index;
@property(readonly, nonatomic) NSString *title;
- (id)p_chunkTitleByTruncatingTitle:(id)arg1 toLength:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool hasInactiveChunks;
@property(readonly, nonatomic) unsigned long long lastActiveChunkIndexInBuild;
@property(readonly, nonatomic) unsigned long long firstActiveChunkIndexInBuild;
- (unsigned long long)endChunkIndexFromEndOffset:(unsigned long long)arg1;
- (struct _NSRange)p_calculateActiveChunkRange;
@property(readonly, nonatomic) struct _NSRange activeChunkRange;
@property(readonly, nonatomic) unsigned long long endOffset;
@property(readonly, nonatomic) unsigned long long startOffset;
@property(readonly, nonatomic) unsigned long long deliveryStyle;
@property(readonly, nonatomic) NSString *deliveryWithoutDowngrading;
@property(copy, nonatomic) NSString *delivery;
@property(readonly, nonatomic) _Bool downgradesDelivery;
- (id)deliveriesLocalized:(_Bool)arg1;
@property(readonly, nonatomic) KNBuildChunk *firstChunk;
@property(readonly, nonatomic) unsigned long long chunkCount;
@property(readonly, nonatomic) unsigned long long lastChunkIndexOnSlide;
@property(readonly, nonatomic) unsigned long long firstChunkIndexOnSlide;
- (id)p_chunkAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *chunks;
@property(readonly, nonatomic) NSString *animationFilter;
@property(readonly, nonatomic) NSString *localizedEffect;
@property(readonly, nonatomic) unsigned long long directionType;
@property(readonly, nonatomic) KNAnimationPluginMenu *directionMenu;
@property(readonly, nonatomic) KNAnimationInfo *animationInfo;
@property(copy, nonatomic) KNBuildAttributes *attributes;
@property(readonly, nonatomic) NSString *effect;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSlide:(id)arg1 effect:(id)arg2 buildType:(int)arg3 context:(id)arg4;
@property(retain, nonatomic) TSDDrawableInfo *drawable;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct BuildArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct BuildArchive *)arg1 unarchiver:(id)arg2;
- (void)i_invalidateChunkCache;
- (id)createNewChunks;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransition : TSPContainedObject <KNInspectableAnimation>
{
    KNTransitionAttributes *mAttributes;
}

+ (unsigned long long)directionTypeForEffect:(id)arg1;
+ (_Bool)hasDirectionOptionForEffect:(id)arg1;
@property(readonly, nonatomic) _Bool isMagicMove;
@property(readonly, nonatomic) _Bool canEditAnimations;
@property(readonly, nonatomic) NSSet *inspectableAttributes;
@property(readonly, nonatomic) long long customTextDelivery;
@property(readonly, nonatomic) _Bool customMagicMoveFadeUnmatchedObjects;
@property(readonly, nonatomic) long long customTimingCurve;
@property(readonly, nonatomic) _Bool customMotionBlur;
@property(readonly, nonatomic) _Bool customBounce;
@property(readonly, nonatomic) long long customMosaicType;
@property(readonly, nonatomic) long long customMosaicSize;
@property(readonly, nonatomic) float customTwist;
@property(readonly, nonatomic) TSUColor *color;
@property(readonly, nonatomic) double delay;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) _Bool hasAutomaticTrigger;
- (id)description;
@property(readonly, nonatomic) _Bool supportsBounce;
@property(readonly, nonatomic) _Bool supportsDuration;
@property(readonly, nonatomic) _Bool supportsDirection;
@property(readonly, nonatomic) unsigned long long direction;
@property(readonly, nonatomic) unsigned long long directionType;
@property(readonly, nonatomic) KNAnimationPluginMenu *directionMenu;
@property(readonly, nonatomic) NSArray *localizedEventTriggerNames;
@property(readonly, nonatomic) KNAnimationInfo *animationInfo;
@property(readonly, nonatomic) NSString *effect;
@property(copy, nonatomic) KNTransitionAttributes *attributes;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOwner:(id)arg1 attributes:(id)arg2;
- (id)initWithOwner:(id)arg1;
- (void)saveToArchive:(struct TransitionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct TransitionArchive *)arg1 unarchiver:(id)arg2 owner:(id)arg3;
- (unsigned long long)p_keynoteVersionFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNNoteInfo : TSPObject <TSDContainerInfo, TSWPStorageParent, TSKDocumentObject>
{
    NSObject<TSDContainerInfo> *mParentInfo;
    TSWPStorage *mContainedStorage;
    struct CGRect mFrameForPrinting;
    _Bool mShrinkTextForPrinting;
}

@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=mParentInfo;
@property(retain, nonatomic) TSWPStorage *containedStorage; // @synthesize containedStorage=mContainedStorage;
@property(nonatomic) _Bool shrinkTextForPrinting; // @synthesize shrinkTextForPrinting=mShrinkTextForPrinting;
@property(nonatomic) struct CGRect frameForPrinting; // @synthesize frameForPrinting=mFrameForPrinting;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) long long contentWritingDirection;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
- (_Bool)shouldHideEmptyBullets;
- (_Bool)textIsVertical;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (id)childEnumerator;
- (id)childInfos;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 containedStorage:(id)arg2;
- (void)saveToArchive:(struct NoteArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct NoteArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNNoteController : NSObject
{
}

+ (id)slideNodeForNoteSearchTarget:(id)arg1;
+ (unsigned long long)rootSearchTargetIndexForSlideNodeIndex:(unsigned long long)arg1 isEditingNote:(_Bool)arg2;
+ (unsigned long long)slideNodeIndexForRootSearchTargetIndex:(unsigned int)arg1;
+ (_Bool)isNoteAtRootSearchTargetIndex:(unsigned int)arg1;
+ (_Bool)isNoteSearchTarget:(id)arg1;
+ (id)noteSearchTargetForSlideNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNSlideBackgroundInfo : NSObject <TSDChangeableInfo, TSKDocumentObject, TSKTransformableObject>
{
    NSObject<TSDContainerInfo> *mParentInfo;
    TSDInfoGeometry *mGeometry;
    TSSPropertySetChangeDetails *mChanges;
    TSSStylesheet *mStylesheet;
    KNAbstractSlide *mSlide;
}

+ (id)backgroundWithSlide:(id)arg1 andGeometry:(id)arg2;
@property(readonly, nonatomic) KNAbstractSlide *slide; // @synthesize slide=mSlide;
@property(copy, nonatomic) TSDInfoGeometry *geometry; // @synthesize geometry=mGeometry;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=mParentInfo;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (id)commandForTransformingByTransform:(struct CGAffineTransform)arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect)arg4;
- (id)copyWithContext:(id)arg1;
- (struct CGSize)minimumSize;
- (id)endCollectingChanges;
- (void)willChangeProperty:(int)arg1;
- (void)beginCollectingChanges;
@property(readonly, nonatomic) _Bool isUserModifiable;
@property(readonly, nonatomic) TSDFill *fill;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (void)dealloc;
- (id)initWithSlide:(id)arg1 andGeometry:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) Class editorClass;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionClotheslinePush : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNPdfExporter : KNRenderingExporter <TSKEncryptedDocumentExporter>
{
    NSDictionary *mOptions;
}

- (void)setOptions:(id)arg1;
- (void)dealloc;
- (void)setCopyPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPrintPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPassphrase:(id)arg1 hint:(id)arg2;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingMovieEvent : KNRecordingEvent
{
    TSPLazyReference *mMovieInfoReference;
    long long mMovieEventType;
    double mMovieEventValue;
}

@property(readonly, nonatomic) double movieEventValue; // @synthesize movieEventValue=mMovieEventValue;
@property(readonly, nonatomic) long long movieEventType; // @synthesize movieEventType=mMovieEventType;
- (_Bool)isIgnoredWhenSeeking;
@property(readonly, nonatomic) _Bool stopsPlayback;
@property(readonly, nonatomic) _Bool startsPlayback;
@property(readonly, nonatomic) _Bool endsScrubbing;
@property(readonly, nonatomic) _Bool beginsScrubbing;
@property(readonly, nonatomic) double rate;
@property(readonly, nonatomic) double seekTime;
@property(readonly, nonatomic) TSDMovieInfo *movieInfo;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithStartTime:(double)arg1;
- (id)initWithStartTime:(double)arg1 endingScrubbingForMovieInfo:(id)arg2 withRate:(double)arg3;
- (id)initWithStartTime:(double)arg1 beginningScrubbingForMovieInfo:(id)arg2;
- (id)initWithStartTime:(double)arg1 stoppingPlaybackForMovieInfo:(id)arg2;
- (id)initWithStartTime:(double)arg1 startingPlaybackForMovieInfo:(id)arg2;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 rate:(double)arg3;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 seekTime:(double)arg3;
- (id)initWithStartTime:(double)arg1 movieInfo:(id)arg2 movieEventType:(long long)arg3 movieEventValue:(double)arg4;
- (void)saveToArchive:(struct RecordingEventArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNBuildTwistAndScale : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)requiresSingleTexturePerStage;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (id)p_animationGroupForTexture:(id)arg1 context:(id)arg2 isSingleObject:(_Bool)arg3 duration:(double)arg4;
- (struct CATransform3D)p_transform3DForTextureWithPercent:(double)arg1 scale:(double)arg2 startTime:(double)arg3 rotation:(double)arg4 globalRotationEndTime:(double)arg5 isOutgoing:(_Bool)arg6 offsetFromSlideCenter:(struct CGPoint)arg7 isGL:(_Bool)arg8 direction:(unsigned long long)arg9;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNPdfHandoutExporter : KNPdfExporter
{
    _Bool mPrintingRuledLines;
    _Bool mPrintingNotes;
    _Bool mPrintingDivider;
    _Bool mIsPrintingNote;
}

@property(nonatomic, getter=isPrintingDivider) _Bool printingDivider; // @synthesize printingDivider=mPrintingDivider;
@property(nonatomic, getter=isPrintingNotes) _Bool printingNotes; // @synthesize printingNotes=mPrintingNotes;
@property(nonatomic, getter=isPrintingRuledLines) _Bool printingRuledLines; // @synthesize printingRuledLines=mPrintingRuledLines;
- (void)p_drawNotesForNode:(id)arg1 index:(unsigned long long)arg2 forRect:(struct CGRect)arg3 unscaledClipRect:(struct CGRect)arg4 scaledClipRect:(struct CGRect)arg5 context:(struct CGContext *)arg6;
- (void)p_drawRuledLinesForRect:(struct CGRect)arg1 pageRect:(struct CGRect)arg2 numberOfLines:(unsigned long long)arg3 context:(struct CGContext *)arg4;
- (void)p_drawDividerLineForRect:(struct CGRect)arg1 pageRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)incrementPage;
- (id)currentInfos;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNPdfNoteExporter : KNPdfExporter
{
    _Bool mIsPrintingNote;
}

- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)incrementPage;
- (id)currentInfos;

@end

__attribute__((visibility("hidden")))
@interface KNPdfSlideExporter : KNSlideExporter <TSKEncryptedDocumentExporter>
{
}

- (void)setCopyPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPrintPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPassphrase:(id)arg1 hint:(id)arg2;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareTextureGenerator : NSObject
{
}

+ (void)addLayersWithTag:(id)arg1 plugin:(id)arg2 baseLayer:(id)arg3 backgroundLayer:(id)arg4 textures:(id)arg5 layerToOldHiddenValueMap:(id)arg6;
+ (void)p_setHidden:(_Bool)arg1 onLayer:(id)arg2 oldValueMap:(id)arg3;
+ (id)generateTexturesTagsAndAttributesForASV:(id)arg1 plugin:(id)arg2;
+ (void)p_addLayersForInfos:(id)arg1 tag:(id)arg2 isBackground:(_Bool)arg3 asv:(id)arg4 isIncoming:(_Bool)arg5 plugin:(id)arg6 addToTextures:(id)arg7 ignoreBuildVisibiility:(_Bool)arg8;
+ (void)p_addBlackBackgroundLayerWithTag:(id)arg1 asv:(id)arg2 plugin:(id)arg3 addToTextures:(id)arg4;
+ (void)p_preloadTexturesConcurrentlyWithInfos:(id)arg1 asv:(id)arg2 plugin:(id)arg3 ignoreBuildVisibiility:(_Bool)arg4 isIncoming:(_Bool)arg5;
+ (id)p_textureForRep:(id)arg1 info:(id)arg2 asv:(id)arg3 plugin:(id)arg4 ignoreBuildVisibiility:(_Bool)arg5 isIncoming:(_Bool)arg6;
+ (void)p_generateLayersForTexture:(id)arg1 tag:(id)arg2 isBackground:(_Bool)arg3 isMagicMove:(_Bool)arg4 addToTextures:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface KNNoteLayout : TSDLayout <TSKChangeSourceObserver, TSWPLayoutParent, TSWPColumnMetrics>
{
    struct CGSize mSizeOfScrollViewEnclosingCanvas;
    TSWPLayout *mContainedLayout;
    TSWPPadding *mPadding;
}

@property(readonly, nonatomic) TSWPLayout *containedLayout; // @synthesize containedLayout=mContainedLayout;
- (id).cxx_construct;
- (double)maxAutoGrowHeightForTextLayout:(id)arg1;
- (_Bool)supportsBoldItalicUnderlineShortcuts;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) double textScaleFactor;
- (double)textScaleFactorForPrinting;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (id)p_adjustedPaddingForBodyWidth:(double)arg1;
@property(readonly, nonatomic) TSWPPadding *padding;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange)arg2;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (id)childSearchTargets;
- (void)asyncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (id)layoutGeometryFromInfo;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (void)updateChildrenFromInfo;
- (void)createContainedLayoutForEditing;
- (void)p_setSizeOfScrollViewEnclosingCanvasFromLayoutController:(id)arg1;
- (void)sizeOfScrollViewEnclosingCanvasDidChange;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)invalidateSize;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (void)insertChild:(id)arg1 above:(id)arg2;
- (void)insertChild:(id)arg1 below:(id)arg2;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)setChildren:(id)arg1;
- (id)children;
- (id)computeLayoutGeometry;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionBounce : KNAnimationEffect <KNActionEffectBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
    double decayFactor;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationToLayer:(id)arg1 decay:(_Bool)arg2 bounceCount:(double)arg3 duration:(double)arg4 result:(id)arg5;
- (id)p_bounceArrayWithLayer:(id)arg1 duration:(double)arg2 numberOfBounces:(unsigned long long)arg3 decay:(_Bool)arg4;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildVanishBlurTexture : NSObject
{
    unsigned int _textureName;
    double _blurAmount;
    struct CGRect _frame;
    struct CGRect _bounds;
}

@property(nonatomic) double blurAmount; // @synthesize blurAmount=_blurAmount;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) unsigned int textureName; // @synthesize textureName=_textureName;
- (id)description;
- (void)teardown;
- (id)initWithTextureName:(unsigned int)arg1 frame:(struct CGRect)arg2 blurAmount:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNBuildVanish : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    TSDGLShader *_shader;
    NSMapTable *_blurTextures;
    NSMapTable *_dataBuffers;
    KNBuildVanishParticleSystem *_vanishParticleSystem;
    TSDGLShader *_vanishParticleShader;
    TSDGLTextureInfo *_particleTextureInfo;
    struct CATransform3D _projectionMatrix;
    struct CATransform3D _baseMatrix;
    struct CGRect _drawableFrame;
    struct CGRect _animationRect;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_drawParticleSystemsWithPercent:(double)arg1 sparkles:(_Bool)arg2 particleSystemOpacity:(double)arg3;
- (void)p_setupParticleSystemWithImage:(id)arg1 build:(id)arg2;
- (void)p_setupParticleTexture;
- (void)p_setupShadersWithContext:(id)arg1;
- (void)p_setupMVPMatricesWithContext:(id)arg1;
- (void)p_setupBlurTexturesWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildVanishParticleSystem : TSDGLParticleSystem
{
    double _randomParticleSpeedMax;
    CDStruct_083b1a49 _lifeSpan;
    double _maxSpeed;
    double _maxScale;
    double _minScale;
}

@property(nonatomic) double minScale; // @synthesize minScale=_minScale;
@property(nonatomic) double maxScale; // @synthesize maxScale=_maxScale;
@property(nonatomic) double maxSpeed; // @synthesize maxSpeed=_maxSpeed;
@property(nonatomic) CDStruct_b2fbf00d lifeSpan; // @synthesize lifeSpan=_lifeSpan;
@property(nonatomic) double randomParticleSpeedMax; // @synthesize randomParticleSpeedMax=_randomParticleSpeedMax;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSpin : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSpinByCharacter : KNBuildSpin
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildPop : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroupIn;
    KNAnimParameterGroup *mParameterGroupOut;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildPopByCharacter : KNBuildPop <KNAnimationPluginObsoleteNames>
{
}

+ (id)obsoleteAnimationNames;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDrift : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginDrift, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (_Bool)isDriftAnimation;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDriftByCharacter : KNBuildDrift
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildTypewriter : KNAnimationEffect <KNChunkableBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (unsigned long long)maxChunkCountToAnimate;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildTwirl : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSwoosh : KNAnimationEffect <KNChunkableBuildAnimator, KNAnimationPluginArchiving>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (struct CATransform3D)p_swooshTransformWithBoundingRect:(struct CGRect)arg1 percent:(double)arg2 direction:(unsigned long long)arg3;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSwooshByCharacter : KNBuildSwoosh
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSquish : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (id)p_bouncePointArrayForDuration:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionFlip : KNAnimationEffect <KNActionEffectBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (id)animationsForTextureSet:(id)arg1 context:(id)arg2;
- (void)p_addAnimationsForLayer:(id)arg1 duration:(double)arg2 endAngle:(double)arg3 result:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAppear : KNAnimationEffect <KNChunkableBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)maxChunkCountToAnimate;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAppearByCharacter : KNBuildAppear
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildMovieStart : KNBuildAppear
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (id)animationName;
+ (int)animationCategory;
- (id)animationsWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAudioStart : KNBuildMovieStart <KNAnimationPluginArchiving>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)localizedMenuString:(int)arg1;
+ (id)animationFilter;
+ (id)animationName;
+ (int)animationCategory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildBlast : KNAnimationEffect <KNChunkableBuildAnimator>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildBlinds : KNAnimationEffect <KNChunkableBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    NSMutableArray *_layerToOldParentArray;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)blindsAnimationsWithContext:(id)arg1 animationContext:(id)arg2 layerToOldParentArray:(id)arg3;
+ (id)layersFromParticles:(id)arg1 withBounds:(struct CGRect)arg2 mainLayer:(id)arg3 direction:(unsigned long long)arg4 animationContext:(id)arg5;
+ (id)generateParticles:(unsigned long long)arg1 withBounds:(struct CGRect)arg2 direction:(unsigned long long)arg3 animationContext:(id)arg4;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildBouncy : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (id)p_keyframeAnimationWithTR:(id)arg1 context:(id)arg2 chunks:(unsigned long long)arg3 thisBeginTime:(double)arg4 thisDuration:(double)arg5;
- (id)p_hopsArrayWithTexture:(id)arg1 numBounces:(long long)arg2 direction:(unsigned long long)arg3 duration:(double)arg4 isBuildIn:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildComet : KNAnimationEffect <KNChunkableBuildAnimator>
{
    NSMutableArray *mLayerToOldParentArray;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)addLayerWithImageRef:(struct CGImage *)arg1 toResultDictionary:(id)arg2 withLayer:(id)arg3 withParent:(id)arg4 duration:(double)arg5 isBuildIn:(_Bool)arg6 isVertical:(_Bool)arg7 opacity:(double)arg8 direction:(unsigned long long)arg9;
- (id)p_layerWithImage:(struct CGImage *)arg1 scale:(double)arg2 centeredAt:(struct CGPoint)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildCompress : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildCube : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildCubeByCharacter : KNBuildCube
{
}

+ (id)customAttributes;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNActionPop : KNAnimationEffect <KNActionEffectBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationsToLayer:(id)arg1 maxScale:(double)arg2 duration:(double)arg3 result:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSkid : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    KNBuildSkidSmokeSystem *_smokeSystem;
    TSDGLShader *_smokeShader;
    TSDGLTextureInfo *_smokeTexture;
}

+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (double)p_smokeOpacityAtSmokePercent:(double)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (id)p_keyframeAnimationsWithTR:(id)arg1 context:(id)arg2 actualBounds:(struct CGRect)arg3;
- (id)p_valuesArrayWithTR:(id)arg1 context:(id)arg2 actualBounds:(struct CGRect)arg3;
- (id)p_smokeSystemWithActualBounds:(struct CGRect)arg1 context:(id)arg2;
- (_Bool)p_shouldExtendToRightSideOfScreenWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSkidSmokeSystem : TSDGLParticleSystem
{
    _Bool _isOutgoing;
    double _moveDuration;
    double _smokeRotationMax;
    double _smokeLift;
    double _smokeScaleMax;
    double _smokeStartTime;
    double _smokeStartLocationPower;
    struct CGSize _smokeSpeedMax;
    struct CGRect _smokeLine;
}

+ (_Bool)useVisibilities;
+ (_Bool)willOverrideStartingPoints;
@property(nonatomic) _Bool isOutgoing; // @synthesize isOutgoing=_isOutgoing;
@property(nonatomic) double smokeStartLocationPower; // @synthesize smokeStartLocationPower=_smokeStartLocationPower;
@property(nonatomic) double smokeStartTime; // @synthesize smokeStartTime=_smokeStartTime;
@property(nonatomic) struct CGSize smokeSpeedMax; // @synthesize smokeSpeedMax=_smokeSpeedMax;
@property(nonatomic) double smokeScaleMax; // @synthesize smokeScaleMax=_smokeScaleMax;
@property(nonatomic) double smokeLift; // @synthesize smokeLift=_smokeLift;
@property(nonatomic) double smokeRotationMax; // @synthesize smokeRotationMax=_smokeRotationMax;
@property(nonatomic) struct CGRect smokeLine; // @synthesize smokeLine=_smokeLine;
@property(nonatomic) double moveDuration; // @synthesize moveDuration=_moveDuration;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (double)p_skidGlobalScale;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSkidByCharacter : KNBuildSkid
{
}

+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingPauseEvent : KNRecordingEvent
{
    long long mPauseEventType;
}

@property(readonly, nonatomic) long long pauseEventType; // @synthesize pauseEventType=mPauseEventType;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStartTime:(double)arg1;
- (id)initWithStartTime:(double)arg1 pauseEventType:(long long)arg2;
- (void)saveToArchive:(struct RecordingEventArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNVisitorHelper : NSObject
{
}

+ (id)commandGroupForSynchronizingPlaceholdersForSlide:(id)arg1 oldMasterSlidePropertySource:(id)arg2 newMasterSlidePropertySource:(id)arg3 alwaysMatchNewMaster:(_Bool)arg4 outNewZOrderArray:(id)arg5 outPlaceholdersForTags:(id)arg6;
+ (id)tagForInfo:(id)arg1 inAbstractSlidePropertySource:(id)arg2;
+ (_Bool)infoIsPlaceholder:(id)arg1 inAbstractSlidePropertySource:(id)arg2;
+ (id)infoInMasterSlidePropertySource:(id)arg1 correspondingToInfo:(id)arg2 inAbstractSlidePropertySource:(id)arg3;
+ (id)infoOnSlide:(id)arg1 correspondingToInfo:(id)arg2 inMasterPropertySource:(id)arg3;
+ (_Bool)info:(id)arg1 hasSamePlaceholderTypeAsInfo:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDissolve : KNAnimationEffect <KNChunkableBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDissolveByCharacter : KNBuildDissolve <KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)obsoleteAnimationNames;
+ (id)animationFilter;
+ (id)animationName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDrop : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *mMotionBlurWrapper;
    KNAnimParameterGroup *mParameterGroup;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)animationName;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (id)p_bounceAnimationWithBeginTime:(double)arg1 duration:(double)arg2 bounceHeight:(double)arg3;
- (id)p_bouncePointArrayForDuration:(double)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDropByCharacter : KNBuildDrop
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareCube : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFallApart : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (id)obsoleteAnimationNames;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlashBulbs : KNAnimationEffect <KNChunkableBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;
- (id)p_layerWithImage:(struct CGImage *)arg1 centeredAt:(struct CGPoint)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlip : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlipByCharacter : KNBuildFlip
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlyIn : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildOrbital : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildPivot : KNAnimationEffect <KNChunkableBuildAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildMoveIn : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (id)obsoleteAnimationNames;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildMoveInByCharacter : KNBuildMoveIn
{
}

+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildLensFlare : KNAnimationEffect <KNChunkableBuildAnimator>
{
    double mGlobalScale;
    double mGlobalDuration;
    NSMutableArray *mLayerToOldParentArray;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;
- (void)addLayerWithImageRef:(struct CGImage *)arg1 toResultDictionary:(id)arg2 withLayer:(id)arg3 minScale:(double)arg4 maxScale:(double)arg5 opacity:(double)arg6 translation:(double)arg7 rotation:(double)arg8 direction:(unsigned long long)arg9;
- (void)animationDidEndWithContext:(id)arg1;
- (double)stretchPercent:(double)arg1 toFill:(double)arg2;
- (id)p_layerWithImage:(struct CGImage *)arg1 scale:(double)arg2 centeredAt:(struct CGPoint)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildScaleBig : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (id)obsoleteAnimationNames;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildScaleBigByCharacter : KNBuildScaleBig
{
}

+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNBuildZoom : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildZoomByCharacter : KNBuildZoom
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionTwirl : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionSwoosh : KNAnimationEffect <KNTransitionAnimator, KNAnimationPluginArchiving>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionSwap : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionScale : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDriftAndScale : KNAnimationEffect <KNChunkableBuildAnimator, KNFrameBuildAnimator, KNAnimationPluginDrift, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *mParameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (_Bool)isDriftAnimation;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDriftAndScaleByCharacter : KNBuildDriftAndScale
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;
+ (id)animationFilter;
+ (id)animationName;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionRevolvingDoor : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    KNAnimParameterGroup *_parameterGroup;
    CALayer *_reflectionLayer;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)customAttributes;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionReveal : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionPush : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionPivot : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionReflection : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)p_animationWithStartAngle:(double)arg1 endAngle:(double)arg2 bounds:(struct CGRect)arg3 duration:(double)arg4 direction:(unsigned long long)arg5;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionMoveIn : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionMotionDissolve : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionMosaic : KNAnimationEffect <KNTransitionAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    NSMutableArray *_addedLayers;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)layersFromParticles:(id)arg1 mainLayer:(id)arg2;
- (id)shuffleParticles:(id)arg1 direction:(unsigned long long)arg2;
- (id)generateParticles:(long long)arg1 withBounds:(struct CGRect)arg2 direction:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNIrisBase : KNAnimationEffect <KNAnimationPluginArchiving>
{
    TSDGLShader *mQuadShader;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mOpaqueShader;
    TSDGLDataBuffer *mOpaqueDataBuffer;
    TSDGLShader *mFadeShader;
    TSDGLDataBuffer *mFadeDataBuffer;
    unsigned long long mNumDivisionsPerQuadrant;
    _Bool _isBuildOut;
    struct CGRect _frameRect;
    struct CGRect _drawableFrame;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)animationName;
+ (id)animationFilter;
+ (int)animationCategory;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupDataBuffersWithFrameRect:(struct CGRect)arg1 openFromCenter:(_Bool)arg2;
- (double)p_largestDividedAngleInRect:(struct CGRect)arg1;
- (double)p_angleFromQuadrant:(unsigned long long)arg1 inRect:(struct CGRect)arg2;
- (void)p_setupShaders;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionIris : KNIrisBase <KNFrameAnimator>
{
}

+ (id)defaultAttributes;
+ (id)supportedTypes;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildIris : KNIrisBase <KNFrameBuildAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)supportedTypes;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionFlop : KNAnimationEffect <KNFrameAnimator, KNAnimationPluginArchiving>
{
    TSDGLShader *_flopShader;
    TSDGLDataBuffer *_dataBuffer;
    NSArray *_colorBufferAttributes;
    NSArray *_shadowBufferAttributes;
    unsigned long long _colorPositionAttributeIndex;
    unsigned long long _colorTexCoordAttributeIndex;
    unsigned long long _colorNormalAttributeIndex;
    unsigned long long _colorPrevPositionAttributeIndex;
    unsigned long long _shadowPositionAttributeIndex;
    unsigned long long _shadowAlphaAttributeIndex;
    TSDGLShader *_shadowShader;
    TSDGLDataBuffer *_shadowDataBuffer;
    TSDGLDataBuffer *_quadDataBuffer;
    TSDGLDataBuffer *_nextQuadDataBuffer;
    TSDGLShader *_quadShader;
    TSDGLMotionBlurEffect *_motionBlurEffect;
    long long _numPoints;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)p_drawFlopVertical:(_Bool)arg1 texture:(id)arg2 oldTexture:(id)arg3;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)updateShadowWithTexture:(id)arg1 percent:(double)arg2 direction:(unsigned long long)arg3;
- (void)updateFlop:(id)arg1 withContext:(id)arg2;
- (void)createArrays:(id)arg1 context:(id)arg2;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionFlip : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)p_pullbackAnimationFromRotateAnimation:(id)arg1 startPullbackPercent:(double)arg2 endPullbackPercent:(double)arg3 cubeCenter:(double)arg4 pullbackAmount:(double)arg5 duration:(double)arg6;
- (double)p_pullbackPercentFromRotateAnimation:(id)arg1 atPercent:(double)arg2;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionFall : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionDrop : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)p_bouncePointArrayForDuration:(double)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionDoorway : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionDissolve : KNAnimationEffect <KNTransitionAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionCube : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)localizedMenuString:(int)arg1;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)p_animationsForStartAngle:(double)arg1 endAngle:(double)arg2 bounds:(struct CGRect)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 hasBounce:(_Bool)arg6;
- (id)p_pullbackAnimationFromRotateAnimation:(id)arg1 startPullbackPercent:(double)arg2 endPullbackPercent:(double)arg3 cubeCenter:(double)arg4 pullbackAmount:(double)arg5 duration:(double)arg6;
- (double)p_pullbackPercentFromRotateAnimation:(id)arg1 atPercent:(double)arg2;
- (id)p_interpolatedAnimationsWithStartAngle:(double)arg1 endAngle:(double)arg2 bounds:(struct CGRect)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 beginTime:(double)arg6;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNCommandSlideInsertBuildChunk : TSKCommand
{
    KNAbstractSlide *mSlide;
    KNBuildChunk *mBuildChunk;
    unsigned long long mIndex;
}

@property(readonly, nonatomic) unsigned long long index; // @synthesize index=mIndex;
@property(readonly, nonatomic) KNBuildChunk *buildChunk; // @synthesize buildChunk=mBuildChunk;
@property(readonly, nonatomic) KNAbstractSlide *slide; // @synthesize slide=mSlide;
- (id)description;
- (void)redo;
- (void)undo;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithSlide:(id)arg1 buildChunk:(id)arg2 atIndex:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionConfetti : KNAnimationEffect <KNFrameAnimator, KNAnimationPluginArchiving>
{
    TSDGLShader *mShader;
    KNBuildConfettiSystem *mParticleSystem;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mQuadShader;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupParticleSystemWithImage:(id)arg1 direction:(unsigned long long)arg2 duration:(double)arg3;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionBlinds : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
    NSMutableArray *_layerToOldParentArray;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNMagicMoveImpliedMotionPath : KNAnimationEffect <KNMagicMoveTransitionAnimator, KNMagicMoveFrameAnimator, KNAnimationPluginObsoleteNames, KNAnimationPluginArchiving>
{
    CDUnknownBlockType _motionBlurWrapperTextureDrawOptionsBlock;
    CDUnknownBlockType _motionBlurWrapperSetupShaderBlock;
    KNMotionBlurWrapper *_motionBlurWrapper;
    KNMagicMoveWrapper *_magicMoveWrapper;
    _Bool _isTextMorphEnabled;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)customAttributes;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)supportsMorphTextures;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)p_setupMagicMoveWrapperWithContext:(id)arg1;
- (_Bool)p_isTextMorphWithTR:(id)arg1 match:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareDissolveAndFlip : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationUtilsDefaultsTracker : NSObject
{
}

- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationUtils : NSObject
{
}

+ (void)getRecommendedPosition:(struct CGPoint *)arg1 andTransform:(struct CATransform3D *)arg2 toFitLayer:(id)arg3 inContainerWithBounds:(struct CGRect)arg4 contentsScale:(double)arg5;
+ (struct CGRect)recommendedLayerBoundsForPlaybackOfShow:(id)arg1 inContainerWithBounds:(struct CGRect)arg2 contentsScale:(double)arg3 isExternalDisplay:(_Bool)arg4;
+ (id)CAAccelerationFromSFXActionAcceleration:(unsigned long long)arg1;
+ (_Bool)isMotionBlurCapableWithAnimationContext:(id)arg1;
+ (_Bool)isMotionBlurBlacklistedWithCapabilities:(id)arg1;
+ (_Bool)shouldForceDisplayPreferredMode;
+ (_Bool)isSOATSAnimationTestingEnabled;
+ (_Bool)isDisplayLoggingEnabled;
+ (_Bool)isGLStateValidationEnabled;
+ (_Bool)isFPSGraphEnabled;
+ (_Bool)isFPSLoggingTimerDisabled;
+ (_Bool)isFPSLoggingEnabled;
+ (unsigned long long)randomBasicDirection;
+ (unsigned long long)randomDirection;
+ (unsigned long long)directionFromCustomAttributesDeliveryOption:(unsigned long long)arg1;
+ (id)customAttributesArrayWithJiggleIntensityOptions:(id)arg1;
+ (id)customAttributesArrayWithDeliveryOptions:(id)arg1;
+ (id)customAttributesArrayWithTextDeliveryOptions:(id)arg1;
+ (id)timingsArrayWithDirection:(unsigned long long)arg1 duration:(double)arg2 count:(unsigned long long)arg3 chunkDuration:(double)arg4 randomness:(double)arg5;
+ (void)initialize;
+ (void)updateDefaultsValues;

@end

__attribute__((visibility("hidden")))
@interface KNNoteRep : TSDRep <TSDContainerRep, TSWPStorageObserver>
{
    TSWPRep *mContainedRep;
}

@property(readonly, nonatomic) TSWPRep *containedRep; // @synthesize containedRep=mContainedRep;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)willEndEditingContainedRep;
- (void)willBeginEditingContainedRep;
@property(readonly, nonatomic) NSObject<TSDContainerInfo> *containerInfo;
- (void)recursivelyPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelector:(SEL)arg1;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1 withObject:(id)arg2;
- (void)recursivelyPerformSelectorIfImplemented:(SEL)arg1;
- (id)editingRep;
- (double)columnHeight;
- (id)hitRep:(struct CGPoint)arg1;
- (id)childReps;
- (void)updateChildrenFromLayout;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (_Bool)canSelectChildRep:(id)arg1;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (void)selectChildRep:(id)arg1;
- (void)willBeRemoved;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimatedSlideModel : NSObject
{
    KNAnimatedSlideView *_ASV;
    NSArray *_infos;
    KNPlaybackSession *_session;
    NSMutableArray *_buildEvents;
    NSMutableArray *_animatedBuilds;
    TSUNoCopyDictionary *_infoToAnimatedBuildMap;
    TSUNoCopyDictionary *_animatedBuildToRendererMap;
    unsigned long long _numberOfAddedEvents;
}

@property(nonatomic) unsigned long long numberOfAddedEvents; // @synthesize numberOfAddedEvents=_numberOfAddedEvents;
@property(readonly, nonatomic) NSArray *animatedBuilds; // @synthesize animatedBuilds=_animatedBuilds;
- (void)p_insertInitialMovies;
- (id)p_createInfoListFromRendererList:(id)arg1;
- (_Bool)p_determineVisiblityOfInfo:(id)arg1 inOverloadedEvent:(long long)arg2 duringEvent:(long long)arg3;
- (id)p_createBuildAnimationRecords:(id)arg1 info:(id)arg2 event:(long long)arg3 start:(double)arg4 eventStart:(double)arg5 animateAtEndOfPreviousBuild:(_Bool)arg6 previousAnimatedBuild:(id)arg7 movieDrawables:(id)arg8;
- (void)p_setRenderer:(id)arg1 forAnimatedBuild:(id)arg2;
- (id)rendererForAnimatedBuild:(id)arg1;
- (id)p_createMovieBuild:(id)arg1 stageIndex:(long long)arg2 buildChunk:(id)arg3 startTime:(double)arg4 eventStartTime:(double)arg5 event:(long long)arg6 animateAtEndOfPreviousBuild:(_Bool)arg7;
- (id)p_convertToBuildEvents:(id)arg1;
- (void)p_updateVisibilityOnAnimatedBuild:(id)arg1;
- (void)p_updatePreviousAndFinalAttributes;
- (id)p_animatedBuildForInfo:(id)arg1 event:(long long)arg2 buildIn:(_Bool)arg3;
@property(readonly, nonatomic, getter=isFirstBuildEventAutomatic) _Bool firstBuildEventAutomatic;
- (double)maxScaleFactorForDrawable:(id)arg1;
- (id)finalActionEffectForDrawable:(id)arg1;
- (id)actionEffectForDrawable:(id)arg1 atBeginningOfEvent:(long long)arg2;
- (id)previousBuildInForInfo:(id)arg1 priorToBuild:(id)arg2;
- (id)previousAnimatedBuildForInfo:(id)arg1 priorToBuild:(id)arg2;
- (id)animatedBuildForInfo:(id)arg1 atEvent:(long long)arg2;
- (id)animatedBuildForInfo:(id)arg1 aroundEvent:(long long)arg2 isAtEndOfBuild:(_Bool *)arg3;
- (id)lastAnimatedBuildForInfo:(id)arg1;
- (id)firstAnimatedBuildForInfo:(id)arg1;
- (struct _NSRange)eventRangeForInfos:(id)arg1;
- (double)initialDelayForEventIndex:(unsigned long long)arg1;
- (double)durationForEventIndexes:(id)arg1;
- (id)buildChunksForEventRange:(struct _NSRange)arg1;
- (long long)outEventForInfo:(id)arg1;
- (long long)inEventForInfo:(id)arg1;
- (long long)p_eventNumberForInfo:(id)arg1 animationType:(int)arg2 defaultResult:(long long)arg3;
- (_Bool)info:(id)arg1 isVisibleDuringEvent:(long long)arg2;
- (void)enumerateAnimatedBuildsAndTimeRangesAtIndex:(unsigned long long)arg1 ignoreInitialDelay:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateAnimatedBuildsAndTimeRangesAtIndex:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)eventsAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)transition;
- (id)createInfoToBuildMap:(id)arg1;
- (void)setTransition:(id)arg1;
- (void)dealloc;
- (id)initWithBuildChunks:(id)arg1 infos:(id)arg2 session:(id)arg3 animatedSlideView:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNRecording : TSPObject
{
    NSArray *mEventTracks;
    KNRecordingMovieTrack *mMovieTrack;
    double mDuration;
    NSDate *mModificationDate;
    _Bool mInSyncWithShow;
}

@property(readonly, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=mModificationDate;
@property(readonly, nonatomic, getter=isInSyncWithShow) _Bool inSyncWithShow; // @synthesize inSyncWithShow=mInSyncWithShow;
@property(readonly, nonatomic) double duration; // @synthesize duration=mDuration;
@property(readonly, nonatomic) KNRecordingMovieTrack *movieTrack; // @synthesize movieTrack=mMovieTrack;
@property(readonly, nonatomic) NSArray *eventTracks; // @synthesize eventTracks=mEventTracks;
- (id)recordingByMarkingAsOutOfSyncWithShow;
- (id)recordingByReplacingSegmentAfterTime:(double)arg1 withRecording:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 eventTracks:(id)arg2 movieTrack:(id)arg3 duration:(double)arg4;
- (id)initWithContext:(id)arg1 eventTracks:(id)arg2 movieTrack:(id)arg3 duration:(double)arg4 modificationDate:(id)arg5;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct RecordingArchive *)arg1 archiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingMovieTrack : TSPObject
{
    NSArray *mMovieSegments;
}

@property(readonly, nonatomic) NSArray *movieSegments; // @synthesize movieSegments=mMovieSegments;
- (id)movieTrackByReplacingSegmentAfterTime:(double)arg1 withMovieTrack:(id)arg2;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 movieSegments:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct RecordingMovieTrackArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct RecordingMovieTrackArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNAnimatedBuild : NSObject
{
    _Bool _automatic;
    _Bool _animateAtEndOfPreviousBuild;
    _Bool _isMovieStartBuild;
    _Bool _isVisibleAtBeginning;
    _Bool _isVisibleAtEnd;
    int _buildType;
    long long _eventIndex;
    long long _stageIndex;
    unsigned long long _direction;
    unsigned long long _deliveryOption;
    unsigned long long _deliveryStyle;
    Class _pluginClass;
    KNBuildAttributes *_attributes;
    double _startTime;
    double _eventStartTime;
    double _duration;
    double _endTime;
    double _eventEndTime;
    NSDictionary *_previousAttributes;
    NSDictionary *_finalAttributes;
}

@property(copy, nonatomic) NSDictionary *finalAttributes; // @synthesize finalAttributes=_finalAttributes;
@property(copy, nonatomic) NSDictionary *previousAttributes; // @synthesize previousAttributes=_previousAttributes;
@property(nonatomic) _Bool isVisibleAtEnd; // @synthesize isVisibleAtEnd=_isVisibleAtEnd;
@property(nonatomic) _Bool isVisibleAtBeginning; // @synthesize isVisibleAtBeginning=_isVisibleAtBeginning;
@property(nonatomic) _Bool isMovieStartBuild; // @synthesize isMovieStartBuild=_isMovieStartBuild;
@property(nonatomic) _Bool animateAtEndOfPreviousBuild; // @synthesize animateAtEndOfPreviousBuild=_animateAtEndOfPreviousBuild;
@property(readonly, nonatomic) _Bool automatic; // @synthesize automatic=_automatic;
@property(readonly, nonatomic) double eventEndTime; // @synthesize eventEndTime=_eventEndTime;
@property(readonly, nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) double eventStartTime; // @synthesize eventStartTime=_eventStartTime;
@property(readonly, nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic) KNBuildAttributes *attributes; // @synthesize attributes=_attributes;
@property(readonly, nonatomic) Class pluginClass; // @synthesize pluginClass=_pluginClass;
@property(readonly, nonatomic) unsigned long long deliveryStyle; // @synthesize deliveryStyle=_deliveryStyle;
@property(readonly, nonatomic) unsigned long long deliveryOption; // @synthesize deliveryOption=_deliveryOption;
@property(readonly, nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(readonly, nonatomic) long long stageIndex; // @synthesize stageIndex=_stageIndex;
@property(nonatomic) long long eventIndex; // @synthesize eventIndex=_eventIndex;
@property(readonly, nonatomic) int buildType; // @synthesize buildType=_buildType;
@property(readonly, nonatomic) _Bool isMagicChartBuild;
@property(readonly, nonatomic) _Bool isDriftBuild;
@property(readonly, nonatomic) _Bool isEmphasisBuild;
@property(readonly, nonatomic) _Bool isActionBuild;
@property(readonly, nonatomic) _Bool isBuildOut;
@property(readonly, nonatomic) _Bool isBuildIn;
- (id)description;
- (void)dealloc;
- (id)initWithBuildType:(int)arg1 attributes:(id)arg2 pluginClass:(Class)arg3 deliveryStyle:(unsigned long long)arg4 eventIndex:(long long)arg5 stageIndex:(long long)arg6 startTime:(double)arg7 eventStartTime:(double)arg8 duration:(double)arg9 direction:(unsigned long long)arg10 automatic:(_Bool)arg11 animateAtEndOfPreviousBuild:(_Bool)arg12;

@end

__attribute__((visibility("hidden")))
@interface KNBuildTraceDrawObject : NSObject
{
    _Bool _isExtraObject;
    TSDTexturedRectangle *_tr;
    TSDGLEdgeDistanceFieldTraceEffect *_traceEffect;
    TSDGLDataBuffer *_dataBuffer;
    TSDGLShader *_extraObjectShader;
    CDStruct_6e3f967a _extraObjectTextureSize;
    struct {
        float r;
        float g;
        float b;
        float a;
    } _color;
    struct CGPoint _timing;
    struct CATransform3D _MVPMatrix;
}

+ (id)traceDrawObject;
@property(nonatomic) CDStruct_b2fbf00d extraObjectTextureSize; // @synthesize extraObjectTextureSize=_extraObjectTextureSize;
@property(nonatomic) TSDGLShader *extraObjectShader; // @synthesize extraObjectShader=_extraObjectShader;
@property(nonatomic) _Bool isExtraObject; // @synthesize isExtraObject=_isExtraObject;
@property(nonatomic) struct CGPoint timing; // @synthesize timing=_timing;
@property(nonatomic) CDStruct_818bb265 color; // @synthesize color=_color;
@property(nonatomic) struct CATransform3D MVPMatrix; // @synthesize MVPMatrix=_MVPMatrix;
@property(retain, nonatomic) TSDGLDataBuffer *dataBuffer; // @synthesize dataBuffer=_dataBuffer;
@property(retain, nonatomic) TSDGLEdgeDistanceFieldTraceEffect *traceEffect; // @synthesize traceEffect=_traceEffect;
@property(retain, nonatomic) TSDTexturedRectangle *tr; // @synthesize tr=_tr;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNBuildTrace : KNAnimationEffect <KNFrameBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
    TSDGLShader *_objectShader;
    TSDGLShader *_circleShader;
    TSDGLShader *_lineShader;
    NSMutableArray *_traceDrawObjects;
    struct CGRect _drawableFrame;
    struct CGRect _animationRect;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)p_extraTraceObjectsWithContext:(id)arg1 originalTraceObjects:(id)arg2;
- (void)p_setupShaders;
- (void)p_setupTraceEffectsWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionRenderer : KNAnimationRenderer
{
    NSMutableArray *mTextures;
    long long mNumberOfAnimationsStarted;
    NSDictionary *mAnimatedLayers;
    _Bool mOutgoingSlideRendered;
    _Bool mShouldAnimateTransition;
    _Bool mAnimationsRanToCompletion;
    NSDictionary *mAttributes;
    id mTransitionEndCallbackTarget;
    SEL mTransitionEndCallbackSelector;
    id mTransitionImmediateEndCallbackTarget;
    SEL mTransitionImmediateEndCallbackSelector;
    CALayer *mBackgroundLayer;
    TSDFPSCounter *mFPSCounter;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)resumeAnimationsIfPausedAtTime:(double)arg1;
- (void)pauseAnimationsAtTime:(double)arg1;
- (void)stopAnimations;
- (void)forceRemoveAnimations;
- (void)removeAnimationsAndFinish:(_Bool)arg1;
- (void)p_reset;
- (void)p_removeAnimationsOnAnimatedLayers;
- (void)updateAnimationsForLayerTime:(double)arg1;
- (_Bool)p_addAnimations:(id)arg1 atTime:(double)arg2 relativeToCurrentMediaTime:(_Bool)arg3;
- (_Bool)addAnimationsAtTime:(double)arg1 relativeToCurrentMediaTime:(_Bool)arg2;
- (void)animateWithDelay:(double)arg1;
- (void)renderOutgoingSlideAndPrecacheIncomingSlide;
- (void)renderSlideIndex:(unsigned long long)arg1;
- (void)setupLayerTreeForTransition;
- (void)p_generateLayers;
- (id)description;
- (void)p_checkForNullTransitions:(Class)arg1;
- (void)registerForTransitionImmediateEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForTransitionEndCallback:(SEL)arg1 target:(id)arg2;
- (void)setupPluginContext;
- (id)plugin;
- (void)teardownTransitionIsExitingShow:(_Bool)arg1;
- (void)teardown;
- (void)dealloc;
- (id)initWithEffectClass:(Class)arg1 direction:(unsigned long long)arg2 duration:(double)arg3 session:(id)arg4 attributes:(id)arg5 animatedSlideView:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface KNBuildRenderer : KNAnimationRenderer
{
    long long mNumberOfAnimationsStarted;
    NSDictionary *mAnimatedLayers;
    CALayer *mParentLayer;
    id mBuildEndCallbackTarget;
    SEL mBuildEndCallbackSelector;
    NSMutableArray *mAnimatedBuildsToStartAtEnd;
    TSDTextureSet *mTextureSet;
    TSDTextureSet *mFinalAttributesTextureSet;
    KNAnimationInfo *mAnimationInfo;
    KNAnimatedBuild *mAnimatedBuild;
    KNBuildChunk *mBuildStage;
    TSDDrawableInfo *mInfo;
    _Bool mIsPreview;
    _Bool mInterrupted;
    _Bool mIsAnimationForPlayback;
    _Bool mAreAnimationsPrepared;
    _Bool mUsingFinalTexture;
    _Bool mIsTextureCachedAtEndOfBuild;
    _Bool mShouldUseMagicMoveTextures;
    _Bool mIsNonCachedTextureValid;
    TSDFPSCounter *mFPSCounter;
    TSDTextureContext *mTextureContext;
}

@property(retain, nonatomic) TSDTextureContext *textureContext; // @synthesize textureContext=mTextureContext;
@property(retain, nonatomic) CALayer *parentLayer; // @synthesize parentLayer=mParentLayer;
@property(readonly, nonatomic) TSDDrawableInfo *info; // @synthesize info=mInfo;
@property(readonly, nonatomic) KNBuildChunk *buildStage; // @synthesize buildStage=mBuildStage;
@property(readonly, nonatomic) NSArray *animatedBuildsToStartAtEnd; // @synthesize animatedBuildsToStartAtEnd=mAnimatedBuildsToStartAtEnd;
@property(readonly, nonatomic) KNAnimatedBuild *animatedBuild; // @synthesize animatedBuild=mAnimatedBuild;
- (_Bool)p_isPDFOutput;
- (void)p_resetAnimations;
- (void)resetTexture;
- (void)p_removeAnimations;
- (void)resetPreviousStageUnhighlightOnTextureSet:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)p_keyForAnimation;
- (id)setupFinalTextureGivenCurrentTextureSet:(id)arg1;
- (void)setVisibilityAndGeometryOn:(id)arg1 withFinalTextureSet:(id)arg2;
- (_Bool)p_isDriftAnimation;
- (void)fadeOutPreviousStageOn:(id)arg1 atLayerTime:(double)arg2;
- (void)addBuildToStartAtEnd:(id)arg1;
- (void)resumeAnimationsIfPausedAtTime:(double)arg1;
- (void)pauseAnimationsAtTime:(double)arg1;
- (void)stopAnimations;
- (unsigned long long)stageIndex;
@property(readonly, nonatomic) unsigned long long textureDeliveryStyle;
- (void)registerForBuildEndCallback:(SEL)arg1 target:(id)arg2;
- (void)forceRemoveAnimations;
- (void)removeAnimationsAndFinish:(_Bool)arg1;
- (void)updateAnimationsForLayerTime:(double)arg1;
- (_Bool)addAnimationsAtLayerTime:(double)arg1;
- (void)resetHighlightsBeforeAnimationOnTextureSet:(id)arg1;
- (void)prepareAnimations;
- (id)initializeTextureSetForEndOfBuild:(_Bool)arg1 endOfSlide:(_Bool)arg2 context:(id)arg3 isRenderingToContext:(_Bool)arg4;
- (id)initializeTextureSetForEndOfBuild:(_Bool)arg1 endOfSlide:(_Bool)arg2 isRenderingToContext:(_Bool)arg3;
- (void)animateAfterDelay:(double)arg1;
- (void)setLayerVisibility:(id)arg1 isAtEndOfBuild:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isTextDrawable;
- (id)p_textureSetForStage:(long long)arg1 context:(id)arg2 isAtEndOfBuild:(_Bool)arg3 shouldForceRebuild:(_Bool)arg4 shouldRender:(_Bool)arg5;
- (id)p_textureSetForStage:(long long)arg1 context:(id)arg2 isAtEndOfBuild:(_Bool)arg3 shouldForceRebuild:(_Bool)arg4;
- (id)textureSetForStage:(long long)arg1 context:(id)arg2 shouldForceRebuild:(_Bool)arg3;
- (id)textureSetForStage:(long long)arg1 context:(id)arg2;
@property(readonly, nonatomic) TSDTextureSet *nonCachedTextureSet;
- (id)textureSetWithoutRenderedContents;
@property(readonly, nonatomic) TSDTextureSet *textureSet;
- (id)p_filterForTextDelivery:(long long)arg1;
- (_Bool)p_isMovieInfo;
@property(readonly, nonatomic) TSDRep *rep;
- (void)setupPluginContext;
- (id)loadPluginIfNeeded;
- (id)description;
- (void)dealloc;
- (id)initWithAnimatedBuild:(id)arg1 info:(id)arg2 buildStage:(id)arg3 session:(id)arg4 animatedSlideView:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationRenderer : NSObject
{
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mASV;
    _Bool mAreAnimationsPaused;
    id mPlugin;
    Class mPluginClass;
    unsigned long long mDirection;
    double mDuration;
    id <KNAnimationPluginContext> _pluginContext;
}

@property(readonly, nonatomic) id <KNAnimationPluginContext> pluginContext; // @synthesize pluginContext=_pluginContext;
@property(readonly, nonatomic) Class pluginClass; // @synthesize pluginClass=mPluginClass;
@property(readonly, nonatomic) id plugin; // @synthesize plugin=mPlugin;
@property(nonatomic) double duration; // @synthesize duration=mDuration;
@property(nonatomic) unsigned long long direction; // @synthesize direction=mDirection;
- (void)dealloc;
- (void)resumeAnimationsIfPausedAtTime:(double)arg1;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimationsAtTime:(double)arg1;
- (void)pauseAnimations;
- (void)stopAnimations;
- (void)setupPluginContext;

@end

__attribute__((visibility("hidden")))
@interface KNWipeDataBuffer : NSObject
{
    unsigned long long mDirection;
    double mBlurFraction;
    struct CATransform3D mMVPMatrix;
    struct CGRect mVertexRect;
    struct CGRect mTextureRect;
    TSDGLDataBufferAttribute *mSolidPositionAttribute;
    TSDGLDataBufferAttribute *mSolidTexCoordAttribute;
    TSDGLDataBuffer *mSolidDataBuffer;
    TSDGLShader *mSolidShader;
    TSDGLDataBufferAttribute *mWipePositionAttribute;
    TSDGLDataBufferAttribute *mWipeTexCoordAttribute;
    TSDGLDataBufferAttribute *mWipeOpacityAttribute;
    TSDGLDataBuffer *mWipeDataBuffer;
    TSDGLShader *mWipeShader;
}

@property(nonatomic) struct CATransform3D MVPMatrix; // @synthesize MVPMatrix=mMVPMatrix;
@property(nonatomic) double blurFraction; // @synthesize blurFraction=mBlurFraction;
@property(nonatomic) unsigned long long direction; // @synthesize direction=mDirection;
- (void)drawWipeWithPercent:(double)arg1 opacity:(double)arg2;
- (void)updateWipeWithPercent:(double)arg1 solidVertexCount:(unsigned long long *)arg2 wipeVertexCount:(unsigned long long *)arg3;
- (void)p_updateVertexInBuffer:(id)arg1 atIndex:(unsigned long long)arg2 x:(double)arg3 y:(double)arg4 opacity:(double)arg5;
- (CDStruct_b2fbf00d)p_texCoordFromX:(double)arg1 y:(double)arg2;
- (void)dealloc;
- (id)initWithVertexRect:(struct CGRect)arg1 textureRect:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNAppDelegateBase : TSABaseApplicationDelegate
{
    _Bool _cachedBidiIsSupported;
}

- (void)p_inputMethodsChanged:(id)arg1;
- (_Bool)supportsRTL;
- (void)applicationDidFinishLaunching;
- (id)defaultHyperlinkURL;
- (_Bool)URLIsValidForImportedHyperlink:(id)arg1;
- (id)invalidURLSchemes;
- (void)wakeUpDownloadManager;
- (void)registerAllowedElementKinds;
- (void)registerClassTypeMappings;
- (double)maximumAspectRatioForPreviewImage;
- (double)mimimumAspectRatioForPreviewImage;
- (id)templateTypeDisplayName;
- (id)documentTypeDisplayName;
- (id)applicationName;
- (id)nativeSFFDocumentType;
- (id)tangierEditingFormatDocumentType;
- (id)templateSFFDocumentType;
- (id)templateDocumentType;
- (id)nativeDocumentType;
- (id)previewImageNameForEncryptedNativeDocument;
- (id)previewImageNameForNativeDocument;
- (id)previewImageNameForDocumentType:(id)arg1;
- (id)appChartPropertyOverrides;
- (id)applicationTemplateVariantsForLocale:(struct __CFLocale *)arg1;
- (id)createCompatibilityDelegate;
@property(readonly, nonatomic) NSArray *powerPointDocumentTypes;
- (id)importableDocumentTypes;
- (Class)documentRootClass;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface KNAnimatedOffscreenPlaybackController : NSObject <TSDCanvasDelegate>
{
    KNDocumentRoot *mDocumentRoot;
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mAnimator;
    NSMutableSet *mActiveBuildRenderers;
    NSMutableSet *mMovieRenderers;
    TSUMutableRetainedPointerSet *mBuildRenderersToAnimateAtEndOfFinishedBuilds;
    double mCurrentEventAnimationsStartTime;
    double mCurrentEventAnimationsNonDelayedEndTime;
    double mCurrentEventAnimationsDelay;
    double mCurrentEventPauseStartTime;
    long long mConcealingStyle;
    CALayer *mConcealingLayer;
    _Bool mIsAnimating;
    _Bool mIsPaused;
}

@property(readonly, nonatomic) NSSet *movieRenderers; // @synthesize movieRenderers=mMovieRenderers;
@property(readonly, nonatomic) KNDocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
- (void)updateMovieRenderersForLayerTime:(double)arg1;
- (void)p_animateConcealingLayerToOpacity:(float)arg1 fromDefaultOpacity:(float)arg2 atTime:(double)arg3;
- (void)p_updateConcealingStyle:(long long)arg1 atTime:(double)arg2;
- (void)resumeCurrentEventAnimationsAtLayerTime:(double)arg1;
- (void)pauseCurrentEventAnimationsWithConcealingStyle:(long long)arg1 atLayerTime:(double)arg2;
- (void)pauseCurrentEventAnimationsAtLayerTime:(double)arg1;
- (double)currentEventAnimationsRemainingTimeAfterLayerTime:(double)arg1;
- (void)endCurrentEventAnimations;
- (void)p_addAnimationsForBuildRenderer:(id)arg1 atBuildStartTime:(double)arg2 relativeToTime:(double)arg3;
- (void)updateCurrentEventAnimationsForLayerTime:(double)arg1 ignoreBuildDelays:(_Bool)arg2;
- (void)beginCurrentEventAnimationsAtLayerTime:(double)arg1 ignoreBuildDelays:(_Bool)arg2;
- (void)p_invalidateAnimator;
- (void)p_renderCurrentEvent;
- (_Bool)p_isCurrentEventTransition;
@property(readonly, nonatomic, getter=isFirstBuildEventAutomatic) _Bool firstBuildEventAutomatic;
@property(readonly, nonatomic) unsigned long long currentSlideNodeEventCount;
@property(readonly, nonatomic) KNSlideNode *nextSlideNode;
@property(readonly, nonatomic) KNSlideNode *firstSlideNode;
- (void)gotoSlideNode:(id)arg1 eventIndex:(unsigned long long)arg2 resetBuildTextures:(_Bool)arg3;
@property(readonly, nonatomic) unsigned long long currentEventIndex;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic) CALayer *layer;
- (void)invalidate;
- (void)dealloc;
- (id)init;
- (id)initWithDocumentRoot:(id)arg1 layerSize:(struct CGSize)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNOffscreenController : NSObject
{
    KNShow *mShow;
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mAnimator;
    struct CGSize mOutputSize;
    unsigned long long mSlideIndex;
    _Bool mFirstEvent;
    _Bool mIsImageGenerationCancelled;
    CALayer *_baseLayer;
}

@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=_baseLayer;
@property(readonly, nonatomic) KNAnimatedSlideView *animatedSlideView; // @synthesize animatedSlideView=mAnimator;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic) KNSlide *currentSlide;
@property(readonly, nonatomic) int playMode;
- (id)transitionRendererAtCurrentEvent;
@property(readonly, nonatomic) KNPlaybackSession *playbackSession;
@property(readonly, nonatomic) KNShow *show;
@property(readonly, nonatomic) unsigned long long slideCount;
@property(readonly, nonatomic) unsigned long long slideIndex;
@property(readonly, nonatomic) unsigned long long eventCount;
@property(readonly, nonatomic) unsigned long long eventIndex;
@property(readonly, nonatomic) struct CGSize outputSize;
- (void)cancelImageGeneration;
- (void)drawCurrentEventIntoContext:(struct CGContext *)arg1 intoRect:(struct CGRect)arg2 ignoreBuildVisibility:(_Bool)arg3;
- (void)generateImageOfCurrentEventWithCompletonHandler:(CDUnknownBlockType)arg1;
- (struct CGImage *)copyImageOfCurrentEventIgnoringBuildVisilibity:(_Bool)arg1;
- (_Bool)gotoLastSlide;
- (_Bool)gotoPreviousSlide;
- (_Bool)gotoFirstSlide;
- (_Bool)gotoSlideNode:(id)arg1 andEvent:(unsigned long long)arg2;
- (_Bool)gotoEventIndex:(unsigned long long)arg1;
- (_Bool)gotoNextEvent;
- (_Bool)gotoNextSlide;
- (void)p_setAnimator:(id)arg1;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2 outputSize:(struct CGSize)arg3;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNPlaybackSession : NSObject <TSDAnimationSession>
{
    CDUnknownBlockType mEndShowHandler;
    _Bool mHasEndShowHandlerBeenCancelled;
    id <TSDCanvasDelegate> mCanvasDelegate;
    TSULRUCache *mASVCache;
    KNSlideNode *mCurrentSlideNode;
    KNSlideNode *mAlternateNextSlideNode;
    NSMutableArray *mBreadCrumbTrail;
    KNSlideNode *mLastVisitedSlideNode;
    KNShow *mShow;
    KNAnimationContext *mAnimationContext;
    int mPlayMode;
    NSObject *mCurrentRenderingTicket;
    _Bool mSkipSlides;
    _Bool mShouldAnimateTransitionOnLastSlide;
    _Bool mShouldAnimateNullTransitions;
    _Bool mShouldUseContentlessLayers;
    _Bool mSkipBuilds;
    _Bool mShouldPreferCARenderer;
    _Bool mDisableAutoAnimationRemoval;
    _Bool mShouldAutomaticallyPlayMovies;
    _Bool mShouldShowVideoReflectionsAndMasks;
    _Bool mShouldForceTextureGeneration;
    _Bool mShouldDrawTexturesAsynchronously;
    _Bool mShouldAlwaysSetCurrentGLContextWhenDrawing;
    _Bool mShouldUseSourceImage;
    _Bool _isExitingShow;
}

@property(nonatomic) _Bool isExitingShow; // @synthesize isExitingShow=_isExitingShow;
@property(nonatomic) _Bool shouldUseSourceImage; // @synthesize shouldUseSourceImage=mShouldUseSourceImage;
@property(nonatomic) _Bool shouldAlwaysSetCurrentGLContextWhenDrawing; // @synthesize shouldAlwaysSetCurrentGLContextWhenDrawing=mShouldAlwaysSetCurrentGLContextWhenDrawing;
@property(nonatomic) _Bool shouldDrawTexturesAsynchronously; // @synthesize shouldDrawTexturesAsynchronously=mShouldDrawTexturesAsynchronously;
@property(nonatomic) _Bool shouldForceTextureGeneration; // @synthesize shouldForceTextureGeneration=mShouldForceTextureGeneration;
@property(nonatomic) _Bool shouldShowVideoReflectionsAndMasks; // @synthesize shouldShowVideoReflectionsAndMasks=mShouldShowVideoReflectionsAndMasks;
@property(nonatomic) _Bool shouldAutomaticallyPlayMovies; // @synthesize shouldAutomaticallyPlayMovies=mShouldAutomaticallyPlayMovies;
@property(nonatomic) _Bool disableAutoAnimationRemoval; // @synthesize disableAutoAnimationRemoval=mDisableAutoAnimationRemoval;
@property(nonatomic) _Bool shouldPreferCARenderer; // @synthesize shouldPreferCARenderer=mShouldPreferCARenderer;
@property(nonatomic) _Bool skipBuilds; // @synthesize skipBuilds=mSkipBuilds;
@property(nonatomic) _Bool skipSlides; // @synthesize skipSlides=mSkipSlides;
@property(nonatomic) _Bool shouldUseContentlessLayers; // @synthesize shouldUseContentlessLayers=mShouldUseContentlessLayers;
@property(nonatomic) _Bool shouldAnimateNullTransitions; // @synthesize shouldAnimateNullTransitions=mShouldAnimateNullTransitions;
@property(nonatomic) _Bool shouldAnimateTransitionOnLastSlide; // @synthesize shouldAnimateTransitionOnLastSlide=mShouldAnimateTransitionOnLastSlide;
@property(readonly, nonatomic) KNShow *show; // @synthesize show=mShow;
@property(nonatomic) int playMode; // @synthesize playMode=mPlayMode;
@property(copy, nonatomic) CDUnknownBlockType endShowHandler; // @synthesize endShowHandler=mEndShowHandler;
@property(nonatomic) id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=mCanvasDelegate;
@property(retain, nonatomic) NSMutableArray *breadCrumbTrail; // @synthesize breadCrumbTrail=mBreadCrumbTrail;
@property(readonly, nonatomic) KNAnimationContext *animationContext; // @synthesize animationContext=mAnimationContext;
@property(nonatomic) KNSlideNode *alternateNextSlideNode; // @synthesize alternateNextSlideNode=mAlternateNextSlideNode;
- (void)cancelEndShowHandler;
- (void)p_executeEndShowHandler;
- (void)executeEndShowHandlerAfterDelay:(double)arg1;
- (void)renderConcurrentlyOutgoingSlideTexture:(id)arg1 andIncomingSlideTexture:(id)arg2;
- (void)renderTextureSetContentsIfNeeded:(id)arg1;
- (void)renderTextureContentsIfNeeded:(id)arg1;
- (id)textureSetForRep:(id)arg1 context:(id)arg2 shouldRender:(_Bool)arg3;
- (id)textureSetForRep:(id)arg1 shouldRender:(_Bool)arg2;
- (void)invalidateSlideNumberLayoutsOnCanvas:(id)arg1;
- (id)repForInfo:(id)arg1 onCanvas:(id)arg2;
- (id)newCanvas;
- (double)showScale;
- (_Bool)isOffscreenPlayback;
@property(readonly, nonatomic) _Bool isPreview;
- (unsigned long long)slideNumberForSlideNode:(id)arg1;
- (id)newInitialTextureForIncomingSlide;
- (id)newFinalTextureForOutgoingSlide;
- (id)newTransitionTo:(id)arg1;
- (void)invalidateAnimatedSlideViewCache;
- (id)animatedSlideViewFor:(id)arg1 setupTransition:(_Bool)arg2;
@property(readonly, nonatomic) KNAnimatedSlideView *currentCachedAnimatedSlideView;
- (id)breadCrumb;
- (void)dropABreadCrumb;
- (id)gotoLastSlide;
- (id)lastSlideNode;
- (_Bool)atBegginingOfDeck;
- (id)gotoPreviousSlide;
- (id)previousSlideNodeBeforeCurrent;
- (id)gotoNextSlide;
- (id)nextSlideAfterCurrent;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
- (id)nextSlideNodeAfterCurrent;
- (id)currentSlideNode;
- (id)currentSlide;
- (id)gotoFirstSlide;
- (id)firstSlideNode;
- (void)gotoSlideNode:(id)arg1;
- (void)p_setCurrentSlideNode:(id)arg1;
- (void)dealloc;
- (id)initWithShow:(id)arg1 viewScale:(double)arg2 baseLayer:(id)arg3 isBaseLayerVisible:(_Bool)arg4 canvasDelegate:(id)arg5 endShowHandler:(CDUnknownBlockType)arg6;
@property(readonly, nonatomic) _Bool shouldShowInstructionalText;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNMovieRenderer : KNBuildRenderer <TSKMediaPlayerControllerDelegate>
{
    NSObject<TSKMediaPlayerController> *mPlayerController;
    CALayer *mVideoLayer;
    double mStartTime;
    double mPlaybackAtStartTimePauseTime;
    double mPlaybackAtStartTimePauseOffset;
    KNBuildRenderer *mBuildInRenderer;
    id <TSDMovieHUDViewController> mViewController;
    struct CGRect mFrameInContainerView;
    id mMovieStartCallbackTarget;
    SEL mMovieStartCallbackSelector;
    unsigned int mHasMoviePlaybackStarted:1;
    unsigned int mNeedsToSendMovieStartCallback:1;
    unsigned int mNeedsToSendBuildEndCallback:1;
    unsigned int mIsObservingVideoLayerReadyForDisplay:1;
    unsigned int mNeedsPlaybackAtStartTime:1;
    unsigned int mHasPendingTogglePlayingControl:1;
    unsigned int mPendingTogglePlayingControlStartsPlaying:1;
    unsigned int mShouldMoviePlaybackEndOnCompletion:1;
    unsigned int mWasMoviePlayingBeforeAnimationPause:1;
}

+ (id)movieInfoForMovieTimelineMovieIdentifier:(id)arg1;
+ (id)movieTimelineMovieIdentifierForMovieInfo:(id)arg1;
@property(retain, nonatomic) id <TSDMovieHUDViewController> viewController; // @synthesize viewController=mViewController;
@property(readonly, nonatomic) NSObject<TSKMediaPlayerController> *playerController; // @synthesize playerController=mPlayerController;
@property(nonatomic) KNBuildRenderer *buildInRenderer; // @synthesize buildInRenderer=mBuildInRenderer;
@property(readonly, nonatomic) NSObject<NSCopying> *movieTimelineMovieIdentifier;
@property(readonly, nonatomic) CALayer *offscreenVideoLayer;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
- (void)updateHUD;
- (void)setFrameOnViewLayer:(id)arg1;
- (void)p_applyActionEffect:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)p_playbackDidFailWithError:(id)arg1;
- (void)applyMovieControl:(long long)arg1;
- (struct CGImage *)p_copyCurrentVideoFrameImage;
- (void)p_teardownUpdatingTexture:(_Bool)arg1;
- (void)p_setupReflectionAndMaskingOnMovieTexture:(id)arg1 strokeTexture:(id)arg2 reflectionMaskTexture:(id)arg3 frameMaskTexture:(id)arg4;
- (void)p_showVideoLayer;
- (void)p_cancelPlaybackAtStartTime;
- (void)p_startPlaybackAtStartTime;
- (void)p_unschedulePlaybackAtStartTime;
- (void)p_schedulePlaybackAtStartTime;
- (void)p_setupVideoLayer;
- (void)p_setupPlayerController;
- (void)p_didEndMoviePlayback;
- (void)p_didStartMoviePlayback;
- (void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2;
- (void)p_startMoviePlaybackIfNeeded;
@property(readonly, nonatomic) _Bool hasMoviePlaybackStarted;
- (void)interruptAndReset;
- (void)resumeAnimationsIfPausedAtTime:(double)arg1;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimationsAtTime:(double)arg1;
- (void)pauseAnimations;
- (void)stopAnimations;
- (void)forceRemoveAnimations;
- (void)removeAnimationsAndFinish:(_Bool)arg1;
- (void)updateAnimationsForLayerTime:(double)arg1;
- (_Bool)addAnimationsAtLayerTime:(double)arg1;
- (void)animateAfterDelay:(double)arg1;
- (void)dealloc;
- (id)initWithAnimatedBuild:(id)arg1 info:(id)arg2 buildStage:(id)arg3 session:(id)arg4 animatedSlideView:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareRenderer : KNTransitionRenderer
{
    NSMapTable *_layerToOldHiddenValueMap;
}

- (void)removeAnimationsAndFinish:(_Bool)arg1;
- (void)resetLayerTreeAfterAnimation;
- (void)stopAnimations;
- (_Bool)addAnimationsAtTime:(double)arg1 relativeToCurrentMediaTime:(_Bool)arg2;
- (void)renderOutgoingSlideAndPrecacheIncomingSlide;
- (void)setupPluginContext;
- (void)teardownTransitionIsExitingShow:(_Bool)arg1;
- (void)dealloc;
- (id)initWithEffectClass:(Class)arg1 direction:(unsigned long long)arg2 duration:(double)arg3 session:(id)arg4 attributes:(id)arg5 animatedSlideView:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface KNAnimatedSlideView : NSObject <TSDCanvasDelegate, TSDConnectedInfoReplacing>
{
    KNSlide *mSlide;
    KNSlideNode *mAlternateDestinationSlideNode;
    KNPlaybackSession *mSession;
    KNAnimatedSlideModel *mAnimatedSlideModel;
    unsigned long long mCurrentEventIndex;
    NSIndexSet *mEventIndexesToAnimate;
    _Bool mSlideIsBuildable;
    _Bool mTransitionInitialized;
    _Bool mShouldStopAnimations;
    NSMutableSet *mMovieRenderers;
    NSMutableSet *mActiveAnimatedBuilds;
    unsigned long long mSlideNumber;
    double mTransitionStartTime;
    unsigned long long mAnimationsActive;
    unsigned long long mAnimationsStarted;
    _Bool mIsInDelayBeforeActiveAnimations;
    NSMutableArray *mChunks;
    TSUNoCopyDictionary *mBuildsToStartAfterMovieStartsMap;
    TSUNoCopyDictionary *mTextureSetForRepMap;
    id mEventStartCallbackTarget;
    SEL mEventStartCallbackSelector;
    id mEventAnimationActiveCallbackTarget;
    SEL mEventAnimationActiveCallbackSelector;
    id mEventEndCallbackTarget;
    SEL mEventEndCallbackSelector;
    id mEventImmediateEndCallbackTarget;
    SEL mEventImmediateEndCallbackSelector;
    id mMovieStartCallbackTarget;
    SEL mMovieStartCallbackSelector;
    id mMovieEndCallbackTarget;
    SEL mMovieEndCallbackSelector;
    _Bool mEventTriggered;
    _Bool mQueuedTrigger;
    _Bool mSkipDelayOnTransition;
    _Bool mPlaysAutomaticTransitions;
    TSDCanvas *mCanvas;
    int mIsTexturePreloadingCancelled;
    NSMutableSet *mTextureSets;
}

+ (void)registerUserDefaults;
+ (void)initialize;
@property(nonatomic) _Bool triggerQueued; // @synthesize triggerQueued=mQueuedTrigger;
@property(nonatomic) _Bool playsAutomaticTransitions; // @synthesize playsAutomaticTransitions=mPlaysAutomaticTransitions;
@property(nonatomic) _Bool skipDelayOnTransition; // @synthesize skipDelayOnTransition=mSkipDelayOnTransition;
@property(readonly, nonatomic) KNPlaybackSession *session; // @synthesize session=mSession;
@property(readonly, nonatomic) KNAnimatedSlideModel *model; // @synthesize model=mAnimatedSlideModel;
@property(copy, nonatomic) NSIndexSet *eventIndexesToAnimate; // @synthesize eventIndexesToAnimate=mEventIndexesToAnimate;
@property(nonatomic) _Bool eventHasTriggered; // @synthesize eventHasTriggered=mEventTriggered;
@property(readonly, nonatomic) NSSet *activeAnimatedBuilds; // @synthesize activeAnimatedBuilds=mActiveAnimatedBuilds;
- (void)clearActiveAnimatedBuilds;
- (void)removeActiveAnimatedBuild:(id)arg1;
- (void)addActiveAnimatedBuild:(id)arg1;
- (id)textureSetForRep:(id)arg1;
- (void)setTexture:(id)arg1 forRep:(id)arg2;
- (void)p_resetMovieTextures;
- (void)p_clearMovieRenderers;
- (void)p_removeMovieRenderer:(id)arg1;
- (void)p_addMovieRenderer:(id)arg1;
@property(readonly, nonatomic) NSSet *movieRenderers;
- (void)p_animateBuild:(id)arg1;
- (void)p_animateBuild:(id)arg1 afterDelay:(double)arg2;
- (_Bool)p_shouldSkipActionBuild:(id)arg1 onMovieInfo:(id)arg2;
- (void)p_animateBuild:(id)arg1 isMoviePlayback:(_Bool)arg2;
- (void)p_animateTransition:(id)arg1;
- (void)setupTransition;
- (void)p_setupTransitionStartTime;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimations;
- (void)stopAnimations;
- (void)p_stopAllMovieRenderers;
- (void)interruptAndReset;
- (void)reset;
@property(readonly, nonatomic) unsigned long long eventCount;
- (void)setNewDestinationSlideNode:(id)arg1;
- (_Bool)isAtFirstEvent;
@property(nonatomic) unsigned long long eventIndex;
- (void)p_animateCurrentEventIgnoringDelays:(_Bool)arg1;
- (double)p_minimumDelay;
- (void)triggerNextEventIgnoringDelay:(_Bool)arg1;
- (void)triggerNextEvent;
- (_Bool)playAutomaticEvents;
- (void)renderEvent:(unsigned long long)arg1 intoContext:(struct CGContext *)arg2 ignoreBuildVisibility:(_Bool)arg3;
- (void)renderCurrentEventPreparingNextEvent:(_Bool)arg1;
- (void)renderCurrentEvent;
- (void)renderEvent:(unsigned long long)arg1 shouldPrepareBuildAnimation:(_Bool)arg2 shouldPrepareTransition:(_Bool)arg3;
- (void)renderEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(_Bool)arg3 isIncomingSlideInTransition:(_Bool)arg4;
- (void)renderEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 shouldPrepareBuildAnimation:(_Bool)arg3;
- (void)p_renderTexturesForEvent:(unsigned long long)arg1 onBaseLayer:(id)arg2 intoContext:(struct CGContext *)arg3 shouldPrepareBuildAnimation:(_Bool)arg4 ignoreBuildVisibility:(_Bool)arg5;
- (void)preloadTexturesForEvent:(unsigned long long)arg1 ignoreBuildVisibility:(_Bool)arg2;
- (void)preloadTexturesForEvent:(unsigned long long)arg1 ignoreBuildVisibility:(_Bool)arg2 priority:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)cancelTexturePreloading;
- (_Bool)slideContainsRepsThatMustDrawOnMainThread;
- (id)p_getRenderersAtEventIndex:(long long)arg1;
- (_Bool)p_shouldAddInfoToTree:(id)arg1;
- (id)p_infosForSlide;
@property(readonly, nonatomic) _Bool isDoneAnimating;
- (_Bool)hasTransitionAtEventIndex:(long long)arg1;
@property(readonly, nonatomic) _Bool hasBuilds;
- (id)infosVisibleAtEvent:(unsigned long long)arg1 ignoreBuildVisibility:(_Bool)arg2;
- (id)repsCurrentlyVisible;
- (id)infosCurrentlyVisible;
@property(readonly, nonatomic) _Bool isMovieAnimating;
@property(readonly, nonatomic) _Bool isNonMovieAnimationAnimating;
@property(readonly, nonatomic) _Bool isNonMovieAnimationActive;
@property(readonly, nonatomic) _Bool isAnimating;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (void)buildHasFinishedAnimating:(id)arg1;
- (void)movieHasFinishedPlayback:(id)arg1;
- (void)p_movieStarted:(id)arg1;
- (void)transitionHasFinishedAnimating:(id)arg1;
- (void)transitionHasImmediatelyFinishedAnimating:(id)arg1;
- (void)registerForMovieEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForMovieStartCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventImmediateEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventEndCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventAnimationActiveCallback:(SEL)arg1 target:(id)arg2;
- (void)registerForEventStartCallback:(SEL)arg1 target:(id)arg2;
- (id)infoToConnectToForConnectionLineConnectedToInfo:(id)arg1;
- (unsigned long long)slideNumber;
- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;
- (_Bool)shouldShowInstructionalText;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)isPrintingCanvas;
- (id)documentRoot;
- (void)p_tearDownTexturesIsExitingShow:(_Bool)arg1;
- (void)p_recursivelyRemoveCallbackObserversFromAnimatedBuilds:(id)arg1;
- (void)dealloc;
- (id)initForSlideNode:(id)arg1 session:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationContext : NSObject
{
    struct CGRect mSlideRect;
    struct CGRect mUnscaledSlideRect;
    double mViewScale;
    CALayer *mBaseLayer;
    double mFOVInRadians;
    struct CATransform3D mSlideProjectionMatrix;
    double mPixelAspectRatio;
    KNAnimationRegistryWithFallbacks *mRegistry;
    TSDCapabilities *mCapabilities;
    _Bool mBaseLayerVisible;
    struct CGColorSpace *mColorSpace;
}

@property(readonly, nonatomic) double viewScale; // @synthesize viewScale=mViewScale;
@property(readonly, nonatomic) struct CGRect unscaledSlideRect; // @synthesize unscaledSlideRect=mUnscaledSlideRect;
@property(readonly, nonatomic) struct CGRect slideRect; // @synthesize slideRect=mSlideRect;
@property(readonly, nonatomic) struct CATransform3D slideProjectionMatrix; // @synthesize slideProjectionMatrix=mSlideProjectionMatrix;
@property(readonly, nonatomic) KNAnimationRegistryWithFallbacks *registry; // @synthesize registry=mRegistry;
@property(nonatomic) double pixelAspectRatio; // @synthesize pixelAspectRatio=mPixelAspectRatio;
@property(readonly, nonatomic) double fieldOfViewInRadians; // @synthesize fieldOfViewInRadians=mFOVInRadians;
@property(nonatomic) struct CGColorSpace *colorSpace; // @synthesize colorSpace=mColorSpace;
@property(readonly, nonatomic) TSDCapabilities *capabilities; // @synthesize capabilities=mCapabilities;
@property(readonly, nonatomic, getter=isBaseLayerVisible) _Bool baseLayerVisible; // @synthesize baseLayerVisible=mBaseLayerVisible;
@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=mBaseLayer;
- (void)updateGeometryToFitBaseLayerAtViewScale:(double)arg1;
@property(readonly, nonatomic) double showScale;
- (void)dealloc;
- (id)initWithShowSize:(struct CGSize)arg1 viewScale:(double)arg2 baseLayer:(id)arg3 isBaseLayerVisible:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNPlaybackController : NSObject
{
    KNShow *mShow;
    id <TSDCanvasDelegate> mCanvasDelegate;
    id <KNPlaybackControllerDelegate> mDelegate;
    int mPlayMode;
    KNPlaybackSession *mSession;
    KNAnimatedSlideView *mAnimator;
    CDUnknownBlockType mEndShowHandler;
    KNPlaybackAudioController *mSoundtrackController;
    NSObject<KNPlaybackConcealer> *mPlaybackConcealer;
    struct CGColorSpace *mPlaybackColorSpace;
    CALayer *mBaseLayer;
    int mPlaybackState;
    _Bool mAllowsShowToEndInternally;
    _Bool mAutomaticallyPlaysSoundtrack;
    _Bool mPlaysAutomaticEvents;
    _Bool mAutomaticallyPlaysMovies;
    _Bool mRenderingSuspended;
    _Bool mNeedsRenderAfterResumingRendering;
    _Bool mIsCurrentEventNonAutomatic;
    _Bool mIsPaused;
    _Bool mIsHyperlinkInProgress;
    _Bool mIsUsingDiscreteGPU;
    KNMovieRenderer *mMovieRendererWithVisibleHUD;
}

+ (id)keyPathsForValuesAffectingMovieRenderers;
+ (id)keyPathsForValuesAffectingPausedConcealingStyle;
@property(nonatomic) struct CGColorSpace *playbackColorSpace; // @synthesize playbackColorSpace=mPlaybackColorSpace;
@property(nonatomic) _Bool playsAutomaticEvents; // @synthesize playsAutomaticEvents=mPlaysAutomaticEvents;
@property(nonatomic) _Bool automaticallyPlaysSoundtrack; // @synthesize automaticallyPlaysSoundtrack=mAutomaticallyPlaysSoundtrack;
@property(nonatomic) _Bool allowsShowToEndInternally; // @synthesize allowsShowToEndInternally=mAllowsShowToEndInternally;
@property(readonly, nonatomic) int playbackState; // @synthesize playbackState=mPlaybackState;
@property(nonatomic) _Bool automaticallyPlaysMovies; // @synthesize automaticallyPlaysMovies=mAutomaticallyPlaysMovies;
@property(retain, nonatomic) NSObject<KNPlaybackConcealer> *playbackConcealer; // @synthesize playbackConcealer=mPlaybackConcealer;
@property(readonly, nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=mIsPaused;
@property(readonly, nonatomic) CALayer *baseLayer; // @synthesize baseLayer=mBaseLayer;
@property(copy, nonatomic) CDUnknownBlockType endShowHandler; // @synthesize endShowHandler=mEndShowHandler;
@property(nonatomic) int playMode; // @synthesize playMode=mPlayMode;
@property(nonatomic) KNMovieRenderer *movieRendererWithVisibleHUD; // @synthesize movieRendererWithVisibleHUD=mMovieRendererWithVisibleHUD;
@property(readonly, nonatomic) id <TSDCanvasDelegate> canvasDelegate; // @synthesize canvasDelegate=mCanvasDelegate;
@property(nonatomic) _Bool isHyperlinkInProgress; // @synthesize isHyperlinkInProgress=mIsHyperlinkInProgress;
@property(nonatomic) id <KNPlaybackControllerDelegate> delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) KNShow *show; // @synthesize show=mShow;
- (void)p_resetAnimatorAndSetGoToFirstEvent:(_Bool)arg1;
- (void)p_resetAnimatorAtEventIndex:(unsigned long long)arg1;
- (void)p_setAnimator:(id)arg1;
- (id)p_animator;
- (void)p_gotoPreviousAndJumpToFirstEvent:(_Bool)arg1;
- (void)p_movieEnded:(id)arg1;
- (void)p_movieStarted:(id)arg1;
- (void)p_eventEnded:(id)arg1;
- (void)p_eventImmediatelyEnded:(id)arg1;
- (void)p_eventAnimationBecameActive:(id)arg1;
- (void)p_eventStarted:(id)arg1;
- (id)p_currentBuildChunks;
- (_Bool)p_processHyperlinkURL:(id)arg1;
- (id)p_hyperlinkURLForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (_Bool)processHyperlinkForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (id)p_topLevelRepsForHitTesting;
- (_Bool)isHyperlinkAtUnscaledPoint:(struct CGPoint)arg1 hitObject:(id *)arg2 hitRep:(id *)arg3 hitInfo:(id *)arg4;
- (_Bool)isHyperlinkAtPoint:(struct CGPoint)arg1 hitObject:(id *)arg2 hitRep:(id *)arg3 hitInfo:(id *)arg4;
@property(nonatomic) _Bool shouldAnimateTransitionOnLastSlide;
@property(readonly, retain, nonatomic) NSArray *currentlyVisibleInfos;
@property(nonatomic) _Bool shouldAnimateNullTransitions;
- (id)movieRendererAtPoint:(struct CGPoint)arg1;
- (void)applyMovieControl:(long long)arg1;
@property(readonly, nonatomic) NSSet *movieRenderers;
- (void)resumeSoundtrack;
- (void)pauseSoundtrack;
- (void)stopSoundtrack;
- (void)startSoundtrackAtMediaIndex:(unsigned long long)arg1 time:(double)arg2;
- (void)restartPlaybackIfNeeded;
- (void)stopAnimationsAndGotoCompletionOfEvent;
- (void)stopAnimations;
- (void)resumeAnimationsIfPaused;
- (void)pauseAnimationsWithConcealingStyle:(long long)arg1;
- (void)pauseAnimations;
@property(readonly, nonatomic) long long pausedConcealingStyle;
@property(readonly, nonatomic, getter=isNonMovieAnimationActive) _Bool nonMovieAnimationActive;
@property(readonly, nonatomic, getter=isNonMovieAnimationAnimating) _Bool nonMovieAnimationAnimating;
@property(readonly, nonatomic, getter=isAnimating) _Bool animating;
- (void)restartShow;
- (void)resumeRendering;
- (void)suspendRendering;
- (void)playAutomaticEvents;
- (void)gotoNextEventWithoutAnimation;
- (void)gotoNextEventIgnoringDelay:(_Bool)arg1;
- (void)gotoNextEvent;
- (void)gotoFirstEvent;
- (void)gotoPreviousEvent;
- (_Bool)gotoLastVisitedSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoSlideNode:(id)arg1 toEventIndex:(unsigned long long)arg2 shouldAnimate:(_Bool)arg3 ignoreDelays:(_Bool)arg4;
- (_Bool)gotoLastSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoNextSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoPreviousSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (_Bool)gotoFirstSlideWithAnimation:(_Bool)arg1 ignoreDelays:(_Bool)arg2;
- (void)setBreadCrumbTrail:(id)arg1;
- (id)breadCrumbTrail;
@property(readonly, nonatomic) unsigned long long nextEventIndex;
@property(readonly, nonatomic) unsigned long long visibleEventIndex;
@property(readonly, nonatomic) unsigned long long eventCount;
@property(readonly, nonatomic) KNSlideNode *lastSlideNode;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
@property(readonly, nonatomic) KNSlideNode *nextSlideNode;
@property(readonly, nonatomic) KNSlideNode *currentSlideNode;
@property(readonly, nonatomic) KNSlideNode *firstSlideNode;
@property(readonly, nonatomic, getter=isAtBeginning) _Bool atBeginning;
- (void)resizeShowToFitBaseLayer;
- (void)tearDownShow;
- (void)endShow;
- (void)p_endShowFromAnimator;
- (void)playPreparedShow;
- (void)renderCurrentEvent;
@property(copy, nonatomic) NSIndexSet *buildEventIndexesToAnimate;
@property(nonatomic) unsigned long long currentEventIndex;
@property(readonly, nonatomic) double buildsToAnimateDuration;
- (double)p_defaultViewScaleForBaseLayer:(id)arg1;
- (void)prepareOnLayer:(id)arg1 atSlideNode:(id)arg2 isBaseLayerVisible:(_Bool)arg3;
- (void)prepareOnLayer:(id)arg1 viewScale:(double)arg2 atSlideNode:(id)arg3 isBaseLayerVisible:(_Bool)arg4;
- (void)p_releaseDiscreteGPUIfRetained;
- (void)p_retainDiscreteGPUIfNeeded;
- (void)dealloc;
- (id)init;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareZoom : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator, KNAnimationPluginArchiving>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareSwing : KNAnimationEffect <KNMagicMoveTransitionAnimator, KNMagicMoveFrameAnimator>
{
    KNMotionBlurWrapper *_motionBlurWrapper;
    KNMagicMoveWrapper *_magicMoveWrapper;
    NSMutableArray *_effectTextures;
    CDUnknownBlockType _motionBlurWrapperTextureDrawOptionsBlock;
    CDUnknownBlockType _motionBlurWrapperSetupShaderBlock;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)shouldDisableMagicMoveOnText;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)p_setupMagicMoveWrapperWithContext:(id)arg1;
- (void)dealloc;
- (void)teardown;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildUtility : NSObject
{
}

+ (id)chunksForInfos:(id)arg1;
+ (id)buildsForChunks:(id)arg1;
+ (id)chunksInBuilds:(id)arg1;
+ (_Bool)animationInfo:(id)arg1 onInfo:(id)arg2 canRunSimultaneouslyWithAnimationInfo:(id)arg3 onInfo:(id)arg4;
+ (int)animationTypeForBuildChunks:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwarePush : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator>
{
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwarePerspective : KNAnimationEffect <KNContentAwareTransitionAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionFadeThruColor : KNAnimationEffect <KNTransitionAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNPdfGridExporter : KNPdfExporter
{
}

- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)incrementPage;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNPlaceholderLayout : TSWPShapeLayout
{
}

- (_Bool)canBeIntersected;

@end

__attribute__((visibility("hidden")))
@interface KNWipeBase : KNAnimationEffect <KNAnimationPluginArchiving>
{
    KNWipeDataBuffer *mWipeDataBuffer;
    TSDGLDataBuffer *mPreviousDataBuffer;
    TSDGLShader *mPreviousShader;
    struct CGRect _frameRect;
    struct CGRect _drawableFrame;
    _Bool _isBuildOut;
    KNAnimParameterGroup *_parameterGroup;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionWipe : KNWipeBase <KNFrameAnimator>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)supportedTypes;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildWipe : KNWipeBase <KNFrameBuildAnimator>
{
}

+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (id)supportedTypes;
+ (_Bool)isTransition;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionTwist : KNAnimationEffect <KNFrameAnimator, KNAnimationPluginArchiving>
{
    TSDGLMotionBlurEffect *_motionBlurEffect;
    TSDGLShader *_shader;
    TSDGLDataBuffer *_dataBuffer;
    NSArray *_bufferAttributes;
    unsigned long long _positionAttributeIndex;
    unsigned long long _texCoordAttributeIndex;
    unsigned long long _normalAttributeIndex;
    unsigned long long _prevPositionAttributeIndex;
    long long _numPoints;
    double _twistyness;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_drawTwistWithPercent:(double)arg1 texture:(id)arg2 oldTexture:(id)arg3;
- (void)update:(id)arg1 withContext:(id)arg2;
- (double)fx:(double)arg1 withPercent:(double)arg2;
- (void)drawGrid:(id)arg1;
- (void)createArrays:(id)arg1 context:(id)arg2;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionPageFlip : KNAnimationEffect <KNFrameAnimator, KNAnimationPluginArchiving>
{
    TSDGLMotionBlurEffect *_motionBlurEffect;
    TSDGLShader *_shader;
    TSDGLDataBuffer *_dataBuffer;
    NSArray *_dataBufferAttributes;
    unsigned long long _positionAttributeIndex;
    unsigned long long _texCoordAttributeIndex;
    unsigned long long _normalAttributeIndex;
    unsigned long long _prevPositionAttributeIndex;
    TSDGLShader *_quadShader;
    TSDGLDataBuffer *_quadDataBuffer;
    long long _numPoints;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)p_drawFlipWithPercent:(double)arg1 texture:(id)arg2;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)update:(id)arg1 withContext:(id)arg2;
- (void)createArrays:(id)arg1 context:(id)arg2;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAnvil : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    TSDGLParticleSystem *_smokeSystem;
    TSDGLShader *_smokeShader;
    TSDGLTextureInfo *_smokeTexture;
    TSDGLParticleSystem *_specksSystem;
    TSDGLShader *_specksShader;
    TSDGLTextureInfo *_specksTexture;
    struct CGPoint *_cameraShakePoints;
    struct CATransform3D _baseTransform;
    TSDGLShader *_objectShader;
    TSDGLShader *_objectBlurShader;
    TSDGLDataBuffer *_objectDataBuffer;
    TSDGLDataBuffer *_objectBlurDataBuffer;
    struct CGRect _drawableFrame;
    struct CGRect _frameRect;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (struct CGPoint)p_objectTranslationAtPercent:(double)arg1 duration:(double)arg2 objectSmashDuration:(double)arg3 objectFrame:(struct CGRect)arg4;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)p_specksSystemForTR:(id)arg1 build:(id)arg2;
- (id)p_smokeSystemForTR:(id)arg1 build:(id)arg2;
- (struct CGPoint *)p_cameraShakePoints;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAnvilSystem : TSDGLParticleSystem
{
}

- (double)p_anvilGlobalScale;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAnvilSmokeSystem : KNBuildAnvilSystem
{
}

+ (_Bool)useVisibilities;
+ (_Bool)willOverrideStartingPoints;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildAnvilSpecksSystem : KNBuildAnvilSystem
{
}

+ (_Bool)useVisibilities;
+ (_Bool)willOverrideStartingPoint;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildConfetti : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    TSDGLShader *mShader;
    KNBuildConfettiSystem *mParticleSystem;
    struct CATransform3D mBaseTransform;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mQuadShader;
    struct CGRect mFrameRect;
    struct CGRect mDrawableFrame;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupParticleSystemWithImage:(id)arg1 build:(id)arg2;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildConfettiSystem : TSDGLParticleSystem
{
}

- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDiffuse : KNAnimationEffect <KNFrameBuildAnimator>
{
    KNBuildDiffuseSystem *mDiffuseSystem;
    TSDGLShader *mDiffuseShader;
    struct CATransform3D mBaseTransform;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mQuadShader;
    struct CGRect mDrawableFrame;
    struct CGRect mFrameRect;
}

+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupParticleSystemWithImage:(id)arg1 build:(id)arg2;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildDiffuseSystem : TSDGLParticleSystem
{
}

- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlame : KNAnimationEffect <KNFrameBuildAnimator>
{
    KNBuildFlameSystem *mFlameSystem;
    TSDGLShader *mFlameShader;
    TSDGLTextureInfo *mFlameTexture;
    struct CATransform3D mBaseTransform;
    TSDGLShader *mObjectShader;
    TSDGLDataBuffer *mObjectDataBuffer;
    struct CGRect mDrawableFrame;
    struct CGRect mFrameRect;
    TSDGLShader *mFBOShader;
    TSDGLDataBuffer *mFBODataBuffer;
    unsigned int mFBOTexture;
    unsigned int mFramebuffer;
}

+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndForTextures:(id)arg1 forBuild:(id)arg2;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CATransform3D)p_orthoTransformWithScale:(double)arg1 offset:(struct CGPoint)arg2;
- (void)p_setupFBOWithSize:(struct CGSize)arg1;
- (id)p_flameSystemForTR:(id)arg1 build:(id)arg2;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFlameSystem : TSDGLParticleSystem
{
    struct CGSize _actualSize;
    struct CGPoint *_bottomRow;
    unsigned long long _bottomRowCount;
    _Bool shouldDraw;
}

+ (_Bool)useVisibilities;
+ (_Bool)willOverrideStartingPoints;
- (void)setShouldDraw:(_Bool)arg1;
- (_Bool)shouldDraw;
- (void)p_setupParticleDataWithTexture:(id)arg1;
- (double)rotationMax;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNBuildShimmer : KNAnimationEffect <KNFrameBuildAnimator>
{
    KNShimmerEffect *mEffect;
    struct CATransform3D mBaseTransform;
    struct CGRect mDrawableFrame;
    struct CGRect mFrameRect;
}

+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNShimmerEffect : NSObject <KNAnimationOpenGLEffect>
{
    KNShimmerObjectSystem *mObjectSystem;
    TSDGLShader *mObjectSystemShader;
    KNShimmerParticleSystem *mParticleSystem;
    TSDGLShader *mParticleSystemShader;
    TSDGLTextureInfo *mShimmerTexture;
    TSDTexturedRectangle *mTexture;
    struct CGRect mDestinationRect;
    double mDuration;
    unsigned long long mDirection;
    int mBuildType;
    KNAnimationContext *mAnimationContext;
    struct CATransform3D mTranslate;
    _Bool mIsSetup;
    struct CATransform3D mBaseTransform;
    TSDGLShader *mObjectShader;
    TSDGLDataBuffer *mObjectDataBuffer;
}

- (void)teardown;
- (void)renderEffectAtPercent:(double)arg1;
- (id)initWithAnimationContext:(id)arg1 texture:(id)arg2 destinationRect:(struct CGRect)arg3 translate:(struct CATransform3D)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 buildType:(int)arg7;
- (id)particleSystemForTR:(id)arg1 slideRect:(struct CGRect)arg2 duration:(double)arg3;
- (id)objectSystemForTR:(id)arg1 slideRect:(struct CGRect)arg2 duration:(double)arg3;
- (unsigned long long)p_numberOfParticlesForTR:(id)arg1 slideRect:(struct CGRect)arg2 duration:(double)arg3;
- (void)setupEffectIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNShimmerSystem : TSDGLParticleSystem
{
}

- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (void)drawGLSLWithPercent:(double)arg1 opacity:(double)arg2 rotation:(double)arg3 clockwise:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNShimmerObjectSystem : KNShimmerSystem
{
}

- (void)drawGLSLWithPercent:(double)arg1 opacity:(double)arg2 rotation:(double)arg3 clockwise:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNShimmerParticleSystem : KNShimmerSystem
{
    KNShimmerObjectSystem *mObjectSystem;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributePosition;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributeColor;
    TSDGLDataBufferAttribute *mObjectDataBufferAttributeSpeed;
}

+ (id)newDataBufferAttributeWithName:(id)arg1;
+ (_Bool)willOverrideColors;
+ (_Bool)willOverrideStartingPoints;
@property(nonatomic) TSDGLDataBufferAttribute *objectDataBufferAttributeSpeed; // @synthesize objectDataBufferAttributeSpeed=mObjectDataBufferAttributeSpeed;
@property(nonatomic) TSDGLDataBufferAttribute *objectDataBufferAttributePosition; // @synthesize objectDataBufferAttributePosition=mObjectDataBufferAttributePosition;
@property(nonatomic) TSDGLDataBufferAttribute *objectDataBufferAttributeColor; // @synthesize objectDataBufferAttributeColor=mObjectDataBufferAttributeColor;
@property(nonatomic) KNShimmerObjectSystem *objectSystem; // @synthesize objectSystem=mObjectSystem;
- (void)p_setupVertexData;
- (CDStruct_b2fbf00d)p_hullPoint:(CDStruct_b2fbf00d)arg1 inVertexRect:(struct CGRect)arg2;
- (void)drawGLSLWithPercent:(double)arg1 opacity:(double)arg2 rotation:(double)arg3 clockwise:(_Bool)arg4;
- (CDStruct_818bb265)colorAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;

// Remaining properties
@property(nonatomic) unsigned long long particleCount;
@property(nonatomic) unsigned long long visibleParticleCount;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSparkle : KNAnimationEffect <KNFrameBuildAnimator>
{
    KNSparkleEffect *mEffect;
    struct CATransform3D mBaseTransform;
    struct CGRect mDrawableFrame;
    struct CGRect mFrameRect;
}

+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNSparkleEffect : NSObject <KNAnimationOpenGLEffect>
{
    KNBuildSparkleSystem *mSparkleSystem;
    TSDGLShader *mSparkleShader;
    TSDGLTextureInfo *mSparkleTexture;
    TSDTexturedRectangle *mTexture;
    KNSparkleEffect *mEffect;
    KNAnimationContext *mAnimationContext;
    double mDuration;
    unsigned long long mDirection;
    int mBuildType;
    struct CGRect mDestinationRect;
    struct CATransform3D mTranslate;
    TSDGLShader *mObjectShader;
    TSDGLDataBuffer *mObjectDataBuffer;
}

- (void)teardown;
- (void)renderEffectAtPercent:(double)arg1;
- (id)initWithAnimationContext:(id)arg1 texture:(id)arg2 destinationRect:(struct CGRect)arg3 translate:(struct CATransform3D)arg4 duration:(double)arg5 direction:(unsigned long long)arg6 buildType:(int)arg7;
- (id)p_sparkleSystemForTR:(id)arg1 slideRect:(struct CGRect)arg2 duration:(double)arg3 direction:(unsigned long long)arg4;
- (void)setupEffectIfNecessary;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSparkleSystem : TSDGLParticleSystem
{
}

+ (_Bool)useVisibilities;
+ (_Bool)willOverrideStartingPoints;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (double)p_globalScale;

@end

__attribute__((visibility("hidden")))
@interface KNMagicMoveRenderer : KNTransitionRenderer
{
    NSMutableArray *mMatches;
    NSMutableArray *mAnimatedLayersRetained;
    NSMutableArray *mLayerToOldParentArray;
    NSMapTable *mLayerToOldHiddenMap;
    NSMutableArray *mMorphMatches;
    NSDate *mLastMorphDate;
    TSDFPSCounter *mMorphFPSCounter;
    double mMorphFrameDurationAverage;
    NSTimer *mMorphUpdateTimer;
    _Bool mIsRealtime;
    _Bool mIsDone;
    NSOperationQueue *mMorphOperationQueue;
    NSMutableArray *mMorphLayerUpdates;
    double mAnimationStartTime;
}

+ (void)generateLayersForMatches:(id)arg1 addToArray:(id)arg2 oldHiddenValuesMap:(id)arg3;
+ (void)generateLayersForTexture:(id)arg1 inTextureSet:(id)arg2 isOutgoing:(_Bool)arg3 addToArray:(id)arg4 oldHiddenValuesMap:(id)arg5;
- (void)stopAnimations;
- (void)removeAnimationsAndFinish:(_Bool)arg1;
- (void)updateAnimationsForLayerTime:(double)arg1;
- (_Bool)addAnimationsAtTime:(double)arg1 relativeToCurrentMediaTime:(_Bool)arg2;
- (void)animateWithDelay:(double)arg1;
- (void)setupPluginContext;
- (void)p_generateMagicMoveMatches;
- (void)renderSlideIndex:(unsigned long long)arg1;
- (void)renderOutgoingSlideAndPrecacheIncomingSlide;
- (void)p_restoreLayerHierarchy;
- (void)addLayersForSlideIndex:(unsigned long long)arg1;
- (void)p_updateMorphAnimationsForTime:(double)arg1;
- (void)p_updateMorphAnimations;
- (void)p_cleanUpUpdateMorphAnimations;
- (void)teardownTransitionIsExitingShow:(_Bool)arg1;
- (void)dealloc;
- (id)initWithEffectClass:(Class)arg1 direction:(unsigned long long)arg2 duration:(double)arg3 session:(id)arg4 attributes:(id)arg5 animatedSlideView:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface KNMovieSegment : NSObject
{
    TSPData *mMovieData;
    double mStartTime;
}

@property(readonly, nonatomic) double startTime; // @synthesize startTime=mStartTime;
@property(readonly, nonatomic) TSPData *movieData; // @synthesize movieData=mMovieData;
- (id)movieSegmentByAddingTimeOffset:(double)arg1;
@property(readonly, nonatomic, getter=isEmptySegment) _Bool emptySegment;
- (void)dealloc;
- (id)init;
- (id)initEmptySegmentWithStartTime:(double)arg1;
- (id)initWithMovieData:(id)arg1 startTime:(double)arg2;
- (void)saveToArchive:(struct MovieSegmentArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct MovieSegmentArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNRecordingNavigationEvent : KNRecordingEvent
{
    TSPLazyReference *mTargetSlideNodeReference;
    unsigned long long mTargetEventIndex;
    long long mAnimationPhase;
}

@property(readonly, nonatomic) long long animationPhase; // @synthesize animationPhase=mAnimationPhase;
@property(readonly, nonatomic) unsigned long long targetEventIndex; // @synthesize targetEventIndex=mTargetEventIndex;
- (_Bool)canPrecedeDiscontinuity;
- (_Bool)isIgnoredWhenSeeking;
@property(readonly, nonatomic) KNSlideNode *targetSlideNode;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithStartTime:(double)arg1;
- (id)initWithStartTime:(double)arg1 targetSlideNode:(id)arg2 targetEventIndex:(unsigned long long)arg3 animationPhase:(long long)arg4;
- (void)saveToArchive:(struct RecordingEventArchive *)arg1 archiver:(id)arg2;
- (id)initWithContext:(id)arg1 archive:(const struct RecordingEventArchive *)arg2 unarchiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareSparkle : KNAnimationEffect <KNMagicMoveTransitionAnimator, KNMagicMoveFrameAnimator>
{
    CDUnknownBlockType _motionBlurWrapperTextureDrawOptionsBlock;
    CDUnknownBlockType _motionBlurWrapperSetupShaderBlock;
    KNMotionBlurWrapper *_motionBlurWrapper;
    KNMagicMoveWrapper *_magicMoveWrapper;
}

+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)shouldDisableMagicMoveOnText;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)p_setupMagicMoveWrapperWithContext:(id)arg1;
- (void)dealloc;
- (void)teardown;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DBuild : KNAnimationEffect <KNCustomFrameBuildAnimator, KNAnimationPluginArchiving, TSCH3DChartAnimationPlugin>
{
    struct CGRect mDrawingFrame;
    TSDGLLayer *mGLLayer;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
+ (_Bool)requiresSingleTexturePerStage;
- (id).cxx_construct;
- (void)animationDidEndWithContext:(id)arg1;
- (double)animationFPS;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)GLLayer;
- (id)layerWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)p_repFromContext:(id)arg1;
- (void)p_applyAttributes:(id)arg1 forRep:(id)arg2 animationLayer:(id)arg3;
- (struct CGAffineTransform)p_transformForAttributes:(id)arg1 rep:(id)arg2;
- (double)p_scaleForAttributes:(id)arg1;
- (struct CGAffineTransform)p_transformByApplyingTransform:(struct CGAffineTransform)arg1 centeredAtPoint:(struct CGPoint)arg2;
- (unsigned long long)p_deliveryStyleFromAnimatedBuild:(id)arg1;
- (int)chartAnimationType;
- (id)animationInfoForAnimatedBuild:(id)arg1;
- (int)p_buildTypeForAnimatedBuild:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DRotationBasedBuild : KNChart3DBuild
{
}

+ (id)customAttributes;
+ (id)defaultAttributes;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DGrowBuild : KNChart3DBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DZAxisBuild : KNChart3DBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DRadialBuild : KNChart3DBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DRotatingGrowBuild : KNChart3DRotationBasedBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DCraneBuild : KNChart3DRotationBasedBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNChart3DRotateBuild : KNChart3DRotationBasedBuild
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (unsigned long long)chartAnimationVersionAdded;
+ (int)chartAnimationType;
+ (id)localizedMenuString:(int)arg1;
+ (id)chartAnimationName;

@end

__attribute__((visibility("hidden")))
@interface KNBaseCompatibilityDelegate : NSObject <TSKCompatibilityDelegate>
{
}

- (id)backwardsCompatibleTypeForType:(id)arg1;
- (id)nestedDocumentFilename;
- (id)needNewerVersionIndexXmlContentString;
- (id)indexXmlFilename;
- (_Bool)isSageDocumentType:(id)arg1;
- (_Bool)isTCMessageExceptionErrorDomain:(id)arg1;
- (id)exportableTypes;
- (Class)exportOptionsControllerClass;
- (Class)pdfExporterClassForOptions:(id)arg1;
- (Class)exporterClassForType:(id)arg1 options:(id)arg2;
- (Class)importerClassForType:(id)arg1;
- (id)newExportableDocumentTypesForFlag:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareShimmer : KNAnimationEffect <KNMagicMoveTransitionAnimator, KNMagicMoveFrameAnimator>
{
    CDUnknownBlockType _motionBlurWrapperTextureDrawOptionsBlock;
    CDUnknownBlockType _motionBlurWrapperSetupShaderBlock;
    KNMotionBlurWrapper *_motionBlurWrapper;
    KNMagicMoveWrapper *_magicMoveWrapper;
}

+ (int)rendererTypeForCapabilities:(id)arg1;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (_Bool)shouldDisableMagicMoveOnText;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)p_setupMagicMoveWrapperWithContext:(id)arg1;
- (void)dealloc;
- (void)teardown;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNPdfHyperlinkController : TSAPdfHyperlinkController
{
    NSArray *mSlides;
    struct CGRect mCanvasRect;
    long long mCurrentSlideNumber;
}

@property(nonatomic) long long currentSlideNumber; // @synthesize currentSlideNumber=mCurrentSlideNumber;
- (void)addHyperlinksForReps:(id)arg1 targetRect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (struct CGRect)canvasRect;
- (_Bool)ignoreUrl:(id)arg1;
- (_Bool)isDestination:(id)arg1;
- (id)destinationFromUrl:(id)arg1;
- (long long)getFirstNonHiddenIndex:(unsigned long long)arg1 delta:(long long)arg2;
- (id)currentSlideName;
- (id)nameFromIndex:(unsigned long long)arg1;
- (id)nameForSlide:(id)arg1;
- (void)dealloc;
- (id)initWithShow:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNMagicMoveWrapper : NSObject
{
    NSMutableDictionary *_shaderCacheDictionary;
    TSDMagicMoveTextureZOrderer *_textureZOrderer;
    NSMapTable *_textureToMorphEffectDict;
    NSMapTable *_textureToEffectDict;
    NSMapTable *_textureToShouldBlendIncomingDict;
    _Bool _shouldDrawWithMotionBlur;
    _Bool _shouldDrawMotionBlur;
    NSDictionary *_animations;
    NSDictionary *_animationCacheDict;
}

@property(readonly, nonatomic) NSDictionary *animationCacheDict; // @synthesize animationCacheDict=_animationCacheDict;
@property(readonly, nonatomic) NSDictionary *animations; // @synthesize animations=_animations;
@property(nonatomic) _Bool shouldDrawMotionBlur; // @synthesize shouldDrawMotionBlur=_shouldDrawMotionBlur;
- (CDUnknownBlockType)newMotionBlurWrapperSetupShaderBlockWithPluginContext:(id)arg1;
@property(readonly, nonatomic) NSArray *motionBlurShaders;
- (id)p_magicMoveShaderWithShouldBlendIncoming:(_Bool)arg1 enableDebugColors:(_Bool)arg2 shouldDrawWithMotionBlur:(_Bool)arg3;
- (id)p_shaderCacheKeyWithShouldBlendIncoming:(_Bool)arg1 enableDebugColors:(_Bool)arg2 shouldDrawWithMotionBlur:(_Bool)arg3;
- (void)p_setupShaderCacheDictionary;
- (id)texturesBySortingArray:(id)arg1;
- (id)texturedRectanglesAtPercent:(double)arg1;
- (void)p_setupAnimationsWithContext:(id)arg1 animationOverrideBlock:(CDUnknownBlockType)arg2;
- (void)setupShadersWithContext:(id)arg1 animationContext:(id)arg2;
- (void)p_addDebugAnimationsToArray:(id)arg1 forType:(long long)arg2 duration:(double)arg3;
- (void)p_setAnimationGroup:(id)arg1 forLayer:(id)arg2 inDictionary:(id)arg3;
- (void)dealloc;
- (void)teardown;
- (id)initWithContext:(id)arg1 animationOverrideBlock:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNMotionBlurWrapperDrawPass : NSObject
{
    _Bool _shouldMotionBlur;
    NSArray *_textures;
}

@property(nonatomic) _Bool shouldMotionBlur; // @synthesize shouldMotionBlur=_shouldMotionBlur;
@property(retain, nonatomic) NSArray *textures; // @synthesize textures=_textures;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNMotionBlurWrapper : NSObject
{
    NSMapTable *_objectDataBufferMapTable;
    double _duration;
    _Bool _isBackFaceCullingEnabled;
    TSDGLShader *_objectDefaultShader;
    TSDGLShader *_objectDefaultMotionBlurShader;
    _Bool _shouldDisableMotionBlurFromDefaults;
    _Bool _shouldFillBackground;
    _Bool _shouldDrawTextOnSeparatePass;
    _Bool _shouldDrawTexturesInReverseOrder;
    _Bool _shouldDrawMotionBlur;
    TSDGLMotionBlurEffect *_motionBlurEffect;
    NSArray *_textures;
}

+ (CDUnknownBlockType)newDefaultTextureDrawOptionBlockWithAnimationDict:(id)arg1 pluginContext:(id)arg2 animationContext:(id)arg3 projectionTransform:(struct CATransform3D)arg4 animationCacheDict:(id)arg5 animationFrame:(struct CGRect)arg6;
@property(nonatomic) _Bool shouldDrawMotionBlur; // @synthesize shouldDrawMotionBlur=_shouldDrawMotionBlur;
@property(nonatomic) _Bool shouldDrawTexturesInReverseOrder; // @synthesize shouldDrawTexturesInReverseOrder=_shouldDrawTexturesInReverseOrder;
@property(retain, nonatomic) NSArray *textures; // @synthesize textures=_textures;
@property(readonly, nonatomic) TSDGLMotionBlurEffect *motionBlurEffect; // @synthesize motionBlurEffect=_motionBlurEffect;
@property(nonatomic) _Bool shouldDrawTextOnSeparatePass; // @synthesize shouldDrawTextOnSeparatePass=_shouldDrawTextOnSeparatePass;
- (void)p_setBackFaceCullingEnabled:(_Bool)arg1;
- (void)p_setupDataBuffers;
- (void)drawMotionBlurWithPluginContext:(id)arg1 textureDrawOptionsBlock:(CDUnknownBlockType)arg2 setupCustomShaderBlock:(CDUnknownBlockType)arg3;
- (id)p_drawPassesWithTextures:(id)arg1 textureDrawOptionsMap:(id)arg2;
- (id)p_textureDrawOptionsMapTableWithPercent:(double)arg1 isWarmingUp:(_Bool)arg2 textureDrawOptionsBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) TSDGLShader *objectShader;
- (void)dealloc;
- (id)initWithFramebufferSize:(struct CGSize)arg1 slideSize:(struct CGSize)arg2 textures:(id)arg3 duration:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNMotionBlurAnimationPluginWrapper : NSObject
{
    NSDictionary *_animationDict;
    NSDictionary *_animationCacheDict;
    CDUnknownBlockType _textureDrawOptionsBlock;
    NSArray *_generatedTextures;
    _Bool _shouldDrawMotionBlur;
    _Bool _shouldGenerateNewTexturesFromLayers;
    _Bool _isSetup;
    KNMotionBlurWrapper *_motionBlurWrapper;
    NSObject<KNAnimationPluginAnimationRendering> *_animationPlugin;
    struct CGRect _drawableFrame;
    struct CGRect _animationFrame;
    struct CATransform3D _projectionTransform;
}

@property(nonatomic) _Bool isSetup; // @synthesize isSetup=_isSetup;
@property(nonatomic) NSObject<KNAnimationPluginAnimationRendering> *animationPlugin; // @synthesize animationPlugin=_animationPlugin;
@property(nonatomic) _Bool shouldGenerateNewTexturesFromLayers; // @synthesize shouldGenerateNewTexturesFromLayers=_shouldGenerateNewTexturesFromLayers;
@property(nonatomic) struct CATransform3D projectionTransform; // @synthesize projectionTransform=_projectionTransform;
@property(nonatomic) struct CGRect animationFrame; // @synthesize animationFrame=_animationFrame;
@property(nonatomic) struct CGRect drawableFrame; // @synthesize drawableFrame=_drawableFrame;
@property(readonly, nonatomic) KNMotionBlurWrapper *motionBlurWrapper; // @synthesize motionBlurWrapper=_motionBlurWrapper;
- (void)renderFrameWithContext:(id)arg1;
- (void)setupWithContext:(id)arg1 animationContext:(id)arg2 orthographicProjection:(_Bool)arg3;
- (struct CATransform3D)p_projectionTransformWithType:(long long)arg1 customProjectionTransform:(struct CATransform3D)arg2 context:(id)arg3 animationContext:(id)arg4;
- (void)setupWithContext:(id)arg1 animationContext:(id)arg2 animationDict:(id)arg3 textures:(id)arg4 projectionTransformType:(long long)arg5 customProjectionTransform:(struct CATransform3D)arg6;
- (id)p_generatedTexturesFromLayersInAnimationDict:(id)arg1 context:(id)arg2 animationContext:(id)arg3 textures:(id)arg4;
- (void)p_setupAnimationDictionariesWithAnimationDict:(id)arg1 context:(id)arg2;
@property(nonatomic) _Bool shouldDrawMotionBlur;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationPlugin:(id)arg1 drawableFrame:(struct CGRect)arg2 animationFrame:(struct CGRect)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNMotionBlurWrapperTextureDrawOptions : NSObject
{
    _Bool _isHidden;
    _Bool _wantsBackFaceCulling;
    _Bool _isBackground;
    _Bool _isForeground;
    _Bool _isEffect;
    _Bool _isMoving;
    double _opacity;
    struct CATransform3D _MVPMatrix;
    struct CATransform3D _previousMVPMatrix;
}

@property(nonatomic) struct CATransform3D previousMVPMatrix; // @synthesize previousMVPMatrix=_previousMVPMatrix;
@property(nonatomic) struct CATransform3D MVPMatrix; // @synthesize MVPMatrix=_MVPMatrix;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) _Bool isMoving; // @synthesize isMoving=_isMoving;
@property(nonatomic) _Bool isEffect; // @synthesize isEffect=_isEffect;
@property(nonatomic) _Bool isForeground; // @synthesize isForeground=_isForeground;
@property(nonatomic) _Bool isBackground; // @synthesize isBackground=_isBackground;
@property(nonatomic) _Bool wantsBackFaceCulling; // @synthesize wantsBackFaceCulling=_wantsBackFaceCulling;
@property(nonatomic) _Bool isHidden; // @synthesize isHidden=_isHidden;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface KNRenderingExporter : TSARenderingExporter <TSDCanvasDelegate>
{
    KNSlideNode *mCurrentSlideNode;
    NSMutableArray *mCurrentSlidesOnPage;
    unsigned long long mCurrentBuildIndex;
    KNOffscreenController *mOffscreenController;
    KNPdfHyperlinkController *mHyperlinkController;
    int mPrintLayout;
    _Bool mPrintingBuilds;
    _Bool mPrintingBackgrounds;
    _Bool mPrintingBorders;
    _Bool mPrintingSlideNumbers;
    _Bool mPrintingDate;
    _Bool mPrintingSkippedSlides;
    _Bool mPrintingSelectedSlides;
    _Bool mPrintingPageMargins;
    _Bool mPrintingDraftQuality;
    unsigned long long mSlidesPerPage;
    unsigned long long mCurrentPage;
    NSString *mPrintTitle;
    double mPageMargin;
    NSSet *mSelectedSlideNodes;
    id mPrintView;
}

@property(copy, nonatomic) NSSet *selectedSlideNodes; // @synthesize selectedSlideNodes=mSelectedSlideNodes;
@property(copy, nonatomic) NSString *printTitle; // @synthesize printTitle=mPrintTitle;
@property(nonatomic) id printView; // @synthesize printView=mPrintView;
@property(nonatomic) double pageMargin; // @synthesize pageMargin=mPageMargin;
@property(nonatomic, getter=isPrintingPageMargins) _Bool printingPageMargins; // @synthesize printingPageMargins=mPrintingPageMargins;
@property(nonatomic) unsigned long long slidesPerPage; // @synthesize slidesPerPage=mSlidesPerPage;
@property(nonatomic, getter=isPrintingSelectedSlides) _Bool printingSelectedSlides; // @synthesize printingSelectedSlides=mPrintingSelectedSlides;
@property(nonatomic, getter=isPrintingDraftQuality) _Bool printingDraftQuality; // @synthesize printingDraftQuality=mPrintingDraftQuality;
@property(nonatomic, getter=isPrintingSkippedSlides) _Bool printingSkippedSlides; // @synthesize printingSkippedSlides=mPrintingSkippedSlides;
@property(nonatomic, getter=isPrintingDate) _Bool printingDate; // @synthesize printingDate=mPrintingDate;
@property(nonatomic, getter=isPrintingSlideNumbers) _Bool printingSlideNumbers; // @synthesize printingSlideNumbers=mPrintingSlideNumbers;
@property(nonatomic, getter=isPrintingBorders) _Bool printingBorders; // @synthesize printingBorders=mPrintingBorders;
@property(nonatomic, getter=isPrintingBackgrounds) _Bool printingBackgrounds; // @synthesize printingBackgrounds=mPrintingBackgrounds;
@property(nonatomic, getter=isPrintingBuilds) _Bool printingBuilds; // @synthesize printingBuilds=mPrintingBuilds;
@property(nonatomic) int printLayout; // @synthesize printLayout=mPrintLayout;
@property(retain, nonatomic) KNSlideNode *currentSlideNode; // @synthesize currentSlideNode=mCurrentSlideNode;
@property(retain, nonatomic) KNOffscreenController *offscreenController; // @synthesize offscreenController=mOffscreenController;
- (void)enableRenderAllContent;
- (void)setOptions:(id)arg1;
- (void)drawInView:(id)arg1 rect:(struct CGRect)arg2;
@property(readonly, nonatomic) _Bool usesViewForDrawing;
@property(readonly, nonatomic) unsigned long long currentSlideNumber;
- (void)addAnchorPointForSlide:(id)arg1 context:(struct CGContext *)arg2;
- (_Bool)drawImageForSlideNode:(id)arg1 andEvent:(unsigned long long)arg2 slideSize:(struct CGSize)arg3 intoRect:(struct CGRect)arg4 context:(struct CGContext *)arg5 createPage:(_Bool)arg6;
- (void)drawSlideNumberForNode:(id)arg1 index:(unsigned long long)arg2 forRect:(struct CGRect)arg3 context:(struct CGContext *)arg4 position:(int)arg5;
- (void)drawNSStringDateForRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
- (void)drawDateForRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
@property(readonly, nonatomic) double spaceForSlideNumbers;
@property(readonly, nonatomic) double heightOfPrintedText;
- (double)progressForCurrentPage;
- (void)drawBorderForRect:(struct CGRect)arg1 context:(struct CGContext *)arg2;
@property(readonly, nonatomic) NSArray *slidesForPrinting;
- (_Bool)incrementPage;
- (_Bool)preparePage:(unsigned long long)arg1;
- (unsigned long long)pageCount;
- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)currentInfos;
- (struct CGRect)boundsRect;
- (_Bool)exportToURL:(id)arg1 pageNumber:(unsigned long long)arg2 delegate:(id)arg3 error:(id *)arg4;
- (_Bool)exportToURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)initWithDocumentRoot:(id)arg1;
- (_Bool)isCanvasDrawingIntoPDF:(id)arg1;
- (_Bool)shouldSuppressBackgrounds;
- (_Bool)isPrintingCanvas;
- (id)documentRoot;
- (id)p_slideNumberStringForSlideNode:(id)arg1 buildIndex:(unsigned long long)arg2;
- (unsigned long long)p_slideNumberForSlideNode:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNSlideExporter : KNRenderingExporter
{
}

- (struct CGRect)boundsRect;
- (void)setup;
- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)incrementPage;

@end

__attribute__((visibility("hidden")))
@interface KNPreviewExporter : KNSlideExporter <TSKImageExporter>
{
}

- (void)setup;
@property(nonatomic) _Bool scaleToFit;
@property(nonatomic) unsigned long long height;
@property(nonatomic) unsigned long long width;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNNoteContainedWPRep : TSWPRep
{
}

@end

__attribute__((visibility("hidden")))
@interface KNBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface KNPlaybackAudioController : NSObject <TSKMediaPlayerControllerDelegate>
{
    KNSoundtrack *mSoundtrack;
    AVQueuePlayer *mAudioPlayer;
    TSKAVQueuePlayerController *mPlayerController;
    unsigned int mAudioPlaybackIsQueued:1;
    unsigned int mIsObservingPlayerItemStatus:1;
    _Bool mIsPlaying;
    _Bool mIsPaused;
}

@property(readonly, nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=mIsPlaying;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playbackDidStopForPlayerController:(id)arg1;
- (void)playerController:(id)arg1 playbackDidFailWithError:(id)arg2;
- (void)p_tearDownAudioPlayback;
- (void)p_startAudioPlayback;
- (void)p_initAudioPlaybackAtMediaIndex:(unsigned long long)arg1;
- (void)resume;
- (void)pause;
- (void)interruptAndReset;
- (void)stop;
- (void)startAtMediaIndex:(unsigned long long)arg1 time:(double)arg2;
- (void)start;
- (void)dealloc;
- (id)initWithSoundtrack:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionFlipThrough : KNAnimationEffect <KNTransitionAnimator, KNFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNClassicThemeRecord : TSPObject
{
    NSString *mUUID;
    KNClassicStylesheetRecord *mStylesheetRecord;
    NSMutableArray *mMasters;
}

@property(readonly, nonatomic) NSArray *masters; // @synthesize masters=mMasters;
- (void)addMaster:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
@property(retain, nonatomic) KNClassicStylesheetRecord *stylesheetRecord;
@property(copy, nonatomic) NSString *UUID;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct ClassicThemeRecordArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ClassicThemeRecordArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNClassicStylesheetRecord : TSPObject
{
    NSDictionary *mIdentifierToStyleMap;
}

- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)dealloc;
@property(retain, nonatomic) NSDictionary *identifierToStyleMap;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)saveToArchive:(struct ClassicStylesheetRecordArchive *)arg1 archiver:(id)arg2;
- (void)loadFromArchive:(const struct ClassicStylesheetRecordArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNSoundtrack : TSPObject <NSCopying>
{
    float mVolume;
    int mMode;
    NSArray *mMedia;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSoundtrackMedia:(id)arg1 context:(id)arg2;
- (id)initWithContext:(id)arg1;
@property(copy, nonatomic) NSArray *media;
@property(nonatomic) int mode;
@property(nonatomic) float volume;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNArchivedSlideCollectionSelection : TSPObject <TSKArchivedSelection>
{
    KNSlideCollectionSelection *mSelection;
}

@property(retain, nonatomic) TSKSelection *selection; // @synthesize selection=mSelection;
- (void)saveToArchiver:(id)arg1;
@property(readonly, nonatomic) KNSlideCollectionSelection *slideCollectionSelection;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNContentAwareRevolve : KNAnimationEffect <KNContentAwareTransitionAnimator, KNContentAwareFrameAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNMotionBlurAnimationPluginWrapper *_motionBlurWrapper;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresPerspectiveTransform;
+ (_Bool)requiresBullets;
+ (_Bool)isCharacterAwareEffect;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (id)animationsWithContext:(id)arg1;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionMotionPath : KNAnimationEffect <KNActionEffectBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresHighQualityTextures;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (id)actionEffectStyle;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationForLayer:(id)arg1 duration:(double)arg2 motionPath:(id)arg3 acceleration:(id)arg4 toAnimationDictionary:(id)arg5;
- (id)p_flattenedPathBasedOnLengthFromPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionDroplet : KNAnimationEffect <KNFrameAnimator>
{
    TSDGLShader *mQuadShader;
    TSDGLDataBuffer *mQuadDataBuffer;
    TSDGLShader *mDropletShader;
    TSDGLDataBuffer *mDropletDataBuffer;
    struct CGRect _frameRect;
    struct CGRect _drawableFrame;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (id)defaultAttributes;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)animationName;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupDataBuffersWithFrameRect:(struct CGRect)arg1;
- (void)p_setupShaders;
- (void)dealloc;
- (void)p_teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNCommandSlideInsertBuild : TSKCommand
{
    KNSlideNode *mSlideNode;
    KNBuild *mBuild;
    unsigned long long mIndex;
    _Bool mShouldCreateChunks;
}

@property(readonly, nonatomic) unsigned long long index; // @synthesize index=mIndex;
@property(readonly, nonatomic) KNBuild *build; // @synthesize build=mBuild;
@property(readonly, nonatomic) KNSlideNode *slideNode; // @synthesize slideNode=mSlideNode;
- (void)p_do;
- (void)redo;
- (void)undo;
- (id)p_buildAtPriorIndex;
- (unsigned long long)p_indexForInsertingChunks;
- (void)p_insertBuildChunks:(id)arg1;
- (void)commit;
- (_Bool)process;
- (void)dealloc;
- (id)initWithSlideNode:(id)arg1 build:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)initWithSlideNode:(id)arg1 build:(id)arg2 atIndex:(unsigned long long)arg3 createChunks:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface KNActionOpacity : KNAnimationEffect <KNActionEffectBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresHighQualityTextures;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (id)actionEffectStyle;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionRotation : KNAnimationEffect <KNActionEffectBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresHighQualityTextures;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (double)p_angleFromAttributes:(id)arg1;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (id)actionEffectStyle;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationForLayer:(id)arg1 duration:(double)arg2 fromAngle:(double)arg3 toAngle:(double)arg4 acceleration:(id)arg5 toAnimationDictionary:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNActionScale : KNAnimationEffect <KNActionEffectBuildAnimator, KNAnimationPluginArchiving, KNAnimationPluginObsoleteNames>
{
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)obsoleteAnimationNames;
+ (id)actionEffectStyle;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationForLayer:(id)arg1 toLayer:(id)arg2 duration:(double)arg3 scale:(double)arg4 acceleration:(id)arg5 toAnimationDictionary:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNAnimationPluginContext : NSObject <KNAnimationPluginContext>
{
    _Bool _isMotionBlurred;
    _Bool _isPreview;
    _Bool _isWarmingUp;
    KNAnimatedBuild *_animatedBuild;
    NSArray *_magicMoveMatches;
    double _percent;
    NSArray *_textures;
    NSDictionary *_transitionAttributes;
    unsigned long long _direction;
    double _duration;
    TSDGLState *_GLState;
    TSDRep *_rep;
    long long _rendererType;
    struct CGRect _boundingRectOnCanvas;
    struct CGRect _boundingRect;
}

@property(nonatomic) long long rendererType; // @synthesize rendererType=_rendererType;
@property(nonatomic) TSDRep *rep; // @synthesize rep=_rep;
@property(nonatomic) _Bool isWarmingUp; // @synthesize isWarmingUp=_isWarmingUp;
@property(retain, nonatomic) TSDGLState *GLState; // @synthesize GLState=_GLState;
@property(nonatomic) _Bool isPreview; // @synthesize isPreview=_isPreview;
@property(nonatomic) struct CGRect boundingRect; // @synthesize boundingRect=_boundingRect;
@property(nonatomic) struct CGRect boundingRectOnCanvas; // @synthesize boundingRectOnCanvas=_boundingRectOnCanvas;
@property(nonatomic) _Bool isMotionBlurred; // @synthesize isMotionBlurred=_isMotionBlurred;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(nonatomic) NSDictionary *transitionAttributes; // @synthesize transitionAttributes=_transitionAttributes;
@property(retain, nonatomic) NSArray *textures; // @synthesize textures=_textures;
@property(nonatomic) double percent; // @synthesize percent=_percent;
@property(nonatomic) NSArray *magicMoveMatches; // @synthesize magicMoveMatches=_magicMoveMatches;
@property(nonatomic) KNAnimatedBuild *animatedBuild; // @synthesize animatedBuild=_animatedBuild;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool isFrameRenderer;
@property(readonly, nonatomic) _Bool isMagicMove;
@property(readonly, nonatomic) _Bool isTransition;
@property(readonly, nonatomic) _Bool isBuild;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNMagicMoveMatchMaker : NSObject
{
}

+ (id)layerAndContentsArrayByUpdatingMorphMatches:(id)arg1 withCurrentTime:(double)arg2 animationStartTime:(double)arg3 animationDuration:(double)arg4 morphFrameDuration:(double)arg5 animatedSlideView:(id)arg6 playbackSession:(id)arg7 generateSingleTextures:(_Bool)arg8;
+ (id)magicMoveMatchesFromAnimatedSlideView:(id)arg1 outMorphMatches:(id)arg2 textDeliveryType:(long long)arg3 supportsMorphTextures:(_Bool)arg4 disableMatchesOnText:(_Bool)arg5;
+ (id)p_animationMatchesFromMatch:(id)arg1 outMorphMatches:(id)arg2 animatedSlideView:(id)arg3 outgoingCanvas:(id)arg4 incomingCanvas:(id)arg5 ignoreOutgoingBuildVisibility:(_Bool)arg6 supportsMorphTextures:(_Bool)arg7;
+ (id)magicMoveMatchesWithOutgoingInfos:(id)arg1 incomingInfos:(id)arg2 outgoingCanvas:(id)arg3 incomingCanvas:(id)arg4 textDeliveryType:(long long)arg5 outgoingAnimatedSlideModel:(id)arg6 incomingAnimatedSlideModel:(id)arg7 ignoreOutgoingBuildVisibility:(_Bool)arg8 supportsMorphTextures:(_Bool)arg9 disableMatchesOnText:(_Bool)arg10;
+ (id)repToOpacityTextRangeDictMapWithOutgoingReps:(id)arg1 incomingReps:(id)arg2 outgoingAnimatedSlideModel:(id)arg3 incomingAnimatedSlideModel:(id)arg4;
+ (id)p_magicMoveMatchesUsingAttributesForClass:(Class)arg1 outgoingObjects:(id)arg2 incomingObjects:(id)arg3 textureContext:(id)arg4 outgoingAnimatedSlideModel:(id)arg5 incomingAnimatedSlideModel:(id)arg6 ignoreOutgoingBuildVisibility:(_Bool)arg7;
+ (id)p_separateOutgoingAndIncomingMagicMoveMatchesForClass:(Class)arg1 outgoingObjects:(id)arg2 incomingObjects:(id)arg3 textureContext:(id)arg4 outgoingAnimatedSlideModel:(id)arg5 incomingAnimatedSlideModel:(id)arg6 ignoreOutgoingBuildVisibility:(_Bool)arg7;
+ (id)p_matchObjectWithRep:(id)arg1 model:(id)arg2 ignoreBuildVisibility:(_Bool)arg3;
+ (_Bool)isDrawableIgnored:(id)arg1;
+ (void)setDrawable:(id)arg1 isIgnored:(_Bool)arg2;
+ (long long)magicMoveMorphTexturesPerSecond;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface KNAnimParameterGroup : NSObject
{
    NSMutableDictionary *_parametersDict;
    NSString *_fileName;
    NSString *_originalFileName;
    NSString *_name;
    NSArray *_parameterArray;
}

+ (id)parameterGroupForFile:(id)arg1;
@property(readonly, nonatomic) NSArray *parameterArray; // @synthesize parameterArray=_parameterArray;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)writeAnimationCurvesToFile;
- (void)resetAnimationCurvesFromBundle;
- (void)readAnimationCurvesFromFile;
- (void)dealloc;
- (id)initWithFileName:(id)arg1;
- (id)mediaTimingFunctionForAnimationCurve:(id)arg1 reversed:(_Bool)arg2;
- (id)mediaTimingFunctionForAnimationCurve:(id)arg1;
- (double)valueForAnimationCurve:(id)arg1 atPercent:(double)arg2;
- (double)valueForConstant:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNTitlePlaceholderInfo : KNPlaceholderInfo
{
}

- (void)acceptVisitor:(id)arg1;
- (id)defaultBuildChunkTitle;
- (id)initWithKNPlaceholderInfo:(id)arg1;
- (int)kind;

@end

__attribute__((visibility("hidden")))
@interface KNBodyPlaceholderInfo : KNPlaceholderInfo
{
}

- (void)acceptVisitor:(id)arg1;
- (id)defaultBuildChunkTitle;
- (id)initWithKNPlaceholderInfo:(id)arg1;
- (int)kind;

@end

__attribute__((visibility("hidden")))
@interface KNMacArchivedUILayout : TSPObject
{
    KNMacUILayout *mUILayout;
}

@property(readonly, nonatomic) KNMacUILayout *uiLayout; // @synthesize uiLayout=mUILayout;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithUILayout:(id)arg1 context:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNMacUILayout : NSObject <NSCopying, NSMutableCopying>
{
    _Bool mShowingSidebar;
    _Bool mShowingNavigatorViewInSidebar;
    _Bool mShowingPresenterNotes;
    _Bool mShowingLightTable;
    _Bool mShowingInspectorPane;
    _Bool mShowingMasterSlides;
    long long mInspectorPaneViewMode;
}

+ (id)uiLayoutFromArchive:(const struct DesktopUILayoutArchive *)arg1 unarchiver:(id)arg2 context:(id)arg3;
@property(readonly, nonatomic, getter=isShowingMasterSlides) _Bool showingMasterSlides; // @synthesize showingMasterSlides=mShowingMasterSlides;
@property(readonly, nonatomic) long long inspectorPaneViewMode; // @synthesize inspectorPaneViewMode=mInspectorPaneViewMode;
@property(readonly, nonatomic, getter=isShowingInspectorPane) _Bool showingInspectorPane; // @synthesize showingInspectorPane=mShowingInspectorPane;
@property(readonly, nonatomic, getter=isShowingLightTable) _Bool showingLightTable; // @synthesize showingLightTable=mShowingLightTable;
@property(readonly, nonatomic, getter=isShowingPresenterNotes) _Bool showingPresenterNotes; // @synthesize showingPresenterNotes=mShowingPresenterNotes;
@property(readonly, nonatomic, getter=isShowingSidebar) _Bool showingSidebar; // @synthesize showingSidebar=mShowingSidebar;
@property(readonly, nonatomic, getter=p_isShowingNavigatorViewInSidebar) _Bool p_showingNavigatorViewInSidebar;
@property(readonly, nonatomic) long long sidebarViewMode;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)saveToArchive:(struct DesktopUILayoutArchive *)arg1 archiver:(id)arg2;
- (id)archivedUILayoutInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNMacMutableUILayout : KNMacUILayout
{
}

@property(nonatomic, getter=isShowingMasterSlides) _Bool showingMasterSlides;
@property(nonatomic) long long inspectorPaneViewMode;
@property(nonatomic, getter=isShowingInspectorPane) _Bool showingInspectorPane;
@property(nonatomic, getter=isShowingLightTable) _Bool showingLightTable;
@property(nonatomic, getter=isShowingPresenterNotes) _Bool showingPresenterNotes;
@property(nonatomic) long long sidebarViewMode;
@property(nonatomic, getter=isShowingSidebar) _Bool showingSidebar;

@end

__attribute__((visibility("hidden")))
@interface KNQuicklookAppDelegate : TSAServerApplicationDelegate
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface KNQuicklookCompatibilityDelegate : KNBaseCompatibilityDelegate
{
}

@end

__attribute__((visibility("hidden")))
@interface KNAnimationAttributes : NSObject <NSCopying>
{
    NSString *mEffect;
    NSDictionary *mAttributes;
}

+ (_Bool)customAttributeKeyIsValid:(id)arg1;
+ (id)supportedCustomAttributes;
+ (id)attributesWithEffect:(id)arg1 attributes:(id)arg2;
@property(readonly, nonatomic) NSDictionary *attributes; // @synthesize attributes=mAttributes;
@property(readonly, nonatomic) NSString *effect; // @synthesize effect=mEffect;
- (id)description;
- (id)valueForAttributeKey:(id)arg1;
- (_Bool)containsAttributeForKey:(id)arg1;
- (id)attributesByRemovingAttributeForKey:(id)arg1;
- (id)attributesByAddingMissingAttributesFromDictionary:(id)arg1;
- (id)attributesByAddingAttributesFromDictionary:(id)arg1;
- (id)attributesByChangingEffectToEffect:(id)arg1;
- (id)attributesBySettingValue:(id)arg1 forAttributeKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithEffect:(id)arg1 attributes:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNSlideCollectionSelection : TSKSelection
{
    NSSet *mSlideNodes;
    KNSlideNode *mSlideNodeToEdit;
}

@property(readonly, nonatomic) KNSlideNode *slideNodeToEdit; // @synthesize slideNodeToEdit=mSlideNodeToEdit;
@property(readonly, nonatomic) NSSet *slideNodes; // @synthesize slideNodes=mSlideNodes;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;
- (id)initWithSlideNode:(id)arg1;
- (id)initWithSlideNodes:(id)arg1 slideNodeToEdit:(id)arg2;
- (void)saveToArchive:(struct SlideCollectionSelectionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct SlideCollectionSelectionArchive *)arg1 unarchiver:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFireworks : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    struct CGRect _drawableFrame;
    struct CGRect _frameRect;
    struct CATransform3D _baseOrthoTransform;
    struct CATransform3D _baseTransform;
    NSArray *_fireworksSystems;
    TSDGLShader *_fireworksShader;
    TSDGLShader *_objectShader;
    TSDGLDataBuffer *_objectDataBuffer;
    TSDGLShader *_centerBurstShader;
    TSDGLDataBuffer *_centerBurstDataBuffer;
    TSDGLTextureInfo *_centerBurstTextureInfo;
    TSDGLTextureInfo *_particleTextureInfo;
    TSDGLFrameBuffer *_framebuffer;
    TSDGLShader *_fboShader;
    TSDGLDataBuffer *_fboDataBuffer;
    TSDGLBloomEffect *_bloomEffect;
    double _previousPercent;
    _Bool _shouldApplyBloomEffect;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndForTextures:(id)arg1 forBuild:(id)arg2;
- (void)renderFrameWithContext:(id)arg1;
- (void)p_drawParticleSystemsWithPercent:(double)arg1 sparkles:(_Bool)arg2 particleSystemOpacity:(double)arg3 context:(id)arg4;
- (void)p_drawObject:(id)arg1 withContext:(id)arg2;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupFBOWithSize:(struct CGSize)arg1;
- (id)p_fireworksSystemsForTR:(id)arg1 build:(id)arg2 context:(id)arg3;
- (void)p_setupParticleTexture;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFireworksSystem : TSDGLParticleSystem
{
    CDStruct_03942939 _startingColorRGB;
    _Bool _didDrawCenterBurst;
    double _lifeSpanMinDuration;
    double _colorRandomness;
    CDStruct_083b1a49 _lifeSpan;
    double _maxDistance;
    double _fireworkStartingPositionX;
    struct CGSize _randomParticleSizeMinMax;
    struct CGPoint _randomParticleSpeedMinMax;
    struct CGPoint _startingPoint;
}

+ (_Bool)willOverrideColors;
+ (_Bool)willOverrideStartingPoints;
@property(readonly, nonatomic) struct CGPoint startingPoint; // @synthesize startingPoint=_startingPoint;
@property(nonatomic) _Bool didDrawCenterBurst; // @synthesize didDrawCenterBurst=_didDrawCenterBurst;
@property(nonatomic) double fireworkStartingPositionX; // @synthesize fireworkStartingPositionX=_fireworkStartingPositionX;
@property(nonatomic) struct CGPoint randomParticleSpeedMinMax; // @synthesize randomParticleSpeedMinMax=_randomParticleSpeedMinMax;
@property(nonatomic) struct CGSize randomParticleSizeMinMax; // @synthesize randomParticleSizeMinMax=_randomParticleSizeMinMax;
@property(nonatomic) double maxDistance; // @synthesize maxDistance=_maxDistance;
@property(nonatomic) CDStruct_b2fbf00d lifeSpan; // @synthesize lifeSpan=_lifeSpan;
@property(nonatomic) double colorRandomness; // @synthesize colorRandomness=_colorRandomness;
@property(nonatomic) double lifeSpanMinDuration; // @synthesize lifeSpanMinDuration=_lifeSpanMinDuration;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (double)speedMax;
- (CDStruct_818bb265)colorAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;
- (void)setupWithTexture:(id)arg1 particleTextureSize:(struct CGSize)arg2 reverseDrawOrder:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface KNChartMultiDataBuild : KNAnimationEffect <KNChunkableBuildAnimator, KNAnimationPluginMagicChart>
{
    NSMutableArray *mLayersToRestore;
    NSArray *mChartAnimatedLayers;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isMagicChart;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;
- (id)animationInfoForAnimatedBuild:(id)arg1;
- (void)animationDidEndWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNTransitionGrid : KNAnimationEffect <KNTransitionAnimator, KNAnimationPluginArchiving>
{
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildFromDarkness : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    struct CGRect _drawableFrame;
    struct CGRect _frameRect;
    struct CATransform3D _baseTransform;
    KNAnimParameterGroup *_parameterGroup;
    TSDGLShader *_shader;
    TSDGLDataBuffer *_dataBuffer;
    unsigned int _edgeTextureName;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndForTextures:(id)arg1 forBuild:(id)arg2;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNObjectPlaceholderInfo : KNPlaceholderInfo
{
}

- (id)instructionalText;
- (_Bool)displaysInstructionalText;
- (Class)layoutClass;
- (Class)repClass;
- (int)kind;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeRepMagicMoveTextChunk : NSObject
{
    _Bool _hasListLabel;
    _Bool _isVisible;
    TSWPShapeRep *_rep;
    NSString *_stringValue;
    NSMutableIndexSet *_unhandledIndexSet;
    long long _stageIndex;
    double _opacityFromRenderer;
    struct _NSRange _range;
}

@property(nonatomic) double opacityFromRenderer; // @synthesize opacityFromRenderer=_opacityFromRenderer;
@property(nonatomic) _Bool isVisible; // @synthesize isVisible=_isVisible;
@property(nonatomic) long long stageIndex; // @synthesize stageIndex=_stageIndex;
@property(retain, nonatomic) NSMutableIndexSet *unhandledIndexSet; // @synthesize unhandledIndexSet=_unhandledIndexSet;
@property(nonatomic) _Bool hasListLabel; // @synthesize hasListLabel=_hasListLabel;
@property(copy, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(nonatomic) TSWPShapeRep *rep; // @synthesize rep=_rep;
- (id).cxx_construct;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSWPShapeRepStageChunk : NSObject
{
    long long _stageIndex;
    NSArray *_storageRanges;
}

@property(retain, nonatomic) NSArray *storageRanges; // @synthesize storageRanges=_storageRanges;
@property(nonatomic) long long stageIndex; // @synthesize stageIndex=_stageIndex;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface KNObjectPlaceholderRep : KNPlaceholderRep
{
}

- (_Bool)shouldBeginEditingOnSingleClick;
- (_Bool)handleDoubleTapAtPoint:(struct CGPoint)arg1;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface KNActionJiggle : KNAnimationEffect <KNActionEffectBuildAnimator>
{
    KNAnimParameterGroup *_parameterGroup;
    double singleRotationAnimDuration;
}

+ (id)thumbnailImageNameForType:(int)arg1;
+ (id)applyActionEffect:(id)arg1 toAttributes:(id)arg2;
+ (id)actionEffectStyle;
+ (id)customAttributes;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (_Bool)isEmphasisBuildAnimation;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (id)animationsForTextureSet:(id)arg1 finalTextureSet:(id)arg2 duration:(double)arg3 attributes:(id)arg4 previousAttributes:(id)arg5;
- (void)p_addAnimationsToLayer:(id)arg1 angleLarge:(double)arg2 angleSmall:(double)arg3 xOffsetLarge:(double)arg4 xOffsetSmall:(double)arg5 duration:(double)arg6 jiggleCount:(double)arg7 result:(id)arg8;
- (double)p_jiggleCountFromEffectAttributes:(id)arg1;
- (void)dealloc;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNObjectPlaceholderLayout : KNPlaceholderLayout
{
}

- (id)instructionalStorageForContainedStorage:(id)arg1 storageKind:(int)arg2;
- (_Bool)supportsRotation;
- (_Bool)canFlip;

@end

__attribute__((visibility("hidden")))
@interface KNBuildCrumble : KNAnimationEffect <KNFrameBuildAnimator, KNAnimationPluginArchiving>
{
    KNAnimParameterGroup *_parameterGroup;
    KNBuildCrumbleSystem *_shatterSystem;
    TSDGLShader *_shatterSystemShader;
    KNBuildSmokeSystem *_smokeSystem;
    TSDGLShader *_smokeSystemShader;
    TSDGLTextureInfo *_smokeTextureInfo;
    TSDGLShader *_fboShader;
    TSDGLDataBuffer *_fboDataBuffer;
    TSDGLDataBuffer *_blurDataBuffer;
    TSDGLFrameBuffer *_shadowFramebuffer;
    TSDGLShader *_blurShader;
    struct CATransform3D _projectionMatrix;
    struct CATransform3D _shadowFBOProjectionMatrix;
    struct CGRect _drawableFrame;
    struct CGRect _animationRect;
}

+ (void)downgradeAttributes:(id *)arg1 animationName:(id *)arg2 warning:(id *)arg3 type:(int)arg4 isToClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (void)upgradeAttributes:(id *)arg1 animationName:(id)arg2 warning:(id *)arg3 type:(int)arg4 isFromClassic:(_Bool)arg5 version:(unsigned long long)arg6;
+ (id)thumbnailImageNameForType:(int)arg1;
+ (_Bool)requiresSingleTexturePerStage;
+ (id)defaultAttributes;
+ (void)fillLocalizedDirectionMenu:(id)arg1 forType:(int)arg2;
+ (unsigned long long)directionType;
+ (id)localizedMenuString:(int)arg1;
+ (id)supportedTypes;
+ (id)animationFilter;
+ (int)animationCategory;
+ (id)animationName;
- (void)animationDidEndWithContext:(id)arg1;
- (void)renderFrameWithContext:(id)arg1;
- (void)animationWillBeginWithContext:(id)arg1;
- (void)p_setupParticleSystemsWithImage:(id)arg1 animatedBuild:(id)arg2 context:(id)arg3;
- (void)p_setupShadersWithContext:(id)arg1;
- (void)p_setupMVPMatricesWithContext:(id)arg1;
- (struct CGRect)frameOfEffectWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)dealloc;
- (void)teardown;
- (id)initWithAnimationContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface KNBuildCrumbleSystem : TSDGLParticleSystem
{
    TSDGLVoronoiTriangleData *_voronoiTriangleData;
    struct {
        struct {
            float _field1;
            float _field2;
        } _field1;
        CDStruct_03942939 _field2;
        CDStruct_03942939 _field3;
        struct {
            float _field1;
            float _field2;
        } _field4;
    } *_cellParameters;
    double _speedMaxLimiter;
    double _speedMax;
    double _rotationMax;
    double _lifeSpanRandomness;
    double _lifeSpanDelay;
}

+ (unsigned long long)numberOfVerticesPerParticle;
+ (_Bool)willOverrideGeometry;
@property(nonatomic) double lifeSpanDelay; // @synthesize lifeSpanDelay=_lifeSpanDelay;
@property(nonatomic) double lifeSpanRandomness; // @synthesize lifeSpanRandomness=_lifeSpanRandomness;
@property(nonatomic) double rotationMax; // @synthesize rotationMax=_rotationMax;
@property(nonatomic) double speedMax; // @synthesize speedMax=_speedMax;
@property(nonatomic) double speedMaxLimiter; // @synthesize speedMaxLimiter=_speedMaxLimiter;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)centerAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_b2fbf00d)vertexPositionAtVertexIndex:(unsigned long long)arg1 particleIndexPoint:(struct CGPoint)arg2;
- (void)dealloc;
- (id)initWithNumberOfParticles:(unsigned long long)arg1 objectSize:(struct CGSize)arg2 slideSize:(struct CGSize)arg3 duration:(double)arg4 direction:(unsigned long long)arg5 shader:(id)arg6 percentOfCellsToSplit:(double)arg7;
- (void)p_setupParameters;

@end

__attribute__((visibility("hidden")))
@interface KNBuildSmokeSystem : TSDGLParticleSystem
{
    double _speedMax;
    double _rotationMax;
    double _scaleMax;
    double _lifeSpanDelay;
}

+ (_Bool)willOverrideStartingPoints;
@property(nonatomic) double lifeSpanDelay; // @synthesize lifeSpanDelay=_lifeSpanDelay;
@property(nonatomic) double scaleMax; // @synthesize scaleMax=_scaleMax;
@property(nonatomic) double rotationMax; // @synthesize rotationMax=_rotationMax;
@property(nonatomic) double speedMax; // @synthesize speedMax=_speedMax;
- (CDStruct_b2fbf00d)lifeSpanAtIndexPoint:(struct CGPoint)arg1;
- (double)scaleAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)rotationAtIndexPoint:(struct CGPoint)arg1;
- (CDStruct_03942939)speedAtIndexPoint:(struct CGPoint)arg1;
- (struct CGPoint)startingPointAtIndexPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNAppDelegateBase : TSABaseApplicationDelegate
{
}

- (void)p_inputMethodsChanged:(id)arg1;
- (_Bool)supportsRTL;
- (id)templateTypeDisplayName;
- (id)documentTypeDisplayName;
- (id)defaultAppStoreURLString;
- (id)applicationName;
- (id)nativeSFFDocumentType;
- (id)tangierEditingFormatDocumentType;
- (id)templateSFFDocumentType;
- (id)templateDocumentType;
- (id)nativeDocumentType;
- (id)image32IconForTXTFiles;
- (id)previewImageNameForEncryptedNativeDocument;
- (id)previewImageNameForNativeDocument;
- (id)previewImageNameForDocumentType:(id)arg1;
- (id)applicationTemplateVariantsForLocale:(struct __CFLocale *)arg1;
- (id)appChartPropertyOverrides;
@property(readonly, nonatomic) NSArray *excelDocumentTypes;
- (id)importableDocumentTypes;
- (Class)documentViewControllerClass;
- (id)createCompatibilityDelegate;
- (Class)documentRootClass;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)configureSharedCode;
- (void)wakeUpDownloadManager;
- (void)registerClassTypeMappings;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNPageLayout : TSWPPageLayout <TSWPLayoutParent, TSWPColumnMetrics, TSWPStorageObserver>
{
    _Bool mIsChildLayoutsValid;
    CDStruct_0441cfb5 mPageCoordinate;
    TNPageController *mPageController;
    TNPageContentLayout *mContentLayout;
    _Bool mIsPlaceholder;
    TNSheet *mSheet;
}

+ (id)pageLayoutWithPageController:(id)arg1 pageCoordinate:(CDStruct_0441cfb5)arg2;
@property(retain) TNSheet *sheet; // @synthesize sheet=mSheet;
@property(getter=isPlaceholder) _Bool placeholder; // @synthesize placeholder=mIsPlaceholder;
@property(retain) TNPageContentLayout *contentLayout; // @synthesize contentLayout=mContentLayout;
@property TNPageController *pageController; // @synthesize pageController=mPageController;
@property CDStruct_0441cfb5 pageCoordinate; // @synthesize pageCoordinate=mPageCoordinate;
- (id)description;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (unsigned long long)pageNumber;
- (unsigned long long)pageCount;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
@property(readonly, nonatomic) double textScaleFactor;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (void)invalidateSize;
- (id)dependentLayouts;
- (void)parentDidChange;
- (Class)repClassOverride;
- (id)computeLayoutGeometry;
- (void)storage:(id)arg1 didChangeRange:(struct _NSRange)arg2 delta:(long long)arg3 broadcastKind:(int)arg4;
- (void)updateChildrenFromInfo;
- (_Bool)containsLayoutForInfo:(id)arg1;
- (void)setChildren:(id)arg1;
- (void)addChild:(id)arg1;
@property(readonly) struct CGRect contentFrame;
@property(readonly) struct CGRect pageBounds;
- (id)p_pageInfo;
- (void)willBeRemovedFromLayoutController:(id)arg1;
- (void)willBeAddedToLayoutController:(id)arg1;
- (void)performBlockForEachHeaderFooterLayout:(CDUnknownBlockType)arg1;
- (struct CGRect)bodyRect;
- (id)headerFooterProvider;
- (void)dealloc;
- (id)initWithPageController:(id)arg1 pageCoordinate:(CDStruct_0441cfb5)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNPageRep : TSWPPageRep
{
    struct CGRect _shadowPathRect;
    struct CGPath *_shadowPath;
}

- (id)p_childRepForInfo:(id)arg1;
- (id)p_repForHeaderLayout:(id)arg1;
- (void)p_willBeginDynamicContentScaleChange:(id)arg1;
- (int)p_hitHeaderFooterFragment:(int)arg1 atPoint:(struct CGPoint)arg2;
- (_Bool)p_headerFooterIsVisibleAndInteractive:(int)arg1;
- (_Bool)isOpaque;
- (id)p_rasterizeHeaderRep:(id)arg1 type:(int)arg2 fragment:(int)arg3;
- (void)didUpdateLayer:(id)arg1;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)willUpdateLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNPersistentChartMediator : TSCHPersistentChartMediator <TSKDocumentObject, TSCECalculationEngineRegistration>
{
}

- (id)objectToArchiveInDependencyTracker;
- (_Bool)registerLast;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willModify;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNChartMediator : TSCHChartMediator <TSCECalculationEngineRegistration, TSCEFormulaOwning>
{
    struct __CFUUID *mEntityId;
    TNChartFormulaStorage *mFormulaStorage;
    NSMutableArray *mFormulasToRewrite;
    NSMutableArray *mFormulasToRecalculate;
    TSCEFormulaRewriteSpec *mInFlightRewriteSpec;
    int mScatterFormat;
    _Bool mIsRegisteredWithCalcEngine;
    _Bool mIsEditing;
    _Bool mEditingHasIsPhantomOverride;
    _Bool mEditingIsPhantomOverride;
    TNChartFormulaStorage *mEditingStorageOverride;
    TNMutableChartFormulaStorage *mEditingAccumulatedFormulas;
    TNMutableChartFormulaStorage *mEditingActiveFormulas;
    NSCondition *mImportUpgradeCondition;
    _Bool mHasBlittedSinceConditionVarSet;
    _Bool mShouldFixAreaFormula;
    TSUIntToIntDictionary *mFormulaIndexToGridIndex;
}

+ (id)propertiesThatInvalidateMediator;
@property(nonatomic) _Bool isEditing; // @synthesize isEditing=mIsEditing;
@property(readonly, nonatomic) _Bool hasBlittedSinceConditionVarSet; // @synthesize hasBlittedSinceConditionVarSet=mHasBlittedSinceConditionVarSet;
@property(readonly, nonatomic) struct __CFUUID *entityID; // @synthesize entityID=mEntityId;
- (void)localizeFormulaLiteralsWithBundle:(id)arg1;
- (id)customNegScatterXFormulas;
- (id)customPosScatterXFormulas;
- (id)customNegFormulas;
- (id)customPosFormulas;
- (id)columnFormulas;
- (id)rowFormulas;
- (int)formulasDirection;
- (id)dataFormulas;
- (void)replaceReferencesInFormulasWithOwnerIDMap:(id)arg1;
- (void)replaceReferencesInFormulas:(id)arg1 withOwnerIDMap:(id)arg2;
- (_Bool)p_tableHasCell:(CDStruct_78b871e1)arg1 withCalcEngine:(id)arg2;
- (_Bool)p_tableHasRange:(CDStruct_5744d895)arg1 withCalcEngine:(id)arg2;
- (id)referencedEntities;
- (id)referencedEntitiesInMap:(id)arg1;
- (id)expandSingleRangeForProposedCategoryLabels:(CDStruct_5744d895)arg1;
- (void)p_transposeSeriesAndCategoryLabelsInMap:(id)arg1;
- (void)repairMissingSeriesLabelsInMap:(id)arg1;
- (void)repairMissingCategoryLabelsInMap:(id)arg1;
- (void)repairMissingCategoryLabelsInMap:(id)arg1 ignoringNonVisibleLabels:(_Bool)arg2;
- (void)p_repairMissingCategoryLabelsInMap:(id)arg1;
- (void)p_repairMissingTabularCategoryLabelsRegularInMap:(id)arg1;
- (void)p_repairMissingTabularCategoryLabelsIrregularInMap:(id)arg1;
- (void)p_disconnectLabelsInMap:(id)arg1 ofType:(int)arg2;
- (void)p_repairMissingStaticCategoryLabelsInMap:(id)arg1;
- (id)p_newStaticNameForCategoryAvoidingExistingNames:(id)arg1 runningCount:(unsigned long long *)arg2;
- (_Bool)p_tabularCategoryLabelsAppearRegularInMap:(id)arg1;
- (_Bool)p_labelsAreStaticInMap:(id)arg1 ofType:(int)arg2;
- (void)saveToArchive:(struct ChartMediatorArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ChartMediatorArchive *)arg1 unarchiver:(id)arg2;
- (id)commandToSetNewSeriesIndex:(unsigned long long)arg1 forSeriesIndex:(unsigned long long)arg2;
- (id)commandSetCategoryName:(id)arg1 forCategoryIndex:(unsigned long long)arg2;
- (id)p_commandToSetSeriesNameFormulaWrapper:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)commandToSetSeriesNameFormula:(id)arg1 seriesIndex:(unsigned long long)arg2;
- (id)seriesNameFormulaForSeriesIndex:(unsigned long long)arg1;
- (unsigned long long)p_labelIndexForSeriesNameSeriesIndex:(unsigned long long)arg1;
- (id)commandSetSeriesName:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)setImportUpgradeCondition:(id)arg1;
- (void)copyValuesIntoChartModelOutOfBandUsingCalcEngine:(id)arg1 formulaMap:(id)arg2;
- (_Bool)registerLast;
- (void)unregisterFromCalculationEngine:(id)arg1;
- (void)registerWithCalculationEngineForDocumentLoad:(id)arg1;
- (void)p_reregister:(_Bool)arg1 withCalculationEngine:(id)arg2;
- (id)objectToArchiveInDependencyTracker;
- (id)endRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)p_detectAndRepairDeletedFormulas:(id)arg1 forRewriteSpec:(id)arg2;
- (void)p_detectAndRepairInsertedSeriesConditionFromPreviousState:(id)arg1 andEditingState:(id)arg2 forTectonicShift:(id)arg3;
- (void)p_detectAndRepairInsertedCategoryConditionFromPreviousState:(id)arg1 andEditingState:(id)arg2 forTectonicShift:(id)arg3;
- (void)beginRewriteForCalculationEngine:(id)arg1 spec:(id)arg2;
- (void)p_registerFormulaeWithCalcEngine:(id)arg1;
- (void)p_registerAreaFormulaForMap:(id)arg1 withCalcEngine:(id)arg2;
- (void)p_registerHubFormulaWithCalcEngine:(id)arg1;
- (void)p_unregisterAllFormulaeFromCalcEngine:(id)arg1;
- (void)writeResultsForCalculationEngine:(id)arg1;
- (CDStruct_3d581f42)recalculateForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 isInCycle:(_Bool)arg3 hasCalculatedPrecedents:(_Bool)arg4;
- (void)invalidateForCalculationEngine:(id)arg1;
- (void)rewriteForCalculationEngine:(id)arg1 formulaID:(CDStruct_a91f2c80)arg2 rewriteSpec:(id)arg3;
- (_Bool)serializeCalculations;
- (void)releaseForCalculationEngine:(id)arg1;
- (void)retainForCalculationEngine:(id)arg1;
- (void)p_copyValuesIntoChartModelFromPair:(id)arg1;
- (void)p_copyValuesIntoToChartModel:(id)arg1 formulaMap:(id)arg2;
- (id)p_untitledLabelWithIndex:(unsigned long long)arg1;
- (void)synchronizeModelFromFormulaStorage;
- (void)setFormulaStorage:(id)arg1;
- (void)setFormulaStorage:(id)arg1 doRegistration:(_Bool)arg2;
- (id)formulaStorage;
- (void)p_hackSetCalcEngineLegacyGlobalID;
- (id)seriesDataFormulaForSeriesDimension:(id)arg1;
- (id)commandToSetSeriesDataFormula:(id)arg1 seriesDimension:(id)arg2;
- (id)commandToSetErrorBarCustomFormula:(id)arg1 seriesIndex:(unsigned long long)arg2 dataType:(int)arg3;
- (id)errorBarCustomFormulaForSeriesIndex:(unsigned long long)arg1 dataType:(int)arg2;
- (id)p_tstFormulaFromForumulaWrapper:(id)arg1;
- (id)p_formulaWrapperFromTSTFormula:(id)arg1;
- (int)p_formulaTypeFromDataType:(int)arg1;
- (id)commandToChangeCategoryLabelFormulas:(id)arg1;
- (id)commandToChangeLabelFormulas:(id)arg1 forType:(int)arg2;
- (id)categoryLabelFormulas;
- (id)labelFormulasForType:(int)arg1;
- (id)dataFormatterForSeries:(id)arg1 index:(unsigned long long)arg2 axisType:(int)arg3 documentRoot:(id)arg4;
- (id)dataFormatterForAxis:(id)arg1 documentRoot:(id)arg2;
- (unsigned long long)formulaIndexForSeriesDimension:(id)arg1;
- (id)seriesDimensionForFormulaIndex:(unsigned long long)arg1;
- (_Bool)p_isScatterOrBubble;
- (id)commandToSetChartGridDirection:(int)arg1 documentRoot:(id)arg2;
- (void)invalidateAndSynchronizeMediator;
@property(readonly, nonatomic) int direction;
- (void)setEditingStorageOverride:(id)arg1;
- (void)clearEditingIsPhantomOverride;
- (void)setEditingIsPhantomOverride:(_Bool)arg1;
- (void)synchronizeModelFromFormulaStorage:(id)arg1;
- (id)formulaStorageFromTable:(id)arg1 selection:(id)arg2 direction:(int)arg3;
@property(readonly, nonatomic) TSCECalculationEngine *calculationEngine;
- (_Bool)isPhantom;
@property(readonly, nonatomic) int scatterFormat;
@property(readonly, nonatomic) _Bool categoryLabelFormulasAreAllStatic;
@property(readonly, nonatomic) _Bool seriesLabelFormulasAreAllStatic;
@property(readonly, nonatomic) _Bool labelFormulasAreAllStatic;
- (_Bool)labelFormulasAreAllStaticInFormulaStorage:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1 withTable:(id)arg2 direction:(int)arg3;
- (id)initWithChartInfo:(id)arg1 withTable:(id)arg2 selection:(id)arg3 direction:(int)arg4;
- (id)initWithChartInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNDocumentRoot : TSADocumentRoot <TSTResolverContainerNameProvider>
{
    TNTheme *mTheme;
    TSSStylesheet *mStylesheet;
    NSMutableArray *mSheets;
    TSKTreeNode *mSidebarOrder;
    unsigned long long mSheetNameCounter;
    TNUIState *mUIState;
    _Bool mDocumentWasPreparedFromTemplate;
    _Bool _printingAllSheets;
    NSString *_printerID;
    NSString *_paperID;
    struct CGSize _pageSize;
}

+ (struct CGSize)previewImageMaxSizeForType:(unsigned long long)arg1;
+ (struct CGSize)previewImageSizeForType:(unsigned long long)arg1;
@property(nonatomic, getter=isPrintingAllSheets) _Bool printingAllSheets; // @synthesize printingAllSheets=_printingAllSheets;
@property(retain, nonatomic) TNUIState *uiState; // @synthesize uiState=mUIState;
@property(readonly, retain, nonatomic) TSKTreeNode *sidebarOrder; // @synthesize sidebarOrder=mSidebarOrder;
@property(readonly, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=mStylesheet;
- (id).cxx_construct;
- (int)verticalAlignmentForTextStorage:(id)arg1;
- (int)naturalAlignmentAtCharIndex:(unsigned long long)arg1 inTextStorage:(id)arg2;
- (_Bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(_Bool)arg2;
- (id)p_previewImageWithImageSize:(struct CGSize)arg1;
- (struct CGSize)p_adjustCapturedContentSize:(struct CGSize)arg1 toAspectRatio:(struct CGSize)arg2;
- (struct CGRect)p_contentFrameToCaptureForSheet:(id)arg1;
- (id)previewImageForSize:(struct CGSize)arg1;
- (double)p_imageBorderForSize:(struct CGSize)arg1;
- (void)documentDidLoad;
- (void)performDeferredUpgradeImportOperationsRequiringCalcEngine;
- (void)performDeferredUpgradeImportOperationsOnNewThreadForCharts:(id)arg1;
- (id)p_chartsWantingDeferredUpgrade;
- (_Bool)isMultiPageForQuickLook;
- (void)sheet:(id)arg1 removedDrawable:(id)arg2;
- (void)sheet:(id)arg1 insertedDrawable:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
@property(nonatomic) _Bool removedAllQuickCalcFunctions;
@property(copy, nonatomic) NSArray *selectedQuickCalcFunctions;
- (id)childEnumerator;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1;
- (id)resolverMatchingName:(id)arg1 contextContainerName:(id)arg2;
- (id)resolverMatchingName:(id)arg1 contextResolver:(id)arg2;
- (id)resolverContainerNamesMatchingPrefix:(id)arg1;
- (id)resolverContainerForName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)nameForResolverContainer:(id)arg1;
- (id)resolverContainerNameForResolver:(id)arg1;
- (id)p_resolverContainerForResolver:(id)arg1;
- (void)p_buildSidebarOrder;
- (void)p_removeSidebarNodeForSheet:(id)arg1;
- (void)p_addSidebarNodeForSheet:(id)arg1;
- (void)setSidebarChildren:(id)arg1 forSheet:(id)arg2;
- (_Bool)validName:(id)arg1 forRenamingSheet:(id)arg2;
- (_Bool)validNameForNewSheet:(id)arg1;
- (_Bool)shouldShowComments;
- (void)moveSheet:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)insertSheet:(id)arg1 sheetIndex:(unsigned long long)arg2 context:(id)arg3;
- (void)removeSheet:(id)arg1;
- (void)addSheet:(id)arg1 dolcContext:(id)arg2;
- (void)removeAllSheets;
- (id)activeSheet;
- (id)p_untitledSheetName;
- (void)incrementSheetNameCounter;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
- (void)setThemeForTemplateImport:(id)arg1;
@property(retain, nonatomic) TNTheme *theme;
- (unsigned long long)p_tableCountForSheet:(id)arg1;
@property(readonly, nonatomic) unsigned long long tableCount;
@property(readonly, nonatomic) NSArray *sheets;
- (void)setImportedPaperID:(id)arg1 printerID:(id)arg2;
@property(nonatomic) struct CGSize pageSize; // @synthesize pageSize=_pageSize;
@property(copy, nonatomic) NSString *paperID; // @synthesize paperID=_paperID;
@property(copy, nonatomic) NSString *printerID; // @synthesize printerID=_printerID;
- (unsigned long long)applicationType;
- (void)initializeForImport;
- (void)initializeHardCodedBlankDocument;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNSheet : TSPObject <TSKDocumentObject, TSKSearchTarget, TSKModel, TSCEResolverContainer, TSDDrawableContainerInfo, TSWPHeaderFooterProvider>
{
    NSString *mName;
    NSMutableArray *mChildInfos;
    _Bool mInDocument;
    unsigned int mTableNameCounter;
    TSDGuideStorage *mUserDefinedGuideStorage;
    TSWPStorage *mHeaderFooters[2][3];
    _Bool mInPortraitPageOrientation;
    _Bool mShowPageNumbers;
    _Bool mIsAutofitOn;
    _Bool _usingStartPageNumber;
    _Bool mUsesSingleHeaderFooter;
    int mPageOrder;
    double mContentScale;
    long long _startPageNumber;
    double _pageHeaderInset;
    double _pageFooterInset;
    struct UIEdgeInsets _printMargins;
}

+ (_Bool)needsObjectUUID;
+ (id)sheetForSelectionModel:(id)arg1 outIsPaginated:(_Bool *)arg2;
@property(nonatomic) struct UIEdgeInsets printMargins; // @synthesize printMargins=_printMargins;
- (id).cxx_construct;
- (id)i_newHeaderFooterStorage;
- (void)i_importHeadersFooters:(id)arg1 headerType:(int)arg2 useSingleHeaderFooter:(_Bool)arg3;
- (struct CGRect)frame;
@property(readonly, copy) NSString *description;
- (void)saveToArchive:(struct SheetArchive *)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initFromArchive:(const struct SheetArchive *)arg1 unarchiver:(id)arg2;
- (id)copyWithContext:(id)arg1;
@property(readonly, nonatomic) NSArray *alignmentGuidesForEditing;
@property(readonly, nonatomic) NSArray *alignmentGuides;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)removeChildInfo:(id)arg1;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChildInfo:(id)arg1;
- (_Bool)isForm;
- (unsigned int)nextUntitledResolverIndex;
- (_Bool)resolverNameIsUsed:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1;
- (id)childEnumerator;
- (id)childSearchTargets;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)p_dolcDispatch:(id)arg1 skippingTextBoxes:(_Bool)arg2;
- (id)deletionRewriteCommandForAllTables;
- (_Bool)hasReferenceToTables:(id)arg1;
- (id)tableInfoForName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)tableInfos;
- (id)chartAndTableInfos;
- (void)moveDrawables:(id)arg1 toIndexes:(id)arg2;
- (_Bool)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (void)removeDrawableInfos:(id)arg1;
- (void)removeDrawableInfo:(id)arg1;
- (void)insertDrawableInfos:(id)arg1 context:(id)arg2;
- (void)insertDrawableInfos:(id)arg1 atIndex:(unsigned long long)arg2 context:(id)arg3;
- (void)insertDrawableInfo:(id)arg1 atIndex:(unsigned long long)arg2 context:(id)arg3;
- (void)insertDrawableInfo:(id)arg1 context:(id)arg2;
- (void)setChildInfos:(id)arg1;
- (id)childInfos;
@property(nonatomic) _Bool usesSingleHeaderFooter; // @synthesize usesSingleHeaderFooter=mUsesSingleHeaderFooter;
@property double pageFooterInset; // @synthesize pageFooterInset=_pageFooterInset;
@property double pageHeaderInset; // @synthesize pageHeaderInset=_pageHeaderInset;
@property long long startPageNumber; // @synthesize startPageNumber=_startPageNumber;
@property(getter=isUsingStartPageNumber) _Bool usingStartPageNumber; // @synthesize usingStartPageNumber=_usingStartPageNumber;
@property int pageOrder; // @synthesize pageOrder=mPageOrder;
@property(nonatomic) double contentScale; // @synthesize contentScale=mContentScale;
@property(nonatomic) _Bool isAutofitOn; // @synthesize isAutofitOn=mIsAutofitOn;
@property(nonatomic) _Bool showPageNumbers; // @synthesize showPageNumbers=mShowPageNumbers;
@property(nonatomic) _Bool inPortraitPageOrientation; // @synthesize inPortraitPageOrientation=mInPortraitPageOrientation;
@property(readonly, nonatomic) TNDocumentRoot *documentRoot;
@property(retain, nonatomic) TSDGuideStorage *userDefinedGuideStorage;
@property(retain, nonatomic) NSString *name;
- (id)headerFooterFragmentEnumerator;
@property(readonly, nonatomic) NSArray *footerStorages;
@property(readonly, nonatomic) NSArray *headerStorages;
- (id)p_storagesForHeaderType:(int)arg1;
- (int)headerFragmentIndexForModel:(id)arg1;
- (int)headerFooterTypeForModel:(id)arg1;
- (_Bool)isHeaderFooterEmpty:(int)arg1 fragmentAtIndex:(int)arg2;
- (_Bool)isHeaderFooterEmpty:(int)arg1;
- (id)headerFooter:(int)arg1 fragmentAtIndex:(int)arg2;
- (void)enumerateHeaderFooterStoragesWithBlock:(CDUnknownBlockType)arg1;
- (void)p_createHeadersFooters:(int)arg1 stylesheet:(id)arg2 mayAlreadyExist:(_Bool)arg3;
- (id)p_newHeaderFooterStorageWithStylesheet:(id)arg1;
- (double)bodyWidth;
- (void)dealloc;
- (void)p_setupHeadersFooters;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaWrapper : NSObject
{
    struct TSCEFormula *mPtrToFormula;
    long long mCachedNumberOfValues;
    struct TSCEVector *mCachedOuputValueVector;
}

+ (id)chartFormulaForCellRegion:(id)arg1 inTable:(id)arg2;
+ (id)chartFormulaForCellReference:(CDStruct_78b871e1)arg1;
+ (id)chartFormulaForRangeReference:(CDStruct_5744d895)arg1;
+ (id)chartFormulaForString:(id)arg1;
+ (id)emptyChartFormula;
+ (id)chartFormulaWithCopyOfTSCEFormula:(const struct TSCEFormula *)arg1;
- (id)formulaByProcessingArgumentsWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (_Bool)isAllStaticValuesWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (CDStruct_5744d895)rangeCircumscribingPrecedentsWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (id)stringValueForFormulaWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (struct TSCEValue)valueAtIndex:(unsigned long long)arg1 withCalcEngine:(id)arg2 inTable:(struct __CFUUID *)arg3;
- (id)argumentCollectionWithCalcEngine:(id)arg1 inTable:(struct __CFUUID *)arg2;
- (unsigned long long)numberOfValuesWithCalcEngine:(id)arg1 inTable:(struct __CFUUID *)arg2;
- (struct TSCEVector *)outputValueVectorWithCalcEngine:(id)arg1 inTable:(struct __CFUUID *)arg2;
- (id)description;
@property(readonly) struct TSCEFormula *formula;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)clearCacheForCalculationEngine:(id)arg1;
- (_Bool)formulaIsEqualTo:(id)arg1;
- (void)dealloc;
- (id)initWithCopyOfTSCEFormula:(const struct TSCEFormula *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNFormulaOwnerWrapper : NSObject <NSCopying>
{
    struct __CFUUID *mOwner;
}

@property(readonly) struct __CFUUID *ownerID; // @synthesize ownerID=mOwner;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToTNFormulaOwnerWrapper:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithTSCEFormulaOwnerID:(struct __CFUUID *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNFormulaIDWrapper : NSObject <NSCopying>
{
    CDStruct_a91f2c80 mID;
}

@property(readonly) CDStruct_a91f2c80 formulaID; // @synthesize formulaID=mID;
- (id).cxx_construct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToTNFormulaIDWrapper:(id)arg1;
- (CDStruct_a91f2c80)chartFormulaID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTNChartFormulaID:(CDStruct_a91f2c80)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNPdfExporter : TNRenderingExporter <TSKEncryptedDocumentExporter>
{
    NSDictionary *mOptions;
}

- (void)setOptions:(id)arg1;
- (void)dealloc;
- (void)setCopyPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPrintPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPassphrase:(id)arg1 hint:(id)arg2;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNTheme : TSATheme
{
    NSArray *mTablePrototypes;
}

+ (void)initialize;
- (void)saveToArchiver:(id)arg1;
- (void)saveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (void)loadFromArchive:(const struct ThemeArchive *)arg1 unarchiver:(id)arg2;
- (void)bootstrapBlackHardCodedTheme;
- (void)bootstrapWhiteHardCodedTheme;
- (void)p_initDefaultHardCodedStyles;
@property(retain, nonatomic) NSArray *tablePrototypes;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaArgumentCollection : NSObject <NSFastEnumeration, NSCopying, NSMutableCopying>
{
    NSArray *mArray;
}

+ (id)argumentCollectionFromFormula:(struct TSCEFormula *)arg1 inOwner:(struct __CFUUID *)arg2 usingCalcEngine:(id)arg3;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)lastElement;
- (id)firstElement;
- (id)reverseElementEnumerator;
- (id)elementEnumerator;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)elementAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)wrappedChartFormulaWithID:(CDStruct_a91f2c80)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithFormula:(struct TSCEFormula *)arg1 inOwner:(struct __CFUUID *)arg2 usingCalcEngine:(id)arg3;
- (id)initWithArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNMutableChartFormulaArgumentCollection : TNChartFormulaArgumentCollection
{
}

- (void)replaceElementAtIndex:(unsigned long long)arg1 withElement:(id)arg2;
- (void)removeElementAtIndex:(unsigned long long)arg1;
- (void)removeLastElement;
- (void)insertElement:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addElement:(id)arg1;
- (id)initWithArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaArgumentEnumerator : NSObject <NSFastEnumeration>
{
    NSEnumerator *mUnderlyingEnumerator;
}

- (id)nextElement;
- (id)nextObject;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithEnumerator:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaArgument : NSObject
{
    int mType;
    void *mData;
}

@property(readonly) int type; // @synthesize type=mType;
- (id)description;
@property(readonly) struct TSCEValue *staticValue;
@property(readonly) CDStruct_5744d895 rangeReference;
@property(readonly) CDStruct_78b871e1 cellReference;
@property(readonly) _Bool isReference;
@property(readonly) _Bool isStaticValue;
@property(readonly) _Bool isRangeReference;
@property(readonly) _Bool isCellReference;
- (void)dealloc;
- (id)initWithStaticValue:(const struct TSCEValue *)arg1;
- (id)initWithRangeReference:(CDStruct_5744d895)arg1;
- (id)initWithCellReference:(CDStruct_78b871e1)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaStorage : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *mStorage;
    int mDirection;
    unsigned long long mCachedNumberOfGroups;
    _Bool mCachedNumberOfGroupsValid;
}

- (id)areaFormulaWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (void)saveToArchive:(struct ChartMediatorFormulaStorage *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct ChartMediatorFormulaStorage *)arg1 unarchiver:(id)arg2;
- (void)clearCachesForCalculationEngine:(id)arg1;
- (_Bool)dataFormulaAreRegularForSeriesInsertionWithCalcEngine:(id)arg1 inOwner:(struct __CFUUID *)arg2;
- (int)categoryLabelFormulaType;
- (int)seriesLabelFormulaType;
- (unsigned long long)numberOfSeries;
- (unsigned long long)numberOfDataFormulas;
- (_Bool)labelFormulasAreAllStaticWithCalcEngine:(id)arg1 inEntity:(struct __CFUUID *)arg2;
- (_Bool)formulasOfType:(int)arg1 areAllStaticWithCalcEngine:(id)arg2 inEntity:(struct __CFUUID *)arg3;
- (unsigned long long)numberOfGroupsWithCalcEngine:(id)arg1 inEntity:(struct __CFUUID *)arg2;
- (unsigned long long)p_calculateNumberOfGroupsWithCalcEngine:(id)arg1 inEntity:(struct __CFUUID *)arg2;
- (id)description;
- (struct __CFDictionary *)p_cfDictionary;
- (id)formulaTypeEnumerator;
- (id)formulaListForType:(int)arg1;
- (id)formulaOrNilForID:(CDStruct_a91f2c80)arg1;
- (id)formulaForID:(CDStruct_a91f2c80)arg1;
- (unsigned long long)count;
- (_Bool)isEqualToFormulaStorage:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (int)direction;
- (void)dealloc;
- (id)initWithChartFormulaStorage:(id)arg1;
- (id)initWithDirection:(int)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNMutableChartFormulaStorage : TNChartFormulaStorage
{
}

- (unsigned long long)numberOfGroupsWithCalcEngine:(id)arg1 inEntity:(struct __CFUUID *)arg2;
- (void)addFormula:(id)arg1 withFormulaID:(CDStruct_a91f2c80)arg2;
- (void)setFormulaList:(id)arg1 forKey:(int)arg2;
- (id)mutableFormulaListForType:(int)arg1;
- (void)clearFormulaListForKey:(int)arg1;
- (void)setDirection:(int)arg1;
- (id)initWithChartFormulaStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNChartFormulaTypeEnumerator : NSObject
{
    int **_keys;
    unsigned long long _count;
    unsigned long long _index;
}

- (int)nextFormulaType;
- (void)dealloc;
- (id)initWithChartFormulaStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNChartRangeList : NSObject
{
    struct __CFUUID *mTableID;
    struct TNChartRangeNode *mNodeList;
    CDStruct_0ea164f0 mUnionRange;
    _Bool mUnionRangeValid;
}

+ (id)rangeListWithRangeRef:(CDStruct_5744d895)arg1;
+ (id)rangeListWithTableID:(struct __CFUUID *)arg1 range:(struct)arg2;
+ (id)rangeListWithTableID:(struct __CFUUID *)arg1;
@property(readonly, nonatomic) struct __CFUUID *tableID; // @synthesize tableID=mTableID;
- (id)description;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (CDStruct_5744d895)unionRangeRef;
- (struct)unionRange;
- (struct)rangeStartingAfterCell:(CDStruct_0441cfb5)arg1 direction:(int)arg2;
- (struct)rangeStartingAtCell:(CDStruct_0441cfb5)arg1 direction:(int)arg2;
- (_Bool)containsRange:(struct)arg1;
- (_Bool)containsCell:(CDStruct_0441cfb5)arg1;
- (struct)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRanges;
- (void)removeAllRanges;
- (void)addRange:(struct)arg1 coalesceFlags:(int)arg2;
- (void)dealloc;
- (id)initWithTableID:(struct __CFUUID *)arg1 range:(struct)arg2;
- (id)initWithTableID:(struct __CFUUID *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNFormBasedSheet : TNSheet
{
    struct __CFUUID *mTableID;
    TSTTableInfo *mTableInfo;
    NSString *mImportedTargetName;
}

- (void)resolveImportedTargetNameInDocumentRoot:(id)arg1;
- (id)initWithContext:(id)arg1 importedTargetName:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)clearTableInfoCache;
@property(readonly) TSTTableInfo *tableInfo;
- (void)dealloc;
@property struct __CFUUID *tableID;
- (_Bool)isForm;
- (double)contentScale;

@end

__attribute__((visibility("hidden")))
@interface TNHeaderRep : TSWPHeaderRep
{
}

@end

__attribute__((visibility("hidden")))
@interface TNPlaceholderInfo : TSWPShapeInfo
{
}

- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNPageCoordinateDictionary : NSObject
{
    struct map<TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>, std::__1::less<TSUColumnRowCoordinate>, std::__1::allocator<std::__1::pair<const TSUColumnRowCoordinate, SFUtility::ObjcSharedPtr<NSObject>>>> _pageCoordinateDictionary;
    struct _opaque_pthread_rwlock_t _rwlock;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)allObjects;
- (void)removeAllObjects;
- (id)objectForPageCoordinate:(CDStruct_0441cfb5)arg1;
- (void)setObject:(id)arg1 forPageCoordinate:(CDStruct_0441cfb5)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNHintCacheEntry : NSObject
{
    id <TSDHint> mHint;
    _Bool mIsValid;
    struct CGPoint mOrigin;
}

@property struct CGPoint origin; // @synthesize origin=mOrigin;
@property(getter=isValid) _Bool valid; // @synthesize valid=mIsValid;
@property(retain) id <TSDHint> hint; // @synthesize hint=mHint;
- (id)initWithHint:(id)arg1 origin:(struct CGPoint)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNHintCache : NSObject
{
    TNPageController *mPageController;
    TSDDrawableInfo *mInfo;
    struct {
        CDStruct_0441cfb5 topLeft;
        CDStruct_0441cfb5 bottomRight;
    } mPageRange;
    _Bool mIsMaxColumnValid;
    _Bool mIsMaxRowValid;
    TNPageCoordinateDictionary *mHintCacheEntryDictionary;
}

@property(retain) TSDDrawableInfo *info; // @synthesize info=mInfo;
@property(readonly) TNPageController *pageController; // @synthesize pageController=mPageController;
- (id).cxx_construct;
- (id)p_hintCacheEntryAtCoordinate:(CDStruct_0441cfb5)arg1;
- (void)invalidate;
- (id)layoutAtCoordinate:(CDStruct_0441cfb5)arg1 parentLayout:(id)arg2;
- (struct)pageRangeWithUpperBound:(CDStruct_0441cfb5)arg1;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 pageController:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNPageContentLayout : TSDLayout
{
    TNPageLayout *mPageLayout;
    unsigned long long mPageNumber;
}

@property(readonly) unsigned long long pageNumber; // @synthesize pageNumber=mPageNumber;
@property TNPageLayout *pageLayout; // @synthesize pageLayout=mPageLayout;
- (Class)repClassOverride;
- (unsigned long long)pageCount;
- (id)computeLayoutGeometry;
- (void)validate;
- (id)initWithPageLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNPageInfoContainer : NSObject <TSDContainerInfo>
{
    TNPageController *_pageController;
    unsigned long long _pageIndex;
}

- (id)childInfos;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (_Bool)isThemeContent;
- (Class)repClass;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
- (id)pageController;
- (unsigned long long)pageIndex;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithPageIndex:(unsigned long long)arg1 pageController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNUIState : NSObject <NSCopying>
{
    TSURetainedPointerKeyDictionary *mSheetUIStates;
    TSURetainedPointerKeyDictionary *mEditModeSheetUIStates;
    _Bool mShowCanvasGuides;
    _Bool mInspectorPaneVisible;
    _Bool mRemovedAllQuickCalcFunctions;
    _Bool mShowsComments;
    int mTableEditingMode;
    int mInspectorPaneViewMode;
    TNSheetSelection *mSheetSelection;
    NSSet *mSelectedInfos;
    id <TNUIStateDelegate> mDelegate;
    TSTTableSelection *mTableSelection;
    long long mDocumentMode;
    TNChartSelection *mChartSelection;
    NSArray *mSelectedQuickCalcFunctions;
    struct CGSize mDesktopScreenSize;
    struct CGRect mDesktopWindowFrame;
}

@property(nonatomic) struct CGSize desktopScreenSize; // @synthesize desktopScreenSize=mDesktopScreenSize;
@property(nonatomic) struct CGRect desktopWindowFrame; // @synthesize desktopWindowFrame=mDesktopWindowFrame;
@property(nonatomic) _Bool showsComments; // @synthesize showsComments=mShowsComments;
@property(nonatomic) _Bool showCanvasGuides; // @synthesize showCanvasGuides=mShowCanvasGuides;
@property(nonatomic) _Bool removedAllQuickCalcFunctions; // @synthesize removedAllQuickCalcFunctions=mRemovedAllQuickCalcFunctions;
@property(copy, nonatomic) NSArray *selectedQuickCalcFunctions; // @synthesize selectedQuickCalcFunctions=mSelectedQuickCalcFunctions;
@property(nonatomic) int inspectorPaneViewMode; // @synthesize inspectorPaneViewMode=mInspectorPaneViewMode;
@property(nonatomic, getter=isInspectorPaneVisible) _Bool inspectorPaneVisible; // @synthesize inspectorPaneVisible=mInspectorPaneVisible;
@property(retain, nonatomic) TNChartSelection *chartSelection; // @synthesize chartSelection=mChartSelection;
@property(nonatomic) int tableEditingMode; // @synthesize tableEditingMode=mTableEditingMode;
@property(nonatomic) long long documentMode; // @synthesize documentMode=mDocumentMode;
@property(retain, nonatomic) TSTTableSelection *tableSelection; // @synthesize tableSelection=mTableSelection;
@property(nonatomic) id <TNUIStateDelegate> delegate; // @synthesize delegate=mDelegate;
@property(retain, nonatomic) NSSet *selectedInfos; // @synthesize selectedInfos=mSelectedInfos;
@property(retain, nonatomic) TNSheetSelection *sheetSelection; // @synthesize sheetSelection=mSheetSelection;
- (id).cxx_construct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct UIStateArchive *)arg1 archiver:(id)arg2 context:(id)arg3;
- (id)initWithArchive:(const struct UIStateArchive *)arg1 unarchiver:(id)arg2;
- (id)description;
- (id)archivedUIStateInContext:(id)arg1;
- (void)p_exitPaginatedMode;
- (void)p_enterPaginatedMode;
@property(nonatomic) unsigned char formFocusedFieldIndex;
@property(nonatomic) unsigned short formFocusedRecordIndex;
@property(readonly, nonatomic) _Bool hasPreviousVisibleRect;
@property(readonly, nonatomic) _Bool hasVisibleRect;
- (void)removeUIStateForSheet:(id)arg1;
- (id)uiStateForSheet:(id)arg1;
- (void)setUIState:(id)arg1 forSheet:(id)arg2;
@property(readonly, nonatomic) float previousViewScale;
@property(readonly, nonatomic) float viewScale;
- (float)p_defaultViewScale;
- (float)p_calculateViewScaleForVisibleRect:(struct CGRect)arg1;
- (void)clearPreviousVisibleRect;
@property(nonatomic) struct CGRect previousVisibleRect;
- (void)setPreviousVisibleRect:(struct CGRect)arg1 forSheet:(id)arg2;
@property(readonly, nonatomic) struct CGPoint previousScrollPosition;
- (void)clearVisibleRect;
@property(nonatomic) struct CGRect visibleRect;
- (void)setVisibleRect:(struct CGRect)arg1 forSheet:(id)arg2;
@property(readonly, nonatomic) struct CGPoint scrollPosition;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNArchivedUIState : TSPObject
{
    TNUIState *mUIState;
}

@property(readonly, nonatomic) TNUIState *uiState; // @synthesize uiState=mUIState;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithUIState:(id)arg1 context:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNPagePlaceholderRep : TSDContainerRep
{
}

- (Class)layerClass;
- (void)didUpdateLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;

@end

__attribute__((visibility("hidden")))
@interface TNPageController : NSObject <TSKChangeSourceObserver>
{
    TNDocumentRoot *mDocumentRoot;
    TNPageCoordinateDictionary *mPageLayoutCache;
    TSUPointerKeyDictionary *mHintCacheDictionary;
    TSUPointerKeyDictionary *mSheetPageCountCache;
    TNSheet *mSheet;
    CDStruct_0441cfb5 mMaxPageCoordinate;
    _Bool mMaxPageCoordinateValid;
    NSMutableDictionary *mCachedAutoFitContentScaleDictionary;
    TNPageCoordinateDictionary *mHeaderLayerCache;
    TNPageCoordinateDictionary *mFooterLayerCache;
    long long mCachedPageCountDuringDynamicContentScaleChange;
    long long mPriorPageCount;
    long long mSubsequentPageCount;
    _Bool mPageCountsValid;
    _Bool mComputingPageCounts;
    _Bool mInDynamicContentScaleChange;
    NSObject<TNPageControllerDelegate> *mDelegate;
    TNPrintProperties *_printProperties;
    double mUserViewScale;
    double _headerTextHeight;
    double _footerTextHeight;
}

+ (double)autoFitContentScaleForSheet:(id)arg1;
+ (double)p_contentScaleAutoFitForSheet:(id)arg1;
+ (id)p_cachedAutoFitContentScaleDictionary;
+ (double)printViewDefaultUserViewScale;
@property(nonatomic) double footerTextHeight; // @synthesize footerTextHeight=_footerTextHeight;
@property(nonatomic) double headerTextHeight; // @synthesize headerTextHeight=_headerTextHeight;
@property(nonatomic) TNSheet *sheet; // @synthesize sheet=mSheet;
@property(readonly, nonatomic) _Bool inDynamicContentScaleChange; // @synthesize inDynamicContentScaleChange=mInDynamicContentScaleChange;
@property(nonatomic) double userViewScale; // @synthesize userViewScale=mUserViewScale;
@property(nonatomic) NSObject<TNPageControllerDelegate> *delegate; // @synthesize delegate=mDelegate;
@property(nonatomic) TNDocumentRoot *documentRoot; // @synthesize documentRoot=mDocumentRoot;
- (id).cxx_construct;
- (void)layoutAtPageIndex:(unsigned long long)arg1 forLayoutController:(id)arg2;
- (unsigned long long)pageCount;
- (id)pageInfoForPageIndex:(unsigned long long)arg1;
- (id)p_pageInfoForPageAtIndex:(unsigned long long)arg1;
- (void)p_layoutInfo:(id)arg1 intoPageRange:(struct)arg2;
- (void)p_layoutInfo:(id)arg1 intoPageLayout:(id)arg2 atPageCoordinate:(CDStruct_0441cfb5)arg3;
- (struct)pageRangeForInfo:(id)arg1 upperBound:(CDStruct_0441cfb5)arg2;
- (void)syncPositionOfLayout:(id)arg1 atCoordinate:(CDStruct_0441cfb5)arg2;
- (id)p_layoutForInfo:(id)arg1 atCoordinate:(CDStruct_0441cfb5)arg2 parentLayout:(id)arg3;
- (id)p_hintCacheForInfo:(id)arg1;
- (void)p_updateVisiblePageRange:(struct)arg1 forLayoutController:(id)arg2;
- (void)p_enumerateOverPageRange:(struct)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)registerPageLayout:(id)arg1 atPageCoordinate:(CDStruct_0441cfb5)arg2;
- (_Bool)p_headersOrFootersContainPageNumberRelatedAttachments;
- (void)p_didEndDynamicContentScaleChange:(id)arg1;
- (void)p_willBeginDynamicContentScaleChange:(id)arg1;
- (void)i_setLayer:(id)arg1 forHeaderType:(int)arg2 fragment:(int)arg3 atPageCoordinate:(CDStruct_0441cfb5)arg4;
- (id)i_layerForHeaderType:(int)arg1 fragment:(int)arg2 atPageCoordinate:(CDStruct_0441cfb5)arg3;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)invalidatePageLayout;
- (void)invalidateCachedAutoFitContentScaleForSheet:(id)arg1;
- (void)i_invalidateHintCache;
- (void)invalidateDrawableLayouts;
- (void)invalidatePageLayoutGeometries;
- (void)p_invalidatePageCounts;
- (void)p_clearHintCache;
- (void)i_invalidatePageLayoutCache;
- (void)removeLayoutsFromPages;
- (void)willExitPrintView;
- (struct)pageRangeForPageIndex:(unsigned long long)arg1;
- (CDStruct_0441cfb5)pageCoordinateForPageIndex:(unsigned long long)arg1;
- (id)p_pageLayoutAtCoordinate:(CDStruct_0441cfb5)arg1;
- (struct CGRect)printingLayoutRectForPageIndex:(unsigned long long)arg1;
- (id)pageLayoutGeometryForPageCoordinate:(CDStruct_0441cfb5)arg1;
- (id)pageLayoutGeometryForPrintingAtPageCoordinate:(CDStruct_0441cfb5)arg1;
- (CDStruct_0441cfb5)pageCoordinateForDrawableAtUnscaledPoint:(struct CGPoint)arg1;
- (CDStruct_0441cfb5)p_pageCoordinateForPageLayoutAtDevicePoint:(struct CGPoint)arg1;
- (CDStruct_0441cfb5)pageCoordinateForPageLayoutAtUnscaledPoint:(struct CGPoint)arg1;
- (void)layoutInPageRange:(struct)arg1 forLayoutController:(id)arg2;
- (void)p_measureHeadersAndFooters;
- (struct CGRect)firstPartitionFrameForInfo:(id)arg1 outStartPageCoordinate:(out CDStruct_0441cfb5 *)arg2;
- (unsigned long long)pageNumberForPageCoordinate:(CDStruct_0441cfb5)arg1;
- (_Bool)isPagePlaceholderAtPageCoordinate:(CDStruct_0441cfb5)arg1;
@property(readonly) unsigned long long numPages;
- (struct)pageRangeWithPlaceholdersWithUpperBound:(CDStruct_0441cfb5)arg1;
- (struct CGSize)contentSizeForCanvasLayer;
- (CDStruct_0441cfb5)pageCoordinateForMaxVisiblePage;
- (struct)pageRangeForContentWithUpperBound:(CDStruct_0441cfb5)arg1;
- (struct)pageRangeForContent;
- (void)updatePrintMargins;
- (void)updateContentScale;
- (void)updateViewScale;
- (void)updateUserViewScale;
- (void)canvasViewScaleDidChange:(double)arg1;
- (long long)p_priorPageCount;
@property(readonly) struct CGSize pageSizeWithGutter;
@property(readonly) struct CGRect contentFrame;
@property(readonly) struct CGSize pageSize;
- (void)p_computePriorPageCountForCurrentSheet;
- (void)p_computeSubsequentPageCountForCurrentSheet;
- (long long)p_pageCountForSheet:(id)arg1;
- (long long)p_updateCachedPageCountForCurrentSheet;
@property(readonly, getter=isPortrait) _Bool portrait;
@property(readonly) double contentScale;
@property(readonly) TNPrintProperties *printProperties; // @synthesize printProperties=_printProperties;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNPrintProperties : NSObject
{
    double _headerInset;
    double _footerInset;
    struct CGSize _unscaledPageSize;
    struct UIEdgeInsets _printMargins;
}

+ (id)legacyExportPrintProperties;
+ (id)letterSizeLandscapeFormPrintProperties;
+ (id)letterSizePortraitFormPrintProperties;
+ (id)a4SizePrintProperties;
+ (id)letterSizePrintProperties;
@property(nonatomic) double footerInset; // @synthesize footerInset=_footerInset;
@property(nonatomic) double headerInset; // @synthesize headerInset=_headerInset;
@property struct UIEdgeInsets printMargins; // @synthesize printMargins=_printMargins;
@property struct CGSize unscaledPageSize; // @synthesize unscaledPageSize=_unscaledPageSize;
- (struct CGAffineTransform)p_transformForContentScale:(double)arg1 portraitOrientation:(_Bool)arg2;
- (struct CGRect)unscaledPageRectForDisplayForPortraitOrientation:(_Bool)arg1 userViewScale:(double)arg2 atPageCoordinate:(CDStruct_0441cfb5)arg3;
- (struct CGSize)pageSizeWithGutterForContentScale:(double)arg1 userViewScale:(double)arg2 portraitOrientation:(_Bool)arg3;
- (struct CGSize)pageSizeForContentScale:(double)arg1 portraitOrientation:(_Bool)arg2;
- (struct CGRect)pageHeaderFooterRectForContentScale:(double)arg1 portraitOrientation:(_Bool)arg2 footer:(_Bool)arg3 textHeight:(double)arg4;
- (struct CGRect)contentRectForContentScale:(double)arg1 portraitOrientation:(_Bool)arg2 headerHeight:(double)arg3 footerHeight:(double)arg4;
- (double)contentScaleForIntegralWidthWithContentScale:(double)arg1 portraitOrientation:(_Bool)arg2;
- (struct CGRect)p_unscaledContentRectForOrientation:(_Bool)arg1 headerHeight:(double)arg2 footerHeight:(double)arg3;
@property(readonly) double pageHeight;
@property(readonly) double pageWidth;
- (id)initWithPageSize:(struct CGSize)arg1 contentRect:(struct CGRect)arg2;
- (id)initWithPageSize:(struct CGSize)arg1 printMargins:(struct UIEdgeInsets)arg2;
- (id)initWithPageSize:(struct CGSize)arg1 printMargins:(struct UIEdgeInsets)arg2 headerInset:(double)arg3 footerInset:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface TNSheetUIState : NSObject <NSCopying>
{
    struct CGRect mVisibleRect;
    struct CGRect mPreviousVisibleRect;
    _Bool mHasVisibleRect;
    _Bool mHasPreviousVisibleRect;
    float mPreviousViewScale;
    float mViewScale;
    int mDeviceIdiom;
    unsigned short mFormFocusedRecordIndex;
    unsigned char mFormFocusedFieldIndex;
}

+ (int)currentDeviceIdiom;
+ (id)sheetUIStateWithPreviousVisibleRect:(struct CGRect)arg1;
+ (id)sheetUIStateWithVisibleRect:(struct CGRect)arg1;
@property(nonatomic) unsigned char formFocusedFieldIndex; // @synthesize formFocusedFieldIndex=mFormFocusedFieldIndex;
@property(nonatomic) unsigned short formFocusedRecordIndex; // @synthesize formFocusedRecordIndex=mFormFocusedRecordIndex;
@property(nonatomic) int archivedDeviceIdiom; // @synthesize archivedDeviceIdiom=mDeviceIdiom;
@property(nonatomic) float previousViewScale; // @synthesize previousViewScale=mPreviousViewScale;
@property(nonatomic) float viewScale; // @synthesize viewScale=mViewScale;
@property(nonatomic) _Bool hasPreviousVisibleRect; // @synthesize hasPreviousVisibleRect=mHasPreviousVisibleRect;
@property(nonatomic) _Bool hasVisibleRect; // @synthesize hasVisibleRect=mHasVisibleRect;
@property(nonatomic) struct CGRect previousVisibleRect; // @synthesize previousVisibleRect=mPreviousVisibleRect;
@property(nonatomic) struct CGRect visibleRect; // @synthesize visibleRect=mVisibleRect;
- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)saveToArchive:(struct SheetUIStateArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct SheetUIStateArchive *)arg1 unarchiver:(id)arg2;
@property(readonly, nonatomic) struct CGPoint previousScrollPosition;
@property(readonly, nonatomic) struct CGPoint scrollPosition;
- (void)clearPreviousVisibleRect;
- (void)clearVisibleRect;
- (_Bool)isDefault;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNPageContentRep : TSDContainerRep
{
}

- (Class)layerClass;
- (_Bool)isOpaque;
- (struct CGRect)clipRect;
- (void)updateLayerGeometryFromLayout:(id)arg1;
- (void)didUpdateLayer:(id)arg1;
- (_Bool)directlyManagesLayerContent;
- (_Bool)masksToBounds;

@end

__attribute__((visibility("hidden")))
@interface TNBaseCompatibilityDelegate : NSObject <TSKCompatibilityDelegate>
{
}

- (id)backwardsCompatibleTypeForType:(id)arg1;
- (id)nestedDocumentFilename;
- (id)needNewerVersionIndexXmlContentString;
- (id)indexXmlFilename;
- (_Bool)isSageDocumentType:(id)arg1;
- (_Bool)isTCMessageExceptionErrorDomain:(id)arg1;
- (id)exportableTypes;
- (Class)exportOptionsControllerClass;
- (Class)exporterClassForType:(id)arg1 options:(id)arg2;
- (Class)importerClassForType:(id)arg1;
- (id)newExportableDocumentTypesForFlag:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNGilliganCompatibilityDelegate : TNBaseCompatibilityDelegate
{
}

- (Class)exporterClassForType:(id)arg1 options:(id)arg2;
- (Class)importerClassForType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNRenderingExporter : TSARenderingExporter
{
    unsigned long long mSheetIndex;
    unsigned long long mPageIndex;
    unsigned long long mTotalPagesCount;
    vector_88016b54 mSheetPageCountArray;
    vector_88016b54 mSheetPageStartArray;
    TNPageController *mPageController;
    TNPdfHyperlinkController *mHyperlinkController;
    NSMutableArray *mCanvasBasedSheets;
    _Bool _renderingAllSheets;
}

@property(nonatomic, getter=isRenderingAllSheets) _Bool renderingAllSheets; // @synthesize renderingAllSheets=_renderingAllSheets;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isPageInPortraitOrientation:(unsigned long long)arg1;
- (struct CGRect)p_boundsRectForFirstPage;
- (_Bool)p_isActiveSheetForm;
- (id)p_canvasBasedSheets;
- (double)totalProgess;
- (void)drawCurrentPageWithContext:(struct CGContext *)arg1 returnSuccess:(_Bool *)arg2;
- (void)drawAllPagesWithContext:(struct CGContext *)arg1 returnSuccess:(_Bool *)arg2;
- (id)p_activeSheet;
- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;
- (id)pageController;
- (vector_88016b54)p_pageStartArray;
- (vector_88016b54)p_pageCountArray;
- (double)progressForCurrentPage;
- (_Bool)drawCurrentPageInContext:(struct CGContext *)arg1 viewScale:(double)arg2 unscaledClipRect:(struct CGRect)arg3 createPage:(_Bool)arg4;
- (_Bool)incrementPage;
- (_Bool)preparePage:(unsigned long long)arg1;
- (void)setSheetIndex:(unsigned long long)arg1 andPageIndex:(unsigned long long)arg2;
- (unsigned long long)inSheetPageIndexForPage:(unsigned long long)arg1;
- (unsigned long long)sheetIndexForPage:(unsigned long long)arg1;
- (unsigned long long)numberOfCanvasBasedSheets;
- (unsigned long long)pageCount;
- (id)currentInfos;
- (struct CGRect)unscaledClipRect;
- (struct CGRect)boundsRect;

@end

__attribute__((visibility("hidden")))
@interface TNPreviewExporter : TNRenderingExporter <TSKImageExporter>
{
}

- (id)initWithDocumentRoot:(id)arg1;
@property(nonatomic) _Bool scaleToFit;
@property(nonatomic) unsigned long long height;
@property(nonatomic) unsigned long long width;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TNPdfHyperlinkController : TSAPdfHyperlinkController
{
    struct CGRect mCanvasRect;
}

- (id).cxx_construct;
- (void)setCanvasRect:(struct CGRect)arg1;
- (struct CGRect)canvasRect;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TNQuicklookAppDelegate : TSAServerApplicationDelegate
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TNQuicklookCompatibilityDelegate : TNBaseCompatibilityDelegate
{
}

@end

__attribute__((visibility("hidden")))
@interface TNSheetSelection : TSKSelection
{
    _Bool mIsPaginated;
    TNSheet *mSheet;
}

+ (id)selectionForSheet:(id)arg1 paginated:(_Bool)arg2;
+ (Class)archivedSelectionClass;
@property(readonly, nonatomic, getter=isPaginated) _Bool paginated; // @synthesize paginated=mIsPaginated;
@property(readonly, retain, nonatomic) TNSheet *sheet; // @synthesize sheet=mSheet;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSheet:(id)arg1 paginated:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TNArchivedSheetSelection : TSPObject <TSKArchivedSelection>
{
    TNSheetSelection *mSelection;
}

@property(retain, nonatomic) TNSheetSelection *selection; // @synthesize selection=mSelection;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TNChartSelection : TSCHSelection
{
    CDStruct_5744d895 mReference;
}

+ (Class)archivedSelectionClass;
@property(readonly, nonatomic) CDStruct_5744d895 reference; // @synthesize reference=mReference;
- (id).cxx_construct;
- (void)saveToArchive:(struct ChartSelectionArchive *)arg1 archiver:(id)arg2;
- (id)initFromArchive:(const struct ChartSelectionArchive *)arg1 unarchiver:(id)arg2;
- (_Bool)returnChartFrameForAutoscroll;
- (void)setReference:(CDStruct_5744d895)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithChartInfo:(id)arg1;
- (id)initWithChartInfo:(id)arg1 paths:(id)arg2;
- (id)initWithChartInfo:(id)arg1 paths:(id)arg2 reference:(CDStruct_5744d895)arg3;

@end

__attribute__((visibility("hidden")))
@interface TNArchivedChartSelection : TSPObject <TSKArchivedSelection>
{
    TNChartSelection *mSelection;
}

@property(retain, nonatomic) TSKSelection *selection; // @synthesize selection=mSelection;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPArchivedUIState : TSPObject
{
    TPArchivedLayoutState *_layoutState;
    TPArchivedViewState *_viewState;
}

@property(readonly, nonatomic) TPArchivedViewState *viewState; // @synthesize viewState=_viewState;
@property(readonly, nonatomic) TPArchivedLayoutState *layoutState; // @synthesize layoutState=_layoutState;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPPdfExporter : TPRenderingExporter <TSKEncryptedDocumentExporter>
{
    NSDictionary *mOptions;
}

- (void)setOptions:(id)arg1;
- (void)dealloc;
- (void)setCopyPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPrintPassphrase:(id)arg1 hint:(id)arg2;
- (void)setPassphrase:(id)arg1 hint:(id)arg2;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPAppDelegate : TSABaseApplicationDelegate
{
    _Bool _newDocumentOnLaunch;
    _Bool _appDoneLaunching;
    _Bool _cachedBidiIsSupported;
}

+ (id)sharedDelegate;
- (void)p_inputMethodsChanged:(id)arg1;
- (void)p_localeChanged:(id)arg1;
- (id)applicationTemplateVariantsForLocale:(struct __CFLocale *)arg1;
- (_Bool)supportsScrollingInPhoneCommentUI;
- (_Bool)supportsRTL;
- (id)templateTypeDisplayName;
- (id)documentTypeDisplayName;
- (id)applicationName;
- (id)nativeSFFDocumentType;
- (id)tangierEditingFormatDocumentType;
- (id)templateSFFDocumentType;
- (id)templateDocumentType;
- (id)nativeDocumentType;
- (id)previewImageNameForNativeDocument;
- (id)previewImageNameForEncryptedNativeDocument;
- (id)previewImageNameForDocumentType:(id)arg1;
- (id)appChartPropertyOverrides;
@property(readonly, nonatomic) NSArray *wordDocumentTypes;
- (id)importableDocumentTypes;
- (id)createCompatibilityDelegate;
- (void)dealloc;
- (Class)documentRootClass;
- (id)init;
- (_Bool)textInspectorShowsMoreSubpane;
- (_Bool)tableHeaderInspectorShowsRepeatHeaderRowsSwitch;

@end

__attribute__((visibility("hidden")))
@interface TPBodyInfo : NSObject <TSDContainerInfo>
{
    TPPageInfo *_pageInfo;
}

@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo; // @synthesize parentInfo=_pageInfo;
- (id)childInfos;
- (id)copyWithContext:(id)arg1;
- (_Bool)isThemeContent;
- (Class)repClass;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)inflateBodyLayout:(id)arg1;
@property(readonly, nonatomic) _Bool layoutVertically;
@property(readonly, nonatomic) TPPageHint *pageHint;
@property(readonly, nonatomic) TSWPStorage *bodyStorage;
@property(readonly, nonatomic) id <TSDHint> nextTargetFirstChildHint;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPBodyLayout : TSDLayout <TSWPLayoutTarget, TPAttachmentLayoutParent>
{
    NSMutableArray *_columns;
    TPFootnoteHeightMeasurer *_footnoteHeightMeasurer;
    NSMutableArray *_anchoredDrawablesForRelayout;
}

+ (struct CGSize)minimumBodySize;
@property(readonly, retain, nonatomic) NSMutableArray *columns; // @synthesize columns=_columns;
@property(retain, nonatomic) NSMutableArray *anchoredDrawablesForRelayout; // @synthesize anchoredDrawablesForRelayout=_anchoredDrawablesForRelayout;
- (_Bool)siblingTargetIsManipulatingDrawable:(id)arg1;
@property(readonly, nonatomic) _Bool textIsVertical;
- (_Bool)invalidateForPageCountChange;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (struct CGPoint)anchoredAttachmentPositionFromLayoutPosition:(struct CGPoint)arg1;
- (struct CGPoint)layoutPositionFromAnchoredAttachmentPosition:(struct CGPoint)arg1;
- (_Bool)isLayoutOffscreen;
@property(readonly, nonatomic) double maxAnchorY;
- (id)currentAnchoredDrawableLayouts;
- (id)currentInlineDrawableLayouts;
- (id)p_attachedLayoutsInLayout:(id)arg1;
- (id)validatedLayoutForAnchoredDrawable:(id)arg1;
- (id)validatedLayoutForInlineDrawable:(id)arg1;
- (id)p_validatedLayoutForDrawable:(id)arg1 inContainingLayout:(id)arg2;
- (struct CGPoint)calculatePointFromSearchReference:(id)arg1;
- (void)layoutSearchForAnnotationWithHitBlock:(CDUnknownBlockType)arg1;
- (void)layoutSearchForString:(id)arg1 options:(unsigned long long)arg2 hitBlock:(CDUnknownBlockType)arg3;
- (void)addAttachmentLayout:(id)arg1;
- (id)existingAttachmentLayoutForInfo:(id)arg1;
@property(readonly, nonatomic) _Bool layoutIsValid;
@property(readonly, nonatomic) TSDLayout *parentLayoutForInlineAttachments;
@property(readonly, nonatomic) TSDCanvas *canvas;
- (struct CGRect)targetRectForCanvasRect:(struct CGRect)arg1;
- (void)setNeedsDisplayInTargetRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool wantsLineFragments;
@property(readonly, nonatomic) int naturalDirection;
@property(readonly, nonatomic) int naturalAlignment;
@property(readonly, nonatomic) int verticalAlignment;
@property(readonly, nonatomic) unsigned int autosizeFlags;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
@property(readonly, nonatomic) struct CGPoint position;
@property(readonly, nonatomic) struct CGSize currentSize;
@property(readonly, nonatomic) struct CGSize maxSize;
@property(readonly, nonatomic) struct CGSize minSize;
- (_Bool)isLastTarget;
@property(readonly, nonatomic) TSPObject<TSDHint> *nextTargetFirstChildHint;
@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider;
@property(readonly, nonatomic) id <TSWPFootnoteHeightMeasurer> footnoteHeightMeasurer;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *nextTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> nextTargetFirstColumn;
@property(readonly, nonatomic) const struct TSWPTopicNumberHints *previousTargetTopicNumbers;
@property(readonly, retain, nonatomic) id <TSWPOffscreenColumn> previousTargetLastColumn;
- (id)columnMetricsForCharIndex:(unsigned long long)arg1 outRange:(struct _NSRange *)arg2;
- (_Bool)shouldProvideSizingGuides;
- (void)invalidateSize;
- (void)validate;
- (struct CGPoint)capturedInfoPositionForAttachment;
- (id)computeLayoutGeometry;
- (struct CGSize)maximumFrameSizeForChild:(id)arg1;
- (double)contentHeight;
- (_Bool)processWidowAndInflation;
- (void)updateStartCharIndex;
- (void)killColumns;
- (void)p_killDrawableLayouts:(id)arg1;
- (_Bool)needsInflation;
- (struct CGRect)p_rectForSelection:(id)arg1 useParagraphModeRects:(_Bool)arg2;
- (struct CGRect)rectForPresentingAnnotationPopoverForSelection:(id)arg1;
- (struct CGRect)rectForSelection:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) struct __CFLocale *hyphenationLocale;
@property(readonly, nonatomic) struct CGRect maskRect;
@property(readonly, nonatomic) _Bool shouldHyphenate;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPBodyRep : TSWPRep <TSKChangeSourceObserver>
{
    NSSet *_lastSelectedInfos;
}

- (id)beginEditing;
- (void)willBeRemoved;
- (id)siblings;
- (id)repForCharIndex:(unsigned long long)arg1 isStart:(_Bool)arg2;
- (_Bool)p_doesRep:(id)arg1 containCharIndex:(unsigned long long)arg2 isStart:(_Bool)arg3;
- (id)hitRepChrome:(struct CGPoint)arg1;
- (id)hitReps:(struct CGPoint)arg1 withSlop:(struct CGSize)arg2;
- (id)hitRep:(struct CGPoint)arg1;
- (id)colorBehindLayer:(id)arg1;
- (id)storage;
- (void)dealloc;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPDocumentRoot : TSADocumentRoot <TSDThumbnailProducer, TSDInfoUUIDPathPrefixComponentsProvider, TSWPDrawableOLC, TSWPStorageParent, TSWPChangeSessionManager, TSWPChangeVisibility, TSTResolverContainerNameProvider, TSCEResolverContainer>
{
    NSArray *_citationRecords;
    _Bool _shouldUniquifyTableNames;
    NSArray *_obsoleteTOCStyles;
    TPTheme *_theme;
    TSSStylesheet *_stylesheet;
    TSWPStorage *_bodyStorage;
    TPDocumentSettings *_settings;
    TPDrawablesZOrder *_drawablesZOrder;
    TPFloatingDrawables *_floatingDrawables;
    _Bool _usesSingleHeaderFooter;
    _Bool _needsInitialization;
    struct CGSize _pageSize;
    double _pageScale;
    NSString *_printerID;
    NSString *_paperID;
    unsigned long long _orientation;
    double _leftMargin;
    double _rightMargin;
    double _topMargin;
    double _bottomMargin;
    double _headerMargin;
    double _footerMargin;
    _Bool _layoutBodyVertically;
    struct __CFLocale *_hyphenationLocale;
    _Bool _changeTrackingPaused;
    _Bool _changeTrackingEnabled;
    NSMutableArray *_changeSessionHistory;
    TPPaginatedPageController *_paginatedPageController;
    TPPageLayoutNotifier *_pageLayoutNotifier;
    TSDThumbnailController *_thumbnailController;
    _Bool _newDocument;
    double _currentThumbnailContainerWidth;
    unsigned int _tableNameCounter;
    NSMutableDictionary *_chartsUIState;
    NSMutableDictionary *_tableInfosWithUniqueNames;
    _Bool initiallyShowRuler;
    TPInteractiveCanvasController *interactiveCanvasController;
    TPTOCController *_tocController;
}

+ (void)localizeTextStorage:(id)arg1 withTemplateBundle:(id)arg2;
+ (struct CGSize)previewImageSizeForType:(unsigned long long)arg1;
+ (struct CGSize)pageSizeFromPaperSize:(struct CGSize)arg1 pageScale:(double)arg2 orientation:(unsigned long long)arg3;
@property(retain, nonatomic) TPTOCController *tocController; // @synthesize tocController=_tocController;
@property(nonatomic) _Bool initiallyShowRuler; // @synthesize initiallyShowRuler;
@property(retain, nonatomic) NSMutableDictionary *chartsUIState; // @synthesize chartsUIState=_chartsUIState;
@property(retain, nonatomic) NSArray *changeSessionHistory; // @synthesize changeSessionHistory=_changeSessionHistory;
@property(retain, nonatomic) TPFloatingDrawables *floatingDrawables; // @synthesize floatingDrawables=_floatingDrawables;
@property(retain, nonatomic) TPDrawablesZOrder *drawablesZOrder; // @synthesize drawablesZOrder=_drawablesZOrder;
@property(readonly, retain, nonatomic) TSWPStorage *bodyStorage; // @synthesize bodyStorage=_bodyStorage;
@property(retain, nonatomic) TSSStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(readonly, nonatomic) _Bool isNewDocument; // @synthesize isNewDocument=_newDocument;
@property(readonly, nonatomic) TSDThumbnailController *thumbnailController; // @synthesize thumbnailController=_thumbnailController;
@property(readonly, nonatomic) TPPaginatedPageController *paginatedPageController; // @synthesize paginatedPageController=_paginatedPageController;
@property(nonatomic) TPInteractiveCanvasController *interactiveCanvasController; // @synthesize interactiveCanvasController;
- (id).cxx_construct;
- (void)pUpgradeSection:(id)arg1 documentVersion:(unsigned long long)arg2;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (id)UIStateForChart:(id)arg1;
- (unsigned int)nextUntitledResolverIndex;
- (_Bool)resolverNameIsUsed:(id)arg1;
- (id)resolverMatchingName:(id)arg1;
- (_Bool)isPendingTableNameUniquification;
- (id)resolversMatchingPrefix:(id)arg1;
- (id)resolverMatchingName:(id)arg1 contextContainerName:(id)arg2;
- (id)resolverMatchingName:(id)arg1 contextResolver:(id)arg2;
- (id)resolverContainerNamesMatchingPrefix:(id)arg1;
- (id)resolverContainerForName:(id)arg1 caseSensitive:(_Bool)arg2;
- (id)nameForResolverContainer:(id)arg1;
- (id)resolverContainerNameForResolver:(id)arg1;
- (void)willRemoveDrawable:(id)arg1;
- (void)didAddDrawable:(id)arg1;
- (_Bool)shouldShowMarkupForChangeKind:(int)arg1 date:(id)arg2;
- (_Bool)shouldShowChangeKind:(int)arg1 date:(id)arg2;
- (void)startNewChangeSessionIfNecessaryGettingInsertAuthorCommand:(id *)arg1;
- (id)changeSessionAuthorCreatedWithCommand:(id *)arg1;
- (void)upgradeFromOldSectionWithPageSize:(struct CGSize)arg1 leftMargin:(double)arg2 rightMargin:(double)arg3 topMargin:(double)arg4 bottomMargin:(double)arg5 headerMargin:(double)arg6 footerMargin:(double)arg7;
- (id)uuidPathPrefixComponentsForInfo:(id)arg1;
- (_Bool)isMultiPageForQuickLook;
- (int)verticalAlignmentForTextStorage:(id)arg1;
- (int)naturalAlignmentAtCharIndex:(unsigned long long)arg1 inTextStorage:(id)arg2;
- (_Bool)useLigatures;
- (struct __CFLocale *)hyphenationLocale;
- (_Bool)shouldHyphenate;
- (_Bool)documentDisallowsHighlightsOnStorage:(id)arg1;
- (unsigned long long)writingDirection;
- (_Bool)shouldAllowDrawableInGroups:(id)arg1 forImport:(_Bool)arg2;
- (_Bool)pageMastersAllowDrawable:(id)arg1;
- (id)pageMasterOwningModel:(id)arg1;
- (_Bool)isSectionModel:(id)arg1;
- (void)setValue:(double)arg1 forMargin:(int)arg2;
- (double)valueForMargin:(int)arg1;
- (struct CGRect)pageBoundsWithinMargins;
- (double)bodyWidth;
@property(readonly, retain, nonatomic) TPDocumentSettings *settings;
- (void)resumeBackgroundActivities;
- (void)suspendBackgroundActivities;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)willClose;
- (void)willHide;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (id)createViewStateRoot;
- (id)modelPathComponentForChild:(id)arg1;
- (id)childEnumerator;
- (id)changeSessionManagerForModel:(id)arg1;
- (id)changeVisibility;
- (id)p_previewImageWithImageSize:(struct CGSize)arg1;
- (id)previewImageForSize:(struct CGSize)arg1;
- (_Bool)supportHeaderFooterParagraphAlignmentInInspectors;
- (void)resumeThumbnailing;
- (void)suspendThumbnailing;
- (Class)thumbnailImagerClass;
- (_Bool)reuseThumbnailerUntilIdleForIdentifier:(id)arg1;
- (struct CGRect)unscaledClipRectForIdentifier:(id)arg1;
- (struct CGSize)thumbnailSizeForIdentifier:(id)arg1;
- (id)rootInfosForIdentifier:(id)arg1;
- (void)thumbnailContainerDidChange:(id)arg1;
- (void)pageCountDidChangeForPageController:(id)arg1;
@property(readonly, nonatomic) struct CGSize paperSize;
- (id)commandForConvertingFloatingDrawableToAnchored:(id)arg1;
- (void)invalidateThumbnailForPageIndex:(unsigned long long)arg1;
- (unsigned long long)pageIndexForThumbnailIdentifier:(id)arg1;
- (id)thumbnailIdentifierForPageIndex:(unsigned long long)arg1;
- (unsigned long long)nextRootSearchTargetIndexFromIndex:(unsigned long long)arg1 forString:(id)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (unsigned long long)p_nextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned long long)arg1 forString:(id)arg2 options:(unsigned long long)arg3 inDirection:(unsigned long long)arg4;
- (unsigned long long)p_scanBackwardsForNextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned long long)arg1 forString:(id)arg2 withOptions:(unsigned long long)arg3;
- (unsigned long long)p_scanForwardsForNextRootSearchTargetInBodyOrFloatersFromIndex:(unsigned long long)arg1 forString:(id)arg2 withOptions:(unsigned long long)arg3;
- (struct _NSRange)p_bodyHitRangeForString:(id)arg1 withOptions:(unsigned long long)arg2 limitRange:(struct _NSRange)arg3;
- (_Bool)p_possibleHitInSectionMaster:(id)arg1 pageIndex:(unsigned long long)arg2 withOptions:(unsigned long long)arg3;
- (unsigned long long)rootSearchTargetCountThroughIndex:(unsigned long long)arg1;
- (void)withRootSearchTargetAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (void)updateWritingDirection:(unsigned long long)arg1;
- (void)prepareNewDocumentWithTemplateBundle:(id)arg1;
@property(readonly, nonatomic) long long contentWritingDirection;
- (_Bool)autoListTermination;
- (_Bool)autoListRecognition;
- (id)citationRecords;
- (_Bool)textIsVertical;
- (void)setBodyStorage:(id)arg1 dolcContext:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setThemeForTemplateImport:(id)arg1;
@property(retain, nonatomic) TPTheme *theme;
- (void)p_uniquifyTableNames;
- (void)p_upgradeBodyTOC;
- (id)p_realTOCEntryStyleFromFakeTOCEntryStyle:(id)arg1 context:(id)arg2;
- (void)p_upgradeTOCStyles;
- (id)initFromUnarchiver:(id)arg1;
- (id)initForThemeImportWithContext:(id)arg1;
- (id)initUsingDefaultThemeWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)pFinishInitialization;
- (void)pCommonInitialization;
- (void)pCreateFloatingDrawables;
- (void)pCreateDrawablesZOrderBodyStorage:(id)arg1 addAnchoredDrawables:(_Bool)arg2;
- (void)pCreateBodyStorage;
- (void)pCreateStylesheet;
- (struct CGRect)pConjureUpBodyRect;
- (void)dealloc;
- (void)documentDidLoad;
- (unsigned long long)applicationType;
@property(readonly, retain, nonatomic) NSArray *sections;
@property(readonly, retain, nonatomic) TPSection *firstSection;
@property(readonly, nonatomic) _Bool isTrackingChanges;
@property(nonatomic, getter=isChangeTrackingEnabled) _Bool changeTrackingEnabled;
@property(nonatomic, getter=isChangeTrackingPaused) _Bool changeTrackingPaused;
@property(nonatomic) _Bool layoutBodyVertically;
@property(nonatomic) double footerMargin;
@property(nonatomic) double headerMargin;
@property(nonatomic) double bottomMargin;
@property(nonatomic) double topMargin;
@property(nonatomic) double rightMargin;
@property(nonatomic) double leftMargin;
@property(nonatomic) unsigned long long orientation; // @synthesize orientation=_orientation;
@property(copy, nonatomic) NSString *paperID; // @synthesize paperID=_paperID;
@property(copy, nonatomic) NSString *printerID; // @synthesize printerID=_printerID;
@property(nonatomic) double pageScale;
@property(nonatomic) struct CGSize pageSize;
@property(nonatomic) _Bool usesSingleHeaderFooter;
- (unsigned long long)p_autoNumberForStorage:(id)arg1 footnoteNumbering:(int)arg2 footnoteKind:(int)arg3;
- (_Bool)footnotesShouldAffectBodyLayout;
- (double)footnoteGap;
- (int)footnoteKind;
- (id)markStringForFootnoteReferenceStorage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isTrackingChanges) _Bool trackingChanges;

@end

__attribute__((visibility("hidden")))
@interface TPFloatingDrawables : TSPObject <TSKDocumentObject>
{
    NSMutableDictionary *_drawablesByPageIndex;
    TSUPointerKeyDictionary *_pageIndexByDrawable;
    TPDocumentRoot *_documentRoot;
}

@property(readonly, nonatomic) TPDocumentRoot *documentRoot; // @synthesize documentRoot=_documentRoot;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)moveDrawable:(id)arg1 toPageIndex:(unsigned long long)arg2;
- (void)removeDrawables:(id)arg1;
- (void)removeDrawable:(id)arg1;
- (void)removeDrawable:(id)arg1 suppressDOLC:(_Bool)arg2;
- (void)p_removeDrawable:(id)arg1;
- (void)addDrawables:(id)arg1 toPageIndex:(unsigned long long)arg2 insertContext:(id)arg3;
- (void)addDrawable:(id)arg1 toPageIndex:(unsigned long long)arg2 insertContext:(id)arg3;
- (void)addDrawable:(id)arg1 toPageIndex:(unsigned long long)arg2 insertContext:(id)arg3 suppressDOLC:(_Bool)arg4;
- (void)p_addDrawable:(id)arg1 toPageIndex:(unsigned long long)arg2;
- (id)drawableEnumerator;
- (unsigned long long)pageIndexForDrawable:(id)arg1;
- (unsigned long long)maximumPageIndex;
- (id)orderedDrawablesOnPageIndex:(unsigned long long)arg1;
- (id)drawablesOnPageIndex:(unsigned long long)arg1;
- (id)allDrawables;
- (unsigned long long)countOfAllDrawables;
- (_Bool)hasAnyDrawables;
- (id)description;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPFloatingDrawablesSelection : TSKSelection <NSFastEnumeration>
{
    NSSet *_selectedInfos;
}

+ (id)selectionWithInfos:(id)arg1;
@property(readonly, retain, nonatomic) NSSet *drawables; // @synthesize drawables=_selectedInfos;
- (_Bool)containsInfo:(id)arg1;
- (id)infos;
- (unsigned long long)count;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)selectionByRemovingInfo:(id)arg1;
- (id)selectionByAddingInfo:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1;
- (id)initWithInfos:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPHeaderRep : TSWPHeaderRep
{
    _Bool _hideKnobs;
}

@property(nonatomic) _Bool hideKnobs; // @synthesize hideKnobs=_hideKnobs;
- (_Bool)p_isMiddleFooterRep;
- (_Bool)p_isMiddleHeaderRep;
- (_Bool)p_shouldCreateArrowKnobs;
- (_Bool)p_isInDocumentSetup;
- (_Bool)doesNeedDisplayOnEditingDidEnd;
- (void)editingDidEnd;
- (void)updatePositionsOfKnobs:(id)arg1;
- (struct CGRect)boundsForStandardKnobs;
- (id)newTrackerForKnob:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (_Bool)shouldCreateKnobs;
- (id)beginEditing;
- (_Bool)canEditWithEditor:(id)arg1;
- (_Bool)shouldIgnoreSingleTapAtPoint:(struct CGPoint)arg1 withRecognizer:(id)arg2;
@property(readonly, nonatomic) TPPaginatedPageInfo *pageInfo;
- (id)pageLayout;

@end

__attribute__((visibility("hidden")))
@interface TPLayerDelegateProxy : NSObject
{
    id <TPLayerDelegateProxyDelegate> _delegate;
}

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)displayLayer:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)clearDelegate;
- (id)initWithDelegate:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPMarginAdjustLayout : TSDLayout
{
}

- (id)computeLayoutGeometry;
- (Class)repClassOverride;

@end

__attribute__((visibility("hidden")))
@interface TPMarginAdjustRep : TSDRep
{
    _Bool _hideKnobs;
    _Bool _topKnobEncroachingHeader;
    _Bool _bottomKnobEncroachingFooter;
    double _minTopMargin;
    double _minBottomMargin;
}

@property(nonatomic) double minBottomMargin; // @synthesize minBottomMargin=_minBottomMargin;
@property(nonatomic) double minTopMargin; // @synthesize minTopMargin=_minTopMargin;
@property(nonatomic) _Bool hideKnobs; // @synthesize hideKnobs=_hideKnobs;
- (_Bool)wantsGuidesWhileResizing;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (struct CGRect)boundsForStandardKnobs;
- (void)updateFromLayout;
- (void)addKnobsToArray:(id)arg1;
- (_Bool)shouldCreateKnobs;
- (void)hideKnobsEncroachingHeader:(double)arg1 orFooter:(double)arg2;
@property(readonly, nonatomic) TPPaginatedPageInfo *pageInfo;
- (_Bool)directlyManagesLayerContent;

@end

__attribute__((visibility("hidden")))
@interface TPPageController : NSObject <TPPageLayoutInfoProvider, TSWPLayoutOwner, TPLayoutStateConsumer, TPLayoutStateProvider>
{
    TPDocumentRoot *_documentRoot;
    TSWPLayoutManager *_bodyLayoutManager;
    TPOffscreenLayoutController *_drawablesLayoutController;
    TPFootnoteLayoutController *_footnoteLayoutController;
    NSMutableArray *_sectionHints;
    struct multimap<unsigned long, TPPageLayout *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, TPPageLayout *>>> _pageLayoutCache;
    TPPageLayoutState *_layoutState;
    _Bool _checkedForBackUp;
    NSMutableArray *_pageGeneratorStack;
    _Bool _handleBackgroundLayoutScheduled;
    int _bgLayoutStatus;
    NSDate *_bgLayoutStartDate;
    unsigned long long _lastKnownPageCount;
    unsigned long long _completePageCount;
    _Bool _shouldUpdatePageCount;
    TSUMutablePointerSet *_layoutObservers;
    int _backgroundLayoutEnabled;
    int _backgroundLayoutSuspendCount;
    int _isScrolling;
}

@property(readonly, nonatomic) unsigned long long pageCount; // @synthesize pageCount=_lastKnownPageCount;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_backgroundLayoutReadEntry;
- (void)p_cancelBGLayout;
- (void)p_scheduleImmediateBGLayout;
- (void)p_scheduleBGLayout;
- (void)p_setBackgroundLayoutStartDate:(id)arg1;
- (void)p_updateBackgroundLayoutStartDate;
- (_Bool)p_isBackgroundLayoutActive;
- (void)p_handleBGLayoutStatusChange;
- (void)p_handleBackgroundLayout;
- (void)p_handleBackgroundLayoutMainThreadEntry;
- (void)p_notifyObserversDidInvalidate;
- (void)p_notifyObserversDidLayoutWhileSyncing:(_Bool)arg1;
- (void)p_notifyObserversWillLayoutWhileSyncing:(_Bool)arg1;
- (unsigned long long)p_textPageIndexPrecedingPageIndex:(unsigned long long)arg1;
- (unsigned long long)p_lastValidTextPageIndex;
- (id)p_lastValidTextPageHint;
- (id)p_lastValidPageHint;
- (id)p_textPageHintFollowingPageIndexPath:(id)arg1;
- (id)p_textPageHintPrecedingPageIndexPath:(id)arg1;
- (id)p_textPageHintPrecedingPageIndex:(unsigned long long)arg1;
- (id)p_pageHintPrecedingPageIndexPath:(id)arg1;
- (id)p_pageHintForPageIndexPath:(id)arg1;
- (id)p_sectionHintForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (id)p_pageHintForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (id)p_pageIndexPathForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (void)p_updatePageCount;
- (void)p_didLayout;
- (void)p_advanceSectionIndex;
- (void)p_removeFinishedPageGenerators;
- (void)p_syncFromNextPage;
- (void)p_resetPageGenerators;
- (void)p_preparePageHintForNextPage;
- (void)p_prepareSectionHintForNextPage;
- (void)p_prepareLayoutStateForNextPage;
- (void)p_updateNonTextHintAtPageIndexPath:(id)arg1;
- (void)p_updateTextHintAtPageIndexPath:(id)arg1 withTarget:(id)arg2;
- (void)p_layoutFootnotesIntoPageLayout:(id)arg1;
- (void)p_layoutTextIntoPageLayout:(id)arg1 outDidSync:(_Bool *)arg2;
- (void)p_layoutIntoPageLayout:(id)arg1 outDidSync:(_Bool *)arg2;
- (void)p_layoutNextPageForLayoutController:(id)arg1;
- (void)p_layoutThroughPageIndex:(unsigned long long)arg1 forLayoutController:(id)arg2 clearOffscreenInfos:(_Bool)arg3;
- (void)p_checkForBackUp;
- (void)p_processWidowsAndInflationForLayoutController:(id)arg1;
- (unsigned long long)p_pageIndexForFootnoteIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 searchAfterLayoutPoint:(_Bool)arg3;
- (unsigned long long)p_pageIndexForAnchoredCharIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 searchAfterLayoutPoint:(_Bool)arg3;
- (unsigned long long)p_pageIndexContainingIndex:(unsigned long long)arg1 ofType:(int)arg2;
- (struct _NSRange)p_footnoteLayoutRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (struct _NSRange)p_anchoredRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (struct _NSRange)p_bodyRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 allowAfterLayoutPoint:(_Bool)arg3;
- (unsigned long long)p_pageIndexForCharIndex:(unsigned long long)arg1 caretAffinity:(int)arg2 forceLayout:(_Bool)arg3 searchAfterLayoutPoint:(_Bool)arg4;
- (id)p_pageInfoForPageAtIndex:(unsigned long long)arg1;
- (void)p_withPageLayoutAtIndex:(unsigned long long)arg1 preferredLayoutController:(id)arg2 executeBlock:(CDUnknownBlockType)arg3;
- (id)p_cachedPageLayoutForPageIndex:(unsigned long long)arg1 preferredLayoutController:(id)arg2;
- (void)p_removePageLayoutFromCache:(id)arg1;
- (void)p_insertPageLayoutIntoCache:(id)arg1;
- (unsigned long long)p_layoutEndFootnoteIndex;
- (unsigned long long)p_layoutEndCharIndex;
- (_Bool)p_isLayoutComplete;
- (void)p_destroyBodyLayoutState;
- (void)p_forceRestartLayout;
- (void)p_invalidatePageIndex:(unsigned long long)arg1;
- (void)p_setNeedsLayoutOnPageIndex:(unsigned long long)arg1;
- (void)p_setNeedsLayoutFromSectionIndexToEnd:(unsigned long long)arg1;
- (void)didScroll;
- (void)willScroll;
- (void)didZoom;
- (void)willZoom;
- (id)sectionHintsForArchivedLayoutState:(id)arg1;
- (unsigned long long)lastPageCountForArchivedLayoutState:(id)arg1;
- (unsigned long long)documentPageIndexForArchivedLayoutState:(id)arg1;
- (unsigned long long)sectionPageIndexForArchivedLayoutState:(id)arg1;
- (unsigned long long)sectionIndexForArchivedLayoutState:(id)arg1;
- (_Bool)archivedLayoutState:(id)arg1 setSectionHints:(id)arg2;
- (void)archivedLayoutState:(id)arg1 setLastPageCount:(unsigned long long)arg2;
- (void)archivedLayoutState:(id)arg1 setDocumentPageIndex:(unsigned long long)arg2;
- (void)archivedLayoutState:(id)arg1 setSectionPageIndex:(unsigned long long)arg2;
- (void)archivedLayoutState:(id)arg1 setSectionIndex:(unsigned long long)arg2;
- (void)layoutManager:(id)arg1 didClearDirtyRangeWithDelta:(long long)arg2 afterCharIndex:(unsigned long long)arg3;
- (id)textWrapper;
- (void)layoutManagerNeedsLayout:(id)arg1;
- (_Bool)caresAboutStorageChanges;
- (void)removeLayoutObserver:(id)arg1;
- (void)addLayoutObserver:(id)arg1;
- (struct CGPoint)positionForPositionerForDrawable:(id)arg1;
- (_Bool)okToAnchorDrawable:(id)arg1 toPageIndex:(unsigned long long)arg2;
- (_Bool)p_canAnchorDrawable:(id)arg1 toPageLayout:(id)arg2;
- (id)footnoteLayoutController;
@property(readonly, nonatomic) unsigned long long firstPageIndexNeedingLayout;
- (_Bool)isLayoutComplete;
- (_Bool)isLayoutCompleteThroughPageIndex:(unsigned long long)arg1;
- (double)footerHeight;
- (double)headerHeight;
- (void)accquireLockAndPerformAction:(CDUnknownBlockType)arg1;
- (void)withPageLayoutAtIndex:(unsigned long long)arg1 preferredLayoutController:(id)arg2 executeBlock:(CDUnknownBlockType)arg3;
- (void)withPageLayoutAtIndex:(unsigned long long)arg1 executeBlock:(CDUnknownBlockType)arg2;
- (id)pageInfoForAttachmentAtBodyCharIndex:(unsigned long long)arg1 selection:(id)arg2;
- (id)pageInfoForPageIndex:(unsigned long long)arg1;
- (struct _NSRange)sectionPageRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2 outEndIsValid:(_Bool *)arg3;
- (unsigned long long)sectionPageIndexForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (struct _NSRange)sectionBodyRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (unsigned long long)sectionIndexForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (struct _NSRange)pageRangeOfSectionIndex:(unsigned long long)arg1;
- (unsigned long long)pageIndexForFootnoteIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (unsigned long long)pageIndexForAnchoredCharIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (unsigned long long)pageIndexForCharIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (_Bool)pageAtIndexHasBody:(unsigned long long)arg1;
- (_Bool)pageEndsWithPaginatedAttachment:(unsigned long long)arg1;
- (_Bool)pageBeginsWithPaginatedAttachment:(unsigned long long)arg1;
- (struct _NSRange)footnoteLayoutRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (struct _NSRange)anchoredRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (struct _NSRange)bodyRangeForPageIndex:(unsigned long long)arg1 forceLayout:(_Bool)arg2;
- (struct _NSRange)pageRangeForSelection:(id)arg1 outEndIsValid:(_Bool *)arg2;
- (void)layoutThroughPageIndex:(unsigned long long)arg1 forLayoutController:(id)arg2;
- (void)layoutThroughPageIndex:(unsigned long long)arg1;
- (void)scheduleImmediateBackgroundLayout;
- (void)resumeBackgroundLayout;
- (void)suspendBackgroundLayout;
@property(nonatomic) _Bool backgroundLayoutEnabled;
- (void)dealloc;
- (void)teardown;
- (void)setupListenersForInteractiveCanvasController;
- (id)initWithDocumentRoot:(id)arg1;
- (void)i_setNeedsDynamicLayoutForLayoutController:(id)arg1 onPageIndex:(unsigned long long)arg2;
- (_Bool)i_shouldLayoutBodyVertically;
- (void)i_unregisterPageLayout:(id)arg1;
- (void)i_registerPageLayout:(id)arg1;
- (void)i_inflateFootnotesInFootnoteContainer:(id)arg1;
- (void)i_inflateColumnsInBodyLayout:(id)arg1;
- (id)i_firstChildHintAfterPageIndex:(unsigned long long)arg1;
- (id)i_columnAfterPageIndex:(unsigned long long)arg1;
- (const struct TSWPTopicNumberHints *)i_topicHintsAfterPageIndex:(unsigned long long)arg1;
- (const struct TSWPTopicNumberHints *)i_topicHintsPriorToPageIndex:(unsigned long long)arg1;
- (id)i_columnPriorToPageIndex:(unsigned long long)arg1;
- (void)i_trimPageAtIndex:(unsigned long long)arg1 toCharIndex:(unsigned long long)arg2 removeFootnoteLayoutCount:(unsigned long long)arg3 removeAutoNumberFootnoteCount:(unsigned long long)arg4;
- (id)i_pageHintForPageIndex:(unsigned long long)arg1;
- (void)d_timeLayout;
- (struct _NSRange)p_rangeOfContinuousSectionsAtPageIndex:(unsigned long long)arg1 startPage:(unsigned long long *)arg2;
- (id)p_pageMasterForPageIndex:(unsigned long long)arg1 inSection:(id)arg2 sectionHint:(id)arg3;
- (id)p_sectionAtSectionIndex:(unsigned long long)arg1;
- (int)contentFlagsForPageIndex:(unsigned long long)arg1;
- (unsigned long long)pageCountForPageIndex:(unsigned long long)arg1;
- (unsigned long long)pageNumberForPageIndex:(unsigned long long)arg1;
- (id)masterDrawableProviderForPageIndex:(unsigned long long)arg1;
- (_Bool)shouldHeaderFooterBeVisibleForPageIndex:(unsigned long long)arg1;
- (id)headerFooterProviderForPageIndex:(unsigned long long)arg1;
- (_Bool)canProvideNumberingInfoForPageIndex:(unsigned long long)arg1;
- (_Bool)canProvideInfoForPageIndex:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPageInfo : NSObject <TSDContainerInfo>
{
    TPDocumentRoot *_documentRoot;
    unsigned long long _pageIndex;
    TPBodyInfo *_bodyInfo;
    id <TPPageLayoutInfoProvider> _layoutInfoProvider;
}

@property(readonly, nonatomic) id <TPPageLayoutInfoProvider> layoutInfoProvider; // @synthesize layoutInfoProvider=_layoutInfoProvider;
@property(readonly, retain, nonatomic) TPBodyInfo *bodyInfo; // @synthesize bodyInfo=_bodyInfo;
@property(readonly, nonatomic) TPDocumentRoot *documentRoot; // @synthesize documentRoot=_documentRoot;
@property(readonly, nonatomic) unsigned long long pageIndex; // @synthesize pageIndex=_pageIndex;
- (id)childInfos;
- (Class)layoutClass;
@property(readonly, nonatomic, getter=isAttachedToBodyText) _Bool attachedToBodyText;
@property(readonly, nonatomic, getter=isInlineWithText) _Bool inlineWithText;
@property(readonly, nonatomic, getter=isAnchoredToText) _Bool anchoredToText;
@property(readonly, nonatomic, getter=isFloatingAboveText) _Bool floatingAboveText;
@property(readonly, nonatomic) TSPObject<TSDOwningAttachment> *owningAttachmentNoRecurse;
@property(nonatomic) TSPObject<TSDOwningAttachment> *owningAttachment;
- (_Bool)isThemeContent;
- (Class)repClass;
@property(copy, nonatomic) TSDInfoGeometry *geometry;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
@property(nonatomic) NSObject<TSDContainerInfo> *parentInfo;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)initWithPageIndex:(unsigned long long)arg1 documentRoot:(id)arg2 layoutInfoProvider:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool matchesObjectPlaceholderGeometry;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPageLayout : TSWPPageLayout <TSWPLayoutParent, TSWPColumnMetrics, TPAttachmentLayoutParent>
{
    id <TSWPHeaderFooterProvider> _headerFooterProvider;
    TPMarginAdjustLayout *_marginAdjustLayout;
    TPInflatableFootnoteContainerLayout *_footnoteContainerLayout;
    unsigned long long _pageNumber;
    unsigned long long _pageCount;
    _Bool _childLayoutsValid;
    TSURetainedPointerKeyDictionary *_oldChildLayouts;
    id <TPMasterDrawableProvider> _masterDrawableProvider;
    unsigned int _contentFlags;
}

@property(readonly, nonatomic) TPFootnoteContainerLayout *footnoteContainerLayout; // @synthesize footnoteContainerLayout=_footnoteContainerLayout;
- (void)p_sortChildLayouts;
- (void)p_populateOldChildLayoutsWithLayouts:(id)arg1;
- (void)p_insertFootnoteContainerLayout;
- (void)p_insertValidatedMarginAdjustLayout;
- (void)p_insertBodyLayout;
- (void)p_insertValidatedFloatingLayouts;
- (void)p_insertValidatedMasterLayouts;
- (id)p_existingChildLayoutForInfo:(id)arg1;
- (id)p_insertValidatedChildLayoutForInfo:(id)arg1;
- (id)p_insertChildLayoutForInfo:(id)arg1;
- (void)p_updateFromLayoutInfoProvider;
- (void)p_invalidatePageControllerForDynamicOperation;
- (id)p_orderedChildInfos;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
@property(readonly, nonatomic) unsigned long long pageCount;
@property(readonly, nonatomic) unsigned long long pageNumber;
- (void)evacuateOldChildLayoutCache;
- (void)validate;
- (unsigned long long)pageCountForAttachment:(id)arg1;
- (unsigned long long)pageNumberForAttachment:(id)arg1;
- (int)naturalAlignmentForTextLayout:(id)arg1;
- (double)maxAutoGrowHeightForTextLayout:(id)arg1;
- (double)maxAutoGrowWidthForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (void)wrappableChildInvalidated:(id)arg1;
- (id)additionalDependenciesForChildLayout:(id)arg1;
- (void)addAttachmentLayout:(id)arg1;
- (id)existingAttachmentLayoutForInfo:(id)arg1;
- (id)layoutsCausingWrapOnTextLayoutTarget:(id)arg1 ignoreIntersection:(_Bool)arg2;
- (struct CGRect)footnoteContainerFrameWithSize:(struct CGSize)arg1;
- (void)inflateFootnotesInFootnoteContainer:(id)arg1;
- (void)resetFootnoteLayoutsForReinflation;
- (double)heightAvailableForFootnotes;
- (void)rebuildChildLayoutsOnNextValidation;
- (void)invalidateFootnoteContainers;
- (void)invalidateFootnoteSeparatorLine;
- (void)invalidateBodyAndMarginLayouts;
- (void)invalidateHeaderFooterLayouts;
- (void)invalidateHeaderFooterLayoutsCache;
- (void)processWidowAndInflation;
@property(readonly, nonatomic) TPMarginAdjustLayout *marginAdjustLayout;
@property(readonly, nonatomic) NSArray *anchoredDrawableLayouts;
@property(readonly, nonatomic) NSArray *floatingDrawableLayouts;
- (_Bool)isRootLayoutForInspectorGeometry;
@property(readonly, nonatomic) id <NSFastEnumeration> childTextLayoutsForExteriorWrap;
- (void)invalidateSize;
- (id)dependentLayouts;
- (id)computeLayoutGeometry;
- (void)parentDidChange;
- (void)parentWillChangeTo:(id)arg1;
- (id)pageLayout;
@property(readonly, nonatomic) unsigned long long pageIndex;
- (id)layoutsForProvidingGuidesForChildLayouts;
- (_Bool)providesGuidesForChildLayouts;
- (_Bool)isReadyForBodyLayout;
- (id)layoutForChildInfo:(id)arg1;
- (id)primaryLayoutForInfo:(id)arg1;
- (void)invalidateLayoutsForPageCountChange;
- (_Bool)hasFooters;
- (_Bool)hasHeaders;
- (_Bool)allowsHeaderFooter;
@property(readonly, nonatomic) _Bool allowsFootnotes;
@property(readonly, nonatomic) _Bool allowsBody;
@property(readonly, nonatomic) struct CGRect bodyRect;
@property(readonly, nonatomic) TPBodyLayout *bodyLayout;
@property(readonly, nonatomic) id <TPMasterDrawableProvider> masterDrawableProvider;
- (_Bool)headerFooterProviderValid;
- (id)headerFooterProvider;
- (_Bool)shouldHeaderFooterBeVisibleForPageIndex:(unsigned long long)arg1;
- (_Bool)shouldHeaderFooterBeVisible:(int)arg1;
- (_Bool)shouldProvideGuidesDuringExclusiveAlignmentOperation;
- (void)dealloc;
- (void)p_addLayoutsForInfos:(id)arg1 toArray:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TPPageRep : TSWPPageRep <TSDMasterDrawableDelegate>
{
    CALayer *_separatorLayer;
}

- (id)bodyReps;
- (_Bool)masksToBounds;
- (void)drawInLayerContext:(struct CGContext *)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (_Bool)directlyManagesLayerContent;
- (id)layerClass;
- (void)p_updateBorderLayers;
- (id)p_topmostEditingInfo;
- (void)p_updateSeparatorLayer;
- (_Bool)p_pageRequiresSeparator;
- (_Bool)childRepIsMasterDrawable:(id)arg1;
- (_Bool)childRepIsOnDocSetupCanvas:(id)arg1;
- (id)childRepsForHitTesting;
- (id)visibleChildLayouts;
- (void)p_didUpdateLayer:(id)arg1;
- (void)didUpdateLayer:(id)arg1;
- (void)p_updateLayoutBordersVisibility;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)viewScaleDidChange;
- (void)willBeRemoved;
- (void)showHUDForWPRep:(id)arg1 withFlags:(unsigned long long)arg2;
- (id)hitMasterRep:(struct CGPoint)arg1;
@property(readonly, nonatomic) TPMarginAdjustRep *marginAdjustRep;
- (id)p_hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (int)p_hitHeaderFooterFragment:(int)arg1 atPoint:(struct CGPoint)arg2;
- (id)hitRep:(struct CGPoint)arg1 passingTest:(CDUnknownBlockType)arg2;
- (_Bool)p_headerFooterIsVisibleAndInteractive:(int)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPaginatedPageController : TPPageController <TSKChangeSourceObserver>
{
    TPTextWrapController *_wrapController;
}

- (unsigned long long)p_backupPageIndexForCharIndex:(unsigned long long)arg1;
- (struct _NSRange)p_pageRangeAffectedByInfo:(id)arg1;
- (void)p_performWithCachedPageLayouts:(CDUnknownBlockType)arg1;
- (void)p_rebuildCachedLayoutChildrenFromStartPage:(unsigned long long)arg1 toEndPage:(unsigned long long)arg2 setNeedsLayout:(_Bool)arg3;
- (void)syncProcessChanges:(id)arg1 forChangeSource:(id)arg2;
- (void)processHeaderFooterPropertyChanged;
- (void)processSectionChanged:(id)arg1;
- (id)textWrapper;
- (struct CGSize)canvasSizeToFitAllPages;
- (unsigned long long)calculatePageIndexFromCanvasPoint:(struct CGPoint)arg1;
- (unsigned long long)pageIndexFromCanvasPoint:(struct CGPoint)arg1;
- (struct CGRect)pageRectForPageIndex:(unsigned long long)arg1;
- (struct CGPoint)pageOriginForPageIndex:(unsigned long long)arg1;
- (Class)p_pageInfoClass;
- (struct CGSize)pageSize;
- (_Bool)isPaginated;
- (void)d_toggleWrapAnimation;
- (void)dealloc;
- (void)teardown;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPaginatedPageInfo : TPPageInfo
{
}

- (Class)repClass;
- (Class)layoutClass;
- (struct CGRect)pageFrame;
- (id)pageController;
@property(readonly, nonatomic) _Bool isDocumentSetupPage;
@property(readonly, nonatomic) NSArray *floatingDrawableInfos;

@end

__attribute__((visibility("hidden")))
@interface TPGuideStorageMap : TSPObject
{
    NSMutableDictionary *_pageIndexToStorageMap;
    TSUPointerKeyDictionary *_storageToPageIndexMap;
}

- (id)i_sortedPageIndices;
- (void)p_setGuideStorage:(id)arg1 forSectionPageIndex:(id)arg2;
- (_Bool)containsGuideStorage:(id)arg1;
- (unsigned long long)sectionPageIndexForGuideStorage:(id)arg1;
- (id)guideStorageForSectionPageIndex:(unsigned long long)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPSection : TSPObject <TSKDocumentObject, TSKModel, TSWPSection>
{
    TPDocumentRoot *_documentRoot;
    TSWPStorage *_parentStorage;
    TPPageMaster *_pageMasters[3];
    NSString *_name;
    _Bool _inheritPreviousHeaderFooter;
    _Bool _pageMasterFirstPageDifferent;
    _Bool _pageMasterFirstPageHidesHeaderFooter;
    _Bool _pageMasterEvenOddPagesDifferent;
    unsigned int _sectionStartKind;
    unsigned int _sectionPageNumberKind;
    unsigned int _sectionPageNumberStart;
    TPGuideStorageMap *_userGuideStorageMap;
}

+ (_Bool)needsObjectUUID;
@property(readonly, copy) NSString *description;
- (id)pageMasterOwningModel:(id)arg1;
- (id)pageMasterForType:(int)arg1;
- (id)pageMasters;
- (void)p_makeUserGuideStorage;
- (void)p_upgradePageSizeAndMarginsFromParsedArchive:(const struct SectionArchive *)arg1;
- (void)p_unarchiveAndUpgrade:(id)arg1 archive:(const struct SectionArchive *)arg2;
- (void)i_clearPropertiesToDefaults;
- (void)i_copyHeadersAndFootersFrom:(id)arg1 dolcContext:(id)arg2;
- (void)i_ensureHeaderFooterStoragesExistWithStylesheet:(id)arg1;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
@property(nonatomic) TSWPStorage *parentStorage;
- (id)copyWithContext:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isHeaderFooterEmpty:(int)arg1;
- (_Bool)isHeaderFooterVisible:(int)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (void)i_setDocumentRoot:(id)arg1;
- (id)objectUUIDPath;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 section:(id)arg2;
- (void)setUserGuideStorageMap:(id)arg1;
@property(readonly, nonatomic) TPGuideStorageMap *userGuideStorageMap;
@property(nonatomic) unsigned int sectionPageNumberStart;
@property(nonatomic) unsigned int sectionPageNumberKind;
@property(nonatomic) unsigned int sectionStartKind;
@property(nonatomic) _Bool pageMasterEvenOddPagesDifferent;
@property(nonatomic) _Bool pageMasterFirstPageHidesHeaderFooter;
@property(nonatomic) _Bool pageMasterFirstPageDifferent;
@property(nonatomic) _Bool inheritPreviousHeaderFooter;
@property(retain, nonatomic) NSString *name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPTextWrapController : NSObject <TSWPTextWrap>
{
    TPDocumentRoot *_documentRoot;
    struct CGAffineTransform _canvasSpaceToWrapSpace;
    struct CGAffineTransform _wrapSpaceToCanvasSpace;
    _Bool _wrapAnimationEnabled;
    NSTimer *_wrapAnimationTimer;
}

+ (struct CGPoint)p_baseWrappablePoint;
- (id).cxx_construct;
- (unsigned int)p_splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappable:(id)arg3 cookie:(id)arg4;
- (void)stopAnimation;
- (void)toggleWrapAnimation;
- (_Bool)p_shouldTextFlowAroundWrappable:(id)arg1 inTarget:(id)arg2 inColumn:(id)arg3;
- (void)p_animateWrap;
- (void)p_setWrapAnimationPhase:(double)arg1;
- (double)nextUnobstructedSpanStartingAt:(struct CGRect)arg1 wrappableAttachments:(id)arg2 userInfo:(id)arg3;
- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(id)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)p_groupInfoContainingWrappable:(id)arg1;
- (id)beginWrappingToColumn:(id)arg1 target:(id)arg2 hasWrapables:(_Bool *)arg3;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPTheme : TSATheme
{
}

+ (id)themeWithContext:(id)arg1 alternate:(int)arg2;
+ (void)initialize;
- (void)saveToArchiver:(id)arg1;
- (void)p_saveToArchive:(struct ThemeArchive *)arg1 archiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)footnoteStyle;
- (id)headerAndFooterStyle;
- (id)bodyStyle;
- (id)_paragraphStylePresetWithName:(id)arg1 orContentTag:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TPThumbnailImager : TSDImager
{
}

- (void)canvasWillLayout:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPVisibleColumnProxy : NSObject <TSWPOffscreenColumn>
{
    unsigned long long _pageIndex;
    TPPageController *_pageController;
}

- (const CDStruct_6026ced1 *)p_targetLastHint;
- (const CDStruct_6026ced1 *)p_targetFirstHint;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 removeFootnoteLayoutCount:(unsigned long long)arg3 removeAutoNumberFootnoteCount:(unsigned long long)arg4;
@property(readonly, nonatomic) unsigned long long nextWidowPullsDownFromCharIndex;
@property(readonly, nonatomic) struct _NSRange anchoredRange;
@property(readonly, nonatomic) unsigned long long startAnchoredCharIndex;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) unsigned long long startCharIndex;
- (void)dealloc;
- (id)initWithPageIndex:(unsigned long long)arg1 pageController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPArchivedLayoutState : TSPObject <TPArchivedLayoutStateProtocol>
{
    unsigned long long _sectionIndex;
    unsigned long long _sectionPageIndex;
    unsigned long long _documentPageIndex;
    unsigned long long _lastPageCount;
    NSArray *_sectionHints;
}

- (void)captureLayoutStateWithProvider:(id)arg1;
- (void)readLayoutStateWithConsumer:(id)arg1;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (void)p_reset;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPCanvasSelection : TSWPSelection <TSDCanvasSelection, NSCopying>
{
    NSSet *mInfos;
    NSSet *mExcludedInfos;
    NSSet *mAdditionalInfos;
    TSDDrawableInfo<TSDContainerInfo> *mContainer;
}

+ (id)emptySelection;
+ (id)selectionWithInfos:(id)arg1;
+ (id)canvasSelectionFromCanvasSelection:(id)arg1 withToggledInfo:(id)arg2;
+ (id)canvasSelectionFromSelection:(id)arg1;
+ (Class)archivedSelectionClass;
- (void)p_commonCopyTo:(id)arg1;
- (void)saveToArchive:(struct CanvasSelectionArchive *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct CanvasSelectionArchive *)arg1 unarchiver:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyExcludingInfo:(id)arg1;
- (id)copyIncludingInfo:(id)arg1;
- (id)infosOfClass:(Class)arg1;
- (_Bool)containsUnlockedKindOfClass:(Class)arg1;
@property(readonly, nonatomic) unsigned long long unlockedInfoCount;
@property(readonly, nonatomic) NSSet *unlockedInfos;
- (_Bool)containsKindOfClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) TSDDrawableInfo<TSDContainerInfo> *container;
@property(readonly, nonatomic) unsigned long long infoCount;
@property(readonly, nonatomic) NSSet *infos;
@property(readonly, nonatomic) NSSet *rawInfos;
- (id)copyWithVisualRanges:(const struct TSWPRangeVector *)arg1 startChar:(unsigned long long)arg2 endChar:(unsigned long long)arg3 rightToLeft:(_Bool)arg4 sameLine:(_Bool)arg5;
- (id)copyWithNewVisualRanges:(const struct TSWPRangeVector *)arg1;
- (id)copyWithNewRange:(struct _NSRange)arg1;
- (id)copyWithNewType:(int)arg1;
- (id)copyWithNewVisualTypeRange:(struct _NSRange)arg1 head:(unsigned long long)arg2 tail:(unsigned long long)arg3;
- (id)copyWithNewType:(int)arg1 range:(struct _NSRange)arg2;
- (id)copyWithNewType:(int)arg1 smartFieldRange:(struct _NSRange)arg2;
- (id)initWithInfos:(id)arg1;
- (id)initWithInfos:(id)arg1 andContainer:(id)arg2;
@property(readonly, nonatomic) _Bool isEmpty;
- (void)dealloc;
@property(readonly, nonatomic) int canvasSelectionKind;
- (id)initWithType:(int)arg1 range:(struct _NSRange)arg2 styleInsertionBehavior:(int)arg3 caretAffinity:(int)arg4 smartFieldRange:(struct _NSRange)arg5 leadingEdge:(_Bool)arg6 leadingCharIndex:(unsigned long long)arg7 infos:(id)arg8 excludedInfos:(id)arg9 additionalInfos:(id)arg10 container:(id)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPArchivedCanvasSelection : TSPObject <TSKArchivedSelection>
{
    TPCanvasSelection *_selection;
}

@property(retain, nonatomic) TSKSelection *selection; // @synthesize selection=_selection;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPArchivedViewState : TSPObject
{
    struct CGRect _visibleRect;
    TSKSelection *_selection;
    TSPObject<TSKModel> *_selectionModel;
    _Bool _masterDrawablesSelectable;
    NSMutableDictionary *_chartUIState;
    _Bool _rulerVisible;
    _Bool _layoutBordersVisible;
    _Bool _wordCountHUDVisible;
    _Bool _showsComments;
    _Bool _showsPageNavigator;
    _Bool _showsActivitySidebar;
    int _viewScaleMode;
    double _viewScale;
    struct CGRect _windowFrame;
    NSString *_selectedInspectorSwitchSegmentIdentifier;
    _Bool _inspectorHidden;
    int _wordCountHUDType;
    struct CGPoint _wordCountHUDPosition;
    _Bool _showUserDefinedGuides;
}

- (id).cxx_construct;
- (void)captureViewStateWithProvider:(id)arg1;
- (void)readViewStateWithConsumer:(id)arg1;
- (_Bool)showsComments;
- (void)dealloc;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPMarginValueSnapper : NSObject
{
    TSKRulerUnits *_rulerUnits;
    double _visiblePageWidth;
    double _screenScale;
}

- (double)snapMarginValue:(double)arg1;
- (void)dealloc;
- (id)initWithRulerUnits:(id)arg1 visiblePageSize:(struct CGSize)arg2 screenScale:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface TPPlaceholderInfo : TSWPShapeInfo
{
}

- (id)initFromUnarchiver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPDocumentSettings : TSPObject
{
    _Bool _hasBody;
    _Bool _hasHeaders;
    _Bool _hasFooters;
    _Bool _qlPreview;
    _Bool _copyMovies;
    _Bool _copyAssets;
    _Bool _placeholderAuthoring;
    _Bool _sectionAuthoring;
    _Bool _linksEnabled;
    _Bool _hyphenation;
    _Bool _ligatures;
    _Bool _tocLinksEnabled;
    _Bool _showCTMarkup;
    _Bool _showCTDeletions;
    int _ctBubblesVisibility;
    _Bool _changeBarsVisible;
    _Bool _formatChangesVisible;
    _Bool _annotationsVisible;
    _Bool _documentIsRTL;
    int _footnoteKind;
    int _footnoteFormat;
    int _footnoteNumbering;
    long long _footnoteGap;
    NSString *_decimalTab;
    NSString *_language;
    NSString *_hyphenationLanguage;
    NSString *_creationLocale;
    NSString *_originalTemplate;
    NSString *_creationDate;
    NSString *_bibliographyFormat;
}

@property(nonatomic) int ctBubblesVisibility; // @synthesize ctBubblesVisibility=_ctBubblesVisibility;
- (id)stringWithCurrentDate;
- (void)resetForNewDocumentFromTemplate:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) int basicFootnoteFormat;
@property(copy, nonatomic) NSString *bibliographyFormat;
@property(copy, nonatomic) NSString *creationDate;
@property(copy, nonatomic) NSString *originalTemplate;
@property(copy, nonatomic) NSString *creationLocale;
@property(copy, nonatomic) NSString *hyphenationLanguage;
@property(copy, nonatomic) NSString *language;
@property(copy, nonatomic) NSString *decimalTab;
@property(nonatomic) long long footnoteGap;
@property(nonatomic) int footnoteNumbering;
@property(nonatomic) int footnoteFormat;
@property(nonatomic) int footnoteKind;
@property(nonatomic) _Bool sectionAuthoring;
@property(nonatomic) _Bool documentIsRTL;
@property(nonatomic) _Bool annotationsVisible;
@property(nonatomic) _Bool formatChangesVisible;
@property(nonatomic) _Bool changeBarsVisible;
- (void)setCTBubblesVisibility:(int)arg1;
@property(nonatomic) _Bool showCTDeletions;
@property(nonatomic) _Bool showCTMarkup;
@property(nonatomic) _Bool tocLinksEnabled;
@property(nonatomic) _Bool useLigatures;
@property(nonatomic) _Bool autoHyphenation;
@property(nonatomic) _Bool hyperlinksEnabled;
@property(nonatomic) _Bool placeholderAuthoring;
@property(nonatomic) _Bool copyTemplateAssets;
@property(nonatomic) _Bool copyMovies;
@property(nonatomic) _Bool quickLookPreview;
@property(nonatomic) _Bool hasFooters;
@property(nonatomic) _Bool hasHeaders;
@property(nonatomic) _Bool hasBody;

@end

__attribute__((visibility("hidden")))
@interface TPDrawablesZOrder : TSPObject
{
    NSMutableArray *_drawables;
}

- (id)orderedDrawables:(id)arg1;
- (void)swapDrawableAtZOrder:(unsigned long long)arg1 withDrawableAtZOrder:(unsigned long long)arg2;
- (void)moveDrawables:(id)arg1 toZOrder:(unsigned long long)arg2;
- (void)moveDrawable:(id)arg1 toZOrder:(unsigned long long)arg2;
- (void)moveDrawableAtZOrder:(unsigned long long)arg1 toZOrder:(unsigned long long)arg2;
- (void)removeDrawable:(id)arg1;
- (void)removeDrawableAtZOrder:(unsigned long long)arg1;
- (unsigned long long)insertDrawable:(id)arg1 atZOrder:(unsigned long long)arg2;
- (unsigned long long)addDrawable:(id)arg1;
- (unsigned long long)zOrderOfDrawable:(id)arg1;
- (id)drawableAtZOrder:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long drawableCount;
- (void)saveToArchiver:(id)arg1;
- (id)initFromUnarchiver:(id)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)drawableEnumerator;

@end

__attribute__((visibility("hidden")))
@interface TPTextImporter : NSObject <TSKImporter>
{
    NSURL *mURL;
    TSUProgressContext *mProgressContext;
}

@property(retain) TSUProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
- (_Bool)stylesheetUpdatesRequired;
- (void)quit;
- (void)cancel;
- (_Bool)importStartsWithThemeOnly;
- (id)initialTemplateName;
- (_Bool)importToDocumentRoot:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (void)setURL:(id)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPageHint : NSObject <TSWPOffscreenColumn>
{
    int _pageKind;
    vector_b76bc591 _hints;
    struct _NSRange _footnoteAutoNumberRange;
    struct _NSRange _footnoteLayoutRange;
    id <TSDHint> _firstChildHint;
    id <TSDHint> _lastChildHint;
    NSDictionary *_anchoredAttachmentPositions;
    struct TSWPTopicNumberHints _topicNumbers;
}

@property(nonatomic) struct TSWPTopicNumberHints *topicNumbers; // @synthesize topicNumbers=_topicNumbers;
@property(retain, nonatomic) id <TSDHint> lastChildHint; // @synthesize lastChildHint=_lastChildHint;
@property(retain, nonatomic) id <TSDHint> firstChildHint; // @synthesize firstChildHint=_firstChildHint;
@property(retain, nonatomic) NSDictionary *anchoredAttachmentPositions; // @synthesize anchoredAttachmentPositions=_anchoredAttachmentPositions;
@property(nonatomic) struct _NSRange footnoteLayoutRange; // @synthesize footnoteLayoutRange=_footnoteLayoutRange;
@property(nonatomic) struct _NSRange footnoteAutoNumberRange; // @synthesize footnoteAutoNumberRange=_footnoteAutoNumberRange;
@property(nonatomic) int pageKind; // @synthesize pageKind=_pageKind;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)saveToArchive:(struct PageHintArchive *)arg1 archiver:(id)arg2 context:(id)arg3;
- (id)initWithArchive:(const struct PageHintArchive *)arg1 unarchiver:(id)arg2;
- (void)trimToCharIndex:(unsigned long long)arg1 inTarget:(id)arg2 removeFootnoteLayoutCount:(unsigned long long)arg3 removeAutoNumberFootnoteCount:(unsigned long long)arg4;
@property(readonly, nonatomic) unsigned long long nextWidowPullsDownFromCharIndex;
@property(readonly, nonatomic) struct _NSRange anchoredRange;
@property(readonly, nonatomic) unsigned long long startAnchoredCharIndex;
@property(readonly, nonatomic) struct _NSRange range;
@property(readonly, nonatomic) unsigned long long startCharIndex;
- (_Bool)syncsWithEndOfPageHint:(id)arg1 storage:(id)arg2;
- (void)offsetStartCharIndexBy:(long long)arg1 charIndex:(unsigned long long)arg2;
- (vector_b76bc591)hints;
- (CDStruct_6026ced1 *)lastHint;
- (CDStruct_6026ced1 *)firstHint;
- (id)lastColumn;
- (id)firstColumn;
- (void)setHints:(const vector_b76bc591 *)arg1;
- (id)copyForArchiving;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPOffscreenLayoutController : TSDLayoutController
{
}

- (_Bool)isLayoutOffscreen;

@end

__attribute__((visibility("hidden")))
@interface TPHeaderFooterFragmentEnumerator : NSEnumerator
{
    int _fragmentIndex;
    int _headerFooterType;
    TPPageMaster *_pageMaster;
}

@property(nonatomic) int headerFooterType; // @synthesize headerFooterType=_headerFooterType;
@property(nonatomic) int fragmentIndex; // @synthesize fragmentIndex=_fragmentIndex;
@property(retain, nonatomic) TPPageMaster *pageMaster; // @synthesize pageMaster=_pageMaster;
- (void)p_incrementHeaderFooterType;
- (void)p_incrementFragmentIndex;
- (void)dealloc;
- (id)nextObject;
- (id)initWithPageMaster:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPPageMaster : TSPObject <TSWPHeaderFooterProvider, TPMasterDrawableProvider, TSKDocumentObject, TSKModel, TSPCopying>
{
    TPDocumentRoot *_documentRoot;
    TPSection *_section;
    TSWPStorage *_headerFooters[2][3];
    NSMutableArray *_masterDrawables;
}

@property(nonatomic) TPSection *section; // @synthesize section=_section;
@property(readonly, copy) NSString *description;
- (void)p_makeMasterDrawablesPerformSelector:(SEL)arg1 withStylesheet:(id)arg2 withMapper:(id)arg3;
- (void)p_makeMasterDrawablesPerformSelector:(SEL)arg1 documentRoot:(id)arg2;
- (void)p_makeMasterDrawablesPerformSelector:(SEL)arg1 documentRoot:(id)arg2 context:(id)arg3;
- (void)p_makeHeadersFootersPerformSelector:(SEL)arg1 documentRoot:(id)arg2;
- (void)p_makeHeadersFootersPerformSelector:(SEL)arg1 documentRoot:(id)arg2 context:(id)arg3;
- (void)p_makeHeadersFootersPerformSelector:(SEL)arg1 withStylesheet:(id)arg2 withMapper:(id)arg3;
- (void)i_createHeadersFooters:(int)arg1 stylesheet:(id)arg2 paragraphStyle:(id)arg3 context:(id)arg4 mayAlreadyExist:(_Bool)arg5;
- (int)p_headerFragmentIndexForTabIndex:(unsigned int)arg1 paragraphStyle:(id)arg2 bodyWidth:(double)arg3;
- (void)p_splitHeaderFooterByTabs:(id)arg1 storages:(id *)arg2 dolcContext:(id)arg3 bodyWidth:(double)arg4;
- (void)p_filterParagraphStylesOnHeaderFooterStorage:(id)arg1 stylesheet:(id)arg2;
- (id)p_headerAndFooterStorages;
- (void)i_copyHeadersAndFootersFrom:(id)arg1 dolcContext:(id)arg2;
- (void)i_importHeaderFooter:(id)arg1 headerType:(int)arg2 dolcContext:(id)arg3 splitHeaders:(_Bool)arg4;
- (void)i_splitHeaderFooter:(id)arg1 storages:(id *)arg2 dolcContext:(id)arg3 bodyWidth:(double)arg4;
- (void)i_ensureHeaderFooterStoragesExistWithStylesheet:(id)arg1 paragraphStyle:(id)arg2 context:(id)arg3;
- (void)i_addMasterDrawable:(id)arg1;
- (void)i_setHeaderFooter:(int)arg1 storage:(id)arg2 fragmentIndex:(int)arg3;
- (id)childEnumerator;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (void)setParentStorage:(id)arg1;
- (id)headerFooterFragmentEnumerator;
- (int)headerFragmentIndexForModel:(id)arg1;
- (int)headerFooterTypeForModel:(id)arg1;
- (_Bool)isHeaderFooterEmpty:(int)arg1 fragmentAtIndex:(int)arg2;
- (_Bool)isHeaderFooterEmpty:(int)arg1;
- (id)headerFooter:(int)arg1 fragmentAtIndex:(int)arg2;
- (_Bool)usesSingleHeaderFooter;
- (double)bodyWidth;
- (id)documentRoot;
- (double)footerHeight;
- (double)headerHeight;
- (double)pHeightOfHeaderFooter:(int)arg1;
- (void)removeMasterDrawable:(id)arg1 suppressDOLC:(_Bool)arg2;
- (void)addMasterDrawables:(id)arg1 atIndex:(unsigned long long)arg2 insertContext:(id)arg3 suppressDOLC:(_Bool)arg4;
- (void)addMasterDrawable:(id)arg1 atIndex:(unsigned long long)arg2 insertContext:(id)arg3 suppressDOLC:(_Bool)arg4;
- (unsigned long long)indexOfMasterDrawable:(id)arg1;
- (id)masterDrawablesSortedByZOrder:(id)arg1;
@property(readonly, nonatomic) NSArray *masterDrawables;
- (unsigned long long)countOfMasterDrawables;
- (_Bool)ownsModelObject:(id)arg1;
- (id)copyWithContext:(id)arg1;
- (void)saveToArchiver:(id)arg1;
- (void)dealloc;
- (id)initFromUnarchiver:(id)arg1;
- (void)i_setDocumentRoot:(id)arg1;
- (id)initWithSection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPHeaderFragmentImportHelper : NSObject
{
    id *_fragments;
    TSPObjectContext *_storageContext;
    TSPObjectContext *_objectsContext;
    NSCharacterSet *_whitespaceCharacterSet;
    NSCharacterSet *_nonWhitespaceCharacterSet;
}

- (void)processFragmentsForSpaceFormatting;
- (void)p_splitStorageInThree:(int)arg1 withRanges:(struct _NSRange [2])arg2;
- (void)p_splitStorageInTwo:(int)arg1 withRanges:(struct _NSRange [2])arg2 firstTarget:(int)arg3 secondTarget:(int)arg4;
- (unsigned long long)countOfWhitespaceRunsInString:(id)arg1 ranges:(struct _NSRange [2])arg2;
- (_Bool)p_storageIsEffectivelyEmpty:(id)arg1;
- (void)dealloc;
- (id)initWithFragments:(id *)arg1 storageContext:(id)arg2 objectsContext:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TPFootnoteContainerLayout : TSDLayout <TSWPColumnMetrics, TSWPLayoutParent, TSWPFootnoteMarkProvider>
{
    double _width;
    double _maxFootnoteHeight;
    double _footnoteSpacing;
    _Bool _includeFootnoteSeparatorLine;
    id <TSWPFootnoteMarkProvider> _footnoteMarkProvider;
}

@property(nonatomic) _Bool includeFootnoteSeparatorLine; // @synthesize includeFootnoteSeparatorLine=_includeFootnoteSeparatorLine;
- (id)markStringForFootnoteReferenceStorage:(id)arg1;
- (_Bool)textIsVertical;
@property(readonly, nonatomic) _Bool shrinkTextToFit;
@property(readonly, nonatomic) _Bool alwaysStartsNewTarget;
- (double)positionForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2 target:(id)arg3 outWidth:(double *)arg4 outGap:(double *)arg5;
- (double)gapForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
- (double)widthForColumnIndex:(unsigned long long)arg1 bodyWidth:(double)arg2;
@property(readonly, nonatomic) _Bool columnsAreLeftToRight;
@property(readonly, nonatomic) unsigned long long columnCount;
@property(readonly, nonatomic) TSWPPadding *layoutMargins;
- (struct CGSize)adjustedInsetsForTarget:(id)arg1;
- (double)maxAutoGrowHeightForTextLayout:(id)arg1;
- (Class)repClassForTextLayout:(id)arg1;
- (id)dependentsOfTextLayout:(id)arg1;
- (struct CGRect)autosizedFrameForTextLayout:(id)arg1 textSize:(struct CGSize)arg2;
- (struct CGRect)nonAutosizedFrameForTextLayout:(id)arg1;
- (void)invalidateForAutosizingTextLayout:(id)arg1;
- (int)verticalAlignmentForTextLayout:(id)arg1;
- (unsigned int)autosizeFlagsForTextLayout:(id)arg1;
- (_Bool)shouldProvideSizingGuides;
- (Class)repClassOverride;
- (id)computeLayoutGeometry;
- (void)validate;
@property(readonly, nonatomic) struct CGRect footnoteSeparatorLineFrame;
@property(readonly, nonatomic) double height;
@property(readonly, nonatomic) _Bool isEmpty;
- (void)trimFootnoteLayoutsFromIndex:(unsigned long long)arg1;
- (void)setFootnoteSpacing:(long long)arg1;
- (void)setWidth:(double)arg1;
- (void)removeAllFootnoteLayouts;
- (void)removeFootnoteLayoutWithInfo:(id)arg1;
- (void)removeFootnoteLayout:(id)arg1;
- (void)addFootnoteLayout:(id)arg1;
- (id)initWithFootnoteMarkProvider:(id)arg1 width:(double)arg2 maxFootnoteHeight:(double)arg3 footnoteSpacing:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) double textScaleFactor;

@end

__attribute__((visibility("hidden")))
@interface TPFootnoteContainerRep : TSDContainerRep
{
}

- (_Bool)p_hasContent;
- (_Bool)handleSingleTapAtPoint:(struct CGPoint)arg1;
- (id)repForHandleSingleTap;
- (_Bool)canBeginEditingChildRepOnDoubleTap:(id)arg1;
- (void)didUpdateLayer:(id)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (_Bool)directlyManagesLayerContent;

@end

__attribute__((visibility("hidden")))
@interface TPFootnoteLayoutController : NSObject
{
    TPDocumentRoot *_documentRoot;
    _Bool _bumpedDocumentEndnotesForPageBreak;
}

@property(readonly, nonatomic) id <TSWPFootnoteMarkProvider> footnoteMarkProvider; // @synthesize footnoteMarkProvider=_documentRoot;
- (id)p_footnoteReferenceStoragesInFootnoteIndexRange:(struct _NSRange)arg1;
- (id)p_layoutForFootnoteReferenceStorage:(id)arg1;
- (unsigned long long)p_layoutFootnotesInRange:(struct _NSRange)arg1 intoFootnoteContainer:(id)arg2 maxHeight:(double)arg3 measure:(_Bool)arg4 inflating:(_Bool)arg5;
- (struct _NSRange)footnoteLayoutRangeForPageCharRange:(struct _NSRange)arg1;
- (struct _NSRange)endnoteRangeForSectionCharRange:(struct _NSRange)arg1 isLastSection:(_Bool)arg2;
- (void)inflateFootnotesInRange:(struct _NSRange)arg1 intoFootnoteContainer:(id)arg2;
- (struct _NSRange)layoutFootnotesFromIndex:(unsigned long long)arg1 intoFootnoteContainer:(id)arg2 maxHeight:(double)arg3 pageCharRange:(struct _NSRange)arg4 sectionCharRange:(struct _NSRange)arg5 isLastSection:(_Bool)arg6;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPFootnoteHeightMeasurer : NSObject <TSWPFootnoteHeightMeasurer>
{
    TPFootnoteContainerLayout *_footnoteContainerLayout;
    TSDLayoutController *_layoutController;
    TSULRUCache *_footnoteLayoutCache;
}

- (void)p_clearFootnoteLayoutCache;
- (void)setFootnoteSpacing:(long long)arg1;
- (void)setContainerWidth:(double)arg1;
- (double)footnoteHeight;
- (void)removeAllFootnoteReferenceStorages;
- (void)removeFootnoteReferenceStorage:(id)arg1;
- (void)addFootnoteReferenceStorage:(id)arg1;
- (void)dealloc;
- (id)initWithFootnoteMarkProvider:(id)arg1 maxFootnoteWidth:(double)arg2 maxFootnoteHeight:(double)arg3 footnoteSpacing:(double)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPPageLayoutNotifier : NSObject <TPPageControllerLayoutObserver>
{
    TPPageController *_pageController;
}

- (void)pageController:(id)arg1 didLayoutPageAtIndex:(unsigned long long)arg2 sectionIndex:(unsigned long long)arg3 syncing:(_Bool)arg4;
- (void)teardown;
- (void)dealloc;
- (id)initWithPageController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPSectionHint : NSObject
{
    NSMutableArray *_pageHints;
    unsigned long long _documentStartPageIndex;
}

@property(nonatomic) unsigned long long documentStartPageIndex; // @synthesize documentStartPageIndex=_documentStartPageIndex;
@property(readonly, nonatomic) NSArray *pageHints; // @synthesize pageHints=_pageHints;
- (void)saveToArchive:(struct SectionHintArchive *)arg1 archiver:(id)arg2 context:(id)arg3 shouldArchiveHintBlock:(CDUnknownBlockType)arg4;
- (id)initWithArchive:(const struct SectionHintArchive *)arg1 unarchiver:(id)arg2;
- (void)setPageHints:(id)arg1;
- (_Bool)containsDocumentPageIndex:(unsigned long long)arg1;
- (_Bool)hasPageHintOfKind:(int)arg1 beforePageIndex:(unsigned long long)arg2;
- (_Bool)hasPageHintOfKind:(int)arg1 atPageIndex:(unsigned long long)arg2;
- (void)trimPageHintsFromPageIndex:(unsigned long long)arg1;
- (id)pageHintForPageIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) struct _NSRange documentPageRange;
@property(readonly, nonatomic) unsigned long long lastPageIndex;
@property(readonly, nonatomic) unsigned long long pageCountWithoutFillerPage;
@property(readonly, nonatomic) unsigned long long pageCount;
- (id)copyForArchiving;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TPPageIndexPath : NSObject <NSCopying>
{
    unsigned long long _sectionIndex;
    unsigned long long _pageIndex;
}

@property(nonatomic) unsigned long long pageIndex; // @synthesize pageIndex=_pageIndex;
@property(nonatomic) unsigned long long sectionIndex; // @synthesize sectionIndex=_sectionIndex;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithSectionIndex:(unsigned long long)arg1 pageIndex:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TPPageLayoutState : NSObject
{
    TPPageIndexPath *_pageIndexPath;
    unsigned long long _documentPageIndex;
    TSWPStorage *_bodyStorage;
    void *_bodyLayoutState;
    unsigned long long _bodyCharIndex;
    unsigned long long _footnoteIndex;
    _Bool _doingLayout;
    _Bool _onLastSection;
    unsigned long long _lastLaidOutSectionIndex;
}

@property(readonly, nonatomic) unsigned long long lastLaidOutSectionIndex; // @synthesize lastLaidOutSectionIndex=_lastLaidOutSectionIndex;
@property(nonatomic) _Bool doingLayout; // @synthesize doingLayout=_doingLayout;
@property(nonatomic) unsigned long long footnoteIndex; // @synthesize footnoteIndex=_footnoteIndex;
@property(nonatomic) unsigned long long bodyCharIndex; // @synthesize bodyCharIndex=_bodyCharIndex;
@property(nonatomic) void *bodyLayoutState; // @synthesize bodyLayoutState=_bodyLayoutState;
@property(readonly, nonatomic) unsigned long long documentPageIndex; // @synthesize documentPageIndex=_documentPageIndex;
@property(readonly, nonatomic) TPPageIndexPath *pageIndexPath; // @synthesize pageIndexPath=_pageIndexPath;
- (void)setDocumentPageIndex:(unsigned long long)arg1;
- (void)setPageIndex:(unsigned long long)arg1;
- (void)setSectionIndex:(unsigned long long)arg1;
- (void)advanceSectionIndex;
- (void)advancePageIndex;
- (void)backUpPageIndex;
- (void)restartLayoutFromFirstPage;
- (void)restartLayoutFromPageIndexPath:(id)arg1 documentPageIndex:(unsigned long long)arg2;
- (_Bool)isLayoutCompleteUpToDocumentPageIndex:(unsigned long long)arg1;
- (_Bool)isLayoutCompleteThroughDocumentPageIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool isLayoutComplete;
@property(readonly, nonatomic) _Bool onLastSection;
@property(readonly, nonatomic) struct _NSRange sectionCharRange;
@property(readonly, nonatomic) TPSection *section;
@property(readonly, nonatomic) unsigned long long lastLaidOutDocumentPageIndex;
@property(readonly, nonatomic) unsigned long long pageIndex;
@property(readonly, nonatomic) unsigned long long sectionIndex;
- (void)dealloc;
- (id)init;
- (id)initWithBodyStorage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPFillerPageGenerator : NSObject <TPPageGenerator>
{
}

- (void)createOrUpdatePageHintInSectionHint:(id)arg1 withState:(id)arg2;
- (_Bool)wantsPageInSectionHint:(id)arg1 withState:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPTextPageGenerator : NSObject <TPPageGenerator>
{
}

- (void)createOrUpdatePageHintInSectionHint:(id)arg1 withState:(id)arg2;
- (_Bool)wantsPageInSectionHint:(id)arg1 withState:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPEndnotePageGenerator : NSObject <TPPageGenerator>
{
    TPFootnoteLayoutController *_footnoteLayoutController;
}

- (void)createOrUpdatePageHintInSectionHint:(id)arg1 withState:(id)arg2;
- (_Bool)wantsPageInSectionHint:(id)arg1 withState:(id)arg2;
- (id)init;
- (id)initWithFootnoteLayoutController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPOrphanPageGenerator : NSObject <TPPageGenerator>
{
    TPDocumentRoot *_documentRoot;
}

- (void)createOrUpdatePageHintInSectionHint:(id)arg1 withState:(id)arg2;
- (_Bool)wantsPageInSectionHint:(id)arg1 withState:(id)arg2;
- (id)init;
- (id)initWithDocumentRoot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPInflatableFootnoteContainerLayout : TPFootnoteContainerLayout
{
    _Bool _inflated;
}

- (id)computeLayoutGeometry;
- (void)validate;
- (void)setNeedsInflation;

@end

__attribute__((visibility("hidden")))
@interface TPFootnoteRep : TSWPRep
{
}

@end

__attribute__((visibility("hidden")))
@interface TPDocumentStatistics : NSObject <NSCopying>
{
    _Bool _isAccurate;
    TSWPTextStatistics *_textStatistics;
    unsigned long long _pageCount;
}

@property(nonatomic) _Bool isAccurate; // @synthesize isAccurate=_isAccurate;
@property(nonatomic) unsigned long long pageCount; // @synthesize pageCount=_pageCount;
@property(retain, nonatomic) TSWPTextStatistics *textStatistics; // @synthesize textStatistics=_textStatistics;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (void)resetStatistics;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithTextStatistics:(id)arg1 pageCount:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TPBaseCompatibilityDelegate : NSObject <TSKCompatibilityDelegate>
{
}

- (id)unsupportedExportMessageStringForType:(id)arg1;
- (id)backwardsCompatibleTypeForType:(id)arg1;
- (_Bool)isExportSupportedForType:(id)arg1 documentRoot:(id)arg2;
- (id)nestedDocumentFilename;
- (id)needNewerVersionIndexXmlContentString;
- (id)indexXmlFilename;
- (_Bool)isSageDocumentType:(id)arg1;
- (_Bool)isTCMessageExceptionErrorDomain:(id)arg1;
- (id)exportableTypes;
- (Class)exportOptionsControllerClass;
- (Class)exporterClassForType:(id)arg1 options:(id)arg2;
- (Class)importerClassForType:(id)arg1;
- (id)epubExportCategories;
- (id)newExportableDocumentTypesForFlag:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPGilliganCompatibilityDelegate : TPBaseCompatibilityDelegate
{
}

- (id)exportableTypes;
- (Class)exporterClassForType:(id)arg1 options:(id)arg2;
- (Class)importerClassForType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPTextExporter : NSObject <TSKExporter>
{
    TPDocumentRoot *mDocumentRoot;
    _Bool mIsCancelled;
    TSUProgressContext *mProgressContext;
}

@property(retain) TSUProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
- (_Bool)exportToURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (id)initWithDocumentRoot:(id)arg1;
- (void)dealloc;
- (void)quit;
- (void)cancel;
- (_Bool)isCancelled;
- (void)setup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPRenderingExporter : TSARenderingExporter
{
    TPPdfHyperlinkController *mHyperlinkController;
    unsigned long long mPageIndex;
    unsigned long long mPageCount;
}

- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)initWithDocumentRoot:(id)arg1;
- (_Bool)hasMoreThanOnePageToPrint;
- (unsigned long long)pageCount;
- (double)progressForCurrentPage;
- (double)totalProgess;
- (_Bool)incrementPage;
- (_Bool)preparePage:(unsigned long long)arg1;
- (id)currentInfos;
- (struct CGRect)unscaledClipRect;
- (struct CGRect)boundsRect;

@end

__attribute__((visibility("hidden")))
@interface TPPreviewExporter : TPRenderingExporter <TSKImageExporter>
{
}

@property(nonatomic) _Bool scaleToFit;
@property(nonatomic) unsigned long long height;
@property(nonatomic) unsigned long long width;
- (id)p_renderingExporterDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TPBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TPPdfHyperlinkController : TSAPdfHyperlinkController
{
    struct CGRect mCanvasRect;
}

- (id).cxx_construct;
- (void)setCanvasRect:(struct CGRect)arg1;
- (struct CGRect)canvasRect;
- (id)initWithDocumentRoot:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPFootnotePropertyStrings : NSObject
{
}

+ (id)stringForFootnoteNumbering:(int)arg1;
+ (id)stringForFootnoteFormat:(int)arg1;
+ (id)stringForFootnoteKind:(int)arg1;
+ (id)titleForFootnoteNumbering;
+ (id)titleForFootnoteFormat;
+ (id)titleForFootnoteKind;
+ (id)insertStringForFootnoteKind:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface TPShapeTextWrapController : TPTextWrapController
{
}

- (unsigned int)splitLine:(struct CGRect)arg1 lineSegmentRects:(struct CGRect [128])arg2 wrappableAttachments:(id)arg3 ignoreFloatingGraphics:(_Bool)arg4 floatingCausedWrap:(_Bool *)arg5 skipHint:(double *)arg6 userInfo:(id)arg7;
- (id)beginWrappingToColumn:(id)arg1 target:(id)arg2 hasWrapables:(_Bool *)arg3;

@end

__attribute__((visibility("hidden")))
@interface TPTextWrapCookie : NSObject
{
    TSDLayout<TSWPLayoutTarget> *_target;
    NSMutableArray *_floatingWrappables;
    TSUPointerKeyDictionary *_wrapPathInverseTransformInRootDictionary;
    TSWPColumn *_column;
    TSDWrapPolygon *_interiorWrapPolygon;
    struct CGAffineTransform _targetInverseTransformInRoot;
}

+ (id)textWrapCookieForColumn:(id)arg1 targetLayout:(id)arg2;
@property(readonly, nonatomic) struct CGAffineTransform targetInverseTransformInRoot; // @synthesize targetInverseTransformInRoot=_targetInverseTransformInRoot;
@property(retain, nonatomic) TSDWrapPolygon *interiorWrapPolygon; // @synthesize interiorWrapPolygon=_interiorWrapPolygon;
@property(readonly, retain, nonatomic) NSArray *floatingWrappables; // @synthesize floatingWrappables=_floatingWrappables;
@property(retain, nonatomic) TSWPColumn *column; // @synthesize column=_column;
- (id)transformedWrapPolygonForWrappable:(id)arg1 canvasSpaceToWrapSpaceTransform:(struct CGAffineTransform)arg2;
- (void)addFloatingWrappable:(id)arg1;
@property(nonatomic) TSDLayout<TSWPLayoutTarget> *target; // @dynamic target;
- (void)dealloc;
- (id)initWithColumn:(id)arg1 targetLayout:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TPQuicklookAppDelegate : TSAServerApplicationDelegate
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TPQuicklookCompatibilityDelegate : TPBaseCompatibilityDelegate
{
}

@end

__attribute__((visibility("hidden")))
@interface TPPageLayoutPageGenerator : NSObject <TPPageGenerator>
{
}

- (void)createOrUpdatePageHintInSectionHint:(id)arg1 withState:(id)arg2;
- (_Bool)wantsPageInSectionHint:(id)arg1 withState:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface TQQuicklook : NSObject
{
    NSString *mPath;
    TSACirrusDocument *mDocument;
    TSABaseApplicationDelegate *mBaseAppDelegate;
    TSUTemporaryDirectory *mTemporaryDirectory;
    NSString *mPassphrase;
    id <TSKRenderingExporter> mExporter;
}

+ (void)unloadAssetColorMap;
+ (void)loadAssetColorMap;
+ (id)tsuColorFromColorArray:(id)arg1;
- (id)sheetNameForPageNumber:(unsigned long long)arg1 isForm:(_Bool *)arg2;
- (id)newPDFForPageNumber:(unsigned long long)arg1;
- (id)newPDFPreviewAndClose;
- (id)thumbnail;
- (unsigned long long)pageCount;
- (void)close;
- (struct __CFString *)getIdentifierForApp:(id)arg1;
- (_Bool)load;
- (void)dealloc;
- (id)initWithPath:(id)arg1 passphrase:(id)arg2;
- (_Bool)isSFFDocument;
- (_Bool)writePreviewToOutput:(id)arg1 pageNumber:(unsigned long long)arg2;
- (Class)appDelegateClass;

@end

@interface NSMutableString (GQDTNumberFormatUtility)
- (void)insertCharacter:(unsigned short)arg1 atIndex:(unsigned short)arg2;
@end

@interface NSString (GQCustomNumberFormatAdditions)
+ (id)customNumberFormatDecimalFormatStringWithDigits:(unsigned int)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;
+ (id)customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned int)arg1 digitString:(id)arg2;
+ (id)customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned int)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerFormatStringWithDigits:(unsigned int)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned int)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned int)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;
- (unsigned short)spaceCharacterInCustomNumberFormatSpaceToken;
- (unsigned short)scaleCharacterInCustomNumberFormatScaleToken;
- (id)formatStringFromCustomNumberFormatScaleToken;
- (int)fractionAccuracyFromCustomNumberFormatFractionToken;
- (id)currencyCodeFromCustomNumberFormatCurrencyToken;
- (id)digitPlaceholderStringInDigitToken;
- (unsigned int)numberOfDigitsInCustomNumberFormatDecimalToken;
- (id)stringByInsertingGroupingSeparators;
- (_Bool)customFormatIntegerTokenUsesSeparator;
- (unsigned int)numberOfDigitsInCustomNumberFormatIntegerToken;
- (_Bool)isSpecialCustomNumberFormatTokenOfType:(int)arg1;
- (_Bool)isSpecialCustomNumberFormatToken;
@end

@interface NSAffineTransform (GQUAdditions)
- (struct CGAffineTransform)cgAffineTransform;
- (id)initWithCGAffineTransform:(struct CGAffineTransform)arg1;
- (float)angle;
- (_Bool)isAxisAligned;
- (void)shearXBy:(float)arg1 yBy:(float)arg2;
- (struct CGRect)boundsOfTransformedRect:(struct CGRect)arg1;
- (void)transformRect:(struct CGRect)arg1 upperLeft:(struct CGPoint *)arg2 lowerLeft:(struct CGPoint *)arg3 lowerRight:(struct CGPoint *)arg4 upperRight:(struct CGPoint *)arg5;
- (_Bool)differOnlyByTranslation:(id)arg1;
- (_Bool)differsFrom:(id)arg1;
- (id)description;
@end

@interface NSString (GQFormatStringUtilities)
+ (id)numberSymbols;
- (id)prefixOfNumberFormatSubpattern;
- (int)indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;
- (id)suffixOfNumberFormatSubpattern;
- (int)indexOfLastNonSuffixCharacterInNumberFormatSubpattern;
- (id)numberPortionOfNumberFormatSubpattern;
- (id)negativeSubpatternOfNumberFormatPattern;
- (id)positiveSubpatternOfNumberFormatPattern;
- (int)indexOfNumberFormatSubpatternSeparator;
- (id)stringByRemovingEscapedCharactersFromNumberFormatPattern;
- (id)createRangesOfEscapedCharactersInNumberFormatPattern;
- (_Bool)isNumberFormatPattern;
- (id)createStringBySubstitutingCharactersCFNumberFormatterDoesntUnderstand;
@end

@interface NSURL (TSUAdditions)
- (void)tsu_performSecurityScopedResourceAccessAsynchronouslyUsingBlock:(CDUnknownBlockType)arg1;
- (void)tsu_performSecurityScopedResourceAccessUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSError (TSUIO)
+ (id)tsu_IOWriteErrorWithErrno:(int)arg1;
+ (id)tsu_IOReadErrorWithErrno:(int)arg1;
+ (id)tsu_IOErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)tsu_IOErrorWithCode:(long long)arg1;
- (int)tsu_IOErrorNumber;
@end

@interface NSSet (TSUAdditions)
+ (id)intersectionOfSets:(id)arg1;
+ (_Bool)set:(id)arg1 isEqualToSet:(id)arg2;
- (_Bool)containsObjectIdenticalTo:(id)arg1;
@end

@interface NSPropertyListSerialization (TSUtility)
+ (id)tsu_localizedPropertyListWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (void)tsu_processLocalizedPropertyList:(id)arg1;
+ (id)tsu_propertyListWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
@end

@interface NSURL (DownloadItem) <TSUDownloadItem>
+ (void)downloadManager:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
+ (void)downloadManager:(id)arg1 task:(id)arg2 didFinishDownloadingToURL:(id)arg3;
+ (_Bool)canHandleDownloadTask:(id)arg1;
@property(readonly, nonatomic) long long totalBytesExpectedToBeDownloaded;
@property(readonly, nonatomic) NSURL *downloadURL;
@property(readonly, nonatomic) NSString *downloadTaskDescription;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) _Bool needsDownload;
@property(readonly) Class superclass;
@end

@interface UIDevice (TSUAdditions)
+ (id)platformString;
@end

@interface NSSet (TSUAdditions)
+ (id)intersectionOfSets:(id)arg1;
+ (_Bool)set:(id)arg1 isEqualToSet:(id)arg2;
- (_Bool)containsObjectIdenticalTo:(id)arg1;
@end

@interface NSMutableString (TSUtilityAdditions)
- (void)appendSeparator:(id)arg1 format:(id)arg2;
- (void)insertCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2;
- (void)appendCharacter:(unsigned short)arg1;
@end

@interface NSString (TSUDateFormatStringUtilities)
- (id)stringByReplacing2DigitYearStringWith4DigitYearString;
- (id)stringByReplacing4DigitYearStringWith2DigitYearString;
@end

@interface NSMutableSet (TSUAdditions)
- (void)addNonNilObject:(id)arg1;
- (void)xorSet:(id)arg1;
@end

@interface NSBundle (TSULocaleAdditions)
- (id)localizedDocumentStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
@end

@interface NSString (TSUNumberFormatStringUtilities)
+ (id)numberSymbols;
- (id)prefixOfNumberFormatSubpattern;
- (unsigned long long)indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;
- (id)suffixOfNumberFormatSubpattern;
- (unsigned long long)indexOfLastNonSuffixCharacterInNumberFormatSubpattern;
- (id)numberPortionOfNumberFormatSubpattern;
- (id)negativeSubpatternOfNumberFormatPattern;
- (id)positiveSubpatternOfNumberFormatPattern;
- (unsigned long long)indexOfNumberFormatSubpatternSeparator;
- (id)stringByRemovingEscapedCharactersFromNumberFormatPattern;
- (id)newRangesOfEscapedCharactersInNumberFormatPattern;
- (_Bool)isNumberFormatPattern;
- (id)newStringBySubstitutingCharactersCFNumberFormatterDoesntUnderstand;
@end

@interface NSString (TSUAdditions)
+ (id)stringByHexEncodingData:(id)arg1;
+ (id)stringWithXMLString:(const char *)arg1;
+ (id)stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;
+ (id)stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)listSeparator;
+ (id)stringByIndentingString:(id)arg1;
+ (id)stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;
+ (id)stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
+ (id)stringWithUUID;
- (id)stringWithoutAttachmentCharacters;
- (id)setOfContainedWordsIncludingPunctuationAndSymbols:(_Bool)arg1;
- (_Bool)containsSubstring:(id)arg1;
- (void)enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (struct _NSRange)range;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
- (id)tolerantStringByAppendingPathExtension:(id)arg1;
- (_Bool)containsOnlyCharactersFromSet:(id)arg1;
- (id)unescapeXML;
- (id)escapeXML;
- (id)stringByMakingFirstCharacterUppercase;
- (id)stringByMakingFirstCharacterLowercase;
- (id)encodeStringBase64;
- (id)stringByTrimmingCharactersInSetFromFront:(id)arg1;
- (id)stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;
- (id)stringWithPathRelativeTo:(id)arg1;
- (id)substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;
- (id)substringWithComposedCharacterSequencesToIndex:(unsigned long long)arg1;
- (id)stringWithRealpath;
- (_Bool)isChildOfPath:(id)arg1;
- (_Bool)isDescendantOfPath:(id)arg1;
- (id)escapeForIcuRegex;
- (unsigned long long)countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;
- (id)stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;
- (id)stringByRemovingCharactersInSet:(id)arg1;
- (id)stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;
- (id)md5Hash;
- (id)stringByFixingBrokenSurrogatePairs;
- (id)stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;
- (id)stringByUniquingPathInsideDirectory:(id)arg1;
- (id)stringByAddingCSVEscapes;
- (id)stringByAppendingSeparator:(id)arg1 format:(id)arg2;
- (id)stringQuotedIfContainsCharacterSet:(id)arg1;
- (id)stringByExpandingTableFormatting;
@end

@interface NSString (EmailAddressAdditions)
- (_Bool)isLegalEmailAddress;
- (id)uncommentedAddressRespectingGroups;
- (id)uncommentedAddress;
@end

@interface NSString (SFUCryptoUtilsAdditions)
- (id)sha256HexHashString;
@end

@interface NSString (TSUVersionComparison)
- (long long)compareToVersionString:(id)arg1;
@end

@interface NSString (TSDKVCKeyPathAdditions)
- (unsigned long long)numberOfKeysInKeyPath;
- (id)lastKey;
- (id)firstKey;
- (id)keyPathByAppendingKey:(id)arg1;
- (id)keyPathByPrependingKey:(id)arg1;
- (id)keyPathByRemovingFirstKey;
- (id)keyPathByRemovingLastKey;
@end

@interface NSException (TSUAdditions)
+ (void)raiseWithError:(id)arg1;
- (id)error;
@end

@interface NSString (TSUDatabaseAdditions)
+ (id)stringWithSqlStatement:(struct sqlite3_stmt *)arg1 columnIndex:(int)arg2;
- (_Bool)bindToSqlStatement:(struct sqlite3_stmt *)arg1 index:(int)arg2 error:(id *)arg3;
- (id)initWithSqlStatement:(struct sqlite3_stmt *)arg1 columnIndex:(int)arg2;
@end

@interface NSError (TSUAdditions)
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4 userInfo:(id)arg5;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4;
+ (id)tsuErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 recoverySuggestion:(id)arg4;
- (_Bool)isCancelError;
- (_Bool)isOutOfSpaceError;
- (id)localizedAlertMessage;
- (id)localizedAlertTitle;
@end

@interface NSObject (TSUAdditions)
+ (_Bool)object:(id)arg1 isEqualToObject:(id)arg2;
+ (_Bool)overridesClassSelector:(SEL)arg1 ofBaseClass:(Class)arg2;
+ (_Bool)overridesSelector:(SEL)arg1 ofBaseClass:(Class)arg2;
- (void)performSelector:(SEL)arg1 withValue:(id)arg2;
@end

@interface NSFileManager (TSUTemporaryDirectoryAdditions)
- (_Bool)grantUserWritePosixPermissionAtPath:(id)arg1 error:(id *)arg2;
@end

@interface NSMutableString (TSUDescription)
- (void)indentBy:(unsigned long long)arg1;
@end

@interface NSArray (TSUAdditions)
+ (id)arrayWithUIntegers:(unsigned long long *)arg1 count:(unsigned long long)arg2;
+ (id)arrayWithInts:(int *)arg1 count:(unsigned long long)arg2;
+ (id)arrayWithCGFloats:(double *)arg1 count:(unsigned long long)arg2;
- (id)uniqueObjects;
- (id)arrayByFlattening;
- (id)arrayByTransformingWithBlock:(CDUnknownBlockType)arg1;
- (id)arrayOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (void)enumerateSnapshotObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)arrayByReversingOrder;
- (id)arrayByAddingNonContainedObjectsFromArray:(id)arg1;
- (id)arrayByRemovingObjectsIdenticalToObjectsInArray:(id)arg1;
- (id)intersectionWithArray:(id)arg1;
- (id)arrayWithObjectsInSet:(id)arg1;
- (id)indexesOfObjects:(id)arg1;
- (unsigned long long)indexOfSmallestObject;
- (id)rangeCheckedObjectAtIndex:(unsigned long long)arg1;
- (id)initWithUIntegers:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)initWithInts:(int *)arg1 count:(unsigned long long)arg2;
- (id)initWithCGFloats:(double *)arg1 count:(unsigned long long)arg2;
@end

@interface NSNumber (TSUAdditions)
+ (id)numberWithCGFloat:(double)arg1;
- (_Bool)isFloatingPointType;
- (double)CGFloatValue;
@end

@interface NSMutableArray (TSUAdditions)
- (void)trimObjectsFromIndex:(unsigned long long)arg1;
- (void)removeObjectsIdenticalToObjectsInArray:(id)arg1;
- (void)addObjectsFromNonNilArray:(id)arg1;
- (void)addNonNilObject:(id)arg1;
- (void)addObjects:(id)arg1;
- (id)pop_tsu;
- (void)push_tsu:(id)arg1;
- (id)dequeue;
- (void)enqueue:(id)arg1;
@end

@interface UIColor (TSUAdditions)
+ (id)tableViewCellDarkBlueTextColor;
+ (id)transparentGrayCheckerboardColor;
+ (id)grayCheckerboardColor;
+ (id)checkerboardColorWithColor:(id)arg1 andColor:(id)arg2 squareSize:(struct CGSize)arg3;
@end

@interface NSDictionary (TSUAdditions)
+ (id)dictionaryByInvertingDictionary:(id)arg1;
- (id)objectOfClass:(Class)arg1 forKey:(id)arg2;
- (_Bool)boolValueForKey:(id)arg1;
@end

@interface NSMutableDictionary (TSUAdditions)
+ (id)dictionaryByInvertingDictionary:(id)arg1;
+ (id)dictionaryByInvertingDictionaryIfPossible:(id)arg1;
- (id)objectForKey:(id)arg1 withDefaultOfClass:(Class)arg2;
- (id)objectForKey:(id)arg1 withDefaultUsingBlock:(CDUnknownBlockType)arg2;
@end

@interface NSIndexSet (TSUAdditions)
+ (id)indexSetWithIndices:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (unsigned long long)tsu_positionOfIndex:(unsigned long long)arg1;
- (unsigned long long)tsu_indexAtPosition:(unsigned long long)arg1;
- (id)indexSetByInsertingIndexes:(id)arg1 inRange:(struct _NSRange)arg2;
- (_Bool)intersectsIndexesInIndexSet:(id)arg1;
@property(readonly, nonatomic) _Bool isSingleContiguousRange;
- (id)indexSetByAddingIndexes:(id)arg1;
- (id)initWithIndices:(unsigned long long *)arg1 count:(unsigned long long)arg2;
@end

@interface NSMutableIndexSet (TSUAdditions)
- (void)intersectionWithIndexSet:(id)arg1;
- (void)moveIndexesInRange:(struct _NSRange)arg1 toOffset:(unsigned long long)arg2;
@end

@interface UIView (TSUViewAdditions)
- (void)addBorderWithColor:(id)arg1;
@end

@interface AVAsset (TSUAdditions)
+ (id)keyPathsForValuesAffectingNaturalSizeWithPreferredTransforms;
@property(readonly, nonatomic) struct CGSize naturalSizeWithPreferredTransforms;
@end

@interface NSString (TSUCustomFormatTokenizerAdditions)
+ (id)customNumberFormatDecimalFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;
+ (id)customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;
- (unsigned short)spaceCharacterInCustomNumberFormatSpaceToken;
- (unsigned short)scaleCharacterInCustomNumberFormatScaleToken;
- (id)formatStringFromCustomNumberFormatScaleToken;
- (int)fractionAccuracyFromCustomNumberFormatFractionToken;
- (id)currencyCodeFromCustomNumberFormatCurrencyToken;
- (id)digitPlaceholderStringInDigitToken;
- (unsigned long long)numberOfDigitsInCustomNumberFormatDecimalToken;
- (id)stringByInsertingFormatGroupingSeparators;
- (_Bool)customFormatIntegerTokenUsesSeparator;
- (unsigned long long)numberOfDigitsInCustomNumberFormatIntegerToken;
- (_Bool)isSpecialCustomNumberFormatTokenOfType:(int)arg1;
- (_Bool)isSpecialCustomNumberFormatToken;
@end

@interface NSInvocation (TSUAdditions)
+ (id)invocationWithBlock:(CDUnknownBlockType)arg1;
@end

@interface NSInvocation (TSUAdditions_Private)
+ (void)executeBlock:(CDUnknownBlockType)arg1;
@end

@interface NSObject (TSUBlockUtility)
- (void)tsu_runBlock;
@end

@interface CALayer (TSUTransformToQuadrilateral)
- (void)tsu_transformToQuadrilateralWithTopLeft:(struct CGPoint)arg1 topRight:(struct CGPoint)arg2 bottomLeft:(struct CGPoint)arg3 bottomRight:(struct CGPoint)arg4;
@end

@interface NSScanner (TSUAdditions)
- (_Bool)scanCGFloat:(double *)arg1;
@end

@interface NSMutableSet (TSUAdditions)
- (void)addNonNilObject:(id)arg1;
- (void)xorSet:(id)arg1;
@end

@interface NSMutableDictionary (TSUAdditions)
- (void)tsu_setNonNilValueForKey:(id)arg1 fromDictionary:(id)arg2;
@end

@interface NSException (SFUtilityAdditions)
+ (void)errnoRaise:(id)arg1 format:(id)arg2;
- (int)localErrno;
@end

@interface NSFileManager (SFUtilityAdditions)
- (void)logFileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2;
- (void)_logFileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2 indent:(id)arg3;
- (_Bool)hasAtMostFileProtection:(id)arg1 atURL:(id)arg2 recursively:(_Bool)arg3;
- (_Bool)hasAtLeastFileProtection:(id)arg1 atURL:(id)arg2 recursively:(_Bool)arg3;
- (_Bool)_fileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2 passesTest:(CDUnknownBlockType)arg3;
- (_Bool)_fileProtection:(id)arg1 isGreaterThan:(id)arg2;
- (_Bool)changeFileProtectionAtURL:(id)arg1 toProtection:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4;
- (_Bool)changeFileProtectionAtURL:(id)arg1 fromProtection:(id)arg2 toProtection:(id)arg3 recursively:(_Bool)arg4 error:(id *)arg5;
- (_Bool)_changeFileProtectionAtURL:(id)arg1 fromProtection:(id)arg2 toProtection:(id)arg3 recursively:(_Bool)arg4 error:(id *)arg5;
- (_Bool)setAttributes:(id)arg1 ofItemAtURL:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4;
- (_Bool)applyFileAttributesFromDocumentAtURL:(id)arg1 toDocumentAtURL:(id)arg2 error:(id *)arg3;
- (_Bool)_setAttributes:(id)arg1 ofItemAtURL:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4 shouldUpdateAttributesHandler:(CDUnknownBlockType)arg5;
- (unsigned long long)pathUsage:(id)arg1;
- (unsigned long long)directoryUsage:(id)arg1;
@end

@interface NSString (NSURLAdditionsAdditions)
- (id)stringByPercentEscaping;
- (_Bool)containsPercentEscapes;
@end

@interface NSURL (SFUtilityAdditions)
+ (id)filePathURLWithEscapes:(id)arg1;
+ (id)relativeURLWithEscapes:(id)arg1;
+ (id)improperlyEscapedString:(id)arg1;
+ (id)properlyEscapedString:(id)arg1;
- (_Bool)isRelative;
@end

@interface NSObject (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSNull (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSNumber (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSString (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSArray (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSDictionary (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSURL (TSUUTIUtilities)
- (_Bool)tsu_conformsToUTI:(id)arg1;
@property(readonly, nonatomic) NSString *tsu_UTI;
@end

@interface NSString (TSUUTIUtilities)
- (_Bool)tsu_pathExtensionConformsToUTI:(id)arg1;
- (_Bool)tsu_pathConformsToUTI:(id)arg1;
@property(readonly, nonatomic) NSString *tsu_pathUTI;
@property(readonly, nonatomic) NSString *tsu_UTIFilenameExtension;
- (_Bool)tsu_conformsToAnyUTI:(id)arg1;
- (_Bool)tsu_conformsToUTI:(id)arg1;
@end

@interface NSPropertyListSerialization (TSUtility)
+ (id)tsu_localizedPropertyListWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
+ (void)tsu_processLocalizedPropertyList:(id)arg1;
+ (id)tsu_propertyListWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
@end

@interface NSString (TSPArchiveUtilities)
+ (id)stringWithProtobufString:(const basic_string_a1f69cfb *)arg1;
- (void)saveToProtobufString:(basic_string_a1f69cfb *)arg1;
- (const char *)protobufString;
- (id)initWithProtobufString:(const basic_string_a1f69cfb *)arg1;
@end

@interface NSArray (TSPArchiveUtilities)
- (id)initWithUInt32Array:(const RepeatedField_27dfe32f *)arg1;
- (void)saveToUInt32Array:(RepeatedField_27dfe32f *)arg1;
- (id)initWithColorArray:(const RepeatedPtrField_634a5f45 *)arg1;
- (void)saveToColorArray:(RepeatedPtrField_634a5f45 *)arg1;
- (id)initWithProtobufStringArray:(const RepeatedPtrField_236b8a23 *)arg1;
- (void)saveToProtobufStringArray:(RepeatedPtrField_236b8a23 *)arg1;
@end

@interface NSIndexSet (TSPArchivingUtility)
- (id)initWithMessage:(const struct IndexSet *)arg1;
- (void)saveToMessage:(struct IndexSet *)arg1;
@end

@interface NSDate (TSPArchivingUtility)
- (void)saveToMessage:(struct Date *)arg1;
- (id)initWithMessage:(const struct Date *)arg1;
@end

@interface NSUUID (TSPArchivingUtility)
- (void)saveToMessage:(struct UUID *)arg1;
- (id)initWithMessage:(const struct UUID *)arg1;
@end

@interface NSString (TSPersistence)
+ (id)tsp_stringWithExtensionFieldComponent:(unsigned int)arg1;
+ (id)tsp_stringForDigest:(const char *)arg1 length:(unsigned long long)arg2;
- (id)tsp_stringByAppendingExtensionFieldComponent:(unsigned int)arg1;
@end

@interface NSError (TSPersistence)
+ (id)tsp_recoverableErrorWithError:(id)arg1;
+ (id)tsp_recoverableErrorWithCode:(long long)arg1;
+ (id)tsp_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)tsp_errorWithCode:(long long)arg1;
- (_Bool)tsp_isRecoverable;
@end

@interface NSData (TSPersistence) <TSPSplitableData>
+ (id)tsp_dataFromDispatchData:(id)arg1;
+ (id)tsp_dataWithContentsOfURL:(id)arg1 decryptionKey:(id)arg2;
- (void)tsp_splitDataWithMaxSize:(unsigned long long)arg1 subdataHandlerBlock:(CDUnknownBlockType)arg2;
- (id)tsp_dispatchDataWithApplier:(CDUnknownBlockType)arg1;
- (id)tsp_dispatchData;
- (_Bool)tsp_writeToURL:(id)arg1 encryptionKey:(id)arg2;
@end

@interface NSMutableData (TSPersistence)
- (void)tsp_appendDispatchData:(id)arg1;
@end

@interface NSFileCoordinator (TSPersistence)
+ (_Bool)tsp_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 filePresenter:(id)arg5 error:(id *)arg6 byAccessor:(CDUnknownBlockType)arg7;
+ (_Bool)tsp_coordinateWritingItemAtURL:(id)arg1 options:(unsigned long long)arg2 filePresenter:(id)arg3 error:(id *)arg4 byAccessor:(CDUnknownBlockType)arg5;
+ (_Bool)tsp_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 writingItemAtURL:(id)arg3 options:(unsigned long long)arg4 filePresenter:(id)arg5 error:(id *)arg6 byAccessor:(CDUnknownBlockType)arg7;
+ (_Bool)tsp_coordinateReadingItemAtURL:(id)arg1 options:(unsigned long long)arg2 filePresenter:(id)arg3 error:(id *)arg4 byAccessor:(CDUnknownBlockType)arg5;
+ (void)tsp_removeFilePresenter:(id)arg1;
+ (void)tsp_addFilePresenter:(id)arg1;
@end

@interface NSThread (TSPersistence)
+ (void)tsp_performSynchronousOperationWithThreadDictionaryObject:(id)arg1 forKey:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (void)tsp_performSynchronousOperationWithReadFileAccessUsingBlock:(CDUnknownBlockType)arg1;
+ (_Bool)tsp_hasReadFileAccess;
+ (void)tsp_runFinalizeHandlersForReadCoordinator:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (_Bool)tsp_isRunningFinalizeHandlersForLegacyDocument;
+ (void)tsp_performSynchronousArchiverOperationUsingBlock:(CDUnknownBlockType)arg1;
+ (_Bool)tsp_isArchiverThread;
@end

@interface NSCache (TSPComponentManager)
- (void)tsp_cacheComponent:(id)arg1;
- (void)tsp_flushComponent:(id)arg1;
- (unsigned char)tsp_currentOperation;
- (id)tsp_currentComponent;
- (void)tsp_performOperation:(unsigned char)arg1 forComponent:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
@end

@interface NSURL (TSPersistence)
- (_Bool)isOnNonHFSVolume;
- (_Bool)isUbiquitous;
- (id)URLExceptPrivate;
- (id)pathExceptPrivate;
- (_Bool)isAssetsLibraryURL;
@end

@interface NSMapTable (TSPersistence)
+ (id)newTspWeakObjectsMapTable;
+ (id)newTspStrongObjectsMapTable;
- (void)enumerateIdentifiersAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)tsp_removeObjectForIdentifier:(long long)arg1;
- (id)tsp_objectForIdentifier:(long long)arg1;
- (void)tsp_setObject:(id)arg1 forIdentifier:(long long)arg2;
@end

@interface NSFileManager (TSPersistence)
- (void)assertDefaultFileProtectionAtDocumentURL:(id)arg1;
- (_Bool)setDefaultFileProtectionForDirectoryPath:(id)arg1 error:(id *)arg2;
- (_Bool)setDefaultFileProtectionAtDocumentURL:(id)arg1 error:(id *)arg2;
@end

@interface NSCharacterSet (TSCEAdditions)
+ (id)listDelimiterCharacterSet;
+ (id)dollarSignCharacterSet;
+ (id)internationalColonCharacterSet;
+ (id)internationalWhitespaceAndNewlineCharacterSet;
+ (id)internationalWhitespaceCharacterSet;
+ (id)periodCharacterSet;
+ (id)characterSetRequiringSingleQuotes;
+ (id)singleQuoteCharacterSet;
@end

@interface NSString (TSCEAdditions)
+ (id)stringWithCellRange:(struct)arg1 stickyBits:(unsigned char)arg2;
+ (id)stringWithCellReference:(CDStruct_78b871e1)arg1 stickyBits:(unsigned char)arg2;
+ (id)stringWithCellID:(CDStruct_0441cfb5)arg1 stickyBits:(unsigned char)arg2;
+ (id)stringWithSignedCellID:(CDStruct_f2a491fb)arg1 stickyBits:(unsigned char)arg2;
- (id)stringByFoldingForNamedReferenceMatchingWithLocale:(id)arg1;
- (id)referenceComponentsSeparatedBySpace;
- (id)referenceComponentsSeparatedByColon;
- (id)p_referenceComponentsSeparatedByCharacterInSet:(id)arg1;
- (id)referenceComponentsSeparatedByPathDelimiter;
- (id)stringByRemovingNewlines;
- (id)stringByReplacingTabsAndNewlinesWithASingleSpace;
- (id)newStringByAddingDoubleQuoteEscapesIfNecessary;
- (id)stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:(_Bool)arg1 preserveTrailingUnquotedWhitespace:(_Bool)arg2;
- (id)stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:(_Bool)arg1;
- (id)stringByUnescapingPartialQuotedString;
- (_Bool)isSingleQuoted;
- (id)stringByUnescapingSingleQuotes;
- (id)stringByUnescapingSingleQuotesAndGettingTrailingWhitespaceCount:(unsigned long long *)arg1;
- (id)newStringByAddingSingleQuoteEscapesIfNecessary;
- (id)stringByForcingSingleQuoteEscapes:(_Bool)arg1;
- (id)stringByAddingSingleQuoteEscapesIfNecessary;
- (id)stringByAddingSingleQuoteEscapes;
- (id)newStringByForcingSingleQuoteEscapes:(_Bool)arg1;
- (_Bool)needsReferenceSingleQuoteEscaping;
- (void)p_initializeQuotes;
- (_Bool)hasBoolValue:(_Bool *)arg1;
- (CDStruct_0441cfb5)coordinateValueGettingStickyBits:(char *)arg1;
- (CDStruct_0441cfb5)coordinateValue;
- (id)initWithCellID:(CDStruct_f2a491fb)arg1 stickyBits:(unsigned char)arg2;
@end

@interface NSMutableString (TSCEAdditions)
- (void)replaceCharactersInSet:(id)arg1 withString:(id)arg2;
- (void)appendWhitespace:(char *)arg1 startingIndex:(int *)arg2;
- (void)appendSpaces:(int)arg1;
@end

@interface NSDate (TSCEAdditions)
+ (id)dateWithYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 hour:(long long)arg4 minute:(long long)arg5 second:(long long)arg6;
+ (id)dateWithSerialNumber:(double)arg1 dateMode:(int)arg2;
- (double)mapToDouble;
- (long long)weekday;
- (long long)second;
- (long long)minute;
- (long long)hour;
- (long long)day;
- (long long)month;
- (long long)year;
@end

@interface NSMutableArray (TSCEAdditions)
- (void)addObjectNonNil:(id)arg1;
@end

@interface NSString (GlobalIDCreationAdditions)
+ (id)stringWithNewGlobalID;
@end

@interface NSString (NumericCompare)
- (long long)numericCompare:(id)arg1;
@end

@interface NSValue (TSA_NSValueCGGeometryExtensions)
+ (id)valueWithCGRect:(struct CGRect)arg1;
- (struct CGRect)cgRectValue;
@end

@interface NSError (TSApplication)
+ (id)tsa_errorWithCode:(long long)arg1;
@end

@interface NSNumber (TSCHChartGridValue) <TSCHChartGridValue>
@property(readonly, nonatomic) int chartGridValueType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSDate (TSCHChartGridValue) <TSCHChartGridValue>
- (double)doubleValue;
@property(readonly, nonatomic) int chartGridValueType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSMutableArray (TSCHArchivingUtilities)
+ (id)instanceWithArchive:(const struct ChartsNSArrayOfNSNumberDoubleArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithArchive:(const struct ChartsNSArrayOfNSNumberDoubleArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct ChartsNSArrayOfNSNumberDoubleArchive *)arg1 archiver:(id)arg2;
@end

@interface NSNumber (TSCHArchivingUtilities)
+ (id)instanceWithArchive:(const struct ChartsNSNumberDoubleArchive *)arg1 unarchiver:(id)arg2;
- (id)initWithArchive:(const struct ChartsNSNumberDoubleArchive *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct ChartsNSNumberDoubleArchive *)arg1 archiver:(id)arg2;
@end

@interface CALayer (TSCHAdditions)
- (void)removeCDEEditorFlipOutAnimation;
- (void)addCDEEditorFlipOutAnimationToPosition:(struct CGPoint)arg1 toLeft:(_Bool)arg2 cameraDistance:(double)arg3;
- (void)removeCDEEditorFlipInAnimation;
- (void)addCDEEditorFlipInAnimationFromPosition:(struct CGPoint)arg1 fromLeft:(_Bool)arg2 cameraDistance:(double)arg3;
- (void)removeCDEChartFlipAnimationFromPosition;
- (void)addCDEChartFlipAnimationFromPosition:(struct CGPoint)arg1 toLeft:(_Bool)arg2 cameraDistance:(double)arg3;
- (void)removeCDEChartFlipAnimationToFinalPosition;
- (void)addCDEChartFlipAnimationToFinalPosition:(struct CGPoint)arg1 fromLeft:(_Bool)arg2 cameraDistance:(double)arg3;
- (void)removeCDEShieldOutAnimation;
- (void)addCDEShieldOutAnimation;
- (void)removeCDEShieldInAnimation;
- (void)addCDEShieldInAnimation;
- (void)addPerspectiveProjectionWithDistance:(double)arg1;
- (void)removeCallbackAnimationWithName:(id)arg1;
- (void)addCallbackAnimationWithName:(id)arg1 duration:(double)arg2 target:(id)arg3 selector:(SEL)arg4;
- (void)removeZoomAnimation;
- (void)addZoomAnimationFromPoint:(struct CGPoint)arg1 speed:(double)arg2;
@end

@interface NSNumber (TSSStyleIntValueAdditions)
+ (id)numberWithCGFloat:(double)arg1;
+ (id)numberWithStyleProperty:(int)arg1;
+ (id)numberWithStyleInt:(int)arg1;
- (double)CGFloatValue;
- (int)stylePropertyValue;
- (int)styleIntValue;
@end

@interface NSArray (TSDInfoGeometryPersistenceAdditions)
- (id)initWithGeometryArray:(const RepeatedPtrField_45e8210e *)arg1;
- (void)saveToGeometryArray:(RepeatedPtrField_45e8210e *)arg1 archiver:(id)arg2;
@end

@interface NSNull (TSDColorFill_Additions) <TSDPathPainter>
- (void)drawSwatchInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface CALayer (TSDAdditions)
- (void)resumeAtTime:(double)arg1;
- (void)resume;
- (void)pauseAtTime:(double)arg1;
- (void)pause;
- (id)bakedLayer;
- (struct CGImage *)newRasterizedImageRef;
- (struct CGRect)frameIncludingSublayers;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)zoomDownAnimation;
- (void)removeZoomDownAnimation;
- (void)addZoomDownAnimationFromPoint:(struct CGPoint)arg1 endingScale:(double)arg2 delay:(double)arg3;
- (void)addZoomDownAnimationFromPoint:(struct CGPoint)arg1;
- (void)addZoomDownAnimation;
- (void)removeZoomAnimation;
- (void)addZoomAnimationFromPoint:(struct CGPoint)arg1 startingScale:(double)arg2;
- (void)addZoomAnimationFromPoint:(struct CGPoint)arg1;
- (void)addZoomAnimation;
- (void)removeResetAnimation;
- (void)addResetAnimation;
- (void)addResetAnimationWithDelegate:(id)arg1;
- (void)removeRippleAnimation;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1 withScale:(double)arg2 addPerspectiveProjection:(_Bool)arg3;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1 withScale:(double)arg2;
- (void)addRippleAnimationFromPosition:(struct CGPoint)arg1;
- (void)removeRotateInAnimation;
- (void)addRotateInAnimationWithDuration:(double)arg1 delay:(double)arg2;
- (void)removeDistortAnimation;
- (void)addDistortAnimationWithVector:(struct CGPoint)arg1;
- (void)removePopOutAnimation;
- (void)addPopOutAnimation:(id)arg1;
- (_Bool)hasPopInAnimation;
- (void)removePopInAnimation;
- (void)addPopInAnimation:(id)arg1;
- (void)removeSproingAnimation;
- (void)addSproingAnimationFromPoint:(struct CGPoint)arg1;
- (void)removeFlipTransitionAnimation;
- (void)addFlipTransitionAnimationToLayer:(id)arg1;
- (void)removeDragRotationAnimation;
- (void)addDragRotationAnimationWithDelta:(struct CGPoint)arg1;
- (void)removePulseAnimation;
- (void)addPulseAnimation;
- (void)removeWaveAnimation;
- (void)removeWaveAnimationAnimated:(_Bool)arg1;
- (void)addWaveAnimationWithScale:(double)arg1 offset:(struct CGSize)arg2 zPosition:(double)arg3 addPerspectiveProjection:(_Bool)arg4;
- (void)addWaveAnimationWithScale:(double)arg1 offset:(struct CGSize)arg2 zPosition:(double)arg3;
- (void)addWaveAnimationWithOffset:(struct CGSize)arg1 zPosition:(double)arg2;
- (void)addWaveAnimation;
- (void)removeJiggleAnimation;
- (void)addJiggleAnimationWithDuration:(double)arg1 angle:(double)arg2;
- (void)addJiggleAnimation;
- (double)opacityByApplyingAnimation:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (struct CATransform3D)transform3DByApplyingAnimation:(id)arg1 atTime:(double)arg2 offset:(struct CGPoint)arg3 animationCache:(id)arg4;
- (void)removeAllAnimationsOnLayerTree;
- (double)durationOfAllAnimations;
- (void)addPerspectiveSublayerProjectionUsingScreenSize:(struct CGSize)arg1;
- (void)addPerspectiveProjection;
- (double)p_perspectiveZDistanceUsingSize:(struct CGSize)arg1;
- (void)addReflectionSubLayerWithHeight:(double)arg1 startOpacity:(double)arg2;
- (id)layerByAddingReflectionWithHeight:(double)arg1 startOpacity:(double)arg2;
- (void)setIfDifferentFrame:(struct CGRect)arg1 orTransform:(struct CGAffineTransform)arg2;
@end

@interface CAShapeLayer (TSDAdditions)
- (void)setCGLineJoin:(int)arg1;
- (void)setCGLineCap:(int)arg1;
@end

@interface CALayer (TSDTilingLayerSupport)
- (id)tileContentsLayer;
- (void)setTileContents:(id)arg1;
- (void)setNeedsDisplayForDirtyTiles:(id)arg1;
- (_Bool)tilingSafeHasContents;
- (void)tilingSafeSetSublayers:(id)arg1;
- (void)cancelLayoutForTilingLayers;
- (void)setNeedsLayoutForTilingLayers;
@end

@interface CALayer (CanvasLayerAdditions)
- (void)p_clearAllLayerDelegates;
@end

@interface EAGLContext (TSDBrush)
- (id)initForBrushes;
@end

@interface NSNumber (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface NSNull (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface NSValue (TSDMixingAdditions) <TSDMixing>
- (id)mixedObjectWithFraction:(double)arg1 ofObject:(id)arg2;
- (long long)mixingTypeWithObject:(id)arg1;
@end

@interface CAMediaTimingFunction (TSDCAAnimationAdditions)
- (double)TSD_valueAtPercent:(double)arg1;
@end

@interface CAAnimation (TSDCAAnimationAdditions)
+ (id)TSD_supportedKeyPaths;
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CAPropertyAnimation (TSDCAAnimationAdditions)
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
- (double)TSD_animationPercentFromAnimationTime:(double)arg1;
- (id)p_interpolatedValueFrom:(id)arg1 to:(id)arg2 percent:(double)arg3;
- (id)p_adjustedResultWithValue:(id)arg1;
@end

@interface CABasicAnimation (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CAKeyframeAnimation (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueAtTime:(double)arg1 initialValue:(id)arg2;
- (void)p_getValue:(id *)arg1 animationPercent:(double *)arg2 atTime:(double)arg3 initialValue:(id)arg4;
@end

@interface CAAnimationGroup (TSDCAAnimationAdditions)
- (double)TSD_animationPercentByApplyingTimingFunctionForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_animationForKeyPath:(id)arg1 atTime:(double)arg2;
- (id)TSD_valueForKeyPath:(id)arg1 atTime:(double)arg2 animationCache:(id)arg3;
- (void)p_getValue:(id *)arg1 animation:(id *)arg2 animationPercent:(double *)arg3 forKeyPath:(id)arg4 atTime:(double)arg5 animationCache:(id)arg6;
- (_Bool)TSD_containsAnimationForKeyPath:(id)arg1;
@end

@interface EAGLContext (TSDGLShadow)
- (id)initForShadow;
@end

@interface NSString (TSKSearch)
+ (id)regexStringForSearchString:(id)arg1 options:(unsigned long long)arg2;
- (id)stringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2 searchOptions:(unsigned long long)arg3 range:(struct _NSRange)arg4 replacementCount:(unsigned long long *)arg5;
- (id)stringByCapitalizingToMatchString:(id)arg1 range:(struct _NSRange)arg2 searchOptions:(unsigned long long)arg3;
- (struct _NSRange)rangeOfString:(id)arg1 searchOptions:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
@end

@interface NSUserDefaults (TSKRoleAdditions)
- (void)setBool:(_Bool)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setDouble:(double)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setFloat:(float)arg1 forKeyInCurrentRole:(id)arg2;
- (void)setInteger:(long long)arg1 forKeyInCurrentRole:(id)arg2;
- (_Bool)boolForKeyInCurrentRole:(id)arg1;
- (double)doubleForKeyInCurrentRole:(id)arg1;
- (float)floatForKeyInCurrentRole:(id)arg1;
- (long long)integerForKeyInCurrentRole:(id)arg1;
- (id)dataForKeyInCurrentRole:(id)arg1;
- (id)dictionaryForKeyInCurrentRole:(id)arg1;
- (id)arrayForKeyInCurrentRole:(id)arg1;
- (id)stringForKeyInCurrentRole:(id)arg1;
- (void)removeObjectForKeyInCurrentRole:(id)arg1;
- (void)setObject:(id)arg1 forKeyInCurrentRole:(id)arg2;
- (id)objectForKeyInCurrentRole:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setDouble:(double)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setFloat:(float)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (void)setInteger:(long long)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (_Bool)boolForKey:(id)arg1 inRole:(id)arg2;
- (double)doubleForKey:(id)arg1 inRole:(id)arg2;
- (float)floatForKey:(id)arg1 inRole:(id)arg2;
- (long long)integerForKey:(id)arg1 inRole:(id)arg2;
- (id)dataForKey:(id)arg1 inRole:(id)arg2;
- (id)dictionaryForKey:(id)arg1 inRole:(id)arg2;
- (id)arrayForKey:(id)arg1 inRole:(id)arg2;
- (id)stringForKey:(id)arg1 inRole:(id)arg2;
- (void)removeObjectForKey:(id)arg1 inRole:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 inRole:(id)arg3;
- (id)objectForKey:(id)arg1 inRole:(id)arg2;
- (id)p_currentRole;
- (id)keyForRole:(id)arg1;
@end

@interface CALayer (TSKAdditions)
- (void)makeStretchableLayerWithUIImage:(id)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithUIImage:(id)arg1 leftCap:(double)arg2 topCap:(double)arg3;
- (void)makeStretchableLayerWithoutImage:(struct CGImage *)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithoutImage:(struct CGImage *)arg1 leftCap:(double)arg2 topCap:(double)arg3;
- (void)makeStretchableLayerWithImage:(struct CGImage *)arg1 leftCap:(double)arg2 rightCap:(double)arg3 topCap:(double)arg4 bottomCap:(double)arg5;
- (void)makeStretchableLayerWithImage:(struct CGImage *)arg1 leftCap:(double)arg2 topCap:(double)arg3;
@end

@interface NSError (TSKWarningAdditions)
+ (id)errorWithTSKWarning:(id)arg1;
@end

@interface NSNumber (TSSProperties)
- (int)propertyValue;
@end

@interface NSArray (TSSStyleAdditions)
- (int)propertyAtIndex:(unsigned int)arg1;
@end

@interface NSMutableArray (TSSStyleAdditions)
- (void)addProperty:(int)arg1;
@end

@interface NSSet (TSWPStyleAdditions)
- (_Bool)containsStyleOrVariationOfStyle:(id)arg1;
- (_Bool)hasVariations;
@end

@interface NSObject (TSSPropertyValueArchiving)
+ (id)instanceWithArchive:(const struct Message *)arg1 unarchiver:(id)arg2;
- (void)saveToArchive:(struct Message *)arg1 archiver:(id)arg2;
- (id)initWithArchive:(const struct Message *)arg1 unarchiver:(id)arg2;
@end

@interface NSString (TSTFormulaHelperMethods)
- (_Bool)tst_hasLeadingCharacterInSet:(id)arg1;
- (_Bool)tst_isOneCharacterInSet:(id)arg1;
- (_Bool)tst_hasLeadingSingleQuoteEscape;
- (_Bool)tst_isEqualToFormulaEqualsString;
- (_Bool)tst_hasFormulaEqualsPrefix;
@end

@interface NSCharacterSet (SFWPAdditions)
+ (id)variationSelectorCharacterSet;
+ (id)lineBreakingCharacterSet;
+ (id)postSmartSet;
+ (id)preSmartSet;
+ (id)allQuotesCharacterSetExcludingRight;
+ (id)allQuotesCharacterSetExcludingLeft;
+ (id)smartQuotesCharacterSet;
+ (id)smartDoubleQuotesCharacterSet;
+ (id)smartSingleQuotesCharacterSet;
+ (id)normalQuotesCharacterSet;
+ (id)spaceCharacterSet;
+ (id)invisibleCharacterSet;
+ (id)breakingSpaceCharacterSet;
@end

@interface NSMutableCharacterSet (SFWPAdditions)
- (id)initWithCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2;
@end

@interface NSString (TSWPAdditions)
+ (id)stringForValue:(unsigned int)arg1 withPageNumberFormat:(int)arg2;
+ (id)stringForValue:(unsigned int)arg1 withListNumberFormat:(int)arg2 includeFormatting:(_Bool)arg3;
+ (id)stringForValue:(unsigned int)arg1 withListNumberFormat:(int)arg2;
+ (unsigned long long)numberForString:(id)arg1 withPageNumberFormat:(int)arg2;
+ (unsigned long long)numberForString:(id)arg1 withListNumberFormat:(int)arg2;
- (unsigned int)utf32CharacterAtIndex:(unsigned long long)arg1;
- (int)contentsScriptInRange:(struct _NSRange)arg1;
- (int)contentsScript;
- (id)replaceOccurrencesOfCharactersInSet:(id)arg1 minimumConsecutiveLength:(unsigned long long)arg2 replaceString:(id)arg3;
- (_Bool)isAllWhitespaceInRange:(struct _NSRange)arg1;
- (struct _NSRange)rangeOfWordAtCharacterIndex:(unsigned long long)arg1 range:(struct _NSRange)arg2 includePreviousWord:(_Bool)arg3;
- (struct _NSRange)rangeOfCharactersFromSet:(id)arg1 index:(unsigned long long)arg2;
- (unsigned long long)findIndexOfCharacter:(unsigned short)arg1 range:(struct _NSRange)arg2;
- (id)stringByNormalizingParagraphBreaks;
@end

@interface NSMutableString (TSWPStorage_conversion)
- (void)replaceBreaksWithPlainTextVersions;
@end

@interface NSString (TPWordCountAdditions)
- (id)statisticsInRange:(struct _NSRange)arg1;
- (unsigned long long)surrogatePairsInRange:(struct _NSRange)arg1;
- (void)p_calculateWhiteSpaceAndSpecialCharactersInRange:(CDStruct_627e0f85)arg1 whiteSpace:(unsigned long long *)arg2 specialCharacters:(unsigned long long *)arg3;
- (id)statistics;
@end

@interface NSArray (MastersEquivalentForCrossDocumentPaste)
- (_Bool)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
@end

@interface TSDDrawableInfo (KNAdditions)
+ (void)load;
- (void)swizzled_setMatchesObjectPlaceholderGeometry:(_Bool)arg1;
- (_Bool)swizzled_matchesObjectPlaceholderGeometry;
@property(readonly, nonatomic) NSArray *ghostInfos;
- (id)activeBuildChunksForAnimationType:(int)arg1;
@property(readonly, nonatomic) NSArray *buildChunks;
@property(readonly, nonatomic) NSArray *activeBuildChunks;
@property(readonly, nonatomic) NSArray *builds;
@property(readonly, nonatomic) _Bool hasBuilds;
@property(readonly, nonatomic) unsigned long long buildCount;
@property(readonly, nonatomic) KNBuild *buildOut;
@property(readonly, nonatomic) KNBuild *buildIn;
@property(readonly, nonatomic) NSArray *actionBuilds;
@property(readonly, nonatomic) _Bool hasActionBuilds;
@property(readonly, nonatomic) KNAbstractSlide *abstractSlide;
@property(readonly, nonatomic) KNSlide *slide;
@end

@interface NSObject (TPAdditions)
- (void)performSelector:(SEL)arg1 withIndexesFromSet:(id)arg2;
@end

