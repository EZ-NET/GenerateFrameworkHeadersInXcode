//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
} CDStruct_89ddc8e1;

typedef struct {
    id _field1;
    unsigned long long _field2;
} CDStruct_856ef1b3;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    double _field6;
    int _field7;
} CDStruct_e950349b;

typedef struct {
    struct *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_0029e0ce;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AddressBookUI.framework/AddressBookUI
// UUID: DBCCFFB2-27BD-3981-91EB-B5A311A2DC2C
//
//                           Arch: x86_64
//                Current version: 33.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1751.13.4.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABCardContentProvider <NSObject>
- (UIImage *)contentSwitchingControlPocketShadow;
- (long long)defaultContentIndex;
- (UISegmentedControl *)newContentSwitchingControl;
- (UIView *)newContentViewForItemAtIndex:(long long)arg1;
- (UIView *)newCustomHeaderView;
- (id)initWithPerson:(void *)arg1;

@optional
- (int)style;
- (_Bool)showsContentSwitchingControl;
- (UIImage *)contentSwitchingControlBorder;
- (UIColor *)backgroundColor;
@end

@protocol ABCardPropertyPickerDelegate <ABStyleProviding>
- (void)propertyPicker:(ABCardPropertyPicker *)arg1 selectedProperty:(int)arg2 withDefaultValue:(id)arg3;
- (void)propertyPicker:(ABCardPropertyPicker *)arg1 selectedProperty:(int)arg2;
@end

@protocol ABContactActionDelegate <NSObject>
- (void)actionWasCanceled:(ABContactAction *)arg1;
- (void)actionDidFinish:(ABContactAction *)arg1;
- (void)actionDidUpdate:(ABContactAction *)arg1;
- (void)action:(ABContactAction *)arg1 pushViewController:(UIViewController *)arg2 sender:(id)arg3;
- (void)action:(ABContactAction *)arg1 dismissViewController:(UIViewController *)arg2 sender:(id)arg3;
- (void)action:(ABContactAction *)arg1 presentViewController:(UIViewController *)arg2 sender:(id)arg3;
- (void)action:(ABContactAction *)arg1 prepareChildContactViewController:(ABContactViewController *)arg2 sender:(id)arg3;
@end

@protocol ABContactAddLinkedCardActionDelegate
- (_Bool)shouldAllowSelectingContact:(CNContact *)arg1;
@end

@protocol ABContactGroupPickerDelegate <NSObject>
- (void)contactGroupPickerDidFinish:(ABContactGroupPickerViewController *)arg1 withGroup:(NSString *)arg2;
- (void)contactGroupPickerDidCancel:(ABContactGroupPickerViewController *)arg1;
- (NSArray *)alreadyPickedGroups;
@end

@protocol ABContactHeaderViewDelegate <NSObject>
- (void)headerHeightDidChange;
- (void)headerPhotoDidUpdate;
@end

@protocol ABContactPhotoViewDelegate <NSObject>
- (void)didUpdatePhoto;
@end

@protocol ABContactViewControllerDelegate <NSObject>

@optional
- (void)contactViewController:(ABContactViewController *)arg1 didDeleteContact:(CNContact *)arg2;
- (void)contactViewController:(ABContactViewController *)arg1 didChangeToEditMode:(_Bool)arg2;
- (void)contactViewController:(ABContactViewController *)arg1 didCompleteWithContact:(CNContact *)arg2;
- (UIColor *)contactViewController:(ABContactViewController *)arg1 highlightColorForPropertyItem:(ABPropertyGroupItem *)arg2 contact:(CNContact *)arg3;
- (_Bool)contactViewController:(ABContactViewController *)arg1 shouldPerformDefaultActionForContact:(CNContact *)arg2 property:(NSString *)arg3 labeledValue:(CNLabeledValue *)arg4;
@end

@protocol ABContactViewDataSource <NSObject, UITableViewDataSource>

@optional
- (UITableViewCell *)contactView:(ABContactView *)arg1 cellForItemAtIndex:(long long)arg2 inGroup:(ABCardGroup *)arg3;
- (long long)contactView:(ABContactView *)arg1 numberOfItemsInGroup:(ABCardGroup *)arg2;
@end

@protocol ABContactViewDelegate <NSObject, UITableViewDelegate>

@optional
- (void)contactView:(ABContactView *)arg1 didSelectItemAtIndex:(long long)arg2 inGroup:(ABCardGroup *)arg3;
- (double)contactView:(ABContactView *)arg1 heightForItemAtIndex:(long long)arg2 inGroup:(ABCardGroup *)arg3;
- (long long)numberOfGroupsInContactView:(ABContactView *)arg1;
@end

@protocol ABContentControllerProtocol
- (void)reload;
- (void)back:(_Bool)arg1 save:(_Bool)arg2;
@end

@protocol ABCountryPickerControllerDelegate <UINavigationControllerDelegate>
- (void)countryPickerDidCancel:(ABCountryPickerController *)arg1;
- (void)countryPicker:(ABCountryPickerController *)arg1 didPickCountryCode:(NSString *)arg2;
@end

@protocol ABDateFieldDelegate
- (_Bool)dateFieldShouldClear:(ABDateField *)arg1;
- (void)dateFieldDidBeginEditing:(ABDateField *)arg1;
- (void)dateFieldDidEndEditing:(ABDateField *)arg1;
- (_Bool)dateFieldShouldEndEditing:(ABDateField *)arg1;
- (_Bool)dateFieldShouldBeginEditing:(ABDateField *)arg1;
- (void)dateFieldDateDidChange:(ABDateField *)arg1;
@end

@protocol ABDatePickerPresentationDelegate <NSObject>
- (void)dateField:(ABDateField *)arg1 delegateDismissDatePicker:(UIDatePicker *)arg2;
- (void)dateField:(ABDateField *)arg1 delegatePresentDatePicker:(UIDatePicker *)arg2;
- (void)dateField:(ABDateField *)arg1 delegatePrepareToPresentDatePicker:(UIDatePicker *)arg2;
- (_Bool)dateField:(ABDateField *)arg1 shouldPresentDatePicker:(UIDatePicker *)arg2;
- (UIDatePicker *)datePickerForDateField:(ABDateField *)arg1;
@end

@protocol ABDatePickerViewControllerDismissDelegate
- (void)datePickerViewControllerWillDisappear:(ABDatePickerViewController *)arg1;
@end

@protocol ABFMFActionButtonsDelegate <NSObject>
- (void)showFMFCallButton:(_Bool)arg1 withAction:(ABPersonTableAction *)arg2;
- (void)showFMFFacetimeButton:(_Bool)arg1 withAction:(ABPersonTableAction *)arg2;
- (void)showFMFMessageButton:(_Bool)arg1 withAction:(ABPersonTableAction *)arg2;
@end

@protocol ABGroupWrapperDelegate <NSObject>
- (void)groupWrapper:(ABGroupWrapper *)arg1 didBecomeSelected:(_Bool)arg2;
@end

@protocol ABImagePickerControllerDelegate
@property(readonly, nonatomic) ABImagePickerController *imagePicker;
@property(nonatomic) _Bool popoverSizeUpdatesDisabled;
- (id <ABStyleProvider>)styleProvider;
- (UIViewController *)imagePickerControllerViewControllerToPresentModal:(ABImagePickerController *)arg1;
- (UIView *)imagePickerControllerViewForApplyImageAnimation:(ABImagePickerController *)arg1;
- (void)imagePicker:(ABImagePickerController *)arg1 didDismissActionSheet:(UIActionSheet *)arg2;
- (void)imagePicker:(ABImagePickerController *)arg1 presentActionSheet:(UIActionSheet *)arg2;
- (void)showImageMenuForHelper:(ABPersonViewControllerHelper *)arg1;
- (void)imagePicker:(UIWindow *)arg1 pickedPhoto:(UIImage *)arg2;
- (void)finishTearingDownImagePickerController;
- (void)removeImagePickerControllerFromUI;
- (void)imagePickerWillBeRemoved:(UIWindow *)arg1;
- (void)imagePickerWillBeShown:(UIWindow *)arg1;
- (ABPersonImageView *)personImageView;
- (NSArray *)selectedPeople;
@end

@protocol ABMembersControllerDelegate <NSObject>
- (ABModel *)model;
- (void)membersControllerDidEndServerSearch:(ABMembersController *)arg1;
- (void)membersControllerDidEndSearching:(ABMembersController *)arg1;
- (void)membersControllerWillEndSearching:(ABMembersController *)arg1;
- (void)membersControllerWillStartSearching:(ABMembersController *)arg1;
- (_Bool)membersController:(ABMembersController *)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (int)behavior;
- (void)personWasSelected:(void *)arg1;
- (_Bool)showCardForPerson:(void *)arg1 withMemberCell:(UIView *)arg2 animate:(_Bool)arg3;
- (_Bool)showCardForPerson:(void *)arg1 animate:(_Bool)arg2;
- (_Bool)allowsShowingPersonsCards;
- (void)showInsertEditorForPerson:(void *)arg1 animate:(_Bool)arg2;
@end

@protocol ABMembersDataSourceDelegate <NSObject>
- (_Bool)abDataSource:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (_Bool)abDataSourceAllowsShowingPersonsCards:(id)arg1;
- (_Bool)abDataSource:(id)arg1 selectedPerson:(void *)arg2 atIndexPath:(NSIndexPath *)arg3 withMemberCell:(UIView *)arg4 animate:(_Bool)arg5;

@optional
- (void)abScrollViewDidBeginDragging:(UIScrollView *)arg1;
@end

@protocol ABMultiCellContentViewUpdateDelegate <ABTabOrderDelegate, ABDatePickerPresentationDelegate>
- (void)multiCellContentViewWillHideDeleteConfirmation:(ABMultiCellContentView *)arg1;
- (void)multiCellContentViewWillShowDeleteConfirmation:(ABMultiCellContentView *)arg1;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 didResizeAnimated:(_Bool)arg2;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 willResizeAnimated:(_Bool)arg2;
- (void)multiCellContentViewDidEndEditing:(ABMultiCellContentView *)arg1;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 entryFieldDidEndEditing:(UIView *)arg2 forKey:(id)arg3;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 entryField:(UIView *)arg2 didUpdateValue:(id)arg3 forKey:(id)arg4;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 entryFieldDidBeginEditing:(UIView *)arg2;
- (_Bool)multiCellContentView:(ABMultiCellContentView *)arg1 entryFieldShouldBeginEditing:(UIView *)arg2;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 touchesCancelledForView:(UIView *)arg2;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 touchesEndedForView:(UIView *)arg2;
- (void)multiCellContentView:(ABMultiCellContentView *)arg1 touchesBeganForView:(UIView *)arg2;
@end

@protocol ABMultipleSourceImagePickerDelegate
- (void)multipleSourcePickerDidSelectPhotoPicker:(id)arg1;
- (void)multipleSourcePicker:(id)arg1 didSelectPerson:(ABUIPerson *)arg2;
@end

@protocol ABNewPersonViewControllerDelegate <NSObject>
- (void)newPersonViewController:(ABNewPersonViewController *)arg1 didCompleteWithNewPerson:(void *)arg2;
@end

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol ABPersonCellLayoutManagerDelegate <NSObject>
- (_Bool)personCellLayoutManager:(ABPersonCellLayoutManager *)arg1 isCellInFullEditMode:(UITableViewCell *)arg2;
@end

@protocol ABPersonEditDelegate <NSObject>

@optional
- (_Bool)shouldBeRemovedFromNavigationStack;
- (struct CGSize)adjustedPopoverContentSizeForPersonView:(ABPersonViewController *)arg1 suggestedSize:(struct CGSize)arg2;
- (_Bool)personViewController:(ABPersonViewController *)arg1 shouldContinueAfterEditingConfirmed:(_Bool)arg2 forPerson:(void *)arg3;
- (void)insertProperty:(int *)arg1 insertValue:(id *)arg2 insertLabel:(id *)arg3;
- (void)preferredPersonDidChangeToPerson:(void *)arg1;
- (void)didRemoveDeleteButtonAtIndexPath:(NSIndexPath *)arg1;
- (void)willShowDeleteButtonAtIndexPath:(NSIndexPath *)arg1;
- (void)imageUpdatedForPerson:(void *)arg1;
- (void)linksUpdatedForPerson:(void *)arg1;
- (void)nameUpdatedForPerson:(void *)arg1;
- (void)personWasDeleted;
- (void)person:(void *)arg1 tableViewTouchesBegan:(NSSet *)arg2 withEvent:(UIEvent *)arg3;
- (void)personScrollViewWillBeginDragging:(void *)arg1;
- (void)personHeaderViewHeightDidChange:(void *)arg1;
- (void)notesFieldDidResignFirstResponderForPerson:(void *)arg1;
- (void)notesFieldWillBecomeFirstResponderForPerson:(void *)arg1;
- (void)person:(void *)arg1 propertyDidChange:(int)arg2;
@end

@protocol ABPersonImageDataDelegate
- (_Bool)didChangePreferredPersonForImage;
- (void)updateRecordImages;
- (void)resetImageData;
- (void)reloadImageData;
- (_Bool)hasImageChanges;
- (void)imageWillSave;
- (void)refreshImageData;
- (void)removeImageDataForPerson:(ABUIPerson *)arg1;
- (void)setImageData:(NSData *)arg1 withFormat:(int)arg2 cropRect:(struct CGRect)arg3 forPerson:(ABUIPerson *)arg4;
- (NSData *)imageDataWithFormat:(int)arg1 cropRect:(struct CGRect *)arg2 forPerson:(ABUIPerson *)arg3;
- (_Bool)hasImageDataForPerson:(ABUIPerson *)arg1;
- (void)setPersonForImageData:(ABUIPerson *)arg1;
- (ABUIPerson *)personForImageData;
- (NSArray *)writablePeople;
- (NSArray *)people;

@optional
- (_Bool)shouldUseSourceTypeSpecificStrings;
@end

@protocol ABPersonLinkingUIDelegate
- (ABPeoplePickerNavigationController *)newPeoplePickerForLinking;
- (ABPersonViewController *)newPersonViewControllerForLinkedCardAtRow:(long long)arg1;
- (_Bool)shouldAllowLinkingPersonWithRecordID:(int)arg1;
- (_Bool)shouldAllowLinkingAnotherContact;
- (long long)numberOfLinkedCardRows;
- (NSString *)sourceNameForCardAtRow:(long long)arg1;
- (NSString *)personNameForCardAtRow:(long long)arg1;
- (_Bool)canUnlinkCardAtRow:(long long)arg1;
- (_Bool)manuallyUnlinkCardAtRow:(long long)arg1;
- (_Bool)manuallyLinkPerson:(ABUIPerson *)arg1;
@end

@protocol ABPersonTableActionDelegate <NSObject, ABStyleProviding>

@optional
- (void)action:(ABPersonTableAction *)arg1 willShowButton:(UIButton *)arg2 forValueAtIndex:(long long)arg3 inPropertyGroup:(ABPropertyGroup *)arg4;
- (void)presentDifferentiationSheetForAction:(ABPersonTableAction *)arg1;
@end

@protocol ABPersonTableHeaderViewDelegate <ABMultiCellContentViewUpdateDelegate>
- (void)personTableHeaderView:(ABPersonTableHeaderView *)arg1 imageViewWasSelected:(ABPersonImageView *)arg2;
@end

@protocol ABPersonTableTinyActionDelegate
- (_Bool)personTableTinyActionCell:(ABPersonTableTinyActionCell *)arg1 shouldShowAction:(ABPersonTableAction *)arg2;
@end

@protocol ABPersonTableViewDataSourceDelegate <NSObject>
@property(nonatomic) id <ABPersonEditDelegate> editDelegate;
- (void)personTableViewDataSourceHeaderHeightDidChange:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSourceDidReloadData:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 scrollViewDidScroll:(UIScrollView *)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 willUpdateForEditing:(_Bool)arg2;
- (double)personTableViewDataSourceHeaderPadding:(ABPersonTableViewDataSource *)arg1;
- (_Bool)personTableViewDataSourceShouldShowHeader:(ABPersonTableViewDataSource *)arg1;
- (_Bool)personTableViewDataSourceIsInPopover:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSourceShouldIgnoreNextLocalChange:(ABPersonTableViewDataSource *)arg1;
- (void)presentLinkingPeoplePickerForPersonTableViewDataSource:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 pushLinkedCardAtRow:(long long)arg2;
- (_Bool)presentPeoplePickerNavigationControllerForRelatedNames:(id)arg1;
- (_Bool)personTableViewDataSourceShouldShowContactSources:(ABPersonTableViewDataSource *)arg1;
- (_Bool)personTableViewDataSourceShouldShowLinkedPeople:(ABPersonTableViewDataSource *)arg1;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 shouldShowAction:(ABPersonTableAction *)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 conference:(id)arg2 person:(ABUIPerson *)arg3 property:(int)arg4 identifier:(int)arg5;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 shareContact:(id)arg2;
- (_Bool)personTableViewDataSourceIsLocation:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 didDismissActionSheet:(UIActionSheet *)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 presentActionSheet:(UIActionSheet *)arg2 fromView:(UIView *)arg3;
- (void)personTableViewDataSourceDidSwipeToDelete:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 didFinishEditingProperty:(int)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 didUpdateValueForProperty:(int)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 didBeginEditingProperty:(int)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 dismissDatePickerViewController:(ABDatePickerViewController *)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 presentDatePickerViewController:(ABDatePickerViewController *)arg2 fromView:(UIView *)arg3 passthroughViews:(NSArray *)arg4 forIndexPath:(NSIndexPath *)arg5;
- (_Bool)isPresentingDatePickerViewControllerForPersonTableViewDataSource:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSourceWillPresentDatePickerViewController:(ABPersonTableViewDataSource *)arg1;
- (_Bool)personTableViewDataSourceShouldPresentDatePickerViaDelegate:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 presentPickerViewController:(ABPickerViewController *)arg2 fromView:(UIView *)arg3 forIndexPath:(NSIndexPath *)arg4;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 removeNonScrollableHeaderViewAnimated:(_Bool)arg2;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 addNonScrollableHeaderView:(UIView *)arg2 animated:(_Bool)arg3;
- (void)personTableViewDataSourceSelectedAddToContacts:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSourceSelectedDeletePerson:(ABPersonTableViewDataSource *)arg1;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 selectedAddToFavoritesActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(ABPropertyGroup *)arg3 entryType:(int)arg4;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 selectedSMSActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(ABPropertyGroup *)arg3;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 selectedCallActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(ABPropertyGroup *)arg3;
- (_Bool)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 selectedPropertyAtIndex:(long long)arg2 inPropertyGroup:(ABPropertyGroup *)arg3 withMemberCell:(UIView *)arg4 forEditing:(_Bool)arg5;
- (void)personTableViewDataSource:(ABPersonTableViewDataSource *)arg1 selectedImageForEditing:(_Bool)arg2;
@end

@protocol ABPersonTabsLayoutManager <NSObject>
- (void)moveContentSwitchingTabsAboveView:(UIView *)arg1 inScrollView:(UIScrollView<ABPersonTabsScrollView> *)arg2;
- (void)didChangeContentOffset:(struct CGPoint)arg1 inScrollView:(UIScrollView<ABPersonTabsScrollView> *)arg2;
- (void)repositionContentSwitchingTabs;
- (double)heightForHeaderAndContentSwitchingTabs;
@end

@protocol ABPersonTabsScrollView <NSObject>
@property(retain, nonatomic) id <ABPersonTabsLayoutManager> tabsLayoutManager;
@property(retain, nonatomic) UIView *backgroundView;
@property(nonatomic) double minimumBottomInset;
@end

@protocol ABPersonViewControllerDelegate <NSObject>
- (_Bool)personViewController:(ABPersonViewController *)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
@end

@protocol ABPickerControllerDelegate <UINavigationControllerDelegate>
- (void)pickerDidCancel:(UIViewController *)arg1;
- (void)picker:(UIViewController *)arg1 didPickItem:(id)arg2;
@end

@protocol ABPickerViewControllerDelegate <NSObject>
- (_Bool)pickerViewControllerShouldDismissKeyboard:(ABPickerViewController *)arg1;
- (_Bool)pickerViewController:(ABPickerViewController *)arg1 shouldDismissAfterSelectingItem:(id)arg2;
@end

@protocol ABPickerViewControllerDismissDelegate <NSObject>

@optional
- (void)dismissPickerViewController:(ABPickerViewController *)arg1;
@end

@protocol ABPopoverRepresentDelegate <NSObject>
- (UIView *)viewToRepresentPopover:(UIPopoverController *)arg1;
@end

@protocol ABPresenterDelegate <NSObject>
@property(readonly) _Bool isPresentingModalViewController;
- (void)sender:(id)arg1 dismissViewController:(UIViewController *)arg2;
- (void)sender:(id)arg1 presentViewController:(UIViewController *)arg2;
@end

@protocol ABPrimaryValueDelegate
- (NSString *)namePropertyGroup:(ABNamePropertyGroup *)arg1 primaryValueForProperty:(int)arg2;
@end

@protocol ABPropertyActionDelegate <ABContactActionDelegate>
- (ABPropertyCell *)action:(ABContactAction *)arg1 cellForPropertyItem:(ABPropertyGroupItem *)arg2 sender:(id)arg3;
@end

@protocol ABPropertyBestFaceTimeQueryDelegate
- (void)queryComplete;
@end

@protocol ABPropertyCellDelegate <NSObject>
- (id)defaultValueForPropertyCell:(ABPropertyCell *)arg1;
- (void)propertyCellDidChangeLayout:(ABPropertyCell *)arg1;
- (void)propertyCell:(ABPropertyCell *)arg1 performActionForItem:(ABPropertyGroupItem *)arg2 withTransportType:(long long)arg3;
- (void)propertyCell:(ABPropertyCell *)arg1 didUpdateItem:(ABPropertyGroupItem *)arg2 withNewValue:(id)arg3;
- (void)propertyCell:(ABPropertyCell *)arg1 didUpdateItem:(ABPropertyGroupItem *)arg2 withNewLabel:(NSString *)arg3;
@end

@protocol ABPropertyEditingTableViewCellDelegate <NSObject, ABStyleProviding>

@optional
- (void)propertyEditingTableViewCell:(ABPropertyEditingTableViewCell *)arg1 valueDidChange:(NSString *)arg2;
@end

@protocol ABPropertyGroupItemDelegate <NSObject>

@optional
- (void)propertyItem:(ABPropertyGroupItem *)arg1 willChangeValue:(id)arg2;
@end

@protocol ABResponderDelegate <ABTabOrderDelegate>
- (void)entryFieldEndAttemptBecomeFirstResponder:(UIView *)arg1;
- (void)entryFieldBeginAttemptBecomeFirstResponder:(UIView *)arg1;
@end

@protocol ABSearchOperationDelegate <NSObject>
- (void)searchOperation:(ABSearchOperation *)arg1 didFindMatches:(NSArray *)arg2 moreComing:(_Bool)arg3;
@end

@protocol ABSimpleTextInputViewControllerDelegate <NSObject>
- (void)simpleTextInputViewController:(ABSimpleTextInputViewController *)arg1 didCompleteWithValue:(id)arg2;

@optional
- (_Bool)simpleTextInputViewControllerShouldDismissKeyboard:(ABSimpleTextInputViewController *)arg1;
@end

@protocol ABStyleProvider <NSObject, NSSecureCoding>
@property(readonly, nonatomic) long long groupCellSelectionStyle;
@property(readonly, nonatomic) struct CGSize groupCellShadowOffset;
@property(readonly, nonatomic) UIColor *groupCellShadowColor;
@property(readonly, nonatomic) UIColor *groupCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *groupCellTextColor;
@property(readonly, nonatomic) UIColor *groupHeaderBackgroudColor;
@property(readonly, nonatomic) UIColor *groupCellBackgroundColor;
@property(readonly, nonatomic) struct CGSize groupAccountNameShadowOffset;
@property(readonly, nonatomic) UIColor *groupAccountNameShadowColor;
@property(readonly, nonatomic) UIColor *groupAccountNameColor;
@property(readonly, nonatomic) UIFont *groupAccountNameFont;
@property(readonly, nonatomic) _Bool groupSectionDrawsDefaultTopShadow;
@property(readonly, nonatomic) double groupSectionHeaderHorizontalPadding;
@property(readonly, nonatomic) double groupSectionHeaderHeight;
@property(readonly, nonatomic) UIColor *groupsTableBackgroundColor;
@property(readonly, nonatomic) _Bool groupsTableShouldRemoveBackgroundView;
@property(readonly, nonatomic) _Bool peoplePickerBarStyleIsTranslucent;
@property(readonly, nonatomic) long long peoplePickerBarStyle;
@property(readonly, nonatomic) _Bool shouldUsePeoplePickerBarStyle;
@property(readonly, nonatomic) _Bool presentDatePickerInPopover;
@property(readonly, nonatomic) _Bool presentNewContactsControllersInPopover;
@property(readonly, nonatomic) _Bool presentModalViewInPopover;
@property(readonly, nonatomic) long long unknownModalPresentationStyle;
@property(readonly, nonatomic) long long composeModalPresentationStyle;
@property(readonly, nonatomic) _Bool shouldDefinePickerTransitionStyle;
@property(readonly, nonatomic) long long pickerTransitionStyle;
@property(readonly, nonatomic) _Bool shouldPropagateStylesToPickers;
@property(readonly, nonatomic) _Bool shouldPropagateStylesThroughUnknownPersonActions;
@property(readonly, nonatomic) UIColor *membersSearchCellBackgroundColor;
@property(readonly, nonatomic) UIColor *membersSearchBackgroundColor;
@property(readonly, nonatomic) UIColor *membersBackgroundColor;
@property(readonly, nonatomic) UIView *memberHeaderBackgroundView;
@property(readonly, nonatomic) UIColor *membersHeaderBackgroundColor;
@property(readonly, nonatomic) UIColor *membersHeaderContentViewBackgroundColor;
@property(readonly, nonatomic) UIColor *membersIndexTrackingBackgroundColor;
@property(readonly, nonatomic) UIColor *membersIndexTextColor;
@property(readonly, nonatomic) double membersIndexMaximumHeight;
@property(readonly, nonatomic) _Bool membersSearchBarIsInTableHeader;
@property(readonly, nonatomic) unsigned long long membersCountToShowIndex;
@property(readonly, nonatomic) unsigned long long membersCountToShowSections;
@property(readonly, nonatomic) long long membersSelectionStyle;
@property(readonly, nonatomic) UIImage *memberSectionListHeaderImage;
@property(readonly, nonatomic) _Bool searchControllerForceKeyboardDisplayEnabled;
@property(readonly, nonatomic) _Bool serverSearchNavigationBarHidingEnabled;
@property(readonly, nonatomic) _Bool searchIsAlwaysActive;
@property(readonly, nonatomic) UIColor *memberSelectedBackgroundColor;
@property(readonly, nonatomic) double memberScrollBarInset;
@property(readonly, nonatomic) UIImage *memberPlaceholderCompanyImage;
@property(readonly, nonatomic) UIImage *memberPlaceholderPersonImage;
@property(readonly, nonatomic) UIImage *memberPhotoOverlayImage;
@property(readonly, nonatomic) UIImage *memberPhotoMaskImage;
@property(readonly, nonatomic) _Bool memberShowContactPhoto;
@property(readonly, nonatomic) struct UIEdgeInsets memberNameInsets;
@property(readonly, nonatomic) struct CGSize memberNameShadowOffset;
@property(readonly, nonatomic) UIColor *memberSearchFieldBackgroundColor;
@property(readonly, nonatomic) UIColor *memberNameSelectedShadowColor;
@property(readonly, nonatomic) UIColor *memberNameShadowColor;
@property(readonly, nonatomic) UIImage *memberNameMeCardDisabledImage;
@property(readonly, nonatomic) UIImage *memberNameMeCardSelectedImage;
@property(readonly, nonatomic) UIImage *memberNameMeCardImage;
@property(readonly, nonatomic) UIColor *memberNameMeCardShadowColor;
@property(readonly, nonatomic) UIColor *memberNameMeCardTextColor;
@property(readonly, nonatomic) UIColor *memberNameSelectedColor;
@property(readonly, nonatomic) UIColor *memberNameDisabledTextColor;
@property(readonly, nonatomic) UIColor *memberNameTextColor;
@property(readonly, nonatomic) double memberNameInterComponentSpacing;
@property(readonly, nonatomic) UIFont *memberNameBoldFontForSectionHeader;
@property(readonly, nonatomic) UIFont *memberNameRegularFontForSectionHeader;
@property(readonly, nonatomic) UIFont *memberNameBoldFont;
@property(readonly, nonatomic) UIFont *memberNamePlaceholderFont;
@property(readonly, nonatomic) UIFont *memberNameRegularFont;
@property(readonly, nonatomic) _Bool labelPickerUsesOpaqueBackground;
@property(readonly, nonatomic) _Bool labelPickerShouldPushCustomLabelCreator;
@property(readonly, nonatomic) _Bool datePickerHasNavigationTitle;
@property(readonly, nonatomic) _Bool cardTableUsesRowFadeAnimation;
@property(readonly, nonatomic) _Bool linkedPhotoLabelStringsDescribeSourceOnly;
@property(readonly, nonatomic) _Bool linkedPhotoPickerIncludesCurrentPhoto;
@property(readonly, nonatomic) double cardLinkingHeaderLabelHeight;
@property(readonly, nonatomic) _Bool linkedCardsShouldAllowDeletion;
@property(readonly, nonatomic) UIView *cardNotesHeaderView;
@property(readonly, nonatomic) double cardNotesHeaderViewHeight;
@property(readonly, nonatomic) _Bool cardNotesLabelIncludesSource;
@property(readonly, nonatomic) _Bool cardAlwaysShowsNotes;
@property(readonly, nonatomic) long long cardCellSelectionStyle;
@property(readonly, nonatomic) UIColor *cardCellDisabledBackgroundColor;
@property(readonly, nonatomic) UIColor *cardCellBackgroundColor;
@property(readonly, nonatomic) double cardContentOccluderDefaultBottomFadingHeight;
@property(readonly, nonatomic) double cardContentOccluderDefaultTopFadingHeight;
@property(readonly, nonatomic) _Bool cardActionsAllowVoiceFavorites;
@property(readonly, nonatomic) _Bool cardActionsAllowFaceTimeFavorites;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonsInsets;
@property(readonly, nonatomic) UIImage *cardActionConferenceIconPressed;
@property(readonly, nonatomic) UIImage *cardActionConferenceIcon;
@property(readonly, nonatomic) double cardActionButtonHeight;
@property(readonly, nonatomic) double cardActionButtonSpacing;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonImageInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonTitleDoubleLineInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonTitleSingleLineInsets;
@property(readonly, nonatomic) UIImage *cardActionButtonBackgroundHighlighted;
@property(readonly, nonatomic) UIImage *cardActionButtonBackgroundNormal;
@property(readonly, nonatomic) long long cardActionButtonType;
@property(readonly, nonatomic) double cardCellVerticalSpacingBetweenAlertsOfSimilarType;
@property(readonly, nonatomic) UIImage *cardCellFacebookBadge;
@property(readonly, nonatomic) double cardCellBadgePaddingLeft;
@property(readonly, nonatomic) long long cardCellAccessoryTypeEditRingtone;
@property(readonly, nonatomic) long long cardCellAccessoryTypeRingtone;
@property(readonly, nonatomic) long long cardCellAccessoryTypeEdit;
@property(readonly, nonatomic) long long cardCellAccessoryType;
@property(readonly, nonatomic) double cardSectionHeaderHeightForFollowingCardActions;
@property(readonly, nonatomic) double cardSectionHeaderHeightForFirstCardActions;
@property(readonly, nonatomic) _Bool cardShouldUseSeparateSectionsForUnknownCardActions;
@property(readonly, nonatomic) double cardSectionHeaderHeightForBottomActions;
@property(readonly, nonatomic) _Bool cardSectionDrawsDefaultTopShadow;
@property(readonly, nonatomic) double cardSectionHeaderHorizontalPadding;
@property(readonly, nonatomic) struct CGSize cardSectionHeaderShadowOffset;
@property(readonly, nonatomic) UIColor *cardSectionHeaderShadowColor;
@property(readonly, nonatomic) UIColor *cardSectionHeaderTextColor;
@property(readonly, nonatomic) UIFont *cardSectionHeaderFont;
@property(readonly, nonatomic) _Bool cardSectionAlwaysWantsHeader;
@property(readonly, nonatomic) UIImage *cardValueClearButtonImage;
@property(readonly, nonatomic) UIColor *cardValueTappableColor;
@property(readonly, nonatomic) struct UIEdgeInsets cardValueEditingInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardValueInsets;
@property(readonly, nonatomic) _Bool cardValueHighlightsWhenTouched;
@property(readonly, nonatomic) struct CGSize cardValueShadowOffset;
@property(readonly, nonatomic) UIColor *cardValueHighlightedShadowColor;
@property(readonly, nonatomic) UIColor *cardValueShadowColor;
@property(readonly, nonatomic) UIColor *cardValueHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardValueBackgroundColor;
@property(readonly, nonatomic) UIFont *cardValueTextFont;
@property(readonly, nonatomic) UIColor *cardValueDisabledTextColor;
@property(readonly, nonatomic) UIColor *cardValueTextColor;
@property(readonly, nonatomic) struct UIEdgeInsets cardLabelInsets;
@property(readonly, nonatomic) UIColor *cardLabelBackgroundColor;
@property(readonly, nonatomic) double cardLabelWidth;
@property(readonly, nonatomic) UIFont *cardLabelEditingTextFont;
@property(readonly, nonatomic) UIFont *cardLabelTextFont;
@property(readonly, nonatomic) struct CGSize cardLabelShadowOffset;
@property(readonly, nonatomic) UIColor *cardLabelHighlightedShadowColor;
@property(readonly, nonatomic) UIColor *cardLabelShadowColor;
@property(readonly, nonatomic) UIColor *cardLabelImportantHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelEmphasizedHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelEditingTextColor;
@property(readonly, nonatomic) UIColor *cardLabelDisabledTextColor;
@property(readonly, nonatomic) UIColor *cardLabelTextColor;
@property(readonly, nonatomic) UIColor *cardLabelSelectedBackgroundColor;
@property(readonly, nonatomic) UIColor *cardSectionBackgroundColor;
@property(readonly, nonatomic) UIColor *cardTableBackgroundColor;
@property(readonly, nonatomic) double cardHeaderEditingImageLeftMargin;
@property(readonly, nonatomic) double cardHeaderEditingImageTopMargin;
@property(readonly, nonatomic) double cardHeaderDisplayImageLeftMargin;
@property(readonly, nonatomic) double cardHeaderDisplayImageTopMargin;
@property(readonly, nonatomic) double cardHeaderViewLeftMargin;
@property(readonly, nonatomic) double cardHeaderViewTopMargin;
@property(readonly, nonatomic) UIColor *cardHeaderBackgroundColor;
@property(readonly, nonatomic) double cardHeaderImageNameEditorSpacing;
@property(readonly, nonatomic) double cardHeaderImageNameSpacing;
@property(readonly, nonatomic) UIColor *cardClippingImageLabelBevelColor;
@property(readonly, nonatomic) UIColor *cardClippingImageLabelColor;
@property(readonly, nonatomic) UIImage *cardPhotoFacebookAttributionImage;
@property(readonly, nonatomic) UIImage *cardPhotoPasteboardMaskImage;
@property(readonly, nonatomic) UIImage *cardPhotoMaskMultipleImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditMultiplePhotoBackdropImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditMultipleOverlayImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditOverlayImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditPlaceholderImage;
@property(readonly, nonatomic) struct CGSize cardPhotoShadowOffset;
@property(readonly, nonatomic) UIImage *cardPhotoShadowImage;
@property(readonly, nonatomic) UIImage *cardPhotoMaskImage;
@property(readonly, nonatomic) struct CGSize cardPhotoOffset;
@property(readonly, nonatomic) double cardPhotoFrameBorderSize;
@property(readonly, nonatomic) _Bool shouldApplyMaskImage;
@property(readonly, nonatomic) _Bool cardPhotoShouldApplyOverlayImageWhenLabelPresent;
@property(readonly, nonatomic) _Bool cardPhotoShouldApplyOverlayImageWhenPersonImagePresent;
@property(readonly, nonatomic) UIImage *cardPhotoOverlayImage;
@property(readonly, nonatomic) UIImage *cardPhotoBackgroundImage;
@property(readonly, nonatomic) UIImage *cardPlaceholderCompanyImage;
@property(readonly, nonatomic) UIImage *cardPlaceholderPersonImage;
@property(readonly, nonatomic) _Bool cardPlaceholderImageShouldApplyMaskAndOverlay;
@property(readonly, nonatomic) _Bool shouldShowCardPhotoPlaceholder;
@property(readonly, nonatomic) _Bool cardHeaderNameViewAlignOnBottom;
@property(readonly, nonatomic) UIColor *cardHeaderDefaultLabelTextColor;
@property(readonly, nonatomic) unsigned long long cardTagNumberOfLines;
@property(readonly, nonatomic) unsigned long long cardNameNumberOfLines;
@property(readonly, nonatomic) UIFont *cardTaglineTextFont;
@property(readonly, nonatomic) UIColor *cardTaglineShadowColor;
@property(readonly, nonatomic) UIColor *cardTaglineTextColor;
@property(readonly, nonatomic) UIFont *cardHeadlineTextFont;
@property(readonly, nonatomic) UIColor *cardHeadlineShadowColor;
@property(readonly, nonatomic) UIColor *cardHeadlineTextColor;
@property(readonly, nonatomic) UIColor *cardTableCellBorderColor;
@property(readonly, nonatomic) _Bool shouldUseCardContentProviderWhenAvailable;
@property(readonly, nonatomic) _UIGraphicsLetterpressStyle *letterpressStyle;
@property(readonly, nonatomic) _Bool cardTableShouldAdjustForKeyboard;
@property(readonly, nonatomic) _Bool cardTableShouldRemoveBackgroundView;
- (_Bool)reloadCallAction;
- (_Bool)refreshTinyActionCell;
- (void)customSetEmphasized:(_Bool)arg1 onCell:(UITableViewCell *)arg2;
- (UIView *)newCustomCardTableScrollingBackgroundView;
- (Class)customCardActionCellClass;
- (Class)customCardCellClass;
- (int)dialogStyleForDeleteConfirmation;
- (UIImage *)cardDeleteButtonImagePressed;
- (UIImage *)cardDeleteButtonImage;
- (struct UIEdgeInsets)cardDeleteButtonInsets;
- (double)cardDeleteButtonHeight;
- (struct UIEdgeInsets)cardCellBackgroundInsetsWhenEditing:(_Bool)arg1;
- (UIView *)newCardDividerViewVertical:(_Bool)arg1;
- (UIColor *)cardCellDividerShadowColorVertical:(_Bool)arg1;
- (UIColor *)cardCellDividerColorVertical:(_Bool)arg1;
- (void)unselectAllCellParts:(UITableViewCell *)arg1;
- (void)selectCustomPartWithFrame:(struct CGRect)arg1 occupiedCorners:(unsigned long long)arg2 forCell:(UITableViewCell *)arg3;
- (void)selectWholePartForCell:(UITableViewCell *)arg1;
- (void)selectValuePartForCell:(UITableViewCell *)arg1;
- (void)selectLabelPartForCell:(UITableViewCell *)arg1;
- (UITableViewCell *)cardTableView:(UITableView *)arg1 prepareCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (_Bool)cardTableView:(UITableView *)arg1 wantsHeaderForProperty:(int)arg2 inSection:(long long)arg3 whenEditing:(_Bool)arg4;
- (_Bool)personTableHeaderViewScrollsWhenEditing:(_Bool)arg1;
- (double)cardHeaderSpacingFromCardBodyWhenEditing:(_Bool)arg1;
- (double)cardTableViewLinkingHeaderBottomPaddingWhenEditing:(_Bool)arg1;
- (double)cardTableViewLinkingHeaderTopPaddingWhenEditing:(_Bool)arg1;
- (double)cardTableViewSectionFooterHeightWhenEditing:(_Bool)arg1;
- (double)cardTableViewSectionHeaderHeightWhenEditing:(_Bool)arg1;
- (double)cardMaxHeightForSwellTextViewWhenEditing:(_Bool)arg1;
- (double)cardNotesMinimumHeightWhenEditing:(_Bool)arg1;
- (void)setIndicatesFaceTimeHistory:(_Bool)arg1 onActionButton:(UIButton *)arg2;
- (UIButton *)newCardActionButton;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (UIColor *)editorViewColor;
- (UIFont *)editorViewSmallFont;
- (UIFont *)editorViewLargeFont;
- (double)personEditorFieldVerticalInset;
- (struct CGSize)personActionShadowOffset;
- (UIColor *)personActionShadowColor;
- (UIColor *)personActionHighlightedColor;
- (UIColor *)personActionColor;
- (UIFont *)personActionFont;
- (struct CGSize)personNoValueLabelShadowOffset;
- (UIColor *)personNoValueLabelShadowColor;
- (UIColor *)personNoValueLabelTextColor;
- (UIFont *)personNoValueLabelFont;
- (struct UIEdgeInsets)cardValueInsetsWhenEditing:(_Bool)arg1;
- (UIColor *)personValueImportantHighlightColor;
- (UIColor *)personValueImportantColor;
- (UIColor *)personValueEmphasizedHighlightColor;
- (UIColor *)personValueEmphasizedColor;
- (UIColor *)personValueHighlightColor;
- (UIColor *)personValueColor;
- (UIFont *)personValueFont;
- (double)personValueFontMinSize;
- (NSString *)copyLocalizedPropertyName:(int)arg1 lowercase:(_Bool)arg2;
- (NSString *)copyLocalizedLabel:(NSString *)arg1;
- (struct CGSize)personLabelShadowOffset;
- (UIColor *)personLabelShadowColor;
- (UIColor *)personLabelHighlightedColor;
- (UIColor *)personLabelColor;
- (UIFont *)personLabelFont;
- (double)personLabelFontMinSize;
- (double)personViewHorizontalCellInset;
- (double)personViewRowHeightWhenEditing:(_Bool)arg1;
- (struct CGSize)personHeaderShadowOffset;
- (UIColor *)personHeaderShadowColor;
- (UIColor *)personHeaderPasteboardColor;
- (double)personViewHeaderNameViewTextVerticalInset;
- (double)personViewHeaderNameViewTextHorizontalInset;
- (double)personViewHeaderImageHeight;
- (double)personViewHeaderImageWidth;
- (double)personViewVerticalSpacing;
- (double)personViewHeaderMinimumHeight;
- (double)personViewHeaderRightMargin;
- (UIImage *)personViewGetNameViewAccessoryImageSelected;
- (UIImage *)personViewGetNameViewAccessoryImage;
- (UIImage *)personViewGetFavoritesBadgeHighlighted;
- (UIImage *)personViewGetFavoritesBadge;
- (UIButton *)accessoryButtonForRelatedNames;
- (UIView *)accessoryViewForVideoBadge;
- (UIView *)accessoryViewForFavoritesBadge;
- (UIView *)accessoryViewForMailVIPBadge;
- (UIView *)newBackgroundViewForCellStyle:(int)arg1 selected:(_Bool)arg2;
- (UIView *)newTableFooterViewForCellStyle:(int)arg1;
- (UIView *)newAccessoryDisclosureIndicatorForCellStyle:(int)arg1;
- (UIColor *)separatorBottomShadowColorForCellStyle:(int)arg1;
- (UIColor *)separatorTopShadowColorForCellStyle:(int)arg1;
- (UIColor *)separatorColorForCellStyle:(int)arg1;
- (long long)separatorStyleForCellStyle:(int)arg1;
- (UIColor *)shadowColorForCellStyle:(int)arg1;
- (int)abCellStyleForCardTableLinkingUI;
- (int)abCellStyleForCardTableWhenEditing:(_Bool)arg1;
- (int)abCellStyleForMembersTable;
- (int)abCellStyleForGroupsTablePlain;
- (int)abCellStyleForGroupsTableGrouped;
@end

@protocol ABStyleProviding
- (id <ABStyleProvider>)styleProvider;
@end

@protocol ABSwellTextViewDelegate <NSObject>
- (void)swellTextView:(ABSwellTextView *)arg1 didChangeSize:(struct CGSize)arg2;
- (void)swellTextViewTextDidChange:(ABSwellTextView *)arg1;
- (void)swellTextViewDidEndEditing:(ABSwellTextView *)arg1;
- (void)swellTextViewDidBeginEditing:(ABSwellTextView *)arg1;
- (_Bool)swellTextViewShouldEndEditing:(ABSwellTextView *)arg1;
- (_Bool)swellTextViewShouldBeginEditing:(ABSwellTextView *)arg1;
@end

@protocol ABTabOrderDelegate
- (_Bool)ABTabToNextResponder:(_Bool)arg1 fromView:(UIView *)arg2;
@end

@protocol ABText <NSObject>
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;
@end

@protocol ABViewControllerBannerViewProtocol
- (void)setBannerTitle:(NSString *)arg1 value:(NSString *)arg2;
@end

@protocol AFContextProvider
- (NSArray *)getCurrentContext;
- (_Bool)allowContextProvider:(id <AFContextProvider>)arg1;
@end

@protocol CNContactPickerContentDelegate <NSObject>
- (void)pickerDidCancel;
- (void)pickerDidSelectContact:(CNContact *)arg1 propertyKey:(NSString *)arg2 propertyIdentifier:(int)arg3;
@end

@protocol CNContactPickerContentViewController <CNContactPickerServiceProtocol>
@property __weak id <CNContactPickerContentDelegate> delegate;
- (void)invalidate;

@optional
@property void *addressBook;
@end

@protocol CNContactPickerHostProtocol <NSObject>
- (void)pickerDidCancel;
- (void)pickerDidSelectContactWithRecordID:(int)arg1 vCardData:(NSData *)arg2 propertyKey:(NSString *)arg3 propertyIdentifier:(int)arg4;
@end

@protocol CNContactPickerServiceProtocol <NSObject>
- (void)setupWithOptions:(NSDictionary *)arg1 readyBlock:(void (^)(NSError *))arg2;
@end

@protocol HKMedicalIDViewControllerDelegate <NSObject>

@optional
- (void)medicalIDViewControllerDidFinish:(HKMedicalIDViewController *)arg1;
- (void)medicalIDViewControllerDidDelete:(HKMedicalIDViewController *)arg1;
- (void)medicalIDViewControllerDidSave:(HKMedicalIDViewController *)arg1;
- (void)medicalIDViewControllerDidCancel:(HKMedicalIDViewController *)arg1;
@end

@protocol IDSIDQueryControllerDelegate <NSObject>

@optional
- (void)idStatusUpdatedForDestinations:(NSDictionary *)arg1 service:(NSString *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol QLPreviewControllerDataSource
- (id <QLPreviewItem>)previewController:(QLPreviewController *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(QLPreviewController *)arg1;
@end

@protocol QLPreviewControllerDelegate <NSObject>

@optional
- (UIImage *)previewController:(QLPreviewController *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewController:(QLPreviewController *)arg1 frameForPreviewItem:(id <QLPreviewItem>)arg2 inSourceView:(id *)arg3;
- (_Bool)previewController:(QLPreviewController *)arg1 shouldOpenURL:(NSURL *)arg2 forPreviewItem:(id <QLPreviewItem>)arg3;
- (void)previewControllerDidDismiss:(QLPreviewController *)arg1;
- (void)previewControllerWillDismiss:(QLPreviewController *)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) NSString *previewItemTitle;
@end

@protocol TKTonePickerStyleProvider <NSObject>
@property(readonly, nonatomic) struct UIEdgeInsets tonePickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset tonePickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *tonePickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomTonePickerHeaderView;
@property(readonly, nonatomic) UIColor *tonePickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *tonePickerCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *tonePickerCellTextColor;
@property(readonly, nonatomic) UIFont *tonePickerCellTextFont;
@property(readonly, nonatomic) long long tonePickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool tonePickerUsesOpaqueBackground;
- (UIView *)newAccessoryDisclosureIndicatorViewForTonePickerCell;
- (UIView *)newBackgroundViewForSelectedTonePickerCell:(_Bool)arg1;

@optional
@property(readonly, nonatomic) _Bool tonePickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) long long tonePickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *tonePickerCustomTableSeparatorColor;
@end

@protocol TKVibrationPickerStyleProvider <NSObject>
@property(readonly, nonatomic) struct UIEdgeInsets vibrationPickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset vibrationPickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomVibrationPickerHeaderView;
@property(readonly, nonatomic) UIColor *vibrationPickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerCellTextFont;
@property(readonly, nonatomic) long long vibrationPickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool vibrationPickerUsesOpaqueBackground;
- (UIView *)newAccessoryDisclosureIndicatorViewForVibrationPickerCell;
- (UIView *)newBackgroundViewForSelectedVibrationPickerCell:(_Bool)arg1;

@optional
@property(readonly, nonatomic) _Bool vibrationPickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) long long vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *vibrationPickerCustomTableSeparatorColor;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol UIActivityItemSourceAttachment <NSObject>

@optional
- (NSString *)activityViewController:(UIActivityViewController *)arg1 attachmentNameForActivityType:(NSString *)arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UIModalViewDelegate <NSObject>

@optional
- (void)modalView:(UIModalView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)modalView:(UIModalView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentModalView:(UIModalView *)arg1;
- (void)willPresentModalView:(UIModalView *)arg1;
- (void)modalViewCancel:(UIModalView *)arg1;
- (void)modalView:(UIModalView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchControllerDelegate <NSObject>

@optional
- (void)presentSearchController:(UISearchController *)arg1;
- (void)didDismissSearchController:(UISearchController *)arg1;
- (void)willDismissSearchController:(UISearchController *)arg1;
- (void)didPresentSearchController:(UISearchController *)arg1;
- (void)willPresentSearchController:(UISearchController *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UISearchResultsUpdating <NSObject>
- (void)updateSearchResultsForSearchController:(UISearchController *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDataSourcePrivate <UITableViewDataSource>
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;

@optional
- (NSString *)tableView:(UITableView *)arg1 detailTextForHeaderInSection:(long long)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 indexPathForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerRestoration
+ (UIViewController *)viewControllerWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@interface ABAbstractPropertyGroup : NSObject
{
    NSArray *_people;
    id <ABStyleProvider> _styleProvider;
    _Bool _hasChanges;
    ABUIPerson *_preinsertedPerson;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) _Bool hasChanges; // @synthesize hasChanges=_hasChanges;
@property(retain, nonatomic) ABUIPerson *preinsertedPerson; // @synthesize preinsertedPerson=_preinsertedPerson;
@property(retain, nonatomic) NSArray *people; // @synthesize people=_people;
- (_Bool)canSave;
- (void)reloadFromModel;
- (void)updateRecord;
- (int)property;
- (void)dealloc;
- (id)init;

@end

@interface ABAbstractViewController : UITableViewController
{
    ABModel *_model;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) ABModel *model; // @synthesize model=_model;
- (void)updateNavigationButtons;
- (int)behavior;
- (id)peoplePickerNavigationController;
- (struct CGSize)contentSize;
- (void)setParentViewController:(id)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (_Bool)supportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)dealloc;
- (void)setAddressBook:(void *)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithModel:(id)arg1;

@end

@interface ABAccountsAndGroupDataSource : NSObject <UITableViewDataSource>
{
    NSArray *_accountIdentifiers;
    NSArray *_accountDisplayNames;
    NSDictionary *_groupsByAccountIdentifier;
    ACAccountStore *_accountStore;
    _Bool _hidesSearchableSources;
    _Bool _hidesGlobalGroupWrapper;
    _Bool _dirty;
    ABModel *_model;
}

@property(retain, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
@property(nonatomic, getter=isDirty) _Bool dirty; // @synthesize dirty=_dirty;
@property(nonatomic) _Bool hidesGlobalGroupWrapper; // @synthesize hidesGlobalGroupWrapper=_hidesGlobalGroupWrapper;
@property(nonatomic) _Bool hidesSearchableSources; // @synthesize hidesSearchableSources=_hidesSearchableSources;
@property(retain, nonatomic) ABModel *model; // @synthesize model=_model;
- (void)cancelScheduledRefresh;
- (void)scheduleRefresh;
- (long long)numberOfGroupsForAccountIdentifier:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfGroupsInAccountAtIndex:(long long)arg1;
- (id)accountDisplayNameAtIndex:(long long)arg1;
- (id)newContactsFilterFromSelectedGroupWrappers;
- (id)indexPathForGroupWrapper:(id)arg1;
- (id)groupWrapperForIndexPath:(id)arg1;
- (void)reloadData;
- (void)reloadDataIncludingAccountStore:(_Bool)arg1 usingArchivedState:(_Bool)arg2;
- (id)defaultGroupWrapper;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABAccountsAndGroupsViewController : ABAbstractViewController <UITableViewDelegate>
{
    UIRefreshControl *_refreshControl;
    ABAccountsAndGroupDataSource *_dataSource;
    _Bool _needsReload;
    _Bool _tableViewNeedsReloadAfterResume;
    _Bool _showsRefreshButton;
    ABPeoplePickerNavigationController *_peoplePickerNavigationController;
}

@property(nonatomic) ABPeoplePickerNavigationController *peoplePickerNavigationController; // @synthesize peoplePickerNavigationController=_peoplePickerNavigationController;
@property(readonly, nonatomic) ABAccountsAndGroupDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void)modelDatabaseChange:(id)arg1;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)_updateDisplayedContactsFilterFromSelection;
- (void)done:(id)arg1;
- (int)abViewControllerType;
- (void)applicationDidResume;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (_Bool)hidesGlobalGroupWrapper;
- (void)setHidesGlobalGroupWrapper:(_Bool)arg1;
- (_Bool)hidesSearchableSources;
- (void)setHidesSearchableSources:(_Bool)arg1;
- (void)updateRefreshButton;
- (void)refreshEverythingNow;
- (void)reloadData;
- (void)setModel:(id)arg1;
- (id)model;
- (void)dealloc;
- (id)initWithModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABActionsController : NSObject
{
    int _property;
    int _multiValueIdentifier;
    id _value;
    NSString *_stringValue;
    void *_context;
    int _lastPropertyForActions;
    struct __CFArray *_actionsForProperty;
    ABUIPerson *_person;
}

+ (int)defaultActionForProperty:(int)arg1;
+ (id)newActionsControllerForProperty:(int)arg1;
@property(retain, nonatomic) ABUIPerson *person; // @synthesize person=_person;
- (void)_performAction:(int)arg1 forProperty:(int)arg2;
- (int)_actionAtIndex:(long long)arg1 forProperty:(int)arg2;
- (struct __CFArray *)_actionsForProperty:(int)arg1;
- (void)setContext:(void *)arg1;
- (void *)context;
- (void)setMultiValueIdentifier:(int)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)performActionAtIndex:(long long)arg1 forProperty:(int)arg2;
- (void)performDefaultAction;
- (int)defaultAction;
- (void)performAction:(int)arg1;
- (id)urlForAction:(int)arg1 forProperty:(int)arg2;
- (void)resetPrimaryPropertyActions;
- (id)titleAtIndex:(long long)arg1 forProperty:(int)arg2;
- (id)titleForAction:(int)arg1;
- (long long)actionsCountForProperty:(int)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithProperty:(int)arg1;

@end

@interface ABActionSheet : UIActionSheet
{
    struct __CFArray *_tags;
    struct __CFArray *_tag2s;
    struct __CFArray *_tag3s;
    struct __CFArray *_tag4s;
    void *_ab_context;
}

@property(nonatomic) void *ab_context; // @synthesize ab_context=_ab_context;
- (long long)ab_addButtonWithTitle:(id)arg1 tag:(long long)arg2;
- (long long)ab_addButtonWithTitle:(id)arg1 tag:(long long)arg2 tag2:(long long)arg3;
- (const void *)ab_tag4AtIndex:(long long)arg1;
- (const void *)ab_tag3AtIndex:(long long)arg1;
- (long long)ab_tag2AtIndex:(long long)arg1;
- (long long)ab_tagAtIndex:(long long)arg1;
- (id)ab_addButtonWithTitle:(id)arg1 label:(id)arg2 tag:(long long)arg3 tag2:(long long)arg4 tag3:(const void *)arg5 tag4:(const void *)arg6;
- (id)ab_addButtonWithTitle:(id)arg1 label:(id)arg2 tag:(long long)arg3 tag2:(long long)arg4 tag3:(const void *)arg5;
- (id)ab_addButtonWithTitle:(id)arg1 label:(id)arg2 tag:(long long)arg3 tag2:(long long)arg4;
- (id)ab_addButtonWithTitle:(id)arg1 label:(id)arg2 tag:(long long)arg3;
- (void)dealloc;
- (id)init;
- (id)_addButtonWithTitle:(id)arg1 label:(id)arg2;
- (long long)_addButtonWithTitle:(id)arg1;
- (id)initWithTitle:(id)arg1 delegate:(id)arg2 cancelButtonTitle:(id)arg3 destructiveButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;

@end

@interface ABActionSheetDelegate : NSObject <UIActionSheetDelegate>
{
    id _target;
    SEL _action;
}

- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)initWithActionSheetTarget:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABBannerView : UITableViewCell
{
    NSString *_title;
    NSString *_value;
}

+ (float)defaultHeight;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void)cellWasDoubleTapped:(id)arg1;
- (void)cellWasLongPressed:(id)arg1;
- (void)showMenu;
- (void)menuDidHide:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_updateLabel;
- (void)setTitle:(id)arg1 value:(id)arg2;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABCapabilitiesManager : NSObject <IDSIDQueryControllerDelegate>
{
    _Bool _isListeningToIDSServiceAvailability;
    _Bool _isListeningToIDSQueryController;
    NSMutableDictionary *_destinationStatus;
}

+ (void)_setDefaultCapabilitiesManager:(id)arg1;
+ (id)defaultCapabilitiesManager;
- (_Bool)_isAppAvailable:(id)arg1;
- (_Bool)isFaceTimeAppAvailable;
- (_Bool)isMessagesAppAvailable;
- (_Bool)isMailAppAvailable;
- (_Bool)isPhoneAppAvailable;
- (_Bool)isFaceTimeAudioAvailable;
- (_Bool)isWeiboServiceAvailable;
- (_Bool)isTwitterServiceAvailable;
- (_Bool)hasAdditionalTextTones;
- (void)idStatusUpdatedForDestinations:(id)arg1 service:(id)arg2;
- (void)_startListeningToIDSIDQueryControllerIfNecessary;
- (void)_startListeningToIDSServiceAvailabilityIfNecessary;
- (void)removeIDSServiceAvailabilityListener:(id)arg1;
- (void)addIDSServiceAvailabilityListener:(id)arg1 selector:(SEL)arg2;
- (id)conferenceURLForDestinationID:(id)arg1;
- (id)conferenceURLForPhoneNumber:(id)arg1;
- (_Bool)hasPreviouslyConferencedWithID:(id)arg1;
- (_Bool)isConferencingEverGonnaBeAvailable;
- (_Bool)isConferencingAvailable;
- (_Bool)isMadridConfigured;
- (_Bool)isMMSConfigured;
- (_Bool)isEmailConfigured;
- (_Bool)hasCameraCapability;
- (_Bool)hasSiriCapability;
- (_Bool)hasVibratorCapability;
- (_Bool)hasSMSCapability;
- (_Bool)hasCellularDataCapability;
- (_Bool)hasCellularTelephonyHardwareCapability;
- (_Bool)hasCellularTelephonyCapability;
- (_Bool)hasTelephonyCapability;
- (_Bool)isSensitiveUIAllowed;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABCardActionGroupItem : ABCardGroupItem
{
    NSMutableArray *_actions;
}

+ (id)actionGroupItemWithActions:(id)arg1;
+ (id)actionGroupItemWithAction:(id)arg1;
@property(readonly, nonatomic) NSArray *actions; // @synthesize actions=_actions;
- (void)addAction:(id)arg1;
- (Class)cellClass;
- (void)dealloc;
- (id)initWithAction:(id)arg1;
- (id)init;

@end

@interface ABCardContentPluginManager : NSObject
{
    NSString *_pluginsDirectory;
}

@property(readonly, nonatomic) NSString *pluginsDirectory; // @synthesize pluginsDirectory=_pluginsDirectory;
- (Class)contentProviderForBundleName:(id)arg1;
- (id)bundleNameForLabel:(id)arg1;
- (Class)contentProviderClassForPerson:(void *)arg1;
- (void)dealloc;

@end

@interface ABCardFaceTimeGroup : ABCardGroup
{
    NSArray *_displayItems;
}

- (id)displayItems;
- (void)dealloc;

@end

@interface ABCardFaceTimeGroupItem : ABCardGroupItem
{
}

@end

@interface ABCardGroup : NSObject <NSCopying>
{
    NSMutableArray *_items;
    NSMutableArray *_actions;
    NSArray *_actionItems;
    _Bool _useSplitActions;
    _Bool _addSpacerFromPreviousGroup;
    CNContact *_contact;
    NSString *_title;
}

+ (id)groupForContact:(id)arg1;
@property(nonatomic) _Bool addSpacerFromPreviousGroup; // @synthesize addSpacerFromPreviousGroup=_addSpacerFromPreviousGroup;
@property(nonatomic) _Bool useSplitActions; // @synthesize useSplitActions=_useSplitActions;
@property(readonly, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (id)_loadActionItems;
- (id)description;
- (void)removeActionWithTitle:(id)arg1;
- (void)removeActionWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)addAction:(id)arg1 withTitle:(id)arg2 color:(id)arg3 transportType:(long long)arg4;
- (id)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
- (id)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 destructive:(_Bool)arg4;
- (void)addAction:(id)arg1 withTitle:(id)arg2;
@property(readonly, nonatomic) NSArray *actionItems;
@property(readonly, nonatomic) NSArray *editingItems;
@property(readonly, nonatomic) NSArray *displayItems;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithContact:(id)arg1;

@end

@interface ABCardGroupItem : NSObject
{
}

@end

@interface ABCardLinkedCardsGroup : ABCardGroup
{
    NSArray *_linkedContacts;
}

@property(retain, nonatomic) NSArray *linkedContacts; // @synthesize linkedContacts=_linkedContacts;
- (id)editingItems;
- (id)displayItems;
- (id)title;
- (void)dealloc;

@end

@interface ABCardLinkedCardsGroupItem : ABCardGroupItem
{
    CNContact *_contact;
}

@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (id)initWithContact:(id)arg1;

@end

@interface ABCardLinkedCardsPlaceholderGroupItem : ABCardGroupItem
{
}

@property(readonly, nonatomic) NSString *title;

@end

@interface ABCardPropertyGroup : ABCardGroup
{
    NSArray *_propertyItems;
    NSArray *_displayItems;
    NSArray *_editingItems;
    NSArray *_originalEditingItems;
    _Bool _showActionsWhenEmpty;
    _Bool _isAdded;
    NSString *_property;
    NSArray *_contacts;
    NSArray *_deletedItems;
}

+ (id)groupForProperty:(id)arg1 contact:(id)arg2 withLinkedContacts:(id)arg3;
@property(retain, nonatomic) NSArray *deletedItems; // @synthesize deletedItems=_deletedItems;
@property(nonatomic) _Bool isAdded; // @synthesize isAdded=_isAdded;
@property(nonatomic) _Bool showActionsWhenEmpty; // @synthesize showActionsWhenEmpty=_showActionsWhenEmpty;
@property(copy, nonatomic) NSArray *contacts; // @synthesize contacts=_contacts;
@property(readonly, nonatomic) NSArray *propertyItems; // @synthesize propertyItems=_propertyItems;
@property(readonly, nonatomic) NSString *property; // @synthesize property=_property;
- (id)_nextAvailableSocialService;
- (id)_nextAvailableInstantMessageService;
- (id)_nextAvailableLabel;
- (id)_nextAvailableLabelInLabels:(id)arg1 withValueSelector:(SEL)arg2;
- (id)_availableLabelsInLabels:(id)arg1 forItem:(id)arg2 withValueSelector:(SEL)arg3 usedLabelsCount:(long long *)arg4;
- (id)supportedLabelsForItem:(id)arg1;
- (void)saveChangesForItems:(id)arg1;
- (void)_updateNameValuesForItems:(id)arg1;
- (_Bool)_arrayContainsMaxAllowedItems:(id)arg1;
- (_Bool)canAddEditingItem;
- (_Bool)labelsAreUnique;
- (_Bool)isRequired;
- (_Bool)_shoulShowGroupWhenEditing:(_Bool)arg1;
- (id)_itemToBeMergedWith:(id)arg1 fromItems:(id)arg2 forEditing:(_Bool)arg3;
- (id)_mergeItems:(id)arg1 forEditing:(_Bool)arg2;
- (id)_loadPropertyItems;
@property(retain, nonatomic) NSArray *editingItems;
- (id)displayItems;
- (void)saveChanges;
- (void)reloadDataPreservingChanges:(_Bool)arg1;
- (void)removeEditingItem:(id)arg1;
- (_Bool)addEditingItem;
- (id)emptyLabeledValue;
- (id)nextAvailableLabel;
@property(readonly, nonatomic) _Bool modified;
@property(readonly, nonatomic, getter=isMultiLine) _Bool multiLine;
@property(readonly, nonatomic, getter=isFixedValue) _Bool fixedValue;
@property(readonly, nonatomic, getter=isMultiValue) _Bool multiValue;
@property(readonly, nonatomic) _Bool allowsAdding;
- (id)description;
- (void)dealloc;
- (id)initWithProperty:(id)arg1 contact:(id)arg2 withLinkedContacts:(id)arg3;

@end

@interface ABCardPropertyPicker : UIView <UITableViewDataSource, UITableViewDelegate, ABStyleProviding>
{
    UITableView *_tableView;
    NSArray *_allProperties;
    NSArray *_policies;
    id _delegate;
}

@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)styleProvider;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)deselectAllRowsWithAnimation:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setProperties:(struct __CFArray *)arg1;
- (_Bool)propertyIsAllowed:(int)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 policies:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABChameleonCell : UITableViewCell
{
    int _abCellStyle;
    id <ABStyleProvider> _styleProvider;
    _Bool _hasConfiguredBackgroundViews;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) int abCellStyle; // @synthesize abCellStyle=_abCellStyle;
- (void)setSectionLocation:(int)arg1 animated:(_Bool)arg2;
- (void)_updateTextStylesForCellStyle;
- (void)_updateBackgroundViewsForCellStyleAndLocation;
- (void)dealloc;

@end

@interface ABChameleonCellBackgroundView : UIView
{
    int _abCellStyle;
    int _sectionLocation;
}

@property(nonatomic) int sectionLocation; // @synthesize sectionLocation=_sectionLocation;
@property(nonatomic) int abCellStyle; // @synthesize abCellStyle=_abCellStyle;

@end

@interface ABClippingImageView : UIView
{
    UIImage *_clippingImage;
    UIImage *_image;
    NSArray *_labelLines;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_canDrawContent;
- (void)setClippingImage:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

@interface CNContactPicker : UIViewController <CNContactPickerContentDelegate>
{
    _Bool _ignoreViewWillBePresented;
    _Bool _hidesSearchableSources;
    _Bool _allowsEditing;
    _Bool _allowsBlocking;
    _Bool _allowsCancel;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    _Bool _allowsFaceTime;
    _Bool _allowsSounds;
    _Bool _hidesPromptInLandscape;
    _Bool _defaultViewControllerVisible;
    NSArray *_displayedKeys;
    id <CNContactPickerDelegate> _delegate;
    NSPredicate *_predicateForEnablingContact;
    NSPredicate *_predicateForSelectionOfContact;
    NSPredicate *_predicateForSelectionOfProperty;
    long long _behavior;
    NSString *_prompt;
    NSString *_bannerTitle;
    NSString *_bannerValue;
    UIViewController<CNContactPickerContentViewController> *_viewController;
}

@property(retain, nonatomic) UIViewController<CNContactPickerContentViewController> *viewController; // @synthesize viewController=_viewController;
@property(readonly, getter=isDefaultViewControllerVisible) _Bool defaultViewControllerVisible; // @synthesize defaultViewControllerVisible=_defaultViewControllerVisible;
@property(copy, nonatomic) NSString *bannerValue; // @synthesize bannerValue=_bannerValue;
@property(copy, nonatomic) NSString *bannerTitle; // @synthesize bannerTitle=_bannerTitle;
@property(nonatomic) _Bool hidesPromptInLandscape; // @synthesize hidesPromptInLandscape=_hidesPromptInLandscape;
@property(copy, nonatomic) NSString *prompt; // @synthesize prompt=_prompt;
@property(nonatomic) _Bool allowsSounds; // @synthesize allowsSounds=_allowsSounds;
@property(nonatomic) _Bool allowsFaceTime; // @synthesize allowsFaceTime=_allowsFaceTime;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(nonatomic) _Bool allowsCancel; // @synthesize allowsCancel=_allowsCancel;
@property(nonatomic) _Bool allowsBlocking; // @synthesize allowsBlocking=_allowsBlocking;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(nonatomic) _Bool hidesSearchableSources; // @synthesize hidesSearchableSources=_hidesSearchableSources;
@property long long behavior; // @synthesize behavior=_behavior;
@property(copy, nonatomic) NSPredicate *predicateForSelectionOfProperty; // @synthesize predicateForSelectionOfProperty=_predicateForSelectionOfProperty;
@property(copy, nonatomic) NSPredicate *predicateForSelectionOfContact; // @synthesize predicateForSelectionOfContact=_predicateForSelectionOfContact;
@property(copy, nonatomic) NSPredicate *predicateForEnablingContact; // @synthesize predicateForEnablingContact=_predicateForEnablingContact;
@property(nonatomic) __weak id <CNContactPickerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *displayedKeys; // @synthesize displayedKeys=_displayedKeys;
- (void).cxx_destruct;
- (void)pickerDidCancel;
- (void)pickerDidSelectContact:(id)arg1 propertyKey:(id)arg2 propertyIdentifier:(int)arg3;
- (void)popToDefaultViewController:(_Bool)arg1;
- (void)closePickerIfNeeded;
- (void)_prepareViewController;
- (void)_setupViewController;
- (void)_setViewController:(id)arg1;
- (void)_endDelayingPresentation;
- (_Bool)_isDelayingPresentation;
- (void)_viewWillBePresented;
- (void)_checkConsistencyFromProperties:(id)arg1;
- (id)styleProvider;
- (void *)_addressBook;
- (id)_propertiesSource;
- (id)_pickerPresentedViewController;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactAction : NSObject
{
    _Bool _destructive;
    id <ABContactActionDelegate> _delegate;
    CNContact *_contact;
    NSString *_title;
    id _target;
    SEL _selector;
    UIColor *_color;
    long long _transportType;
    CNContactStyle *_contactStyle;
}

+ (id)contactActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 destructive:(_Bool)arg4;
+ (id)contactActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(nonatomic) long long transportType; // @synthesize transportType=_transportType;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic, getter=isDestructive) _Bool destructive; // @synthesize destructive=_destructive;
@property(readonly, nonatomic) SEL selector; // @synthesize selector=_selector;
@property(readonly, retain, nonatomic) id target; // @synthesize target=_target;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
@property(nonatomic) id <ABContactActionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;
- (void)performActionWithSender:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 destructive:(_Bool)arg4;
- (id)initWithContact:(id)arg1;

@end

@interface ABContactActionCell : ABLabeledCell
{
    UILabel *_label;
    ABTransportButton *_transportIcon;
}

@property(retain, nonatomic) ABTransportButton *transportIcon; // @synthesize transportIcon=_transportIcon;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (id)variableConstraints;
@property(readonly, nonatomic) ABContactAction *action;
@property(readonly, nonatomic) ABCardActionGroupItem *actionGroupItem;
- (void)setCardGroupItem:(id)arg1;
- (void)setLabelTextAttributes:(id)arg1;
- (_Bool)shouldPerformDefaultAction;
- (double)minCellHeight;
- (id)labelView;
- (void)dealloc;

@end

@interface ABContactActionSplitCell : ABLabeledCell
{
    UIButton *_leftLabel;
    UIButton *_rightLabel;
}

@property(readonly, nonatomic) UIButton *rightLabel; // @synthesize rightLabel=_rightLabel;
@property(readonly, nonatomic) UIButton *leftLabel; // @synthesize leftLabel=_leftLabel;
- (void)_setupButton:(id)arg1 forAction:(id)arg2;
- (id)constantConstraints;
- (void)setLabelTextAttributes:(id)arg1;
- (id)rightMostView;
- (id)labelView;
- (double)minCellHeight;
- (id)standardButton;
- (void)setCardGroupItem:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABContactAddFavoriteAction : ABPropertyAction <ABPropertyBestFaceTimeQueryDelegate>
{
    _Bool _allowPhoneFavorites;
    _Bool _allowFaceTimeFavorites;
    _Bool _allowFaceTimeAudioFavorites;
    _Bool _hasFaceTimeFavorite;
    _Bool _hasFaceTimeAudioFavorite;
    ABPropertyBestFaceTimeQuery *_bestFaceTimeQuery;
    NSArray *_filteredPhoneItems;
}

@property(nonatomic) _Bool hasFaceTimeAudioFavorite; // @synthesize hasFaceTimeAudioFavorite=_hasFaceTimeAudioFavorite;
@property(nonatomic) _Bool hasFaceTimeFavorite; // @synthesize hasFaceTimeFavorite=_hasFaceTimeFavorite;
@property(retain, nonatomic) NSArray *filteredPhoneItems; // @synthesize filteredPhoneItems=_filteredPhoneItems;
@property(retain, nonatomic) ABPropertyBestFaceTimeQuery *bestFaceTimeQuery; // @synthesize bestFaceTimeQuery=_bestFaceTimeQuery;
@property(nonatomic) _Bool allowFaceTimeAudioFavorites; // @synthesize allowFaceTimeAudioFavorites=_allowFaceTimeAudioFavorites;
@property(nonatomic) _Bool allowFaceTimeFavorites; // @synthesize allowFaceTimeFavorites=_allowFaceTimeFavorites;
@property(nonatomic) _Bool allowPhoneFavorites; // @synthesize allowPhoneFavorites=_allowPhoneFavorites;
- (void)_saveFavorite:(id)arg1 withType:(int)arg2;
- (void)_queryFaceTimeStatus;
- (void)_filterFavoritedItems;
- (void)queryComplete;
- (void)performActionWithSender:(id)arg1;
- (_Bool)canPerformAction;
- (void)dealloc;
- (id)initWithContact:(id)arg1 propertyItems:(id)arg2;

@end

@interface ABContactAddLinkedCardAction : ABContactAction <ABPeoplePickerNavigationControllerDelegate, ABPersonViewControllerDelegate>
{
    CNContact *_chosenContact;
    NSObject<ABContactAddLinkedCardActionDelegate> *_linkedCardActionDelegate;
    ABPeoplePickerNavigationController *_peoplePicker;
    CNContact *_selectedContact;
}

@property(retain, nonatomic) CNContact *selectedContact; // @synthesize selectedContact=_selectedContact;
@property(retain, nonatomic) ABPeoplePickerNavigationController *peoplePicker; // @synthesize peoplePicker=_peoplePicker;
@property(nonatomic) NSObject<ABContactAddLinkedCardActionDelegate> *linkedCardActionDelegate; // @synthesize linkedCardActionDelegate=_linkedCardActionDelegate;
@property(retain, nonatomic) CNContact *chosenContact; // @synthesize chosenContact=_chosenContact;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)peoplePickerLinkButtonTapped;
- (void)performActionWithSender:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactAddNewFieldAction : ABContactAction
{
    id <ABContactGroupPickerDelegate> _groupPickerDelegate;
}

@property(nonatomic) id <ABContactGroupPickerDelegate> groupPickerDelegate; // @synthesize groupPickerDelegate=_groupPickerDelegate;
- (void)performActionWithSender:(id)arg1;

@end

@interface ABContactAddToExistingContactAction : ABContactAction <ABPeoplePickerNavigationControllerDelegate, ABNewPersonViewControllerDelegate>
{
    CNContact *_chosenContact;
    ABPeoplePickerNavigationController *_peoplePicker;
}

@property(retain, nonatomic) ABPeoplePickerNavigationController *peoplePicker; // @synthesize peoplePicker=_peoplePicker;
@property(retain, nonatomic) CNContact *chosenContact; // @synthesize chosenContact=_chosenContact;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2;
- (void)performActionWithSender:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactCell : UITableViewCell
{
    _Bool _addedConstantsConstraints;
    NSArray *_variableConstraints;
    _Bool _hasBeenDisplayed;
    ABCardGroupItem *_cardGroupItem;
    double _leftContentMargin;
    double _rightContentMargin;
    CNContactStyle *_contactStyle;
}

@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(nonatomic) _Bool hasBeenDisplayed; // @synthesize hasBeenDisplayed=_hasBeenDisplayed;
@property(nonatomic) double rightContentMargin; // @synthesize rightContentMargin=_rightContentMargin;
@property(nonatomic) double leftContentMargin; // @synthesize leftContentMargin=_leftContentMargin;
@property(retain, nonatomic) ABCardGroupItem *cardGroupItem; // @synthesize cardGroupItem=_cardGroupItem;
- (double)minCellHeight;
- (void)updateConstraints;
- (id)variableConstraints;
- (id)constantConstraints;
@property(nonatomic) _Bool showSeparator;
- (void)performAccessoryAction;
- (_Bool)shouldPerformAccessoryAction;
- (void)performDefaultAction;
- (_Bool)shouldPerformDefaultAction;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABContactCreateNewContactAction : ABContactAction <ABNewPersonViewControllerDelegate>
{
    CNContact *_createdContact;
    UIViewController *_presentingViewController;
}

@property(nonatomic) UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(retain, nonatomic) CNContact *createdContact; // @synthesize createdContact=_createdContact;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2;
- (void)performActionWithSender:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactDeleteContactAction : ABContactAction
{
}

- (void)showDeleteFailureAlert;
- (void)performActionWithSender:(id)arg1;

@end

@interface ABContactGroupPickerViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSArray *_pickableGroups;
    UITableView *_tableView;
    id <ABContactGroupPickerDelegate> _groupPickerDelegate;
    CNContactStyle *_contactStyle;
}

+ (id)pickableGroupsWithPickedGroups:(id)arg1;
+ (id)propertySections;
+ (_Bool)propertiesLeftToPickWithPickedGroups:(id)arg1;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(nonatomic) id <ABContactGroupPickerDelegate> groupPickerDelegate; // @synthesize groupPickerDelegate=_groupPickerDelegate;
- (id)_loadPickableGroupsWithPickedGroups:(id)arg1;
- (void)cancel:(id)arg1;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithGroups:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMedicalIDAction : ABPropertyAction <HKMedicalIDViewControllerDelegate>
{
    long long _medicalIDActionType;
    HKHealthStore *_healthStore;
    _HKMedicalIDData *_healthData;
}

@property(retain, nonatomic) _HKMedicalIDData *healthData; // @synthesize healthData=_healthData;
@property(retain, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
@property(nonatomic) long long medicalIDActionType; // @synthesize medicalIDActionType=_medicalIDActionType;
- (void)medicalIDViewControllerDidFinish:(id)arg1;
- (void)medicalIDViewControllerDidDelete:(id)arg1;
- (void)medicalIDViewControllerDidSave:(id)arg1;
- (void)medicalIDViewControllerDidCancel:(id)arg1;
- (void)performActionWithSender:(id)arg1;

// Remaining properties
@property(retain, nonatomic) CNContact *contact;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactHeaderView : UIView
{
    _Bool _needsReload;
    NSDictionary *_nameTextAttributes;
    id <ABPresenterDelegate> _delegate;
    id <ABContactHeaderViewDelegate> _headerDelegate;
    CNContactStyle *_contactStyle;
    NSMutableArray *_headerConstraints;
    ABContactPhotoView *_photoView;
    CNContact *_contact;
    struct UIEdgeInsets _contentMargins;
}

@property(readonly, nonatomic) CNContact *contact; // @synthesize contact=_contact;
@property(readonly, nonatomic) ABContactPhotoView *photoView; // @synthesize photoView=_photoView;
@property(retain, nonatomic) NSMutableArray *headerConstraints; // @synthesize headerConstraints=_headerConstraints;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(nonatomic) id <ABContactHeaderViewDelegate> headerDelegate; // @synthesize headerDelegate=_headerDelegate;
@property(nonatomic) id <ABPresenterDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSDictionary *nameTextAttributes; // @synthesize nameTextAttributes=_nameTextAttributes;
@property(nonatomic) struct UIEdgeInsets contentMargins; // @synthesize contentMargins=_contentMargins;
- (void)saveContactPhoto;
- (void)reloadDataPreservingChanges:(_Bool)arg1;
- (void)reloadDataIfNeeded;
- (void)setNeedsReload;
- (void)updateFontSizes;
- (void)updateWithNewContact:(id)arg1;
- (void)updateConstraints;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)dealloc;
- (id)initWithContact:(id)arg1 frame:(struct CGRect)arg2;

@end

@interface ABContactHeaderDisplayView : ABContactHeaderView
{
    UILabel *_nameLabel;
    UILabel *_taglineLabel;
    UILabel *_fakeTaglineAlignmentLabel;
    UIView *_markerView;
    UIView *_personHeaderView;
    NSDictionary *_taglineTextAttributes;
    NSString *_alternateName;
    NSString *_message;
}

+ (id)contactHeaderViewWithContact:(id)arg1 personHeaderView:(id)arg2;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) NSString *alternateName; // @synthesize alternateName=_alternateName;
@property(retain, nonatomic) UIView *personHeaderView; // @synthesize personHeaderView=_personHeaderView;
- (void)menuWillHide:(id)arg1;
- (void)handleNameLabelLongPress:(id)arg1;
- (id)_taglineStringForContact:(id)arg1;
- (id)_headerStringForContact:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)copy:(id)arg1;
- (void)reloadDataPreservingChanges:(_Bool)arg1;
- (void)_updatePhotoView;
@property(copy, nonatomic) NSDictionary *taglineTextAttributes;
- (void)setNameTextAttributes:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)disablePhotoTapGesture;
- (void)updateConstraints;
- (void)updateFontSizes;
- (void)tintColorDidChange;
- (void)dealloc;
- (id)initWithContact:(id)arg1 personHeaderView:(id)arg2 frame:(struct CGRect)arg3;

@end

@interface ABContactHeaderEditView : ABContactHeaderView <UITableViewDelegate, UITableViewDataSource, ABPropertyGroupItemDelegate, ABContactPhotoViewDelegate>
{
    UITableView *_editingTable;
    NSArray *_editingGroups;
    id <ABPropertyCellDelegate> _namePropertyDelegate;
}

+ (id)contactHeaderViewWithContact:(id)arg1 editingGroups:(id)arg2;
@property(nonatomic) id <ABPropertyCellDelegate> namePropertyDelegate; // @synthesize namePropertyDelegate=_namePropertyDelegate;
@property(retain, nonatomic) NSArray *editingGroups; // @synthesize editingGroups=_editingGroups;
- (id)_phoneticNameForValue:(id)arg1 isFamilyName:(_Bool)arg2;
- (void)didUpdatePhoto;
- (void)propertyItem:(id)arg1 willChangeValue:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)setBackgroundColor:(id)arg1;
- (id)selectEditingGroupAtIndex:(unsigned long long)arg1;
- (_Bool)photoIsModified;
- (_Bool)hasPhoto;
- (void)reloadDataPreservingChanges:(_Bool)arg1;
- (void)updateConstraints;
- (void)updateFontSizes;
- (void)setEditingGroups:(id)arg1 withUpdate:(_Bool)arg2;
- (void)dealloc;
- (id)initWithContact:(id)arg1 editingGroups:(id)arg2 frame:(struct CGRect)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactListPhotoView : UIView
{
    UIImageView *_contactImageView;
    ABStyleProvider *_styleProvider;
    ABUIPerson *_person;
}

@property(retain, nonatomic) ABUIPerson *person; // @synthesize person=_person;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) void *record;
- (id)_framedPhoto;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 UIStyle:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABContactPhotoPreviewItem : NSObject <QLPreviewItem>
{
    NSURL *_previewItemURL;
    NSString *_previewItemTitle;
}

@property(retain) NSString *previewItemTitle; // @synthesize previewItemTitle=_previewItemTitle;
@property(retain) NSURL *previewItemURL; // @synthesize previewItemURL=_previewItemURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactPhotoView : UIControl <UINavigationControllerDelegate, UIImagePickerControllerDelegate, QLPreviewControllerDelegate, QLPreviewControllerDataSource>
{
    _Bool _editing;
    _Bool _modified;
    _Bool _isAnimatingBounce;
    CNContact *_contact;
    id <ABPresenterDelegate> _delegate;
    id <ABContactPhotoViewDelegate> _photoViewDelegate;
    NSDictionary *_photoPickerInfo;
    UIImage *_currentThumbnailImage;
    UIImage *_currentImage;
    UIImageView *_contactImageView;
    UILabel *_addPhotoLabel;
    UILabel *_editPhotoLabel;
    UIImageView *_attributionImageView;
    UIGestureRecognizer *_tapGesture;
}

+ (id)supportedPasteboardTypes;
@property(retain, nonatomic) UIGestureRecognizer *tapGesture; // @synthesize tapGesture=_tapGesture;
@property(nonatomic) _Bool isAnimatingBounce; // @synthesize isAnimatingBounce=_isAnimatingBounce;
@property(retain, nonatomic) UIImageView *attributionImageView; // @synthesize attributionImageView=_attributionImageView;
@property(retain, nonatomic) UILabel *editPhotoLabel; // @synthesize editPhotoLabel=_editPhotoLabel;
@property(retain, nonatomic) UILabel *addPhotoLabel; // @synthesize addPhotoLabel=_addPhotoLabel;
@property(retain, nonatomic) UIImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(retain, nonatomic) UIImage *currentImage; // @synthesize currentImage=_currentImage;
@property(retain, nonatomic) UIImage *currentThumbnailImage; // @synthesize currentThumbnailImage=_currentThumbnailImage;
@property(retain, nonatomic) NSDictionary *photoPickerInfo; // @synthesize photoPickerInfo=_photoPickerInfo;
@property(nonatomic) id <ABContactPhotoViewDelegate> photoViewDelegate; // @synthesize photoViewDelegate=_photoViewDelegate;
@property(nonatomic) id <ABPresenterDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool modified; // @synthesize modified=_modified;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;
- (void)previewControllerDidDismiss:(id)arg1;
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (void)_bounceSmallPhoto;
- (void)_presentFullScreenPhoto:(id)arg1;
- (void)_zoomContactPhoto;
- (id)previewPath;
- (id)_createImagePickerForEditingImageData:(id)arg1 withCropRect:(struct CGRect)arg2;
- (id)_createImagePicker;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)_presentPhotoEditingSheet;
- (void)updateAttributionBadge;
- (void)updatePhotoWithImage:(id)arg1;
- (void)updatePhoto;
- (void)resetPhoto;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)menuWillHide:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)longPressGesture:(id)arg1;
- (void)tapGesture:(id)arg1;
- (void)disablePhotoTapGesture;
- (void)setHighlightedFrame:(_Bool)arg1;
- (_Bool)hasPhoto;
- (void)saveEdits;
- (id)currentImageDataAndCropRect:(struct CGRect *)arg1;
- (id)currentImageData;
- (void)tintColorDidChange;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)updateFontSizes;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithContact:(id)arg1 frame:(struct CGRect)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactsFilter : NSObject
{
    void *_addressBook;
    _Bool _showsAllContacts;
    NSArray *_groups;
    NSArray *_sources;
    void *_directorySource;
}

+ (id)newContactsFilterFromDictionaryRepresentation:(id)arg1 withAddressBook:(void *)arg2;
+ (id)_newContactsFilterFromGroupWrapperRepresentation:(id)arg1 withAddressBook:(void *)arg2;
@property(readonly, nonatomic) _Bool showsAllContacts; // @synthesize showsAllContacts=_showsAllContacts;
@property(readonly, nonatomic) void *directorySource; // @synthesize directorySource=_directorySource;
@property(readonly, nonatomic) NSArray *groups; // @synthesize groups=_groups;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)sortedSourcesForSources:(id)arg1;
- (id)sortedGroupsForGroups:(id)arg1;
- (id)_sortedRecordsForRecords:(id)arg1 byNameProperty:(int)arg2;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) void *sourceForNewRecords;
@property(readonly, nonatomic) void *groupForNewRecords;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
@property(readonly, nonatomic) NSArray *sources; // @synthesize sources=_sources;
- (void)_getWritableSource:(const void **)arg1 andGroup:(const void **)arg2;
- (void *)_defaultSourceForAccountContainingSource:(void *)arg1;
@property(readonly, nonatomic) _Bool shouldChangeModelSelectionWhenDisplayed;
@property(readonly, nonatomic) _Bool isDirectory;
- (id)copyDictionaryRepresentation;
- (void)invalidateSourcesForAllContacts;
@property(readonly, nonatomic) void *addressBook;
- (void)dealloc;
- (id)initWithDirectorySource:(void *)arg1 addressBook:(void *)arg2;
- (id)initWithAddressBook:(void *)arg1;
- (id)initWithGroups:(id)arg1 sources:(id)arg2 addressBook:(void *)arg3;

@end

@interface ABPropertyGroupBirthdayItem : ABPropertyGroupDateItem
{
}

- (void)updateLabeledValueWithLabel:(id)arg1;
- (id)displayLabel;

@end

@interface ABContactShareContactAction : ABContactAction
{
}

- (void)performActionWithSender:(id)arg1;
- (_Bool)canPerformAction;

@end

@interface ABContactToggleBlockCallerAction : ABContactAction
{
}

- (void)unblock;
- (void)block;
- (id)allNumbersAndEmails;
- (void)performActionWithSender:(id)arg1;
@property(readonly, nonatomic) _Bool isBlocked;

@end

@interface ABContactView : UITableView
{
    _Bool _cellsLayoutCachingEnabled;
    UIView *_customHeaderView;
    CNContact *_contact;
    UIColor *_sectionBackgroundColor;
    UIColor *_selectedCellBackgroundColor;
    NSDictionary *_labelTextAttributes;
    NSDictionary *_valueTextAttributes;
    NSDictionary *_actionTextAttributes;
    struct UIEdgeInsets _contentMargins;
}

+ (_Bool)isFixedValueProperty:(id)arg1;
+ (_Bool)isMultiValueProperty:(id)arg1;
+ (id)optionalCardProperties;
+ (id)defaultCardProperties;
+ (id)allCardProperties;
+ (id)requiredNameProperties;
+ (id)namePropertiesForContact:(id)arg1;
+ (id)nameProperties;
+ (Class)classForCellIdentifier:(id)arg1;
+ (id)cellIdentifierForClass:(Class)arg1;
+ (id)cellIdentifierForEditingProperty:(id)arg1;
+ (id)cellIdentifierForProperty:(id)arg1;
+ (id)cellIdentifierForLinkedCardsPlaceholderGroup;
+ (id)cellIdentifierForLinkedCardsEditingGroup;
+ (id)cellIdentifierForLinkedCardsGroup;
+ (id)cellIdentifierForFaceTimeGroup;
+ (id)cellIdentifierForPropertyPlaceholder;
+ (id)cellIdentifierForSplitActions;
+ (id)cellIdentifierForActions;
@property(nonatomic) struct UIEdgeInsets contentMargins; // @synthesize contentMargins=_contentMargins;
@property(copy, nonatomic) NSDictionary *actionTextAttributes; // @synthesize actionTextAttributes=_actionTextAttributes;
@property(copy, nonatomic) NSDictionary *valueTextAttributes; // @synthesize valueTextAttributes=_valueTextAttributes;
@property(copy, nonatomic) NSDictionary *labelTextAttributes; // @synthesize labelTextAttributes=_labelTextAttributes;
@property(retain, nonatomic) UIColor *selectedCellBackgroundColor; // @synthesize selectedCellBackgroundColor=_selectedCellBackgroundColor;
@property(retain, nonatomic) UIColor *sectionBackgroundColor; // @synthesize sectionBackgroundColor=_sectionBackgroundColor;
@property(nonatomic, getter=isCellsLayoutCachingEnabled) _Bool cellsLayoutCachingEnabled; // @synthesize cellsLayoutCachingEnabled=_cellsLayoutCachingEnabled;
@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
@property(retain, nonatomic) UIView *customHeaderView; // @synthesize customHeaderView=_customHeaderView;
- (void)applyCellAppearance:(id)arg1;
- (void)updateFontSizes;
- (void)updateVisibleCells;
- (void)updateFontColors;
- (void)layoutMarginsDidChange;
- (void)tintColorDidChange;
@property(retain, nonatomic) UIColor *backgroundColor;
- (void)setAttributesFromContactView:(id)arg1;
- (void)registerContactCellClass:(Class)arg1;
- (void)setTableHeaderView:(id)arg1;
@property(readonly, nonatomic) ABContactHeaderView *defaultHeaderView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 contact:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 contact:(id)arg3;

// Remaining properties
@property(nonatomic) id <ABContactViewDataSource> dataSource;
@property(nonatomic) id <ABContactViewDelegate> delegate;
@property(retain, nonatomic) UIColor *separatorColor;

@end

@interface ABContactViewController : UITableViewController <ABPropertyActionDelegate, ABPropertyCellDelegate, ABContactGroupPickerDelegate, ABPresenterDelegate, UIPopoverControllerDelegate, ABContactAddLinkedCardActionDelegate, ABContactHeaderViewDelegate, ABContactViewControllerDelegate, UIAdaptivePresentationControllerDelegate, ABContactViewDataSource, ABContactViewDelegate, UIViewControllerRestoration>
{
    NSArray *_displayedProperties;
    _Bool _needsReload;
    _Bool _disablingRotation;
    int _animating;
    _Bool _isMailVIP;
    _Bool _allowsEditing;
    _Bool _alwaysEditing;
    _Bool _allowsActions;
    _Bool _allowsPropertyActions;
    _Bool _allowsCardActions;
    _Bool _allowsConferencing;
    _Bool _allowsSharing;
    _Bool _allowsAddToFavorites;
    _Bool _allowsSendMessage;
    _Bool _allowsContactBlocking;
    _Bool _allowsAddingToAddressBook;
    _Bool _shouldShowLinkedContacts;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    _Bool _allowsDeletion;
    _Bool _hideCardActions;
    CNContact *_contact;
    NSString *_alternateName;
    NSString *_message;
    NSString *_primaryProperty;
    UIView *_personHeaderView;
    ABCardGroup *_cardTopGroup;
    ABCardGroup *_cardBottomGroup;
    ABCardGroup *_cardFooterGroup;
    id <ABContactViewControllerDelegate> _contactDelegate;
    id <ABPresenterDelegate> _presentingDelegate;
    ABContactView *_displayContactView;
    ABContactView *_editingContactView;
    ABContactHeaderDisplayView *_displayHeaderView;
    ABContactHeaderEditView *_editingHeaderView;
    NSMutableArray *_mutableContacts;
    NSDictionary *_propertyGroups;
    NSMutableArray *_displayGroups;
    NSMutableArray *_editingGroups;
    NSArray *_nameEditingGroups;
    NSMutableDictionary *_groupsAfterGroup;
    NSMapTable *_cachedLabelWidths;
    ABCardGroup *_cardPrimaryPropertyActionsGroup;
    ABCardGroup *_cardActionsGroup;
    ABCardGroup *_cardMedicalIDGroup;
    ABCardGroup *_cardBlockContactGroup;
    ABCardFaceTimeGroup *_cardFaceTimeGroup;
    ABCardLinkedCardsGroup *_cardLinkedCardsGroup;
    ABPropertyAction *_sendMessageAction;
    ABPropertyFaceTimeAction *_faceTimeAction;
    ABPropertyFaceTimeAction *_faceTimeAudioAction;
    ABPropertyLinkedCardsAction *_linkedCardsAction;
    ABContactAddLinkedCardAction *_addLinkedCardAction;
    ABContactAction *_shareContactAction;
    ABContactAddFavoriteAction *_addFavoriteAction;
    ABContactToggleBlockCallerAction *_blockAction;
    ABContactAddNewFieldAction *_addNewFieldAction;
    ABContactCreateNewContactAction *_createNewContactAction;
    ABContactAddToExistingContactAction *_addToExistingContactAction;
    ABMedicalIDAction *_medicalIDAction;
    ABCardGroup *_cardEditingActionsGroup;
    ABCardGroup *_cardEditingDeleteContactGroup;
    ABContactAction *_deleteContactAction;
    ABSiriContactContextProvider *_siriContextProvider;
    NSMutableArray *_linkedContactsEdits;
    ABPropertyIDSRequest *_iMessageIDSRequest;
    ABPropertyIDSRequest *_faceTimeIDSRequest;
    NSDictionary *_userActivityUserInfo;
    HKHealthStore *_healthStore;
    CNContactStyle *_contactStyle;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (id)boolStateRestorationProperties;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(retain, nonatomic) HKHealthStore *healthStore; // @synthesize healthStore=_healthStore;
@property(retain, nonatomic) NSDictionary *userActivityUserInfo; // @synthesize userActivityUserInfo=_userActivityUserInfo;
@property(retain, nonatomic) ABPropertyIDSRequest *faceTimeIDSRequest; // @synthesize faceTimeIDSRequest=_faceTimeIDSRequest;
@property(retain, nonatomic) ABPropertyIDSRequest *iMessageIDSRequest; // @synthesize iMessageIDSRequest=_iMessageIDSRequest;
@property(retain, nonatomic) NSMutableArray *linkedContactsEdits; // @synthesize linkedContactsEdits=_linkedContactsEdits;
@property(retain, nonatomic) ABSiriContactContextProvider *siriContextProvider; // @synthesize siriContextProvider=_siriContextProvider;
@property(retain, nonatomic) ABContactAction *deleteContactAction; // @synthesize deleteContactAction=_deleteContactAction;
@property(retain, nonatomic) ABCardGroup *cardEditingDeleteContactGroup; // @synthesize cardEditingDeleteContactGroup=_cardEditingDeleteContactGroup;
@property(retain, nonatomic) ABCardGroup *cardEditingActionsGroup; // @synthesize cardEditingActionsGroup=_cardEditingActionsGroup;
@property(retain, nonatomic) ABMedicalIDAction *medicalIDAction; // @synthesize medicalIDAction=_medicalIDAction;
@property(retain, nonatomic) ABContactAddToExistingContactAction *addToExistingContactAction; // @synthesize addToExistingContactAction=_addToExistingContactAction;
@property(retain, nonatomic) ABContactCreateNewContactAction *createNewContactAction; // @synthesize createNewContactAction=_createNewContactAction;
@property(retain, nonatomic) ABContactAddNewFieldAction *addNewFieldAction; // @synthesize addNewFieldAction=_addNewFieldAction;
@property(retain, nonatomic) ABContactToggleBlockCallerAction *blockAction; // @synthesize blockAction=_blockAction;
@property(retain, nonatomic) ABContactAddFavoriteAction *addFavoriteAction; // @synthesize addFavoriteAction=_addFavoriteAction;
@property(retain, nonatomic) ABContactAction *shareContactAction; // @synthesize shareContactAction=_shareContactAction;
@property(retain, nonatomic) ABContactAddLinkedCardAction *addLinkedCardAction; // @synthesize addLinkedCardAction=_addLinkedCardAction;
@property(retain, nonatomic) ABPropertyLinkedCardsAction *linkedCardsAction; // @synthesize linkedCardsAction=_linkedCardsAction;
@property(retain, nonatomic) ABPropertyFaceTimeAction *faceTimeAudioAction; // @synthesize faceTimeAudioAction=_faceTimeAudioAction;
@property(retain, nonatomic) ABPropertyFaceTimeAction *faceTimeAction; // @synthesize faceTimeAction=_faceTimeAction;
@property(retain, nonatomic) ABPropertyAction *sendMessageAction; // @synthesize sendMessageAction=_sendMessageAction;
@property(retain, nonatomic) ABCardLinkedCardsGroup *cardLinkedCardsGroup; // @synthesize cardLinkedCardsGroup=_cardLinkedCardsGroup;
@property(retain, nonatomic) ABCardFaceTimeGroup *cardFaceTimeGroup; // @synthesize cardFaceTimeGroup=_cardFaceTimeGroup;
@property(retain, nonatomic) ABCardGroup *cardBlockContactGroup; // @synthesize cardBlockContactGroup=_cardBlockContactGroup;
@property(retain, nonatomic) ABCardGroup *cardMedicalIDGroup; // @synthesize cardMedicalIDGroup=_cardMedicalIDGroup;
@property(retain, nonatomic) ABCardGroup *cardActionsGroup; // @synthesize cardActionsGroup=_cardActionsGroup;
@property(retain, nonatomic) ABCardGroup *cardPrimaryPropertyActionsGroup; // @synthesize cardPrimaryPropertyActionsGroup=_cardPrimaryPropertyActionsGroup;
@property(retain, nonatomic) NSMapTable *cachedLabelWidths; // @synthesize cachedLabelWidths=_cachedLabelWidths;
@property(retain, nonatomic) NSMutableDictionary *groupsAfterGroup; // @synthesize groupsAfterGroup=_groupsAfterGroup;
@property(retain, nonatomic) NSArray *nameEditingGroups; // @synthesize nameEditingGroups=_nameEditingGroups;
@property(retain, nonatomic) NSMutableArray *editingGroups; // @synthesize editingGroups=_editingGroups;
@property(retain, nonatomic) NSMutableArray *displayGroups; // @synthesize displayGroups=_displayGroups;
@property(retain, nonatomic) NSDictionary *propertyGroups; // @synthesize propertyGroups=_propertyGroups;
@property(retain, nonatomic) NSMutableArray *mutableContacts; // @synthesize mutableContacts=_mutableContacts;
@property(retain, nonatomic) ABContactHeaderEditView *editingHeaderView; // @synthesize editingHeaderView=_editingHeaderView;
@property(retain, nonatomic) ABContactHeaderDisplayView *displayHeaderView; // @synthesize displayHeaderView=_displayHeaderView;
@property(retain, nonatomic) ABContactView *editingContactView; // @synthesize editingContactView=_editingContactView;
@property(retain, nonatomic) ABContactView *displayContactView; // @synthesize displayContactView=_displayContactView;
@property(nonatomic) id <ABPresenterDelegate> presentingDelegate; // @synthesize presentingDelegate=_presentingDelegate;
@property(nonatomic) id <ABContactViewControllerDelegate> contactDelegate; // @synthesize contactDelegate=_contactDelegate;
@property(readonly, nonatomic) ABCardGroup *cardFooterGroup; // @synthesize cardFooterGroup=_cardFooterGroup;
@property(retain, nonatomic) ABCardGroup *cardBottomGroup; // @synthesize cardBottomGroup=_cardBottomGroup;
@property(retain, nonatomic) ABCardGroup *cardTopGroup; // @synthesize cardTopGroup=_cardTopGroup;
@property(retain, nonatomic) UIView *personHeaderView; // @synthesize personHeaderView=_personHeaderView;
@property(retain, nonatomic) NSString *primaryProperty; // @synthesize primaryProperty=_primaryProperty;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) NSString *alternateName; // @synthesize alternateName=_alternateName;
@property(nonatomic) _Bool hideCardActions; // @synthesize hideCardActions=_hideCardActions;
@property(nonatomic) _Bool allowsDeletion; // @synthesize allowsDeletion=_allowsDeletion;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(nonatomic) _Bool shouldShowLinkedContacts; // @synthesize shouldShowLinkedContacts=_shouldShowLinkedContacts;
@property(nonatomic) _Bool allowsAddingToAddressBook; // @synthesize allowsAddingToAddressBook=_allowsAddingToAddressBook;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(nonatomic) _Bool allowsSendMessage; // @synthesize allowsSendMessage=_allowsSendMessage;
@property(nonatomic) _Bool allowsAddToFavorites; // @synthesize allowsAddToFavorites=_allowsAddToFavorites;
@property(nonatomic) _Bool allowsSharing; // @synthesize allowsSharing=_allowsSharing;
@property(nonatomic) _Bool allowsConferencing; // @synthesize allowsConferencing=_allowsConferencing;
@property(nonatomic) _Bool allowsCardActions; // @synthesize allowsCardActions=_allowsCardActions;
@property(nonatomic) _Bool allowsPropertyActions; // @synthesize allowsPropertyActions=_allowsPropertyActions;
@property(nonatomic) _Bool allowsActions; // @synthesize allowsActions=_allowsActions;
@property(nonatomic) _Bool alwaysEditing; // @synthesize alwaysEditing=_alwaysEditing;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(copy, nonatomic) NSArray *displayedProperties; // @synthesize displayedProperties=_displayedProperties;
@property(readonly, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (void)updateUserActivityState:(id)arg1;
- (void)_updateUserActivity;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)_addedGroupWithName:(id)arg1;
- (_Bool)_indexPathIsActionItem:(id)arg1;
- (id)_itemAtIndexPath:(id)arg1;
- (id)_cardGroupAtIndex:(long long)arg1;
- (id)_currentGroups;
- (void)saveLinkedContactChanges;
- (void)_saveChangesForGroups:(id)arg1;
- (void)_validateGroup:(id)arg1;
- (void)_linkEditableContactForEditedReadOnlyContact;
- (_Bool)_modelIsEmpty;
- (_Bool)_modelHasChanges;
- (id)_loadNameEditingGroups;
- (id)_loadEditingGroups;
- (id)_loadDisplayGroups;
- (id)_addGroupsInArray:(id)arg1 afterGroup:(id)arg2;
- (void)_reloadLinkedCardsGroup;
- (void)_reloadMedicalIDGroup;
- (void)_addFaceTimeGroupAnimated:(_Bool)arg1;
- (void)_reloadFaceTimeGroup;
- (void)_reloadPropertyGroupsPreservingChanges:(_Bool)arg1;
- (id)_loadPropertyGroups;
- (id)_loadMutableLinkedContactsForUnifiedContact:(id)arg1;
- (void)_updateEmailTransportButtonsForItems:(id)arg1;
- (void)_updatePhoneTransportButtonsForItems:(id)arg1;
- (void)_updateIMessageTransportButtonsForItems:(id)arg1;
- (void)_updateAvailableTransportsForItems:(id)arg1;
- (void)_updateAvailableTransports;
- (id)_allDisplayPropertyItemsFromGroups:(id)arg1;
- (id)_addToExistingContactAction;
- (id)_addCreateNewContactAction;
- (id)_addNewFieldAction;
- (id)_addFavoriteActionWithConferencing:(_Bool)arg1 telephony:(_Bool)arg2;
- (id)_shareContactAction;
- (id)_addLinkedCardAction;
- (id)_linkedCardsAction;
- (id)_faceTimeAudioAction;
- (id)_faceTimeAction;
- (id)_sendMessageActionAllowingEmailIDs:(_Bool)arg1;
- (void)_setupPrimaryPropertyActions;
- (void)_setupEditingCardActions;
- (void)_setupAddToAddressBookActions;
- (void)_setupContactBlockingActionsWithUpdate:(_Bool)arg1;
- (void)_setupCardActions;
- (void)setupActions;
- (void)blockListDidChange:(id)arg1;
- (void)updateContactsViewWithBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (double)desiredHeightForWidth:(double)arg1;
- (void)removeLinkedContact:(id)arg1;
- (void)addLinkedContact:(id)arg1;
- (void)addToExistingContact:(id)arg1;
- (void)createNewContact:(id)arg1;
- (void)updateWithNewContact:(id)arg1;
- (void)_updateItemsInGroup:(id)arg1;
- (void)removeEditingItem:(id)arg1 atIndexPath:(id)arg2;
- (void)addEditingItemAtIndexPath:(id)arg1;
- (long long)_numberOfItemsInCustomGroup:(id)arg1;
- (void)_updateLabelWidthForCell:(id)arg1 atIndexPath:(id)arg2;
- (void)_updateLabelWidths;
- (void)_updateLabelWidthsForItem:(id)arg1;
- (void)_updateLabelWidthsForGroup:(id)arg1;
- (id)_cellForIndexPath:(id)arg1;
- (void)_scrollContactView:(id)arg1 toVisibleGroupInContactView:(id)arg2;
- (_Bool)needsReload;
- (void)reloadDataIfNeeded;
- (void)setNeedsReloadLazy;
- (void)setNeedsReload;
- (void)contactViewController:(id)arg1 didDeleteContact:(id)arg2;
- (void)headerHeightDidChange;
- (void)headerPhotoDidUpdate;
- (_Bool)shouldAllowSelectingContact:(id)arg1;
- (void)contactGroupPickerDidFinish:(id)arg1 withGroup:(id)arg2;
- (void)contactGroupPickerDidCancel:(id)arg1;
- (id)alreadyPickedGroups;
- (id)defaultValueForPropertyCell:(id)arg1;
- (id)_dateForProperty:(id)arg1;
- (void)propertyCellDidChangeLayout:(id)arg1;
- (void)propertyCell:(id)arg1 performActionForItem:(id)arg2 withTransportType:(long long)arg3;
- (void)propertyCell:(id)arg1 didUpdateItem:(id)arg2 withNewValue:(id)arg3;
- (void)propertyCell:(id)arg1 didUpdateItem:(id)arg2 withNewLabel:(id)arg3;
- (void)actionWasCanceled:(id)arg1;
- (void)actionDidFinish:(id)arg1;
- (void)actionDidUpdate:(id)arg1;
- (void)action:(id)arg1 pushViewController:(id)arg2 sender:(id)arg3;
- (void)action:(id)arg1 dismissViewController:(id)arg2 sender:(id)arg3;
- (void)action:(id)arg1 presentViewController:(id)arg2 sender:(id)arg3;
- (id)action:(id)arg1 cellForPropertyItem:(id)arg2 sender:(id)arg3;
- (void)action:(id)arg1 prepareChildContactViewController:(id)arg2 sender:(id)arg3;
@property(readonly) _Bool isPresentingModalViewController;
- (void)sender:(id)arg1 dismissViewController:(id)arg2;
- (long long)_modalPresentationStyleForViewController:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)sender:(id)arg1 presentViewController:(id)arg2;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (_Bool)tableView:(id)arg1 shouldDrawTopSeparatorForSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (id)viewForHeaderInTableView:(id)arg1;
- (double)heightForHeaderInTableView:(id)arg1;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)contactView:(id)arg1 didSelectItemAtIndex:(long long)arg2 inGroup:(id)arg3;
- (double)contactView:(id)arg1 heightForItemAtIndex:(long long)arg2 inGroup:(id)arg3;
- (id)contactView:(id)arg1 cellForItemAtIndex:(long long)arg2 inGroup:(id)arg3;
- (long long)contactView:(id)arg1 numberOfItemsInGroup:(id)arg2;
- (long long)numberOfGroupsInContactView:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)toggleEditing:(id)arg1;
- (void)saveModelChangesToContact;
- (void)saveChanges;
- (void)editCancel:(id)arg1;
- (CDStruct_89ddc8e1)transitionToEditing:(_Bool)arg1;
- (CDStruct_89ddc8e1)editingTransition;
- (void)updateDoneButton;
- (void)updateEditNavigationItemsAnimated:(_Bool)arg1;
- (id)navigationItemController;
- (id)contentScrollView;
- (id)tableView;
- (id)indexPathOfDisplayedPropertyItem:(id)arg1;
- (void)reloadCardGroup:(id)arg1;
- (void)removeActionWithTarget:(id)arg1 selector:(SEL)arg2 inGroup:(id)arg3;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 inGroup:(id)arg4;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 inGroup:(id)arg4 destructive:(_Bool)arg5;
- (void)addCardGroup:(id)arg1 afterGroup:(id)arg2;
- (long long)indexOfGroup:(id)arg1;
- (id)cardGroupForProperty:(id)arg1;
- (void)setMergeContact:(id)arg1;
- (void)reloadDataPreservingChanges:(_Bool)arg1;
- (void)prepareCell:(id)arg1;
- (void)localeDidChange:(id)arg1;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (id)cardActions;
@property(nonatomic) _Bool isMailVIP; // @synthesize isMailVIP=_isMailVIP;
@property(readonly, nonatomic) ABContactHeaderView *contactHeaderView;
@property(readonly, nonatomic) ABContactView *contactView;
- (void)dealloc;
- (id)initWithContact:(id)arg1;
- (void)applyStyleProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNContactPickerLegacyViewController : CNContactPickerContentViewController <ABPeoplePickerNavigationControllerDelegate>
{
    void *_addressBook;
    _Bool _clientHasContactsAccess;
    ABPeoplePickerNavigationController *_legacyPicker;
}

@property(retain) ABPeoplePickerNavigationController *legacyPicker; // @synthesize legacyPicker=_legacyPicker;
@property _Bool clientHasContactsAccess; // @synthesize clientHasContactsAccess=_clientHasContactsAccess;
- (void).cxx_destruct;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setupWithOptions:(id)arg1 readyBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContentController : NSObject <ABContentControllerProtocol>
{
    void *_addressBook;
    id _contentControllerDelegate;
    UIView *_contentLayer;
}

- (void)preloadController;
- (void)reload;
- (void)back:(_Bool)arg1 save:(_Bool)arg2;
- (void)displayScrollerIndicators;
- (_Bool)contentViewIsVisible;
- (void)cleanUpContentLayer;
- (id)contentView;
- (void)setContentControllerDelegate:(id)arg1;
- (id)contentControllerDelegate;
@property(nonatomic) void *addressBook;
- (void)dealloc;
- (id)init;
- (id)initWithContentControllerDelegate:(id)arg1 addressBook:(void *)arg2;

@end

@interface ABCountry : NSObject
{
    NSString *_countryCode;
    NSString *_countryName;
    NSString *_phoneticCountryName;
}

@property(copy, nonatomic) NSString *phoneticCountryName; // @synthesize phoneticCountryName=_phoneticCountryName;
@property(copy, nonatomic) NSString *countryName; // @synthesize countryName=_countryName;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;

@end

@interface ABCountryPickerController : UINavigationController <UITableViewDataSource, UITableViewDelegate>
{
    NSString *_selectedCountryCode;
    CNContactStyle *_contactStyle;
    UITableViewController *_tableViewController;
    UILocalizedIndexedCollation *_collation;
    NSArray *_countries;
    NSArray *_sections;
}

@property(copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(copy, nonatomic) NSArray *countries; // @synthesize countries=_countries;
@property(retain, nonatomic) UILocalizedIndexedCollation *collation; // @synthesize collation=_collation;
@property(retain, nonatomic) UITableViewController *tableViewController; // @synthesize tableViewController=_tableViewController;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(copy, nonatomic) NSString *selectedCountryCode; // @synthesize selectedCountryCode=_selectedCountryCode;
- (void)_configureSections;
- (void)_loadCountryCodes;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)cancelPicker:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <ABCountryPickerControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABCountryInfo : NSObject
{
    NSString *_countryCode;
    NSString *_countryName;
    NSString *_phoneticCountryName;
}

@property(copy, nonatomic) NSString *phoneticCountryName; // @synthesize phoneticCountryName=_phoneticCountryName;
@property(copy, nonatomic) NSString *countryName; // @synthesize countryName=_countryName;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;

@end

@interface ABCountryPickerViewController : ABPickerViewController <UITableViewDelegate, UITableViewDataSource, UISearchDisplayDelegate, UISearchBarDelegate>
{
    UITableView *_tableView;
    UILocalizedIndexedCollation *_collation;
    NSArray *_sections;
    NSArray *_sectionIndexTitles;
    NSDictionary *_indexToSections;
    UISearchBar *_searchBar;
    UISearchDisplayController *_searchController;
    NSArray *_filteredCountries;
    NSString *_selectedCountryCode;
    NSIndexPath *_selectedIndexPath;
    NSArray *_allCountries;
}

- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 willHideSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (double)ab_heightToFitForViewInPopoverView;
- (void)loadView;
- (void)scrollToSearchFieldAnimated:(_Bool)arg1;
- (void)reloadCountryCodes;
- (void)configureSections;
@property(retain, nonatomic) NSString *selectedCountryCode;
- (void)_setSelectedCountryCode:(id)arg1 atPath:(id)arg2;
- (void)setStyleProvider:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABCustomAppearanceProvider : NSObject
{
    ABStyleProvider *_styleProvider;
}

- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)customSetEmphasized:(_Bool)arg1 onCell:(id)arg2;
- (_Bool)shouldPropagateStylesThroughUnknownPersonActions;
- (_Bool)shouldPropagateStylesToPickers;
- (double)cardTableViewSectionFooterHeightWhenEditing:(_Bool)arg1;
- (double)cardTableViewSectionHeaderHeightWhenEditing:(_Bool)arg1;
- (id)newCustomCardTableScrollingBackgroundView;
- (id)newCardActionButton;
- (Class)customCardActionCellClass;
- (Class)customCardCellClass;
- (_Bool)shouldUseCardContentProviderWhenAvailable;
- (void)setHighlighted:(_Bool)arg1 onPropertyCell:(id)arg2;
- (long long)unknownModalPresentationStyle;
- (double)distanceBetweenSections;
- (id)newScrollingBackgroundView;
- (void)setIndicatesFaceTimeHistory:(_Bool)arg1 onActionButton:(id)arg2;
- (id)newActionButton;
- (Class)actionCellClass;
- (Class)propertyCellClass;
- (void)dealloc;
- (id)init;

@end

@interface ABDateField : ABUILabelWithPlaceholder
{
    UIButton *_clearButton;
    _Bool _isClearButtonEnabled;
    NSDate *_date;
    UIDatePicker *_datePicker;
    struct CGSize _datePickerSize;
    _Bool _usesDatePickerAsInputView;
    _Bool _isFirstResponder;
    _Bool _inBecomeFirstResponder;
    _Bool _editable;
    id <ABDateFieldDelegate> _delegate;
    id <ABDatePickerPresentationDelegate> _presentationDelegate;
}

@property(nonatomic) id <ABDatePickerPresentationDelegate> presentationDelegate; // @synthesize presentationDelegate=_presentationDelegate;
@property(nonatomic) id <ABDateFieldDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize datePickerSize; // @synthesize datePickerSize=_datePickerSize;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(nonatomic, getter=isEditable) _Bool editable; // @synthesize editable=_editable;
- (void)endEditing;
- (id)inputView;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (void)datePickerDateDidChange:(id)arg1;
- (void)_attachToDatePicker:(id)arg1;
- (void)_dettachFromDatePicker:(id)arg1;
- (void)_setDate:(id)arg1 andInformDelegate:(_Bool)arg2;
- (void)_updateLabelText;
- (void)_clearButtonPressed:(id)arg1;
- (void)_updateClearButton;
- (void)_setClearButtonEnabled:(_Bool)arg1;
- (_Bool)_shouldEnableClearButton;
- (id)_clearButton;
- (struct CGRect)_contentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_contentRectForBounds:(struct CGRect)arg1 isClearButtonPresent:(_Bool)arg2;
- (struct CGRect)_clearButtonRectForBounds:(struct CGRect)arg1;
- (double)_extraWidthForClearButton;
- (struct CGSize)_clearButtonSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABDatePickerViewController : UIViewController
{
    void *_context;
    UIDatePicker *_datePicker;
    id <ABDatePickerViewControllerDismissDelegate> _dismissDelegate;
}

+ (struct CGSize)datePickerSize;
@property(nonatomic) id <ABDatePickerViewControllerDismissDelegate> dismissDelegate; // @synthesize dismissDelegate=_dismissDelegate;
@property(retain, nonatomic) UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
@property(nonatomic) void *context; // @synthesize context=_context;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)loadView;
- (void)viewDidLoad;
- (double)ab_heightToFitForViewInPopoverView;
- (void)dealloc;

@end

@interface ABDelayedNotificationSender : NSObject
{
    struct __CFArray *_delegatesForDelayedNotification;
    NSMutableArray *_delayedNotifications;
    struct __CFDictionary *_delayedNotificationInfos;
}

- (void)addDelayedNotification:(id)arg1;
- (void)addDelayedNotification:(id)arg1 withInfo:(struct __CFDictionary *)arg2 allowDuplicateNotification:(_Bool)arg3;
- (void)removeDelegate:(id)arg1 andDeliverDelayedNotifications:(_Bool)arg2;
- (_Bool)containsDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)dealloc;

@end

@interface ABSteadfastLineView : UIView
{
    _Bool disappearsOnHighlight;
}

@property(nonatomic) _Bool disappearsOnHighlight; // @synthesize disappearsOnHighlight;
- (void)forceSetBackgroundColor:(id)arg1;
- (void)setBackgroundColor:(id)arg1;

@end

@interface ABDividerView : UIView
{
    _Bool _isVertical;
    UIColor *_defaultColor;
    UIColor *_shadowColor;
    ABSteadfastLineView *_line;
    ABSteadfastLineView *_shadowLine;
    _Bool _disappearsOnHighlight;
}

@property(nonatomic) _Bool disappearsOnHighlight; // @synthesize disappearsOnHighlight=_disappearsOnHighlight;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *defaultColor; // @synthesize defaultColor=_defaultColor;
@property(nonatomic, getter=isVertical) _Bool vertical; // @synthesize vertical=_isVertical;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABFaceTimeCell : ABLabeledCell
{
    _Bool _isFaceTimeAudioAvailable;
    ABTransportButton *_transportIcon1;
    ABTransportButton *_transportIcon2;
    id <ABPropertyCellDelegate> _delegate;
    UILabel *_faceTimeLabel;
}

@property(nonatomic) _Bool isFaceTimeAudioAvailable; // @synthesize isFaceTimeAudioAvailable=_isFaceTimeAudioAvailable;
@property(readonly, nonatomic) UILabel *faceTimeLabel; // @synthesize faceTimeLabel=_faceTimeLabel;
@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) ABTransportButton *transportIcon2; // @synthesize transportIcon2=_transportIcon2;
@property(readonly, nonatomic) ABTransportButton *transportIcon1; // @synthesize transportIcon1=_transportIcon1;
- (void)transportButtonClicked:(id)arg1;
- (void)tintColorDidChange;
- (id)variableConstraints;
- (id)constantConstraints;
- (id)rightMostView;
- (double)minCellHeight;
- (void)performDefaultAction;
- (id)labelView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABFaceTimeStyleProvider : ABTabletStyleProvider <TKTonePickerStyleProvider, TKVibrationPickerStyleProvider>
{
}

- (id)groupAccountNameShadowColor;
- (id)groupAccountNameColor;
- (long long)groupCellSelectionStyle;
- (id)groupCellShadowColor;
- (id)groupCellHighlightedTextColor;
- (id)groupCellTextColor;
- (id)groupHeaderBackgroudColor;
- (id)groupCellBackgroundColor;
- (id)groupsTableBackgroundColor;
- (_Bool)groupsTableShouldRemoveBackgroundView;
- (_Bool)presentModalViewInPopover;
- (_Bool)presentNewContactsControllersInPopover;
- (_Bool)presentDatePickerInPopover;
- (_Bool)peoplePickerBarStyleIsTranslucent;
- (long long)peoplePickerBarStyle;
- (_Bool)shouldUsePeoplePickerBarStyle;
- (int)dialogStyleForDeleteConfirmation;
- (_Bool)shouldDefinePickerTransitionStyle;
- (long long)pickerTransitionStyle;
- (_Bool)labelPickerUsesOpaqueBackground;
- (_Bool)shouldPropagateStylesToPickers;
- (_Bool)datePickerHasNavigationTitle;
- (id)cardClippingImageLabelBevelColor;
- (id)cardClippingImageLabelColor;
- (id)cardPhotoEditPlaceholderImage;
- (_Bool)cardPlaceholderImageShouldApplyMaskAndOverlay;
- (id)cardPlaceholderCompanyImage;
- (id)cardPlaceholderPersonImage;
- (struct CGSize)cardPhotoShadowOffset;
- (id)cardPhotoShadowImage;
- (_Bool)cardPhotoShouldApplyOverlayImageWhenLabelPresent;
- (id)cardPhotoEditOverlayImage;
- (id)cardPhotoFacebookAttributionImage;
- (id)cardPhotoOverlayImage;
- (id)cardPhotoMaskImage;
- (struct CGSize)cardPhotoOffset;
- (double)cardPhotoFrameBorderSize;
- (id)cardPhotoBackgroundImage;
- (id)personViewGetFavoritesBadgeHighlighted;
- (id)personViewGetFavoritesBadge;
- (_Bool)cardSectionDrawsDefaultTopShadow;
- (_Bool)cardSectionAlwaysWantsHeader;
- (_Bool)cardShouldUseSeparateSectionsForUnknownCardActions;
- (_Bool)cardTableViewUsesDistinctSectionHeaderFooterHeights;
- (_Bool)cardTableUsesRowFadeAnimation;
- (id)cardDeleteButtonImagePressed;
- (id)cardDeleteButtonImage;
- (long long)cardCellSelectionStyle;
- (id)newCardDividerViewVertical:(_Bool)arg1;
- (id)cardCellDividerShadowColorVertical:(_Bool)arg1;
- (id)cardCellDividerColorVertical:(_Bool)arg1;
- (id)cardCellBackgroundColor;
- (_Bool)cardCellLooksDifferentWhenEditing;
- (void)setIndicatesFaceTimeHistory:(_Bool)arg1 onActionButton:(id)arg2;
- (_Bool)cardActionsAllowFaceTimeFavorites;
- (_Bool)cardActionsAllowVoiceFavorites;
- (id)cardActionConferenceIconPressed;
- (id)cardActionConferenceIcon;
- (id)cardActionButtonBackgroundHighlighted;
- (id)cardActionButtonBackgroundNormal;
- (long long)cardActionButtonType;
- (id)personHeaderPasteboardColor;
- (struct CGSize)personHeaderShadowOffset;
- (struct CGSize)personActionShadowOffset;
- (id)personActionShadowColor;
- (id)personActionHighlightedColor;
- (id)personActionColor;
- (id)personActionFont;
- (id)personLabelShadowColor;
- (id)personLabelHighlightedColor;
- (id)personLabelColor;
- (id)personValueImportantHighlightColor;
- (id)personValueImportantColor;
- (id)personValueEmphasizedHighlightColor;
- (id)personValueEmphasizedColor;
- (id)cardLabelEmphasizedHighlightedTextColor;
- (id)cardLabelHighlightedTextColor;
- (id)editorViewColor;
- (id)cardLabelSelectedBackgroundColor;
- (id)cardLabelTextColor;
- (_Bool)cardValueHighlightsWhenTouched;
- (id)cardValueClearButtonImage;
- (id)cardValueHighlightedTextColor;
- (id)cardValueTextColor;
- (id)cardHeaderDefaultLabelTextColor;
- (long long)headerViewBorderStyle;
- (id)cardTableCellBorderColor;
- (id)personHeaderShadowColor;
- (id)cardTaglineTextColor;
- (id)cardHeadlineTextColor;
- (_Bool)cardTableShouldRemoveBackgroundView;
- (id)memberPlaceholderCompanyImage;
- (id)memberPlaceholderPersonImage;
- (id)memberPhotoOverlayImage;
- (id)memberPhotoMaskImage;
- (_Bool)membersSearchBarIsInTableHeader;
- (id)memberSectionListHeaderImage;
- (id)membersIndexTrackingBackgroundColor;
- (id)membersIndexTextColor;
- (double)membersIndexMaximumHeight;
- (long long)membersSelectionStyle;
- (id)memberSearchFieldBackgroundColor;
- (id)memberNameMeCardTextColor;
- (id)memberNameSelectedShadowColor;
- (id)memberNameShadowColor;
- (id)memberNameSelectedColor;
- (id)memberNameTextColor;
- (id)cardSectionBackgroundColor;
- (id)membersSearchCellBackgroundColor;
- (id)membersSearchBackgroundColor;
- (id)membersBackgroundColor;
- (id)memberHeaderBackgroundView;
- (id)membersHeaderBackgroundColor;
- (id)membersHeaderContentViewBackgroundColor;
- (id)newBackgroundViewForCellStyle:(int)arg1 selected:(_Bool)arg2;
- (id)newTableFooterViewForCellStyle:(int)arg1;
- (id)newAccessoryDisclosureIndicatorForCellStyle:(int)arg1;
- (id)_accessoryDisclosureIndicatorHighlightedImageShadowed;
- (id)_accessoryDisclosureIndicatorImageShadowed;
- (id)_accessoryDisclosureIndicatorHighlightedImage;
- (id)_accessoryDisclosureIndicatorImage;
- (id)separatorColorForCellStyle:(int)arg1;
- (long long)separatorStyleForCellStyle:(int)arg1;
- (id)shadowColorForCellStyle:(int)arg1;
- (int)abCellStyleForCardTableLinkingUI;
- (int)abCellStyleForCardTableWhenEditing:(_Bool)arg1;
- (int)abCellStyleForMembersTable;
- (int)abCellStyleForGroupsTablePlain;
- (int)abCellStyleForGroupsTableGrouped;
- (double)personViewHeaderImageHeight;
- (double)personViewHeaderImageWidth;
- (_Bool)shouldUseCardContentProviderWhenAvailable;
@property(readonly, nonatomic) _Bool vibrationPickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) struct UIEdgeInsets vibrationPickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset vibrationPickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomVibrationPickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForVibrationPickerCell;
- (id)newBackgroundViewForSelectedVibrationPickerCell:(_Bool)arg1;
@property(readonly, nonatomic) UIColor *vibrationPickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellHighlightedTextColor;
- (id)vibrationPickerCellSelectedTextColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerCellTextFont;
@property(readonly, nonatomic) long long vibrationPickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool vibrationPickerUsesOpaqueBackground;
@property(readonly, nonatomic) _Bool tonePickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) struct UIEdgeInsets tonePickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset tonePickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *tonePickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomTonePickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForTonePickerCell;
- (id)newBackgroundViewForSelectedTonePickerCell:(_Bool)arg1;
@property(readonly, nonatomic) UIColor *tonePickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *tonePickerCellHighlightedTextColor;
- (id)tonePickerCellSelectedTextColor;
@property(readonly, nonatomic) UIColor *tonePickerCellTextColor;
@property(readonly, nonatomic) UIFont *tonePickerCellTextFont;
@property(readonly, nonatomic) long long tonePickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool tonePickerUsesOpaqueBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) long long tonePickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *tonePickerCustomTableSeparatorColor;
@property(readonly, nonatomic) long long vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *vibrationPickerCustomTableSeparatorColor;

@end

@interface ABFavoritesList : NSObject
{
    ABFavoritesListManager *_favoritesListManager;
}

+ (id)sharedInstanceWithAddressBook:(void *)arg1;
+ (id)sharedInstance;
- (_Bool)entryIsDuplicateAndThusRemoved:(id)arg1 oldUid:(int)arg2;
- (_Bool)addEntryForPerson:(void *)arg1 property:(int)arg2 withIdentifier:(int)arg3;
- (id)entryWithType:(int)arg1 forPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (id)entryWithIdentifier:(int)arg1 forPerson:(void *)arg2;
- (_Bool)containsEntryWithType:(int)arg1 forPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)containsEntryWithIdentifier:(int)arg1 forPerson:(void *)arg2;
- (void)recacheIdentitiesSoon;
- (void)save;
- (void)moveEntryAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)removeEntryAtIndex:(long long)arg1;
- (void)addEntry:(id)arg1;
- (id)entriesForPerson:(void *)arg1;
- (_Bool)isFull;
- (id)entries;
- (void)_applicationWillSuspend:(id)arg1;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;

@end

@interface ABFMFActionButtons : NSObject <ABFMFActionButtonsDelegate>
{
    ABUnknownPersonViewController *_upvc;
    UIButton *_messageButton;
    UIButton *_facetimeButton;
    UIButton *_callButton;
}

- (void)showFMFCallButton:(_Bool)arg1 withAction:(id)arg2;
- (void)showFMFFacetimeButton:(_Bool)arg1 withAction:(id)arg2;
- (void)showFMFMessageButton:(_Bool)arg1 withAction:(id)arg2;
@property(readonly, nonatomic) _Bool hasTelephonyCapability;
@property(nonatomic) void *displayedPerson;
- (void)dealloc;
- (id)initWithMessageButton:(id)arg1 facetimeButton:(id)arg2 callButton:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABFMFActionButtonsStyleProvider : ABStyleProvider
{
}

- (_Bool)reloadCallAction;
- (_Bool)refreshTinyActionCell;
- (_Bool)presentModalViewInPopover;

@end

@interface ABGroupTableCell : UITableViewCell <ABGroupWrapperDelegate>
{
    ABGroupWrapper *_groupWrapper;
    ABStyleProvider *_styleProvider;
}

@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) ABGroupWrapper *groupWrapper; // @synthesize groupWrapper=_groupWrapper;
- (void)groupWrapper:(id)arg1 didBecomeSelected:(_Bool)arg2;
- (void)updateFromGroupWrapper;
- (void)tintColorDidChange;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABStarkFaceTimeCell : ABContactCell
{
    id <ABPropertyCellDelegate> _delegate;
    NSDictionary *_labelTextAttributes;
    UILabel *_faceTimeLabel;
    ABTransportButton *_transportIcon;
}

+ (_Bool)requiresConstraintBasedLayout;
@property(readonly, nonatomic) ABTransportButton *transportIcon; // @synthesize transportIcon=_transportIcon;
@property(retain, nonatomic) UILabel *faceTimeLabel; // @synthesize faceTimeLabel=_faceTimeLabel;
@property(copy, nonatomic) NSDictionary *labelTextAttributes; // @synthesize labelTextAttributes=_labelTextAttributes;
@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void)transportButtonClicked:(id)arg1;
- (void)performDefaultAction;
- (id)constantConstraints;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)tintColorDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABGroupWrapper : NSObject
{
    void *_addressBook;
    NSString *_accountIdentifier;
    void *_source;
    void *_group;
    NSString *_cachedName;
    ACAccountStore *_accountStore;
    id _delegate;
    _Bool _shouldBeSelectedWhenAllChildrenAreSelected;
    _Bool _selected;
    NSSet *_childGroupWrappers;
    ABGroupWrapper *_parentGroupWrapper;
}

+ (id)newGroupWrapperFromDictionaryRepresentation:(id)arg1 withAddressBook:(void *)arg2;
+ (id)newGroupWrappersWithAccountIdentifier:(id)arg1 addressBook:(void *)arg2 excludingSearchableStores:(_Bool)arg3;
+ (id)newGroupWrappersWithAccountIdentifier:(id)arg1 addressBook:(void *)arg2;
+ (id)newGroupWrappersWithAccountIdentifier:(id)arg1 addressBook:(void *)arg2 accountStore:(id)arg3;
+ (id)newGroupWrappersWithAccountIdentifier:(id)arg1 addressBook:(void *)arg2 accountStore:(id)arg3 excludingSearchableStores:(_Bool)arg4 isSoleAccount:(_Bool)arg5;
@property(nonatomic) ABGroupWrapper *parentGroupWrapper; // @synthesize parentGroupWrapper=_parentGroupWrapper;
@property(readonly, nonatomic) void *group; // @synthesize group=_group;
@property(readonly, nonatomic) void *source; // @synthesize source=_source;
@property(readonly, nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
@property(readonly, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic) id <ABGroupWrapperDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldBeSelectedWhenAllChildrenAreSelected; // @synthesize shouldBeSelectedWhenAllChildrenAreSelected=_shouldBeSelectedWhenAllChildrenAreSelected;
@property(retain, nonatomic) NSSet *childGroupWrappers; // @synthesize childGroupWrappers=_childGroupWrappers;
@property(retain, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
- (id)description;
@property(readonly, nonatomic) int sourceType;
- (_Bool)isEqual:(id)arg1;
- (id)copyDictionaryRepresentation;
@property(readonly, nonatomic) NSString *_accountDescriptionBasedOnIdentifier;
- (long long)compareToGroupWrapper:(id)arg1;
- (long long)score;
- (void)childGroupWrapper:(id)arg1 didBecomeSelected:(_Bool)arg2;
- (_Bool)toggleSelection;
- (id)_rootGroupWrapper;
- (void)setSelected:(_Bool)arg1 propagateSelectionToChildren:(_Bool)arg2;
@property(readonly, nonatomic) NSString *name;
- (_Bool)showLinkedPeople;
- (_Bool)isDirectoryWrapper;
- (_Bool)isContainerWrapper;
- (_Bool)isGlobalWrapper;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1 accountIdentifier:(id)arg2 source:(void *)arg3 group:(void *)arg4;

@end

@interface ABGlobalGroupWrapper : ABGroupWrapper
{
}

+ (id)newGlobalGroupWrapperWithAddressBook:(void *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)name;
- (_Bool)isGlobalWrapper;

@end

@interface ABContainerGroupWrapper : ABGroupWrapper
{
}

- (_Bool)isEqual:(id)arg1;
- (id)name;
- (_Bool)isContainerWrapper;

@end

@interface ABDirectoryGroupWrapper : ABGroupWrapper
{
}

+ (id)newDirectoryGroupWrapperWithAccountIdentifier:(id)arg1 store:(void *)arg2 addressBook:(void *)arg3;
- (_Bool)isEqual:(id)arg1;
- (id)name;
- (int)sourceType;
- (_Bool)isDirectoryWrapper;

@end

@interface ABHighlightingTextField : UITextField
{
    _Bool _isHighlighted;
    _Bool _isHighlightingEnabled;
    UIColor *_savedTextColor;
    UIColor *_highlightedTextColor;
    _Bool _showsClearButtonWhenEmpty;
    id <ABResponderDelegate> _responderDelegate;
}

@property(nonatomic) _Bool showsClearButtonWhenEmpty; // @synthesize showsClearButtonWhenEmpty=_showsClearButtonWhenEmpty;
@property(nonatomic) id <ABResponderDelegate> responderDelegate; // @synthesize responderDelegate=_responderDelegate;
@property(retain, nonatomic, setter=abSetHighlightedTextColor:) UIColor *abHighlightedTextColor; // @synthesize abHighlightedTextColor=_highlightedTextColor;
@property(nonatomic, setter=abSetHighlightingEnabled:) _Bool abIsHighlightingEnabled; // @synthesize abIsHighlightingEnabled=_isHighlightingEnabled;
@property(nonatomic, setter=abSetHighlighted:) _Bool abIsHighlighted; // @synthesize abIsHighlighted=_isHighlighted;
- (id)_previousKeyResponder;
- (id)_nextKeyResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)_showsClearButtonWhenEmpty;
- (void)setTextColor:(id)arg1;
- (void)dealloc;

@end

@interface ABImageAdditions : NSObject
{
}

+ (struct CGRect)rectFromDictionary:(id)arg1;
+ (id)newDictionaryFromRect:(struct CGRect)arg1;
+ (void)forEachImageFormat:(CDUnknownBlockType)arg1;
+ (unsigned long long)indexForImageFormat:(int)arg1;

@end

@interface ABImagePickerController : ABContentController <UIModalViewDelegate, UINavigationControllerDelegate, UIImagePickerControllerDelegate, UIActionSheetDelegate, UIAlertViewDelegate, UIPopoverControllerDelegate, ABMultipleSourceImagePickerDelegate>
{
    _Bool _hasExistingPhoto;
    _Bool _allowsEditingExistingPhoto;
    _Bool _canChoosePhoto;
    _Bool _canChooseFromMultiplePhotos;
    _Bool _confirmingDelete;
    _Bool _applyImageChangesToAllPeople;
    UIImagePickerController *_imagePicker;
    NSArray *_people;
    NSArray *_writablePeople;
    NSDictionary *_animationContextDictionary;
    CAKeyframeAnimation *_bounceAnimation;
    UIPopoverController *_popoverPresenter;
    _Bool _editingImage;
    id <ABPersonImageDataDelegate> _imageDataDelegate;
}

@property(nonatomic) id <ABPersonImageDataDelegate> imageDataDelegate; // @synthesize imageDataDelegate=_imageDataDelegate;
- (void)multipleSourcePickerDidSelectPhotoPicker:(id)arg1;
- (void)multipleSourcePicker:(id)arg1 didSelectPerson:(id)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)deletePhotoNoConfirm;
- (void)delayedPerform:(SEL)arg1 withObject:(id)arg2;
- (void)delayedPerform:(SEL)arg1;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (id)ab_windowContentViewForView:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStopAfterDelay:(id)arg1;
- (id)_createImagePickerForEditingImageData:(id)arg1 shouldSaveFullSize:(_Bool)arg2 cropRect:(struct CGRect)arg3;
- (id)_createImagePicker;
- (void)suspend;
- (void)resume;
- (void)cancelPicker;
- (void)deletePhoto:(_Bool)arg1;
- (void)doEditPhoto;
- (void)editPhoto;
- (void)chooseExisting;
- (void)usePhotoFromPerson:(id)arg1;
- (void)choosePhoto;
- (id)buttonTitlesAndIndicesForPickingPreferredPhoto;
- (void)addButtonForSource:(_Bool)arg1 suffix:(long long)arg2 name:(id)arg3 indexInAllPeople:(long long)arg4 toArray:(id)arg5;
- (id)_formatStringForSource:(void *)arg1 withSuffix:(_Bool)arg2 useAbbreviatedStrings:(_Bool)arg3;
- (void)takePhoto;
- (void)_tearDownImagePickerController;
- (void)_showActionSheet:(id)arg1 previousOwner:(id)arg2;
- (id)_removePreviousSheet;
- (void)_showImagePickerWithPriorConfirmation:(_Bool)arg1;
- (_Bool)_hasMultipleWritablePeople;
- (id)popoverPresenterForViewController:(id)arg1;
- (void)orderOut:(id)arg1;
- (void)releaseImagePicker;
- (void)reload;
- (void)back:(_Bool)arg1 save:(_Bool)arg2;
- (id)contentView;
- (_Bool)hasMultipleActions;
- (_Bool)canTakePhoto;
- (void)dealloc;
- (id)initWithContentControllerDelegate:(id)arg1 addressBook:(void *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABToneKitPickerStyleProvider : NSObject <TKTonePickerStyleProvider, TKVibrationPickerStyleProvider>
{
    CNContactStyle *_contactStyle;
}

@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(readonly, nonatomic) _Bool vibrationPickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) struct UIEdgeInsets vibrationPickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset vibrationPickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *vibrationPickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomVibrationPickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForVibrationPickerCell;
- (id)newBackgroundViewForSelectedVibrationPickerCell:(_Bool)arg1;
@property(readonly, nonatomic) UIColor *vibrationPickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *vibrationPickerCellTextColor;
@property(readonly, nonatomic) UIFont *vibrationPickerCellTextFont;
@property(readonly, nonatomic) long long vibrationPickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *vibrationPickerCustomTableSeparatorColor;
@property(readonly, nonatomic) long long vibrationPickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool vibrationPickerUsesOpaqueBackground;
@property(readonly, nonatomic) _Bool tonePickerHeaderTextShouldBeUppercase;
@property(readonly, nonatomic) struct UIEdgeInsets tonePickerHeaderTextPaddingInsets;
@property(readonly, nonatomic) struct UIOffset tonePickerHeaderTextShadowOffset;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextShadowColor;
@property(readonly, nonatomic) UIColor *tonePickerHeaderTextColor;
@property(readonly, nonatomic) UIFont *tonePickerHeaderTextFont;
@property(readonly, nonatomic) _Bool wantsCustomTonePickerHeaderView;
- (id)newAccessoryDisclosureIndicatorViewForTonePickerCell;
- (id)newBackgroundViewForSelectedTonePickerCell:(_Bool)arg1;
@property(readonly, nonatomic) UIColor *tonePickerCellBackgroundColor;
@property(readonly, nonatomic) UIColor *tonePickerCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *tonePickerCellTextColor;
@property(readonly, nonatomic) UIFont *tonePickerCellTextFont;
@property(readonly, nonatomic) long long tonePickerCustomTableSeparatorBackdropOverlayBlendMode;
@property(readonly, nonatomic) UIColor *tonePickerCustomTableSeparatorColor;
@property(readonly, nonatomic) long long tonePickerTableViewSeparatorStyle;
@property(readonly, nonatomic) _Bool tonePickerUsesOpaqueBackground;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABInstantMessagePickerController : ABPickerController
{
}

+ (id)defaultServices;
- (id)titleForAddCustomItem;
- (id)titleForPickerItem:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ABInstantMessageServicePickerViewController : ABServicePickerViewController
{
}

+ (id)defaultServices;
- (id)init;

@end

@interface ABItemLabelPicker : UIView <UITableViewDataSource, UITableViewDelegate, ABSimpleTextInputViewControllerDelegate>
{
    id _delegate;
    id _editedItem;
    NSString *_savedLabel;
    NSString *_selectedLabel;
    NSIndexPath *_selectedPath;
    UITableView *_tableView;
    NSMutableArray *_additionalLabels;
    struct __CFArray *_sortedCustomItemLabelInfos;
    struct __CFArray *_sortedDefaultItemLabelInfos;
    void *_sortedCustomItemLabelInfosMemory;
    void *_sortedDefaultItemLabelInfosMemory;
    ABPropertyGroup *_propertyGroup;
    int _property;
    long long _itemIndex;
    void *_addressBook;
    _Bool _addLabelDisabled;
    _Bool _didCreateNewLabel;
    ABStyleProvider *_styleProvider;
}

+ (id)defaultLabelForProperty:(int)arg1 person:(id)arg2 addressBook:(void *)arg3;
+ (id)defaultLabelsForProperty:(int)arg1 person:(id)arg2 addressBook:(void *)arg3 outBestLabelIndex:(long long *)arg4 forceIncludeLabels:(id)arg5;
+ (id)defaultLabelsForPropertyGroup:(id)arg1 index:(long long)arg2 addressBook:(void *)arg3 outBestLabelIndex:(long long *)arg4 forceIncludeLabels:(id)arg5;
+ (id)_defaultLabelsForProperty:(int)arg1 person:(id)arg2 propertyGroup:(id)arg3 index:(long long)arg4 addressBook:(void *)arg5 outBestLabelIndex:(long long *)arg6 forceIncludeLabels:(id)arg7;
+ (struct __CFDictionary *)copyLabelUsageForProperty:(int)arg1 person:(id)arg2;
+ (struct __CFDictionary *)copyLabelUsageForPropertyGroup:(id)arg1 person:(id)arg2;
+ (id)defaultLabelsForProperty:(int)arg1 policy:(void *)arg2;
+ (id)builtInLabelsForProperty:(int)arg1;
@property(nonatomic) _Bool didCreateNewLabel; // @synthesize didCreateNewLabel=_didCreateNewLabel;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic, getter=isAddLabelDisabled) _Bool addLabelDisabled; // @synthesize addLabelDisabled=_addLabelDisabled;
@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)simpleTextInputViewControllerShouldDismissKeyboard:(id)arg1;
- (void)simpleTextInputViewController:(id)arg1 didCompleteWithValue:(id)arg2;
- (void)displayScrollerIndicators;
- (_Bool)shouldPopItem;
- (void)createNewCustomLabel;
- (void)toggleEditing;
- (void)setIsEditing:(_Bool)arg1 animate:(_Bool)arg2;
- (_Bool)isEditing;
- (_Bool)canEdit;
- (void)_didEndPickingAndConfirmed:(_Bool)arg1 animate:(_Bool)arg2;
- (void)buildUI;
- (void)setDelegate:(id)arg1;
- (void)reloadData;
- (void)reloadItemLabels;
- (_Bool)allowsCustomLabels;
- (id)selectedLabel;
- (void)setSelectedLabel:(id)arg1;
- (void)_matchSelectedPathWithSelectedLabel;
- (void)_setSelectedLabel:(id)arg1;
- (void)_setSelectedPath:(id)arg1;
- (void)_setSelectedLabel:(id)arg1 atPath:(id)arg2;
- (id)savedLabel;
- (void)setSavedLabel:(id)arg1;
- (void)setAdditionalLabels:(id)arg1;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
- (void)setPropertyGroup:(id)arg1 itemIndex:(long long)arg2;
- (void)resetLabelCaches;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABAdjusterRecord : NSObject
{
    UIScrollView *_scrollView;
    double _adjustment;
    _Bool _manuallyAdjusted;
    NSTimer *_delayedScrollTimer;
}

+ (id)recordWithScrollView:(id)arg1;
@property(retain, nonatomic) NSTimer *delayedScrollTimer; // @synthesize delayedScrollTimer=_delayedScrollTimer;
@property(nonatomic) _Bool manuallyAdjusted; // @synthesize manuallyAdjusted=_manuallyAdjusted;
@property(nonatomic) double adjustment; // @synthesize adjustment=_adjustment;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)cancelDelayedAdjustments;
- (void)_adjustTableForKeyboardInfo:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface ABKeyboardAdjuster : NSObject
{
    NSMutableSet *_adjustmentRecords;
    _Bool _active;
}

+ (id)sharedAdjuster;
@property(nonatomic) _Bool active; // @synthesize active=_active;
- (void)resetAdjustment;
- (void)dateFieldDateDidEndEditingNotification:(id)arg1;
- (void)dateFieldDateDidBeginEditingNotification:(id)arg1;
- (void)textViewTextDidEndEditingNotification:(id)arg1;
- (void)textViewTextDidBeginEditingNotification:(id)arg1;
- (void)textFieldTextDidEndEditingNotification:(id)arg1;
- (void)textFieldTextDidBeginEditingNotification:(id)arg1;
- (_Bool)shouldForceAutomaticKeyboardForView:(id)arg1;
- (_Bool)containsScrollView:(id)arg1;
- (void)removeScrollView:(id)arg1;
- (void)addScrollView:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)manuallyAdjustEdgeInsets:(struct UIEdgeInsets)arg1 force:(_Bool)arg2;
- (void)_adjustTableForKeyboardInfo:(id)arg1;
- (void)cancelDelayedAdjustmentsForView:(id)arg1;
- (id)recordForScrollView:(id)arg1;

@end

@interface ABKeyboardSettings : NSObject
{
}

+ (_Bool)usesTextSuggestionDelegate:(id)arg1;
+ (_Bool)contentsIsSingleValue:(id)arg1;
+ (long long)autocapitalizationTypeFromDictionary:(id)arg1;
+ (long long)autocorrectionTypeFromDictionary:(id)arg1;
+ (long long)keyboardTypeFromDictionary:(id)arg1;
+ (id)newKeyboardSettingsForProperty:(int)arg1;

@end

@interface ABLabelPickerController : ABPickerController
{
    ABPropertyGroupItem *_item;
}

@property(readonly, nonatomic) ABPropertyGroupItem *item; // @synthesize item=_item;
- (void)viewWillAppear:(_Bool)arg1;
- (void)removeCustomItem:(id)arg1;
- (void)dealloc;
- (id)initForPropertyItem:(id)arg1;

@end

@interface ABLabelPickerViewController : ABPickerViewController
{
    NSArray *_additionalLabels;
    NSString *_selectedLabel;
    void *_addressBook;
    ABPropertyGroup *_propertyGroup;
    long long _itemIndex;
    ABItemLabelPicker *_labelPicker;
    _Bool _didCreateNewLabel;
}

@property(nonatomic) _Bool didCreateNewLabel; // @synthesize didCreateNewLabel=_didCreateNewLabel;
@property(retain, nonatomic) NSString *selectedLabel; // @synthesize selectedLabel=_selectedLabel;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)loadView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (_Bool)_allowsAutorotation;
- (_Bool)itemLabelPickerShouldDismissKeyboard:(id)arg1;
- (void)itemLabelPicker:(id)arg1 endedWithSelectionConfirmed:(_Bool)arg2 animate:(_Bool)arg3;
- (void)itemLabelPickerDeletedLastCustomLabel:(id)arg1;
- (void)itemLabelPicker:(id)arg1 deletedCustomLabel:(id)arg2;
- (void)itemLabelPickerDidChangeSelection:(id)arg1;
- (double)ab_heightToFitForViewInPopoverView;
- (id)labelPicker;
- (struct CGSize)fullScreenContentSize;
- (void)setStyleProvider:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1 propertyGroup:(id)arg2 itemIndex:(long long)arg3 additionalLabels:(id)arg4;

@end

@interface ABLinkedCardsCell : ABLabeledCell
{
    id <ABPropertyCellDelegate> _delegate;
    UILabel *_sourceLabel;
    UILabel *_nameLabel;
}

+ (_Bool)wantsChevron;
@property(readonly, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(readonly, nonatomic) UILabel *sourceLabel; // @synthesize sourceLabel=_sourceLabel;
@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setCardGroupItem:(id)arg1;
- (void)performDefaultAction;
- (_Bool)shouldPerformDefaultAction;
- (id)valueView;
- (id)labelView;
- (void)dealloc;

@end

@interface ABLinkedCardsEditingCell : ABLinkedCardsCell
{
}

+ (_Bool)wantsHorizontalLayout;

@end

@interface ABLinkedCardsPlaceholderCell : ABPropertyPlaceholderCell
{
    id <ABPropertyCellDelegate> _delegate;
}

@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void)performDefaultAction;

@end

@interface ABMemberCell : UITableViewCell
{
    ABStyleProvider *_styleProvider;
    _Bool _isMeCard;
    ABUIPerson *_person;
}

@property(nonatomic) _Bool isMeCard; // @synthesize isMeCard=_isMeCard;
@property(retain, nonatomic) ABUIPerson *person; // @synthesize person=_person;
@property(readonly, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
- (id)_cachedPlaceholderTextAttributes;
- (id)_cachedBoldTextAttributes;
- (id)_cachedRegularTextAttributes;
- (id)_cachedMemberNameRegularFont;
- (id)_attributedNameWithNameComponents:(id)arg1 delimiter:(id)arg2 highlightedIndex:(long long)arg3 romanName:(_Bool)arg4;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (void)dealloc;
- (id)initWithStyleProvider:(id)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABMemberNameViewCache : NSObject
{
    NSCache *_styleProvidersCache;
}

+ (id)sharedInstance;
- (id)_cacheForStyleProvider:(id)arg1;
- (id)placeholderTextAttributesForStyleProvider:(id)arg1;
- (id)boldTextAttributesForStyleProvider:(id)arg1;
- (id)regularTextAttributesForStyleProvider:(id)arg1;
- (id)memberNamePlaceholderFontForStyleProvider:(id)arg1;
- (id)memberNameBoldFontForStyleProvider:(id)arg1;
- (id)memberNameRegularFontForStyleProvider:(id)arg1;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ABMembersController : ABContentController <UISearchControllerDelegate, UISearchResultsUpdating, ABMembersDataSourceDelegate, UITextFieldDelegate, UISearchDisplayDelegate, ABSearchOperationDelegate, UISearchBarDelegate>
{
    ABMembersDataSource *_membersDataSource;
    ABMembersFilteredDataSource *_searchDataSource;
    id <ABStyleProvider> _styleProvider;
    unsigned long long _cellsCreated;
    unsigned long long _memberCount;
    UITableView *_tableView;
    UISearchController *_searchController;
    UISearchDisplayController *_searchDisplayController;
    UITableViewController *_searchResultsController;
    _UIContentUnavailableView *_contentUnavailableView;
    UIViewController *_parentViewController;
    unsigned long long _searchSequenceNumber;
    NSOperationQueue *_operationQueue;
    id <ABMembersControllerDelegate> _membersControllerDelegate;
    _Bool _showingCardFromSearch;
    _Bool _shouldDeactivateSearch;
    NSIndexPath *_selectedIndexPath;
    _Bool _searchEnabled;
    _Bool _needToClearOldResults;
    long long _initiallyVisibleRow;
    id <ABMembersControllerSearchCompletionDelegate> _searchCompletionDelegate;
    _UINavigationControllerPalette *_searchPalette;
}

+ (id)newNameSearchOperationWithString:(id)arg1 contactsFilter:(id)arg2 addressBook:(void *)arg3 delegate:(id)arg4 inOutSequenceNumber:(unsigned long long *)arg5;
@property(retain, nonatomic) _UINavigationControllerPalette *searchPalette; // @synthesize searchPalette=_searchPalette;
@property(nonatomic) id <ABMembersControllerDelegate> membersControllerDelegate; // @synthesize membersControllerDelegate=_membersControllerDelegate;
@property(nonatomic) id <ABMembersControllerSearchCompletionDelegate> searchCompletionDelegate; // @synthesize searchCompletionDelegate=_searchCompletionDelegate;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic, getter=isSearchEnabled) _Bool searchEnabled; // @synthesize searchEnabled=_searchEnabled;
- (void)_deselectAllRowsWithAnimation;
- (void)_updateCountString;
- (void)_updateNoContactsViewAnimated:(_Bool)arg1;
- (void)_updateEmptyTableViewAnimated:(_Bool)arg1;
- (void)abScrollViewDidBeginDragging:(id)arg1;
- (_Bool)abDataSource:(id)arg1 selectedPerson:(void *)arg2 atIndexPath:(id)arg3 withMemberCell:(id)arg4 animate:(_Bool)arg5;
- (_Bool)abDataSourceAllowsShowingPersonsCards:(id)arg1;
- (_Bool)abDataSource:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (_Bool)showCardForPerson:(void *)arg1 withMemberCell:(id)arg2 animate:(_Bool)arg3;
- (void)displayedMembersListChanged;
- (void)_reselectLastSelectedCellIfNeeded;
- (void)setBannerTitle:(id)arg1 value:(id)arg2;
- (void)searchDisplayControllerDidEndSearch:(id)arg1;
- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)didDismissSearchController:(id)arg1;
- (void)willDismissSearchController:(id)arg1;
- (void)updateSearchResultsForSearchController:(id)arg1;
@property(readonly, nonatomic) NSString *currentSearchText;
- (_Bool)_shouldDeactivateOnCancelButtonClicked;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)willPresentSearchController:(id)arg1;
- (void)searchOperation:(id)arg1 didFindMatches:(id)arg2 moreComing:(_Bool)arg3;
- (void)reloadSearchTableView;
- (id)_localizedStringForError:(int)arg1;
- (id)__searchController;
- (id)__searchBar;
- (void)_searchForWords:(id)arg1;
- (id)operationQueue;
- (void)_cancelGALSearch;
- (void)cancelSearching:(id)arg1;
- (void)cancelSearchingAnimated:(_Bool)arg1;
- (void)resetStateForDisplayedFilterChange;
- (_Bool)shouldShowGroups;
- (id)selectedCell;
- (void)setCellsCreated:(unsigned long long)arg1;
- (unsigned long long)cellsCreated;
- (void)deselectAllRowsWithAnimation:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)scrollMemberToTop:(void *)arg1;
- (void)_scrollIndexToTop:(long long)arg1;
- (_Bool)selectAndScrollMemberVisible:(void *)arg1;
- (id)tableViewPathToMember:(void *)arg1;
- (long long)globalIndexOfMember:(void *)arg1;
@property(readonly, nonatomic) UISearchBar *searchBar;
@property(readonly, nonatomic) UITableView *currentTableView;
@property(readonly) UITableView *searchResultsTableView;
- (void)stopScrolling;
- (id)contentView;
- (id)tableView;
- (void)_reloadFontSizes;
- (void)_updateRowsHeights;
- (_Bool)shouldShowIndex;
@property(readonly, nonatomic) _Bool isServerSearchGroup;
- (_Bool)isSearching;
- (void)setParentViewController:(id)arg1;
- (void)_setSelectedIndexPath:(id)arg1;
- (void *)_selectedPerson;
- (void)setAddressBook:(void *)arg1;
- (id)searchDataSource;
- (id)membersDataSource;
- (id)contactsFilter;
- (void)_applyStylesToTableView:(id)arg1;
- (void)reload;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABSectionListHeaderView : UITableViewHeaderFooterView
{
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface ABSectionListVibrantHeaderView : ABSectionListHeaderView
{
    _UIBackdropView *_backdrop;
    UIView *_plusDView;
    _Bool _wantsPlusDLayer;
}

@property(nonatomic) _Bool wantsPlusDLayer; // @synthesize wantsPlusDLayer=_wantsPlusDLayer;
- (void)setFloating:(_Bool)arg1;
- (void)setBackdropGroupName:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABMembersDataSource : NSObject <UITableViewDelegate, UITableViewDataSource>
{
    id <ABMembersDataSourceDelegate> _delegate;
    id <ABStyleProvider> _styleProvider;
    void *_addressBook;
    ABModel *_model;
    NSMutableArray *_sectionIndexTitles;
    struct __CFDictionary *_sectionHeaderToSortingIndex;
    struct __CFDictionary *_displayableSectionHeaderToSectionHeader;
    struct __CFDictionary *_sectionHeaderToDisplayableSectionHeader;
    struct __CFDictionary *_displayableSectionIndexToSectionIndex;
    struct __CFDictionary *_sectionIndexToDisplayableSectionIndex;
    ABBannerView *_bannerView;
    ABUIPerson *_meCard;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
@property(retain, nonatomic) ABModel *model; // @synthesize model=_model;
@property(nonatomic) id <ABMembersDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (struct CGRect)tableView:(id)arg1 frameForSectionIndexGivenProposedFrame:(struct CGRect)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)indexPathForDisplayedMemberIndex:(unsigned long long)arg1 inTableView:(id)arg2;
- (long long)globalRowForDisplayedMemberIndex:(unsigned long long)arg1;
- (unsigned long long)displayedMemberIndexForIndexPath:(id)arg1 inTableView:(id)arg2;
- (long long)globalRowForBanner;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (struct __CFDictionary *)sectionHeaderSortingIndices;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (id)tableView:(id)arg1 indexPathForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)titleForHeaderInSection:(long long)arg1;
- (id)displayableSectionHeaderFromSectionHeader:(id)arg1;
- (id)sectionIndexFromDisplayableSectionIndex:(id)arg1;
- (id)displayableSectionIndexFromSectionIndex:(id)arg1;
- (void)createAllDisplayableSectionIndexAndHeaderCaches;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)setBannerView:(id)arg1 inTableView:(id)arg2;
- (id)bannerView;
- (_Bool)shouldShowGroups;
- (void)_invalidateMeCard;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMembersFilteredDataSource : NSObject <UITableViewDelegate, UITableViewDataSource>
{
    NSMapTable *_records;
    NSMapTable *_sectionTitles;
    void *_addressBook;
    id <ABMembersDataSourceDelegate> _delegate;
    id <ABStyleProvider> _styleProvider;
    _Bool _isInPopover;
}

@property(nonatomic) _Bool isInPopover; // @synthesize isInPopover=_isInPopover;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
@property(nonatomic) id <ABMembersDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)viewForFooterInTableView:(id)arg1;
- (id)viewForHeaderInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)removeAllRecords;
- (void)addRecords:(id)arg1 toSection:(long long)arg2;
- (id)titleForSection:(long long)arg1;
- (void)setTitle:(id)arg1 forSection:(long long)arg2;
- (id)sectionArrayAtIndex:(long long)arg1;
- (unsigned long long)count;
@property(readonly, nonatomic) NSArray *records;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMembersViewController : ABAbstractViewController <ABNewPersonViewControllerDelegate, ABMembersControllerDelegate, ABViewControllerBannerViewProtocol, ABPersonEditDelegate>
{
    ABMembersController *_membersController;
    int _insertionProperty;
    id _insertionValue;
    id _insertionLabel;
    int _rightButtonBehavior;
    int _leftButtonBehavior;
    _Bool _shouldHandleExternalChangeOnPersonViewControllers;
    _UIAccessDeniedView *_accessDeniedView;
}

- (_Bool)personViewController:(id)arg1 shouldContinueAfterEditingConfirmed:(_Bool)arg2 forPerson:(void *)arg3;
- (void)insertProperty:(int *)arg1 insertValue:(id *)arg2 insertLabel:(id *)arg3;
- (void)preferredPersonDidChangeToPerson:(void *)arg1;
- (void)personWasDeleted;
- (void)linksUpdatedForPerson:(void *)arg1;
- (void)nameUpdatedForPerson:(void *)arg1;
- (id)membersController;
- (id)model;
- (void)resetStateForDisplayedFilterChange;
- (void)model:(id)arg1 localChangeWithInfo:(struct __CFDictionary *)arg2;
- (void)modelDatabaseChange:(id)arg1;
- (void)_updateForModel;
- (void)handleExternalChangeOnPersonViewControllers;
- (void)peoplePickerNavigationControllerNavigationBarStoppedAnimating:(id)arg1;
- (void)reallyHandleExternalChangeOnPersonViewControllers;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2 informDelegate:(_Bool)arg3;
- (void)personWasSelected:(void *)arg1;
- (void)cancelSearching:(id)arg1;
- (void)membersControllerDidEndServerSearch:(id)arg1;
- (void)membersControllerDidEndSearching:(id)arg1;
- (void)membersControllerWillEndSearching:(id)arg1;
- (void)membersControllerWillStartSearching:(id)arg1;
- (_Bool)membersController:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (void)showInsertEditorForPerson:(void *)arg1 animate:(_Bool)arg2;
- (_Bool)showCardForPerson:(void *)arg1 animate:(_Bool)arg2;
- (_Bool)showCardForPerson:(void *)arg1 animate:(_Bool)arg2 selectAndScrollToPerson:(_Bool)arg3;
- (_Bool)showCardForPerson:(void *)arg1 withMemberCell:(id)arg2 animate:(_Bool)arg3;
- (_Bool)showCardForPerson:(void *)arg1 withMemberCell:(id)arg2 animate:(_Bool)arg3 selectAndScrollToPerson:(_Bool)arg4;
- (void)scrollMemberToTop:(void *)arg1;
- (_Bool)selectAndScrollMemberVisible:(void *)arg1;
- (id)indexPathForMember:(void *)arg1;
- (_Bool)allowsShowingPersonsCards;
- (void)refreshEverythingNow;
- (void)startRefreshingAccount;
- (void)cancelRefreshingAccount;
- (_Bool)canHandleSnapbackIdentifier:(id)arg1 animated:(_Bool)arg2;
@property(readonly) CNContact *unsavedContact;
- (void)addPersonWithContact:(id)arg1 animated:(_Bool)arg2;
- (void)presentAddPersonViewController:(id)arg1 animated:(_Bool)arg2;
- (id)addPersonPresentationTarget;
- (void)addPerson:(id)arg1;
- (void)cancel:(id)arg1;
- (_Bool)isNavigationButtonEnabled:(int)arg1;
- (void)applicationDidResume;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (int)abViewControllerType;
- (void)updateNavigationButtonsAnimated:(_Bool)arg1;
- (void)updateNavigationButtonsInSearchMode:(_Bool)arg1;
- (void)updateNavigationButtonsInSearchMode:(_Bool)arg1 animated:(_Bool)arg2;
- (void)updateLeftNavigationButtonAnimated:(_Bool)arg1;
- (void)updateView;
- (void)updateTitle;
- (void)presentGroupsViewController;
@property(readonly) _Bool shouldShowGroups;
@property(readonly) _Bool allowsCardEditing;
@property(readonly) _Bool allowsCancel;
@property(readonly, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;
- (void)loadView;
- (id)tableView;
- (void)loadState;
- (void)setBannerTitle:(id)arg1 value:(id)arg2;
- (void)_applicationEnteringBackground;
- (void)_applicationEnteringForeground;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)setAddressBook:(void *)arg1;
- (void)setStyleProvider:(id)arg1;
- (id)styleProvider;
- (id)defaultPNGName;
- (void)resetInsertionData;
- (void)dealloc;
- (id)initWithModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABModelRecord : NSObject
{
    int _recordID;
    struct __CFString *_sortKey;
    long long _highlightIndex;
    _Bool _isGroup;
    NSArray *_namePieces;
}

- (struct __CFString *)sortKey;
- (id)namePieces;
- (_Bool)isGroup;
- (long long)highlightIndex;
- (int)recordID;
- (void)dealloc;
- (id)initWithRecordID:(int)arg1 highlightIndex:(long long)arg2 group:(_Bool)arg3 namePieces:(id)arg4 sortKey:(struct __CFString *)arg5;

@end

@interface ABModel : NSObject
{
    void *_addressBook;
    CDStruct_0029e0ce *_sectionLists;
    struct __CFDictionary *_headerSortKeyToHeaderString;
    struct _NSRange _displayedMemberPreparedRange;
    unsigned long long _numberOfDisplayedMembers;
    _Bool _displayedMembersAreSearchResults;
    void *_selectedPerson;
    unsigned int _displayOrdering;
    struct __CFArray *_databaseChangeDelegates;
    void *_backgroundAddressBook;
    _Bool _backgroundAddressBookInvalidated;
    NSMutableArray *_cachedModelRecords;
    NSRecursiveLock *_memberLock;
    _Bool _loadingInBackground;
    NSRecursiveLock *_backgroundLoadingLock;
    _Bool _backgroundInvalidated;
    id _delayedNotificationHandler;
    _Bool _autoInvalidateOnDatabaseChange;
    NSArray *_lastSeenSources;
    NSArray *_lastSeenGroups;
    int _meID;
    ABContactsFilter *_displayedContactsFilter;
    ABContactsFilter *_selectedContactsFilter;
    ABContactsFilter *_lastSelectedContactsFilter;
}

+ (unsigned int)sortOrdering;
+ (void)initialize;
- (void)stopDelayingNotificationsForDatabaseChangeDelegate:(id)arg1 andDeliverDelayedNotifications:(_Bool)arg2;
- (void)startDelayingNotificationsForDatabaseChangeDelegate:(id)arg1;
- (struct __CFArray *)_databaseChangeDelegates;
- (void)removeDatabaseChangeDelegate:(id)arg1;
- (void)addDatabaseChangeDelegate:(id)arg1;
- (void)setAutoInvalidateOnDatabaseChange:(_Bool)arg1;
- (void)_updateForMajorAddressBookChange:(_Bool)arg1;
- (void)updateForMajorAddressBookChange;
- (void)_modelDatabaseChangedExternally:(struct __CFDictionary *)arg1;
- (void)_modelDatabaseChangedLocally:(struct __CFDictionary *)arg1;
- (void)_notifyDelegatesOfExternalDatabaseChangeWithDeletedGroup:(_Bool)arg1 deletedPerson:(_Bool)arg2;
- (int)meID;
- (void)_cacheMeID;
- (id)allGroups;
- (id)allSources;
@property(nonatomic) void *addressBook;
@property(readonly, nonatomic) void *sourceForNewRecords;
@property(readonly, nonatomic) void *groupForNewRecords;
- (void)invalidateDisplayedMembers;
@property(retain, nonatomic) ABContactsFilter *displayedContactsFilter; // @synthesize displayedContactsFilter=_displayedContactsFilter;
@property(readonly, nonatomic) ABContactsFilter *selectedContactsFilter; // @synthesize selectedContactsFilter=_selectedContactsFilter;
- (void)setSelectedContactsFilter:(id)arg1;
- (void)invalidateLastSelectedContactsFilter;
- (void)setLastSelectedContactsFilter:(id)arg1;
@property(readonly, nonatomic) ABContactsFilter *lastSelectedContactsFilter; // @synthesize lastSelectedContactsFilter=_lastSelectedContactsFilter;
- (void *)selectedPerson;
- (void)setSelectedPerson:(void *)arg1;
- (void)prepareDisplayedMembersInRange:(struct _NSRange)arg1;
- (CDStruct_0029e0ce *)displayedMemberSectionLists;
- (void)copyDisplayedNamePieces:(id *)arg1 isGroup:(_Bool *)arg2 highlightIndex:(long long *)arg3 forMemberID:(int *)arg4 atindex:(long long)arg5;
- (long long)indexForDisplayedMember:(void *)arg1;
- (void *)displayedMemberAtIndex:(long long)arg1;
- (id)displayedMembersInRange:(struct _NSRange)arg1;
- (id)_displayedGroupMembersInRange:(struct _NSRange)arg1;
- (id)_partialDisplayedGroupMembersInRange:(struct _NSRange)arg1;
- (void)_startBackgroundThreadIfNecessaryScanningForward:(_Bool)arg1;
- (void)_loadMembersInBackground:(id)arg1;
- (struct __CFArray *)_copyArrayOfPeopleInDisplayedContactsFilterForRange:(struct _NSRange)arg1 inBackground:(_Bool)arg2;
- (void)_cachePeople:(struct __CFArray *)arg1 atEnd:(_Bool)arg2;
- (long long)_indexOfMember:(void *)arg1 inDisplayedMembers:(id)arg2;
- (id)_newModelRecordFromRecord:(void *)arg1;
- (unsigned long long)numberOfDisplayedMembers;
- (id)allCachedModelRecords;
- (unsigned long long)displayedMemberSectionListsCount;
- (void)setFilteredDisplayedMembers:(struct __CFArray *)arg1;
- (void)resetSectionList;
- (long long)resetFullSectionList:(struct __CFDictionary *)arg1 maximumSectionCount:(int)arg2;
- (long long)resetPartialSectionListWithMaximumCount:(int)arg1 headerSortKeyToHeaderString:(struct __CFDictionary *)arg2;
- (_Bool)shouldUsePartialLoadingForContactsFilter:(id)arg1;
- (struct __CFDictionary *)headerSortKeyToHeaderStringDictionary;
- (void)resetSortKeyToHeaderStringDictionary;
- (void)setDisplayNameOrdering:(unsigned int)arg1;
- (void)setSortOrdering:(unsigned int)arg1;
- (void)_waitUntilBackgroundThreadFinished;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;

@end

@interface ABMonogrammer : NSObject
{
    UIImage *_silhouetteMonogram;
    UIImage *_questionMarkMonogram;
    UIImage *_knockoutMaskMonogram;
    double _innerBorderWidth;
    NSString *_silhouetteImageName;
    long long _monogrammerStyle;
    UIColor *_tintColor;
    double _scale;
    _Bool _textKnockout;
    double _diameter;
    UIColor *_backgroundColor;
    UIFont *_font;
    UIColor *_textColor;
}

@property(nonatomic) _Bool textKnockout; // @synthesize textKnockout=_textKnockout;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) double diameter; // @synthesize diameter=_diameter;
- (id)_copyMonogramWithKnockoutMask;
- (id)_copyMonogramWithSilhouette;
- (id)_copyMonogramWithInitials:(id)arg1;
- (id)_copyMonogramWithImageData:(struct __CFData *)arg1;
- (id)_initialsForFirstName:(id)arg1 lastName:(id)arg2;
- (id)_initialsForPerson:(void *)arg1;
- (void)_clearMonogramCache;
- (id)defaultMonogram;
- (id)maskForMonogram;
- (id)knockoutMaskMonogram;
- (id)questionMarkMonogram;
- (id)silhouetteMonogram;
- (id)monogramForPersonWithFirstName:(id)arg1 lastName:(id)arg2;
- (id)monogramForPerson:(void *)arg1;
- (id)monogramForPerson:(void *)arg1 isPersonImage:(_Bool *)arg2;
- (_Bool)hasMonogramForPerson:(void *)arg1;
- (_Bool)hasImageOrInitialsForPerson:(void *)arg1;
- (id)silhouetteImageName;
- (double)innerBorderWidth;
- (void)monogramsForStark;
- (void)monogramsWithTint:(id)arg1;
- (void)monogramsAsFlatImages;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 diameter:(double)arg2;
- (id)init;

@end

@interface ABMultiCell : ABChameleonCell
{
    ABMultiCellContentView *_abMultiCellContentView;
    _Bool _editingDisabled;
}

@property(nonatomic, getter=isEditingDisabled) _Bool editingDisabled; // @synthesize editingDisabled=_editingDisabled;
- (void)setAbCellStyle:(int)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldSwallowTouches:(id)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) ABMultiCellContentView *multiCellContentView;
- (void)_addMultiCellContentViewIfNeeded;
- (void)dealloc;

@end

@interface ABMultiCellContentView : ABPersonCellContentView <ABResponderDelegate>
{
    UITableViewCell *_cell;
    _Bool _usesCustomPropertyCell;
    UIView *_labelDivider;
    _Bool _isImportant;
    _Bool _isEmphasized;
    _Bool _isHighlighted;
    _Bool _allowsEditing;
    _Bool _isEditing;
    _Bool _shouldIgnoreEndEditing;
    int _property;
    ABAbstractPropertyGroup *_pg;
    id _pgInfo;
    _Bool _needsReload;
    UIView *_touchedView;
    id <ABMultiCellContentViewUpdateDelegate> _updateDelegate;
    int _abCellStyle;
}

+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
+ (void)setupTextField:(id)arg1 withStyleProvider:(id)arg2;
+ (struct CGSize)sizeThatFits:(struct CGSize)arg1 forPropertyGroup:(id)arg2 info:(id)arg3 styleProvider:(id)arg4 whenEditing:(_Bool)arg5;
+ (id)reuseIdentifierForPropertyGroup:(id)arg1 info:(id)arg2;
+ (Class)classForProperty:(int)arg1;
@property(nonatomic) _Bool shouldIgnoreEndEditing; // @synthesize shouldIgnoreEndEditing=_shouldIgnoreEndEditing;
@property(nonatomic) _Bool usesCustomPropertyCell; // @synthesize usesCustomPropertyCell=_usesCustomPropertyCell;
@property(nonatomic) UITableViewCell *cell; // @synthesize cell=_cell;
@property(nonatomic) int abCellStyle; // @synthesize abCellStyle=_abCellStyle;
@property(nonatomic) id <ABMultiCellContentViewUpdateDelegate> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(nonatomic, getter=isEmphasized) _Bool emphasized; // @synthesize emphasized=_isEmphasized;
@property(nonatomic, getter=isImportant) _Bool important; // @synthesize important=_isImportant;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_isEditing;
@property(retain, nonatomic) id propertyGroupInfo; // @synthesize propertyGroupInfo=_pgInfo;
@property(readonly, nonatomic) ABAbstractPropertyGroup *propertyGroup; // @synthesize propertyGroup=_pg;
- (void)entryFieldEndAttemptBecomeFirstResponder:(id)arg1;
- (void)entryFieldBeginAttemptBecomeFirstResponder:(id)arg1;
- (_Bool)ABTabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)shouldSendTouchesToSuperviewForHitView:(id)arg1;
- (id)hitTestForTouches:(id)arg1 withEvent:(id)arg2;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (id)viewForFirstResponder;
- (_Bool)canBeginEditingAnytime;
- (_Bool)tabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (_Bool)entryFieldShouldReturn:(id)arg1;
- (void)entryField:(id)arg1 didEndEditingForKey:(id)arg2;
- (void)entryField:(id)arg1 valueDidChange:(id)arg2 forKey:(id)arg3;
- (void)entryFieldDidBeginEditing:(id)arg1;
- (_Bool)entryFieldShouldEndEditing:(id)arg1;
- (_Bool)entryFieldShouldBeginEditing:(id)arg1;
- (_Bool)isValidValue:(id)arg1;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (_Bool)wantsLabelDivider;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
- (struct CGRect)focusRectForView:(id)arg1;
- (struct CGRect)backgroundRectForView:(id)arg1;
- (struct CGRect)rectForView:(id)arg1;
- (id)pickerView;
- (void)reloadIfNeeded:(_Bool)arg1 reloadFromModel:(_Bool)arg2;
- (void)reload;
- (void)reloadFromModel;
- (void)reloadLabelFromModel;
- (_Bool)canHandleProperty:(int)arg1;
- (id)initCommonWithFrame:(struct CGRect)arg1 property:(int)arg2;
- (void)layoutLabel;
- (id)displayHighlightedTextColor;
- (id)displayTextColor;
- (id)badgeIconWhenEditing:(_Bool)arg1;
- (id)labelTextColorWhenEditing:(_Bool)arg1;
- (struct CGRect)frameForLabelDivider;
- (void)setKeyboardSettings:(id)arg1 onTextField:(id)arg2;
- (id)newTextFieldWithFrame:(struct CGRect)arg1 tag:(long long)arg2 keyboardSettings:(id)arg3 delegate:(id)arg4;
- (void)clearTextFieldDelegates:(id)arg1;
- (void)setLabelText:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 forPropertyGroup:(id)arg2 info:(id)arg3 styleProvider:(id)arg4 whenEditing:(_Bool)arg5;
- (void)setPropertyGroup:(id)arg1 andInfo:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 property:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

@end

@interface ABBoundLayoutConstraint : NSLayoutConstraint
{
    id _object;
    NSString *_keyPath;
}

+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 constantObject:(id)arg7 keyPath:(id)arg8;
@property(copy, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
@property(retain, nonatomic) id object; // @synthesize object=_object;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_boundValueDidChange;
- (void)bindConstantToObject:(id)arg1 keyPath:(id)arg2;
- (void)dealloc;

@end

@interface ABBaselineBoundLayoutConstraint : ABBoundLayoutConstraint
{
    double _baselineConstant;
    _Bool _ignoreAccessibilitySizes;
}

+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 textAttributesObject:(id)arg6 keyPath:(id)arg7 baselineConstant:(double)arg8;
@property _Bool ignoreAccessibilitySizes; // @synthesize ignoreAccessibilitySizes=_ignoreAccessibilitySizes;
- (void)_boundValueDidChange;

@end

@interface ABMultiCellContentView_Address : ABMultiCellContentView_DisplayAlternate
{
    NSArray *_lineInfos;
    NSMutableArray *_lineSubviews;
    struct _NSRange _streetRange;
    unsigned long long _entryFieldIndexOfFirstStreetField;
    NSMutableArray *_verticalDividers;
}

+ (id)lineInfosForPropertyGroup:(id)arg1 info:(id)arg2;
+ (id)streetTextForPropertyGroup:(id)arg1 info:(id)arg2;
+ (long long)calculateStreetRowsForText:(id)arg1;
+ (unsigned long long)rowsForPropertyGroup:(id)arg1 info:(id)arg2;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (void)addStreetFieldAnimated:(_Bool)arg1;
- (void)removeStreetFieldAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (id)streetFieldAtLineIndex:(unsigned long long)arg1;
- (unsigned long long)lineIndexOfStreetField:(id)arg1;
- (void)removeTextFieldAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (id)pickerView;
- (void)reloadFromModel;
- (void)reload;
- (id)propertyKeyForTag:(long long)arg1;
- (long long)tagForPropertyKey:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setPropertyGroupInfo:(id)arg1;
- (void)dealloc;

@end

@interface ABMultiCellContentView_Date : ABMultiCellContentView <ABDateFieldDelegate>
{
    ABDateField *_dateField;
}

+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
- (_Bool)dateFieldShouldClear:(id)arg1;
- (_Bool)dateFieldShouldReturn:(id)arg1;
- (void)dateFieldDidBeginEditing:(id)arg1;
- (void)dateFieldDidEndEditing:(id)arg1;
- (_Bool)dateFieldShouldEndEditing:(id)arg1;
- (_Bool)dateFieldShouldBeginEditing:(id)arg1;
- (void)dateFieldDateDidChange:(id)arg1;
- (id)hitTestForTouches:(id)arg1 withEvent:(id)arg2;
- (void)setAbCellStyle:(int)arg1;
- (id)viewForFirstResponder;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (void)reloadFromModel;
- (void)reload;
@property(readonly, nonatomic) NSDate *date;
- (void)setUpdateDelegate:(id)arg1;
- (void)dealloc;

@end

@interface ABMultiCellContentView_DisplayAlternate : ABMultiCellContentView_Rows
{
    UILabel *_displayLabel;
}

+ (void)setupDisplayLabel:(id)arg1 withPropertyGroup:(id)arg2 styleProvider:(id)arg3;
+ (void)numberOfLines:(long long *)arg1 lineBreakMode:(long long *)arg2 forDisplayLabelWithPropertyGroup:(id)arg3 styleProvider:(id)arg4;
+ (id)displayLabelForReuse;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6 includeRows:(_Bool)arg7;
+ (struct CGRect)displayLabelFrameForValueViewFrame:(struct CGRect)arg1 styleProvider:(id)arg2 whenEditing:(_Bool)arg3;
- (void)setAbCellStyle:(int)arg1;
- (void)reloadFromModel;
- (void)reloadFromModelIncludingRows:(_Bool)arg1;
- (void)reload;
- (void)reloadIncludingRows:(_Bool)arg1 includingDisplayView:(_Bool)arg2;
- (void)reloadDisplayText;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) NSString *displayText;
- (struct CGRect)valueTextRect;

@end

@interface ABMultiCellContentView_IM : ABMultiCellContentView_DisplayAlternate
{
}

+ (unsigned long long)rowsForPropertyGroup:(id)arg1 info:(id)arg2;
- (void)textFieldTextDidChange:(id)arg1;
- (void)reloadFromModelIncludingRows:(_Bool)arg1;
- (void)reloadFromModel;
- (id)pickerView;

@end

@interface ABMultiCellContentView_Name : ABMultiCellContentView_Rows
{
}

+ (unsigned long long)rowsForPropertyGroup:(id)arg1 info:(id)arg2;
- (void)entryField:(id)arg1 valueDidChange:(id)arg2 forKey:(id)arg3;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)reloadFromModelIncludingRows:(_Bool)arg1;
- (void)reloadFromModel;
- (void)reload;
- (void)reloadLabelFromModel;
- (id)keyboardSettingsForKey:(id)arg1;
- (id)labelTextColorWhenEditing:(_Bool)arg1;
- (id)displayTextColor;

@end

@interface ABMultiCellContentView_Note : ABMultiCellContentView <ABSwellTextViewDelegate>
{
    ABSwellTextView *_textView;
}

+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
+ (id)labelTextForPropertyGroup:(id)arg1 info:(id)arg2 styleProvider:(id)arg3;
+ (void)setupTextView:(id)arg1 withStyleProvider:(id)arg2 whenEditing:(_Bool)arg3;
+ (id)swellTextViewForReuse;
- (void)setAbCellStyle:(int)arg1;
- (void)swellTextView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)swellTextViewDidBeginEditing:(id)arg1;
- (void)swellTextViewDidEndEditing:(id)arg1;
- (_Bool)swellTextViewShouldEndEditing:(id)arg1;
- (_Bool)swellTextViewShouldBeginEditing:(id)arg1;
- (void)swellTextViewTextDidChange:(id)arg1;
- (_Bool)canBeginEditingAnytime;
- (id)viewForFirstResponder;
- (_Bool)tabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (struct CGRect)focusRectForView:(id)arg1;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (void)reloadFromModel;
- (void)setLabelText:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)reload;
- (void)dealloc;
- (struct CGRect)frameForLabel;
- (_Bool)shouldUseTwoLineLabels;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMultiCellContentView_RelatedName : ABMultiCellContentView_Simple
{
    UIButton *_accessoryButton;
}

+ (void)setupRelatedNamesView:(id)arg1 withStyleProvider:(id)arg2;
- (void)setName:(id)arg1;
@property(readonly, nonatomic) UIButton *accessoryButton; // @synthesize accessoryButton=_accessoryButton;
- (void)dealloc;

@end

@interface ABMultiCellContentView_Rows : ABMultiCellContentView <UITextFieldDelegate>
{
    NSMutableArray *_entryFields;
    NSMutableArray *_horizontalDividers;
    _Bool _isAttemptingFirstResponder;
}

+ (unsigned long long)rowsForPropertyGroup:(id)arg1 info:(id)arg2;
+ (struct CGRect)zerothHorizontalDividerFrameForValueViewRect:(struct CGRect)arg1;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6 includeRows:(_Bool)arg7;
- (void)setAbCellStyle:(int)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (void)entryFieldEndAttemptBecomeFirstResponder:(id)arg1;
- (void)entryFieldBeginAttemptBecomeFirstResponder:(id)arg1;
- (id)hitTestForTouches:(id)arg1 withEvent:(id)arg2;
- (id)viewForFirstResponder;
- (struct CGRect)backgroundRectForView:(id)arg1;
- (struct CGRect)rectForView:(id)arg1;
- (_Bool)tabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (void)entryField:(id)arg1 didEndEditingForKey:(id)arg2;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (void)reloadFromModel;
- (void)reloadFromModelIncludingRows:(_Bool)arg1;
- (void)reload;
- (void)reloadIncludingRows:(_Bool)arg1;
- (id)keyboardSettingsForKey:(id)arg1;
- (id)entryFieldForRow:(unsigned long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMultiCellContentView_Simple : ABMultiCellContentView <UITextFieldDelegate>
{
    ABHighlightingTextField *_textField;
    NSString *_previousValue;
}

+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 propertyGroup:(id)arg3 info:(id)arg4 styleProvider:(id)arg5 whenEditing:(_Bool)arg6;
- (CDStruct_856ef1b3)suggestionsForString:(id)arg1 inputIndex:(unsigned int)arg2;
- (_Bool)textFieldShouldClear:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)isValidValue:(id)arg1;
- (_Bool)shouldSendTouchesToSuperviewForHitView:(id)arg1;
- (id)hitTestForTouches:(id)arg1 withEvent:(id)arg2;
- (void)setAbCellStyle:(int)arg1;
- (id)viewForFirstResponder;
- (_Bool)tabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (_Bool)wantsLabelDivider;
- (void)updateSubviewsForNewStateAnimated:(_Bool)arg1;
- (void)reloadFromModel;
- (void)reload;
- (id)pickerView;
@property(readonly, nonatomic) NSString *text;
- (void)setPropertyGroup:(id)arg1 andInfo:(id)arg2;
- (_Bool)canHandleProperty:(int)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABMultiCellContentView_SocialProfile : ABMultiCellContentView_DisplayAlternate
{
}

- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
@property(readonly) NSString *service;
@property(readonly) NSString *username;
@property(readonly) NSString *placeholder;
- (void)reloadFromModelIncludingRows:(_Bool)arg1;

@end

@interface ABMultipleImagePickerViewController : UITableViewController
{
    NSMutableArray *_imageCellData;
    unsigned long long _selectedImageIndex;
    id <ABMultipleSourceImagePickerDelegate> _delegate;
}

@property(nonatomic) id <ABMultipleSourceImagePickerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)addImageData:(id)arg1 title:(id)arg2 isSelectedImage:(_Bool)arg3 person:(id)arg4;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;

@end

@interface ABNamePropertyGroup : ABAbstractPropertyGroup
{
    NSMutableArray *_properties;
    ABUIPerson *_preferredPerson;
    NSMutableSet *_propertiesWithMultipleValuePlaceholders;
    NSMutableDictionary *_valuesByPersonByProperty;
    id <ABPrimaryValueDelegate> _delegate;
}

@property(readonly, nonatomic) ABUIPerson *preferredPerson; // @synthesize preferredPerson=_preferredPerson;
@property(nonatomic) id <ABPrimaryValueDelegate> delegate; // @synthesize delegate=_delegate;
- (id)copyCompositeNameIgnoringOrganization:(_Bool)arg1;
- (id)copyCompositePhoneticName;
- (id)copyCompositeName;
- (id)_fakePersonFromCurrentProperties;
- (_Bool)showsMultipleValuePlaceholderAtRow:(unsigned long long)arg1;
- (id)keyboardSettingsForRow:(unsigned long long)arg1;
- (_Bool)autofillValuesForRow:(unsigned long long)arg1;
- (void)setValue:(id)arg1 atRow:(unsigned long long)arg2;
- (id)valueForRow:(unsigned long long)arg1 whenEditing:(_Bool)arg2;
- (id)placeholderTextForRow:(unsigned long long)arg1;
- (id)primaryValueForProperty:(int)arg1;
- (_Bool)showsMultipleValuePlaceholderForProperty:(int)arg1;
- (_Bool)canSave;
- (id)valueForProperty:(int)arg1;
- (int)propertyForRow:(unsigned long long)arg1;
- (unsigned long long)rowForProperty:(int)arg1;
- (void)addNameProperty:(int)arg1;
- (struct __CFArray *)nameProperties;
- (unsigned long long)namePropertiesCount;
- (void)reloadFromModel;
- (void)updateRecord;
- (id)_allPeople;
- (int)property;
- (void)dealloc;
- (id)init;
- (_Bool)refreshPreferredPerson;
- (id)_newLocalizedPlaceholderForProperty:(int)arg1;
- (id)_valueForProperty:(int)arg1 person:(id)arg2;
- (void)_removeValueForProperty:(int)arg1;
- (void)_setValue:(id)arg1 forProperty:(int)arg2;
- (id)_indexPathForIndexPath:(id)arg1;
- (_Bool)_isEmptyValue:(id)arg1 forProperty:(int)arg2;
- (void)_removeMultipleValuePlaceholderForProperty:(int)arg1;
- (_Bool)_showsMultipleValuePlaceholderForProperty:(int)arg1;
- (long long)_indexForProperty:(int)arg1;
- (id)_labelAtIndex:(long long)arg1;
- (int)_propertyAtIndex:(unsigned long long)arg1;
- (void)_addItemForProperty:(int)arg1 duringReload:(_Bool)arg2;
- (void)_insertItemAtIndex:(long long)arg1 forProperty:(int)arg2 duringReload:(_Bool)arg3;
- (void)_clearAllCachedInfo;

@end

@interface ABPropertyIDSRequest : NSObject <IDSIDQueryControllerDelegate>
{
    _Bool _cancelled;
    NSArray *_propertyItems;
    NSString *_listenerID;
    NSString *_service;
    CDUnknownBlockType _requestResultBlock;
    CDUnknownBlockType _idQueryResultHandler;
}

@property(nonatomic) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(copy, nonatomic) CDUnknownBlockType idQueryResultHandler; // @synthesize idQueryResultHandler=_idQueryResultHandler;
@property(copy, nonatomic) CDUnknownBlockType requestResultBlock; // @synthesize requestResultBlock=_requestResultBlock;
@property(retain, nonatomic) NSString *service; // @synthesize service=_service;
@property(retain, nonatomic) NSString *listenerID; // @synthesize listenerID=_listenerID;
@property(retain, nonatomic) NSArray *propertyItems; // @synthesize propertyItems=_propertyItems;
- (void)_requestStatusOnMainQueue:(_Bool)arg1;
- (void)idStatusUpdatedForDestinations:(id)arg1 service:(id)arg2;
- (void)cancel;
- (void)dealloc;
- (id)initWithPropertyItems:(id)arg1 service:(id)arg2 postToMainQueue:(_Bool)arg3 resultBlock:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABContactStyleStyleProvider : ABStyleProvider
{
    CNContactStyle *_contactStyle;
}

@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
- (id)memberHeaderBackgroundView;
- (id)groupHeaderBackgroudColor;
- (long long)headerViewBorderStyle;
- (id)memberSearchFieldBackgroundColor;
- (id)groupCellBackgroundColor;
- (id)membersSearchBackgroundColor;
- (_Bool)peoplePickerBarStyleIsTranslucent;
- (long long)peoplePickerBarStyle;
- (_Bool)shouldUsePeoplePickerBarStyle;
- (id)membersHeaderBackgroundColor;
- (id)membersHeaderContentViewBackgroundColor;
- (id)membersBackgroundColor;
- (id)groupCellTextColor;
- (id)groupsTableBackgroundColor;
- (id)memberNameTextColor;
- (id)cardValueTextColor;
- (id)cardLabelSelectedBackgroundColor;
- (id)separatorColorForCellStyle:(int)arg1;
- (id)cardCellDividerColorVertical:(_Bool)arg1;
- (id)cardSectionBackgroundColor;
- (id)cardCellBackgroundColor;
- (void)dealloc;
- (id)initWithContactStyle:(id)arg1;

@end

@interface ABNewPersonViewController_Modern : UIViewController <ABContactViewControllerDelegate>
{
    void *_addressBook;
    void *_displayedPerson;
    id <ABNewPersonViewControllerDelegate> _newPersonViewDelegate;
    _Bool _isRealViewLoaded;
    ABContactViewController *_contactViewController;
    _UIAccessDeniedView *_accessDeniedView;
    void *_parentGroup;
    ABPersonViewControllerHelper *_helper;
    ABPersonTableViewDataSource *_dataSource;
    void *_parentSource;
    CNContact *_mergeContact;
    id <ABStyleProvider> _styleProvider;
    ABContactsFilter *_parentContactsFilter;
    id <ABPresenterDelegate> _presentingDelegate;
}

@property(nonatomic) id <ABPresenterDelegate> presentingDelegate; // @synthesize presentingDelegate=_presentingDelegate;
@property(retain, nonatomic) ABContactsFilter *parentContactsFilter; // @synthesize parentContactsFilter=_parentContactsFilter;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) CNContact *mergeContact; // @synthesize mergeContact=_mergeContact;
@property(nonatomic) void *parentSource; // @synthesize parentSource=_parentSource;
@property(readonly, nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
@property(nonatomic) void *parentGroup; // @synthesize parentGroup=_parentGroup;
@property(nonatomic) _Bool isRealViewLoaded; // @synthesize isRealViewLoaded=_isRealViewLoaded;
- (void)accessChanged;
@property(readonly, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;
- (void)save:(id)arg1;
@property(nonatomic) _Bool savesNewContactOnSuspend;
@property(nonatomic) _Bool showsCancelButton;
- (void)loadContactViewController;
- (void)contactViewController:(id)arg1 didCompleteWithContact:(id)arg2;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)loadView;
- (void)loadRealView;
@property(readonly, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(nonatomic) void *displayedPerson;
@property(nonatomic) void *addressBook;
@property(nonatomic) id <ABNewPersonViewControllerDelegate> newPersonViewDelegate;
- (_Bool)isKindOfClass:(Class)arg1;
- (void)dealloc;
- (id)initWithStyle:(int)arg1;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 style:(int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABNewPersonViewController : UIViewController
{
    id <ABNewPersonViewControllerDelegate> _newPersonViewDelegate;
    id _parentGroup;
    id _helper;
    void *_recordForNewPerson;
    _Bool _isRealViewLoaded;
    ABPersonTableViewDataSource *_dataSource;
    _UIAccessDeniedView *_accessDeniedView;
    void *_parentSource;
    CNContact *_mergeContact;
    ABContactViewController *_contactViewController;
    id <ABPresenterDelegate> _presentingDelegate;
}

@property(nonatomic) id <ABPresenterDelegate> presentingDelegate; // @synthesize presentingDelegate=_presentingDelegate;
@property(readonly, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(retain, nonatomic) CNContact *mergeContact; // @synthesize mergeContact=_mergeContact;
@property(nonatomic) void *parentSource; // @synthesize parentSource=_parentSource;
@property(nonatomic) _Bool isRealViewLoaded; // @synthesize isRealViewLoaded=_isRealViewLoaded;
@property(readonly, nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ABContactsFilter *parentContactsFilter; // @synthesize parentContactsFilter=_parentGroup;
- (void)accessChanged;
- (int)abViewControllerType;
- (void)applicationDidResume;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationWillSuspend;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (_Bool)supportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)loadView;
@property(readonly, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;
- (void)updateNavigationButtons;
- (void *)recordForNewPerson;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)viewDidLoad;
- (double)ab_heightToFitForViewInPopoverView;
- (void)save:(id)arg1;
- (void)attemptSaveAndTellDelegate:(_Bool)arg1;
- (void)cancel:(id)arg1;
- (void)saveAndTellDelegate:(_Bool)arg1;
- (void)savePerson:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
@property(nonatomic) _Bool savesNewContactOnSuspend;
@property(nonatomic) _Bool showsCancelButton;
@property(nonatomic) void *parentGroup;
- (void)setDisplayedUIPerson:(id)arg1;
- (id)displayedUIPerson;
@property(nonatomic) void *displayedPerson;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider;
@property(nonatomic) void *addressBook;
@property(nonatomic) id <ABNewPersonViewControllerDelegate> newPersonViewDelegate;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(int)arg1;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 style:(int)arg3;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;

@end

@interface ABNumberFormatting : NSObject
{
}

+ (id)newLocalizedStringWithInt:(long long)arg1;
+ (id)localizedStringWithInt:(long long)arg1;

@end

@interface ABPadFaceTimeEtchedPlainCellBackgroundView : UIView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABPadFaceTimeGroupedCellBackgroundView : ABChameleonCellBackgroundView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isBottomCell;
- (_Bool)isTopCell;
- (void)setFrame:(struct CGRect)arg1;
- (void)setSectionLocation:(int)arg1;
- (void)setAbCellStyle:(int)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABPasteboardControl : UIControl
{
}

- (void)menuControllerWillHide:(id)arg1;
- (void)menuControllerWillShow:(id)arg1;
- (void)abMenuControllerWillHide;
- (void)abMenuControllerWillShow:(id)arg1;
- (_Bool)abShouldShowMenu;
- (void)longPress:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABAccountsAndGroupsNavigationController : UINavigationController <UIViewControllerRestoration>
{
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;

@end

@interface ABPeoplePickerNavigationController : UINavigationController
{
    void *_addressBook;
    id _peoplePickerDelegate;
    CNContactPicker *_contactPicker;
    ABModel *_model;
    int _behavior;
    struct __CFArray *_displayedProperties;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
    NSArray *_defaultToolbarItems;
    id _insertionValue;
    int _insertionProperty;
    struct {
        unsigned int allowsEditing:1;
        unsigned int allowsCancel:1;
        unsigned int allowsActions:1;
        unsigned int allowsConferencing:1;
        unsigned int allowsSounds:1;
        unsigned int allowsVibrations:1;
        unsigned int hidesSearchableSources:1;
        unsigned int hidesPromptInLandscape:1;
        unsigned int forceInProcess:1;
        unsigned int forceOutOfProcess:1;
    } _flags;
    _Bool _navigationBarIsAnimating;
    _Bool _ignoreViewWillBePresented;
    _Bool _allowsContactBlocking;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    NSPredicate *_predicateForEnablingPerson;
    NSPredicate *_predicateForSelectionOfPerson;
    NSPredicate *_predicateForSelectionOfProperty;
    UISplitViewController *_contactsSplitViewPresentationDelegate;
}

+ (void)notifyPreferencesChanged;
@property(nonatomic) UISplitViewController *contactsSplitViewPresentationDelegate; // @synthesize contactsSplitViewPresentationDelegate=_contactsSplitViewPresentationDelegate;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(copy, nonatomic) NSPredicate *predicateForSelectionOfProperty; // @synthesize predicateForSelectionOfProperty=_predicateForSelectionOfProperty;
@property(copy, nonatomic) NSPredicate *predicateForSelectionOfPerson; // @synthesize predicateForSelectionOfPerson=_predicateForSelectionOfPerson;
@property(copy, nonatomic) NSPredicate *predicateForEnablingPerson; // @synthesize predicateForEnablingPerson=_predicateForEnablingPerson;
@property(nonatomic) id <ABPeoplePickerNavigationControllerDelegate> peoplePickerDelegate; // @synthesize peoplePickerDelegate=_peoplePickerDelegate;
@property(retain, nonatomic, setter=ab_setDefaultToolbarItems:) NSArray *ab_defaultToolbarItems; // @synthesize ab_defaultToolbarItems=_defaultToolbarItems;
- (void)navigationBar:(id)arg1 didPushItem:(id)arg2;
- (void)navigationBar:(id)arg1 didPopItem:(id)arg2;
- (void)finishNavigationBarAnimation;
- (_Bool)navigationBar:(id)arg1 shouldPushItem:(id)arg2;
- (_Bool)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
- (_Bool)navigationBarIsAnimating;
- (void)unknownPersonViewController:(id)arg1 didResolveToPerson:(void *)arg2;
- (_Bool)unknownPersonViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4 withMemberCell:(id)arg5;
- (void)contactPickerDidCancel:(id)arg1;
- (void)contactPicker:(id)arg1 didSelectContact:(id)arg2 propertyKey:(id)arg3 propertyIdentifier:(int)arg4;
- (void)contactPicker:(id)arg1 didSelectContact:(id)arg2;
- (void)removeChildViewController:(id)arg1;
- (void)removeChildViewController:(id)arg1 notifyDidMove:(_Bool)arg2;
- (void)willShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)ab_setDefaultToolbarItems:(id)arg1 animated:(_Bool)arg2;
- (void)ab_changeViewControllersToolbarItemsIfEmpty:(_Bool)arg1;
- (void)ab_restoreViewControllerToolbarItems:(id)arg1 animated:(_Bool)arg2;
- (void)ab_changeViewControllerToolbarItemsIfEmpty:(id)arg1 animated:(_Bool)arg2;
- (_Bool)ab_ownsViewControllerToolbarItems:(id)arg1;
- (void)presentGroupsViewController;
- (id)_setupAccountsAndGroupsController;
- (void)groupsViewControllerDidFinish:(id)arg1;
- (void)showMembersOfContactsFilter:(id)arg1;
- (void)showMembersOfContactsFilter:(id)arg1 animate:(_Bool)arg2 loadState:(_Bool)arg3;
- (void)personViewController:(id)arg1 requestedLinkForPerson:(id)arg2;
- (void)contactViewController:(id)arg1 didCompleteWithContact:(id)arg2;
- (_Bool)contactViewController:(id)arg1 shouldPerformDefaultActionForContact:(id)arg2 property:(id)arg3 labeledValue:(id)arg4;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4 withMemberCell:(id)arg5;
- (_Bool)shouldPerformDefaultActionForPerson:(void *)arg1 property:(int)arg2 identifier:(int)arg3 withMemberCell:(id)arg4;
- (_Bool)showCardForPerson:(void *)arg1 withMemberCell:(id)arg2 animate:(_Bool)arg3 forceDisableEditing:(_Bool)arg4;
- (void)presentContactViewController:(id)arg1;
- (_Bool)shouldContinueAfterSelectingPerson:(void *)arg1 cell:(id)arg2;
- (_Bool)allowsShowingPersonsCards;
- (void)_updateViewControllerNavigationButtons;
- (void)_performCancel:(id)arg1;
- (id)membersViewController;
- (void)setupAsMePicker;
- (id)model;
@property(nonatomic) _Bool hidesPromptInLandscape;
@property(nonatomic) _Bool hidesSearchableSources;
- (_Bool)isDefaultViewControllerVisible;
- (void)popToDefaultViewController:(_Bool)arg1;
- (void)loadState;
- (void)saveState;
- (int)insertionProperty;
- (id)insertionValue;
- (void)setInsertionValue:(id)arg1 property:(int)arg2;
- (id)bannerValue;
- (id)bannerTitle;
- (void)setBannerTitle:(id)arg1 value:(id)arg2;
- (id)promptForViewControllerType:(int)arg1 orientation:(long long)arg2;
- (void)setPrompt:(id)arg1 forViewControllerType:(int)arg2;
- (id)prompt;
- (void)setPrompt:(id)arg1;
- (void)setForceOutOfProcess:(_Bool)arg1;
- (void)setForceInProcess:(_Bool)arg1;
- (_Bool)allowsActions;
- (_Bool)allowsConferencing;
- (_Bool)allowsCancel;
- (_Bool)_shouldPreventCancelButtonsFromShowing;
- (void)setAllowsCancel:(_Bool)arg1;
- (void)setAllowsActions:(_Bool)arg1;
- (void)setAllowsConferencing:(_Bool)arg1;
- (void)setAllowsVibrations:(_Bool)arg1;
- (_Bool)allowsSounds;
- (void)setAllowsSounds:(_Bool)arg1;
- (_Bool)allowsCardEditing;
- (void)setAllowsCardEditing:(_Bool)arg1;
@property(copy, nonatomic) NSArray *displayedProperties;
@property(nonatomic) void *addressBook;
- (void)_applyStyleProvider;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_reserved4;
- (int)behavior;
- (void)setBehavior:(int)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setParentViewController:(id)arg1;
- (void)_applicationEnteringForeground;
- (void)_setPopoverController:(id)arg1;
- (_Bool)_allowsAutorotation;
- (void)setContentSizeForViewInPopover:(struct CGSize)arg1;
- (void)scrollToClosestContactMatching:(id)arg1;
- (void *)displayedPerson;
- (void)showUnifiedCardForPerson:(void *)arg1;
- (void)showCardForPerson:(void *)arg1;
- (void)setupInitialStackAndLoadState:(_Bool)arg1;
- (void)notePreferencesChanged;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_endDelayingPresentation;
- (_Bool)_isDelayingPresentation;
- (void)_viewWillBePresented;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)setNavigationBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (id)displayedKeys;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)_legacyKeyForNewKey:(id)arg1;
- (id)contactPickerPresentedViewController:(id)arg1;
- (void)setupViewControllers;
- (void)_setViewController:(id)arg1 animated:(_Bool)arg2;
- (_Bool)isOutOfProcess;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
- (id)initWithStyle:(int)arg1;
- (id)initWithAddressBook:(void *)arg1;
- (id)initAsAddressBook:(_Bool)arg1;
- (id)initAsAddressBook:(_Bool)arg1 withStyle:(int)arg2;
- (id)initAsAddressBook:(_Bool)arg1 withAddressBook:(void *)arg2;
- (id)initAsAddressBook:(_Bool)arg1 withAddressBook:(void *)arg2 withStyle:(int)arg3;

@end

@interface ABPeoplePickerNavigationControllerPromptHandler : NSObject
{
    ABPeoplePickerNavigationController *_ppnc;
    NSMutableArray *_prompts;
}

- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)setPrompt:(id)arg1 forViewControllerType:(int)arg2;
- (id)promptForViewControllerType:(int)arg1 orientation:(long long)arg2;
- (_Bool)_shouldShowPromptForOrientation:(long long)arg1;
- (unsigned long long)indexForViewControllerType:(int)arg1;
- (void)dealloc;
- (id)initWithNavigationController:(id)arg1;

@end

@interface ABPersonAdditions : NSObject
{
}

+ (struct __CFArray *)newCFArrayByUnwrappingIntegersInArray:(id)arg1;
+ (id)arrayByWrappingIntegersInCFArray:(struct __CFArray *)arg1;
+ (void)person:(void *)arg1 allowsLabels:(_Bool *)arg2 customLabels:(_Bool *)arg3 forProperty:(int)arg4;
+ (struct __CFArray *)copyNamePropertiesForEditing:(_Bool)arg1 includeRequiredNameProperties:(_Bool)arg2 person:(id)arg3;
+ (struct __CFArray *)copyNamePropertiesForEditing:(_Bool)arg1 includeRequiredNameProperties:(_Bool)arg2 people:(id)arg3;
+ (struct __CFArray *)copyNamePropertiesForEditing:(_Bool)arg1 person:(id)arg2;
+ (struct __CFArray *)copyProperties:(struct __CFArray *)arg1 excludingProperties:(struct __CFArray *)arg2;
+ (struct __CFArray *)copyOptionalNameAffixProperties;
+ (struct __CFArray *)copyOptionalJobProperties;
+ (struct __CFArray *)copyOptionalNameProperties;
+ (_Bool)isNameProperty:(int)arg1;
+ (void)cloneNamePropertiesFromPerson:(void *)arg1 toPerson:(void *)arg2;
+ (struct __CFArray *)copyNamePropertiesWithCurrentNameFormat;
+ (struct __CFArray *)copyOptionalProperties;
+ (struct __CFArray *)copyDefaultDisplayedProperties;
+ (struct __CFArray *)copyAllProperties;
+ (void)initializeAddressBookProperties;

@end

@interface CNContactStyle : NSObject
{
    _Bool _usesOpaqueBackground;
    UIColor *_textColor;
    UIColor *_placeholderTextColor;
    UIColor *_backgroundColor;
    UIColor *_separatorColor;
    UIColor *_sectionBackgroundColor;
    UIColor *_selectedCellBackgroundColor;
    long long _separatorStyle;
    long long _barStyle;
    long long _separatorBackdropOverlayBlendMode;
    long long _keyboardAppearance;
}

@property(nonatomic) long long keyboardAppearance; // @synthesize keyboardAppearance=_keyboardAppearance;
@property(nonatomic) long long separatorBackdropOverlayBlendMode; // @synthesize separatorBackdropOverlayBlendMode=_separatorBackdropOverlayBlendMode;
@property(nonatomic) _Bool usesOpaqueBackground; // @synthesize usesOpaqueBackground=_usesOpaqueBackground;
@property(nonatomic) long long barStyle; // @synthesize barStyle=_barStyle;
@property(nonatomic) long long separatorStyle; // @synthesize separatorStyle=_separatorStyle;
@property(retain, nonatomic) UIColor *selectedCellBackgroundColor; // @synthesize selectedCellBackgroundColor=_selectedCellBackgroundColor;
@property(retain, nonatomic) UIColor *sectionBackgroundColor; // @synthesize sectionBackgroundColor=_sectionBackgroundColor;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(readonly, nonatomic) UIColor *placeholderTextColor; // @synthesize placeholderTextColor=_placeholderTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
- (void)dealloc;
- (id)init;

@end

@interface ABPersonCellContentView : UIView
{
    struct CGRect _labelViewRect;
    struct CGRect _valueViewRect;
    UILabel *_label;
    UIImageView *_badge;
    _Bool _editing;
    id <ABStyleProvider> _styleProvider;
}

+ (struct CGRect)firstValueFrameForValueViewFrame:(struct CGRect)arg1 styleProvider:(id)arg2 whenEditing:(_Bool)arg3;
+ (void)computeLabelViewFrame:(struct CGRect *)arg1 valueViewFrame:(struct CGRect *)arg2 forSize:(struct CGSize)arg3 styleProvider:(id)arg4 whenEditing:(_Bool)arg5;
+ (struct CGSize)layoutSubviewsForView:(id)arg1 usingSize:(struct CGSize)arg2 styleProvider:(id)arg3 whenEditing:(_Bool)arg4;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(readonly, nonatomic) UILabel *label; // @synthesize label=_label;
- (void)layoutLabel;
- (struct CGRect)frameForLabel;
- (struct CGRect)frameForBadge;
- (double)labelBaselineAdjustment;
- (struct CGRect)backgroundRectForView:(id)arg1;
- (struct CGRect)rectForView:(id)arg1;
- (void)setBadgeIcon:(id)arg1;
- (void)setLabelText:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface ABPersonCellLayoutManager : UITableViewCellLayoutManager
{
    id <ABPersonCellLayoutManagerDelegate> _delegate;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) id <ABPersonCellLayoutManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)cell:(id)arg1 didTransitionToState:(unsigned long long)arg2;
- (void)cell:(id)arg1 willTransitionToState:(unsigned long long)arg2;
- (struct CGRect)deleteConfirmationRectForCell:(id)arg1;
- (struct CGRect)contentEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)contentStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)backgroundEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)backgroundStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (double)widthForCellContentViewInTableView:(id)arg1 whenEditing:(_Bool)arg2 isShowingDeleteConfirmation:(_Bool)arg3 accessoryViewBounds:(struct CGRect)arg4;
- (double)accessoryViewInsetForBounds:(struct CGRect)arg1;
- (double)deleteConfirmationWidth;
- (id)cellAsMultiCell:(id)arg1;
- (void)dealloc;

@end

@interface ABPersonTableViewImageDataDelegate : NSObject <ABPersonImageDataDelegate>
{
    NSMutableDictionary *_currentImageData;
    ABUIPerson *_personForImageData;
    _Bool _hasImageChanges;
    _Bool _didChangePreferredPersonForImage;
    ABPersonTableViewDataSource *_dataSource;
}

@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (_Bool)didChangePreferredPersonForImage;
- (id)personForImageDataExcludingPeople:(id)arg1;
- (id)imageDataWithFormat:(int)arg1 cropRect:(struct CGRect *)arg2 forPerson:(id)arg3 isRemoved:(_Bool *)arg4;
- (void)updateRecordImages;
- (void)resetImageData;
- (_Bool)hasImageChanges;
- (void)setCurrentImageData:(id)arg1;
- (id)currentImageData;
- (void)reloadImageData;
- (void)imageWillSave;
- (void)refreshImageData;
- (void)setPersonForImageData:(id)arg1;
- (id)personForImageData;
- (void)removeImageDataForPerson:(id)arg1;
- (void)setImageData:(id)arg1 withFormat:(int)arg2 cropRect:(struct CGRect)arg3 forPerson:(id)arg4;
- (id)imageDataWithFormat:(int)arg1 cropRect:(struct CGRect *)arg2 forPerson:(id)arg3;
- (_Bool)hasImageDataForPerson:(id)arg1;
- (id)writablePeople;
- (id)people;
- (void)markImagesWith:(id)arg1 forPerson:(id)arg2;
- (void)dealloc;

@end

@interface ABPersonImageView : ABPasteboardControl
{
    UIImageView *_personImageView;
    UIImageView *_editingImageView;
    ABClippingImageView *_emptyImageView;
    ABClippingImageView *_pasteboardMaskImageView;
    UIImage *_personImage;
    _Bool _isEditing;
    _Bool _showLabel;
    _Bool _needsReflow;
    _Bool _needsReload;
    _Bool _allowsEditing;
    _Bool _multiplePhotoBackdropEnabled;
    ABUIPerson *_displayedPerson;
    id <ABStyleProvider> _styleProvider;
    id <ABPersonImageDataDelegate> _imageDataDelegate;
}

+ (id)newImageWithName:(id)arg1;
@property(nonatomic) id <ABPersonImageDataDelegate> imageDataDelegate; // @synthesize imageDataDelegate=_imageDataDelegate;
@property(nonatomic) _Bool multiplePhotoBackdropEnabled; // @synthesize multiplePhotoBackdropEnabled=_multiplePhotoBackdropEnabled;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) ABUIPerson *displayedPerson; // @synthesize displayedPerson=_displayedPerson;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)abMenuControllerWillHide;
- (void)abMenuControllerWillShow:(id)arg1;
- (_Bool)abShouldShowMenu;
- (id)_supportedPasteboardImageTypesIncludingCustomTypes:(_Bool)arg1;
- (id)_newDictionaryWithImageData;
- (void)setIsEditing:(_Bool)arg1 animate:(_Bool)arg2;
- (void)setNeedsReload;
- (void)setNeedsReflow;
- (void)reload;
- (id)copyDefaultImageForPerson:(id)arg1;
- (void)layoutSubviews;
- (void)reflowIfNeeded;
- (void)reloadIfNeeded;
- (void)reflow;
- (id)framedPhoto;
- (void)_drawEditLabelInFrame:(struct CGRect)arg1;
- (id)pasteboardMaskImageView;
- (id)emptyImageView;
- (id)editingImageView;
- (id)personImageView;
@property(readonly, nonatomic) UIImage *attributionImage;
@property(readonly, nonatomic) UIImage *overlayImage;
@property(readonly, nonatomic) UIImage *backgroundImage;
@property(readonly, nonatomic) UIImage *maskImage;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

@end

@interface ABPersonLinkedInfo : NSObject
{
    NSString *_type;
    NSString *_name;
    ABUIPerson *_person;
    _Bool _unified;
}

@property(getter=isUnified) _Bool unified; // @synthesize unified=_unified;
@property(retain) ABUIPerson *person; // @synthesize person=_person;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSString *type; // @synthesize type=_type;
- (id)description;
- (void)dealloc;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

@interface ABPersonNameDisplayView : ABPasteboardControl
{
    ABNamePropertyGroup *_namePropertyGroup;
    int _primaryProperty;
    NSString *_primaryPropertyFormattingCountryCode;
    double _minimumHeight;
    _Bool _alignOnBottom;
    UILabel *_headlineLabel;
    UILabel *_tagLineLabel;
    UILabel *_messageLabel;
    UILabel *_messageDetailLabel;
    UIFont *_messageFont;
    UIFont *_messageDetailFont;
    ABStyleProvider *_styleProvider;
    NSString *_customHeadline;
    NSString *_customTagLine;
    NSString *_customMessage;
    NSString *_customMessageDetail;
    UIView *_customMessageView;
}

@property(retain, nonatomic) UIView *customMessageView; // @synthesize customMessageView=_customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont; // @synthesize messageDetailFont=_messageDetailFont;
@property(retain, nonatomic) UIFont *messageFont; // @synthesize messageFont=_messageFont;
@property(copy, nonatomic) NSString *messageDetail; // @synthesize messageDetail=_customMessageDetail;
@property(copy, nonatomic) NSString *message; // @synthesize message=_customMessage;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(copy, nonatomic) NSString *tagLine; // @synthesize tagLine=_customTagLine;
@property(copy, nonatomic) NSString *headline; // @synthesize headline=_customHeadline;
@property(nonatomic) _Bool alignOnBottom; // @synthesize alignOnBottom=_alignOnBottom;
@property(nonatomic) double minimumHeight; // @synthesize minimumHeight=_minimumHeight;
@property(copy, nonatomic) NSString *primaryPropertyFormattingCountryCode; // @synthesize primaryPropertyFormattingCountryCode=_primaryPropertyFormattingCountryCode;
@property(nonatomic) int primaryProperty; // @synthesize primaryProperty=_primaryProperty;
@property(retain, nonatomic) ABNamePropertyGroup *namePropertyGroup; // @synthesize namePropertyGroup=_namePropertyGroup;
- (double)_heightForLabelsForWidth:(double)arg1;
- (void)_setSubviewsHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setLabel:(id)arg1 highlighted:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_setFont:(id)arg1 isDetail:(_Bool)arg2;
- (void)_setMessageText:(id)arg1 isDetail:(_Bool)arg2;
- (id)_newLabelWithFont:(id)arg1 numberOfLines:(unsigned long long)arg2;
- (id)_copyTagLine;
- (void)_appendString:(id)arg1 withFormatKey:(id)arg2 toTagLine:(id)arg3;
- (void)_updateTagLineText;
- (void)_updateHeadlineText;
- (id)_copyPrimaryValue;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)abMenuControllerWillHide;
- (void)abMenuControllerWillShow:(id)arg1;
- (_Bool)abShouldShowMenu;
- (void)_adjustLabelTextColorForPasteboardSelection:(_Bool)arg1;
- (void)reloadNameDataAnimated:(_Bool)arg1;
- (void)layoutSubviews;
- (struct CGSize)multilineLabel:(id)arg1 sizeThatFits:(struct CGSize)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)initializeHeadlineAndTaglineIfNeeded;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABPersonPickersDelegate : NSObject <ABPickerViewControllerDelegate, ABImagePickerControllerDelegate>
{
    ABStyleProvider *_styleProvider;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonViewControllerHelper *_helper;
    ABImagePickerController *_imagePicker;
}

@property(readonly, nonatomic) ABImagePickerController *imagePicker; // @synthesize imagePicker=_imagePicker;
@property(nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
- (void)imagePicker:(id)arg1 didDismissActionSheet:(id)arg2;
- (void)imagePicker:(id)arg1 presentActionSheet:(id)arg2;
- (void)showImageMenuForHelper:(id)arg1;
- (void)finishTearingDownImagePickerController;
- (void)removeImagePickerControllerFromUI;
- (id)imagePickerControllerViewControllerToPresentModal:(id)arg1;
@property(nonatomic) _Bool popoverSizeUpdatesDisabled;
- (id)imagePickerControllerViewForApplyImageAnimation:(id)arg1;
- (void)imagePicker:(id)arg1 pickedPhoto:(id)arg2;
- (void)imagePickerWillBeRemoved:(id)arg1;
- (void)imagePickerWillBeShown:(id)arg1;
- (id)personImageView;
- (id)selectedPeople;
- (_Bool)pickerViewControllerShouldDismissKeyboard:(id)arg1;
- (_Bool)pickerViewController:(id)arg1 shouldDismissAfterSelectingItem:(id)arg2;
- (void)_dismissPropertyPicker:(id)arg1 afterSelectingItem:(id)arg2;
- (void)_dismissProfilesPicker:(id)arg1 afterSelectingItem:(id)arg2;
- (void)_dismissCountryPicker:(id)arg1 afterSelectingItem:(id)arg2;
- (void)_dismissRingtonePicker:(id)arg1 afterSelectingItem:(id)arg2;
- (id)_propertyGroupForPicker:(id)arg1;
- (id)_contentViewForPicker:(id)arg1;
- (void)labelPickerViewController:(id)arg1 didDeleteLabel:(id)arg2;
- (_Bool)labelPickerViewController:(id)arg1 shouldDismissAfterSelectingLabel:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableAction : NSObject <ABStyleProviding>
{
    NSString *_title;
    NSString *_shortTitle;
    _Bool _displaysShortTitle;
    _Bool _indicatesFaceTimeHistory;
    NSString *_detailText;
    NSString *_differentiationSheetTitle;
    _Bool _allowDifferentiationSheet;
    id _target;
    SEL _selector;
    int _style;
    int _property;
    struct __CFArray *_properties;
    long long _grouping;
    long long _ordering;
    UIButton *_button;
    UIButton *_FMFButton;
    UIView *_customContentView;
    id <ABPersonTableActionDelegate> _delegate;
}

@property(retain, nonatomic) UIView *actionContentView; // @synthesize actionContentView=_customContentView;
@property(nonatomic) struct __CFArray *properties; // @synthesize properties=_properties;
@property(nonatomic) long long ordering; // @synthesize ordering=_ordering;
@property(nonatomic) long long grouping; // @synthesize grouping=_grouping;
@property(readonly, nonatomic) UIButton *existingButton; // @synthesize existingButton=_button;
@property(readonly, nonatomic) int property; // @synthesize property=_property;
@property(readonly, nonatomic) SEL selector; // @synthesize selector=_selector;
@property(readonly, nonatomic) id target; // @synthesize target=_target;
@property(readonly, nonatomic) int style; // @synthesize style=_style;
@property(readonly, nonatomic) NSString *detailText; // @synthesize detailText=_detailText;
@property(nonatomic) _Bool displaysShortTitle; // @synthesize displaysShortTitle=_displaysShortTitle;
@property(readonly, nonatomic) NSString *shortTitle; // @synthesize shortTitle=_shortTitle;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) _Bool allowDifferentiationSheet; // @synthesize allowDifferentiationSheet=_allowDifferentiationSheet;
@property(copy, nonatomic) NSString *differentiationSheetTitle; // @synthesize differentiationSheetTitle=_differentiationSheetTitle;
@property(nonatomic) _Bool indicatesFaceTimeHistory; // @synthesize indicatesFaceTimeHistory=_indicatesFaceTimeHistory;
@property(nonatomic) id <ABPersonTableActionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)description;
- (id)styleProvider;
- (void)prepareButton:(id)arg1 forValueAtIndex:(long long)arg2 inPropertyGroup:(id)arg3;
- (void)buttonClicked:(id)arg1;
- (void)performWithSender:(id)arg1 person:(id)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)setFMFActionButton:(id)arg1;
@property(readonly, nonatomic) UIButton *button;
- (void)modifyDetailText:(id)arg1;
- (long long)compareOrderingToAction:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 detailText:(id)arg2 style:(int)arg3 target:(id)arg4 selector:(SEL)arg5;
- (id)initWithTitle:(id)arg1 shortTitle:(id)arg2 target:(id)arg3 selector:(SEL)arg4 property:(int)arg5;
- (id)initWithTitle:(id)arg1 style:(int)arg2 target:(id)arg3 selector:(SEL)arg4;
- (id)initWithTitle:(id)arg1 shortTitle:(id)arg2 detailText:(id)arg3 style:(int)arg4 target:(id)arg5 selector:(SEL)arg6 property:(int)arg7;

@end

@interface ABPersonTableActionDataSource : NSObject
{
    NSMutableArray *_topActions;
    NSMutableArray *_bottomActions;
    struct __CFDictionary *_actionsByProperty;
    struct __CFDictionary *_actionGroupingsByProperty;
    struct __CFDictionary *_inlineActionsByProperty;
    struct __CFSet *_hiddenActions;
}

- (id)actionWithActionGrouping:(long long)arg1 atIndex:(long long)arg2;
- (struct __CFArray *)indexesOfActionsForProperty:(int)arg1 withActionGrouping:(long long)arg2;
- (long long)actionCountForActionGrouping:(long long)arg1;
- (id)actionsForProperty:(int)arg1 withActionGroupingAtIndex:(long long)arg2;
- (id)actionForProperty:(int)arg1 withActionGrouping:(long long)arg2 atIndex:(long long)arg3;
- (long long)actionCountForProperty:(int)arg1 withActionGrouping:(long long)arg2;
- (long long)groupingCountForProperty:(int)arg1;
- (struct __CFArray *)groupingsForProperty:(int)arg1;
- (id)newActionsForProperty:(int)arg1;
- (id)actionsForProperty:(int)arg1 withActionGrouping:(long long)arg2;
- (void)removeAction:(id)arg1;
- (void)removeActionWithTarget:(id)arg1 selector:(SEL)arg2 forProperty:(int)arg3 withActionGrouping:(long long)arg4 ordering:(long long)arg5;
- (_Bool)hasActionWithTarget:(id)arg1 selector:(SEL)arg2 property:(int)arg3 actionGrouping:(long long)arg4 ordering:(long long)arg5 outActions:(id *)arg6 outIndex:(long long *)arg7;
- (_Bool)hasActionWithTarget:(id)arg1 selector:(SEL)arg2 matchProperty:(_Bool)arg3 property:(int)arg4 inArray:(id)arg5 outActions:(id *)arg6 outIndex:(long long *)arg7;
- (id)addActionWithTitle:(id)arg1 shortTitle:(id)arg2 detailText:(id)arg3 style:(int)arg4 target:(id)arg5 selector:(SEL)arg6 property:(int)arg7 actionGrouping:(long long)arg8 ordering:(long long)arg9;
- (id)bottomActions;
- (id)topActions;
- (struct __CFDictionary *)actionGroupingsByProperty;
- (struct __CFDictionary *)inlineActionsByProperty;
- (struct __CFDictionary *)actionsByProperty;
- (void)dealloc;
- (void)setAction:(id)arg1 hidden:(_Bool)arg2;
- (_Bool)isActionHidden:(id)arg1;

@end

@interface ABPersonTableFooterView : UIView <ABPersonTableActionDelegate>
{
    _Bool _editing;
    ABPersonTableAction *_deleteAction;
    UIView *_deleteView;
    UIView *_accessoryView;
    UIButton *_attributionButton;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) UIView *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic, getter=isEditing) _Bool tableEditing; // @synthesize tableEditing=_editing;
- (void)layoutSubviews;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEditing:(_Bool)arg1;
- (void)removeDeleteAction;
- (void)setDeleteActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 animated:(_Bool)arg4;
@property(readonly, nonatomic, getter=isAttributionEnabled) _Bool attributionEnabled;
@property(readonly, nonatomic) NSString *attribution;
- (void)setAttribution:(id)arg1 enabled:(_Bool)arg2 target:(id)arg3 action:(SEL)arg4;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGRect)attributionFrame;
- (struct CGRect)deleteViewFrame;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableHeaderView : UIView <UITableViewDelegate, UITableViewDataSource>
{
    _Bool _editing;
    _Bool _representsLinkedPeople;
    ABPersonImageView *_imageView;
    UIImageView *_imageShadowView;
    ABPersonNameDisplayView *_displayView;
    _Bool _showsMultiplePhotoBackdropView;
    ABNamePropertyGroup *_namePropertyGroup;
    ABMultiCellContentView *_editingView;
    ABMultiCell *_editingViewCell;
    UITableView *_editingViewContainer;
    UIView *_extraHeaderView;
    _Bool _extraHeaderViewAlignsToImage;
    id <ABPersonTableHeaderViewDelegate> _delegate;
    id <ABStyleProvider> _styleProvider;
}

@property(nonatomic) _Bool extraHeaderViewAlignsToImage; // @synthesize extraHeaderViewAlignsToImage=_extraHeaderViewAlignsToImage;
@property(retain, nonatomic) UIView *extraHeaderView; // @synthesize extraHeaderView=_extraHeaderView;
@property(nonatomic) _Bool representsLinkedPeople; // @synthesize representsLinkedPeople=_representsLinkedPeople;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) id <ABPersonTableHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ABNamePropertyGroup *namePropertyGroup; // @synthesize namePropertyGroup=_namePropertyGroup;
@property(readonly, nonatomic) ABMultiCellContentView *editingView; // @synthesize editingView=_editingView;
@property(readonly, nonatomic) ABPersonNameDisplayView *displayView; // @synthesize displayView=_displayView;
@property(readonly, nonatomic) ABPersonImageView *imageView; // @synthesize imageView=_imageView;
- (double)marginForTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)entryFieldForRow:(unsigned long long)arg1;
- (void)_updateRecordIfNeeded;
- (void)imageViewSelected:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setAllowsEditing:(_Bool)arg1;
- (void)reloadData;
- (void)reloadImageData;
- (void)reloadNameDataButNotModelAnimated:(_Bool)arg1;
- (void)reloadNameDataAnimated:(_Bool)arg1;
- (void)setPrimaryProperty:(int)arg1 countryCode:(id)arg2;
- (struct CGPoint)extraHeaderViewOrigin;
- (void)deselectAnimated:(_Bool)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_layoutExtraHeaderView;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *alternateName;
- (void)_updateShowsMultiplePhotoBackdrop;
- (void)_recreateEditingViewContainer;
@property(retain, nonatomic) ABUIPerson *personForImageView;
- (id)_imageShadowView;
- (id)_displayView;
- (double)_extraHeaderViewAvailableWidthForWidth:(double)arg1 whenEditing:(_Bool)arg2;
- (struct CGPoint)_extraHeaderViewOriginForWidth:(double)arg1 whenEditing:(_Bool)arg2;
- (double)extraHeaderViewHorizontalPaddingWhenEditing:(_Bool)arg1;
- (struct CGRect)_editingViewContainerFrameForWidth:(double)arg1;
- (double)_editingViewWidthForWidth:(double)arg1;
- (struct CGPoint)_editingViewOrigin;
- (struct CGRect)_displayViewFrameForWidth:(double)arg1;
- (double)_displayViewWidthForWidth:(double)arg1;
- (struct CGPoint)_displayViewOrigin;
- (struct CGRect)_imageViewFrameWhenEditing:(_Bool)arg1;
- (_Bool)isFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)_isSpecialInternalHeaderView;
- (void)dealloc;
- (void)setBackgroundColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableTinyActionCellContentView : UIView
{
    NSMutableArray *_actions;
    NSMutableArray *_buttons;
    UIButton *_highlightedButton;
    ABPersonTableTinyActionCell *_cell;
}

@property(readonly, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(nonatomic) ABPersonTableTinyActionCell *cell; // @synthesize cell=_cell;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)refreshActions;
- (void)unhighlight;
- (void)dealloc;

@end

@interface ABPersonTableTinyActionCell : UITableViewCell
{
    ABPersonTableActionDataSource *_actionDataSource;
    UIView *_tinyActionContentView;
    id <ABStyleProvider> _styleProvider;
    id <ABPersonTableTinyActionDelegate> _delegate;
}

@property(nonatomic) id <ABPersonTableTinyActionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) ABPersonTableActionDataSource *actionDataSource; // @synthesize actionDataSource=_actionDataSource;
- (void)setBackgroundView:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(readonly) unsigned long long actionsCount;
- (void)refreshActions;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)_resizeInnerContentView;
- (id)_tinyActionContentView;

@end

@interface ABPersonTableViewActionsDelegate : NSObject <UIActionSheetDelegate, ABPersonTableActionDelegate, ABPersonTableTinyActionDelegate>
{
    int _highlightedValueIdentifier;
    _Bool _highlightedValueIsImportant;
    int _actionSheetType;
    ABPersonTableTinyActionCell *_tinyActionCell;
    id <ABFMFActionButtonsDelegate> _FMFActionButtonsDelegate;
    _Bool _actionShouldPickHighlightedValue;
    int _highlightedValueProperty;
    ABStyleProvider *_styleProvider;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonTableActionDataSource *_actionDataSource;
    ABUIPerson *_highlightedValuePerson;
}

@property(nonatomic) int highlightedValueIdentifier; // @synthesize highlightedValueIdentifier=_highlightedValueIdentifier;
@property(nonatomic) int highlightedValueProperty; // @synthesize highlightedValueProperty=_highlightedValueProperty;
@property(retain, nonatomic) ABUIPerson *highlightedValuePerson; // @synthesize highlightedValuePerson=_highlightedValuePerson;
@property(nonatomic) id <ABFMFActionButtonsDelegate> FMFActionButtonsDelegate; // @synthesize FMFActionButtonsDelegate=_FMFActionButtonsDelegate;
@property(nonatomic) _Bool actionShouldPickHighlightedValue; // @synthesize actionShouldPickHighlightedValue=_actionShouldPickHighlightedValue;
@property(readonly, nonatomic) ABPersonTableActionDataSource *actionDataSource; // @synthesize actionDataSource=_actionDataSource;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
- (void)action:(id)arg1 willShowButton:(id)arg2 forValueAtIndex:(long long)arg3 inPropertyGroup:(id)arg4;
- (void)presentDifferentiationSheetForAction:(id)arg1;
- (_Bool)personTableTinyActionCell:(id)arg1 shouldShowAction:(id)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
@property(readonly, nonatomic) ABPersonTableTinyActionCell *tinyActionCell;
- (void)reloadPrimaryPropertyActionsSection;
- (void)tellDelegateAddToFavoriteWasSelectedForPropertyAtIndex:(long long)arg1 inPropertyGroup:(id)arg2 entryType:(int)arg3;
- (void)reloadBottomActions;
- (void)reloadBottomActionsAnimated:(_Bool)arg1;
- (void)reloadBottomActionsAnimated:(_Bool)arg1 favorites:(_Bool)arg2 texting:(_Bool)arg3 sharing:(_Bool)arg4 conferencing:(_Bool)arg5;
- (void)reloadBottomActionDataForFavorites:(_Bool)arg1 texting:(_Bool)arg2 sharing:(_Bool)arg3 conferencing:(_Bool)arg4;
- (void)reloadBottomActionCellAnimated:(_Bool)arg1;
- (void)addToFavoritesButtonClicked:(id)arg1;
- (void)conference:(id)arg1 person:(id)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)shareContactButtonClicked:(id)arg1;
- (void)sendTextMessage:(id)arg1 person:(id)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)callContact:(id)arg1 person:(id)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)shouldShowAddToFavoritesAction;
- (_Bool)isFavoriteOfType:(int)arg1 inPropertyGroup:(id)arg2 atIndex:(long long)arg3;
- (long long)actionGroupingCountForPropertyGroup:(id)arg1 whenEditing:(_Bool)arg2;
- (long long)actionGroupingCountForPropertyGroup:(id)arg1 whenEditing:(_Bool)arg2 assumeThatPropertyHasSection:(_Bool)arg3;
- (long long)actionCountForTopGroupingInSection:(long long)arg1 excludingProperty:(int)arg2 excludedPropertyGroupContext:(void *)arg3 outExcludedIndexPaths:(id *)arg4;
- (long long)actionCountForBottomGroupingExcludingProperty:(int)arg1 excludedPropertyGroupContext:(void *)arg2;
- (long long)actionCountForGrouping:(long long)arg1 inSection:(long long)arg2 excludingProperty:(int)arg3 excludedPropertyGroupContext:(void *)arg4 outExcludedIndexPaths:(id *)arg5;
- (_Bool)shouldShowAction:(id)arg1 excludingProperty:(int)arg2 excludedPropertyGroupContext:(void *)arg3;
- (_Bool)shouldShowActionForProperty:(int)arg1 propertyGroupContext:(void *)arg2;
- (_Bool)shouldShowActionForProperty:(int)arg1 propertyGroupContext:(void *)arg2 assumeThatPropertyHasSection:(_Bool)arg3;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 property:(int)arg3 actionGrouping:(long long)arg4 ordering:(long long)arg5;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 property:(int)arg3 actionGrouping:(long long)arg4 ordering:(long long)arg5 animated:(_Bool)arg6;
- (id)addActionWithTitle:(id)arg1 shortTitle:(id)arg2 detailText:(id)arg3 style:(int)arg4 target:(id)arg5 selector:(SEL)arg6 property:(int)arg7 actionGrouping:(long long)arg8 ordering:(long long)arg9;
- (id)addActionWithTitle:(id)arg1 content:(id)arg2 target:(id)arg3 selector:(SEL)arg4 property:(int)arg5 actionGrouping:(long long)arg6 ordering:(long long)arg7;
- (id)addActionWithTitle:(id)arg1 shortTitle:(id)arg2 target:(id)arg3 selector:(SEL)arg4 property:(int)arg5 actionGrouping:(long long)arg6 ordering:(long long)arg7;
- (_Bool)hasActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 property:(int)arg4 actionGrouping:(long long)arg5 ordering:(long long)arg6;
- (_Bool)hasActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 property:(int)arg4 actionGrouping:(long long)arg5 ordering:(long long)arg6 outActions:(id *)arg7 outIndex:(long long *)arg8;
- (void)performPersonTableAction:(id)arg1 atIndexPath:(id)arg2;
- (void)presentDifferentiationSheetIfNeededForAction:(id)arg1 withPropertyGroup:(id)arg2;
- (id)newActionsForProperty:(int)arg1;
- (long long)groupingCountForProperty:(int)arg1;
- (id)actionsForProperty:(int)arg1 withActionGroupingAtIndex:(long long)arg2;
- (id)actionsForProperty:(int)arg1 withActionGrouping:(long long)arg2;
- (unsigned long long)_sectionForAction:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABConferenceCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

@interface ABCustomContentCell : UITableViewCell
{
    UIView *_customContentView;
}

@property(retain, nonatomic) UIView *customContentView; // @synthesize customContentView=_customContentView;
- (void)dealloc;
- (void)prepareForReuse;

@end

@interface ABLabelViewWithVariablePositioning : UIView
{
    UILabel *_label;
    double _topPadding;
    double _bottomPadding;
    double _horizontalPadding;
}

@property(nonatomic) double horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
@property(nonatomic) double bottomPadding; // @synthesize bottomPadding=_bottomPadding;
@property(nonatomic) double topPadding; // @synthesize topPadding=_topPadding;
- (void)layoutSubviews;
- (void)setLabelShadowOffset:(struct CGSize)arg1;
- (void)setLabelShadowColor:(id)arg1;
- (void)setLabelTextColor:(id)arg1;
- (void)setLabelText:(id)arg1;
- (void)setLabelFont:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABPersonTableView : UITableView <ABPersonTabsScrollView>
{
    double _minimumBottomInset;
    struct UIEdgeInsets _savedContentInset;
    ABPersonViewControllerHelper *_helper;
    id <ABPersonTabsLayoutManager> _tabsLayoutManager;
}

@property(retain, nonatomic) id <ABPersonTabsLayoutManager> tabsLayoutManager; // @synthesize tabsLayoutManager=_tabsLayoutManager;
@property(nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
- (void)layoutSubviews;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
@property(nonatomic) double minimumBottomInset;
- (void)setContentOffset:(struct CGPoint)arg1;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

// Remaining properties
@property(retain, nonatomic) UIView *backgroundView;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonOverlayingContainerView : UIScrollView <ABPersonTabsScrollView>
{
    double _minimumBottomInset;
    struct UIEdgeInsets _savedContentInset;
    UIView *_backgroundView;
    UIView *_abContentView;
    id <ABPersonTabsLayoutManager> _tabsLayoutManager;
}

@property(retain, nonatomic) id <ABPersonTabsLayoutManager> tabsLayoutManager; // @synthesize tabsLayoutManager=_tabsLayoutManager;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_abContentView;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
@property(nonatomic) double minimumBottomInset;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)_updateContentFrameAndSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonContainerView : UIView <ABPersonTabsLayoutManager>
{
    UISegmentedControl *_contentSwitchingTabs;
    _Bool _hidesContentSwitchingTabs;
    UIView *_nonScrollableHeaderView;
    ABPersonTableView *_tableView;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonOverlayingContainerView *_overlayingContainerView;
    UIImageView *_contentSwitchingTabsPocketShadow;
    UIImageView *_contentSwitchingTabsBorder;
}

@property(nonatomic) _Bool hidesContentSwitchingTabs; // @synthesize hidesContentSwitchingTabs=_hidesContentSwitchingTabs;
@property(retain, nonatomic) UIImageView *contentSwitchingTabsBorder; // @synthesize contentSwitchingTabsBorder=_contentSwitchingTabsBorder;
@property(retain, nonatomic) UIImageView *contentSwitchingTabsPocketShadow; // @synthesize contentSwitchingTabsPocketShadow=_contentSwitchingTabsPocketShadow;
@property(retain, nonatomic) UISegmentedControl *contentSwitchingTabs; // @synthesize contentSwitchingTabs=_contentSwitchingTabs;
@property(retain, nonatomic) ABPersonOverlayingContainerView *overlayingContainerView; // @synthesize overlayingContainerView=_overlayingContainerView;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ABPersonTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIView *nonScrollableHeaderView; // @synthesize nonScrollableHeaderView=_nonScrollableHeaderView;
- (void)layoutSubviews;
- (void)restoreTabsPosition:(id)arg1;
- (id)prepareToRestoreTabsPosition;
- (void)didChangeContentOffset:(struct CGPoint)arg1 inScrollView:(id)arg2;
- (void)repositionContentSwitchingTabs;
- (void)moveContentSwitchingTabsAboveView:(id)arg1 inScrollView:(id)arg2;
- (double)heightForHeaderAndContentSwitchingTabs;
- (double)heightNeededForContentSwitchingTabs;
- (void)setFrame:(struct CGRect)arg1;
@property(readonly, nonatomic) UIScrollView<ABPersonTabsScrollView> *currentScrollView;
- (id)viewContainingHeaderView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableViewDataSource : NSObject <UITableViewDelegate, UITableViewDataSourcePrivate, ABPrimaryValueDelegate, ABPersonCellLayoutManagerDelegate>
{
    ABActionsController *_actionsController;
    struct __CFArray *_optionalProperties;
    struct __CFArray *_additionalProperties;
    struct __CFDictionary *_multiCellContentViewsByCustomCell;
    ABPersonTableViewMultiCellDelegate *_multiCellContentViewDelegate;
    ABPersonTableViewImageDataDelegate *_imageDataDelegate;
    ABPersonTableViewActionsDelegate *_actionsDelegate;
    ABPersonTableViewLinkingDelegate *_linkingDelegate;
    ABPersonPickersDelegate *_pickersDelegate;
    ABPersonTableViewSharingDelegate *_sharingDelegate;
    _Bool _attemptDelayedBecomeFirstResponder;
    _Bool _isPinningLocked;
    NSMutableDictionary *_propertyGroupsStore;
    NSMutableDictionary *_unusedPropertyGroupsStore;
    NSMutableArray *_editablePropertyGroups;
    NSMutableArray *_propertyGroups;
    ABUIPerson *_preinsertedPerson;
    struct __CFSet *_addNewValuePropertiesStore;
    struct __CFSet *_addNewValueProperties;
    ABNamePropertyGroup *_namePropertyGroup;
    UILabel *_noValueLabel;
    ABPersonTableHeaderView *_headerView;
    ABPersonTableFooterView *_footerView;
    UIView *_customPersonTableHeaderView;
    UIView *_customPersonTableFooterView;
    UIView *_notesHeaderView;
    ABLabelViewWithVariablePositioning *_linkingHeaderView;
    int _primaryProperty;
    UITableViewCell *_partiallySelectedCell;
    ABPersonCellLayoutManager *_cellLayoutManager;
    UIView *_tableHeaderViewContainer;
    NSDictionary *_cachedKeyboardInfo;
    _Bool _isEditing;
    _Bool _isUnlinkingPerson;
    _Bool _badgeEmailPropertiesForMailVIP;
    double _lastReturnedHeaderHeight;
    _Bool _allowsActions;
    _Bool _allowsEditing;
    _Bool _allowsAddToFavorites;
    _Bool _allowsSendingTextMessage;
    _Bool _allowsSharing;
    _Bool _allowsConferencing;
    _Bool _allowsDeletion;
    _Bool _allowsSounds;
    _Bool _allowsVibrations;
    _Bool _shouldShowContactSourcesStringAsMessage;
    _Bool _highlightedValueIsImportant;
    _Bool _isSettingFirstResponder;
    _Bool _isEndingEditingTransactions;
    _Bool _viewControllerWillSlideOut;
    _Bool _selectedPropertyForCellWithoutLabelDivider;
    _Bool _ignoreVibrationsDidChangeNotification;
    int _highlightedValueProperty;
    int _highlightedValueIdentifier;
    int _insertionProperty;
    int _customKeyboardOutDirection;
    NSArray *_people;
    void *_addressBook;
    id <ABPersonTableViewDataSourceDelegate> _delegate;
    ABPersonTableView *_tableView;
    struct __CFArray *_displayedProperties;
    id _insertionValue;
    id _insertionLabel;
    id <ABStyleProvider> _styleProvider;
    NSIndexPath *_lastActiveMultiCellIndexPath;
    ABMultiCellContentView *_lastActiveMultiCellContentView;
    ABMultiCellContentView *_multiCellContentViewForWillEndEditing;
    ABMultiCellContentView *_pinningMultiCellContentViewAlternate;
    NSIndexPath *_pinningMultiCellIndexPath;
    NSIndexPath *_pinningMultiCellRelativeIndexPath;
    UIResponder *_pinningResponder;
    NSMutableArray *_additionalLabels;
}

@property(nonatomic) _Bool badgeEmailPropertiesForMailVIP; // @synthesize badgeEmailPropertiesForMailVIP=_badgeEmailPropertiesForMailVIP;
@property(nonatomic) _Bool ignoreVibrationsDidChangeNotification; // @synthesize ignoreVibrationsDidChangeNotification=_ignoreVibrationsDidChangeNotification;
@property(nonatomic) _Bool selectedPropertyForCellWithoutLabelDivider; // @synthesize selectedPropertyForCellWithoutLabelDivider=_selectedPropertyForCellWithoutLabelDivider;
@property(retain, nonatomic) NSMutableArray *additionalLabels; // @synthesize additionalLabels=_additionalLabels;
@property(nonatomic) int customKeyboardOutDirection; // @synthesize customKeyboardOutDirection=_customKeyboardOutDirection;
@property(nonatomic) _Bool viewControllerWillSlideOut; // @synthesize viewControllerWillSlideOut=_viewControllerWillSlideOut;
@property(readonly, nonatomic) _Bool isEndingEditingTransactions; // @synthesize isEndingEditingTransactions=_isEndingEditingTransactions;
@property(nonatomic) _Bool isSettingFirstResponder; // @synthesize isSettingFirstResponder=_isSettingFirstResponder;
@property(retain, nonatomic) UIResponder *pinningResponder; // @synthesize pinningResponder=_pinningResponder;
@property(retain, nonatomic) NSIndexPath *pinningMultiCellRelativeIndexPath; // @synthesize pinningMultiCellRelativeIndexPath=_pinningMultiCellRelativeIndexPath;
@property(retain, nonatomic) NSIndexPath *pinningMultiCellIndexPath; // @synthesize pinningMultiCellIndexPath=_pinningMultiCellIndexPath;
@property(retain, nonatomic) ABMultiCellContentView *pinningMultiCellContentViewAlternate; // @synthesize pinningMultiCellContentViewAlternate=_pinningMultiCellContentViewAlternate;
@property(retain, nonatomic) ABMultiCellContentView *multiCellContentViewForWillEndEditing; // @synthesize multiCellContentViewForWillEndEditing=_multiCellContentViewForWillEndEditing;
@property(retain, nonatomic) ABMultiCellContentView *lastActiveMultiCellContentView; // @synthesize lastActiveMultiCellContentView=_lastActiveMultiCellContentView;
@property(retain, nonatomic) NSIndexPath *lastActiveMultiCellIndexPath; // @synthesize lastActiveMultiCellIndexPath=_lastActiveMultiCellIndexPath;
@property(retain, nonatomic) UITableViewCell *partiallySelectedCell; // @synthesize partiallySelectedCell=_partiallySelectedCell;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(readonly, nonatomic) id insertionLabel; // @synthesize insertionLabel=_insertionLabel;
@property(readonly, nonatomic) id insertionValue; // @synthesize insertionValue=_insertionValue;
@property(readonly, nonatomic) int insertionProperty; // @synthesize insertionProperty=_insertionProperty;
@property(nonatomic) _Bool highlightedValueIsImportant; // @synthesize highlightedValueIsImportant=_highlightedValueIsImportant;
@property(nonatomic) int highlightedValueIdentifier; // @synthesize highlightedValueIdentifier=_highlightedValueIdentifier;
@property(nonatomic) int highlightedValueProperty; // @synthesize highlightedValueProperty=_highlightedValueProperty;
@property(nonatomic) struct __CFArray *displayedProperties; // @synthesize displayedProperties=_displayedProperties;
@property(nonatomic) _Bool shouldShowContactSourcesStringAsMessage; // @synthesize shouldShowContactSourcesStringAsMessage=_shouldShowContactSourcesStringAsMessage;
@property(nonatomic) _Bool allowsVibrations; // @synthesize allowsVibrations=_allowsVibrations;
@property(nonatomic) _Bool allowsSounds; // @synthesize allowsSounds=_allowsSounds;
@property(nonatomic) _Bool allowsDeletion; // @synthesize allowsDeletion=_allowsDeletion;
@property(nonatomic) _Bool allowsConferencing; // @synthesize allowsConferencing=_allowsConferencing;
@property(nonatomic) _Bool allowsSharing; // @synthesize allowsSharing=_allowsSharing;
@property(nonatomic) _Bool allowsSendingTextMessage; // @synthesize allowsSendingTextMessage=_allowsSendingTextMessage;
@property(nonatomic) _Bool allowsActions; // @synthesize allowsActions=_allowsActions;
@property(retain, nonatomic) ABPersonTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) id <ABPersonTableViewDataSourceDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
@property(retain, nonatomic) NSArray *people; // @synthesize people=_people;
- (long long)editingSectionForNonEditingSection:(long long)arg1;
- (id)namePropertyGroup:(id)arg1 primaryValueForProperty:(int)arg2;
- (_Bool)personCellLayoutManager:(id)arg1 isCellInFullEditMode:(id)arg2;
- (double)marginForTableView:(id)arg1;
- (id)viewForFooterInTableView:(id)arg1;
- (id)realHeaderView;
- (id)tableHeaderViewContainer;
- (id)viewForHeaderInTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 wantsHeaderForSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)_updateBackgroundForCell:(id)arg1 atIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (void)_performVibrationRelatedChangesReloadingFromModel:(_Bool)arg1 updatingDataUsingBlock:(CDUnknownBlockType)arg2;
- (void)_updateTableForVibrationChanges;
- (void)_unregisterForVibrationsChangedNotifications;
- (void)_registerForVibrationsChangedNotifications;
- (void)_handleUserGeneratedVibrationsDidChangeNotification;
- (void)_unregisterForKeyboardNotifications;
- (void)_registerForKeyboardNotifications;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)adjustTableViewForKeyboardInfo:(id)arg1 animated:(_Bool)arg2;
- (_Bool)canSelectLabelForPropertyGroup:(id)arg1 info:(id)arg2;
- (void)tableView:(id)arg1 cell:(id *)arg2 orTag:(long long *)arg3 forRowAtIndexPath:(id)arg4 allowDequeing:(_Bool)arg5;
- (id)tableViewCellForActions:(id)arg1 tableView:(id)arg2 row:(long long)arg3 editing:(_Bool)arg4 allowDequeing:(_Bool)arg5 tag:(long long *)arg6;
- (id)ieTableViewCellForPropertyGroup:(id)arg1 tableView:(id)arg2 indexPath:(id)arg3 editing:(_Bool)arg4 allowDequeing:(_Bool)arg5 tag:(long long *)arg6;
- (id)_multiCellContentViewForCustomPropertyCell:(id)arg1;
- (void)_setMultiCellContentView:(id)arg1 forCustomPropertyCell:(id)arg2;
- (id)newAccessoryViewWhenEditing:(_Bool)arg1 forDataProvider:(id)arg2 info:(id)arg3;
- (id)cellLayoutManager;
- (void)_updateCellsForDataProvider:(id)arg1 afterDeleteAtIndex:(long long)arg2 isInsertionIndex:(_Bool)arg3 inTableView:(id)arg4;
- (void)_getDataProvider:(id *)arg1 andInfo:(id *)arg2 forIndexPath:(id)arg3;
- (id)actionCellForTableView:(id)arg1 withReuseIdentifier:(id)arg2 isConference:(_Bool)arg3 hasCustomContent:(_Bool)arg4;
- (id)addValueCellForTableView:(id)arg1 withReuseIdentifier:(id)arg2;
- (id)linkedCardCellForTableView:(id)arg1 withReuseIdentifier:(id)arg2;
- (long long)numberOfRowsInSection:(long long)arg1 whenEditing:(_Bool)arg2;
- (long long)numberOfSectionsWhenEditing:(_Bool)arg1;
- (_Bool)isInFullEditingMode;
- (long long)indexOfLinkingUISectionWhenEditing:(_Bool)arg1;
- (void)indexOfFirstPropertyGroupSection:(long long *)arg1 lastPropertyGroupSection:(long long *)arg2 addFieldSection:(long long *)arg3 linkingUISection:(long long *)arg4 primaryPropertyActionsSection:(long long *)arg5 topGroupingActionSection:(long long *)arg6 bottomGroupingActionSection:(long long *)arg7 cardActionsSection:(long long *)arg8 cardActionsSectionCount:(long long *)arg9 totalSectionCount:(long long *)arg10 whenEditing:(_Bool)arg11;
- (void)updateRecord;
- (void)endEditingTransactions;
- (void)unselectAllCellParts;
- (void)selectCustomPartWithFrame:(struct CGRect)arg1 occupiedCorners:(unsigned long long)arg2 forCell:(id)arg3;
- (void)selectWholePartForCell:(id)arg1;
- (void)selectValuePartForCell:(id)arg1;
- (void)selectLabelPartForCell:(id)arg1;
- (void)scrollToLastActiveEntryFieldAnimated:(_Bool)arg1;
- (void)scrollToLastActiveEntryFieldAnimated:(_Bool)arg1 becomeFirstResponder:(_Bool)arg2;
- (void)cancelPinning;
- (void)endPinning;
- (void)beginPinning;
@property(readonly, nonatomic) _Bool isPinning;
- (void)invalidatePropertyGroupsForEditing:(_Bool)arg1;
- (void)invalidateAllPropertyGroups;
- (id)propertyGroupsForEditing:(_Bool)arg1;
- (id)newPropertyGroupsForEditing:(_Bool)arg1;
- (id)newPropertyGroupsForEditing:(_Bool)arg1 withDisplayedProperties:(struct __CFArray *)arg2;
- (id)displayedPropertyGroupForProperty:(int)arg1 context:(void *)arg2 whenEditing:(_Bool)arg3;
- (id)propertyGroupForProperty:(int)arg1 context:(void *)arg2;
- (id)propertyGroupForProperty:(int)arg1 context:(void *)arg2 createIfEmpty:(_Bool)arg3;
- (void)resetPropertyGroupStores;
- (void *)_copyDefaultPolicy:(void *)arg1;
- (void)_enumerateContextPointersForProperty:(int)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)invalidateAdditionalProperties;
- (struct __CFArray *)additionalProperties;
- (struct __CFArray *)newAdditionalProperties;
- (_Bool)isPropertyOptional:(int)arg1;
- (void)updateCellEditingStyleAtIndexPath:(id)arg1;
- (long long)tableViewRowAnimationForUpdateAction:(unsigned long long)arg1 isFirstRow:(_Bool)arg2;
- (id)_notesHeaderView;
- (void)presentRelatedNamesPicker:(id)arg1;
- (void)addToContactsButtonClicked:(id)arg1;
- (void)updateByAddingFieldForProperty:(int)arg1 whenEditing:(_Bool)arg2;
- (void)tableViewAddFieldUpdateAnimationsDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (id)_indexPathForHeaderViewRow:(unsigned long long)arg1;
- (void)addFieldCellSelected:(id)arg1;
- (void)addFieldCellWillSelect:(id)arg1;
- (void)swapAddNewValueCellForProperty:(int)arg1 atIndexPath:(id)arg2;
- (void)setShouldUseAddNewValueCell:(_Bool)arg1 forProperty:(int)arg2;
- (_Bool)shouldUseAddNewValueCellForProperty:(int)arg1;
- (_Bool)usesAddNewValueCellForProperty:(int)arg1;
- (void)_resetAddNewValueCells;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3 important:(_Bool)arg4;
- (void)setInsertionValue:(id)arg1;
- (void)setInsertionLabel:(id)arg1;
- (void)setInsertionProperty:(int)arg1 value:(id)arg2 label:(id)arg3;
- (void)valueAtIndex:(long long)arg1 selectedForPropertyGroup:(id)arg2 withMemberCell:(id)arg3 forEditing:(_Bool)arg4;
- (void)deleteButtonClicked:(id)arg1;
@property(readonly, nonatomic) ABPersonImageView *personImageView;
- (void)sizeToFit;
- (void)prepareView;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)updateHeadersAndFootersForEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)headerFooterAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (id)sectionAnimationsDictionaryForEditing:(_Bool)arg1;
- (id)sectionAnimationsDictionaryForOriginalPropertyGroups:(id)arg1 newPropertyGroups:(id)arg2 whenEditing:(_Bool)arg3;
- (id)sectionAnimationsDictionaryForSwipeToDeleteAtIndexPath:(id)arg1;
- (long long)sectionIndexForProperty:(int)arg1 propertyGroupContext:(void *)arg2 withPropertyGroups:(id)arg3 whenEditing:(_Bool)arg4;
- (long long)sectionIndexForPropertyGroup:(id)arg1 withPropertyGroups:(id)arg2 whenEditing:(_Bool)arg3;
- (long long)_sectionIndexForPropertyGroup:(id)arg1 orProperty:(int)arg2 propertyGroupContext:(void *)arg3 withPropertyGroups:(id)arg4 whenEditing:(_Bool)arg5;
- (void)setAttribution:(id)arg1 enabled:(_Bool)arg2 target:(id)arg3 action:(SEL)arg4;
@property(readonly, nonatomic, getter=isAttributionEnabled) _Bool attributionEnabled;
@property(readonly, nonatomic) NSString *attribution;
@property(retain, nonatomic) UIView *customPersonTableFooterView;
- (void)updateTableFooterViewAnimated:(_Bool)arg1;
@property(readonly, nonatomic) ABPersonTableFooterView *tableFooterView;
- (id)_footerView;
@property(nonatomic) _Bool shouldAlignPersonHeaderViewToImage;
@property(retain, nonatomic) UIView *personHeaderView;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *alternateName;
@property(retain, nonatomic) UIView *customPersonTableHeaderView;
- (void)updateTableHeaderViewAnimated:(_Bool)arg1;
- (void)updateTableHeaderViewAnimated:(_Bool)arg1 andSkipTableViewHeaderHeightNotification:(_Bool)arg2;
- (void)notifyHeaderViewHeightDidChange;
@property(retain, nonatomic) ABPersonTableHeaderView *tableHeaderView;
- (id)newHeaderView;
- (void)reloadNoValueLabelAnimated:(_Bool)arg1;
- (void)reloadFavoritesData;
- (void)reloadPropertyGroups;
- (void)reloadImageData;
- (void)reloadDeleteButton;
- (void)reloadPreferredPersonForName;
- (void)reloadNameData;
- (void)reloadData;
- (void)reloadDataIncludingHeaderView:(_Bool)arg1;
- (void)reloadDataIncludingHeaderView:(_Bool)arg1 invalidatePropertyData:(_Bool)arg2;
- (void)notifyDataWasReloaded;
- (id)noValueLabel;
- (id)titleForNoValueWithProperty:(int)arg1;
@property(readonly, nonatomic) _Bool hasNameChanges;
@property(readonly, nonatomic) _Bool hasImageChanges;
- (_Bool)hasOnlyRingtoneChanges;
@property(readonly, nonatomic) _Bool hasChanges;
@property(readonly, nonatomic) _Bool canSave;
- (void)setPrimaryProperty:(int)arg1 countryCode:(id)arg2;
@property(readonly, nonatomic) int primaryProperty;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
- (_Bool)isPropertyDisplayed:(int)arg1;
- (void)setDisplayedProperties:(struct __CFArray *)arg1 andRefreshUI:(_Bool)arg2;
- (id)namePropertyGroup;
- (id)actionsController;
- (_Bool)allowsVoiceFavorite;
- (_Bool)allowsFaceTimeFavorite;
@property(nonatomic) _Bool allowsAddToFavorites; // @synthesize allowsAddToFavorites=_allowsAddToFavorites;
- (void)setAllowsConferencing:(_Bool)arg1 andReload:(_Bool)arg2;
- (void)setAllowsSharing:(_Bool)arg1 andReload:(_Bool)arg2;
- (void)setAllowsSendingTextMessage:(_Bool)arg1 andReload:(_Bool)arg2;
- (void)setAllowsAddToFavorites:(_Bool)arg1 andReload:(_Bool)arg2;
- (void)updateForConferencingAvailabilityChange;
- (void)reloadConferencing;
- (void)updateLinkingUI:(id)arg1;
- (id)prepareForLinkingUIUpdate;
- (id)_linkingHeaderView;
- (_Bool)isUnlinkingPersonWithAnimation;
- (void)showLinkedCardAtRow:(long long)arg1;
- (void)_endTableViewUpdatesWithoutScroll;
- (id)controllerMainView;
- (void)_updateDeleteButtonIfNeededForFooterView:(id)arg1;
- (void)updateSectionHeaderAndFooterHeightsForEditing:(_Bool)arg1;
- (void)_conferenceHistoryChanged:(id)arg1;
- (void)updateContactSourcesStringIfNeeded;
- (id)_contactSourcesString;
- (void)_getFirstRows:(id *)arg1 andOtherRows:(id *)arg2 fromIndexPaths:(id)arg3;
- (_Bool)_isReadonlyAtIndexPath:(id)arg1;
- (void)_getPropertyGroup:(id *)arg1 index:(long long *)arg2 editableFlag:(_Bool *)arg3 atIndexPath:(id)arg4;
- (long long)rowIndexInPropertyGroup:(id *)arg1 orActions:(id *)arg2 forRow:(long long)arg3 inSection:(long long)arg4 whenEditing:(_Bool)arg5;
- (void)propertyGroup:(id *)arg1 orActions:(id *)arg2 forSection:(long long)arg3 whenEditing:(_Bool)arg4;
- (id)_indexPathForPropertyGroup:(id)arg1 index:(long long)arg2 editableFlag:(_Bool)arg3;
@property(readonly, nonatomic) ABPersonTableViewSharingDelegate *sharingDelegate;
@property(readonly, nonatomic) ABPersonTableViewLinkingDelegate *linkingDelegate;
- (void)setLinkingDelegate:(id)arg1;
@property(readonly, nonatomic) ABPersonTableViewActionsDelegate *actionsDelegate;
@property(readonly, nonatomic) ABPersonPickersDelegate *pickersDelegate;
@property(readonly, nonatomic) ABPersonTableViewImageDataDelegate *imageDataDelegate;
@property(readonly, nonatomic) ABPersonTableViewMultiCellDelegate *multiCellContentViewDelegate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableViewLinkingDelegate : NSObject <ABPersonLinkingUIDelegate>
{
    NSMutableArray *_linkedInfos;
    long long _currentIndexInLinkedInfos;
    _Bool _ignoresReloadLinkedInfos;
    _Bool _shouldAllowLinkingAnotherContact;
    _Bool _hasLinkChanges;
    _Bool _shouldShowLinkingUIOnCard;
    _Bool _showsLinkedPeople;
    _Bool _appearsInLinkingPeoplePicker;
    _Bool _updateShouldAllowLinkingAnotherContact;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonViewControllerHelper *_helper;
}

@property(nonatomic) _Bool updateShouldAllowLinkingAnotherContact; // @synthesize updateShouldAllowLinkingAnotherContact=_updateShouldAllowLinkingAnotherContact;
@property(nonatomic) _Bool appearsInLinkingPeoplePicker; // @synthesize appearsInLinkingPeoplePicker=_appearsInLinkingPeoplePicker;
@property(nonatomic) _Bool shouldShowLinkedPeople; // @synthesize shouldShowLinkedPeople=_showsLinkedPeople;
@property(nonatomic) _Bool shouldShowLinkingUIOnCard; // @synthesize shouldShowLinkingUIOnCard=_shouldShowLinkingUIOnCard;
@property(readonly, nonatomic) NSArray *linkedInfos; // @synthesize linkedInfos=_linkedInfos;
@property(readonly, nonatomic) _Bool hasLinkChanges; // @synthesize hasLinkChanges=_hasLinkChanges;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (id)newPeoplePickerForLinking;
- (id)newPersonViewControllerForLinkedCardAtRow:(long long)arg1;
- (_Bool)shouldAllowLinkingPersonWithRecordID:(int)arg1;
- (_Bool)shouldAllowLinkingAnotherContact;
- (id)sourceNameForCardAtRow:(long long)arg1;
- (id)personNameForCardAtRow:(long long)arg1;
- (_Bool)canUnlinkCardAtRow:(long long)arg1;
- (long long)numberOfLinkedCardRows;
- (_Bool)manuallyUnlinkCardAtRow:(long long)arg1;
- (void)_finalizeLinkChanges;
- (_Bool)manuallyLinkPerson:(id)arg1;
- (id)allNonUnifiedPeople;
- (void)reloadLinkingUI;
- (_Bool)reloadLinkedInfos;
- (void)forceUseLinkedInfos:(id)arg1 currentIndexInLinkedInfos:(long long)arg2;
- (id)newLinkedInfoForPerson:(id)arg1;
- (id)linkedInfoAtRow:(long long)arg1;
- (long long)indexOfLinkedInfoAtRow:(long long)arg1;
- (id)sourceNameForCurrentCard;
- (_Bool)isLinkedCard;
- (_Bool)shouldIncludeLinkingUISectionWhenEditing:(_Bool)arg1;
- (void)dealloc;
- (id)initWithHelper:(id)arg1;

@end

@interface ABPersonTableViewMultiCellDelegate : NSObject <ABMultiCellContentViewUpdateDelegate, ABPersonTableHeaderViewDelegate, ABDatePickerViewControllerDismissDelegate>
{
    UIDatePicker *_datePicker;
    ABPersonTableViewDataSource *_dataSource;
    ABStyleProvider *_styleProvider;
    ABPersonPickersDelegate *_pickersDelegate;
}

@property(nonatomic) ABPersonPickersDelegate *pickersDelegate; // @synthesize pickersDelegate=_pickersDelegate;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void)personTableHeaderView:(id)arg1 imageViewWasSelected:(id)arg2;
- (_Bool)ABTabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (_Bool)tabToNextResponder:(_Bool)arg1 fromView:(id)arg2;
- (_Bool)_tableView:(id)arg1 isValidIndexPath:(id)arg2;
- (void)datePickerViewControllerWillDisappear:(id)arg1;
- (void)dateField:(id)arg1 delegateDismissDatePicker:(id)arg2;
- (void)dateField:(id)arg1 delegatePresentDatePicker:(id)arg2;
- (void)dateField:(id)arg1 delegatePrepareToPresentDatePicker:(id)arg2;
- (_Bool)dateField:(id)arg1 shouldPresentDatePicker:(id)arg2;
- (id)datePickerForDateField:(id)arg1;
- (id)_capitalizedTitleForContentView:(id)arg1;
- (void)_multiCellContentView:(id)arg1 selectedAlert:(id)arg2;
- (void)_multiCellContentView:(id)arg1 selectedService:(id)arg2;
- (void)_multiCellContentView:(id)arg1 selectedCountry:(id)arg2;
- (void)_multiCellContentView:(id)arg1 selectedLabel:(id)arg2;
- (void)multiCellContentViewWillHideDeleteConfirmation:(id)arg1;
- (void)multiCellContentViewWillShowDeleteConfirmation:(id)arg1;
- (void)multiCellContentView:(id)arg1 didResizeAnimated:(_Bool)arg2;
- (void)multiCellContentView:(id)arg1 willResizeAnimated:(_Bool)arg2;
- (void)multiCellContentViewDidEndEditing:(id)arg1;
- (void)multiCellContentView:(id)arg1 entryFieldDidEndEditing:(id)arg2 forKey:(id)arg3;
- (void)multiCellContentView:(id)arg1 entryField:(id)arg2 didUpdateValue:(id)arg3 forKey:(id)arg4;
- (void)multiCellContentView:(id)arg1 entryFieldDidBeginEditing:(id)arg2;
- (_Bool)multiCellContentView:(id)arg1 entryFieldShouldBeginEditing:(id)arg2;
- (void)multiCellContentView:(id)arg1 touchesCancelledForView:(id)arg2;
- (void)multiCellContentView:(id)arg1 touchesEndedForView:(id)arg2;
- (void)multiCellContentView:(id)arg1 touchesBeganForView:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonTableViewSharingDelegate : NSObject
{
    ABActionSheetDelegate *_actionSheetDelegate;
    _Bool _shareMessageBodyIsHTML;
    ABStyleProvider *_styleProvider;
    ABPersonViewControllerHelper *_helper;
    NSString *_shareMessageBody;
    NSString *_shareMessageSubject;
    NSString *_shareLocationURL;
    UIImage *_shareLocationSnapshotImage;
    CDUnknownBlockType _willTweetLocationCallback;
    CDUnknownBlockType _willWeiboLocationCallback;
}

+ (id)_fakePersonForMergedPeople:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType willWeiboLocationCallback; // @synthesize willWeiboLocationCallback=_willWeiboLocationCallback;
@property(copy, nonatomic) CDUnknownBlockType willTweetLocationCallback; // @synthesize willTweetLocationCallback=_willTweetLocationCallback;
@property(retain, nonatomic) UIImage *shareLocationSnapshotImage; // @synthesize shareLocationSnapshotImage=_shareLocationSnapshotImage;
@property(copy, nonatomic) NSString *shareLocationURL; // @synthesize shareLocationURL=_shareLocationURL;
@property(copy, nonatomic) NSString *shareMessageSubject; // @synthesize shareMessageSubject=_shareMessageSubject;
@property(copy, nonatomic) NSString *shareMessageBody; // @synthesize shareMessageBody=_shareMessageBody;
@property(nonatomic) _Bool shareMessageBodyIsHTML; // @synthesize shareMessageBodyIsHTML=_shareMessageBodyIsHTML;
@property(nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) ABStyleProvider *styleProvider; // @synthesize styleProvider=_styleProvider;
@property(readonly, nonatomic) _Bool canShareContact;
- (void)shareContact:(id)arg1;
- (void)shareContactFromButtonItem:(id)arg1;
- (void)shareContactFromButtonItem:(id)arg1 sender:(id)arg2;
@property(readonly, nonatomic) _Bool canWeibo;
@property(readonly, nonatomic) _Bool canTweet;
@property(readonly, nonatomic) _Bool canSendMail;
@property(readonly, nonatomic) _Bool canSendMMS;
- (void)shareActionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)shareLocationOnWeibo:(id)arg1;
- (void)shareLocationOnTwitter:(id)arg1;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2;
- (void)shareContactByTextMessage:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)shareContactByEmail:(id)arg1;
- (id)vCardFileName;
- (void)getVCardData:(id *)arg1 exportMode:(int)arg2 fileName:(id *)arg3;
- (_Bool)loadMessageUIAndReturnBundle:(id *)arg1;
- (_Bool)loadChatKitAndReturnBundle:(id *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ABPersonViewController_Modern : UIViewController <ABContactViewControllerDelegate, UIViewControllerRestoration>
{
    _Bool _badgeEmailPropertiesForMailVIP;
    _Bool _allowsEditing;
    _Bool _allowsActions;
    _Bool _shouldShowLinkedPeople;
    _Bool _allowsSharing;
    _Bool _allowsAddToFavorites;
    _Bool _allowsConferencing;
    _Bool _allowsContactBlocking;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    _Bool _highlightedImportant;
    int _style;
    int _highlightedProperty;
    int _highlightedMultiValueIdentifier;
    void *_addressBook;
    void *_displayedPerson;
    id <ABPersonViewControllerDelegate> _personViewDelegate;
    NSArray *_displayedProperties;
    ABContactViewController *_contactViewController;
    UIView *_personHeaderView;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(nonatomic) _Bool highlightedImportant; // @synthesize highlightedImportant=_highlightedImportant;
@property(nonatomic) int highlightedMultiValueIdentifier; // @synthesize highlightedMultiValueIdentifier=_highlightedMultiValueIdentifier;
@property(nonatomic) int highlightedProperty; // @synthesize highlightedProperty=_highlightedProperty;
@property(nonatomic) int style; // @synthesize style=_style;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(retain, nonatomic) UIView *personHeaderView; // @synthesize personHeaderView=_personHeaderView;
@property(retain, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(nonatomic) _Bool allowsConferencing; // @synthesize allowsConferencing=_allowsConferencing;
@property(nonatomic) _Bool allowsAddToFavorites; // @synthesize allowsAddToFavorites=_allowsAddToFavorites;
@property(nonatomic) _Bool allowsSharing; // @synthesize allowsSharing=_allowsSharing;
@property(nonatomic) _Bool shouldShowLinkedPeople; // @synthesize shouldShowLinkedPeople=_shouldShowLinkedPeople;
@property(nonatomic) _Bool allowsActions; // @synthesize allowsActions=_allowsActions;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(copy, nonatomic) NSArray *displayedProperties; // @synthesize displayedProperties=_displayedProperties;
@property(nonatomic) id <ABPersonViewControllerDelegate> personViewDelegate; // @synthesize personViewDelegate=_personViewDelegate;
- (void)cancelEditing:(_Bool)arg1;
- (void)personViewController:(id)arg1 willSetEditing:(_Bool)arg2 animated:(_Bool)arg3;
- (double)ab_heightToFitForViewInPopoverView;
- (void)setStyleProvider:(id)arg1;
- (id)styleProvider;
- (void)shareContactByEmail:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType willWeiboLocationCallback;
@property(copy, nonatomic) CDUnknownBlockType willTweetLocationCallback;
@property(retain, nonatomic) UIImage *shareLocationSnapshotImage;
@property(copy, nonatomic) NSString *shareLocationURL;
@property(copy, nonatomic) NSString *shareMessageSubject;
@property(copy, nonatomic) NSString *shareMessageBody;
@property(nonatomic) _Bool shareMessageBodyIsHTML;
- (_Bool)makeFirstFieldBecomeFirstResponder;
- (_Bool)handleExternalChange;
- (_Bool)_updateAllDataForExternalChange;
- (void)_updateTableDataForExternalChange;
- (_Bool)_updatePeopleDataForExternalChange;
- (void)addressBookChangedLocally:(struct __CFDictionary *)arg1;
- (void)setAttribution:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(copy, nonatomic) NSString *attribution;
@property(retain, nonatomic) UIView *customFooterView;
@property(retain, nonatomic) UIView *customHeaderView;
@property(nonatomic) _Bool shouldAlignPersonHeaderViewToImage;
@property(readonly, nonatomic) UIView *tableHeaderView;
- (void)setCardContentProvider:(id)arg1;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
@property(copy, nonatomic) NSString *message;
- (void)setDisplayedUIPerson:(id)arg1;
- (id)displayedUIPerson;
- (_Bool)allowsSettingAsPreferredCardForName;
- (void)setAllowsSettingAsPreferredCardForName:(_Bool)arg1;
@property(nonatomic) _Bool allowsVibrations;
@property(nonatomic) _Bool allowsSounds;
@property(nonatomic) _Bool allowsCancel;
@property(nonatomic) _Bool allowsDeletion;
- (id)editDelegate;
- (void)setEditDelegate:(id)arg1;
- (void)forceUseLinkedInfos:(id)arg1 currentIndexInLinkedInfos:(long long)arg2;
- (_Bool)manuallyLinkPerson:(id)arg1;
- (void)setShouldShowLinkingUIOnCard:(_Bool)arg1;
- (_Bool)shouldShowLinkingUIOnCard;
- (void)setAppearsInLinkingPeoplePicker:(_Bool)arg1;
- (_Bool)appearsInLinkingPeoplePicker;
- (void)reloadContactViewController;
@property(nonatomic) _Bool badgeEmailPropertiesForMailVIP; // @synthesize badgeEmailPropertiesForMailVIP=_badgeEmailPropertiesForMailVIP;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3 important:(_Bool)arg4;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 important:(_Bool)arg3;
- (id)contactViewController:(id)arg1 highlightColorForPropertyItem:(id)arg2 contact:(id)arg3;
- (_Bool)contactViewController:(id)arg1 shouldPerformDefaultActionForContact:(id)arg2 property:(id)arg3 labeledValue:(id)arg4;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)loadView;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2;
@property(nonatomic) void *displayedPerson; // @synthesize displayedPerson=_displayedPerson;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
- (_Bool)isKindOfClass:(Class)arg1;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;
- (id)initWithStyle:(int)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 addressBook:(void *)arg3;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 addressBook:(void *)arg3 style:(int)arg4;
- (id)init;
- (id)newActionButton;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 forProperty:(int)arg3 withActionGrouping:(long long)arg4 ordering:(long long)arg5;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 forProperty:(int)arg4 withActionGrouping:(long long)arg5 ordering:(long long)arg6;
- (void)replaceActionWithTarget:(id)arg1 selector:(SEL)arg2 withTitle:(id)arg3 target:(id)arg4 selector:(SEL)arg5 location:(long long)arg6 destructive:(_Bool)arg7;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 location:(long long)arg3;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 location:(long long)arg4 destructive:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonViewController : UIViewController <AFContextProvider, UIViewControllerRestoration>
{
    id <ABPersonViewControllerDelegate> _personViewDelegate;
    id _helper;
    id _internal;
    _Bool _internal2;
    NSTimer *_editAnimationTimer;
    _Bool _allowsContactBlocking;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonTableViewActionsDelegate *_actionsDelegate;
    ABPersonTableViewSharingDelegate *_sharingDelegate;
    ABContactViewController *_contactViewController;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(retain, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(readonly, nonatomic) ABPersonTableViewSharingDelegate *sharingDelegate; // @synthesize sharingDelegate=_sharingDelegate;
@property(readonly, nonatomic) ABPersonTableViewActionsDelegate *actionsDelegate; // @synthesize actionsDelegate=_actionsDelegate;
@property(readonly, nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (double)ab_heightToFitForViewInPopoverView;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3 important:(_Bool)arg4;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 important:(_Bool)arg3;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2;
@property(copy, nonatomic) NSArray *displayedProperties;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider;
@property(nonatomic) _Bool badgeEmailPropertiesForMailVIP;
- (void)shareContactByEmail:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType willWeiboLocationCallback;
@property(copy, nonatomic) CDUnknownBlockType willTweetLocationCallback;
@property(retain, nonatomic) UIImage *shareLocationSnapshotImage;
@property(copy, nonatomic) NSString *shareLocationURL;
@property(copy, nonatomic) NSString *shareMessageSubject;
@property(copy, nonatomic) NSString *shareMessageBody;
@property(nonatomic) _Bool shareMessageBodyIsHTML;
- (_Bool)makeFirstFieldBecomeFirstResponder;
- (_Bool)_updateAllDataForExternalChange;
- (void)_updateTableDataForExternalChange;
- (_Bool)_updatePeopleDataForExternalChange;
- (void)addressBookChangedLocally:(struct __CFDictionary *)arg1;
- (void)setAttribution:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(copy, nonatomic) NSString *attribution;
@property(retain, nonatomic) UIView *customFooterView;
@property(retain, nonatomic) UIView *customHeaderView;
@property(nonatomic) _Bool shouldAlignPersonHeaderViewToImage;
@property(retain, nonatomic) UIView *personHeaderView;
@property(readonly, nonatomic) UIView *tableHeaderView;
- (void)setCardContentProvider:(id)arg1;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
@property(copy, nonatomic) NSString *message;
@property(retain, nonatomic) ABUIPerson *displayedUIPerson;
@property(nonatomic) void *displayedPerson;
@property(nonatomic) void *addressBook;
@property(nonatomic) _Bool allowsSettingAsPreferredCardForName;
@property(nonatomic) _Bool allowsConferencing;
@property(nonatomic) _Bool allowsVibrations;
@property(nonatomic) _Bool allowsSounds;
@property(nonatomic) _Bool allowsCancel;
@property(nonatomic) _Bool allowsAddToFavorites;
@property(nonatomic) _Bool allowsSharing;
@property(nonatomic) _Bool allowsActions;
@property(nonatomic) _Bool allowsEditing;
@property(nonatomic) _Bool allowsDeletion;
@property(nonatomic) id <ABPersonEditDelegate> editDelegate;
- (void)forceUseLinkedInfos:(id)arg1 currentIndexInLinkedInfos:(long long)arg2;
- (_Bool)manuallyLinkPerson:(id)arg1;
- (void)setShouldShowLinkingUIOnCard:(_Bool)arg1;
- (_Bool)shouldShowLinkingUIOnCard;
@property(nonatomic) _Bool appearsInLinkingPeoplePicker;
@property(nonatomic) _Bool shouldShowLinkedPeople;
- (void)updateRecord;
@property(readonly, nonatomic) AFContextManager *contextManager;
- (id)getCurrentContext;
- (_Bool)allowContextProvider:(id)arg1;
- (void)helper:(id)arg1 didToggleEditingWhileInViewMode:(_Bool)arg2;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEditing:(_Bool)arg1 saveChanges:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_editAnimationTimerFired:(id)arg1;
- (int)abViewControllerType;
- (void)applicationDidResume;
- (void)applicationWillSuspend;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)saveChanges;
- (_Bool)canHandleSnapbackIdentifier:(id)arg1 animated:(_Bool)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)cancelEditing:(_Bool)arg1;
- (void)editCancel:(id)arg1;
- (void)updateNavigationButtons;
- (void)updateNavigationButtonsAnimated:(_Bool)arg1;
- (void)pickerCancel:(id)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (_Bool)supportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
@property(nonatomic) _Bool observesExternalChanges;
- (void)_handleLocalChange:(struct __CFDictionary *)arg1;
- (_Bool)handleExternalChange;
- (void)stopDelayingChangeNotificationsAndDeliverNow:(_Bool)arg1;
- (void)startDelayingChangeNotifications;
- (_Bool)isDelayingChangeNotifications;
- (void)helperDidReloadAfterChangingDisplayedPeople:(id)arg1;
@property(nonatomic) id <ABPersonViewControllerDelegate> personViewDelegate;
- (_Bool)isReadonly;
- (void)peoplePickerLinkButtonTapped;
- (void)updateTitle;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (void)_removeContextProviderOnMainThread;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper;
- (id)initWithAddressBook:(void *)arg1;
- (id)initWithStyle:(int)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 addressBook:(void *)arg3;
- (void)applicationWillTerminate:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 addressBook:(void *)arg3 style:(int)arg4;
- (id)init;
- (void)setCustomAppearanceProvider:(id)arg1;
- (void)addActionWithTitle:(id)arg1 content:(id)arg2 target:(id)arg3 selector:(SEL)arg4 forProperty:(int)arg5 withActionGrouping:(long long)arg6 ordering:(long long)arg7;
- (id)newActionButton;
- (void)setActionShouldPickHighlightedItem:(_Bool)arg1;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 forProperty:(int)arg3 withActionGrouping:(long long)arg4 ordering:(long long)arg5;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 forProperty:(int)arg4 withActionGrouping:(long long)arg5 ordering:(long long)arg6;
- (void)addActionWithTitle:(id)arg1 shortTitle:(id)arg2 target:(id)arg3 selector:(SEL)arg4 forProperty:(int)arg5 withActionGrouping:(long long)arg6 ordering:(long long)arg7;

@end

@interface ABPersonViewController_DeletionDelegate : NSObject <UIActionSheetDelegate>
{
    ABPersonViewControllerHelper *_controller;
}

- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)initWithPersonViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPersonViewControllerHelperNavigationController : UINavigationController
{
    ABUnknownPersonViewController *_unknownPersonViewController;
}

- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithRootViewController:(id)arg1 unknownPersonViewController:(id)arg2;

@end

@interface ABPersonViewControllerHelper : NSObject <ABNewPersonViewControllerDelegate, ABPeoplePickerNavigationControllerDelegate, ABPersonTableViewDataSourceDelegate, ABPickerViewControllerDismissDelegate, UIActionSheetDelegate, UIPopoverControllerDelegate, ABPopoverRepresentDelegate, ABPersonEditDelegate, ABPersonViewControllerDelegate, UIScrollViewDelegate, UIViewControllerRestoration>
{
    UIViewController *_viewController;
    id <ABPersonEditDelegate> _editDelegate;
    struct __CFArray *_displayedProperties;
    ABDatePickerViewController *_datePickerViewController;
    _Bool _isAnimatingDatePickerInputView;
    _Bool _willPresentDatePickerViewController;
    id _activeDialog;
    id _deletionDelegate;
    id _actionSheetDelegate;
    _Bool _allowsSettingAsPreferredCardForName;
    _Bool _animatedRight;
    _Bool _automaticallySetEditing;
    _Bool _allowsAddingToAddressBook;
    _Bool _showsPeoplePickerCancelButton;
    _Bool _savesNewContactOnSuspend;
    void *_addressBook;
    struct __CFDictionary *_valueByProperty;
    id <ABStyleProvider> _styleProvider;
    id <ABCardContentProvider> _cardContentProvider;
    _Bool _isOverridingCardContentProvider;
    UIView *_cardContentProviderHeaderView;
    long long _selectedCardContentIndex;
    _Bool _isLocation;
    NSString *_addToPersonButtonTitle;
    UIBarButtonItem *_reusableCancelButton;
    ABPersonTableView *_controllerTableView;
    unsigned long long _modelDatabaseLocalChangeCancellationCount;
    NSIndexPath *_popoverCellIndexPath;
    NSIndexPath *_popoverViewInCellIndexPath;
    UIPopoverController *_presentationPopoverController;
    ABPeoplePickerNavigationController *_peoplePickerForLinking;
    ABPeoplePickerNavigationController *_peoplePickerForAddToContacts;
    ABPeoplePickerNavigationController *_peoplePickerForRelatedNames;
    ABMultiCellContentView_RelatedName *_relatedPersonCell;
    _Bool _disablePopoverUpdates;
    long long _favoritesListChangeNotificationCount;
    _Bool _hasAddedUnknownPersonActions;
    ABUIPerson *_displayedPerson;
    NSArray *_displayedPeople;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonTableViewLinkingDelegate *_linkingDelegate;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(retain, nonatomic) NSIndexPath *popoverViewInCellIndexPath; // @synthesize popoverViewInCellIndexPath=_popoverViewInCellIndexPath;
@property(retain, nonatomic) NSIndexPath *popoverCellIndexPath; // @synthesize popoverCellIndexPath=_popoverCellIndexPath;
@property(copy, nonatomic) NSString *addToPersonButtonTitle; // @synthesize addToPersonButtonTitle=_addToPersonButtonTitle;
@property(readonly, nonatomic) UITableView *controllerTableView; // @synthesize controllerTableView=_controllerTableView;
@property(nonatomic) ABPersonTableViewLinkingDelegate *linkingDelegate; // @synthesize linkingDelegate=_linkingDelegate;
@property(nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool disablePopoverUpdates; // @synthesize disablePopoverUpdates=_disablePopoverUpdates;
@property(nonatomic) _Bool savesNewContactOnSuspend; // @synthesize savesNewContactOnSuspend=_savesNewContactOnSuspend;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) _Bool isLocation; // @synthesize isLocation=_isLocation;
@property(nonatomic) _Bool allowsAddingToAddressBook; // @synthesize allowsAddingToAddressBook=_allowsAddingToAddressBook;
@property(nonatomic) _Bool allowsSettingAsPreferredCardForName; // @synthesize allowsSettingAsPreferredCardForName=_allowsSettingAsPreferredCardForName;
@property(nonatomic) _Bool showsPeoplePickerCancelButton; // @synthesize showsPeoplePickerCancelButton=_showsPeoplePickerCancelButton;
@property(readonly, nonatomic) NSArray *displayedPeople; // @synthesize displayedPeople=_displayedPeople;
@property(retain, nonatomic) ABUIPerson *displayedPerson; // @synthesize displayedPerson=_displayedPerson;
@property(nonatomic) _Bool automaticallySetEditing; // @synthesize automaticallySetEditing=_automaticallySetEditing;
@property(nonatomic) id <ABPersonEditDelegate> editDelegate; // @synthesize editDelegate=_editDelegate;
@property(readonly, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
- (id)viewToRepresentPopover:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(id)arg1;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)shouldBeRemovedFromNavigationStack;
- (void)preferredPersonDidChangeToPerson:(void *)arg1;
- (void)imageUpdatedForPerson:(void *)arg1;
- (void)personWasDeleted;
- (void)dismissPickerViewController:(id)arg1;
- (_Bool)updateAllDataForExternalChange;
- (void)updateTableDataForExternalChange;
- (_Bool)updatePeopleDataForExternalChange;
- (_Bool)_updatePeopleDataForExternalChangeWithFullReload:(_Bool)arg1;
- (void)addressBookChangedLocally:(struct __CFDictionary *)arg1;
- (void)ignoreNextLocalChange;
- (void)personTableViewDataSource:(id)arg1 willUpdateForEditing:(_Bool)arg2;
- (void)personTableViewDataSourceHeaderHeightDidChange:(id)arg1;
- (double)personTableViewDataSourceHeaderPadding:(id)arg1;
- (_Bool)personTableViewDataSourceShouldShowHeader:(id)arg1;
- (void)personTableViewDataSourceDidReloadData:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 scrollViewDidScroll:(id)arg2;
- (_Bool)personTableViewDataSourceIsInPopover:(id)arg1;
- (void)personTableViewDataSourceShouldIgnoreNextLocalChange:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)personTableViewDataSource:(id)arg1 conference:(id)arg2 person:(id)arg3 property:(int)arg4 identifier:(int)arg5;
- (void)personTableViewDataSource:(id)arg1 shareContact:(id)arg2;
- (_Bool)personTableViewDataSourceIsLocation:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 didDismissActionSheet:(id)arg2;
- (void)personTableViewDataSource:(id)arg1 presentActionSheet:(id)arg2 fromView:(id)arg3;
- (void)personTableViewDataSourceDidSwipeToDelete:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 didFinishEditingProperty:(int)arg2;
- (void)_attemptSave;
- (void)personTableViewDataSource:(id)arg1 didUpdateValueForProperty:(int)arg2;
- (void)personTableViewDataSource:(id)arg1 didBeginEditingProperty:(int)arg2;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (_Bool)personTableViewDataSource:(id)arg1 shouldShowAction:(id)arg2;
- (void)personTableViewDataSource:(id)arg1 presentPickerViewController:(id)arg2 fromView:(id)arg3 forIndexPath:(id)arg4;
- (void)personTableViewDataSource:(id)arg1 dismissDatePickerViewController:(id)arg2;
- (void)presentLinkingPeoplePickerForPersonTableViewDataSource:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 pushLinkedCardAtRow:(long long)arg2;
- (_Bool)personTableViewDataSourceShouldShowLinkedPeople:(id)arg1;
- (_Bool)personTableViewDataSourceShouldShowContactSources:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 presentDatePickerViewController:(id)arg2 fromView:(id)arg3 passthroughViews:(id)arg4 forIndexPath:(id)arg5;
- (void)personTableViewDataSourceWillPresentDatePickerViewController:(id)arg1;
- (_Bool)isPresentingDatePickerViewControllerForPersonTableViewDataSource:(id)arg1;
- (void)_dismissDatePickerInputViewAnimated:(_Bool)arg1;
- (void)_datePickerInputViewDismissAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_presentDatePickerViewControllerAsInputView:(id)arg1 andScrollToIndexPath:(id)arg2;
- (_Bool)shouldAnimateDatePickerInputView;
- (_Bool)personTableViewDataSourceShouldPresentDatePickerViaDelegate:(id)arg1;
@property(readonly, nonatomic) _Bool hasPopoverController;
- (void)personTableViewDataSource:(id)arg1 removeNonScrollableHeaderViewAnimated:(_Bool)arg2;
- (void)personTableViewDataSource:(id)arg1 addNonScrollableHeaderView:(id)arg2 animated:(_Bool)arg3;
- (void)personTableViewDataSourceSelectedAddToContacts:(id)arg1;
- (void)personTableViewDataSourceSelectedDeletePerson:(id)arg1;
- (void)personTableViewDataSource:(id)arg1 selectedAddToFavoritesActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3 entryType:(int)arg4;
- (void)personTableViewDataSource:(id)arg1 selectedSMSActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3;
- (void)personTableViewDataSource:(id)arg1 selectedCallActionForPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3;
- (_Bool)personTableViewDataSource:(id)arg1 selectedPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3 withMemberCell:(id)arg4 forEditing:(_Bool)arg5;
- (void)personTableViewDataSource:(id)arg1 selectedImageForEditing:(_Bool)arg2;
- (void)performActionForPropertyAtIndex:(long long)arg1 inPropertyGroup:(id)arg2 forCell:(id)arg3;
- (void)performInstantMessageActionForPropertyAtIndex:(long long)arg1 inPropertyGroup:(id)arg2 forCell:(id)arg3;
- (id)_chatURLWithPropertyValue:(id)arg1;
- (void)performSocialProfileActionForPropertyAtIndex:(long long)arg1 inPropertyGroup:(id)arg2 forCell:(id)arg3;
- (void)performDefaultActionForPropertyAtIndex:(long long)arg1 inPropertyGroup:(id)arg2;
- (void)performAction:(int)arg1 forPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3;
- (void)performAction:(int)arg1 forPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3 withContext:(void *)arg4;
- (void)weiboActionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)twitterActionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)performWeiboActionForPropertyValue:(id)arg1 cell:(id)arg2;
- (void)performTwitterActionForPropertyValue:(id)arg1 cell:(id)arg2;
- (void)openSocialProfile:(id)arg1;
- (void)showWeiboSheetForPropertyValue:(id)arg1;
- (void)showTweetSheetForPropertyValue:(id)arg1;
- (void)presentAddToContactsSheetIfNeeded:(id)arg1;
- (_Bool)shouldShowAddToExistingContact;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (void)peoplePickerNavigationController:(id)arg1 setRelatedPerson:(id)arg2;
- (void)peoplePickerNavigationController:(id)arg1 requestedLinkForPerson:(id)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationController:(id)arg1 insertEditorDidConfirm:(_Bool)arg2 forPerson:(void *)arg3;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldShowInsertEditorForPerson:(void *)arg2 insertProperty:(int *)arg3 copyInsertValue:(id *)arg4 copyInsertLabel:(id *)arg5;
- (void)_mergeIntoDisplayedPerson:(void *)arg1;
- (_Bool)copyInsertValue:(id *)arg1 property:(int *)arg2 forPerson:(void *)arg3;
- (void)presentPeoplePickerNavigationControllerForAddToContacts:(id)arg1;
- (void)presentPeoplePickerNavigationControllerForRelatedNames:(id)arg1;
- (void)_presentPeoplePickerNavigationController:(id)arg1 fromView:(id)arg2 inPopover:(_Bool)arg3;
- (id)_preparePeoplePicker;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2 informDelegate:(_Bool)arg3;
- (void)presentNewContactViewControllerForAddToContacts:(id)arg1;
- (id)_newContactViewControllerForAddToContacts;
- (void)_addProperties:(id)arg1 toPerson:(id)arg2;
- (id)viewControllerToPresentModal;
- (void)deleteDialog:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)removeDisplayedPeople;
- (void)removeSelectedPerson;
- (void)removeSelectedPersonFromBarButtonItem:(id)arg1;
- (double)ab_heightToFitForViewInPopoverView;
- (void)ab_updatePopoverSize;
- (void)applicationDidResume;
- (void)applicationWillSuspend;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadViewWithPerson:(id)arg1 allowDeletion:(_Bool)arg2 allowActions:(_Bool)arg3;
- (void)loadUnknownViewWithPerson:(id)arg1 allowActions:(_Bool)arg2;
- (void)addUnknownPersonActionsIfNeeded;
- (void)contentSwitchingTabsTapped:(id)arg1;
- (void)showSelectedContentView;
- (id)prepareViewWithPerson:(id)arg1;
- (void)updateContentSwitchingTabs;
- (void)didDismissModalViewController;
- (void)viewDidLoad;
- (void)notifyScrollViewDidLoad;
- (void)updateEditButton;
- (void)presentModalViewController:(id)arg1;
- (void)pushViewController:(id)arg1;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (id)viewForActionSheet;
- (_Bool)makeFirstFieldBecomeFirstResponder;
@property(readonly, nonatomic) id <ABPersonViewControllerPrivateDelegate> personViewDelegate;
- (id)newPersonViewDelegate;
@property(readonly, nonatomic) id <ABUnknownPersonViewControllerDelegate> unknownPersonViewDelegate;
- (void)updateLinkBarButtonItem;
- (void)setDatePickerViewController:(id)arg1;
- (void)updateRecord;
- (void)reloadNameData;
- (void)reloadData;
- (void)updateDisplayedPeopleAndReloadData;
- (void)setAsPreferredCardForName:(id)arg1;
- (void)updateAllowsSettingAsPreferredCardForName;
- (void)_conferencingAvailabilityChanged:(id)arg1;
- (void)conference:(id)arg1 person:(id)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)_favoritesListChanged:(id)arg1;
- (void)setAllowsActions:(_Bool)arg1;
@property(readonly, getter=isReadonly) _Bool readonly;
@property(copy, nonatomic) NSArray *displayedProperties;
- (void)_updateDisplayedPeople;
- (void)_updateDisplayedPeopleForcingReloadData:(_Bool)arg1;
- (void)setDisplayedPeople:(id)arg1 forceReload:(_Bool)arg2;
@property(readonly, nonatomic) UIBarButtonItem *reusableCancelButton;
@property(readonly, nonatomic) void *existingAddressBook;
@property(nonatomic) void *addressBook;
- (id)_personToUseForAddressBook;
- (void)setCardContentProvider:(id)arg1;
- (void)_setCardContentProvider:(id)arg1;
- (_Bool)_shouldHideContentSwitchingTabsWhenEditing:(_Bool)arg1;
- (void)_updateCardContentProviderHeaderViewForEditing:(_Bool)arg1;
- (void)_updateBackgroundForCardContentProvider;
- (void)client:(id)arg1 didDismissActionSheet:(id)arg2;
- (void)setActiveDialog:(id)arg1;
- (id)personContainerView;
- (void)dealloc;
- (id)initWithViewController:(id)arg1 style:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNContactPickerServiceViewController : CNContactPickerLegacyViewController <CNContactPickerContentDelegate>
{
}

- (void)pickerDidCancel;
- (void)pickerDidSelectContact:(id)arg1 propertyKey:(id)arg2 propertyIdentifier:(int)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNContactPickerExtensionContext : NSExtensionContext <CNContactPickerServiceProtocol, CNContactPickerHostProtocol>
{
}

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;
- (void)pickerDidCancel;
- (void)pickerDidSelectContactWithRecordID:(int)arg1 vCardData:(id)arg2 propertyKey:(id)arg3 propertyIdentifier:(int)arg4;
- (void)setupWithOptions:(id)arg1 readyBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPickerTableViewController : UITableViewController
{
}

- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;

@end

@interface ABPickerController : UINavigationController <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    _Bool _allowsCustomItems;
    NSString *_selectedItem;
    NSArray *_builtinItems;
    NSArray *_customItems;
    NSString *_itemLocalizationKey;
    CDUnknownBlockType _itemLocalizationBlock;
    CNContactStyle *_contactStyle;
    UITableViewController *_tableViewController;
    NSIndexPath *_selectedIndexPath;
}

@property(retain, nonatomic) NSIndexPath *selectedIndexPath; // @synthesize selectedIndexPath=_selectedIndexPath;
@property(retain, nonatomic) UITableViewController *tableViewController; // @synthesize tableViewController=_tableViewController;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(copy, nonatomic) CDUnknownBlockType itemLocalizationBlock; // @synthesize itemLocalizationBlock=_itemLocalizationBlock;
@property(copy, nonatomic) NSString *itemLocalizationKey; // @synthesize itemLocalizationKey=_itemLocalizationKey;
@property(nonatomic) _Bool allowsCustomItems; // @synthesize allowsCustomItems=_allowsCustomItems;
@property(copy, nonatomic) NSArray *customItems; // @synthesize customItems=_customItems;
@property(copy, nonatomic) NSArray *builtinItems; // @synthesize builtinItems=_builtinItems;
@property(retain, nonatomic) NSString *selectedItem; // @synthesize selectedItem=_selectedItem;
- (id)_itemAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)isEditing;
- (void)_updateRightButtonItem;
- (void)viewWillAppear:(_Bool)arg1;
- (void)removeCustomItem:(id)arg1;
- (void)customLabelUpdated:(id)arg1;
- (void)donePicker:(id)arg1;
- (void)cancelPicker:(id)arg1;
- (id)titleForAddCustomItem;
- (id)titleForPickerItem:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <ABPickerControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPickerItemCell : UITableViewCell
{
    UITextField *_textField;
    CNContactStyle *_contactStyle;
}

@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(retain, nonatomic) UITextField *textField; // @synthesize textField=_textField;
- (void)endEditing;
- (void)beginEditing;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPickerViewController : UITableViewController
{
    void *_context;
    id _defaultValue;
    SEL _selectionAction;
    id <ABPickerViewControllerDelegate> _delegate;
    id <ABPickerViewControllerDismissDelegate> _dismissDelegate;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) SEL selectionAction; // @synthesize selectionAction=_selectionAction;
@property(nonatomic) id <ABPickerViewControllerDismissDelegate> dismissDelegate; // @synthesize dismissDelegate=_dismissDelegate;
@property(nonatomic) id <ABPickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id defaultValue; // @synthesize defaultValue=_defaultValue;
@property(nonatomic) void *context; // @synthesize context=_context;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)viewDidLoad;
- (double)ab_heightToFitForViewInPopoverView;
- (void)cancelButtonClicked:(id)arg1;
- (void)attemptDismissAfterSelectingItem:(id)arg1;
@property(readonly, nonatomic) UIBarButtonItem *doneBarButtonItem;
@property(readonly, nonatomic) UIBarButtonItem *cancelBarButtonItem;
- (void)dealloc;

@end

@interface ABPopoverManager : NSObject <UIPopoverControllerDelegate, UIActionSheetDelegate>
{
    UIView *_autorotateView;
    UIResponder *_autorotateResponder;
    UIBarButtonItem *_autorotateBarButtonItem;
    unsigned long long _autorotateDirections;
    UIPopoverController *_autorotatePopoverController;
    UIActionSheet *_autorotateActionSheet;
    id <ABPopoverRepresentDelegate> _representDelegate;
    id _realDelegate;
    _Bool _rotating;
}

+ (void)stopAutorotatePresenter:(id)arg1;
+ (void)popoverController:(id)arg1 dismissPopoverAnimated:(_Bool)arg2;
+ (void)popoverController:(id)arg1 presentPopoverFromView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4 representDelegate:(id)arg5;
+ (void)popoverController:(id)arg1 presentPopoverFromRect:(struct CGRect)arg2 inView:(id)arg3 permittedArrowDirections:(unsigned long long)arg4 animated:(_Bool)arg5;
+ (void)dismissPopoverForActionSheet:(id)arg1;
+ (void)actionSheet:(id)arg1 dismissWithClickedButtonIndex:(long long)arg2 animated:(_Bool)arg3;
+ (void)actionSheet:(id)arg1 showFromBarButtonItem:(id)arg2 animated:(_Bool)arg3 autorotate:(_Bool)arg4;
+ (void)actionSheet:(id)arg1 showFromView:(id)arg2 animated:(_Bool)arg3 autorotate:(_Bool)arg4;
+ (void)actionSheet:(id)arg1 showFromView:(id)arg2 animated:(_Bool)arg3 direction:(unsigned long long)arg4 autorotate:(_Bool)arg5;
+ (void)actionSheet:(id)arg1 showFromRect:(struct CGRect)arg2 inView:(id)arg3 animated:(_Bool)arg4 direction:(unsigned long long)arg5 autorotate:(_Bool)arg6;
+ (void)actionSheet:(id)arg1 showFromBarButtonItem:(id)arg2 animated:(_Bool)arg3;
+ (void)actionSheet:(id)arg1 showFromRect:(struct CGRect)arg2 inView:(id)arg3 animated:(_Bool)arg4;
+ (void)actionSheet:(id)arg1 showFromRect:(struct CGRect)arg2 inView:(id)arg3 direction:(unsigned long long)arg4 animated:(_Bool)arg5;
+ (_Bool)resignFirstResponderIfNeeded;
+ (void)removeManagerForPresenter:(id)arg1;
+ (id)managerForPresenter:(id)arg1;
@property(retain, nonatomic) id <ABPopoverRepresentDelegate> representDelegate; // @synthesize representDelegate=_representDelegate;
@property(retain, nonatomic) id realDelegate; // @synthesize realDelegate=_realDelegate;
@property(retain, nonatomic) UIActionSheet *autorotateActionSheet; // @synthesize autorotateActionSheet=_autorotateActionSheet;
@property(retain, nonatomic) UIPopoverController *autorotatePopoverController; // @synthesize autorotatePopoverController=_autorotatePopoverController;
@property(nonatomic) unsigned long long autorotateDirrections; // @synthesize autorotateDirrections=_autorotateDirections;
@property(retain, nonatomic) UIBarButtonItem *autorotateBarButtonItem; // @synthesize autorotateBarButtonItem=_autorotateBarButtonItem;
@property(retain, nonatomic) UIResponder *autorotateResponder; // @synthesize autorotateResponder=_autorotateResponder;
@property(retain, nonatomic) UIView *autorotateView; // @synthesize autorotateView=_autorotateView;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)startAutorotateActionSheet:(id)arg1 fromBarButtonItem:(id)arg2;
- (void)startAutorotateActionSheet:(id)arg1 fromView:(id)arg2;
- (void)stopAutorotate;
- (void)revertDelegate;
- (void)startAutorotatePopoverController:(id)arg1 showFromView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 representDelegate:(id)arg4;
- (_Bool)autorotates;
- (id)delegateOwner;
@property(readonly, nonatomic) UIWindow *observedWindow;
- (void)stopObservingRotation;
- (void)startObservingRotationOfWindow:(id)arg1;
- (void)windowDidRotate:(id)arg1;
- (void)windowWillRotate:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPostalAddressEditorView : UIControl <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate, ABCountryPickerControllerDelegate, ABText>
{
    CNPostalAddress *_address;
    NSDictionary *_valueTextAttributes;
    id <ABPresenterDelegate> _delegate;
    CNContactStyle *_contactStyle;
    UITableView *_tableView;
    NSDictionary *_addressFormats;
    NSArray *_cellsLayout;
    NSMutableDictionary *_textFields;
}

@property(copy, nonatomic) NSMutableDictionary *textFields; // @synthesize textFields=_textFields;
@property(copy, nonatomic) NSArray *cellsLayout; // @synthesize cellsLayout=_cellsLayout;
@property(copy, nonatomic) NSDictionary *addressFormats; // @synthesize addressFormats=_addressFormats;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
@property(nonatomic) id <ABPresenterDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_cellsLayoutForCountryCode:(id)arg1;
- (id)_normalizeCountryCodeToISO:(id)arg1;
- (id)_countryCode;
- (void)_setupCoutryPickerOnTextField:(id)arg1;
- (void)_setupCountryPickerOnLine:(id)arg1;
- (id)_addressPlaceholderForKey:(id)arg1;
- (id)_addressValueForKey:(id)arg1;
- (void)_setAddressValue:(id)arg1 forKey:(id)arg2;
- (void)setBackgroundColor:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)countryPicker:(id)arg1 didPickCountryCode:(id)arg2;
- (void)countryPickerDidCancel:(id)arg1;
- (void)textFieldChanged:(id)arg1;
- (void)_invalidateCellsLayout;
@property(copy, nonatomic) CNPostalAddress *address;
@property(copy, nonatomic) UIColor *separatorColor;
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;
@property(readonly, nonatomic) long long lineCount;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)becomeFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPostalNameGroupItem : ABCardGroupItem
{
    CNMutableContact *_contact;
    SEL _setter;
    NSString *_value;
    NSString *_property;
    NSString *_placeholder;
}

@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy, nonatomic) NSString *property; // @synthesize property=_property;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(nonatomic) SEL setter; // @synthesize setter=_setter;
@property(copy, nonatomic) CNMutableContact *contact; // @synthesize contact=_contact;

@end

@interface ABPostalNameContactEditingCell : ABContactCell <UITextFieldDelegate>
{
    UITextField *_editingTextField;
}

- (void)textFieldDidEndEditing:(id)arg1;
- (void)setCardGroupItem:(id)arg1;
- (id)firstResponderItem;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPostalAddressEditorViewController : UITableViewController <ABPresenterDelegate, ABPropertyCellDelegate>
{
    NSMutableArray *_propertyItems;
    int _property;
    CNMutableContact *_contact;
    ABCardPropertyGroup *_propertyGroup;
    CNContactStyle *_contactStyle;
}

+ (id)cellIdentifierForClass:(Class)arg1;
+ (id)cellIdentifierForEditingProperty:(id)arg1;
- (id)contactStyle;
- (id)defaultValueForPropertyCell:(id)arg1;
- (void)propertyCellDidChangeLayout:(id)arg1;
- (void)propertyCell:(id)arg1 performActionForItem:(id)arg2 withTransportType:(long long)arg3;
- (void)propertyCell:(id)arg1 didUpdateItem:(id)arg2 withNewValue:(id)arg3;
- (void)propertyCell:(id)arg1 didUpdateItem:(id)arg2 withNewLabel:(id)arg3;
@property(readonly) _Bool isPresentingModalViewController;
- (void)sender:(id)arg1 dismissViewController:(id)arg2;
- (void)sender:(id)arg1 presentViewController:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)registerContactCellClass:(Class)arg1;
- (void)_startEditingFirstCell;
- (void)done:(id)arg1;
- (void)cancel:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)_rebuildPropertyGroupItems:(_Bool)arg1;
- (void)dealloc;
- (double)tableViewSpacingForExtraSeparators:(id)arg1;
- (id)initWithContact:(id)arg1 property:(int)arg2 editNames:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPrivacyAdditions : NSObject
{
}

+ (void)updateAccessDeniedView:(id)arg1 forAuthorizationStatus:(long long)arg2;

@end

@interface ABPropertyAction : ABContactAction
{
    NSArray *_propertyItems;
}

+ (void)performDefaultActionForItem:(id)arg1 sender:(id)arg2;
@property(copy, nonatomic) NSArray *propertyItems; // @synthesize propertyItems=_propertyItems;
- (void)performActionWithSender:(id)arg1;
- (void)performActionForItem:(id)arg1 sender:(id)arg2;
@property(readonly, nonatomic) _Bool canPerformAction;
- (void)dealloc;
- (id)initWithContact:(id)arg1 propertyItem:(id)arg2;
- (id)initWithContact:(id)arg1 propertyItems:(id)arg2;

// Remaining properties
@property(nonatomic) id <ABPropertyActionDelegate> delegate;

@end

@interface ABPropertyAlertCell : ABPropertySimpleCell <ABPickerControllerDelegate>
{
}

+ (_Bool)wantsChevron;
- (void)pickerDidCancel:(id)arg1;
- (void)picker:(id)arg1 didPickItem:(id)arg2;
- (void)performDefaultAction;
- (_Bool)shouldPerformDefaultAction;
@property(readonly, nonatomic) ABPropertyGroupAlertItem *alertItem;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyAlertEditingCell : ABPropertyAlertCell
{
}

+ (_Bool)wantsHorizontalLayout;
- (id)constantConstraints;
- (double)minCellHeight;

@end

@interface ABPropertyCell : ABLabeledCell
{
    _Bool _allowsEditing;
    UIResponder *_firstResponderItem;
    double _labelWidth;
    id <ABPropertyCellDelegate> _delegate;
    id <ABPresenterDelegate> _presentingDelegate;
}

@property(nonatomic) id <ABPresenterDelegate> presentingDelegate; // @synthesize presentingDelegate=_presentingDelegate;
@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double labelWidth; // @synthesize labelWidth=_labelWidth;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(readonly, nonatomic) UIResponder *firstResponderItem; // @synthesize firstResponderItem=_firstResponderItem;
- (void)updateValueWithPropertyItem:(id)arg1;
- (void)updateWithPropertyItem:(id)arg1;
- (void)copy:(id)arg1;
- (id)valueString;
- (id)labelString;
- (void)setPropertyItem:(id)arg1;
@property(readonly, nonatomic) ABPropertyGroupItem *propertyItem;
- (void)setCardGroupItem:(id)arg1;
- (void)performAccessoryAction;
- (void)performDefaultAction;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyEditingCell : ABPropertyCell <ABPickerControllerDelegate>
{
    double _labelWidth;
    UIButton *_labelButton;
    ABRepeatingGradientSeparatorView *_vseparator;
}

+ (id)keyPathsForValuesAffectingEffectiveLabelWidth;
+ (_Bool)wantsStandardConstraints;
+ (_Bool)wantsChevron;
@property(retain, nonatomic) ABRepeatingGradientSeparatorView *vseparator; // @synthesize vseparator=_vseparator;
@property(readonly, nonatomic) UIButton *labelButton; // @synthesize labelButton=_labelButton;
- (void)picker:(id)arg1 didPickItem:(id)arg2;
- (void)pickerDidCancel:(id)arg1;
- (id)constantConstraints;
- (double)effectiveLabelWidth;
- (double)minCellHeight;
@property(readonly, nonatomic) double leftValueMargin;
- (id)valueString;
- (void)setValueTextAttributes:(id)arg1;
- (void)updateWithPropertyItem:(id)arg1;
- (void)labelButtonClicked:(id)arg1;
- (id)labelView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyDateEditingCell : ABPropertySimpleEditingCell <UITextFieldDelegate, ABPickerControllerDelegate>
{
    UIDatePicker *_datePicker;
    UIViewController *_contentViewController;
}

@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(retain, nonatomic) UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (void)picker:(id)arg1 didPickItem:(id)arg2;
- (void)pickerDidCancel:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (_Bool)_shouldUseYearlessPickerForDateComponents:(id)arg1;
- (void)dateChanged:(id)arg1;
- (void)labelButtonClicked:(id)arg1;
- (void)localeUpdated:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyEditingTableViewCell : UITableViewCell <ABStyleProviding>
{
    int _property;
    UITextField *_textField;
    NSString *_placeholder;
    id <ABPropertyEditingTableViewCellDelegate> _delegate;
}

@property(nonatomic) id <ABPropertyEditingTableViewCellDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)isFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (id)styleProvider;
- (void)layoutSubviews;
- (void)_resizeAndCenterTextField;
@property(copy, nonatomic) NSString *value; // @dynamic value;
- (void)textFieldValueDidChange:(id)arg1;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(nonatomic) _Bool usesLargeFont; // @dynamic usesLargeFont;
@property(nonatomic) int property; // @dynamic property;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;
- (id)initWithReuseIdentifier:(id)arg1 property:(int)arg2 delegate:(id)arg3;

@end

@interface ABPropertyEmailAddressCell : ABPropertySimpleTransportCell
{
    _Bool _VIP;
}

@property(nonatomic, getter=isVIP) _Bool VIP; // @synthesize VIP=_VIP;
- (void)updateTransportButtons;
- (_Bool)shouldPerformDefaultAction;
- (_Bool)shouldShowStar;

@end

@interface ABPropertyFaceTimeAction : ABPropertyAction
{
    long long _type;
    ABPropertyBestFaceTimeQuery *_bestFaceTimeQuery;
}

@property(retain, nonatomic) ABPropertyBestFaceTimeQuery *bestFaceTimeQuery; // @synthesize bestFaceTimeQuery=_bestFaceTimeQuery;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void)_queryFaceTimeStatus;
- (void)performActionForItem:(id)arg1 sender:(id)arg2;
- (void)dealloc;
- (id)initWithContact:(id)arg1 propertyItems:(id)arg2;

@end

@interface ABPropertyGroup : ABAbstractPropertyGroup
{
    int _property;
    void *_context;
    NSMutableDictionary *_valuesByPerson;
    NSMutableArray *_recordInfoDictionaries;
    NSMutableArray *_propertyLabels;
    NSMutableDictionary *_lineInfosByIndex;
    ABActionsController *_actionsController;
    void *_defaultPolicy;
    NSMutableDictionary *_preinsertedRecordInfoDictionary;
    id _preinsertedValue;
    NSString *_preinsertedLabel;
    NSMutableDictionary *_insertionRecordInfoDictionary;
    id _insertionValue;
    NSString *_insertionLabel;
    NSMutableDictionary *_recordInfoDictionaryForItemBeingDeleted;
    NSMutableDictionary *_valueForItemBeingDeleted;
    NSString *_labelForItemBeingDeleted;
    long long _lastIndexWithAddedItem;
    ABCapabilitiesManager *_capabilitiesManager;
    _Bool _allowsVibrations;
    id _vibrationManager;
}

- (_Bool)multiCellContentView:(id)arg1 alwaysShowsClearButtonAtIndexPath:(id)arg2;
- (id)keyboardSettingsForKey:(id)arg1 info:(id)arg2;
- (id)placeholderTextForKey:(id)arg1 info:(id)arg2;
- (id)valueForKey:(id)arg1 info:(id)arg2;
- (id)displayTextForInfo:(id)arg1;
- (id)labelTextForInfo:(id)arg1;
- (id)lineInfosForInfo:(id)arg1;
- (id)propertyValueForInfo:(id)arg1;
- (id)peopleFromInfo:(id)arg1 whenEditing:(_Bool)arg2;
- (id)accountBadgeFromInfo:(id)arg1 whenEditing:(_Bool)arg2;
- (_Bool)editableFlagFromInfo:(id)arg1;
- (long long)_indexFromInfo:(id)arg1;
- (void)_getIndex:(long long *)arg1 andEditableFlag:(_Bool *)arg2 fromInfo:(id)arg3;
- (id)_getFromLineInfos:(id)arg1 key:(id)arg2 valueForKey:(id)arg3;
- (long long)indexOfIdentifier:(int)arg1 person:(id)arg2;
- (void)prepareActionsController:(id)arg1 withValueAtIndex:(long long)arg2;
- (id)actionsControllerPreparedWithValueAtIndex:(long long)arg1;
- (_Bool)shouldDisambiguateNotes;
- (void)setCapabilitiesManager:(id)arg1;
- (void)refreshVibrations;
- (id)_vibrationManager;
- (id)_toneManager;
- (void)setAllowsVibrations:(_Bool)arg1;
- (_Bool)allowsVibrations;
- (_Bool)shouldShowAlertsWhenEditing:(_Bool)arg1;
- (_Bool)shouldShowTextVibrationWhenEditing:(_Bool)arg1;
- (_Bool)shouldShowCallVibrationWhenEditing:(_Bool)arg1;
- (_Bool)shouldShowTextToneWhenEditing:(_Bool)arg1;
- (_Bool)shouldShowRingtoneWhenEditing:(_Bool)arg1;
- (_Bool)hasTextVibration;
- (_Bool)hasCallVibration;
- (_Bool)hasTextTone;
- (_Bool)hasRingtone;
- (_Bool)hasMultipleAlertsAtIndex:(long long)arg1;
- (int)alertIdentifierAtIndex:(long long)arg1;
- (long long)indexOfTextVibrationInAlertEquivalentMultiValue;
- (long long)indexOfCallVibrationInAlertEquivalentMultiValue;
- (long long)indexOfTextToneInAlertEquivalentMultiValue;
- (long long)indexOfRingtoneInAlertEquivalentMultiValue;
- (void)setService:(id)arg1 atIndex:(long long)arg2;
- (id)serviceAtIndex:(long long)arg1;
- (id)shortServiceForService:(id)arg1;
- (void)trimValueForCountryCodeAtIndex:(long long)arg1;
- (void)setCountryCode:(id)arg1 atIndex:(long long)arg2;
- (void)_setCountryCode:(id)arg1 atIndex:(long long)arg2 withCountryName:(_Bool)arg3;
- (id)countryCodeAtIndex:(long long)arg1;
- (_Bool)removeItemAtRow:(long long)arg1 whenEditing:(_Bool)arg2;
- (_Bool)removeItemAtRow:(long long)arg1;
- (void)addPreinsertedItem;
- (void)setPropertyValue:(id)arg1 atIndex:(long long)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2 forIndex:(long long)arg3;
- (_Bool)setEmptyValueAtRow:(long long)arg1 whenEditing:(_Bool)arg2;
- (_Bool)setEmptyValueAtIndex:(long long)arg1 editableFlag:(_Bool)arg2 whenEditing:(_Bool)arg3;
- (id)lineInfosAtIndex:(long long)arg1;
- (id)localizedPropertyLabelAtIndex:(long long)arg1;
- (id)actualPropertyLabelAtIndex:(long long)arg1 forPerson:(id)arg2;
- (id)propertyLabelAtIndex:(long long)arg1;
- (id)propertyLabelAtIndex:(long long)arg1 forceUseReadonly:(_Bool)arg2;
- (void)setPropertyLabel:(id)arg1 atIndex:(long long)arg2;
- (void)_setPropertyLabel:(id)arg1 atIndex:(long long)arg2 markChanged:(_Bool)arg3;
- (_Bool)areLabelsEditable;
- (_Bool)canSave;
- (_Bool)_canSaveAtIndex:(long long)arg1;
- (_Bool)canSaveAtIndex:(long long)arg1 editableFlag:(_Bool)arg2;
- (_Bool)canDeleteAtIndex:(long long)arg1 editableFlag:(_Bool)arg2;
- (void)getAnyIdentifier:(int *)arg1 andPerson:(id *)arg2 atIndex:(long long)arg3;
- (id)writablePeopleAtIndex:(long long)arg1;
- (id)propertyValueAtIndex:(long long)arg1 forceUseReadonly:(_Bool)arg2;
- (id)propertyValueAtIndex:(long long)arg1;
- (id)stringValueAtIndex:(long long)arg1;
- (id)rowsToInsertInTransition:(_Bool)arg1;
- (id)rowsToDeleteInTransition:(_Bool)arg1;
- (long long)rowCountWhenEditing:(_Bool)arg1;
- (void)getIndex:(long long *)arg1 andEditableFlag:(_Bool *)arg2 forRow:(long long)arg3 whenEditing:(_Bool)arg4;
- (long long)rowForIndex:(long long)arg1 editableFlag:(_Bool)arg2 whenEditing:(_Bool)arg3;
- (void)reloadFromModel;
- (void)updateRecord;
- (id)description;
- (id)allRecordInfosAtIndex:(long long)arg1;
- (long long)itemCount;
- (_Bool)allowsAdding;
- (_Bool)allowsAddingForPerson:(id)arg1;
- (_Bool)instantMessageServiceIsSupported;
- (_Bool)_instantMessageServiceIsSupportedForPerson:(id)arg1;
- (void *)defaultPolicy;
- (void)setDefaultPolicy:(void *)arg1;
- (void *)_policyForPerson:(id)arg1;
- (void *)context;
- (int)property;
- (void)dealloc;
- (id)initWithProperty:(int)arg1 context:(void *)arg2;
- (long long)insertionIndex;
- (void)_reloadPreinsertedStuff:(_Bool)arg1 insertionStuff:(_Bool)arg2;
- (id)_allRecordInfosInRecordInfoDictionary:(id)arg1;
- (id)_recordInfoDictionaryForPerson:(id)arg1;
- (id)_recordInfoDictionaryForPerson:(id)arg1 identifier:(int)arg2;
- (id)_recordInfoForPerson:(id)arg1;
- (id)_recordInfoForPerson:(id)arg1 identifier:(int)arg2;
- (id)_recordInfoDictionaryWithAllPeople;
- (void)_setRecordInfoDictionary:(id)arg1 atIndex:(long long)arg2;
- (id)_recordInfoDictionaryAtIndex:(long long)arg1;
- (_Bool)_recordInfoDictionary:(id)arg1 containsPerson:(id)arg2;
- (void)_insertSingleValue:(id)arg1 label:(id)arg2 identifier:(int)arg3 forPerson:(id)arg4 indicesAndLabelsForValuesSeenAlready:(id)arg5;
- (id)_findFuzzyMatchingValue:(id)arg1 inDictionary:(id)arg2;
- (_Bool)_isPropertyValue:(id)arg1 equivalentTo:(id)arg2;
- (_Bool)_isBirthdayDate:(id)arg1 equivalentTo:(id)arg2;
- (_Bool)_isSocialProfile:(id)arg1 equivalentTo:(id)arg2;
- (_Bool)_updateCacheWithPropertyValue:(id)arg1 atIndex:(long long)arg2;
- (_Bool)_updateCacheWithPropertyLabel:(id)arg1 atIndex:(long long)arg2;
- (_Bool)_updateCacheWithPropertyValue:(id)arg1 propertyLabel:(id)arg2 recordInfoDictionaryAtIndex:(unsigned long long)arg3 shouldSetValue:(_Bool)arg4 shouldSetLabel:(_Bool)arg5;
- (_Bool)_updateCacheForPerson:(id)arg1 identifier:(int *)arg2 value:(id)arg3 label:(struct __CFString *)arg4 shouldSetValue:(_Bool)arg5 shouldSetLabel:(_Bool)arg6;
- (id)_valueForCheckingExistenceOfPropertyValue:(id)arg1;
- (id)_sortedPeople:(id)arg1;
- (id)_peopleInCache;
- (id)_newLocalizedCountryNameForCountryCode:(id)arg1;
- (id)_stringRepresentationOfPropertyValue:(id)arg1;
- (_Bool)_isEmptyValue:(id)arg1 isPreinserted:(_Bool)arg2;
- (id)_newLocalizedPlaceholderForKey:(id)arg1;
- (_Bool)_propertyIsDate;
- (void)_clearAllCachedInfo;
- (void)_getFromCacheAnyPropertyValue:(id *)arg1 andLabel:(id *)arg2 forRecordInfoDictionary:(id)arg3;
- (void)_getAnyIdentifier:(int *)arg1 person:(id *)arg2 propertyValue:(id *)arg3 propertyLabel:(id *)arg4 fromRecordInfoDictionary:(id)arg5;
- (id)_bestValueBetween:(id)arg1 and:(id)arg2;
- (void)_getFromCachePropertyValue:(id *)arg1 andLabel:(id *)arg2 forPerson:(id)arg3 identifier:(int)arg4;
- (void)_addValuesToCache;
- (_Bool)_hasNonNullSoundForIdentifier:(int)arg1;
- (_Bool)_removeValueInCacheForPerson:(id)arg1;
- (_Bool)_setValueInCache:(void *)arg1 forPerson:(id)arg2 preventLabelChange:(_Bool)arg3;
- (_Bool)_setValueInCache:(void *)arg1 forPerson:(id)arg2;
- (id)_valueFromCacheForPerson:(id)arg1;
- (void *)_copyCachedValueForPerson:(id)arg1;

@end

@interface ABPropertyGroupAlertItem : ABPropertyGroupItem
{
}

- (id)_vibrationManager;
- (id)_toneManager;
- (id)description;
- (_Bool)isEquivalentToItem:(id)arg1 whenEditing:(_Bool)arg2;
@property(readonly, nonatomic, getter=isVibration) _Bool vibration;
@property(readonly, nonatomic, getter=isTone) _Bool tone;
- (_Bool)canRemove;
- (_Bool)isValidValue:(id)arg1;
- (id)displayStringForValue:(id)arg1;
- (id)displayLabel;

@end

@interface ABPropertyGroupDateItem : ABPropertyGroupItem
{
}

+ (void)initialize;
- (id)displayStringForValue:(id)arg1;
- (id)bestValue:(id)arg1;
- (_Bool)isEquivalentToItem:(id)arg1;
- (id)defaultActionURL;
- (id)normalizedValue;

@end

@interface ABPropertyGroupEmailAddressItem : ABPropertyGroupItem
{
}

- (id)defaultActionURL;

@end

@interface ABPropertyGroupIdentifier : NSObject <NSCopying>
{
    int _property;
    void *_context;
}

+ (id)propertyGroupIdentifierWithProperty:(int)arg1 context:(void *)arg2;
@property(readonly, nonatomic) void *context; // @synthesize context=_context;
@property(readonly, nonatomic) int property; // @synthesize property=_property;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithProperty:(int)arg1 context:(void *)arg2;

@end

@interface ABPropertyGroupInstantMessageItem : ABPropertyGroupItem
{
}

- (_Bool)isEquivalentToItem:(id)arg1;
- (id)editingStringValue;
- (id)valueForDisplayString:(id)arg1;
- (id)displayStringForValue:(id)arg1;
- (id)displayLabel;
- (id)defaultActionURL;
@property(readonly, nonatomic) CNInstantMessageAddress *profile;

@end

@interface ABPropertyGroupItem : ABCardGroupItem
{
    _Bool _allowsIMessage;
    _Bool _allowsPhone;
    _Bool _allowsEmail;
    NSArray *_labeledValues;
    CNLabeledValue *_labeledValue;
    ABCardPropertyGroup *_group;
    NSArray *_contacts;
    CNContact *_contact;
    id <ABPropertyGroupItemDelegate> _delegate;
    CNLabeledValue *_originalLabeledValue;
}

+ (id)newPropertyGroupItemForProperty:(id)arg1;
+ (id)propertyGroupItemWithLabeledValue:(id)arg1 group:(id)arg2 contact:(id)arg3;
+ (id)propertyGroupItemWithLabeledValue:(id)arg1 group:(id)arg2 contacts:(id)arg3;
@property(retain, nonatomic) CNLabeledValue *originalLabeledValue; // @synthesize originalLabeledValue=_originalLabeledValue;
@property(nonatomic) _Bool allowsEmail; // @synthesize allowsEmail=_allowsEmail;
@property(nonatomic) _Bool allowsPhone; // @synthesize allowsPhone=_allowsPhone;
@property(nonatomic) _Bool allowsIMessage; // @synthesize allowsIMessage=_allowsIMessage;
@property(nonatomic) id <ABPropertyGroupItemDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
@property(copy, nonatomic) NSArray *contacts; // @synthesize contacts=_contacts;
@property(nonatomic) ABCardPropertyGroup *group; // @synthesize group=_group;
@property(retain, nonatomic) CNLabeledValue *labeledValue; // @synthesize labeledValue=_labeledValue;
@property(retain, nonatomic) NSArray *labeledValues; // @synthesize labeledValues=_labeledValues;
- (void)_enumerateContactsAndValuesWithBlock:(CDUnknownBlockType)arg1;
- (void)saveChangesImmediately:(_Bool)arg1;
@property(readonly, nonatomic) _Bool modified;
- (_Bool)isValidIdentifier:(int)arg1;
- (void)updateLabeledValueWithLabel:(id)arg1;
- (void)updateLabeledValueWithValue:(id)arg1;
- (id)updateWithLabel:(id)arg1 value:(id)arg2;
- (void)mergeItem:(id)arg1;
- (id)bestLabel:(id)arg1;
- (id)bestValue:(id)arg1;
- (_Bool)isEquivalentToItem:(id)arg1 whenEditing:(_Bool)arg2;
- (_Bool)isEquivalentToItem:(id)arg1;
@property(readonly, nonatomic) NSURL *defaultActionURL;
- (_Bool)isFavoriteOfType:(int)arg1;
@property(readonly, nonatomic, getter=isFavorite) _Bool favorite;
@property(readonly, nonatomic) _Bool canRemove;
@property(readonly, nonatomic, getter=isReadonly) _Bool readonly;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (_Bool)isValidValue:(id)arg1;
- (id)valueForDisplayString:(id)arg1;
- (id)displayStringForValue:(id)arg1;
@property(readonly, nonatomic) NSArray *supportedLabels;
@property(readonly, nonatomic) NSString *placeholderString;
@property(readonly, nonatomic) NSString *editingStringValue;
@property(readonly, nonatomic) NSString *displayLabel;
@property(readonly, nonatomic) NSString *displayValue;
@property(readonly, nonatomic) id normalizedValue;
- (id)emptyLabeledValue;
@property(readonly, nonatomic) NSString *property;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithLabeledValue:(id)arg1 group:(id)arg2 contacts:(id)arg3;
- (id)initWithGroup:(id)arg1;
- (id)init;

@end

@interface ABPropertyGroupNoteItem : ABPropertyGroupItem
{
}

- (_Bool)canRemove;
- (id)displayLabel;
- (_Bool)isEquivalentToItem:(id)arg1 whenEditing:(_Bool)arg2;

@end

@interface ABPropertyGroupPhoneItem : ABPropertyGroupItem
{
}

- (id)valueForDisplayString:(id)arg1;
- (id)displayStringForValue:(id)arg1;
- (id)bestLabel:(id)arg1;
- (id)defaultActionURL;
- (id)normalizedValue;
@property(readonly, nonatomic) CNPhoneNumber *phoneNumber;

@end

@interface ABLabeledCell : ABContactCell
{
    NSDictionary *_labelTextAttributes;
    NSDictionary *_valueTextAttributes;
    UIImageView *_chevron;
}

+ (_Bool)wantsHorizontalLayout;
+ (_Bool)wantsStandardConstraints;
+ (_Bool)wantsChevron;
@property(readonly, nonatomic) UIImageView *chevron; // @synthesize chevron=_chevron;
- (void)setBackgroundColor:(id)arg1;
- (void)tintColorDidChange;
@property(copy, nonatomic) NSDictionary *valueTextAttributes;
@property(copy, nonatomic) NSDictionary *labelTextAttributes;
@property(readonly, nonatomic) NSString *valueString;
@property(readonly, nonatomic) NSString *labelString;
@property(readonly, nonatomic) UILabel *standardValueView;
@property(readonly, nonatomic) UILabel *standardLabelView;
@property(readonly, nonatomic) UIView *rightMostView;
@property(readonly, nonatomic) UIView<ABText> *valueView;
@property(readonly, nonatomic) UIView<ABText> *labelView;
- (id)variableConstraintsForHorizontalLayout;
- (id)constantConstraintsForHorizontalLayout;
- (id)variableConstraintsForVerticalLayout;
- (id)constantConstraintsForVerticalLayout;
- (id)variableConstraintsForStandardLayout;
- (id)constantConstraintsForStandardLayout;
- (id)variableConstraints;
- (id)constantConstraints;
@property(readonly, nonatomic) double bottomBaselineConstant;
@property(readonly, nonatomic) double topBaselineConstant;
@property(readonly, nonatomic) double chevronWidth;
- (double)minCellHeight;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyGroupPostalAddressItem : ABPropertyGroupItem
{
}

- (id)bestValue:(id)arg1;
- (_Bool)_isMinimalAddress:(id)arg1;
- (_Bool)isEquivalentToItem:(id)arg1 whenEditing:(_Bool)arg2;
- (id)defaultActionURL;
- (id)displayStringForValue:(id)arg1;
- (id)normalizedValue;
@property(readonly, nonatomic) CNPostalAddress *address;

@end

@interface ABPropertyGroupSocialProfileItem : ABPropertyGroupItem
{
}

- (_Bool)isEquivalentToItem:(id)arg1;
- (id)editingStringValue;
- (id)valueForDisplayString:(id)arg1;
- (id)displayStringForValue:(id)arg1;
- (id)displayLabel;
- (id)defaultActionURL;
@property(readonly, nonatomic) CNSocialProfile *profile;

@end

@interface ABPropertyGroupURLAddressItem : ABPropertyGroupItem
{
}

- (id)_urlWithUserString:(id)arg1;
- (id)defaultActionURL;
- (id)displayStringForValue:(id)arg1;

@end

@interface ABPropertyInstantMessageEditingCell : ABPropertySimpleEditingCell <ABPickerControllerDelegate>
{
}

- (void)pickerDidCancel:(id)arg1;
- (void)picker:(id)arg1 didPickItem:(id)arg2;
- (void)labelButtonClicked:(id)arg1;
@property(readonly, nonatomic) CNInstantMessageAddress *profile;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyLabelButton : UIButton
{
}

+ (id)propertyLabelButton;

@end

@interface ABPropertyLinkedCardsAction : ABPropertyAction
{
    id <ABContactViewControllerDelegate> _contactDelegate;
    ABContactViewController *_contactController;
    CNMutableContact *_linkedContact;
}

@property(retain) CNMutableContact *linkedContact; // @synthesize linkedContact=_linkedContact;
@property(retain) ABContactViewController *contactController; // @synthesize contactController=_contactController;
@property id <ABContactViewControllerDelegate> contactDelegate; // @synthesize contactDelegate=_contactDelegate;
- (void)setPreferredName;
- (void)setPreferredPhoto;
- (void)performActionForItem:(id)arg1 sender:(id)arg2;
- (void)dealloc;

@end

@interface ABPropertyNameCell : ABContactCell
{
    UITextField *_textField;
    UIResponder *_firstResponderItem;
    id <ABPropertyCellDelegate> _delegate;
}

@property(nonatomic) id <ABPropertyCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIResponder *firstResponderItem; // @synthesize firstResponderItem=_firstResponderItem;
@property(readonly, nonatomic) UITextField *textField; // @synthesize textField=_textField;
- (void)setContactStyle:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
@property(retain, nonatomic) ABPropertyGroupItem *propertyItem;
- (void)setCardGroupItem:(id)arg1;
- (id)constantConstraints;
- (void)textFieldChanged:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyNoteCell : ABPropertyCell
{
    UITextView *_textView;
    UILabel *_labelLabel;
}

@property(readonly, nonatomic) UILabel *labelLabel; // @synthesize labelLabel=_labelLabel;
@property(retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
- (void)setContactStyle:(id)arg1;
- (void)setAllowsEditing:(_Bool)arg1;
- (void)textViewEditingDidEnd:(id)arg1;
- (void)textViewChanged:(id)arg1;
- (void)setValueTextAttributes:(id)arg1;
- (double)bottomBaselineConstant;
- (void)performDefaultAction;
- (_Bool)shouldPerformDefaultAction;
- (void)setLabelTextAttributes:(id)arg1;
- (id)valueView;
- (id)labelView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyPhoneNumberCell : ABPropertySimpleTransportCell
{
}

- (void)updateTransportButtons;
- (_Bool)shouldPerformDefaultAction;

@end

@interface ABPropertyPhoneNumberEditingCell : ABPropertySimpleEditingCell
{
    NSString *_previousValue;
}

- (CDStruct_856ef1b3)suggestionsForString:(id)arg1 inputIndex:(unsigned int)arg2;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyPickerViewController : ABPickerViewController <ABCardPropertyPickerDelegate>
{
    void *_addressBook;
    ABUIPerson *_person;
    struct __CFArray *_properties;
    NSArray *_policies;
}

@property(retain, nonatomic) ABUIPerson *person; // @synthesize person=_person;
@property(retain, nonatomic) NSArray *policies; // @synthesize policies=_policies;
- (void)propertyPicker:(id)arg1 selectedProperty:(int)arg2 withDefaultValue:(id)arg3;
- (void)propertyPicker:(id)arg1 selectedProperty:(int)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
@property(nonatomic) void *addressBook;
@property(nonatomic) struct __CFArray *properties;
- (double)ab_heightToFitForViewInPopoverView;
- (id)propertyPicker;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ABPropertyPlaceholderCell : ABLabeledCell
{
    UILabel *_label;
}

@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (double)minCellHeight;
- (void)setCardGroupItem:(id)arg1;
- (_Bool)shouldPerformDefaultAction;
- (id)labelView;
- (void)dealloc;

@end

@interface ABPropertyPlaceholderItem : ABCardGroupItem
{
    NSString *_property;
}

@property(retain, nonatomic) NSString *property; // @synthesize property=_property;
@property(readonly, nonatomic) NSString *title;
- (id)initWithProperty:(id)arg1;

@end

@interface ABPropertyPostalAddressCell : ABPropertySimpleTransportCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyPostalAddressEditingCell : ABPropertyEditingCell
{
    ABPostalAddressEditorView *_addressEditor;
}

@property(retain, nonatomic) ABPostalAddressEditorView *addressEditor; // @synthesize addressEditor=_addressEditor;
- (void)setBackgroundColor:(id)arg1;
@property(copy, nonatomic) UIColor *editorSeparatorColor;
- (void)layoutChanged:(id)arg1;
- (void)valueChanged:(id)arg1;
- (void)updateWithPropertyItem:(id)arg1;
- (void)setPresentingDelegate:(id)arg1;
- (void)setContactStyle:(id)arg1;
- (id)valueView;
- (id)firstResponderItem;
- (id)constantConstraints;
- (double)rightContentMargin;
- (double)leftValueMargin;
- (void)dealloc;

@end

@interface CNContactPickerHostViewController : _UIRemoteViewController <CNContactPickerContentViewController, CNContactPickerHostProtocol>
{
    void *_addressBook;
    id <CNContactPickerContentDelegate> _delegate;
    id <NSCopying> _currentRequestIdentifier;
    NSExtension *_extension;
}

+ (_Bool)getViewController:(CDUnknownBlockType)arg1;
+ (id)contextForIdentifier:(id)arg1;
+ (id)contactPickerExtension;
@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
@property(retain, nonatomic) id <NSCopying> currentRequestIdentifier; // @synthesize currentRequestIdentifier=_currentRequestIdentifier;
@property __weak id <CNContactPickerContentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)pickerDidCancel;
- (void)pickerDidSelectContactWithRecordID:(int)arg1 vCardData:(id)arg2 propertyKey:(id)arg3 propertyIdentifier:(int)arg4;
- (void)invalidate;
- (void)setupWithOptions:(id)arg1 readyBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
@property void *addressBook;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNContactPickerExtensionHostContext : NSExtensionContext <CNContactPickerServiceProtocol, CNContactPickerHostProtocol>
{
    CNContactPickerHostViewController *_viewController;
}

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;
@property(nonatomic) __weak CNContactPickerHostViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)pickerDidCancel;
- (void)pickerDidSelectContactWithRecordID:(int)arg1 vCardData:(id)arg2 propertyKey:(id)arg3 propertyIdentifier:(int)arg4;
- (void)setupWithOptions:(id)arg1 readyBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyRelatedNameEditingCell : ABPropertySimpleEditingCell <ABPeoplePickerNavigationControllerDelegate>
{
}

- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)performAccessoryAction;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertySendMessageAction : ABPropertyAction
{
}

- (void)performActionForItem:(id)arg1 sender:(id)arg2;

@end

@interface ABPropertySimpleCell : ABPropertyCell
{
    UILabel *_labelLabel;
    UILabel *_valueLabel;
}

@property(readonly, nonatomic) UILabel *valueLabel; // @synthesize valueLabel=_valueLabel;
@property(readonly, nonatomic) UILabel *labelLabel; // @synthesize labelLabel=_labelLabel;
- (id)valueView;
- (id)labelView;
- (void)dealloc;

@end

@interface ABPropertySimpleTransportCell : ABPropertySimpleCell
{
    ABTransportButton *_transportIcon1;
    ABTransportButton *_transportIcon2;
    UIImageView *_starView;
    _Bool _allowsActions;
    UIColor *_actionsColor;
}

@property(retain, nonatomic) UIColor *actionsColor; // @synthesize actionsColor=_actionsColor;
@property(nonatomic) _Bool allowsActions; // @synthesize allowsActions=_allowsActions;
- (void)transportButtonClicked:(id)arg1;
- (_Bool)shouldPerformDefaultAction;
- (id)variableConstraints;
- (id)rightMostView;
- (void)updateStarIcon;
- (void)updateTransportButtons;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updateWithPropertyItem:(id)arg1;
- (void)setCardGroupItem:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowStar;
@property(readonly, nonatomic) UIImageView *standardStarView;
- (void)_updateStarImageForView:(id)arg1;
@property(readonly, nonatomic) ABTransportButton *transportIcon2;
@property(readonly, nonatomic) ABTransportButton *transportIcon1;
@property(readonly, nonatomic) ABTransportButton *standardTransportIcon;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertySimpleEditingCell : ABPropertyEditingCell <UITextFieldDelegate>
{
    UITextField *_textField;
}

@property(readonly, nonatomic) UITextField *textField; // @synthesize textField=_textField;
- (void)setContactStyle:(id)arg1;
- (void)textFieldChanged:(id)arg1;
- (id)firstResponderItem;
- (void)prepareForReuse;
- (void)updateValueWithPropertyItem:(id)arg1;
- (id)variableConstraints;
- (id)constantConstraints;
- (id)valueView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertySocialProfileEditingCell : ABPropertySimpleEditingCell <ABPickerControllerDelegate>
{
    NSString *_previousValue;
}

- (void)pickerDidCancel:(id)arg1;
- (void)picker:(id)arg1 didPickItem:(id)arg2;
- (CDStruct_856ef1b3)suggestionsForString:(id)arg1 inputIndex:(unsigned int)arg2;
- (void)labelButtonClicked:(id)arg1;
@property(readonly, nonatomic) CNSocialProfile *profile;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABPropertyURLAddressEditingCell : ABPropertySimpleEditingCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABPropertyBestFaceTimeQuery : NSObject
{
    NSMutableArray *_faceTimeableItems;
    id <ABPropertyBestFaceTimeQueryDelegate> _delegate;
    NSArray *_propertyItems;
    ABPropertyIDSRequest *_faceTimeIDSRequest;
}

@property(retain, nonatomic) ABPropertyIDSRequest *faceTimeIDSRequest; // @synthesize faceTimeIDSRequest=_faceTimeIDSRequest;
@property(retain, nonatomic) NSArray *propertyItems; // @synthesize propertyItems=_propertyItems;
@property(nonatomic) id <ABPropertyBestFaceTimeQueryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSMutableArray *faceTimeableItems; // @synthesize faceTimeableItems=_faceTimeableItems;
@property(readonly) ABPropertyGroupItem *bestFaceTimeProperty;
- (void)dealloc;
- (id)initWithPropertyItems:(id)arg1;

@end

@interface ABRecordMerger : NSObject
{
}

+ (void)mergeVCardRecord:(void *)arg1 withProperties:(struct __CFArray *)arg2 intoRecord:(void *)arg3;
+ (_Bool)_propertiesArray:(id)arg1 containsProperty:(int)arg2;
+ (_Bool)mergeMultiValueProperty:(int)arg1 fromRecord:(void *)arg2 intoRecord:(void *)arg3;
+ (_Bool)_addMultiValueEntry:(void *)arg1 atIndex:(long long)arg2 toMultiValue:(void *)arg3 withProperty:(int)arg4 existingValues:(struct __CFSet *)arg5;
+ (void)_addValue:(void *)arg1 withProperty:(int)arg2 toExistingValues:(struct __CFSet *)arg3;
+ (_Bool)_mergeSingleValueProperty:(int)arg1 fromRecord:(void *)arg2 intoRecord:(void *)arg3;

@end

@interface ABRefreshController : NSObject
{
    ACAccountStore *_accountStore;
    double _refreshDelay;
    NSMutableDictionary *_accountGroupListsToRefreshByObserver;
    NSMutableDictionary *_contactsFiltersToRefreshByObserver;
    NSTimer *_refreshTimer;
}

+ (id)sharedInstance;
- (_Bool)canRefreshSources:(id)arg1;
- (void)refreshEverythingNow;
- (void)refreshAccountGroupList:(id)arg1;
- (void)refreshContactsFilter:(id)arg1;
- (_Bool)_acAccountExistsForIdentifier:(id)arg1;
- (id)refreshableAccountIdentifiersForContactsFilter:(id)arg1;
- (_Bool)canRefreshAccountIdentifier:(id)arg1;
- (void)_refreshGroupListForACAccountWithIdentifier:(id)arg1 isUserRequested:(_Bool)arg2;
- (void)_refreshACAccountWithIdentifier:(id)arg1 isUserRequested:(_Bool)arg2;
- (void)startRefreshingOrphanedAccountsWithAddressBook:(void *)arg1;
- (void)startRefreshingOrphanedAccountsWithAddressBook:(void *)arg1 afterDelay:(_Bool)arg2;
- (void)_actuallyRefreshOrphanedAccountsWithAddressBook:(void *)arg1;
- (void)_resumeAllRefreshes;
- (void)_postponeAllRefreshes;
- (void)cancelAllScheduledRefreshesWithObserver:(void *)arg1;
- (void)scheduleRefreshForAccountGroupList:(id)arg1 withObserver:(void *)arg2;
- (void)scheduleRefreshForContactsFilter:(id)arg1 withObserver:(void *)arg2;
- (_Bool)canRefreshContactsFilter:(id)arg1;
- (void)_addObjectToRefresh:(id)arg1 withObserver:(void *)arg2 toDictionary:(id *)arg3;
- (void)_setRefreshDelay:(double)arg1;
- (id)accountStore;
- (void)_proceedWithRefresh:(id)arg1;
- (void)_invalidateTimer;
- (void)_scheduleRefreshTimerIfNeeded;
- (void)dealloc;
- (id)init;

@end

@interface ABRepeatingGradientSeparatorView : UIView
{
    UIColor *_startColor;
    UIColor *_endColor;
    long long _lineCount;
}

@property(nonatomic) long long lineCount; // @synthesize lineCount=_lineCount;
@property(retain, nonatomic) UIColor *endColor; // @synthesize endColor=_endColor;
@property(retain, nonatomic) UIColor *startColor; // @synthesize startColor=_startColor;
@property(readonly, nonatomic) NSArray *gradientColors;
- (void)layoutSubviews;
- (void)_updateGradients;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABPostalAddressEditorNavigationController : UINavigationController
{
    id <ABPostalAddressEditorDelegate> _addressEditorDelegate;
}

@property(nonatomic) id <ABPostalAddressEditorDelegate> addressEditorDelegate; // @synthesize addressEditorDelegate=_addressEditorDelegate;
- (void)setTitle:(id)arg1;
- (id)initWithProperty:(int)arg1 label:(id)arg2;
- (id)initWithFirstName:(id)arg1 lastName:(id)arg2 addressDictionary:(id)arg3 label:(id)arg4;
- (id)initWithContact:(id)arg1 property:(int)arg2 editNames:(_Bool)arg3;

@end

@interface ABServicePickerViewController : ABPickerViewController <ABSimpleTextInputViewControllerDelegate>
{
    NSString *_selectedService;
    NSString *_customService;
    NSArray *_defaultServices;
    NSIndexPath *_selectedIndexPath;
}

+ (id)defaultService;
+ (id)defaultServices;
@property(copy, nonatomic) NSString *selectedService; // @synthesize selectedService=_selectedService;
- (void)simpleTextInputViewController:(id)arg1 didCompleteWithValue:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)addCustomServicePlaceholder;
- (id)addCustomServiceButtonLabel;
- (id)addCustomServiceTitle;
- (id)selectServiceTitle;
- (void)setStyleProvider:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABShareContactActivityItem : NSObject <UIActivityItemSource, UIActivityItemSourceAttachment>
{
    CNContact *_contact;
}

@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (id)activityViewController:(id)arg1 attachmentNameForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (void)dealloc;
- (id)initWithContact:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABSimpleTextInputViewController : UITableViewController <ABPropertyEditingTableViewCellDelegate>
{
    id <ABSimpleTextInputViewControllerDelegate> _delegate;
    id _value;
    NSString *_placeholder;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(copy, nonatomic) NSString *stringValue; // @synthesize stringValue=_value;
@property(nonatomic) id <ABSimpleTextInputViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)propertyEditingTableViewCell:(id)arg1 valueDidChange:(id)arg2;
- (void)save:(id)arg1;
- (void)cancel:(id)arg1;
- (void)updateSaveButton;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (double)ab_heightToFitForViewInPopoverView;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)setTitleLocalizationKey:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABSiriContactContextProvider : NSObject <AFContextProvider>
{
    CNContact *_contact;
}

- (void)_removeContextProviderOnMainThread;
- (id)contextManager;
- (void)setEnabled:(_Bool)arg1;
- (id)getCurrentContext;
- (_Bool)allowContextProvider:(id)arg1;
- (void)dealloc;
- (id)initWithContact:(id)arg1;

@end

@interface ABSocialProfileServicePickerController : ABPickerController
{
}

+ (id)defaultServices;
- (id)titleForAddCustomItem;
- (id)titleForPickerItem:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface ABSocialProfileServicePickerViewController : ABServicePickerViewController
{
}

+ (id)defaultServices;
- (id)init;

@end

@interface ABSplitTextFieldCell : UITableViewCell
{
    UITextField *_textFieldLeft;
    UITextField *_textFieldRight;
    ABRepeatingGradientSeparatorView *_separator;
}

+ (_Bool)requiresConstraintBasedLayout;
@property(retain, nonatomic) ABRepeatingGradientSeparatorView *separator; // @synthesize separator=_separator;
@property(retain, nonatomic) UITextField *textFieldRight; // @synthesize textFieldRight=_textFieldRight;
@property(retain, nonatomic) UITextField *textFieldLeft; // @synthesize textFieldLeft=_textFieldLeft;
- (void)setNeedsUpdateConstraints;
- (void)updateConstraints;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABStarkContactAddressPropertyCell : ABPropertyPostalAddressCell
{
}

- (id)variableConstraints;
- (double)bottomBaselineConstant;
- (double)topBaselineConstant;
- (void)updateTransportButtons;
- (void)transportButtonClicked:(id)arg1;
- (id)standardTransportIcon;

@end

@interface ABStarkContactNameView : UIView
{
    UILabel *_nameLabel;
    UIImageView *_photoImageView;
}

@property(retain, nonatomic) UIImageView *photoImageView; // @synthesize photoImageView=_photoImageView;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface ABStarkContactPropertyCell : ABPropertyPhoneNumberCell
{
    struct UIEdgeInsets _contentInsets;
}

+ (_Bool)wantsHorizontalLayout;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (id)variableConstraints;
- (id)constantConstraints;
- (double)bottomBaselineConstant;
- (double)topBaselineConstant;
- (void)transportButtonClicked:(id)arg1;
- (id)standardStarView;
- (id)standardTransportIcon;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface ABStarkContactsBrowserViewController : UINavigationController
{
}

- (id)init;

@end

@interface ABStarkContactsListViewController : UITableViewController <ABMembersDataSourceDelegate, ABContactViewControllerDelegate>
{
    ABMembersDataSource *_dataSource;
    ABModel *_model;
    _Bool _limitedUI;
    id <ABStarkContactsListViewControllerDelegate> _peoplePickerDelegate;
    ABStarkNoContentBannerView *_overlayView;
    AVExternalDevice *_externalDevice;
}

@property(nonatomic) _Bool limitedUI; // @synthesize limitedUI=_limitedUI;
@property(retain, nonatomic) AVExternalDevice *externalDevice; // @synthesize externalDevice=_externalDevice;
@property(retain, nonatomic) ABStarkNoContentBannerView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) id <ABStarkContactsListViewControllerDelegate> peoplePickerDelegate; // @synthesize peoplePickerDelegate=_peoplePickerDelegate;
- (_Bool)contactViewController:(id)arg1 shouldPerformDefaultActionForContact:(id)arg2 property:(id)arg3 labeledValue:(id)arg4;
- (_Bool)abDataSource:(id)arg1 shouldAllowSelectingPersonWithRecordID:(int)arg2;
- (_Bool)abDataSourceAllowsShowingPersonsCards:(id)arg1;
- (_Bool)abDataSource:(id)arg1 selectedPerson:(void *)arg2 atIndexPath:(id)arg3 withMemberCell:(id)arg4 animate:(_Bool)arg5;
- (void)postMessageOverlayIfNecessary;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)limitedUINotification:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABStarkContactViewController : ABContactViewController
{
}

- (id)viewForHeaderInTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)title;
- (id)initWithContact:(id)arg1;

@end

@interface ABStarkKnobTransportButton : ABTransportButton
{
}

+ (id)transportButton;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (struct UIEdgeInsets)alignmentRectInsets;
- (id)imageNameForType:(long long)arg1;
- (void)setTransportType:(long long)arg1;

@end

@interface ABStarkNoContentBannerView : UIView
{
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
}

@property(retain) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSString *subtitleString;
@property(retain, nonatomic) NSString *titleString;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABStarkStyleProvider : ABStyleProvider
{
}

+ (double)memberRowHeight;
- (id)personLabelHighlightedColor;
- (id)memberNameDisabledTextColor;
- (id)memberNameTextColor;
- (id)memberNamePlaceholderFont;
- (id)memberNameBoldFont;
- (id)memberNameRegularFont;
- (double)memberNameFontSize;
- (id)membersSearchCellBackgroundColor;
- (id)membersSearchBackgroundColor;
- (id)membersBackgroundColor;
- (unsigned long long)membersCountToShowIndex;

@end

@interface ABStarkUtilities : NSObject
{
}

+ (_Bool)activeInterfaceMechanismIsHardware;
+ (id)starkScreen;

@end

@interface ABTabletStyleProvider : ABStyleProvider
{
}

- (_Bool)membersSearchBarIsInTableHeader;
- (id)membersHeaderBackgroundColor;
- (struct UIEdgeInsets)cardActionButtonImageInsets;
- (struct UIEdgeInsets)cardActionButtonTitleSingleLineInsets;
- (_Bool)labelPickerShouldPushCustomLabelCreator;
- (id)editorViewColor;
- (id)editorViewSmallFont;
- (id)editorViewLargeFont;
- (double)personEditorFieldVerticalInset;
- (id)personActionColor;
- (id)personActionFont;
- (id)personValueImportantColor;
- (id)personValueEmphasizedColor;
- (id)personValueHighlightColor;
- (id)personValueColor;
- (double)personValueFontMinSize;
- (id)personLabelColor;
- (id)personLabelFont;
- (double)personLabelFontMinSize;
- (double)personViewHorizontalCellInset;
- (id)personHeaderShadowColor;
- (id)personHeaderPasteboardColor;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (long long)composeModalPresentationStyle;
- (id)cardTableCellBorderColor;
- (_Bool)searchControllerForceKeyboardDisplayEnabled;
- (_Bool)serverSearchNavigationBarHidingEnabled;
- (_Bool)searchIsAlwaysActive;
- (long long)separatorStyleForCellStyle:(int)arg1;
- (int)abCellStyleForMembersTable;
- (int)abCellStyleForGroupsTablePlain;

@end

@interface ABMapsTabletStyleProvider : ABTabletStyleProvider
{
}

- (id)cardActionConferenceIcon;
- (id)personActionColor;
- (id)cardLabelTextColor;

@end

@interface ABMapsStyleProvider : ABStyleProvider
{
}

- (id)cardActionConferenceIcon;
- (id)personActionColor;
- (id)cardLabelTextColor;

@end

@interface ABPhoneStyleProvider : ABStyleProvider
{
}

- (_Bool)cardActionsAllowFaceTimeFavorites;
- (_Bool)cardActionsAllowVoiceFavorites;

@end

@interface ABStyleProvider : NSObject <ABStyleProvider>
{
}

+ (_Bool)supportsSecureCoding;
+ (double)memberTextBaseline;
+ (double)memberRowHeight;
+ (double)memberHeaderTextBaseline;
+ (double)memberHeaderRowHeight;
+ (id)preferredContentSizeCategoryName;
+ (id)defaultStyleProviderForStyle:(int)arg1;
+ (id)defaultStyleProvider;
- (_Bool)reloadCallAction;
- (_Bool)refreshTinyActionCell;
- (void)customSetEmphasized:(_Bool)arg1 onCell:(id)arg2;
- (id)newCustomCardTableScrollingBackgroundView;
- (Class)customCardCellClass;
- (Class)customCardActionCellClass;
@property(readonly, nonatomic) long long groupCellSelectionStyle;
@property(readonly, nonatomic) struct CGSize groupCellShadowOffset;
@property(readonly, nonatomic) UIColor *groupCellShadowColor;
@property(readonly, nonatomic) UIColor *groupCellHighlightedTextColor;
@property(readonly, nonatomic) UIColor *groupCellTextColor;
@property(readonly, nonatomic) UIColor *groupHeaderBackgroudColor;
@property(readonly, nonatomic) UIColor *groupCellBackgroundColor;
@property(readonly, nonatomic) _Bool groupSectionDrawsDefaultTopShadow;
@property(readonly, nonatomic) double groupSectionHeaderHorizontalPadding;
@property(readonly, nonatomic) double groupSectionHeaderHeight;
@property(readonly, nonatomic) struct CGSize groupAccountNameShadowOffset;
@property(readonly, nonatomic) UIColor *groupAccountNameShadowColor;
@property(readonly, nonatomic) UIColor *groupAccountNameColor;
@property(readonly, nonatomic) UIFont *groupAccountNameFont;
@property(readonly, nonatomic) UIColor *groupsTableBackgroundColor;
@property(readonly, nonatomic) _Bool groupsTableShouldRemoveBackgroundView;
@property(readonly, nonatomic) _Bool peoplePickerBarStyleIsTranslucent;
@property(readonly, nonatomic) long long peoplePickerBarStyle;
@property(readonly, nonatomic) _Bool shouldUsePeoplePickerBarStyle;
- (int)dialogStyleForDeleteConfirmation;
@property(readonly, nonatomic) _Bool presentDatePickerInPopover;
@property(readonly, nonatomic) _Bool presentNewContactsControllersInPopover;
@property(readonly, nonatomic) _Bool presentModalViewInPopover;
@property(readonly, nonatomic) long long unknownModalPresentationStyle;
@property(readonly, nonatomic) long long composeModalPresentationStyle;
@property(readonly, nonatomic) _Bool shouldDefinePickerTransitionStyle;
@property(readonly, nonatomic) long long pickerTransitionStyle;
@property(readonly, nonatomic) _Bool shouldPropagateStylesToPickers;
@property(readonly, nonatomic) _Bool shouldPropagateStylesThroughUnknownPersonActions;
@property(readonly, nonatomic) _Bool linkedPhotoLabelStringsDescribeSourceOnly;
@property(readonly, nonatomic) _Bool linkedPhotoPickerIncludesCurrentPhoto;
@property(readonly, nonatomic) _Bool labelPickerUsesOpaqueBackground;
@property(readonly, nonatomic) _Bool labelPickerShouldPushCustomLabelCreator;
- (id)newCardDividerViewVertical:(_Bool)arg1;
- (void)unselectAllCellParts:(id)arg1;
- (void)selectCustomPartWithFrame:(struct CGRect)arg1 occupiedCorners:(unsigned long long)arg2 forCell:(id)arg3;
- (void)selectWholePartForCell:(id)arg1;
- (void)selectValuePartForCell:(id)arg1;
- (void)selectLabelPartForCell:(id)arg1;
- (id)cardTableView:(id)arg1 prepareCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)cardTableView:(id)arg1 wantsHeaderForProperty:(int)arg2 inSection:(long long)arg3 whenEditing:(_Bool)arg4;
- (_Bool)personTableHeaderViewScrollsWhenEditing:(_Bool)arg1;
- (double)cardHeaderSpacingFromCardBodyWhenEditing:(_Bool)arg1;
- (double)cardTableViewLinkingHeaderBottomPaddingWhenEditing:(_Bool)arg1;
- (double)cardTableViewLinkingHeaderTopPaddingWhenEditing:(_Bool)arg1;
@property(readonly, nonatomic) double cardSectionHeaderHeightForFollowingCardActions;
@property(readonly, nonatomic) double cardSectionHeaderHeightForFirstCardActions;
@property(readonly, nonatomic) _Bool cardShouldUseSeparateSectionsForUnknownCardActions;
@property(readonly, nonatomic) double cardSectionHeaderHeightForBottomActions;
- (double)cardTableViewSectionFooterHeightWhenEditing:(_Bool)arg1;
- (double)cardTableViewSectionHeaderHeightWhenEditing:(_Bool)arg1;
- (double)cardMaxHeightForSwellTextViewWhenEditing:(_Bool)arg1;
@property(readonly, nonatomic) _Bool datePickerHasNavigationTitle;
@property(readonly, nonatomic) _Bool linkedCardsShouldAllowDeletion;
@property(readonly, nonatomic) _Bool cardTableUsesRowFadeAnimation;
@property(readonly, nonatomic) double cardLinkingHeaderLabelHeight;
- (double)cardNotesMinimumHeightWhenEditing:(_Bool)arg1;
@property(readonly, nonatomic) UIView *cardNotesHeaderView;
@property(readonly, nonatomic) double cardNotesHeaderViewHeight;
@property(readonly, nonatomic) _Bool cardNotesLabelIncludesSource;
@property(readonly, nonatomic) _Bool cardAlwaysShowsNotes;
@property(readonly, nonatomic) long long cardCellSelectionStyle;
- (id)cardCellDividerShadowColorVertical:(_Bool)arg1;
- (id)cardCellDividerColorVertical:(_Bool)arg1;
@property(readonly, nonatomic) UIColor *cardCellDisabledBackgroundColor;
@property(readonly, nonatomic) UIColor *cardCellBackgroundColor;
- (id)cardDeleteButtonImagePressed;
- (id)cardDeleteButtonImage;
- (struct UIEdgeInsets)cardDeleteButtonInsets;
- (double)cardDeleteButtonHeight;
- (struct UIEdgeInsets)cardCellBackgroundInsetsWhenEditing:(_Bool)arg1;
@property(readonly, nonatomic) double cardContentOccluderDefaultBottomFadingHeight;
@property(readonly, nonatomic) double cardContentOccluderDefaultTopFadingHeight;
@property(readonly, nonatomic) UIColor *cardValueHighlightedTextColor;
- (void)setIndicatesFaceTimeHistory:(_Bool)arg1 onActionButton:(id)arg2;
@property(readonly, nonatomic) _Bool cardActionsAllowFaceTimeFavorites;
@property(readonly, nonatomic) _Bool cardActionsAllowVoiceFavorites;
@property(readonly, nonatomic) UIImage *cardActionConferenceIconPressed;
@property(readonly, nonatomic) UIImage *cardActionConferenceIcon;
- (id)newCardActionButton;
@property(readonly, nonatomic) double cardActionButtonHeight;
@property(readonly, nonatomic) double cardActionButtonSpacing;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonsInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonImageInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonTitleDoubleLineInsets;
@property(readonly, nonatomic) struct UIEdgeInsets cardActionButtonTitleSingleLineInsets;
@property(readonly, nonatomic) UIImage *cardActionButtonBackgroundHighlighted;
@property(readonly, nonatomic) UIImage *cardActionButtonBackgroundNormal;
@property(readonly, nonatomic) long long cardActionButtonType;
@property(readonly, nonatomic) double cardCellVerticalSpacingBetweenAlertsOfSimilarType;
@property(readonly, nonatomic) UIImage *cardCellFacebookBadge;
@property(readonly, nonatomic) double cardCellBadgePaddingLeft;
@property(readonly, nonatomic) long long cardCellAccessoryTypeEditRingtone;
@property(readonly, nonatomic) long long cardCellAccessoryTypeRingtone;
@property(readonly, nonatomic) long long cardCellAccessoryTypeEdit;
@property(readonly, nonatomic) long long cardCellAccessoryType;
@property(readonly, nonatomic) _Bool cardSectionDrawsDefaultTopShadow;
@property(readonly, nonatomic) struct CGSize cardSectionHeaderShadowOffset;
@property(readonly, nonatomic) UIColor *cardSectionHeaderShadowColor;
@property(readonly, nonatomic) UIColor *cardSectionHeaderTextColor;
@property(readonly, nonatomic) UIFont *cardSectionHeaderFont;
@property(readonly, nonatomic) double cardSectionHeaderHorizontalPadding;
@property(readonly, nonatomic) _Bool cardSectionAlwaysWantsHeader;
@property(readonly, nonatomic) UIImage *cardValueClearButtonImage;
@property(readonly, nonatomic) UIColor *cardValueTappableColor;
@property(readonly, nonatomic) UIColor *cardValueBackgroundColor;
@property(readonly, nonatomic) struct UIEdgeInsets cardValueEditingInsets;
- (struct UIEdgeInsets)cardValueInsetsWhenEditing:(_Bool)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets cardValueInsets;
@property(readonly, nonatomic) UIFont *cardValueTextFont;
@property(readonly, nonatomic) struct CGSize cardValueShadowOffset;
@property(readonly, nonatomic) UIColor *cardValueHighlightedShadowColor;
@property(readonly, nonatomic) UIColor *cardValueShadowColor;
@property(readonly, nonatomic) UIColor *cardValueDisabledTextColor;
@property(readonly, nonatomic) UIColor *cardValueTextColor;
@property(readonly, nonatomic) struct UIEdgeInsets cardLabelInsets;
@property(readonly, nonatomic) UIColor *cardLabelBackgroundColor;
@property(readonly, nonatomic) double cardLabelWidth;
@property(readonly, nonatomic) UIFont *cardLabelEditingTextFont;
@property(readonly, nonatomic) UIFont *cardLabelTextFont;
@property(readonly, nonatomic) _Bool cardValueHighlightsWhenTouched;
@property(readonly, nonatomic) struct CGSize cardLabelShadowOffset;
@property(readonly, nonatomic) UIColor *cardLabelHighlightedShadowColor;
@property(readonly, nonatomic) UIColor *cardLabelShadowColor;
@property(readonly, nonatomic) UIColor *cardLabelImportantHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelEmphasizedHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelHighlightedTextColor;
@property(readonly, nonatomic) UIColor *cardLabelEditingTextColor;
@property(readonly, nonatomic) UIColor *cardLabelDisabledTextColor;
@property(readonly, nonatomic) UIColor *cardLabelTextColor;
- (_Bool)shouldAdjustTableView:(id)arg1 forKeyboardOrdering:(_Bool)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
@property(readonly, nonatomic) _Bool shouldUseCardContentProviderWhenAvailable;
- (id)editorViewColor;
- (id)editorViewSmallFont;
- (id)editorViewLargeFont;
- (double)personEditorFieldVerticalInset;
- (struct CGSize)personActionShadowOffset;
- (id)personActionShadowColor;
- (id)personActionHighlightedColor;
- (id)personActionColor;
- (id)personActionFont;
- (struct CGSize)personNoValueLabelShadowOffset;
- (id)personNoValueLabelShadowColor;
- (id)personNoValueLabelTextColor;
- (id)personNoValueLabelFont;
- (id)personValueBackgroundColor;
- (id)personValueImportantHighlightColor;
- (id)personValueImportantColor;
- (id)personValueEmphasizedHighlightColor;
- (id)personValueEmphasizedColor;
- (id)personValueHighlightColor;
- (id)personValueColor;
- (id)personValueFont;
- (double)personValueFontMinSize;
- (id)copyLocalizedPropertyName:(int)arg1 lowercase:(_Bool)arg2;
- (id)copyLocalizedLabel:(id)arg1;
- (struct CGSize)personLabelShadowOffset;
- (id)personLabelShadowColor;
- (id)personLabelHighlightedColor;
- (id)personLabelColor;
- (id)personLabelFont;
- (double)personLabelFontMinSize;
- (double)personViewVerticalCellInset;
- (double)personViewHorizontalCellInset;
- (double)personViewDefaultRowHeight;
- (double)personViewRowHeightWhenEditing:(_Bool)arg1;
- (struct CGSize)personHeaderShadowOffset;
- (id)personHeaderShadowColor;
- (id)personHeaderPasteboardColor;
- (double)personViewHeaderNameViewTextVerticalInset;
- (double)personViewHeaderNameViewTextHorizontalInset;
- (double)personViewHeaderImageHeight;
- (double)personViewHeaderImageWidth;
@property(readonly, nonatomic) _Bool cardHeaderNameViewAlignOnBottom;
- (double)personViewVerticalSpacing;
- (double)personViewHeaderMinimumHeight;
- (double)personViewHeaderRightMargin;
- (id)personViewGetNameViewAccessoryImageSelected;
- (id)personViewGetNameViewAccessoryImage;
- (id)personViewGetFavoritesBadgeHighlighted;
- (id)personViewGetFavoritesBadge;
- (id)accessoryButtonForRelatedNames;
- (id)accessoryViewForVideoBadge;
- (id)accessoryViewForFavoritesBadge;
- (id)accessoryViewForMailVIPBadge;
- (_Bool)usesPhoneCardMetrics;
@property(readonly, nonatomic) UIColor *cardHeaderDefaultLabelTextColor;
@property(readonly, nonatomic) double cardHeaderEditingImageLeftMargin;
@property(readonly, nonatomic) double cardHeaderEditingImageTopMargin;
@property(readonly, nonatomic) double cardHeaderDisplayImageTopMargin;
@property(readonly, nonatomic) double cardHeaderDisplayImageLeftMargin;
@property(readonly, nonatomic) double cardHeaderViewLeftMargin;
@property(readonly, nonatomic) double cardHeaderViewTopMargin;
@property(readonly, nonatomic) UIColor *cardHeaderBackgroundColor;
@property(readonly, nonatomic) double cardHeaderImageNameEditorSpacing;
@property(readonly, nonatomic) double cardHeaderImageNameSpacing;
@property(readonly, nonatomic) UIColor *cardClippingImageLabelBevelColor;
@property(readonly, nonatomic) UIColor *cardClippingImageLabelColor;
@property(readonly, nonatomic) UIImage *cardPhotoFacebookAttributionImage;
@property(readonly, nonatomic) UIImage *cardPhotoPasteboardMaskImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditPlaceholderImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditMultiplePhotoBackdropImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditMultipleOverlayImage;
@property(readonly, nonatomic) UIImage *cardPhotoEditOverlayImage;
@property(readonly, nonatomic) struct CGSize cardPhotoShadowOffset;
@property(readonly, nonatomic) UIImage *cardPhotoShadowImage;
@property(readonly, nonatomic) UIImage *cardPhotoMaskMultipleImage;
@property(readonly, nonatomic) UIImage *cardPhotoMaskImage;
@property(readonly, nonatomic) struct CGSize cardPhotoOffset;
@property(readonly, nonatomic) double cardPhotoFrameBorderSize;
@property(readonly, nonatomic) _Bool shouldApplyMaskImage;
@property(readonly, nonatomic) _Bool cardPhotoShouldApplyOverlayImageWhenLabelPresent;
@property(readonly, nonatomic) _Bool cardPhotoShouldApplyOverlayImageWhenPersonImagePresent;
@property(readonly, nonatomic) UIImage *cardPhotoOverlayImage;
@property(readonly, nonatomic) UIImage *cardPhotoBackgroundImage;
@property(readonly, nonatomic) UIImage *cardPlaceholderCompanyImage;
@property(readonly, nonatomic) UIImage *cardPlaceholderPersonImage;
@property(readonly, nonatomic) _Bool cardPlaceholderImageShouldApplyMaskAndOverlay;
@property(readonly, nonatomic) _Bool shouldShowCardPhotoPlaceholder;
@property(readonly, nonatomic) unsigned long long cardTagNumberOfLines;
@property(readonly, nonatomic) unsigned long long cardNameNumberOfLines;
@property(readonly, nonatomic) UIFont *cardTaglineTextFont;
@property(readonly, nonatomic) UIColor *cardTaglineShadowColor;
@property(readonly, nonatomic) UIColor *cardTaglineTextColor;
@property(readonly, nonatomic) UIFont *cardHeadlineTextFont;
@property(readonly, nonatomic) UIColor *cardHeadlineShadowColor;
@property(readonly, nonatomic) UIColor *cardHeadlineTextColor;
- (id)cardNameDividerColor;
@property(readonly, nonatomic) UIColor *cardTableCellBorderColor;
@property(readonly, nonatomic) _UIGraphicsLetterpressStyle *letterpressStyle;
@property(readonly, nonatomic) _Bool cardTableShouldAdjustForKeyboard;
@property(readonly, nonatomic) UIColor *cardSectionBackgroundColor;
@property(readonly, nonatomic) UIColor *cardTableBackgroundColor;
@property(readonly, nonatomic) _Bool cardTableShouldRemoveBackgroundView;
@property(readonly, nonatomic) UIImage *memberSectionListHeaderImage;
@property(readonly, nonatomic) _Bool searchControllerForceKeyboardDisplayEnabled;
@property(readonly, nonatomic) _Bool serverSearchNavigationBarHidingEnabled;
@property(readonly, nonatomic) _Bool searchIsAlwaysActive;
@property(readonly, nonatomic) double memberScrollBarInset;
@property(readonly, nonatomic) UIColor *cardLabelSelectedBackgroundColor;
@property(readonly, nonatomic) UIColor *membersSearchCellBackgroundColor;
@property(readonly, nonatomic) UIColor *membersSearchBackgroundColor;
@property(readonly, nonatomic) UIColor *membersBackgroundColor;
@property(readonly, nonatomic) UIView *memberHeaderBackgroundView;
@property(readonly, nonatomic) UIColor *membersHeaderBackgroundColor;
@property(readonly, nonatomic) UIColor *membersHeaderContentViewBackgroundColor;
@property(readonly, nonatomic) UIColor *memberSelectedBackgroundColor;
@property(readonly, nonatomic) UIImage *memberPlaceholderCompanyImage;
@property(readonly, nonatomic) UIImage *memberPlaceholderPersonImage;
@property(readonly, nonatomic) UIImage *memberPhotoOverlayImage;
@property(readonly, nonatomic) UIImage *memberPhotoMaskImage;
@property(readonly, nonatomic) _Bool memberShowContactPhoto;
@property(readonly, nonatomic) struct CGSize memberNameShadowOffset;
@property(readonly, nonatomic) UIColor *memberSearchFieldBackgroundColor;
@property(readonly, nonatomic) UIColor *memberNameSelectedShadowColor;
@property(readonly, nonatomic) UIColor *memberNameShadowColor;
@property(readonly, nonatomic) UIImage *memberNameMeCardDisabledImage;
@property(readonly, nonatomic) UIImage *memberNameMeCardSelectedImage;
@property(readonly, nonatomic) UIImage *memberNameMeCardImage;
@property(readonly, nonatomic) UIColor *memberNameMeCardShadowColor;
@property(readonly, nonatomic) UIColor *memberNameMeCardTextColor;
@property(readonly, nonatomic) UIColor *memberNameSelectedColor;
@property(readonly, nonatomic) UIColor *memberNameDisabledTextColor;
@property(readonly, nonatomic) UIColor *memberNameTextColor;
@property(readonly, nonatomic) UIFont *memberNameBoldFontForSectionHeader;
@property(readonly, nonatomic) UIFont *memberNameRegularFontForSectionHeader;
@property(readonly, nonatomic) UIFont *memberNameBoldFont;
@property(readonly, nonatomic) UIFont *memberNamePlaceholderFont;
@property(readonly, nonatomic) UIFont *memberNameRegularFont;
- (double)memberNameFontSize;
- (id)_fontForTextStyle:(id)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets memberNameInsets;
@property(readonly, nonatomic) double memberNameInterComponentSpacing;
@property(readonly, nonatomic) _Bool membersSearchBarIsInTableHeader;
@property(readonly, nonatomic) UIColor *membersIndexTrackingBackgroundColor;
@property(readonly, nonatomic) UIColor *membersIndexTextColor;
@property(readonly, nonatomic) double membersIndexMaximumHeight;
@property(readonly, nonatomic) unsigned long long membersCountToShowIndex;
@property(readonly, nonatomic) unsigned long long membersCountToShowSections;
@property(readonly, nonatomic) long long membersSelectionStyle;
- (struct __CFDictionary *)newBackgroundViewsForChameleonCell;
- (id)newBackgroundViewForCellStyle:(int)arg1 selected:(_Bool)arg2;
- (id)newTableFooterViewForCellStyle:(int)arg1;
- (id)newAccessoryDisclosureIndicatorForCellStyle:(int)arg1;
- (id)separatorBottomShadowColorForCellStyle:(int)arg1;
- (id)separatorTopShadowColorForCellStyle:(int)arg1;
- (id)separatorColorForCellStyle:(int)arg1;
- (long long)separatorStyleForCellStyle:(int)arg1;
- (id)shadowColorForCellStyle:(int)arg1;
- (int)abCellStyleForCardTableLinkingUI;
- (int)abCellStyleForCardTableWhenEditing:(_Bool)arg1;
- (int)abCellStyleForMembersTable;
- (int)abCellStyleForGroupsTablePlain;
- (int)abCellStyleForGroupsTableGrouped;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABUITextView : UITextView
{
    double _lastContentHeight;
    _Bool _isHighlighted;
    UIColor *_savedTextColor;
    UIColor *_highlightedTextColor;
    UIColor *_shadowColor;
    struct CGSize _shadowOffset;
    _Bool _disallowsSetContentOffset;
    _Bool _informParentOfContentSizeChange;
    struct _NSRange _pinnedCursorPosition;
    ABSwellTextView *_parent;
}

@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(nonatomic) _Bool disallowsSetContentOffset; // @synthesize disallowsSetContentOffset=_disallowsSetContentOffset;
@property(retain, nonatomic) UIColor *highlightedTextColor; // @synthesize highlightedTextColor=_highlightedTextColor;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_isHighlighted;
@property(nonatomic) ABSwellTextView *parent; // @synthesize parent=_parent;
- (void)_updateStylesheet;
- (void)_endPinningInputViews;
- (void)_beginPinningInputViews;
- (_Bool)becomeFirstResponder;
- (void)setTextColor:(id)arg1;
- (void)setContentSize:(struct CGSize)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_secretSetFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABSwellTextView : UIView <UITextViewDelegate>
{
    UITextView *_textView;
    double _maxHeight;
    _Bool _allowsEditing;
    id <ABSwellTextViewDelegate> _delegate;
    struct {
        unsigned int delegateImplementsShouldBeginEditing:1;
        unsigned int delegateImplementsShouldEndEditing:1;
        unsigned int delegateImplementsDidBeginEditing:1;
        unsigned int delegateImplementsDidEndEditing:1;
        unsigned int delegateImplementsDidChange:1;
    } _flags;
}

+ (double)lineHeightWithFont:(id)arg1;
@property(nonatomic) id <ABSwellTextViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;
@property(nonatomic) struct CGSize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor;
- (void)abUITextView:(id)arg1 contentSizeChanged:(struct CGSize)arg2;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldEndEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)textViewTextDidChange:(id)arg1;
- (void)setKeyboardSettings:(id)arg1;
- (struct CGRect)rectForSelection;
@property(nonatomic) UIColor *textColor;
@property(nonatomic) UIFont *font;
@property(nonatomic) NSString *text;
@property(nonatomic) UIColor *highlightedTextColor;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
- (void)_clearBecomeFirstResponderWhenCapable;
- (void)_endPinningInputViews;
- (void)_beginPinningInputViews;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)isFirstResponder;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setBackgroundColor:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)abUITextView:(id)arg1 heightForContentSize:(struct CGSize)arg2;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABTableViewHelper : NSObject
{
}

+ (id)newOverlayLabel;
+ (void)syncTableView:(id)arg1 withIndexPath:(id)arg2 animated:(_Bool)arg3 styleProvider:(id)arg4;
+ (void)prepareCell:(id)arg1 asSelectedCell:(_Bool)arg2 styleProvider:(id)arg3;

@end

@interface ABTelephonyUtilities : NSObject
{
}

+ (_Bool)supportsFaceTimeAudioCalls;
+ (_Bool)supportsTelephonyCalls;

@end

@interface ABTonePickerController : UINavigationController
{
    CNContactStyle *_contactStyle;
    TKTonePickerViewController *_tonePicker;
}

@property(retain, nonatomic) TKTonePickerViewController *tonePicker; // @synthesize tonePicker=_tonePicker;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
- (void)cancelButton:(id)arg1;
- (void)doneButton:(id)arg1;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1 selectedToneIdentifier:(id)arg2 selectedVibrationIdentifier:(id)arg3;

// Remaining properties
@property(nonatomic) id <ABPickerControllerDelegate> delegate;

@end

@interface ABTonePickerViewController : ABPickerViewController
{
    TKTonePickerViewController *_tonePickerViewController;
}

- (void)cancelButtonClicked:(id)arg1;
- (void)ringtoneSaveButtonClicked:(id)arg1;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (double)ab_heightToFitForViewInPopoverView;
- (void)loadView;
@property(readonly, retain, nonatomic) TKTonePickerViewController *tonePickerViewController;
- (void)setStyleProvider:(id)arg1;
- (id)initWithAlertType:(int)arg1;
- (id)init;

@end

@interface ABTranslucentNavigationController : UINavigationController
{
    _Bool _overridesNavigationBarInset;
    id <ABStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) _Bool overridesNavigationBarInset; // @synthesize overridesNavigationBarInset=_overridesNavigationBarInset;
- (_Bool)_shouldNavigationBarInsetViewController:(id)arg1;

@end

@interface ABTransportButton : UIButton
{
    long long _transportType;
    UIColor *_glyphColor;
    UIImage *_image;
}

+ (id)transportButton;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) UIColor *glyphColor; // @synthesize glyphColor=_glyphColor;
@property(nonatomic) long long transportType; // @synthesize transportType=_transportType;
- (id)imageNameForType:(long long)arg1;
- (void)_updateImageWithType:(long long)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGRect)backgroundRectForBounds:(struct CGRect)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;

@end

@interface ABUIDataCollectorLogger : NSObject
{
}

- (void)setValue:(double)arg1 forDistributionKey:(id)arg2;
- (void)setValue:(long long)arg1 forScalarKey:(id)arg2;
- (void)addValue:(long long)arg1 forScalarKey:(id)arg2;

@end

@interface ABUIDataCollector : NSObject
{
    ABUIDataCollectorLogger *_logger;
    NSString *_appIdentifier;
}

+ (id)sharedCollector;
+ (_Bool)isEnabled;
@property(retain, nonatomic) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
@property(retain, nonatomic) ABUIDataCollectorLogger *logger; // @synthesize logger=_logger;
- (void)logAddProperty:(int)arg1 contact:(void *)arg2;
- (void)logGroupsShown:(long long)arg1 totalGroups:(long long)arg2;
- (void)logRefreshUsage;
- (void)logSearchUsage;
- (void)logIndexUsage;
- (void)_reallyLogIndexUsage;
- (void)logPresentation;
- (void)logContactActionType:(id)arg1 attributes:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface ABUILabelWithPlaceholder : UIView
{
    UILabel *_label;
    _Bool _isPlaceholderActive;
    NSString *_placeholder;
    NSString *_actualText;
    UIColor *_actualTextColor;
}

- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)_labelFrameForBounds:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)sizeToFit;
- (double)labelLeftEdgeInset;
- (id)label;
@property(copy, nonatomic) NSString *text;
@property(nonatomic) UIFont *font;
@property(nonatomic) struct CGSize shadowOffset;
@property(nonatomic) UIColor *shadowColor;
@property(nonatomic) UIColor *highlightedTextColor;
@property(retain, nonatomic) UIColor *textColor;
@property(copy, nonatomic) NSString *placeholder;
- (void)_setActualTextColor:(id)arg1;
- (void)_setActualText:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ABUIPerson : NSObject <NSCopying>
{
    void *_record;
    void *_addressBook;
    void *_source;
    NSArray *_linkedPeople;
}

+ (id)personInAddressBook:(void *)arg1;
+ (id)personInSource:(void *)arg1;
+ (id)person;
+ (id)personWithABRecordID:(int)arg1 fromAddressBook:(void *)arg2;
+ (id)personWithABPerson:(void *)arg1;
+ (void)setAccountStore:(id)arg1;
@property(readonly) void *addressBook; // @synthesize addressBook=_addressBook;
@property(readonly) void *source; // @synthesize source=_source;
@property(readonly) void *record; // @synthesize record=_record;
@property(readonly) _Bool isFromFacebook;
@property(readonly) NSString *secondarySourceName;
@property(readonly) NSString *primarySourceName;
@property(readonly) int kind;
- (void)removePropertyValue:(int)arg1;
- (void)setValue:(void *)arg1 forProperty:(int)arg2;
- (void *)copyPropertyValue:(int)arg1;
- (id)valueForProperty:(int)arg1;
@property(readonly) _Bool hasPreferredPhoto;
@property(readonly) _Bool hasPhoto;
- (void)setAsPreferredPersonForPhoto;
@property(readonly) ABUIPerson *preferredPersonForPhoto;
@property(readonly) NSData *preferredPhotoThumbnail;
@property(readonly) NSData *photoThumbnail;
- (void)setAsPreferredPersonForName;
@property(readonly) ABUIPerson *preferredPersonForName;
@property(readonly) NSString *preferredName;
- (id)nameIgnoringOrganization:(_Bool)arg1;
@property(readonly) NSString *phoneticName;
@property(readonly) NSString *name;
- (id)policiesForAllLinkedPeople;
@property(readonly) void *policy;
- (void)mergeProperties:(id)arg1 fromRecord:(void *)arg2;
- (void)mergeValuesFromRecord:(void *)arg1;
- (_Bool)allowsCustomLabelsForProperty:(int)arg1;
@property(readonly) _Bool isRemote;
@property(readonly) _Bool areAllLinkedPeopleReadonly;
@property(readonly) _Bool isReadonly;
- (_Bool)linkToPerson:(id)arg1;
@property(readonly) unsigned long long linkedPeopleCount;
@property(readonly) NSArray *linkedPeople;
@property(readonly) _Bool hasLinkedPeople;
@property(readonly) _Bool isMeCard;
- (id)reloadFromDB;
@property(readonly) _Bool hasValidRecordID;
@property(readonly) _Bool recordWasDeleted;
- (_Bool)updateNewPersonKindFromName;
- (_Bool)updatePersonKindFromName;
- (_Bool)_updatePersonKindFromNamePreserveOrganizationKind:(_Bool)arg1;
- (void)setNamePropertiesFromPerson:(id)arg1;
- (_Bool)addToGroup:(void *)arg1;
- (_Bool)addToAddressBook:(void *)arg1;
@property(readonly) unsigned int recordType;
@property(readonly) int recordID;
- (id)description;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithABRecordID:(int)arg1 fromAddressBook:(void *)arg2;
- (id)initWithABPerson:(void *)arg1;

@end

@interface ABUnknownPersonViewController_Modern : UIViewController <ABContactViewControllerDelegate, UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate>
{
    void *_addressBook;
    void *_displayedPerson;
    _Bool _allowsActions;
    _Bool _allowsAddingToAddressBook;
    _Bool _allowsConferencing;
    _Bool _allowsContactBlocking;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    _Bool _allowsSharing;
    int _style;
    id <ABUnknownPersonViewControllerDelegate> _unknownPersonViewDelegate;
    NSString *_alternateName;
    NSString *_message;
    ABPersonTableViewSharingDelegate *_sharingDelegate;
    UIView *_personHeaderView;
    ABContactViewController *_contactViewController;
    id <ABStyleProvider> _styleProvider;
    ABPersonViewControllerHelper *_helper;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonTableViewActionsDelegate *_actionsDelegate;
    ABUIPerson *_displayedUIPerson;
    NSArray *_displayedProperties;
    NSString *_primaryCNProperty;
    NSString *_primaryCountryCode;
    UITableView *_vCardTableView;
    NSArray *_vCards;
    NSArray *_vCardsProperties;
    NSMutableArray *_unmergedRecords;
}

+ (id)defaultLabelsForProperty:(int)arg1 person:(void *)arg2 addressBook:(void *)arg3;
@property(retain, nonatomic) NSMutableArray *unmergedRecords; // @synthesize unmergedRecords=_unmergedRecords;
@property(retain, nonatomic) NSArray *vCardsProperties; // @synthesize vCardsProperties=_vCardsProperties;
@property(retain, nonatomic) NSArray *vCards; // @synthesize vCards=_vCards;
@property(retain, nonatomic) UITableView *vCardTableView; // @synthesize vCardTableView=_vCardTableView;
@property(retain, nonatomic) NSString *primaryCountryCode; // @synthesize primaryCountryCode=_primaryCountryCode;
@property(retain, nonatomic) NSString *primaryCNProperty; // @synthesize primaryCNProperty=_primaryCNProperty;
@property(nonatomic) int style; // @synthesize style=_style;
@property(copy, nonatomic) NSArray *displayedProperties; // @synthesize displayedProperties=_displayedProperties;
@property(retain, nonatomic) ABUIPerson *displayedUIPerson; // @synthesize displayedUIPerson=_displayedUIPerson;
@property(readonly, nonatomic) ABPersonTableViewActionsDelegate *actionsDelegate; // @synthesize actionsDelegate=_actionsDelegate;
@property(readonly, nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper; // @synthesize helper=_helper;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(retain, nonatomic) UIView *personHeaderView; // @synthesize personHeaderView=_personHeaderView;
@property(nonatomic) _Bool allowsSharing; // @synthesize allowsSharing=_allowsSharing;
@property(readonly, nonatomic) ABPersonTableViewSharingDelegate *sharingDelegate; // @synthesize sharingDelegate=_sharingDelegate;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(nonatomic) _Bool allowsConferencing; // @synthesize allowsConferencing=_allowsConferencing;
@property(nonatomic) _Bool allowsAddingToAddressBook; // @synthesize allowsAddingToAddressBook=_allowsAddingToAddressBook;
@property(nonatomic) _Bool allowsActions; // @synthesize allowsActions=_allowsActions;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *alternateName; // @synthesize alternateName=_alternateName;
@property(nonatomic) id <ABUnknownPersonViewControllerDelegate> unknownPersonViewDelegate; // @synthesize unknownPersonViewDelegate=_unknownPersonViewDelegate;
- (double)ab_heightToFitForViewInPopoverView;
@property(nonatomic) _Bool badgeEmailPropertiesForMailVIP;
@property(copy, nonatomic) CDUnknownBlockType willWeiboLocationCallback;
@property(copy, nonatomic) CDUnknownBlockType willTweetLocationCallback;
@property(retain, nonatomic) UIImage *shareLocationSnapshotImage;
@property(copy, nonatomic) NSString *shareLocationURL;
@property(copy, nonatomic) NSString *shareMessageSubject;
@property(copy, nonatomic) NSString *shareMessageBody;
@property(nonatomic) _Bool shareMessageBodyIsHTML;
- (int)abViewControllerType;
@property(nonatomic) _Bool savesNewContactOnSuspend;
@property(retain, nonatomic) UIView *customFooterView;
@property(retain, nonatomic) UIView *customHeaderView;
- (void)presentPeoplePickerNavigationControllerForMergeToContact;
- (void)presentNewContactViewControllerForAddToContacts;
@property(nonatomic) _Bool isLocation;
@property(readonly, nonatomic) _Bool canShareContact;
- (void)presentShareContactSheet;
- (void)presentAddToContactsSheet;
- (void)reloadImageData;
- (void)setAttribution:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(copy, nonatomic) NSString *attribution;
@property(nonatomic) _Bool shouldAlignPersonHeaderViewToImage;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 important:(_Bool)arg3;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3 important:(_Bool)arg4;
- (void)setCardContentProvider:(id)arg1;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
- (void)addToExistingContacts;
- (id)findMatchingCardsForRecord:(void *)arg1;
- (void)showUnmergedContactsAlert;
- (void)addUnmergedRecords;
- (void)createNewContacts;
- (void)loadContactViewController;
- (id)primaryPropertyStringForContact:(id)arg1;
- (void)setPrimaryProperty:(int)arg1;
- (void)setPrimaryProperty:(int)arg1 countryCode:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)contactViewController:(id)arg1 shouldPerformDefaultActionForContact:(id)arg2 property:(id)arg3 labeledValue:(id)arg4;
- (void)contactViewController:(id)arg1 didCompleteWithContact:(id)arg2;
@property(nonatomic) void *displayedPerson;
@property(nonatomic) void *addressBook;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)loadView;
- (_Bool)isKindOfClass:(Class)arg1;
- (void)dealloc;
- (id)initWithVCardData:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 style:(int)arg3;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(int)arg1;
- (id)init;
- (id)newActionButton;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 forProperty:(int)arg3 withActionGrouping:(long long)arg4 ordering:(long long)arg5;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 forProperty:(int)arg4 withActionGrouping:(long long)arg5 ordering:(long long)arg6;
- (void)replaceActionWithTarget:(id)arg1 selector:(SEL)arg2 withTitle:(id)arg3 target:(id)arg4 selector:(SEL)arg5 location:(long long)arg6 destructive:(_Bool)arg7;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 location:(long long)arg3;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 location:(long long)arg4 destructive:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABUnknownPersonViewController : UIViewController <UIActionSheetDelegate>
{
    id _helper;
    id _reserved;
    _Bool _allowsContactBlocking;
    _Bool _allowsOnlyPhoneActions;
    _Bool _allowsOnlyFaceTimeActions;
    id <ABUnknownPersonViewControllerDelegate> _unknownPersonViewDelegate;
    ABPersonTableViewSharingDelegate *_sharingDelegate;
    ABContactViewController *_contactViewController;
    ABPersonTableViewDataSource *_dataSource;
    ABPersonTableViewActionsDelegate *_actionsDelegate;
}

+ (id)defaultLabelsForProperty:(int)arg1 person:(void *)arg2 addressBook:(void *)arg3;
@property(readonly, nonatomic) ABPersonTableViewActionsDelegate *actionsDelegate; // @synthesize actionsDelegate=_actionsDelegate;
@property(readonly, nonatomic) ABPersonTableViewDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) ABContactViewController *contactViewController; // @synthesize contactViewController=_contactViewController;
@property(readonly, nonatomic) ABPersonTableViewSharingDelegate *sharingDelegate; // @synthesize sharingDelegate=_sharingDelegate;
@property(nonatomic) _Bool allowsOnlyFaceTimeActions; // @synthesize allowsOnlyFaceTimeActions=_allowsOnlyFaceTimeActions;
@property(nonatomic) _Bool allowsOnlyPhoneActions; // @synthesize allowsOnlyPhoneActions=_allowsOnlyPhoneActions;
@property(nonatomic) _Bool allowsContactBlocking; // @synthesize allowsContactBlocking=_allowsContactBlocking;
@property(nonatomic) id <ABUnknownPersonViewControllerDelegate> unknownPersonViewDelegate; // @synthesize unknownPersonViewDelegate=_unknownPersonViewDelegate;
- (_Bool)isShowingMultipleVCards;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)_showCardViewerForIndex:(long long)arg1;
- (void)_unselectTable;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)accessChanged;
- (id)_viewControllerForCardAtIndex:(long long)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_addToExistingContacts;
- (void)dismissAnimated:(_Bool)arg1;
- (id)_findMatchingCardsForRecord:(void *)arg1;
- (void)_showUnmergedContactsAlert;
- (void)_addUnmergedRecords;
- (void)_createNewContacts;
- (_Bool)personViewControllerHelper:(id)arg1 shouldContinueAfterSelectingPropertyAtIndex:(long long)arg2 inPropertyGroup:(id)arg3;
- (void)applicationDidResume;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)updateNavigationButtons;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (_Bool)supportedInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)viewDidLoad;
- (double)ab_heightToFitForViewInPopoverView;
@property(nonatomic) _Bool badgeEmailPropertiesForMailVIP;
@property(copy, nonatomic) CDUnknownBlockType willWeiboLocationCallback;
@property(copy, nonatomic) CDUnknownBlockType willTweetLocationCallback;
@property(retain, nonatomic) UIImage *shareLocationSnapshotImage;
@property(copy, nonatomic) NSString *shareLocationURL;
@property(copy, nonatomic) NSString *shareMessageSubject;
@property(copy, nonatomic) NSString *shareMessageBody;
@property(nonatomic) _Bool shareMessageBodyIsHTML;
- (int)abViewControllerType;
@property(nonatomic) _Bool savesNewContactOnSuspend;
@property(retain, nonatomic) UIView *customFooterView;
@property(retain, nonatomic) UIView *customHeaderView;
- (void)presentPeoplePickerNavigationControllerForMergeToContact;
- (void)presentNewContactViewControllerForAddToContacts;
@property(nonatomic) _Bool isLocation;
@property(readonly, nonatomic) _Bool canShareContact;
- (void)presentShareContactSheet;
- (void)presentAddToContactsSheet;
- (void)reloadImageData;
- (void)setAttribution:(id)arg1 target:(id)arg2 selector:(SEL)arg3;
@property(copy, nonatomic) NSString *attribution;
@property(copy, nonatomic) NSArray *displayedProperties;
- (void)setPrimaryProperty:(int)arg1;
- (void)setPrimaryProperty:(int)arg1 countryCode:(id)arg2;
@property(nonatomic) _Bool shouldAlignPersonHeaderViewToImage;
@property(retain, nonatomic) UIView *personHeaderView;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 important:(_Bool)arg3;
- (void)setHighlightedItemForProperty:(int)arg1 withIdentifier:(int)arg2 person:(void *)arg3 important:(_Bool)arg4;
- (void)setCardContentProvider:(id)arg1;
@property(nonatomic) _Bool allowsConferencing;
- (_Bool)allowsSendingTextMessage;
- (void)setAllowsSendingTextMessage:(_Bool)arg1;
@property(nonatomic) _Bool allowsAddingToAddressBook;
@property(nonatomic) _Bool allowsSharing;
@property(nonatomic) _Bool allowsActions;
@property(retain, nonatomic) UIView *customMessageView;
@property(retain, nonatomic) UIFont *messageDetailFont;
@property(copy, nonatomic) NSString *messageDetail;
@property(retain, nonatomic) UIFont *messageFont;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *alternateName;
@property(retain, nonatomic) ABUIPerson *displayedUIPerson;
@property(nonatomic) void *displayedPerson;
@property(retain, nonatomic) id <ABStyleProvider> styleProvider;
@property(nonatomic) void *addressBook;
- (void)tellHelperToShow:(_Bool)arg1 actionWithSelector:(SEL)arg2 localizableTitle:(id)arg3 property:(int)arg4 withActionGrouping:(long long)arg5 ordering:(long long)arg6;
- (void)tellHelperToShow:(_Bool)arg1 actionWithSelector:(SEL)arg2 target:(id)arg3 localizableTitle:(id)arg4 property:(int)arg5 withActionGrouping:(long long)arg6 ordering:(long long)arg7;
@property(readonly, nonatomic) ABPersonViewControllerHelper *helper;
- (id)_forwarder;
- (id)_vCardTable;
- (id)_unmergedRecords;
- (id)_unmergedAlertSheet;
- (id)_alertSheet;
- (id)_vCardProperties;
- (id)_vCards;
- (id)initWithVCardData:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 style:(int)arg3;
- (id)initWithStyle:(int)arg1;
- (id)init;
- (void)setCustomAppearanceProvider:(id)arg1;
- (void)addActionWithTitle:(id)arg1 content:(id)arg2 target:(id)arg3 selector:(SEL)arg4 forProperty:(int)arg5 withActionGrouping:(long long)arg6 ordering:(long long)arg7;
- (id)newActionButton;
- (void)setActionShouldPickHighlightedItem:(_Bool)arg1;
- (void)removeActionWithSelector:(SEL)arg1 target:(id)arg2 forProperty:(int)arg3 withActionGrouping:(long long)arg4 ordering:(long long)arg5;
- (void)addActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 forProperty:(int)arg4 withActionGrouping:(long long)arg5 ordering:(long long)arg6;
- (void)addActionWithTitle:(id)arg1 shortTitle:(id)arg2 target:(id)arg3 selector:(SEL)arg4 forProperty:(int)arg5 withActionGrouping:(long long)arg6 ordering:(long long)arg7;
- (_Bool)hasActionWithTitle:(id)arg1 target:(id)arg2 selector:(SEL)arg3 property:(int)arg4 actionGrouping:(long long)arg5 ordering:(long long)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABUnknownPersonViewDelegateForwarder : NSObject <UITableViewDelegate, UITableViewDataSource>
{
    ABUnknownPersonViewController *_viewController;
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)initWithUnknownPersonViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ABVibrationPickerController : UINavigationController
{
    CNContactStyle *_contactStyle;
    TKVibrationPickerViewController *_vibrationPicker;
}

@property(readonly, nonatomic) TKVibrationPickerViewController *vibrationPicker; // @synthesize vibrationPicker=_vibrationPicker;
@property(retain, nonatomic) CNContactStyle *contactStyle; // @synthesize contactStyle=_contactStyle;
- (void)cancelButton:(id)arg1;
- (void)doneButton:(id)arg1;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1 selectedVibrationIdentifier:(id)arg2;

// Remaining properties
@property(nonatomic) id <ABPickerControllerDelegate> delegate;

@end

@interface ABVibrationPickerViewController : ABPickerViewController
{
    TKVibrationPickerViewController *_vibrationPickerViewController;
    _Bool _canEnterEditingMode;
    UIBarButtonItem *_saveButton;
}

@property(retain, nonatomic, setter=_setSaveButton:) UIBarButtonItem *_saveButton; // @synthesize _saveButton;
- (void)_vibrationSaveButtonClicked:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_getRotationContentSettings:(CDStruct_e950349b *)arg1;
- (double)ab_heightToFitForViewInPopoverView;
- (void)loadView;
- (void)setStyleProvider:(id)arg1;
@property(readonly, retain, nonatomic) TKVibrationPickerViewController *vibrationPickerViewController;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1;

@end

@interface ABWeakReference : NSObject
{
    id <NSObject> _reference;
}

+ (id)weakReferenceWithObject:(id)arg1;
- (id)retainedReference;
- (void)dealloc;
- (id)_initWithObject:(id)arg1;
- (id)init;

@end

@interface CNContactPropertyProxy : NSObject
{
    int _identifier;
    CNContact *_contact;
    NSString *_property;
}

+ (id)proxyForContact:(id)arg1 propertyKey:(id)arg2 propertyIdentifier:(int)arg3;
@property int identifier; // @synthesize identifier=_identifier;
@property NSString *property; // @synthesize property=_property;
@property CNContact *contact; // @synthesize contact=_contact;
- (id)valueForUndefinedKey:(id)arg1;

@end

@interface CNContact : NSObject <NSSecureCoding, NSCopying, NSMutableCopying>
{
    void *_record;
    void *_originalRecord;
    void *_source;
    void *_addressBook;
    NSArray *_linkedContacts;
    _Bool _unified;
    int _isFacebook;
    _Bool _checkedForOriginalRecord;
    unsigned int _recordType;
    CNContactIdentifier *_identifier;
}

+ (id)contactWithUserActivityUserInfo:(id)arg1 addressBook:(void *)arg2;
+ (long long)defaultNameOrderForEdit;
+ (int)propertyIDForProperty:(id)arg1;
+ (id)propertyForPropertyID:(int)arg1;
+ (id)propertiesFromPropertyIDs:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (id)contactWithStateRestorationCoder:(id)arg1 addressBook:(void *)arg2;
+ (id)contactWithRecordID:(int)arg1 addressBook:(void *)arg2;
+ (id)contactWithRecord:(void *)arg1 unify:(_Bool)arg2;
+ (id)contactWithRecord:(void *)arg1;
+ (id)contact;
@property(readonly) unsigned int recordType; // @synthesize recordType=_recordType;
@property(readonly, copy) CNContactIdentifier *identifier; // @synthesize identifier=_identifier;
- (id)userActivityUserInfo;
- (id)_squareImage:(id)arg1;
- (struct CGRect)_squareCropRectForSize:(struct CGSize)arg1;
- (id)_CNLabelFromABLabel:(struct __CFString *)arg1;
- (id)_labelledStringValuesForProperty:(int)arg1;
- (id)_labelledValuesForProperty:(int)arg1 valueFromABValue:(CDUnknownBlockType)arg2;
- (id)_stringValueForProperty:(int)arg1;
- (_Bool)supportsInstantMessageService;
- (_Bool)supportsCustomLabelsForProperty:(id)arg1;
- (id)supportedLabelsForProperty:(id)arg1;
- (long long)maximumNumberOfValuesForProperty:(id)arg1;
- (id)_labeledValueForSoundIdentifier:(int)arg1;
@property(readonly, copy) NSArray *textTone;
@property(readonly, copy) NSArray *ringtone;
@property(readonly, copy) NSArray *postalAddresses;
@property(readonly, copy) NSArray *socialProfiles;
@property(readonly, copy) NSArray *relatedNames;
@property(readonly, copy) NSArray *instantMessageAddresses;
@property(readonly, copy) NSArray *dates;
@property(readonly, copy) NSArray *urlAddresses;
@property(readonly, copy) NSArray *emailAddresses;
@property(readonly, copy) NSArray *phoneNumbers;
@property(readonly, copy) CNContact *preferredContactForPhoto;
@property(readonly, copy) CNContact *preferredContactForName;
@property(readonly, copy) NSString *primarySourceName;
@property(getter=isPreferredForPhoto) _Bool preferredForPhoto;
@property(getter=isPreferredForName) _Bool preferredForName;
@property(readonly) long long nameOrder;
@property(readonly) long long contactType;
@property(readonly, copy) NSString *note;
@property(readonly, copy) NSArray *birthdays;
@property(readonly, copy) NSDateComponents *alternateBirthday;
@property(readonly, copy) NSDateComponents *birthday;
- (id)vCardRepresentation;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSString *personName;
@property(readonly, copy) NSString *phoneticFullName;
@property(readonly, copy) NSString *fullName;
@property(readonly, copy) NSString *jobTitle;
@property(readonly, copy) NSString *departmentName;
@property(readonly, copy) NSString *organizationName;
@property(readonly, copy) NSString *phoneticFamilyName;
@property(readonly, copy) NSString *phoneticMiddleName;
@property(readonly, copy) NSString *phoneticGivenName;
@property(readonly, copy) NSString *nickname;
@property(readonly, copy) NSString *previousFamilyName;
@property(readonly, copy) NSString *nameSuffix;
@property(readonly, copy) NSString *familyName;
@property(readonly, copy) NSString *middleName;
@property(readonly, copy) NSString *givenName;
@property(readonly, copy) NSString *namePrefix;
- (id)largestAvailablePhotoAndCropRect:(struct CGRect *)arg1;
@property(readonly) NSData *largestAvailablePhoto;
@property(readonly) NSData *photoThumbnail;
- (void)removePhoto;
- (void)setImageData:(id)arg1 forFormat:(int)arg2 cropRect:(struct CGRect)arg3;
- (void)setPhoto:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)validatesPredicate:(id)arg1 onPropertyKey:(id)arg2 propertyIdentifier:(int)arg3;
- (void)reloadRecord;
- (_Bool)deleteContact;
@property(readonly, nonatomic, getter=isMeContact) _Bool meContact;
@property(readonly, nonatomic, getter=isFacebook) _Bool facebook;
@property(readonly, nonatomic, getter=isUnknown) _Bool unknown;
@property(readonly, nonatomic, getter=isReadonly) _Bool readonly;
@property(readonly, getter=isUnified) _Bool unified;
- (id)localizedNameForProperty:(id)arg1;
@property void *addressBook;
@property(retain) NSArray *linkedContacts;
@property(readonly) _Bool hasChanges;
- (_Bool)hasLinkedContacts;
- (_Bool)hasValidRecordID;
@property(readonly) int recordID;
@property void *source;
@property(readonly) void *originalRecord;
@property(readonly) void *record;
- (_Bool)isEqualToContact:(id)arg1 includeIdentifiers:(_Bool)arg2;
- (_Bool)isEqualToContact:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRecord:(void *)arg1 unify:(_Bool)arg2;
- (id)initWithRecord:(void *)arg1 unify:(_Bool)arg2 originalRecord:(void *)arg3;
- (id)initWithRecord:(void *)arg1;

@end

@interface CNDate : NSObject
{
}

+ (_Bool)isYearlessComponents:(id)arg1;
+ (id)dateFromComponents:(id)arg1;
+ (id)yearlessComponentsFromDate:(id)arg1 calendar:(id)arg2;
+ (id)yearlessComponentsFromDate:(id)arg1;
+ (id)componentsFromDate:(id)arg1 calendar:(id)arg2;
+ (id)componentsFromDate:(id)arg1;
+ (id)gregorianCalendarGMT;
+ (id)currentCalendarGMT;
+ (void)localeDidChange:(id)arg1;
+ (void)initialize;

@end

@interface CNInstantMessageAddress : NSObject <NSCopying>
{
    NSString *_username;
    NSString *_service;
}

+ (id)instantMessageAddressWithUsername:(id)arg1 service:(id)arg2;
@property(readonly, copy) NSString *service; // @synthesize service=_service;
@property(readonly, copy) NSString *username; // @synthesize username=_username;
- (id)addressDictionary;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithUsername:(id)arg1 service:(id)arg2;

@end

@interface CNLabeledValue : NSObject <NSCopying>
{
    int _multiValueIdentifier;
    NSString *_label;
    id _value;
}

+ (id)builtinLabelsForProperty:(id)arg1;
+ (void)deleteCustomLabel:(id)arg1;
+ (id)allCustomLabels;
+ (id)allLabels;
+ (id)defaultLabels;
+ (void *)addressBook;
+ (id)labeledValueWithLabel:(id)arg1 value:(id)arg2;
+ (id)labeledValueWithMultiValueIdentifier:(int)arg1 label:(id)arg2 value:(id)arg3;
@property(readonly, copy) id value; // @synthesize value=_value;
@property(readonly, copy) NSString *label; // @synthesize label=_label;
@property(readonly, copy) NSString *localizedLabel;
- (void)setMultiValueIdentifier:(int)arg1;
@property(readonly) int multiValueIdentifier;
@property(readonly, copy) NSString *identifier;
- (_Bool)isEqualToLabelledValue:(id)arg1 includeIdentifiers:(_Bool)arg2;
- (_Bool)isEqualToLabelledValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)labeledValueBySettingValue:(id)arg1;
- (id)labeledValueBySettingLabel:(id)arg1 value:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMultiValueIdentifier:(int)arg1 label:(id)arg2 value:(id)arg3;
- (id)initWithLabel:(id)arg1 value:(id)arg2;

@end

@interface CNMutableContact : CNContact
{
}

+ (id)contactWithRecord:(void *)arg1 unify:(_Bool)arg2;
+ (id)contactWithRecord:(void *)arg1;
+ (id)contact;
- (struct __CFString *)_ABLabelFromCNLabel:(id)arg1;
- (void)_setStringMultiValueForProperty:(int)arg1 values:(id)arg2;
- (void)_setMultiValueForProperty:(int)arg1 values:(id)arg2 valueFromCNValue:(CDUnknownBlockType)arg3;
- (void)addProperties:(id)arg1 excludingProperties:(id)arg2 fromContact:(id)arg3;
- (_Bool)addToGroup:(void *)arg1;
- (_Bool)hasChanges;
- (_Bool)unlinkContact;
- (_Bool)linkToContact:(id)arg1;
- (_Bool)deleteContact;
- (_Bool)saveContactInAddressBook:(void *)arg1;
- (_Bool)saveContact;
@property(copy) NSArray *textTone;
@property(copy) NSArray *ringtone;
@property(copy) NSArray *postalAddresses;
@property(copy) NSArray *socialProfiles;
@property(copy) NSArray *relatedNames;
@property(copy) NSArray *instantMessageAddresses;
@property(copy) NSArray *dates;
@property(copy) NSArray *urlAddresses;
@property(copy) NSArray *emailAddresses;
@property(copy) NSArray *phoneNumbers;
- (void)setPreferredForPhoto;
- (void)setPreferredForName;
@property long long contactType;
@property(copy) NSString *note;
@property(copy) NSArray *birthdays;
@property(copy) NSDateComponents *alternateBirthday;
@property(copy) NSDateComponents *birthday;
@property(copy) NSString *jobTitle;
@property(copy) NSString *departmentName;
@property(copy) NSString *organizationName;
@property(copy) NSString *phoneticFamilyName;
@property(copy) NSString *phoneticMiddleName;
@property(copy) NSString *phoneticGivenName;
@property(copy) NSString *nickname;
@property(copy) NSString *previousFamilyName;
@property(copy) NSString *nameSuffix;
@property(copy) NSString *familyName;
@property(copy) NSString *middleName;
@property(copy) NSString *givenName;
@property(copy) NSString *namePrefix;
- (void)_setValue:(id)arg1 forProperty:(int)arg2;
- (void)updateContactType:(_Bool)arg1;
- (_Bool)isEqualToContact:(id)arg1 includeIdentifiers:(_Bool)arg2;
- (_Bool)isEqualToContact:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithRecord:(void *)arg1 unify:(_Bool)arg2 originalRecord:(void *)arg3;
- (id)initWithRecord:(void *)arg1;
- (id)init;

@end

@interface CNMutablePostalAddress : CNPostalAddress
{
}

+ (id)postalAddress;
@property(copy) NSString *ISOCountryCode;
@property(copy) NSString *country;
@property(copy) NSString *postalCode;
@property(copy) NSString *state;
@property(copy) NSString *subAdministrativeArea;
@property(copy) NSString *city;
@property(copy) NSString *subLocality;
@property(copy) NSString *street;

@end

@interface CNMutableSocialProfile : CNSocialProfile
{
}

@property(copy) NSString *displayname;
@property(copy) NSString *service;
@property(copy) NSString *userIdentifier;
@property(copy) NSString *username;
@property(copy) NSString *urlString;

@end

@interface CNContactPickerContentViewController : UIViewController <CNContactPickerContentViewController>
{
    _Bool _clientWantsPersons;
    _Bool _clientWantsProperties;
    id <CNContactPickerContentDelegate> _delegate;
    NSArray *_displayedKeys;
    NSPredicate *_predicateForEnablingContact;
    NSPredicate *_predicateForSelectionOfContact;
    NSPredicate *_predicateForSelectionOfProperty;
}

@property(copy, nonatomic) NSPredicate *predicateForSelectionOfProperty; // @synthesize predicateForSelectionOfProperty=_predicateForSelectionOfProperty;
@property(copy, nonatomic) NSPredicate *predicateForSelectionOfContact; // @synthesize predicateForSelectionOfContact=_predicateForSelectionOfContact;
@property(copy, nonatomic) NSPredicate *predicateForEnablingContact; // @synthesize predicateForEnablingContact=_predicateForEnablingContact;
@property(copy, nonatomic) NSArray *displayedKeys; // @synthesize displayedKeys=_displayedKeys;
@property _Bool clientWantsProperties; // @synthesize clientWantsProperties=_clientWantsProperties;
@property _Bool clientWantsPersons; // @synthesize clientWantsPersons=_clientWantsPersons;
@property __weak id <CNContactPickerContentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)invalidate;
- (void)setupWithOptions:(id)arg1 readyBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property void *addressBook;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNPhoneNumber : NSObject <NSCopying>
{
    NSString *_cachedFormattedNormalizedStringValue;
    NSString *_cachedNormalizedStringValue;
    NSString *_stringValue;
}

+ (id)phoneNumberWithStringValue:(id)arg1;
@property(readonly, copy) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(readonly, copy) NSString *normalizedStringValue;
@property(readonly, copy) NSString *formattedStringValue;
@property(readonly, copy) NSString *countryCode;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithStringValue:(id)arg1;

@end

@interface CNPostalAddress : NSObject <NSCopying, NSMutableCopying>
{
    NSMutableDictionary *_addressDictionary;
}

+ (id)localizedAddressFormatDictionaryForCountryCode:(id)arg1;
+ (id)localizedCountryNameForCountryCode:(id)arg1;
+ (id)addressFormatsDictionary;
+ (id)defaultCountryCode;
+ (id)postalAddressWithDictionary:(id)arg1;
+ (id)postalAddress;
- (id)description;
- (id)keyboardSettingsForAddressPart:(id)arg1;
@property(readonly, nonatomic) NSString *formattedAddressSingleLine;
@property(readonly, nonatomic) NSString *formattedAddress;
@property(readonly, copy) NSString *ISOCountryCode;
@property(readonly, copy) NSString *country;
@property(readonly, copy) NSString *postalCode;
@property(readonly, copy) NSString *state;
@property(readonly, copy) NSString *subAdministrativeArea;
@property(readonly, copy) NSString *city;
@property(readonly, copy) NSString *subLocality;
@property(readonly, copy) NSString *street;
@property(retain) NSMutableDictionary *addressDictionary;
- (_Bool)_isAddressFieldEqual:(id)arg1 toField:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface CNSocialProfile : NSObject <NSCopying, NSMutableCopying>
{
    NSMutableDictionary *_profileDictionary;
}

+ (id)socialProfileWithUrlString:(id)arg1 username:(id)arg2 userIdentifier:(id)arg3 service:(id)arg4 displayname:(id)arg5;
+ (id)socialProfileWithUrlString:(id)arg1 username:(id)arg2 service:(id)arg3;
+ (id)socialProfileWithUsername:(id)arg1 service:(id)arg2;
+ (id)socialProfileWithDictionary:(id)arg1;
+ (id)socialProfile;
- (id)description;
@property(readonly, copy) NSString *displayname;
@property(readonly, copy) NSString *service;
@property(readonly, copy) NSString *userIdentifier;
@property(readonly, copy) NSString *username;
@property(readonly, copy) NSString *urlString;
@property(retain) NSMutableDictionary *profileDictionary;
- (_Bool)isEqual:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface CNContactPickerNewViewController : CNContactPickerContentViewController
{
}

- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface NSString (ABCompare)
- (long long)abCompare:(id)arg1;
@end

@interface NSDictionary (ABCompare)
- (long long)abCompare:(id)arg1;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface NSIndexPath (ABContactView)
+ (id)indexPathForItem:(long long)arg1 inGroup:(long long)arg2;
@property(readonly, nonatomic) long long ab_item;
@property(readonly, nonatomic) long long ab_group;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UITableView (ABKeyboardAdjuster)
- (void)ab_scrollToRowAtIndexPathRespectingCaretOfActiveTextView:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (void)ab_internalScrollToRowAtIndexPathRespectingCaretOfActiveTextView:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (void)ab_delayedScrollRespectingCaretOfActiveTextViewToCell:(id)arg1 atIndexPath:(id)arg2 atScrollPosition:(long long)arg3 animated:(_Bool)arg4;
@end

@interface UIScrollView (ABKeyboardAdjuster)
- (void)ab_adjustForAutomaticKeyboardInfo:(id)arg1 lastAdjustment:(double *)arg2;
- (double)ab_verticalOverlapUsingKeyboardInfo:(id)arg1;
- (void)ab_scrollToSelectionOfTextView:(id)arg1;
- (void)ab_scrollToSelectionOfTextView:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIColor (ABFaceTimeColors)
+ (id)faceTimeSectionOutlineColor;
+ (id)faceTimeSeparatorColorWithBlurUnsupported;
+ (id)faceTimeLightSeparatorColor;
+ (id)faceTimeDarkSeparatorColor;
+ (id)faceTimeShadowedGroupBackgroundColor;
+ (id)faceTimeLightBabyBlueColor;
+ (id)faceTimeBabyBlueColor;
@end

@interface UIButton (ABConferenceIcon)
- (void)ab_addConferenceIcon;
@end

@interface UIViewController (PrivateModalViewControllerIntercept)
- (_Bool)ab_wantsToPresentModalViewControllerWithoutAnyHelp;
@end

@interface UILabel (ABUIAdditions) <ABText>
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIButton (ABUIAdditions) <ABText>
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITextView (ABUIAdditions) <ABText>
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITextField (ABUIAdditions) <ABText>
@property(copy, nonatomic) NSDictionary *ab_textAttributes;
@property(copy, nonatomic) NSString *ab_text;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSURL (ABTelephonyUtilities)
+ (id)ab_URLWithTelephoneNumber:(id)arg1 addressBookUID:(int)arg2;
+ (id)ab_faceTimeURLWithDestinationID:(id)arg1;
@end

@interface UIImage (ABUIBundle)
+ (id)abImageNamed:(id)arg1;
@end

@interface UIView (ABUIViewIndexPathDrillDown)
- (id)ancestorBackdropView;
- (id)abSubviewAtIndexPath:(id)arg1;
- (id)abIndexPathOfSubview:(id)arg1;
@end

@interface UIView (ABDebugging)
- (void)abSetLayoutDebuggingColor:(id)arg1;
@end

@interface UIViewController (ABViewControllerType)
- (int)abViewControllerType;
@end

@interface NSObject (ABUtils)
- (void)ab_updateDictionaryForKey:(id)arg1 withChanges:(id)arg2;
@end

@interface NSString (ABAdditions)
- (_Bool)AB_containsEmojiCharacters;
- (_Bool)AB_containsNonLatinCharacters;
- (id)AB_stringByTransliteratingToPhoneticCharactersAsFamilyName:(_Bool)arg1;
- (_Bool)AB_shouldTransliterateToLatin;
- (id)AB_stringByTransliteratingToKana;
- (unsigned int)AB_firstUTF32Character;
@end

@interface UIColor (Debugging)
+ (id)randomColor;
@end

@interface UIColor (ABUIDefaultColors)
+ (id)cardCellSeparatorColor;
+ (id)cardCellReadonlyBackgroundColor;
+ (id)cardBackgroundInPopoverColor;
+ (id)cardCellBackgroundColor;
+ (id)cardValueReadonlyTextColor;
+ (id)cardValueTextColor;
+ (id)cardLabelReadonlyTextColor;
+ (id)ab_colorWithR:(double)arg1 G:(double)arg2 B:(double)arg3 A:(double)arg4;
@end

@interface UIFont (ABFonts)
+ (_Bool)ab_preferredContentSizeCategoryIsAccessibilityCategory;
+ (id)ab_preferredContentSizeCategoryName;
+ (id)ab_preferredRowFontForTextStyle:(id)arg1;
+ (id)ab_preferredFontForTextStyle:(id)arg1;
+ (_Bool)_shouldUseDefaultFont;
+ (void)ab_setIgnoreUserFontSize:(_Bool)arg1;
- (id)ab_italicFont;
- (id)ab_boldFont;
@end

@interface UIImage (Tinting)
+ (id)ab_tintedImageNamed:(id)arg1 withTint:(id)arg2;
+ (id)ab_imageNamed:(id)arg1;
@end

@interface UIView (Debugging)
- (void)colorize;
@end

@interface UIViewController (ABPresentation)
@property(readonly, nonatomic) _Bool ab_isDirectlyInPopover;
@property(readonly, nonatomic) _Bool ab_isInPopover;
- (_Bool)_ab_isInPopoverRecursive:(_Bool)arg1;
@property(readonly, nonatomic) _Bool ab_shouldUseTransparentBackgroundInPopovers;
@property(readonly, nonatomic) _Bool ab_shouldShowNavBarButtons;
@end

