//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct BindingPoint {
    int _field1;
    int _field2;
};

struct ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field1;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field2;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field3;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field4;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field5;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field6;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field7;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field8;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field9;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field10;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field11;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field12;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field13;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field14;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field15;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field16;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field17;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field18;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field19;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field20;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field21;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field22;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnnotated> _field23;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field24;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field25;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field26;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field27;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field28;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field29;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field30;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field31;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field32;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field33;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field34;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field35;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field36;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field37;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field38;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field39;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field40;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field41;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field42;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field43;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field44;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field45;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field46;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field47;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field48;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field49;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field50;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field51;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field52;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field53[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnnotated> _field54[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field55[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field56;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field57;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field58;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field59;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field60;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field61;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field62;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field63;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field64;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field65;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field66;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field67;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field68;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field69;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field70;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field71;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field72;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field73;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field74;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field75;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field76;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field77;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field78;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field79;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field80[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field81[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field82[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field83;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field84;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field85;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field86;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field87;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field88;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field89;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field90;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field91;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field92;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field93;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field94;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field95;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field96;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field97;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field98;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field99;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field100;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field101;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field102;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field103;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field104;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field105;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field106;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field107;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field108;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field109;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field110;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field111;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field112[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field113[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field114[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field115[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field116[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field117[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field118[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field119[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field120[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field121[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field122[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field123[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field124;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field125;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field126;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field127;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field128;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field129[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field130[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field131[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field132[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field133[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field134[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field135[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field136[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field137[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field138[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field139[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field140[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field141[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field142[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field143[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field144[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field145[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field146[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field147[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field148[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field149;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field150;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field151[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnnotated> _field152[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated> _field153[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated> _field154[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field155[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field156[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field157[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field158[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field159;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field160;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field161;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field162;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field163;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field164;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field165;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field166[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field167;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field168;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field169;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field170;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field171;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field172;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field173[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field174;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field175;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field176;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field177;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnnotated> _field178;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnnotated> _field179;
    struct DYStateElement<long long, GPUTools::CStateBaseAnnotated> _field180;
    struct DYStateElement<long long, GPUTools::CStateBaseAnnotated> _field181;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnnotated> _field182;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field183;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field184;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field185;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field186;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field187;
    unsigned long long _field188;
    struct SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *_field189;
    struct StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes> *_field190;
    unsigned long long _field191;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYGLValidatorProcFnData {
    struct Function *_field1;
    unsigned int _field2;
};

struct DYStateElement<DYMtx, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct {
        float _field1[4][4];
    } _field3;
};

struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct BindingPoint _field3;
};

struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct StateBool _field3;
};

struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct StateEnum _field3;
};

struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct StateErrorStatus _field3;
};

struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct VecN<double, 4> _field3;
};

struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct VecN<float, 2> _field3;
};

struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct VecN<float, 3> _field3;
};

struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct VecN<float, 4> _field3;
};

struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct VecN<int, 4> _field3;
};

struct DYStateElement<float, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    float _field3;
};

struct DYStateElement<int, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    int _field3;
};

struct DYStateElement<long long, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    long long _field3;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field3;
};

struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct vector<DYMtx, std::__1::allocator<DYMtx>> _field3;
};

struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field3;
};

struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    unsigned int _field3;
};

struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated> {
    int _field1;
    int _field2;
    unsigned long long _field3;
};

struct ExtensionFunc {
    unsigned int _field1;
    int _field2;
    unsigned int _field3;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field1;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>>> _field2;
    int _field3;
};

struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field1;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>>> _field2;
    int _field3;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field1;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>>> _field2;
    int _field3;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field1;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>>> _field2;
    int _field3;
};

struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field1;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>>> _field2;
    int _field3;
};

struct SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes>;

struct StateBool {
    int _field1;
};

struct StateEnum {
    int _field1;
};

struct StateErrorStatus {
    int _field1;
};

struct StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes>;

struct VecN<double, 4> {
    double _field1[4];
};

struct VecN<float, 2> {
    float _field1[2];
};

struct VecN<float, 3> {
    float _field1[3];
};

struct VecN<float, 4> {
    float _field1[4];
};

struct VecN<int, 4> {
    int _field1[4];
};

struct _FuncTablePrivate {
    struct unordered_map<int, SEL *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, SEL *>>> _field1;
};

struct __hash_node<std::__1::__hash_value_type<int, SEL *>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, int>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, SEL *>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, int>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<int, SEL *, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, SEL *>>> {
    struct __hash_table<std::__1::__hash_value_type<int, SEL *>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SEL *>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SEL *>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, SEL *>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, SEL *>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, SEL *>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, SEL *>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, SEL *>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, int>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, DYOpenGLAPI, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DYOpenGLAPI>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, DYOpenGLAPI>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<DYMtx, std::__1::allocator<DYMtx>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<DYMtx *, std::__1::allocator<DYMtx>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool mbGL_OES_blend_subtract;
    _Bool mbGL_OES_compressed_paletted_texture;
    _Bool mbGL_OES_depth24;
    _Bool mbGL_OES_draw_texture;
    _Bool mbGL_OES_framebuffer_object;
    _Bool mbGL_OES_mapbuffer;
    _Bool mbGL_OES_matrix_palette;
    _Bool mbGL_OES_point_size_array;
    _Bool mbGL_OES_point_sprite;
    _Bool mbGL_OES_read_format;
    _Bool mbGL_OES_rgb8_rgba8;
    _Bool mbGL_OES_texture_mirrored_repeat;
    _Bool mbGL_EXT_texture_lod_bias;
    _Bool mbGL_IMG_read_format;
    _Bool mbGL_IMG_texture_compression_pvrtc;
    _Bool mbGL_IMG_texture_format_BGRA8888;
    _Bool mbGL_EXT_texture_filter_anisotropic;
    _Bool mbGL_APPLE_framebuffer_multisample;
    _Bool mbGL_APPLE_texture_format_BGRA8888;
    _Bool mbGL_APPLE_texture_max_level;
    _Bool mbGL_EXT_discard_framebuffer;
    _Bool mbGL_EXT_read_format_bgra;
    _Bool mbGL_OES_blend_equation_separate;
    _Bool mbGL_OES_blend_func_separate;
    _Bool mbGL_OES_fbo_render_mipmap;
    _Bool mbGL_OES_packed_depth_stencil;
    _Bool mbGL_OES_stencil8;
    _Bool mbGL_EXT_blend_minmax;
    _Bool mbGL_APPLE_texture_2D_limited_npot;
    _Bool mbGL_OES_stencil_wrap;
    _Bool mbGL_APPLE_rgb_422;
    _Bool mbGL_EXT_shader_texture_lod;
    _Bool mbGL_OES_depth_texture;
    _Bool mbGL_OES_standard_derivatives;
    _Bool mbGL_OES_texture_float;
    _Bool mbGL_OES_texture_half_float;
    _Bool mbGL_APPLE_texture_packed_float;
    _Bool mbGL_OES_vertex_array_object;
    _Bool mbGL_OES_element_index_uint;
    _Bool mbGL_APPLE_clip_distance;
    _Bool mbGL_OES_texture_half_float_linear;
    _Bool mbGL_EXT_debug_label;
    _Bool mbGL_EXT_debug_marker;
    _Bool mbGL_EXT_occlusion_query_boolean;
    _Bool mbGL_EXT_shadow_samplers;
    _Bool mbGL_EXT_texture_rg;
    _Bool mbGL_EXT_separate_shader_objects;
    _Bool mbGL_EXT_color_buffer_half_float;
    _Bool mbGL_EXT_color_buffer_float;
    _Bool mbGL_APPLE_color_buffer_packed_float;
    _Bool mbGL_EXT_shader_framebuffer_fetch;
    _Bool mbGL_EXT_texture_storage;
    _Bool mbGL_EXT_map_buffer_range;
    _Bool mbGL_APPLE_sync;
    _Bool mbGL_APPLE_copy_texture_levels;
    _Bool mbGL_EXT_sRGB;
    _Bool mbGL_EXT_pvrtc_sRGB;
    _Bool mbGL_EXT_instanced_arrays;
    _Bool mbGL_EXT_draw_instanced;
    _Bool mbGL_APPLE_texture_filter_cubic;
    _Bool mbGL_APPLE_tile_order_rot;
    _Bool mbGL_APPLE_get_framebuffer_texture_target;
    _Bool mbGL_KHR_texture_compression_astc_ldr;
    _Bool mbGL_APPLE_texture_compression_astc_ldr;
    _Bool mbGL_APPLE_texture_compression_astc_lowprecision;
} CDStruct_1d8a7097;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct CDStruct_183601bc;

// Template types
typedef struct ContextStateMirror<GPUTools::AnnotatedBaseObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field1;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field2;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field3;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field4;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field5;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field6;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field7;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field8;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field9;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field10;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field11;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field12;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field13;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field14;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field15;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field16;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field17;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field18;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field19;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field20;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field21;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field22;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnnotated> _field23;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field24;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field25;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field26;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field27;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field28;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field29;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field30;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field31;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field32;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field33;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field34;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field35;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field36;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field37;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field38;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field39;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field40;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field41;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field42;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field43;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field44;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field45;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnnotated> _field46;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field47;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field48;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field49;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnnotated> _field50;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field51;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field52;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field53[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnnotated> _field54[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field55[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field56;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field57;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field58;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field59;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field60;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field61;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field62;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field63;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field64;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field65;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field66;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field67;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field68;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field69;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field70;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field71;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field72;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field73;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field74;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field75;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field76;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field77;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field78;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field79;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field80[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field81[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field82[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field83;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field84;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field85;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field86;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field87;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field88;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field89;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field90;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field91;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field92;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field93;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field94;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field95;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field96;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field97;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field98;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field99;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field100;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field101;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field102;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field103;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field104;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field105;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field106;
    struct DYStateElement<int, GPUTools::CStateBaseAnnotated> _field107;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field108;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field109;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field110;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field111;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field112[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field113[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field114[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field115[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field116[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnnotated> _field117[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field118[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field119[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field120[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field121[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field122[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field123[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field124;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field125;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field126;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field127;
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field128;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field129[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnnotated> _field130[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field131[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field132[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field133[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field134[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field135[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field136[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field137[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field138[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field139[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field140[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field141[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field142[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field143[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnnotated> _field144[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field145[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field146[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnnotated> _field147[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnnotated> _field148[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field149;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field150;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnnotated> _field151[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnnotated> _field152[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated> _field153[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnnotated> _field154[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field155[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field156[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field157[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field158[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field159;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field160;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field161;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field162;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field163;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field164;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field165;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field166[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field167;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field168;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field169;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field170;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field171;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field172;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field173[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field174;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field175;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field176;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnnotated> _field177;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnnotated> _field178;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnnotated> _field179;
    struct DYStateElement<long long, GPUTools::CStateBaseAnnotated> _field180;
    struct DYStateElement<long long, GPUTools::CStateBaseAnnotated> _field181;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnnotated> _field182;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field183;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field184;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field185;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field186;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUTools::AnnotatedBaseObjectTypes>, int> _field187;
    unsigned long long _field188;
    struct SharegroupStateMirror<GPUTools::AnnotatedBaseObjectTypes> *_field189;
    struct StateMirrorManager<GPUTools::AnnotatedBaseObjectTypes> *_field190;
    unsigned long long _field191;
} ContextStateMirror_daaf80d0;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/GPUTools/PlugIns/GLToolsMobileAnalysis.gtplugin/Contents/MacOS/GLToolsMobileAnalysis
// UUID: BA161103-0D51-3022-A92C-BB2FC966427E
//
//                           Arch: x86_64
//                 Source version: 16739.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../../PrivateFrameworks
//                               = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/PrivateFrameworks
//

@protocol DYGLValidatorProtocol <NSObject>
- (void)doEndBlock:(int)arg1;
- (void)doStartBlock:(int)arg1;
- (void)doProcessFunction:(struct DYGLValidatorProcFnData *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface DYGLAnalyzerHeuristic_DrawOrder : DYGLAnalyzerHeuristic
{
    _Bool enableBlend;
    _Bool enableAlphaTest;
    _Bool enableDepthTest;
    _Bool enableStencilTest;
    _Bool nonZeroDepthMask;
    _Bool nonZeroStencilMask;
    _Bool hasDrawnOpaqueGeometry;
    _Bool hasDrawnAlphaTestedGeometry;
    _Bool hasDrawnTransparentGeometry;
    _Bool hasReportedOpaqueAfterTransparent;
    _Bool hasReportedAlphaTestWithoutDepthOrStencil;
    int lastOpaqueDrawFuncIndex;
    int lastTransparentDrawFuncIndex;
    int lastAlphaTestDrawFuncIndex;
    int lastAlphaTestEnableFuncIndex;
    int lastBindProgramPipelineFuncIndex;
}

+ (id)identifier;
- (void)recommendAlphaToCoverage:(const struct Function *)arg1;
- (void)reportAlphaTestWithoutDepthOrStencil:(const struct Function *)arg1;
- (void)reportOpaqueAfterTransparent:(const struct Function *)arg1;
- (void)startNewRenderTarget;
- (void)startBlock:(int)arg1;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (id)init;

@end

@interface DYGLAnalyzerHeuristic_DriverEvents : DYGLAnalyzerHeuristic
{
    DYGLAnalyzerFinding *_suboptimalMSAAResolveFinding;
    unsigned int _renderPasses;
    unsigned int _texLoads;
    unsigned int _flushes;
    unsigned int _suboptimalMSAAResolveCount;
    unsigned int _msaaResolveCount;
    int _frameOfFirstCompile;
    _Bool _bDriverHasCompiledShader;
    _Bool _bHasUploadedCubemap;
    int _storeFunction;
    int _lastFBOBind;
}

+ (id)identifier;
- (void).cxx_destruct;
- (void)reportOffChipMRT:(const struct Function *)arg1;
- (void)reportBufferStore;
- (id)newSuboptimalMSAAResolveFinding;
- (void)reportNotPrewarmedShaderCompilationES11:(const struct Function *)arg1;
- (void)reportNotPrewarmedShaderCompilation:(const struct Function *)arg1;
- (void)reportBufferLoad:(const struct Function *)arg1;
- (void)reportMSAAColorLoad:(const struct Function *)arg1;
- (void)reportSlowTextureUploadOnDraw:(const struct Function *)arg1;
- (void)reportSlowTextureUploadOnCopyTex:(const struct Function *)arg1;
- (void)reportSlowTextureUploadPalettedTexture:(const struct Function *)arg1;
- (void)reportSlowTextureUpload:(const struct Function *)arg1;
- (void)reportTextureUploadForcedRenderEnd:(const struct Function *)arg1;
- (void)reportGenMipmapSyncTexture:(const struct Function *)arg1;
- (void)reportFragmentShaderUsesDynamicBranchingAndMainMemory:(const struct Function *)arg1;
- (void)reportVertexShaderUsesDynamicBranchingAndMainMemory:(const struct Function *)arg1;
- (void)reportFragmentShaderUsesDynamicBranching:(const struct Function *)arg1;
- (void)reportVertexShaderUsesDynamicBranching:(const struct Function *)arg1;
- (void)reportProjectedTextureMapping:(const struct Function *)arg1;
- (void)reportDependentTextureSampling:(const struct Function *)arg1;
- (void)reportFragmentShaderSpill:(const struct Function *)arg1;
- (void)reportVertexShaderSpill:(const struct Function *)arg1;
- (void)reportPunchthrough:(const struct Function *)arg1 punchThroughReasons:(unsigned int)arg2;
- (void)reportGPUWaitOnFinish:(const struct Function *)arg1;
- (void)reportGPUWaitOnReadPixels:(const struct Function *)arg1;
- (void)reportGPUWaitOnBuffer:(const struct Function *)arg1;
- (void)reportGPUWaitOnTexture:(const struct Function *)arg1;
- (void)reportGPUWait:(const struct Function *)arg1;
- (void)notifyCompletion;
- (void)flushSuboptimalMSAAResolveFinding;
- (void)analyzeBufferLoadsAndStores:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (_Bool)_isAnyDrawFramebufferColorAttachmentUsingRetainedBacking;
- (_Bool)_drawFramebufferHasRenderbufferColorAttachment;
- (void)endBlock:(int)arg1;
- (void)startBlock:(int)arg1;
- (id)init;

@end

@interface DYGLAnalyzerHeuristic_ExtensionsUsed : DYGLAnalyzerHeuristic
{
    NSMutableArray *_extensionStrings;
    struct unordered_map<unsigned long long, DYOpenGLAPI, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, DYOpenGLAPI>>> _apiDict;
    CDStruct_1d8a7097 _extensionsUsed;
    unsigned int _lastProcessedFunc;
}

+ (id)identifier;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)notifyCompletion;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (void)_processFunctionES30:(const struct Function *)arg1;
- (void)_processFunctionES20:(const struct Function *)arg1;
- (void)_processFunctionES11:(const struct Function *)arg1;
- (void)_processFunctionES20AndES30:(const struct Function *)arg1;
- (void)_processFunctionES11AndES20:(const struct Function *)arg1;
- (void)_processFunctionShared:(const struct Function *)arg1;
- (void)_checkForExtension:(const struct Function *)arg1 string:(id)arg2 extensionFuncs:(const struct ExtensionFunc *)arg3 count:(unsigned long long)arg4 flag:(_Bool *)arg5;
- (void)_enableExtension:(id)arg1 flag:(_Bool *)arg2;
- (id)initWithIsPostMirrorHeuristic:(BOOL)arg1;

@end

@interface DYGLProfile : NSObject
{
    DYGLProfileConstraints *_constraints;
    id <DYGLValidatorProtocol> _validator;
}

@property(readonly, nonatomic) id <DYGLValidatorProtocol> validator; // @synthesize validator=_validator;
@property(readonly, nonatomic) DYGLProfileConstraints *constraints; // @synthesize constraints=_constraints;
- (void).cxx_destruct;
- (id)initWithConstraints:(id)arg1 andValidator:(id)arg2;

@end

@interface DYGLAnalyzerHeuristic_Validate : DYGLAnalyzerHeuristic
{
    DYGLProfile *_activeProfile;
}

+ (id)identifier;
@property(readonly, nonatomic) DYGLProfile *activeProfile; // @synthesize activeProfile=_activeProfile;
- (void).cxx_destruct;
- (void)endBlock:(int)arg1;
- (void)startBlock:(int)arg1;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (void)bindProfile:(id)arg1;

@end

@interface DYGLValidatorES : NSObject <DYGLValidatorProtocol>
{
    DYGLAnalyzerHeuristic *_heuristic;
    const struct Function *_currentFunc;
    struct _FuncTablePrivate *_funcTablePrivate;
    DYGLProfile *_profile;
    DYGLProfileConstraints *_constraints;
    const struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        CDStruct_1ef3fb1f _field5;
        struct {
            int _field1;
            int _field2;
            int _field3;
        } _field6;
        struct {
            int _field1;
        } _field7;
        CDStruct_1ef3fb1f _field8;
        int _field9;
        CDStruct_183601bc *_field10;
        float _field11;
        float _field12;
        int _field13;
        int _field14;
        int _field15;
        int _field16;
        int _field17;
        int _field18;
        int _field19;
        int _field20;
        int _field21;
        int _field22;
        CDStruct_1d8a7097 _field23;
    } *_constraintsData;
}

+ (unsigned int)_internalFormatOfReadBufferForContext:(ContextStateMirror_daaf80d0 *)arg1;
- (void).cxx_destruct;
- (void)registerFuncTable;
- (void)registerCommonFuncTable;
- (void)doRegisterFuncTable;
- (void)TexStorage2D;
- (void)_checkEXT_texture_storage;
- (void)GetSynciv;
- (void)GetInteger64v;
- (void)WaitSync;
- (void)ClientWaitSync;
- (void)DeleteSync;
- (void)IsSync;
- (void)FenceSync;
- (void)_checkAPPLE_sync;
- (void)CopyTextureLevels;
- (void)_checkAPPLE_copy_texture_levels;
- (void)FlushMappedBufferRange;
- (void)MapBufferRange;
- (void)_checkEXT_map_buffer_range;
- (void)PopGroupMarker;
- (void)PushGroupMarker;
- (void)InsertEventMarker;
- (void)_checkEXT_debug_marker;
- (void)LabelObject;
- (void)GetObjectLabel;
- (_Bool)_isValidObjectLabelType:(unsigned int)arg1;
- (void)_checkEXT_debug_label;
- (void)IsVertexArray;
- (void)GenVertexArrays;
- (void)DeleteVertexArrays;
- (void)BindVertexArray;
- (void)_checkOES_vertex_array_object;
- (void)DiscardFramebuffer;
- (void)InvalidateFramebuffer;
- (void)_checkEXT_discard_framebuffer;
- (void)UnmapBufferOES;
- (void)MapBufferOES;
- (void)GetBufferPointervOES;
- (void)_checkOES_mapbufferOrES3;
- (void)_checkOES_mapbuffer;
- (void)BlendFuncSeparate;
- (void)_checkOES_blend_func_separate;
- (void)BlendEquationSeparate;
- (void)_checkOES_blend_equation_separate;
- (void)BlendEquation;
- (void)_checkOES_blend_subtract;
- (void)ResolveMultisampleFramebuffer;
- (void)RenderbufferStorageMultisample;
- (void)_checkAPPLE_framebuffer_multisample;
- (void)RenderbufferStorage;
- (void)IsFramebuffer;
- (void)IsRenderbuffer;
- (void)GetRenderbufferParameteriv;
- (void)GetFramebufferAttachmentParameteriv;
- (void)GenRenderbuffers;
- (void)GenFramebuffers;
- (void)GenerateMipmap;
- (void)FramebufferTexture2D;
- (void)FramebufferRenderbuffer;
- (void)DeleteRenderbuffers;
- (void)DeleteFramebuffers;
- (void)CheckFramebufferStatus;
- (void)BindRenderbuffer;
- (void)BindFramebuffer;
- (_Bool)checkFramebufferTarget:(unsigned int)arg1;
- (_Bool)checkFramebufferAttachment:(unsigned int)arg1;
- (void)_checkOES_framebuffer_object;
- (void)Viewport;
- (void)TexSubImage2D;
- (void)TexParameterxv;
- (void)TexParameterx;
- (void)TexParameteriv;
- (void)TexParameteri;
- (void)TexParameterfv;
- (void)TexParameterf;
- (void)validateTexParam:(unsigned int)arg1 name:(unsigned int)arg2 enumVal:(unsigned int)arg3 intVal:(int)arg4;
- (void)TexImage2D;
- (void)StencilOp;
- (_Bool)_isStencilEnum:(unsigned int)arg1;
- (void)StencilMask;
- (void)StencilFunc;
- (void)Scissor;
- (void)SampleCoverage;
- (void)ReadPixels;
- (void)PolygonOffset;
- (void)PixelStorei;
- (void)LineWidthx;
- (void)LineWidth;
- (void)IsTexture;
- (void)IsEnabled;
- (void)IsBuffer;
- (void)Hint;
- (void)GetTexParameterxv;
- (void)GetTexParameteriv;
- (void)GetTexParameterfv;
- (void)GetTexParameter;
- (void)GetString;
- (void)GetError;
- (void)GetBufferParameteriv;
- (void)GetBufferParameter;
- (void)GetIntegerv;
- (void)GetFloatv;
- (void)GetFixedv;
- (void)GetBooleanv;
- (void)GetValue;
- (void)GenTextures;
- (void)GenBuffers;
- (void)FrontFace;
- (void)Flush;
- (void)Finish;
- (void)Enable;
- (void)DrawElementsInstanced;
- (void)DrawArraysInstanced;
- (void)VertexAttribDivisor;
- (BOOL)checkEXTInstancedArrays;
- (void)DrawElements;
- (void)DrawArrays;
- (void)checkForFramebufferFetch;
- (void)Disable;
- (void)Xable;
- (void)DepthRangex;
- (void)DepthRangef;
- (void)DepthMask;
- (void)DepthFunc;
- (void)DeleteTextures;
- (void)DeleteBuffers;
- (void)CullFace;
- (void)CopyTexSubImage2D;
- (void)CopyTexImage2D;
- (void)CompressedTexSubImage2D;
- (void)CompressedTexImage2D;
- (void)ColorMask;
- (void)ClearStencil;
- (void)ClearDepthf;
- (void)ClearColor;
- (void)Clear;
- (void)BufferSubData;
- (void)BufferData;
- (void)BlendFunc;
- (void)BindTexture;
- (void)BindBuffer;
- (void)ActiveTexture;
- (void)checkDeleteObjects:(id)arg1 withDesc:(id)arg2;
- (unsigned int)getMaxColorAttachment;
- (_Bool)checkPrimitiveMode:(unsigned int)arg1;
- (_Bool)checkElementType:(unsigned int)arg1;
- (_Bool)isCubeFace:(unsigned int)arg1;
- (int)getMaxTexLevels:(unsigned int)arg1;
- (_Bool)checkValidTextureTarget3D:(unsigned int)arg1;
- (_Bool)checkValidTextureTarget2D:(unsigned int)arg1 includingFaces:(_Bool)arg2;
- (_Bool)checkValidTextureTarget:(unsigned int)arg1 includingFaces:(_Bool)arg2;
- (_Bool)checkReadPixelsFormat:(unsigned int)arg1 andType:(unsigned int)arg2;
- (_Bool)checkRenderbufferInternalFormat:(unsigned int)arg1 includingDepthStencil:(_Bool)arg2;
- (_Bool)isPalettedFormat:(unsigned int)arg1;
- (_Bool)checkValidTextureFormat:(unsigned int)arg1 withType:(unsigned int)arg2 andInternalFormat:(unsigned int)arg3;
- (_Bool)_isValidExtensionFormat:(unsigned int)arg1 type:(unsigned int)arg2;
- (_Bool)_isValidSizedInternalFormat:(unsigned int)arg1 andFormat:(unsigned int)arg2 andType:(unsigned int)arg3;
- (_Bool)_isValidUnsizedFormat:(unsigned int)arg1 andType:(unsigned int)arg2;
- (_Bool)checkETCFormat:(unsigned int)arg1;
- (_Bool)checkTextureCompressedFormat:(unsigned int)arg1;
- (_Bool)checkTexStorageInternalFormat:(unsigned int)arg1;
- (_Bool)checkTextureType:(unsigned int)arg1;
- (_Bool)checkCopyTextureFormat:(unsigned int)arg1;
- (_Bool)checkTextureFormat:(unsigned int)arg1;
- (_Bool)checkTextureInternalFormat:(unsigned int)arg1;
- (_Bool)checkBufferUsage:(unsigned int)arg1;
- (_Bool)checkBufferTarget:(unsigned int)arg1;
- (void)addCommentFinding:(id)arg1;
- (void)addErrorFinding:(id)arg1;
- (void)_addInternalFinding:(id)arg1 withDetails:(id)arg2;
- (void)doEndBlock:(int)arg1;
- (void)doStartBlock:(int)arg1;
- (void)doProcessFunction:(struct DYGLValidatorProcFnData *)arg1;
- (void)addFunc:(SEL)arg1 forEnum:(unsigned int)arg2;
- (void)dealloc;
- (id)getHeuristic;
- (void)bindHeuristic:(id)arg1 andProfile:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DYGLValidatorES11 : DYGLValidatorES
{
}

- (void)doRegisterFuncTable;
- (void)WeightPointerOES;
- (void)MatrixIndexPointerOES;
- (void)LoadPaletteFromModelViewMatrixOES;
- (void)CurrentPaletteMatrixOES;
- (_Bool)_checkOES_matrix_palette;
- (void)DrawTexfvOES;
- (void)DrawTexfOES;
- (void)DrawTexxvOES;
- (void)DrawTexivOES;
- (void)DrawTexsvOES;
- (void)DrawTexxOES;
- (void)DrawTexiOES;
- (void)DrawTexsOES;
- (_Bool)_checkOES_draw_texture;
- (void)VertexPointer;
- (void)Translatex;
- (void)Translatef;
- (void)TexEnvx;
- (void)TexEnvi;
- (void)TexEnvf;
- (void)TexEnv;
- (void)TexCoordPointer;
- (void)ShadeModel;
- (void)Scalex;
- (void)Scalef;
- (void)Rotatex;
- (void)Rotatef;
- (void)PushMatrix;
- (void)PopMatrix;
- (void)PointSizePointerOES;
- (void)PointSize;
- (void)PointParameterx;
- (void)PointParameterf;
- (void)PointParameter;
- (void)Ortho;
- (void)NormalPointer;
- (void)Normal3x;
- (void)Normal3f;
- (void)MultiTexCoord4x;
- (void)MultiTexCoord4f;
- (void)MultiTexCoord4;
- (void)MultMatrixx;
- (void)MultMatrixf;
- (void)Materialxv;
- (void)Materialfv;
- (void)Materialx;
- (void)Materialf;
- (void)MaterialXv;
- (void)MaterialX;
- (void)Material;
- (void)MatrixMode;
- (void)LogicOp;
- (void)LoadMatrixx;
- (void)LoadMatrixf;
- (void)LoadIdentity;
- (void)LightModelxv;
- (void)LightModelfv;
- (void)LightModelx;
- (void)LightModelf;
- (void)LightModelV;
- (void)LightModel;
- (void)Lightxv;
- (void)Lightfv;
- (void)Lightx;
- (void)Lightf;
- (void)LightV;
- (void)Light;
- (void)GetTexEnvxv;
- (void)GetTexEnviv;
- (void)GetTexEnvfv;
- (void)GetTexEnv;
- (void)GetPointerv;
- (void)GetMaterialxv;
- (void)GetMaterialfv;
- (void)GetMaterial;
- (void)GetLightxv;
- (void)GetLightfv;
- (void)GetLight;
- (void)checkLightIndex;
- (void)GetClipPlane;
- (void)Frustum;
- (void)Fogx;
- (void)Fogf;
- (void)Fog;
- (void)EnableClientState;
- (void)DisableClientState;
- (void)XableClientState;
- (void)ColorPointer;
- (void)Color4ub;
- (void)Color4x;
- (void)Color4f;
- (void)ClipPlane;
- (void)ClientActiveTexture;
- (void)AlphaFuncx;
- (void)AlphaFunc;
- (void)_CheckTextureUnit;

@end

@interface DYGLValidatorES20 : DYGLValidatorES
{
}

- (void)doRegisterFuncTable;
- (void)ProgramUniform;
- (void)ProgramUniform4f;
- (void)ProgramUniform3f;
- (void)ProgramUniform2f;
- (void)ProgramUniform1f;
- (void)ValidateProgramPipeline;
- (void)UseProgramStages;
- (void)ProgramParameteri;
- (void)IsProgramPipeline;
- (void)GetProgramPipelineiv;
- (void)GetProgramPipelineInfoLog;
- (void)GenProgramPipelines;
- (void)DeleteProgramPipelines;
- (void)CreateShaderProgram;
- (void)BindProgramPipeline;
- (void)ActiveShaderProgram;
- (_Bool)_checkEXT_separate_shader_objects;
- (void)IsQuery;
- (void)GetQueryObjectuiv;
- (void)GetQuery;
- (void)GenQueries;
- (void)EndQuery;
- (void)DeleteQueries;
- (void)BeginQuery;
- (void)_checkQueryTarget:(unsigned int)arg1;
- (_Bool)_checkAPPLEOcclusionQueryBoolean;
- (void)VertexAttribPointer;
- (void)VertexAttrib4fv;
- (void)VertexAttrib3fv;
- (void)VertexAttrib2fv;
- (void)VertexAttrib1fv;
- (void)VertexAttrib4f;
- (void)VertexAttrib3f;
- (void)VertexAttrib2f;
- (void)VertexAttrib1f;
- (void)ValidateProgram;
- (void)UseProgram;
- (void)Uniform;
- (void)Uniform4f;
- (void)Uniform3f;
- (void)Uniform2f;
- (void)Uniform1f;
- (void)StencilOpSeparate;
- (void)StencilMaskSeparate;
- (void)StencilFuncSeparate;
- (_Bool)_checkStencilOp:(unsigned int)arg1;
- (void)_checkStencilFace:(unsigned int)arg1;
- (void)ShaderSource;
- (void)ShaderBinary;
- (void)ReleaseShaderCompiler;
- (void)LinkProgram;
- (void)GetVertexAttribPointerv;
- (void)GetVertexAttribiv;
- (void)GetVertexAttribfv;
- (void)GetVertexAttribV;
- (void)GetUniformLocation;
- (void)GetUniform;
- (void)GetShaderiv;
- (void)GetShaderSource;
- (void)GetShaderPrecisionFormat;
- (void)GetShaderInfoLog;
- (void)GetProgramiv;
- (void)GetProgramInfoLog;
- (void)GetAttribLocation;
- (void)GetAttachedShaders;
- (void)GetActiveUniform;
- (void)GetActiveAttrib;
- (void)EnableVertexAttribArray;
- (void)DisableVertexAttribArray;
- (void)DeleteShader;
- (void)DeleteProgram;
- (void)CreateShader;
- (void)CreateProgram;
- (void)CompileShader;
- (void)BlendColor;
- (void)AttachShader;
- (void)checkUniformLocation:(int)arg1;
- (void)checkVertexAttribIndex:(unsigned int)arg1;

@end

@interface DYGLValidatorES30 : DYGLValidatorES20
{
}

+ (_Bool)_isStencilRenderable:(unsigned int)arg1;
+ (_Bool)_isDepthRenderable:(unsigned int)arg1;
- (void)doRegisterFuncTable;
- (void)GetInternalFormativ;
- (void)TexStorage3D;
- (void)InvalidateSubFramebuffer;
- (void)ProgramParameteri;
- (void)ProgramBinary;
- (void)GetProgramBinary;
- (void)GetTransformFeedbackVarying;
- (void)TransformFeedbackVaryings;
- (void)BindBufferBase;
- (void)BindBufferRange;
- (void)_BindBufferIndexed;
- (void)ResumeTransformFeedback;
- (void)PauseTransformFeedback;
- (void)IsTransformFeedback;
- (void)GenTransformFeedbacks;
- (void)DeleteTransformFeedbacks;
- (void)BindTransformFeedback;
- (void)EndTransformFeedback;
- (void)BeginTransformFeedback;
- (void)GetSamplerParameterfv;
- (void)GetSamplerParameteriv;
- (void)SamplerParameterfv;
- (void)SamplerParameterf;
- (void)SamplerParameteriv;
- (void)SamplerParameteri;
- (void)SamplerParameter;
- (void)BindSampler;
- (void)IsSampler;
- (void)DeleteSamplers;
- (void)GenSamplers;
- (void)UniformBlockBinding;
- (void)GetActiveUniformBlockName;
- (void)GetActiveUniformBlockiv;
- (void)GetUniformBlockIndex;
- (void)GetActiveUniformsiv;
- (void)GetUniformIndices;
- (void)GetStringi;
- (void)ClearBufferfi;
- (void)ClearBufferfv;
- (void)ClearBufferuiv;
- (void)ClearBufferiv;
- (void)GetFragDataLocation;
- (void)GetVertexAttribIuiv;
- (void)GetVertexAttribIiv;
- (void)VertexAttribIPointer;
- (void)VertexAttribI4uiv;
- (void)VertexAttribI4iv;
- (void)VertexAttribI4ui;
- (void)VertexAttribI4i;
- (void)CopyBufferSubData;
- (void)FramebufferTextureLayer;
- (void)RenderbufferStorageMultisample;
- (_Bool)_isColorRenderable:(unsigned int)arg1;
- (void)BlitFramebuffer;
- (void)GetInteger64i_v;
- (void)GetIntegeri_v;
- (void)GetBufferParameteri64v;
- (void)CompressedTexSubImage3D;
- (void)CompressedTexImage3D;
- (void)CopyTexSubImage3D;
- (void)TexSubImage3D;
- (void)TexImage3D;
- (void)DrawRangeElements;
- (void)DrawBuffers;
- (void)ReadBuffer;

@end

