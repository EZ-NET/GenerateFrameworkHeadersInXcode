//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesConnectAppKit.framework/Versions/A/ITunesConnectAppKit
// UUID: 97B6A860-B1EA-3AAE-9963-88F15C91DD0B
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 300.20.0.0.0
//       Minimum Mac OS X version: 10.8.0
//                    SDK version: 10.8.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@interface WorkItemDisplayController : NSObject
{
    NSProgressIndicator *progressIndicator;
    NSTextField *statusMessageField;
    NSTextField *statusField;
    NSTextField *remainingField;
    NSTextField *remainingModeField;
    NSButton *cancelButton;
    NSBox *_container;
    NSString *_statusMessage;
    id <MZWorkItem> _item;
}

+ (id)duplicatePrototype;
+ (id)serializedPrototype;
+ (id)containerPrototype;
+ (void)setContainerPrototype:(id)arg1;
- (void)cancel:(id)arg1;
- (void)update;
- (void)setItem:(id)arg1;
- (id)item;
- (id)container;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithWorkItem:(id)arg1;
- (id)init;
- (void)initializeUserInterface;
- (void)clearInterface;
- (void)bindFieldsFromPrototype:(id)arg1 progressIndicator:(id *)arg2 status:(id *)arg3 statusMessage:(id *)arg4 timeRemaining:(id *)arg5 remainingMode:(id *)arg6 cancelButton:(id *)arg7;

@end

@interface WorkSeriesManagerDisplayController : NSObject
{
    NSScrollView *container;
    NSBox *workItemPrototypeBox;
    MZWorkSeriesManager *_manager;
    NSTimer *_updateTimer;
    NSMutableArray *_workItemViewMap;
}

- (id)manager;
- (id)workItemPrototypeBox;
- (void)setWorkItemPrototypeBox:(id)arg1;
- (void)clearCompletedWork:(id)arg1;
- (void)clearCompletedWork;
- (void)updateUI:(id)arg1;
- (void)synchronizeViewMapWithManager;
- (void)createControllersWithWorkSeries:(id)arg1;
- (BOOL)determineIfSubviewsDiffer:(id)arg1 newViews:(id)arg2;
- (id)createSubviewsWithSeries:(id)arg1;
- (id)createSubviewWithItem:(id)arg1;
- (id)cachedControllerForWorkItem:(id)arg1;
- (void)removeUnusedWorkItemsFromViewMap:(id)arg1;
- (id)mapSeriesToItems:(id)arg1;
- (void)shutdown;
- (void)start;
- (void)dealloc;
- (id)initWithManager:(id)arg1 container:(id)arg2;
- (id)init;

@end

@interface FlippedView : NSView
{
}

- (BOOL)isFlipped;

@end

@interface MZQuickLookUtilities : NSObject
{
}

+ (void)removeQuickLookImageForFileAtPath:(id)arg1 ofSize:(struct CGSize)arg2;
+ (id)quickLookImageForFileAtPath:(id)arg1 ofSize:(struct CGSize)arg2;
+ (void)initialize;

@end

@interface MZRequiredViewAwareWindow : NSWindow <NSWindowDelegate>
{
}

- (void)_windowDidBecomeKey:(id)arg1;
- (void)_windowDidResignKey:(id)arg1;
- (BOOL)makeFirstResponder:(id)arg1;
- (void)addRequiredWindowToFirstResponder;
- (void)addRequiredWindowToView:(id)arg1;
- (BOOL)clearChildRequiredWindowsExcludingView:(id)arg1;
- (void)removeRequiredWindow:(id)arg1;
- (id)findParentView:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (BOOL)isViewRequired:(id)arg1;
- (void)dealloc;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface MZRequiredViewTransientWindow : NSWindow
{
    id _view;
    BOOL _redisplaying;
    BOOL _displayRequiredTagline;
    double _taglineAlpha;
}

@property(nonatomic) BOOL displayRequiredTagline; // @synthesize displayRequiredTagline=_displayRequiredTagline;
- (id)view;
- (void)viewWindowDidResize:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(BOOL)arg2;
- (void)display;
- (void)setAnimationComplete:(id)arg1;
- (id)backgroundImagesWithTaglineAlphaIntervals:(unsigned long long)arg1 times:(id *)arg2;
- (void)setBackgroundColorWithImage:(id)arg1;
- (void)_redisplay;
- (void)_updateBackground;
- (void)_updateLayout;
- (id)viewForLayout;
- (id)backgroundPatternImageColor;
- (id)backgroundImageWithTaglineAlpha:(double)arg1;
- (struct CGRect)outlineRect;
- (struct CGSize)taglineSize;
- (id)taglineAttributedStringWithAplha:(double)arg1;
- (id)taglineString;
- (id)taglineAttributesWithAlpha:(double)arg1;
- (id)taglineFont;
- (void)dealloc;
- (id)initWithView:(id)arg1;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface MZHelpButton : NSButton
{
    NSString *_helpAnchorName;
}

@property(retain, nonatomic) NSString *helpAnchorName; // @synthesize helpAnchorName=_helpAnchorName;
- (void)dealloc;

@end

@interface NSView (ITunesConnectAppKitExtensions)
+ (void)configureViewExtensions;
- (void)REPLACEMENT_dealloc;
@property(retain, nonatomic) NSString *arrayControllerName;
@property(retain, nonatomic) NSString *referenceId;
@end

@interface NSAlert (ITunesConnectAppKitExtensions)
- (BOOL)isSuppressionRequested;
- (void)setSuppressionMessage:(id)arg1;
@end

@interface NSMenu (ITunesConnectAppKitExtensions)
+ (id)addItem:(id)arg1 toMenu:(id)arg2;
+ (id)addSubItem:(id)arg1 toMenu:(id)arg2;
+ (id)addSubItem:(id)arg1 toMenu:(id)arg2 wasAdded:(char *)arg3;
+ (id)addItem:(id)arg1 toMenu:(id)arg2 directive:(int)arg3 relativeTo:(id)arg4;
+ (id)menuItemWithTitle:(id)arg1 inMenu:(id)arg2;
- (id)addMenuItem:(id)arg1 target:(id)arg2 selector:(SEL)arg3 keyEquivalent:(id)arg4;
- (id)menuItemWithTitle:(id)arg1;
@end

