//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/HealthDaemonExtensions.framework/HealthDaemonExtensions
// UUID: 5693B883-B07A-3BD2-9CBF-7487EB3481F7
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 136.2.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol HDActivityCacheManagerObserver <NSObject>
- (void)activityCacheManager:(HDActivityCacheManager *)arg1 changedTodayActivityCache:(HKActivityCache *)arg2 updatedFields:(unsigned long long)arg3 error:(NSError *)arg4;

@optional
- (void)activityCacheManagerVoidedActivityCaches:(HDActivityCacheManager *)arg1;
- (void)activityCacheManager:(HDActivityCacheManager *)arg1 changedYesterdayActivityCache:(HKActivityCache *)arg2 updatedFields:(unsigned long long)arg3 error:(NSError *)arg4;
@end

@protocol HDDataObserver <NSObject>
- (void)samplesAdded:(NSArray *)arg1 anchor:(NSNumber *)arg2;

@optional
- (void)samplesOfTypeWereRemoved:(HKSampleType *)arg1;
- (void)samplesJournaled:(NSArray *)arg1 type:(HKSampleType *)arg2;
@end

@protocol HDDatabaseProtectedDataObserver <NSObject>
- (void)database:(id <HDHealthDatabase>)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
@end

@protocol HDDiagnosticObject <NSObject>
- (NSString *)diagnosticDescription;
@end

@protocol HDHealthDaemonReadyObserver <NSObject>
- (void)daemonReady:(id <HDHealthDaemon>)arg1;
@end

@protocol HDHealthPlugin <NSObject>
- (id)initWithHealthDaemon:(id <HDHealthDaemon>)arg1;

@optional
- (void)invalidateActivityAlertSuppressionForBundleIdentifier:(NSString *)arg1;
- (void)suppressActivityAlertsForBundleIdentifier:(NSString *)arg1 reason:(long long)arg2;
- (NSArray *)dataCollectors;
- (HDQueryServer *)queryServerForUUID:(NSUUID *)arg1 serverDataObject:(_HKQueryServerDataObject *)arg2 queryClass:(Class)arg3 clientProxy:(id)arg4 client:(HDClient *)arg5 healthDaemon:(id <HDHealthDaemon>)arg6 queryDelegate:(id <HDQueryServerDelegate>)arg7;
- (void)setDataCollectionOptions:(NSDictionary *)arg1 forKey:(NSString *)arg2 type:(HKSampleType *)arg3 clientUUID:(NSUUID *)arg4;
- (_Bool)daemonDidReceiveNotification:(const char *)arg1;
@end

@protocol HKExtendedServerInterface <NSObject>
- (void)resetNanoSyncWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)forceNanoSyncWithPullRequest:(_Bool)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)addAchievement:(HKAchievement *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)markAchievementAsViewed:(HKAchievement *)arg1 completion:(void (^)(HKAchievement *, NSError *))arg2;
- (void)fetchNumberOfUnviewedAchievementsWithCompletion:(void (^)(long long, NSError *))arg1;
- (void)markAchievementsAlerted:(NSArray *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)fetchUnalertedAchievementsWithCompletion:(void (^)(NSArray *, NSError *))arg1;
- (void)fetchAchievementsWithCompletedDateBetweenStart:(NSDate *)arg1 end:(NSDate *)arg2 completion:(void (^)(NSArray *, NSError *))arg3;
- (void)registerForAchievementNotificationsAndFetchUnalertedCountWithCompletion:(void (^)(long long, NSError *))arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@interface HDHealthExtensionsServer : NSObject <HDDiagnosticObject, HKExtendedServerInterface>
{
    _Bool _registeredForAchievementNotifications;
    id <HDHealthExtensionsServerDelegate> _delegate;
    HDClient *_client;
    id <HDHealthDaemon> _healthDaemon;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)serverWithClient:(id)arg1 healthDaemon:(id)arg2 delegate:(id)arg3 error:(id *)arg4;
+ (_Bool)_shouldAcceptConnectionForClient:(id)arg1 error:(id *)arg2;
@property(nonatomic) _Bool registeredForAchievementNotifications; // @synthesize registeredForAchievementNotifications=_registeredForAchievementNotifications;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(retain, nonatomic) HDClient *client; // @synthesize client=_client;
@property(nonatomic) __weak id <HDHealthExtensionsServerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)diagnosticDescription;
- (void)resetNanoSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)forceNanoSyncWithPullRequest:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addAchievement:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)markAchievementAsViewed:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchNumberOfUnviewedAchievementsWithCompletion:(CDUnknownBlockType)arg1;
- (void)markAchievementsAlerted:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchUnalertedAchievementsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchAchievementsWithCompletedDateBetweenStart:(id)arg1 end:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)registerForAchievementNotificationsAndFetchUnalertedCountWithCompletion:(CDUnknownBlockType)arg1;
- (void)_achievementsAdded:(id)arg1;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (id)clientInterface;
- (id)serverInterface;
- (void)dealloc;
- (id)initWithClient:(id)arg1 healthDaemon:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDActivityCacheManager : NSObject <HDDataObserver, HDDatabaseProtectedDataObserver, HDHealthDaemonReadyObserver>
{
    HKQuantityType *_activeEnergyBurnedType;
    HKQuantityType *_activeHoursType;
    HKQuantityType *_briskMinutesType;
    HKQuantityType *_calorieGoalType;
    HKQuantityType *_stepCountType;
    HKQuantityType *_walkingAndRunningDistanceType;
    HKWorkoutType *_workoutType;
    NSSet *_allTypes;
    HKQuantity *_energyBurnedGoal;
    NSDate *_energyBurnedGoalDate;
    NSUUID *_lastStartedRestoreUUID;
    _HKDelayedOperation *_updateCachesOperation;
    HKActivityCache *_yesterdayActivityCache;
    id <HDHealthDaemon> _healthDaemon;
    NSObject<OS_dispatch_queue> *_ivarQueue;
    NSObject<OS_dispatch_queue> *_dataQueue;
    NSObject<OS_dispatch_queue> *_observerQueue;
    NSHashTable *_observers;
    HKActivityCache *_todayActivityCache;
}

@property(retain, nonatomic) HKActivityCache *todayActivityCache; // @synthesize todayActivityCache=_todayActivityCache;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *observerQueue; // @synthesize observerQueue=_observerQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dataQueue; // @synthesize dataQueue=_dataQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *ivarQueue; // @synthesize ivarQueue=_ivarQueue;
@property(nonatomic) __weak id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(retain, nonatomic) HKActivityCache *yesterdayActivityCache; // @synthesize yesterdayActivityCache=_yesterdayActivityCache;
- (void).cxx_destruct;
@property(readonly, nonatomic) HKActivityCache *currentActivityCache;
- (void)_dataQueue_saveActivityCache:(id)arg1;
- (void)_dataQueue_tryIncrementalUpdateCachesFromDatabase;
- (void)_updateCachedEnergyBurnedGoal:(id)arg1 date:(id)arg2;
- (_Bool)_updateEnergyBurnedGoalForActivityCache:(id)arg1;
- (void)_dataQueue_tryPrimeCaches;
- (void)_digestSample:(id)arg1 anchor:(long long)arg2 todayActivityCache:(id)arg3 todayUpdatedFields:(unsigned long long *)arg4 yesterdayActivityCache:(id)arg5 yesterdayUpdatedFields:(unsigned long long *)arg6;
- (void)_updateActivityCache:(id)arg1 withSample:(id)arg2 anchor:(long long)arg3 updatedFields:(unsigned long long *)arg4;
- (void)_resetCaches;
- (void)_updateCaches;
- (void)_notifyObservers:(id)arg1 didUpdateYesterdayActivityCache:(id)arg2 updatedFields:(unsigned long long)arg3 error:(id)arg4;
- (void)_notifyObservers:(id)arg1 didUpdateTodayActivityCache:(id)arg2 updatedFields:(unsigned long long)arg3 error:(id)arg4;
- (void)_notifyObserversVoidedActivityCaches:(id)arg1;
- (void)removeActivityCacheObserver:(id)arg1;
- (void)addActivityCacheObserver:(id)arg1;
- (void)_dataQueue_nanoSyncRestoreDidFinish:(id)arg1;
- (void)_nanoSyncRestoreDidFinish:(id)arg1;
- (void)_dataQueue_nanoSyncRestoreWillBegin:(id)arg1;
- (void)_nanoSyncRestoreWillBegin:(id)arg1;
- (void)_registerForSignificantTimeChangeNotification;
- (void)_dataQueue_resetCachesAfterSignificantTimeChange;
- (void)_resetCachesAfterSignificantTimeChange;
- (void)samplesOfTypeWereRemoved:(id)arg1;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)daemonReady:(id)arg1;
- (void)dealloc;
- (id)initWithHealthDaemon:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDHealthExtensionsPlugin : NSObject <NSXPCListenerDelegate, HDHealthPlugin, HDDiagnosticObject>
{
    id <HDHealthDaemon> _healthDaemon;
    NSXPCListener *_listener;
    NSMutableArray *_servers;
}

@property(retain, nonatomic) NSMutableArray *servers; // @synthesize servers=_servers;
@property(retain, nonatomic) NSXPCListener *listener; // @synthesize listener=_listener;
@property(readonly, nonatomic) __weak id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
- (void).cxx_destruct;
- (id)diagnosticDescription;
- (id)serverWithClient:(id)arg1 error:(id *)arg2;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)dealloc;
- (id)initWithHealthDaemon:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDCurrentActivityCacheQueryServer : HDQueryServer <HDActivityCacheManagerObserver>
{
    double _createdTime;
    double _firstResultsTime;
    HDActivityCacheManager *_activityCacheManager;
}

- (void).cxx_destruct;
- (void)activityCacheManager:(id)arg1 changedTodayActivityCache:(id)arg2 updatedFields:(unsigned long long)arg3 error:(id)arg4;
- (_Bool)_shouldExecuteWhenProtectedDataIsUnavailable;
- (_Bool)_shouldListenForUpdates;
- (void)_queue_stop;
- (void)_queue_start;
- (id)initWithQueryUUID:(id)arg1 dataObject:(id)arg2 clientProxy:(id)arg3 client:(id)arg4 delegate:(id)arg5 healthDaemon:(id)arg6 activityCacheManager:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

