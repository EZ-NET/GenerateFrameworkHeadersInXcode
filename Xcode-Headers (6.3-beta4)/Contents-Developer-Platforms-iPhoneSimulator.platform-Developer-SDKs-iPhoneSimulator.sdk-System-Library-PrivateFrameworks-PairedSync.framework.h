//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PairedSync.framework/PairedSync
// UUID: 0E63394A-69D0-325C-8FA5-A87F800A407B
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 37.0.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@protocol PSYActivity <NSObject>
- (oneway void)beginSyncWithOptions:(PSYSyncOptions *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
@end

@protocol PSYActivityProgress <NSObject>
- (oneway void)activityDidUpdateProgress:(float)arg1;
- (oneway void)activityDidCompleteSending;
@end

@protocol PSYConnectionInterface <NSObject>
- (oneway void)startSyncWithOptions:(PSYOptions *)arg1;
@end

@protocol PSYDeviceSyncStateObserver <NSObject>
- (void)deviceSyncStateDidChange:(unsigned long long)arg1;
@end

@protocol PSYProgressClient <NSObject>
- (oneway void)noteClientNotEntitled:(NSString *)arg1;
- (oneway void)scheduledActivitiesProgressStateChanged:(long long)arg1;
- (oneway void)scheduledActivitiesDidComplete;
- (oneway void)scheduledActivityProgressChanged:(float)arg1 totalProgress:(float)arg2;
- (oneway void)scheduledActivityChanged:(NSString *)arg1 fromActivity:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol PSYProgressServer <NSObject>
- (oneway void)getCurrentStateWithCompletion:(void (^)(long long, NSString *, float, float, NSDictionary *))arg1;
@end

@protocol PSYSyncRestrictionProviderDelegate <NSObject>
- (void)syncRestrictionProviderDidChangeRestriction:(PSYSyncRestrictionProvider *)arg1;
@end

@protocol PSYToolInterface <NSObject>
- (oneway void)clearCurrentResumeContext;
- (oneway void)startSyncWithOptions:(PSYOptions *)arg1;
- (oneway void)getOrderedActivityInfosWithCompletion:(void (^)(NSArray *))arg1;
@end

@interface PSYSyncCoordinator : NSObject <NSXPCListenerDelegate, PSYActivity, PSYSyncRestrictionProviderDelegate>
{
    NSXPCListener *_listener;
    CDUnknownBlockType _pendingCompletion;
    _Bool _isFullSyncInProgress;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    struct _opaque_pthread_mutex_t _delegateLock;
    id <PSYSyncCoordinatorDelegate> _delegate;
    PSYSyncRestrictionProvider *_syncRestrictionProvider;
    _Bool _hasStartedListening;
    NSString *_serviceName;
    NSXPCConnection *_connection;
    unsigned long long _syncRestriction;
}

+ (id)syncCoordinatorWithServiceName:(id)arg1;
+ (void)initialize;
@property unsigned long long syncRestriction; // @synthesize syncRestriction=_syncRestriction;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(readonly, copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (void).cxx_destruct;
- (void)exitForTestInput:(id)arg1;
- (void)beginDryRunSyncWithOptions:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)syncRestrictionProviderDidChangeRestriction:(id)arg1;
- (_Bool)savePersistentState;
- (void)clearPersistentState;
- (void)setPersistedTransactionID:(id)arg1;
- (id)persistedTransactionID;
- (void)setPersistedState:(long long)arg1;
- (long long)persistedState;
- (void)setPersistedCompletionError:(id)arg1;
- (id)persistedCompletionError;
- (id)defaultsCompletionErrorKey;
- (id)defaultsPersistentStateKey;
- (id)defaultsTransactionIDKey;
- (void)_cleanup;
- (void)performDelegateBlock:(CDUnknownBlockType)arg1;
@property(nonatomic) __weak id <PSYSyncCoordinatorDelegate> delegate;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)reportProgress:(double)arg1;
- (void)syncDidFailWithError:(id)arg1;
- (void)syncDidComplete;
- (void)syncDidCompleteSending;
- (id)progressHandler;
- (oneway void)beginSyncWithOptions:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)initWithServiceName:(id)arg1 serviceLookupPath:(id)arg2;
- (id)initWithServiceName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSYTestInput : NSObject <NSSecureCoding>
{
    long long _action;
}

+ (id)testInputWithAction:(long long)arg1;
+ (_Bool)supportsSecureCoding;
@property(nonatomic) long long action; // @synthesize action=_action;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface PSYActivityInfo : NSObject <NSSecureCoding>
{
    NSString *_label;
    NSString *_machServiceName;
    NSArray *_dependencies;
    NSString *_priority;
    NSNumber *_timeoutSeconds;
    NSString *_backboardPrelaunchBundleIdentifier;
}

+ (_Bool)supportsSecureCoding;
+ (id)activityWithPlist:(id)arg1;
@property(copy, nonatomic) NSString *backboardPrelaunchBundleIdentifier; // @synthesize backboardPrelaunchBundleIdentifier=_backboardPrelaunchBundleIdentifier;
@property(copy, nonatomic) NSNumber *timeoutSeconds; // @synthesize timeoutSeconds=_timeoutSeconds;
@property(copy, nonatomic) NSString *priority; // @synthesize priority=_priority;
@property(copy, nonatomic) NSArray *dependencies; // @synthesize dependencies=_dependencies;
@property(copy, nonatomic) NSString *machServiceName; // @synthesize machServiceName=_machServiceName;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface PSYDeviceSyncStateProvider : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_observers;
    unsigned long long _syncState;
    struct _opaque_pthread_mutex_t _syncStateLock;
    int _notifyToken;
    unsigned long long _notifyState;
}

+ (id)sharedSyncStateProvider;
- (void).cxx_destruct;
- (void)deviceSyncStateChangedRemotely;
- (unsigned long long)syncState;
- (void)enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)init;

@end

@interface PSYOptions : NSObject <NSSecureCoding>
{
    _Bool _resumePendingJobs;
    _Bool _resetDeviceSyncState;
    _Bool _dryRun;
    NSURL *_activityInfoDirectory;
    unsigned long long _terminationJobCount;
    NSArray *_testInputs;
    NSArray *_jobs;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSArray *jobs; // @synthesize jobs=_jobs;
@property(copy, nonatomic) NSArray *testInputs; // @synthesize testInputs=_testInputs;
@property(nonatomic) unsigned long long terminationJobCount; // @synthesize terminationJobCount=_terminationJobCount;
@property(nonatomic) _Bool dryRun; // @synthesize dryRun=_dryRun;
@property(nonatomic, getter=shouldResetDeviceSyncState) _Bool resetDeviceSyncState; // @synthesize resetDeviceSyncState=_resetDeviceSyncState;
@property(copy, nonatomic) NSURL *activityInfoDirectory; // @synthesize activityInfoDirectory=_activityInfoDirectory;
@property(nonatomic, getter=shouldResumePendingJobs) _Bool resumePendingJobs; // @synthesize resumePendingJobs=_resumePendingJobs;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface PSYSyncRestrictionProvider : NSObject <PSYDeviceSyncStateObserver>
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _hasReceivedStartSync;
    NSURL *_pairingDataURL;
    NSURL *_serviceDirectory;
    struct _opaque_pthread_mutex_t _serviceDirectoryLock;
    id <PSYSyncRestrictionProviderDelegate> _delegate;
    NSString *_serviceName;
    unsigned long long _syncRestriction;
}

@property unsigned long long syncRestriction; // @synthesize syncRestriction=_syncRestriction;
@property(readonly, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(nonatomic) __weak id <PSYSyncRestrictionProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)unregisterForFirstKeybagUnlockNotification;
- (void)registerForFirstKeybagUnlockNotification;
- (void)keybagStateChanged;
- (void)deviceSyncStateDidChange:(unsigned long long)arg1;
- (void)pairingUpdated;
- (void)_reloadPersistentData;
- (void)_reloadPairingStorePath;
- (unsigned long long)_restrictionForCurrentState;
- (void)_updateSyncRestrictionIfNeeded;
- (id)_dataFileName;
- (void)_didUpdatePairingDataStoreURL:(id)arg1;
- (void)_createPairingDataDirectoryIfNeeded;
- (id)_pairingDataURL;
- (id)pairingDataURL;
- (void)_setServiceDirectory:(id)arg1;
- (id)_serviceDirectory;
- (id)serviceDirectory;
- (void)serviceHasReceivedStartSync;
- (void)unregisterForNotifications;
- (void)registerForNotifications;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithServiceName:(id)arg1 queue:(id)arg2 delegate:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSYConnection : NSObject
{
    _Bool _valid;
    id <PSYConnectionDelegate> _delegate;
    PSYOptions *_options;
    NSXPCConnection *_connection;
}

@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) PSYOptions *options; // @synthesize options=_options;
@property(readonly, nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(nonatomic) __weak id <PSYConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_resumeConnectionIfPossible;
- (void)_handleConnectionInvalidation;
- (void)_handleConnectionInterruption;
- (id)remoteConnection;
- (void)startSyncWithOptions:(id)arg1;
- (void)startSync;
- (id)init;

@end

@interface PSYProgressObserver : NSObject
{
    NSMutableDictionary *_failedActivities;
    id <PSYProgressObserverDelegate> _delegate;
    long long _progressObserverState;
    NSString *_activityLabel;
    double _activityProgress;
    double _totalProgress;
    NSDictionary *_activityErrors;
    PSProgressClient *_progressClient;
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) PSProgressClient *progressClient; // @synthesize progressClient=_progressClient;
@property(readonly, copy, nonatomic) NSDictionary *activityErrors; // @synthesize activityErrors=_activityErrors;
@property(nonatomic) double totalProgress; // @synthesize totalProgress=_totalProgress;
@property(nonatomic) double activityProgress; // @synthesize activityProgress=_activityProgress;
@property(retain, nonatomic) NSString *activityLabel; // @synthesize activityLabel=_activityLabel;
@property(readonly, nonatomic) long long progressObserverState; // @synthesize progressObserverState=_progressObserverState;
@property(nonatomic) __weak id <PSYProgressObserverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_resetProgress;
- (void)setProgressObserverState:(long long)arg1;
- (void)_connectionInterrupted;
- (void)_scheduledJobsDidComplete;
- (void)_currentActivityChanged:(id)arg1 fromActivity:(id)arg2 error:(id)arg3;
- (void)_setCurrentActivityProgress:(float)arg1 totalProgress:(float)arg2;
- (void)_updateState;
- (id)initWithQueue:(id)arg1;
- (id)init;

@end

@interface PSProgressClient : NSObject <PSYProgressClient>
{
    NSObject<OS_dispatch_queue> *_queue;
    PSYProgressObserver *_progressObserver;
}

- (void).cxx_destruct;
- (oneway void)noteClientNotEntitled:(id)arg1;
- (oneway void)scheduledActivitiesProgressStateChanged:(long long)arg1;
- (oneway void)scheduledActivitiesDidComplete;
- (oneway void)scheduledActivityChanged:(id)arg1 fromActivity:(id)arg2 error:(id)arg3;
- (oneway void)scheduledActivityProgressChanged:(float)arg1 totalProgress:(float)arg2;
- (id)initWithQueue:(id)arg1 progressObserver:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSYSyncOptions : NSObject <NSSecureCoding>
{
    _Bool _dryRun;
    _Bool _terminateDuringDryRun;
    NSUUID *_transactionID;
    PSYTestInput *_testInput;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) PSYTestInput *testInput; // @synthesize testInput=_testInput;
@property(nonatomic) _Bool terminateDuringDryRun; // @synthesize terminateDuringDryRun=_terminateDuringDryRun;
@property(nonatomic) _Bool dryRun; // @synthesize dryRun=_dryRun;
@property(copy, nonatomic) NSUUID *transactionID; // @synthesize transactionID=_transactionID;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

