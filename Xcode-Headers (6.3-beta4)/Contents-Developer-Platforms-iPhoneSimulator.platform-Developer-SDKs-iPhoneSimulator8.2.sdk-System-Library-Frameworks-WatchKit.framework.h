//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    CDStruct_c3b9c2ee _field1;
    CDStruct_c3b9c2ee _field2;
} CDStruct_90e2a262;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/WatchKit.framework/WatchKit
// UUID: 3A8D7051-E46F-3AF5-B2E8-2101EE04CE23
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 313.10.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSKeyedArchiverDelegate <NSObject>

@optional
- (void)archiverDidFinish:(NSKeyedArchiver *)arg1;
- (void)archiverWillFinish:(NSKeyedArchiver *)arg1;
- (void)archiver:(NSKeyedArchiver *)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (void)archiver:(NSKeyedArchiver *)arg1 didEncodeObject:(id)arg2;
- (id)archiver:(NSKeyedArchiver *)arg1 willEncodeObject:(id)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol PKServiceDelegate <NSObject>
- (id)rootObjectForPlugIn:(NSString *)arg1;
@end

@protocol SPCompanionAppServerProtocol <NSObject>
- (void)launchGizmoAppForCompanionAppWithIdentifier:(NSString *)arg1 withURLString:(NSString *)arg2;
- (void)remoteInterfaceDidDeactivate:(NSString *)arg1;
- (void)launchCompanionAppForGizmoAppWithIdentifier:(NSString *)arg1 withUserInfoData:(NSData *)arg2 reply:(void (^)(NSDictionary *, NSError *, long long, NSString *))arg3;
- (void)sendTimingData:(NSDictionary *)arg1 identifier:(NSString *)arg2 clientIdentifiers:(NSArray *)arg3 index:(long long)arg4;
- (void)fetchNotificationForNotificationID:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSData *, NSError *))arg2;
- (void)sendData:(NSData *)arg1 identifier:(NSString *)arg2 clientIdentifiers:(NSArray *)arg3;
- (void)sendCacheRequest:(NSData *)arg1 identifier:(NSString *)arg2;
@end

@protocol SPLocalApplicationProtocol <NSObject>
- (void)receiveData:(NSData *)arg1;
@end

@protocol SPLocalServerProtocol <NSObject>
- (void)getAlwaysInstallWithCompletion:(void (^)(_Bool))arg1;
- (void)setAlwaysInstall:(NSNumber *)arg1;
- (void)setLogLevel:(NSDictionary *)arg1;
- (void)installProvisioningProfileWithName:(NSString *)arg1 profileData:(NSData *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)wakeExtensionForWatchApp:(NSString *)arg1;
- (void)hideUserNotification;
- (void)showUserNotification:(long long)arg1 applicationName:(NSString *)arg2;
- (void)getCompanionExtensionPIDForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, int))arg2;
- (void)getSockPuppetAppRunningStatusForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, _Bool))arg2;
- (void)terminateSockPuppetAppForCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSError *))arg2;
- (void)launchSockPuppetAppForCompanionAppWithIdentifier:(NSString *)arg1 options:(NSDictionary *)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:(NSString *)arg1 completion:(void (^)(NSURL *, NSError *))arg2;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithIdentifier:(NSString *)arg1 completion:(void (^)(NSURL *, NSError *))arg2;
- (void)fetchApplicationWithContainingApplicationBundleID:(NSString *)arg1 completion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)removeApplicationWithIdentifier:(NSString *)arg1 installer:(NSString *)arg2 completion:(void (^)(long long))arg3;
- (void)installApplicationWithIdentifier:(NSString *)arg1 installer:(NSString *)arg2 completion:(void (^)(long long))arg3;
- (void)cancelPendingInstallations;
- (void)installAllApplicationsForProcessWithIdentifier:(NSString *)arg1;
- (void)fetchInstalledGlancesWithCompletion:(void (^)(NSDictionary *))arg1;
- (void)fetchInstalledApplicationsWithCompletion:(void (^)(NSDictionary *))arg1;
@end

@protocol SPRemoteInterfaceProtocol <NSObject>
- (void)dataInterfaceWillResignActive:(NSString *)arg1;
- (void)dataInterfaceDidBecomeActive:(NSString *)arg1;
- (void)applicationIsStillActive;
- (void)applicationWillResignActive:(NSString *)arg1;
- (void)applicationDidBecomeActive:(NSString *)arg1;
- (void)applicationDidFinishConnecting:(NSString *)arg1;
- (void)applicationDidTerminate:(NSString *)arg1;
- (void)receiveProtoData:(NSData *)arg1 fromIdentifier:(NSString *)arg2;
- (void)receiveData:(NSData *)arg1 fromIdentifier:(NSString *)arg2;
@end

@interface SPComplicationData : NSObject <NSSecureCoding>
{
    NSDate *_timestamp;
    double _timeToLive;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) double timeToLive; // @synthesize timeToLive=_timeToLive;
@property(retain, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface SPProtoSockPuppetObject : PBCodable <NSCopying>
{
    double _ndouble;
    long long _nint64;
    unsigned long long _nuint64;
    SPProtoCacheMessage *_cacheMessage;
    NSString *_key;
    float _nfloat;
    int _nint32;
    unsigned int _nuint32;
    NSData *_object;
    int _subtype;
    NSString *_text;
    int _type;
    _Bool _nbool;
    struct {
        unsigned int ndouble:1;
        unsigned int nint64:1;
        unsigned int nuint64:1;
        unsigned int nfloat:1;
        unsigned int nint32:1;
        unsigned int nuint32:1;
        unsigned int subtype:1;
        unsigned int nbool:1;
    } _has;
}

@property(retain, nonatomic) NSData *object; // @synthesize object=_object;
@property(nonatomic) _Bool nbool; // @synthesize nbool=_nbool;
@property(nonatomic) unsigned int nuint32; // @synthesize nuint32=_nuint32;
@property(nonatomic) unsigned long long nuint64; // @synthesize nuint64=_nuint64;
@property(nonatomic) int nint32; // @synthesize nint32=_nint32;
@property(nonatomic) long long nint64; // @synthesize nint64=_nint64;
@property(nonatomic) float nfloat; // @synthesize nfloat=_nfloat;
@property(nonatomic) double ndouble; // @synthesize ndouble=_ndouble;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
@property(retain, nonatomic) SPProtoCacheMessage *cacheMessage; // @synthesize cacheMessage=_cacheMessage;
@property(nonatomic) int subtype; // @synthesize subtype=_subtype;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasObject;
@property(nonatomic) _Bool hasNbool;
@property(nonatomic) _Bool hasNuint32;
@property(nonatomic) _Bool hasNuint64;
@property(nonatomic) _Bool hasNint32;
@property(nonatomic) _Bool hasNint64;
@property(nonatomic) _Bool hasNfloat;
@property(nonatomic) _Bool hasNdouble;
@property(readonly, nonatomic) _Bool hasText;
@property(readonly, nonatomic) _Bool hasKey;
@property(readonly, nonatomic) _Bool hasCacheMessage;
@property(nonatomic) _Bool hasSubtype;

@end

@interface WKAccessibilityImageRegion : NSObject
{
    NSString *_label;
    struct CGRect _frame;
}

@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
- (void).cxx_destruct;

@end

@interface WKInterfaceObject : NSObject
{
    NSString *_interfaceProperty;
    NSString *_viewControllerID;
    NSString *_propertyIndex;
    long long _tableIndex;
    long long _rowIndex;
}

@property(nonatomic) long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) long long tableIndex; // @synthesize tableIndex=_tableIndex;
@property(retain, nonatomic) NSString *propertyIndex; // @synthesize propertyIndex=_propertyIndex;
@property(copy, nonatomic) NSString *viewControllerID; // @synthesize viewControllerID=_viewControllerID;
@property(copy, nonatomic) NSString *interfaceProperty; // @synthesize interfaceProperty=_interfaceProperty;
- (void).cxx_destruct;
- (void)setRotation:(double)arg1;
- (void)setHeight:(double)arg1;
- (void)setWidth:(double)arg1;
- (void)setAlpha:(double)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)_sendValueChanged:(id)arg1 forProperty:(id)arg2;
- (void)_sendValueChanged:(id)arg1;
- (void)_setImageNamed:(id)arg1 forProperty:(id)arg2;
- (void)_setImageData:(id)arg1 forProperty:(id)arg2;
- (void)_setImage:(id)arg1 forProperty:(id)arg2;
- (void)_setupWithDescription:(id)arg1 forController:(id)arg2;
- (id)_initWithInterfaceProperty:(id)arg1 viewControllerID:(id)arg2 propertyIndex:(long long)arg3 tableIndex:(long long)arg4 rowIndex:(long long)arg5;
- (id)init;
- (void)setAccessibilityImageRegions:(id)arg1;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (void)setIsAccessibilityElement:(_Bool)arg1;
- (void)setAccessibilityValue:(id)arg1;
- (void)setAccessibilityHint:(id)arg1;
- (void)setAccessibilityLabel:(id)arg1;

@end

@interface WKInterfaceDevice : NSObject
{
    double _screenScale;
    NSString *_preferredContentSizeCategory;
    struct CGRect _screenBounds;
}

+ (id)currentDevice;
@property(copy, nonatomic) NSString *preferredContentSizeCategory; // @synthesize preferredContentSizeCategory=_preferredContentSizeCategory;
@property(nonatomic) double screenScale; // @synthesize screenScale=_screenScale;
@property(nonatomic) struct CGRect screenBounds; // @synthesize screenBounds=_screenBounds;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *cachedImages;
- (void)removeAllCachedImages;
- (void)removeCachedImageWithName:(id)arg1;
- (_Bool)addCachedImageWithData:(id)arg1 name:(id)arg2;
- (_Bool)addCachedImage:(id)arg1 name:(id)arg2;

@end

@interface SPProtoCacheAsset : PBCodable <NSCopying>
{
    double _accessDate;
    unsigned long long _size;
    NSString *_key;
    unsigned int _state;
}

@property(nonatomic) double accessDate; // @synthesize accessDate=_accessDate;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(nonatomic) unsigned int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface SPPluginDelegate : NSObject <PKServiceDelegate>
{
}

- (id)rootObjectForPlugIn:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SPWeatherComplicationData : SPComplicationData <NSSecureCoding>
{
    NSString *_temperatureText;
    NSString *_locationText;
    NSString *_currentConditionsText;
    long long _currentConditionsEnum;
    NSString *_highLowText;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *highLowText; // @synthesize highLowText=_highLowText;
@property(nonatomic) long long currentConditionsEnum; // @synthesize currentConditionsEnum=_currentConditionsEnum;
@property(retain, nonatomic) NSString *currentConditionsText; // @synthesize currentConditionsText=_currentConditionsText;
@property(retain, nonatomic) NSString *locationText; // @synthesize locationText=_locationText;
@property(retain, nonatomic) NSString *temperatureText; // @synthesize temperatureText=_temperatureText;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface SPCacheAsset : NSObject
{
    NSString *_key;
    unsigned long long _state;
    unsigned long long _size;
    double _accessDate;
}

+ (id)fromProto:(id)arg1;
+ (id)toProto:(id)arg1;
@property(nonatomic) double accessDate; // @synthesize accessDate=_accessDate;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 size:(unsigned long long)arg2 state:(unsigned long long)arg3 accessDate:(id)arg4;

@end

@interface SPAssetCacheAssets : NSObject
{
    NSMutableArray *_assets;
}

+ (id)fromProto:(id)arg1;
+ (id)toProto:(id)arg1;
@property(retain, nonatomic) NSMutableArray *assets; // @synthesize assets=_assets;
- (void).cxx_destruct;
- (void)addAsset:(id)arg1;
- (id)init;

@end

@interface SPAssetCacheSyncData : NSObject
{
    SPAssetCacheAssets *_permanentCache;
    SPAssetCacheAssets *_transientCache;
    NSString *_cacheIdentifier;
}

+ (id)fromProto:(id)arg1;
+ (id)toProto:(id)arg1;
@property(retain, nonatomic) NSString *cacheIdentifier; // @synthesize cacheIdentifier=_cacheIdentifier;
@property(retain, nonatomic) SPAssetCacheAssets *transientCache; // @synthesize transientCache=_transientCache;
@property(retain, nonatomic) SPAssetCacheAssets *permanentCache; // @synthesize permanentCache=_permanentCache;
- (void).cxx_destruct;
- (id)init;

@end

@interface SPProtoCacheAssets : PBCodable <NSCopying>
{
    NSMutableArray *_assets;
}

@property(retain, nonatomic) NSMutableArray *assets; // @synthesize assets=_assets;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)assetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)assetsCount;
- (void)addAssets:(id)arg1;
- (void)clearAssets;

@end

@interface WKInterfaceSeparator : WKInterfaceObject
{
}

- (void)setColor:(id)arg1;

@end

@interface SPColorWrapper : NSObject <NSSecureCoding>
{
    UIColor *_color;
}

+ (_Bool)supportsSecureCoding;
+ (id)wrapperForColor:(id)arg1;
@property(readonly, nonatomic) UIColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface WKInterfaceSlider : WKInterfaceObject
{
}

- (void)setNumberOfSteps:(long long)arg1;
- (void)setColor:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setValue:(float)arg1;

@end

@interface SPCompanionAppServerProtocolStub : NSObject <SPCompanionAppServerProtocol>
{
}

- (void)launchGizmoAppForCompanionAppWithIdentifier:(id)arg1 withURLString:(id)arg2;
- (void)remoteInterfaceDidDeactivate:(id)arg1;
- (void)launchCompanionAppForGizmoAppWithIdentifier:(id)arg1 withUserInfoData:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (void)sendTimingData:(id)arg1 identifier:(id)arg2 clientIdentifiers:(id)arg3 index:(long long)arg4;
- (void)fetchNotificationForNotificationID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendData:(id)arg1 identifier:(id)arg2 clientIdentifiers:(id)arg3;
- (void)sendCacheRequest:(id)arg1 identifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SPRemoteInterfaceKeyedArchiverDelegate : NSObject <NSKeyedArchiverDelegate>
{
    _Bool _imageIsNamed;
}

@property(nonatomic) _Bool imageIsNamed; // @synthesize imageIsNamed=_imageIsNamed;
- (void)archiver:(id)arg1 didEncodeObject:(id)arg2;
- (id)archiver:(id)arg1 willEncodeObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SPRemoteInterfaceOpenParentRequest : NSObject
{
    _Bool _waitingForReply;
    NSData *_userInfoData;
    CDUnknownBlockType _reply;
}

@property(copy, nonatomic) CDUnknownBlockType reply; // @synthesize reply=_reply;
@property(copy, nonatomic) NSData *userInfoData; // @synthesize userInfoData=_userInfoData;
@property(nonatomic) _Bool waitingForReply; // @synthesize waitingForReply=_waitingForReply;
- (void).cxx_destruct;

@end

@interface SPRemoteInterface : NSObject <SPRemoteInterfaceProtocol>
{
    id <SPRemoteInterfaceDataDelegateProtocol> _dataDelegate;
    NSMutableArray *_activeComplicationsConnections;
    id _runLoopObserver;
    NSMutableDictionary *_interfaceControllers;
    NSMutableDictionary *_interfaceControllersOwners;
    NSObject<OS_dispatch_queue> *_interfaceControllersAccessQueue;
    NSString *_rootViewControllerID;
    NSString *_navigatingViewControllerID;
    CDUnknownBlockType _textInputCompletion;
    NSMutableArray *_openParentRequests;
}

+ (id)controller:(id)arg1 setupProperties:(id)arg2 viewControllerID:(id)arg3 tableIndex:(long long)arg4 rowIndex:(long long)arg5 classForType:(CDUnknownFunctionPointerType)arg6;
+ (void)notificationController:(id)arg1 showNotificationInterfaceType:(long long)arg2;
+ (void)sendCacheRequestMessage:(id)arg1;
+ (void)sendCacheRequest:(id)arg1;
+ (_Bool)openParentApplication:(id)arg1 reply:(CDUnknownBlockType)arg2;
+ (void)updateUserActivity:(id)arg1 userInfo:(id)arg2 webpageURL:(id)arg3 interfaceController:(id)arg4;
+ (void)controllerDismissTextInputController:(id)arg1;
+ (void)controller:(id)arg1 presentTextInputControllerWithSuggestions:(id)arg2 allowedInputMode:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)controllerDismiss:(id)arg1;
+ (void)controller:(id)arg1 presentInterfaceControllers:(id)arg2 contexts:(id)arg3;
+ (void)controller:(id)arg1 presentInterfaceController:(id)arg2 context:(id)arg3;
+ (void)controllerBecomeCurrentPage:(id)arg1;
+ (void)removePageControllerAtIndexes:(id)arg1;
+ (void)movePageControllerAtIndex:(long long)arg1 toIndex:(long long)arg2;
+ (void)insertPageControllerAtIndexes:(id)arg1 withNames:(id)arg2 contexts:(id)arg3;
+ (void)reloadRootControllersWithNames:(id)arg1 contexts:(id)arg2;
+ (void)controllerPopToRoot:(id)arg1;
+ (void)controllerPop:(id)arg1;
+ (void)controller:(id)arg1 pushInterfaceController:(id)arg2 context:(id)arg3;
+ (void)_logDuplicate:(id)arg1 controller:(id)arg2 key:(id)arg3 property:(id)arg4 value:(id)arg5;
+ (void)setController:(id)arg1 key:(id)arg2 property:(id)arg3 value:(id)arg4;
+ (void)handleEvent:(CDUnknownBlockType)arg1;
+ (void)setControllerInactive:(id)arg1;
+ (void)setControllerActive:(id)arg1;
+ (void)clearStorageForController:(id)arg1;
+ (void)_setupStorageForController:(id)arg1;
+ (id)SerializablePropertyValue:(id)arg1;
+ (void)_updateAccessibility;
+ (id)cacheIdentifier;
+ (id)_remoteIdentifier;
+ (id)startRemoteInterface;
@property(retain, nonatomic) NSMutableArray *openParentRequests; // @synthesize openParentRequests=_openParentRequests;
@property(copy, nonatomic) CDUnknownBlockType textInputCompletion; // @synthesize textInputCompletion=_textInputCompletion;
@property(retain, nonatomic) NSString *navigatingViewControllerID; // @synthesize navigatingViewControllerID=_navigatingViewControllerID;
@property(retain, nonatomic) NSString *rootViewControllerID; // @synthesize rootViewControllerID=_rootViewControllerID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *interfaceControllersAccessQueue; // @synthesize interfaceControllersAccessQueue=_interfaceControllersAccessQueue;
@property(retain, nonatomic) NSMutableDictionary *interfaceControllersOwners; // @synthesize interfaceControllersOwners=_interfaceControllersOwners;
@property(retain, nonatomic) NSMutableDictionary *interfaceControllers; // @synthesize interfaceControllers=_interfaceControllers;
@property(retain, nonatomic) id runLoopObserver; // @synthesize runLoopObserver=_runLoopObserver;
@property(retain, nonatomic) NSMutableArray *activeComplicationsConnections; // @synthesize activeComplicationsConnections=_activeComplicationsConnections;
@property(retain, nonatomic) id <SPRemoteInterfaceDataDelegateProtocol> dataDelegate; // @synthesize dataDelegate=_dataDelegate;
- (void).cxx_destruct;
- (id)controllerMethods:(id)arg1;
- (void)_fillDataWithRandom:(id)arg1 length:(long long)arg2;
- (void)getComplicationData:(id)arg1;
- (void)dataInterfaceWillResignActive:(id)arg1;
- (void)dataInterfaceDidBecomeActive:(id)arg1;
- (void)applicationIsStillActive;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidFinishConnecting:(id)arg1;
- (void)applicationDidTerminate:(id)arg1;
- (void)receiveData:(id)arg1 fromIdentifier:(id)arg2;
- (void)receiveProtoData:(id)arg1 fromIdentifier:(id)arg2;
- (void)removeInterfaceControllersForClient:(id)arg1;
- (void)_dumpInterfaceDictionary;
- (void)_deregisterInterfaceControllerID:(id)arg1;
- (void)_registerInterfaceController:(id)arg1 interfaceControllerID:(id)arg2 interfaceControllerClientID:(id)arg3 applicationRootController:(_Bool)arg4;
- (id)_interfaceControllerIDsForClientID:(id)arg1;
- (id)_interfaceControllerClientIDForControllerID:(id)arg1;
- (id)_interfaceControllerID:(id)arg1;
- (id)_interfaceControllerWithID:(id)arg1;
- (void)sendWillActivateReplyForController:(id)arg1;
- (void)notificationController:(id)arg1 showNotificationInterfaceType:(long long)arg2;
- (void)controllerDismissTextInputController:(id)arg1;
- (void)controllerPresentTextInputController:(id)arg1 allowedInputMode:(id)arg2 suggestions:(id)arg3;
- (void)controllerDismiss:(id)arg1;
- (void)controller:(id)arg1 presentInterfaceControllers:(id)arg2 initializationContextIDs:(id)arg3;
- (void)controller:(id)arg1 presentInterfaceController:(id)arg2 initializationContextID:(id)arg3;
- (void)controllerBecomeCurrentPage:(id)arg1;
- (void)removePageControllerAtIndexes:(id)arg1;
- (void)movePageControllerAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)insertPageControllerAtIndexes:(id)arg1 withNames:(id)arg2 initializationContextIDs:(id)arg3;
- (void)reloadRootControllersWithNames:(id)arg1 initializationContextIDs:(id)arg2;
- (void)controllerPopToRoot:(id)arg1;
- (void)controllerPop:(id)arg1;
- (void)controller:(id)arg1 pushInterfaceController:(id)arg2 initializationContextID:(id)arg3;
- (id)interfaceCreationContextForID:(id)arg1;
- (id)storeInterfaceCreationContext:(id)arg1;
- (void)sendCacheRequestMessage:(id)arg1;
- (void)launchGizmoAppForCompanionAppWithIdentifier:(id)arg1 withURLString:(id)arg2;
- (_Bool)openParentApplication:(id)arg1 reply:(CDUnknownBlockType)arg2;
- (void)_sendOpenParentApplicationRequest;
- (void)updateUserActivity:(id)arg1 userInfo:(id)arg2 webpageURL:(id)arg3 controller:(id)arg4;
- (void)fetchNotificationForNotificationID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendComplicationObject:(id)arg1;
- (void)sendTimingInfo:(id)arg1 clientIdentifiers:(id)arg2 index:(long long)arg3;
- (void)sendPlist:(id)arg1 clientIdentifiers:(id)arg2;
- (void)_callDidDeactivate;
- (id)_setupSignal:(int)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_setupSignalHandlers;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WKInterfaceTimer : WKInterfaceObject
{
}

- (void)stop;
- (void)start;
- (void)setDate:(id)arg1;
- (void)setTextColor:(id)arg1;

@end

@interface WKInterfaceGroup : WKInterfaceObject
{
}

- (void)stopAnimating;
- (void)startAnimatingWithImagesInRange:(struct _NSRange)arg1 duration:(double)arg2 repeatCount:(long long)arg3;
- (void)startAnimating;
- (void)setBackgroundImageNamed:(id)arg1;
- (void)setBackgroundImageData:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCornerRadius:(double)arg1;

@end

@interface WKError : NSObject
{
}

+ (id)errorWithCode:(long long)arg1;

@end

@interface WKInterfaceSwitch : WKInterfaceObject
{
}

- (void)setColor:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setOn:(_Bool)arg1;
- (void)setAttributedTitle:(id)arg1;
- (void)setTitle:(id)arg1;

@end

@interface WKInterfaceButton : WKInterfaceObject
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setBackgroundImageNamed:(id)arg1;
- (void)setBackgroundImageData:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setAttributedTitle:(id)arg1;
- (void)setTitle:(id)arg1;

@end

@interface WKInterfaceLabel : WKInterfaceObject
{
}

- (void)setAttributedText:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setText:(id)arg1;

@end

@interface SPProtoCacheSyncData : PBCodable <NSCopying>
{
    NSString *_cacheIdentifier;
    SPProtoCacheAssets *_permanentCache;
    SPProtoCacheAssets *_transientCache;
}

@property(retain, nonatomic) SPProtoCacheAssets *transientCache; // @synthesize transientCache=_transientCache;
@property(retain, nonatomic) SPProtoCacheAssets *permanentCache; // @synthesize permanentCache=_permanentCache;
@property(retain, nonatomic) NSString *cacheIdentifier; // @synthesize cacheIdentifier=_cacheIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface SPExtensionDaemonManager : NSObject
{
    _Bool _active;
    long long _refCount;
    NSObject<OS_dispatch_source> *_transactionTimer;
    NSMutableSet *_transactionObservers;
    NSMutableDictionary *_coreLocationAsserts;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *coreLocationAsserts; // @synthesize coreLocationAsserts=_coreLocationAsserts;
@property(retain, nonatomic) NSMutableSet *transactionObservers; // @synthesize transactionObservers=_transactionObservers;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *transactionTimer; // @synthesize transactionTimer=_transactionTimer;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(nonatomic) long long refCount; // @synthesize refCount=_refCount;
- (void).cxx_destruct;
- (void)startTransactionTimer;
- (void)keepAlive;
- (void)transactionTimeOut;
- (void)endTransaction;
- (void)beginTransaction;
- (void)removeTransactionObserver:(id)arg1;
- (void)addTransactionObserver:(id)arg1;
- (id)init;

@end

@interface SPStockComplicationData : SPComplicationData <NSSecureCoding>
{
    NSString *_tickerSymbolText;
    NSString *_priceText;
    NSString *_marketCapText;
    NSString *_changeInPercentText;
    NSString *_changeInPointsText;
    NSString *_changeText;
    unsigned long long _changeDirection;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned long long changeDirection; // @synthesize changeDirection=_changeDirection;
@property(retain, nonatomic) NSString *changeText; // @synthesize changeText=_changeText;
@property(retain, nonatomic) NSString *changeInPointsText; // @synthesize changeInPointsText=_changeInPointsText;
@property(retain, nonatomic) NSString *changeInPercentText; // @synthesize changeInPercentText=_changeInPercentText;
@property(retain, nonatomic) NSString *marketCapText; // @synthesize marketCapText=_marketCapText;
@property(retain, nonatomic) NSString *priceText; // @synthesize priceText=_priceText;
@property(retain, nonatomic) NSString *tickerSymbolText; // @synthesize tickerSymbolText=_tickerSymbolText;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface SPStockListComplicationData : SPComplicationData <NSSecureCoding>
{
    NSArray *_stockList;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSArray *stockList; // @synthesize stockList=_stockList;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface WKInterfaceHealth : WKInterfaceObject
{
}

- (void)setTextColor:(id)arg1;

@end

@interface SPProtoCacheMessage : PBCodable <NSCopying>
{
    NSData *_assetData;
    NSString *_assetKey;
    int _cacheType;
    NSString *_gizmoCacheIdentifier;
    int _messageType;
    SPProtoCacheSyncData *_syncData;
}

@property(retain, nonatomic) SPProtoCacheSyncData *syncData; // @synthesize syncData=_syncData;
@property(retain, nonatomic) NSData *assetData; // @synthesize assetData=_assetData;
@property(retain, nonatomic) NSString *gizmoCacheIdentifier; // @synthesize gizmoCacheIdentifier=_gizmoCacheIdentifier;
@property(retain, nonatomic) NSString *assetKey; // @synthesize assetKey=_assetKey;
@property(nonatomic) int cacheType; // @synthesize cacheType=_cacheType;
@property(nonatomic) int messageType; // @synthesize messageType=_messageType;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSyncData;
@property(readonly, nonatomic) _Bool hasAssetData;
@property(readonly, nonatomic) _Bool hasGizmoCacheIdentifier;
@property(readonly, nonatomic) _Bool hasAssetKey;

@end

@interface SPDeviceConnection : NSObject <SPLocalApplicationProtocol>
{
    _Bool _connectionIsValid;
    id <SPDeviceConnectionDelegate> _delegate;
    NSXPCConnection *_serverConnection;
    NSHashTable *_observers;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDeviceConnection;
@property(retain) NSHashTable *observers; // @synthesize observers=_observers;
@property _Bool connectionIsValid; // @synthesize connectionIsValid=_connectionIsValid;
@property(retain) NSXPCConnection *serverConnection; // @synthesize serverConnection=_serverConnection;
@property(nonatomic) __weak id <SPDeviceConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)receiveData:(id)arg1;
- (void)installProvisioningProfileWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_enumerateObserversSafely:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)wakeExtensionForWatchApp:(id)arg1;
- (id)localeForUserNotification;
- (void)hideUserNotification;
- (void)showUserNotification:(long long)arg1 bundleID:(id)arg2;
- (void)getAlwaysInstallWithCompletion:(CDUnknownBlockType)arg1;
- (void)setAlwaysInstall:(id)arg1;
- (void)setLogLevel:(id)arg1;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchApplicationWithContainingApplicationBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeApplication:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)installApplication:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancelPendingInstallations;
- (void)installAllApplications;
- (void)fetchInstalledGlancesWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchInstalledApplicationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)createXPCConnection;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SPXcodeSupport : NSObject <SPLocalApplicationProtocol>
{
}

- (void)receiveData:(id)arg1;
- (void)applicationIdentifierWithReply:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WKInterfaceController : NSObject
{
    NSArray *_topLevelObjects;
    NSArray *_properties;
    NSString *_viewControllerID;
    struct CGRect _contentFrame;
}

+ (_Bool)openParentApplication:(id)arg1 reply:(CDUnknownBlockType)arg2;
+ (void)_removePageControllersAtIndexes:(id)arg1;
+ (void)_movePageControllerAtIndex:(long long)arg1 toIndex:(long long)arg2;
+ (void)_insertPageControllersAtIndexes:(id)arg1 withNames:(id)arg2 contexts:(id)arg3;
+ (void)reloadRootControllersWithNames:(id)arg1 contexts:(id)arg2;
+ (struct CGRect)screenBounds;
+ (double)screenScale;
@property(retain, nonatomic) NSString *viewControllerID; // @synthesize viewControllerID=_viewControllerID;
@property(copy, nonatomic) NSArray *properties; // @synthesize properties=_properties;
@property(retain, nonatomic) NSArray *topLevelObjects; // @synthesize topLevelObjects=_topLevelObjects;
@property(nonatomic) struct CGRect contentFrame; // @synthesize contentFrame=_contentFrame;
- (void).cxx_destruct;
- (void)invalidateUserActivity;
- (void)updateUserActivity:(id)arg1 userInfo:(id)arg2 webpageURL:(id)arg3;
- (void)updateUserActivity:(id)arg1 userInfo:(id)arg2;
- (void)clearAllMenuItems;
- (void)addMenuItemWithItemIcon:(long long)arg1 title:(id)arg2 action:(SEL)arg3;
- (void)addMenuItemWithImageNamed:(id)arg1 title:(id)arg2 action:(SEL)arg3;
- (void)addMenuItemWithImage:(id)arg1 title:(id)arg2 action:(SEL)arg3;
- (id)contextsForSegueWithIdentifier:(id)arg1 inTable:(id)arg2 rowIndex:(long long)arg3;
- (id)contextsForSegueWithIdentifier:(id)arg1;
- (id)contextForSegueWithIdentifier:(id)arg1 inTable:(id)arg2 rowIndex:(long long)arg3;
- (id)contextForSegueWithIdentifier:(id)arg1;
- (void)dismissTextInputController;
- (void)presentTextInputControllerWithSuggestions:(id)arg1 allowedInputMode:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissController;
- (void)presentControllerWithNames:(id)arg1 contexts:(id)arg2;
- (void)presentControllerWithName:(id)arg1 context:(id)arg2;
- (void)becomeCurrentPage;
- (void)popToRootController;
- (void)popController;
- (void)pushControllerWithName:(id)arg1 context:(id)arg2;
- (void)setTitle:(id)arg1;
- (void)handleUserActivity:(id)arg1;
- (void)handleActionWithIdentifier:(id)arg1 forLocalNotification:(id)arg2;
- (void)handleActionWithIdentifier:(id)arg1 forRemoteNotification:(id)arg2;
- (void)table:(id)arg1 didSelectRowAtIndex:(long long)arg2;
- (void)didDeactivate;
- (void)willActivate;
- (id)initWithContext:(id)arg1;
- (void)awakeWithContext:(id)arg1;
- (id)init;
- (void)_setContentFrame:(struct CGRect)arg1;

@end

@interface WKUserNotificationInterfaceController : WKInterfaceController
{
}

- (void)didReceiveLocalNotification:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)didReceiveRemoteNotification:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface SPUtils : NSObject
{
}

+ (_Bool)isRunningInF5DemoMode;
+ (_Bool)appExtensionFirstUnlock;
+ (id)localizedStringForSystemLanguage:(id)arg1 fromBundlePath:(id)arg2;
+ (unsigned long long)folderSizeAtPath:(id)arg1 volumeBlockSize:(unsigned long long)arg2;
+ (unsigned long long)userVolumeBlockSize;
+ (id)deserializeObject:(id)arg1;
+ (id)serializeObject:(id)arg1;
+ (id)uniqueNumber;

@end

@interface SPLogs : NSObject
{
}

+ (void)setDebugLogLevel:(id)arg1;
+ (_Bool)debugLogLevel;
+ (int)fileLoggingLevel;
+ (_Bool)watchLogging;
+ (void)setupLoggingForDomain:(id)arg1;
+ (void)setupLoggingLevelForDomain:(id)arg1;

@end

@interface WKInterfaceImage : WKInterfaceObject
{
}

- (void)stopAnimating;
- (void)startAnimatingWithImagesInRange:(struct _NSRange)arg1 duration:(double)arg2 repeatCount:(long long)arg3;
- (void)startAnimating;
- (void)setTintColor:(id)arg1;
- (void)setImageNamed:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)setImage:(id)arg1;

@end

@interface SPProtoSerializer : NSObject
{
}

+ (id)arrayWithSPPlist:(id)arg1;
+ (id)dictionaryWithSPPlist:(id)arg1;
+ (id)spPlistWithDictionary:(id)arg1;
+ (id)spPlistWithArray:(id)arg1;
+ (id)protoSPObjectWithArray:(id)arg1 forKey:(id)arg2;
+ (id)protoSPObjectWithDictionary:(id)arg1 forKey:(id)arg2;
+ (id)protoSPObjectWithObject:(id)arg1 forKey:(id)arg2;
+ (id)protoSPObjectWithData:(id)arg1 forKey:(id)arg2;
+ (id)protoSPObjectWithString:(id)arg1 forKey:(id)arg2;
+ (id)numberWithSPProtoSockPuppetObject:(id)arg1;
+ (id)protoSPObjectWithNumber:(id)arg1 forKey:(id)arg2;
+ (id)objectWithData:(id)arg1;
+ (id)dataWithObject:(id)arg1;

@end

@interface SPInterfaceObject : NSObject
{
    NSString *_interfaceProperty;
    NSString *_viewControllerID;
    NSString *_propertyIndex;
    long long _tableIndex;
    long long _rowIndex;
}

@property(nonatomic) long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) long long tableIndex; // @synthesize tableIndex=_tableIndex;
@property(copy, nonatomic) NSString *propertyIndex; // @synthesize propertyIndex=_propertyIndex;
@property(copy, nonatomic) NSString *viewControllerID; // @synthesize viewControllerID=_viewControllerID;
@property(copy, nonatomic) NSString *interfaceProperty; // @synthesize interfaceProperty=_interfaceProperty;
- (void).cxx_destruct;
- (void)_sendValueChanged:(id)arg1 forProperty:(id)arg2;
- (void)_sendValueChanged:(id)arg1;
- (void)_setupWithDescription:(id)arg1 forController:(id)arg2;
- (id)_initWithInterfaceProperty:(id)arg1 viewControllerID:(id)arg2 propertyIndex:(long long)arg3 tableIndex:(long long)arg4 rowIndex:(long long)arg5;
- (id)init;

@end

@interface SPInterfaceLabel : SPInterfaceObject
{
}

- (void)setAttributedText:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)setText:(id)arg1;

@end

@interface SPInterfaceImageView : SPInterfaceObject
{
}

- (void)setImageNamed:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)setImage:(id)arg1;

@end

@interface SPInterfaceGroup : SPInterfaceObject
{
}

- (void)setBackgroundImageNamed:(id)arg1;
- (void)setBackgroundImageData:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundColor:(id)arg1;

@end

@interface SPInterfaceButton : SPInterfaceObject
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setBackgroundImageNamed:(id)arg1;
- (void)setBackgroundImageData:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setAttributedTitle:(id)arg1;
- (void)setTitle:(id)arg1;

@end

@interface SPInterfaceSwitch : SPInterfaceObject
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setOn:(_Bool)arg1;

@end

@interface SPInterfaceSlider : SPInterfaceObject
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setValue:(float)arg1;

@end

@interface SPInterfaceMapView : SPInterfaceObject
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)setCurrentLocation;
- (void)setPlacemark:(id)arg1;

@end

@interface SPInterfaceList : SPInterfaceObject
{
    NSArray *_rowControllers;
    NSDictionary *_rowDescriptions;
    id <SPInterfaceController> _controller;
    NSArray *_rowControllerProperties;
}

@property(retain, nonatomic) NSArray *rowControllerProperties; // @synthesize rowControllerProperties=_rowControllerProperties;
@property(nonatomic) __weak id <SPInterfaceController> controller; // @synthesize controller=_controller;
@property(copy, nonatomic) NSDictionary *rowDescriptions; // @synthesize rowDescriptions=_rowDescriptions;
@property(copy, nonatomic) NSArray *rowControllers; // @synthesize rowControllers=_rowControllers;
- (void).cxx_destruct;
- (id)rowControllerAtIndex:(long long)arg1;
@property(readonly, nonatomic) long long numberOfRows;
- (void)setRowTypes:(id)arg1;
- (void)setNumberOfRows:(long long)arg1 withRowType:(id)arg2;
- (void)_setupWithDescription:(id)arg1 forController:(id)arg2;

@end

@interface SPProtoSockPuppetPlist : PBCodable <NSCopying>
{
    NSMutableArray *_objects;
}

@property(retain, nonatomic) NSMutableArray *objects; // @synthesize objects=_objects;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)objectsCount;
- (void)addObject:(id)arg1;
- (void)clearObjects;

@end

@interface SPCacheMessage : NSObject
{
    int _messageType;
    unsigned long long _cacheType;
    NSString *_assetKey;
    NSString *_gizmoCacheIdentifier;
    NSData *_assetData;
    SPAssetCacheSyncData *_syncData;
    unsigned long long _error;
}

+ (id)fromProto:(id)arg1;
+ (id)toProto:(id)arg1;
@property(nonatomic) unsigned long long error; // @synthesize error=_error;
@property(retain, nonatomic) SPAssetCacheSyncData *syncData; // @synthesize syncData=_syncData;
@property(retain, nonatomic) NSData *assetData; // @synthesize assetData=_assetData;
@property(retain, nonatomic) NSString *gizmoCacheIdentifier; // @synthesize gizmoCacheIdentifier=_gizmoCacheIdentifier;
@property(retain, nonatomic) NSString *assetKey; // @synthesize assetKey=_assetKey;
@property(nonatomic) unsigned long long cacheType; // @synthesize cacheType=_cacheType;
@property(nonatomic) int messageType; // @synthesize messageType=_messageType;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface WKInterfaceMap : WKInterfaceObject
{
}

- (void)removeAllAnnotations;
- (void)addAnnotation:(CDStruct_c3b9c2ee)arg1 withPinColor:(long long)arg2;
- (void)addAnnotation:(CDStruct_c3b9c2ee)arg1 withImageNamed:(id)arg2 centerOffset:(struct CGPoint)arg3;
- (void)addAnnotation:(CDStruct_c3b9c2ee)arg1 withImage:(id)arg2 centerOffset:(struct CGPoint)arg3;
- (void)setRegion:(CDStruct_90e2a262)arg1;
- (void)setVisibleMapRect:(CDStruct_90e2a262)arg1;

@end

@interface WKInterfaceDate : WKInterfaceObject
{
}

- (void)setTextColor:(id)arg1;
- (void)setCalendar:(id)arg1;
- (void)setTimeZone:(id)arg1;

@end

@interface SPAssetCacheClientCache : NSObject
{
    NSString *_gizmoCacheIdentifier;
    NSMutableDictionary *_assets;
    NSMutableArray *_keys;
    long long _size;
    unsigned long long _cacheType;
}

@property(nonatomic) unsigned long long cacheType; // @synthesize cacheType=_cacheType;
@property(nonatomic) long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSMutableArray *keys; // @synthesize keys=_keys;
@property(retain, nonatomic) NSMutableDictionary *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) NSString *gizmoCacheIdentifier; // @synthesize gizmoCacheIdentifier=_gizmoCacheIdentifier;
- (void).cxx_destruct;
- (id)dataForImageWithName:(id)arg1;
- (void)deleteDataForAsset:(id)arg1;
- (void)saveAssetData:(id)arg1 forAsset:(id)arg2;
- (void)clearedCache;
- (id)cachedImages;
- (void)deleteAllAssets;
- (void)deletedAssetWithName:(id)arg1;
- (void)deleteAssetWithName:(id)arg1;
- (void)deleteAsset:(id)arg1;
- (_Bool)checkAvailableSpaceForAssetWithName:(id)arg1 length:(unsigned long long)arg2;
- (void)clearSpaceForAsset:(unsigned long long)arg1;
- (void)addedAssetWithName:(id)arg1;
- (_Bool)addAsset:(id)arg1 withName:(id)arg2 sendImage:(_Bool)arg3;
- (void)syncAssets:(id)arg1;
- (id)pathForAssetDataWithName:(id)arg1;
- (id)cacheDirectory;
- (id)initWithIdentifier:(id)arg1 cacheType:(unsigned long long)arg2;

@end

@interface SPCompanionAssetCache : NSObject
{
    SPAssetCacheClientCache *_permanentCache;
    SPAssetCacheClientCache *_transientCache;
}

+ (id)sharedInstance;
@property(retain, nonatomic) SPAssetCacheClientCache *transientCache; // @synthesize transientCache=_transientCache;
@property(retain, nonatomic) SPAssetCacheClientCache *permanentCache; // @synthesize permanentCache=_permanentCache;
- (void).cxx_destruct;
- (id)keyFromImageData:(id)arg1;
- (id)dataForImageWithName:(id)arg1;
- (id)cachedImages;
- (void)removeAllImagesFromPermanentCache;
- (void)removeImageFromPermanentCacheWithName:(id)arg1;
- (_Bool)addImageToPermanentCache:(id)arg1 withName:(id)arg2;
- (_Bool)imageInPermanentCache:(id)arg1;
- (void)syncCache:(id)arg1;
- (void)clearedCache:(id)arg1;
- (void)deletedAsset:(id)arg1;
- (void)addedAsset:(id)arg1;
- (void)handleCacheMessage:(id)arg1;
- (void)addImageReferenceToTransientCache:(id)arg1 withName:(id)arg2;
- (_Bool)imageInTransientCache:(id)arg1;
- (id)init;

@end

@interface _WKInterfaceTablePlaceholderRow : NSObject
{
}

@end

@interface WKInterfaceTable : WKInterfaceObject
{
    NSDictionary *_rowDescriptions;
    NSMutableArray *_rowControllers;
    NSMutableArray *_rowControllerProperties;
    WKInterfaceController *_controller;
}

@property(nonatomic) __weak WKInterfaceController *controller; // @synthesize controller=_controller;
@property(retain, nonatomic) NSMutableArray *rowControllerProperties; // @synthesize rowControllerProperties=_rowControllerProperties;
@property(retain, nonatomic) NSMutableArray *rowControllers; // @synthesize rowControllers=_rowControllers;
@property(copy, nonatomic) NSDictionary *rowDescriptions; // @synthesize rowDescriptions=_rowDescriptions;
- (void).cxx_destruct;
- (void)scrollToRowAtIndex:(long long)arg1;
- (void)resequenceRowControllerPropertyIndexes;
- (void)removeRowsAtIndexes:(id)arg1;
- (void)insertRowsAtIndexes:(id)arg1 withRowType:(id)arg2;
- (id)rowControllerAtIndex:(long long)arg1;
@property(readonly, nonatomic) long long numberOfRows;
- (void)setRowTypes:(id)arg1;
- (void)setNumberOfRows:(long long)arg1 withRowType:(id)arg2;
- (void)_getRowControllers:(id)arg1 rowControllerProperties:(id)arg2 forRowTypes:(id)arg3;
- (void)_setupWithDescription:(id)arg1 forController:(id)arg2;

@end

@interface NSString (SPExtras)
- (id)_sp_stringByEncodingIllegalFilenameCharacters;
@end

