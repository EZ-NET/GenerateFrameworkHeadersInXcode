//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesConnectFoundation.framework/Versions/A/ITunesConnectFoundation
// UUID: 43994C20-DC94-3845-9D5F-7D2F7B63D58A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 300.20.0.0.0
//       Minimum Mac OS X version: 10.8.0
//                    SDK version: 10.8.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ITunesPackageSource <NSObject>
@property(retain, nonatomic) NSData *token;
- (NSString *)providerShortName;
- (NSString *)packagePath;
- (NSString *)transport;
- (NSString *)password;
- (NSString *)username;
@end

@protocol MZTaskDelegate
- (void)taskDidTerminate:(MZTask *)arg1;
- (void)task:(MZTask *)arg1 didAppendToStandardError:(NSData *)arg2;
- (void)task:(MZTask *)arg1 didAppendToStandardOutput:(NSData *)arg2;
@end

@protocol MZThroughputWorker <MZWorker>
- (unsigned long long)completed;
- (unsigned long long)size;
@end

@protocol MZWebServiceOperation <NSObject>
+ (NSError *)errorFromString:(NSString *)arg1;
- (void)setDelegate:(id <MZWebServiceOperationDelegate>)arg1;
- (id <MZWebServiceOperationDelegate>)delegate;
- (NSArray *)warningMessages;
- (NSArray *)errorMessages;
- (void)operationDidFinish;
- (void)operationWillStart;
- (id)invokeSOAPCall;
- (void)cancel;
- (NSError *)processResult:(id)arg1 message:(id *)arg2;
- (NSString *)runningMessage;
- (NSString *)initialMessage;

@optional
- (unsigned long long)requestBytesWritten;
- (unsigned long long)requestLength;
- (unsigned long long)responseBytesRead;
- (long long)expectedResponseLength;
- (void)seriesCompleted;
@end

@protocol MZWebServiceOperationDelegate <NSObject>

@optional
- (void)operation:(id <MZWebServiceOperation>)arg1 didUpdateStatus:(NSString *)arg2;
@end

@protocol MZWorkItem <NSObject>
- (void)seriesCompleted;
- (NSString *)throughputStatus;
- (NSArray *)infoMessages;
- (NSArray *)warnings;
- (NSArray *)errors;
- (NSString *)errorMessage;
- (NSString *)statusMessage;
- (double)percentComplete;
- (int)mode;
- (NSString *)timerMode;
- (double)elapsedSecondsSinceStart;
- (double)estimatedCompletionSeconds;
- (NSDate *)estimatedCompletionTime;
- (NSDate *)completeTime;
- (NSDate *)startTime;
- (int)status;
- (BOOL)isRunning;
- (BOOL)isActive;
- (BOOL)isCancelled;
- (void)cancel;
- (void)start;
@end

@protocol MZWorker <NSObject>
- (NSString *)errorMessage;
- (void)addInfoMessages:(NSArray *)arg1;
- (void)addWarnings:(NSArray *)arg1;
- (void)addWarning:(NSError *)arg1;
- (void)addErrors:(NSArray *)arg1;
- (void)addError:(NSError *)arg1;
- (BOOL)hasInfoMessages;
- (NSArray *)infoMessages;
- (BOOL)hasErrors;
- (NSArray *)warnings;
- (NSArray *)errors;
- (NSString *)statusMessage;
- (double)percentComplete;
- (void)cancel;
- (void)run;

@optional
- (void)seriesCompleted;
@end

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@interface MZAbstractWorker : NSObject <MZWorker>
{
    NSString *_statusMessage;
    double _percentComplete;
    BOOL _cancelled;
    NSMutableDictionary *_userInfo;
    NSMutableArray *_errors;
    NSMutableArray *_warnings;
    NSMutableArray *_infoMessages;
}

- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)seriesCompleted;
- (BOOL)hasInfoMessages;
- (BOOL)hasErrors;
- (void)resetErrorsWarningsAndInfoMessages;
- (void)addInfoMessages:(id)arg1;
- (id)infoMessages;
- (void)addWarnings:(id)arg1;
- (void)addWarning:(id)arg1;
- (void)addErrors:(id)arg1;
- (void)addError:(id)arg1;
- (id)warnings;
- (id)errors;
- (void)setPercentComplete:(double)arg1;
- (double)percentComplete;
- (void)addException:(id)arg1;
- (void)addErrorMessage:(id)arg1;
- (void)setErrorMessage:(id)arg1;
- (void)setStatusMessage:(id)arg1;
- (id)errorMessage;
- (id)statusMessage;
- (id)userInfo;
- (BOOL)isCancelled;
- (void)cancel;
- (void)run;
- (void)dealloc;
- (id)init;

@end

@interface MZAuthorizationTokenManager : NSObject
{
}

+ (id)authorizationTokenForHostname:(id)arg1 appIdKey:(id)arg2 username:(id)arg3 password:(id)arg4 error:(id *)arg5;
+ (id)authorizationTokenForDefaultHostnameAndAppIdKeyWithUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;

@end

@interface MZWorkItem : NSOperation <MZWorkItem>
{
    id <MZWorker> _worker;
    NSDate *_startTime;
    NSDate *_completeTime;
    int _status;
    id _nonretainedDelegate;
    BOOL _delegateRespondsToStatusUpdates;
    BOOL _active;
    BOOL _cancelled;
    NSDictionary *_userInfo;
    MZWorkSeries *_nonretainedSeries;
    NSMutableArray *_samples;
    id _initialSample;
    double _lastSampleTime;
    unsigned long long _lastSampleCompletion;
    unsigned long long _startSequence;
    unsigned long long _endSequence;
}

+ (id)timeStringWithSeconds:(double)arg1;
+ (id)stringWithMode:(int)arg1;
+ (id)stringWithStatus:(int)arg1;
+ (id)itemsWithWorkers:(id)arg1;
+ (id)itemWithWorker:(id)arg1;
+ (unsigned long long)sequence;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)throughputStatus;
- (id)completedStatus;
- (id)runningStatus;
- (id)finalRateString;
- (id)sampleRateString;
- (unsigned long long)sampleRate;
- (void)addRunningSample:(unsigned long long)arg1;
- (BOOL)hasInfoMessages;
- (void)addInfoMessages:(id)arg1;
- (id)infoMessages;
- (void)addWarnings:(id)arg1;
- (void)addWarning:(id)arg1;
- (void)addErrors:(id)arg1;
- (void)addError:(id)arg1;
- (id)warnings;
- (id)errors;
- (BOOL)hasErrors;
- (id)errorMessage;
- (id)statusMessage;
- (double)percentComplete;
- (int)mode;
- (id)timerMode;
- (double)elapsedSecondsSinceStart;
- (double)estimatedCompletionSeconds;
- (double)throughputEstimatedCompletionSecondsWithPercentComplete:(double)arg1;
- (id)estimatedCompletionTime;
- (id)completeTime;
- (id)startTime;
- (void)setStatus:(int)arg1;
- (int)status;
- (void)main;
- (BOOL)isRunning;
- (BOOL)isActive;
- (void)cancel;
- (void)threadCompleted;
- (id)operationQueue;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (void)seriesCompleted;
- (id)series;
- (void)setSeries:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)worker;
- (void)dealloc;
- (id)initWithWorker:(id)arg1;

@end

@interface WorkItemSample : NSObject
{
    NSDate *_time;
    NSNumber *_completed;
}

- (id)completed;
- (id)time;
- (void)dealloc;
- (id)initWithCompleted:(id)arg1 time:(id)arg2;

@end

@interface MZWorkSeries : NSObject <MZWorkItem>
{
    NSArray *_workItems;
    NSDate *_startTime;
    NSDate *_completeTime;
    NSEnumerator *_enumerator;
    int _status;
    id _nonretainedDelegate;
    MZWorkItem *_currentItem;
    long long _type;
    BOOL _delegateRespondsToStatusUpdates;
    NSDictionary *_userInfo;
}

+ (id)seriesWithWorkItems:(id)arg1;
+ (id)seriesWithWorkItem:(id)arg1;
+ (id)seriesWithWork:(id)arg1;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)seriesCompleted;
- (id)completeTime;
- (id)startTime;
- (int)mode;
- (id)timerMode;
- (double)elapsedSecondsSinceStart;
- (double)estimatedCompletionSeconds;
- (id)estimatedCompletionTime;
- (id)throughputStatus;
- (id)infoMessages;
- (BOOL)hasInfoMessages;
- (id)warnings;
- (BOOL)hasErrors;
- (id)errors;
- (id)errorMessage;
- (id)statusMessage;
- (void)workItemStatusChanged:(id)arg1 status:(int)arg2;
- (BOOL)isCancelled;
- (BOOL)isRunning;
- (BOOL)isActive;
- (id)activeItem;
- (int)status;
- (double)percentComplete;
- (void)cancel;
- (void)start;
- (id)operationQueue;
- (void)dispatchNextItem;
- (void)cancelRemainingJobs;
- (void)setStatus:(int)arg1;
- (void)notifyWorkItemsOfSeriesCompletion;
- (void)setType:(long long)arg1;
- (long long)type;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)workItems;
- (void)dealloc;
- (id)initWithWorkItems:(id)arg1;
- (id)initWithWorkItem:(id)arg1;
- (id)initWithWork:(id)arg1;

@end

@interface MZWorkSeriesManager : NSObject
{
    NSMutableArray *_pendingWork;
    NSMutableArray *_runningWork;
    NSMutableArray *_completedWork;
    NSMutableDictionary *_throttles;
    unsigned long long _maxCompletedWork;
    NSOperationQueue *_operationQueue;
}

+ (void)setDefaultManager:(id)arg1;
+ (id)defaultManager;
+ (void)initialize;
- (void)setMaxCompletedWork:(unsigned long long)arg1;
- (unsigned long long)maxCompletedWork;
- (void)clearCompletedWork;
- (void)cancelAllWork;
- (id)allWork;
- (id)completedWork;
- (id)operationQueue;
- (void)workSeriesStatusChanged:(id)arg1 status:(int)arg2;
- (id)activeWork;
- (void)submitWork:(id)arg1;
- (void)_startNextSeries:(id)arg1;
- (void)_startNextSeriesOfType:(long long)arg1;
- (id)_popFirstPendingOfType:(long long)arg1;
- (unsigned long long)_activeSeriesOfType:(long long)arg1;
- (void)setThrottle:(id)arg1 forType:(long long)arg2;
- (id)throttleForType:(long long)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ITunesTransporter : NSObject
{
    NSArray *_arguments;
    NSString *_transporterPath;
    NSDictionary *_environment;
    NSMutableData *_outputData;
    NSMutableData *_errorData;
    NSTask *_transporterTask;
    id _nonretainedDelegate;
    BOOL _doesRespondToOutput;
    BOOL _doesRespondToError;
    BOOL _doesRespondToCompleted;
    BOOL _terminated;
    long long _terminationStatus;
    NSRecursiveLock *_lock;
    NSString *_serviceAddress;
}

+ (id)proxyArguments;
+ (id)defaultClientArguments;
+ (id)transporterPath;
+ (void)initialize;
- (void)setServiceAddress:(id)arg1;
- (id)allOutput;
- (id)standardErrorString;
- (id)standardOutString;
- (id)standardError;
- (id)standardOut;
- (void)taskCompleted:(id)arg1;
- (void)flushChannels;
- (void)readErrorData:(id)arg1;
- (void)readOutputData:(id)arg1;
- (long long)terminationStatus;
- (void)terminate;
- (BOOL)isRunning;
- (void)_terminateInBackgroundAndNotify:(id)arg1;
- (void)terminateInBackgroundAndNotify:(BOOL)arg1;
- (void)appendErrorString:(id)arg1;
- (void)appendOutputString:(id)arg1;
- (void)appendErrorData:(id)arg1;
- (void)appendOutputData:(id)arg1;
- (void)executeAsynchronously;
- (long long)execute;
- (id)_createTask;
- (id)_executableTransporterPath;
- (id)_augmentArguments;
- (void)setEnvironment:(id)arg1;
- (id)environment;
- (void)setArguments:(id)arg1;
- (id)arguments;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithArguments:(id)arg1;
- (id)init;

@end

@interface MZTask : NSObject
{
    NSTask *_task;
    NSPipe *_stdoutPipe;
    NSPipe *_stderrPipe;
    NSFileHandle *_stdoutHandle;
    NSFileHandle *_stderrHandle;
    id <MZTaskDelegate> _delegate;
    BOOL _terminated;
    long long _terminationStatus;
}

- (id)description;
- (long long)terminationStatus;
- (BOOL)isRunning;
- (long long)execute;
- (void)launch;
- (void)setArguments:(id)arg1;
- (void)setLaunchPath:(id)arg1;
- (void)setCurrentDirectoryPath:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)init;
- (void)mzTaskDidTerminate:(id)arg1;
- (void)mzStderrPipeDataAvailable:(id)arg1;
- (void)mzStdoutPipeDataAvailable:(id)arg1;

@end

@interface NSCodingUtilities : NSObject
{
}

+ (id)decodeObject:(id)arg1;
+ (id)encodeObject:(id)arg1;
+ (id)encodeAndDecodeObject:(id)arg1;

@end

@interface NSDataToStringFilter : NSObject
{
    unsigned char _separator;
    NSMutableData *_unusedData;
    id _nonretainedDelegate;
    unsigned long long _encoding;
}

- (id)unusedData;
- (void)appendData:(id)arg1;
- (void)processUnusedData;
- (unsigned long long)stringEncoding;
- (void)setStringEncoding:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithSeparator:(unsigned char)arg1 deletegate:(id)arg2;
- (id)initWithDelegate:(id)arg1;

@end

@interface MZOperatingSystemUtilities : NSObject
{
}

+ (BOOL)isVersion:(id)arg1 greaterThanOrEqualToVersion:(id)arg2 error:(id *)arg3;
+ (BOOL)isVersion:(id)arg1 greaterThanVersion:(id)arg2 error:(id *)arg3;
+ (BOOL)isVersion:(id)arg1 lessThanOrEqualToVersion:(id)arg2 error:(id *)arg3;
+ (BOOL)isVersion:(id)arg1 lessThanVersion:(id)arg2 error:(id *)arg3;
+ (long long)compareVersion:(id)arg1 toVersion:(id)arg2 error:(id *)arg3;
+ (id)operatingSystemDescription;
+ (id)cpuArchitecture;
+ (int)operatingSystemArchitecture;
+ (id)systemVersionToString:(unsigned long long)arg1;
+ (id)systemVersionAsString;
+ (unsigned long long)systemVersion;

@end

@interface MZWebServiceRegisterForPushNotification : MZITunesProducerServiceClient
{
    NSData *_devToken;
    NSString *_preferredLanguage;
}

@property(retain, nonatomic) NSString *preferredLanguage; // @synthesize preferredLanguage=_preferredLanguage;
@property(retain, nonatomic) NSData *devToken; // @synthesize devToken=_devToken;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZXMLUtilities : NSObject
{
}

+ (id)propertyListFromNode:(id)arg1 encoding:(unsigned long long)arg2 mutabilityOption:(unsigned long long)arg3 error:(id *)arg4;
+ (id)propertyListFromNode:(id)arg1 error:(id *)arg2;

@end

@interface MZFileCopyOperation : NSObject
{
    NSString *_file;
    NSNumber *_fileSize;
    unsigned long long _size;
    unsigned long long _copied;
    BOOL _cancelled;
}

+ (id)computeFileSize:(id)arg1 error:(id *)arg2;
+ (id)computeFileSize:(id)arg1;
- (void)cancel;
- (void)copyToFile:(id)arg1;
- (id)copyToPath:(id)arg1;
- (id)fileSize;
- (unsigned long long)copied;
- (unsigned long long)size;
- (id)file;
- (void)dealloc;
- (id)initWithFile:(id)arg1 error:(id *)arg2;
- (id)initWithFile:(id)arg1;

@end

@interface MZMD5Operation : NSObject
{
    unsigned long long _analyzed;
    NSString *_file;
    BOOL _cancelled;
}

+ (id)operationWthFile:(id)arg1;
+ (id)operation;
+ (id)md5ForString:(id)arg1 encoding:(unsigned long long)arg2 error:(id *)arg3;
+ (id)md5ForStream:(id)arg1 error:(id *)arg2;
+ (id)md5ForData:(id)arg1 error:(id *)arg2;
+ (id)md5ForFilename:(id)arg1 error:(id *)arg2;
@property(copy) NSString *file; // @synthesize file=_file;
- (id)computeMD5WithError:(id *)arg1;
- (id)computeMD5WithStream:(id)arg1 error:(id *)arg2;
- (void)cancel;
@property unsigned long long bytesAnalyzed;
- (void)dealloc;
- (id)initWithFile:(id)arg1;
- (id)init;

@end

@interface ITunesTransporterAuthenticatePurpleProviderWorker : ITunesTransporterWorker
{
    NSString *_provider;
}

- (id)provider;
- (void)transporterCompleted;
- (id)parsePurpleProviderFromXMLString:(id)arg1;
- (void)transporterWillStart;
- (void)dealloc;
- (id)init;

@end

@interface ITunesTransporterProviderListWorker : ITunesTransporterWorker
{
    NSArray *_providers;
    NSDictionary *_providerShortNameMapping;
}

- (id)providerShortNameMapping;
- (id)providers;
- (void)transporterCompleted;
- (void)transporterWillStart;
- (id)parseProvidersFromXMLString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ITunesTransporterUploadWorker : ITunesTransporterWorker <MZThroughputWorker>
{
    id <ITunesPackageSource> _source;
    unsigned long long _transferSize;
    unsigned long long _transferred;
    BOOL _transferSizeSet;
    BOOL _checksumEnabled;
    NSMutableDictionary *_bytesTransferred;
    NSMutableDictionary *_fileSizes;
}

+ (BOOL)appendThrottleForTransport:(id)arg1;
+ (BOOL)appendTransport:(id)arg1;
+ (void)initialize;
- (void)didReceiveTransporterErrorLine:(id)arg1;
- (void)didReceiveTransporterLine:(id)arg1;
- (void)processTransporterOutput:(id)arg1;
- (id)extractSchedulingRestart:(id)arg1;
- (id)extractPercentCompleted:(id)arg1;
- (id)extractResumePercentCompleted:(id)arg1;
- (void)scanForFileSizes:(id)arg1;
- (BOOL)extractUploadDone:(id)arg1;
- (BOOL)extractDoneComputingChecksum:(id)arg1;
- (BOOL)extractComputingChecksum:(id)arg1;
- (BOOL)extractCommunicatingWithStore:(id)arg1;
- (BOOL)extractDiagnosticTesting:(id)arg1;
- (BOOL)extractAnalyzingAssets:(id)arg1;
- (BOOL)extractAuthenticating:(id)arg1;
- (void)resetSigniantProgress;
- (void)resetProgress;
- (id)uploadErrors;
- (unsigned long long)completed;
- (unsigned long long)size;
- (void)transporterCompleted;
- (id)parseResultsFromString:(id)arg1;
- (void)transporterWillStart;
- (id)buildEnvironmentWithPassword:(id)arg1 uuid:(id *)arg2;
- (id)quoteIfNeeded:(id)arg1;
- (void)setChecksumEnabled:(BOOL)arg1;
- (BOOL)isChecksumEnabled;
- (void)dealloc;
- (id)initWithPackageSource:(id)arg1;

@end

@interface ITunesTransporterVideoLookupWorker : ITunesTransporterWorker
{
    BOOL _validVendorID;
    NSString *_assetTitle;
    NSCalendarDate *_releaseDate;
    NSString *_mediaType;
    NSCalendarDate *_airDate;
    NSString *_providerShortName;
    NSString *_vendorIdentifier;
}

- (id)releaseDate;
- (id)airDate;
- (id)mediaType;
- (id)assetTitle;
- (BOOL)isValidVendorID;
- (void)transporterCompleted;
- (id)parseAssetInformationFromString:(id)arg1;
- (id)vendorIdentifier;
- (id)providerShortName;
- (void)dealloc;
- (id)init;

@end

@interface ITunesTransporterWorker : MZAbstractWorker
{
    ITunesTransporter *_transporter;
    long long _terminationStatus;
    long long _finished;
    NSDataToStringFilter *_stdoutFilter;
    NSDataToStringFilter *_stderrFilter;
}

+ (void)initialize;
- (void)didReceiveTransporterErrorOutput:(id)arg1;
- (void)didReceiveTransporterOutput:(id)arg1;
- (void)filter:(id)arg1 didFilterString:(id)arg2;
- (void)didReceiveTransporterErrorLine:(id)arg1;
- (void)didReceiveTransporterLine:(id)arg1;
- (id)parseAllWarningsFromString:(id)arg1;
- (id)extractInfoMessageFromLineOnlyIfPresent:(id)arg1;
- (id)parseAllInfoMessagesFromString:(id)arg1;
- (id)parseAllErrorsFromString:(id)arg1;
- (id)parseErrorsFromString:(id)arg1;
- (id)extractMultipleErrorsFromString:(id)arg1;
- (id)extractWarningFromLineOnlyIfPresent:(id)arg1;
- (id)extractErrorFromLineOnlyIfPresent:(id)arg1;
- (id)extractErrorFromLine:(id)arg1;
- (id)parseErrorFromXMLString:(id)arg1;
- (id)parseErrorFromString:(id)arg1;
- (id)trimError:(id)arg1;
- (void)transporterCompleted:(id)arg1;
- (void)run;
- (void)cancel;
- (id)transporter;
- (void)transporterCompleted;
- (void)transporterWillStart;
- (void)setEnvironment:(id)arg1;
- (id)environment;
- (id)arguments;
- (void)setArguments:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithArguments:(id)arg1;

@end

@interface ITunesPackageBuilder : MZAbstractWorker <ITunesPackageSource>
{
    NSString *_username;
    NSString *_password;
    NSString *_providerShortName;
    NSString *_packagePath;
    NSString *_transport;
    NSData *_token;
}

@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (void)setProviderShortName:(id)arg1;
- (id)providerShortName;
- (void)setTransport:(id)arg1;
- (id)transport;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setUsername:(id)arg1;
- (id)username;
- (void)setPackagePath:(id)arg1;
- (id)packagePath;
- (void)dealloc;
- (id)init;

@end

@interface ITunesVideoPackageBuilderWorker : ITunesPackageBuilder
{
    ITunesTransporterVideoLookupWorker *_videoMetadataWorker;
    MZMD5Worker *_md5Worker;
    MZFileCopyOperation *_copy;
    NSString *_assetType;
    unsigned long long _size;
}

- (double)percentComplete;
- (id)providerShortName;
- (void)run;
- (id)createPackage;
- (id)uniqueDirectoryNameWithExample:(id)arg1;
- (id)_createPackageAtDirectory:(id)arg1 forSourceFile:(id)arg2 md5:(id)arg3;
- (void)cancel;
- (id)fileCopy:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (void)_generateMetadataXMLForSourceFile:(id)arg1 md5:(id)arg2 size:(id)arg3 inDirectory:(id)arg4;
- (id)xmlAssetType;
- (BOOL)isMediaTypeMovie;
- (void)dealloc;
- (id)initWithMetadataWorker:(id)arg1 md5Worker:(id)arg2 assetType:(id)arg3;

@end

@interface MZMD5Worker : MZAbstractWorker <MZThroughputWorker>
{
    NSString *_file;
    MZMD5Operation *_computer;
    unsigned long long _fileSize;
    NSString *_md5;
}

- (unsigned long long)completed;
- (unsigned long long)size;
- (id)file;
- (id)md5;
- (double)percentComplete;
- (void)cancel;
- (void)run;
- (BOOL)calculateFileSize;
- (void)dealloc;
- (id)initWithFile:(id)arg1;

@end

@interface NSBundleUtilities : NSObject
{
}

+ (BOOL)isBundleAtURL:(id)arg1;
+ (id)bundleIdentifierAndBundleVersionInfoForApplicationAtPath:(id)arg1 errors:(id *)arg2;
+ (id)bundleIdentifierAndBundleVersionInfoForURL:(id)arg1 errors:(id *)arg2;
+ (id)bundleIdentifierForApplicationAtPath:(id)arg1;
+ (id)bundleIdentifierForURL:(id)arg1;
+ (id)applicationName;
+ (id)applicationDescription;
+ (id)applicationShortenedVersion;
+ (id)applicationVersion;
+ (id)bundleShortenedVersion:(id)arg1;
+ (id)bundleVersion:(id)arg1;
+ (id)applicationBundleInfoDictionary;
+ (id)applicationBundle;

@end

@interface ITunesPackageSource : NSObject <ITunesPackageSource>
{
    NSString *_packagePath;
    NSString *_username;
    NSString *_password;
    NSString *_providerShortName;
    NSString *_transport;
    NSData *_token;
}

@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (id)description;
- (void)setProviderShortName:(id)arg1;
- (id)providerShortName;
- (void)setTransport:(id)arg1;
- (id)transport;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setUsername:(id)arg1;
- (id)username;
- (void)setPackagePath:(id)arg1;
- (id)packagePath;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceAuthorizationHostnameAndAppIdKey : MZITunesProducerServiceClient
{
    NSString *_appIdKey;
    NSString *_hostname;
}

@property(retain, nonatomic) NSString *hostname; // @synthesize hostname=_hostname;
@property(retain, nonatomic) NSString *appIdKey; // @synthesize appIdKey=_appIdKey;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZBase64Coder : NSObject
{
    int _flags;
}

+ (id)decodedValueWithBase64Data:(id)arg1 error:(id *)arg2;
+ (id)decodedValueWithBase64Data:(id)arg1;
+ (id)encodedBase64ValueWithData:(id)arg1 newlineInterval:(unsigned long long)arg2 error:(id *)arg3;
+ (id)encodedBase64ValueWithData:(id)arg1 newlineInterval:(unsigned long long)arg2;
+ (id)encodedBase64ValueWithData:(id)arg1 error:(id *)arg2;
+ (id)encodedBase64ValueWithData:(id)arg1;
+ (id)coder;
- (id)decodedValueWithBase64Data:(id)arg1 error:(id *)arg2;
- (id)encodedBase64ValueWithData:(id)arg1 newlineInterval:(unsigned long long)arg2 error:(id *)arg3;
- (id)encodedBase64ValueWithData:(id)arg1 error:(id *)arg2;
- (void)setFlags:(int)arg1;
- (int)flags;
- (id)init;

@end

@interface MZStringLoader : NSObject
{
    unsigned long long _defaultEncoding;
}

+ (unsigned long long)defaultEncodingForNewLoaders;
+ (id)defaultLoader;
- (unsigned long long)bomAwareEncodingForData:(id)arg1 length:(unsigned long long *)arg2;
- (id)bomAwareStringFromData:(id)arg1;
- (id)bomAwareStringFromFile:(id)arg1 error:(id *)arg2;
- (void)setDefaultEncoding:(unsigned long long)arg1;
- (unsigned long long)defaultEncoding;
- (id)init;

@end

@interface MZAbstractToolExecutor : NSObject <MZTaskDelegate>
{
    NSMutableData *_stdout;
    NSMutableData *_stderr;
    unsigned long long _encoding;
    NSString *_currentDirectoryPath;
    long long _code;
}

@property(nonatomic) long long code; // @synthesize code=_code;
@property(retain, nonatomic) NSString *currentDirectoryPath; // @synthesize currentDirectoryPath=_currentDirectoryPath;
- (void)taskDidTerminate:(id)arg1;
- (void)task:(id)arg1 didAppendToStandardError:(id)arg2;
- (void)task:(id)arg1 didAppendToStandardOutput:(id)arg2;
- (id)standardError;
- (id)standardOut;
- (void)setOutputEncoding:(unsigned long long)arg1;
- (unsigned long long)outputEncoding;
- (id)execute;
- (id)createResult;
- (void)evaluateOutputAndWaitIfNeeded:(long long)arg1;
- (void)dealloc;
- (id)init;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (Class)executorResultClass;
- (BOOL)expectsStandardOutputWithSuccessfulExit;

@end

@interface MZToolExecutorResult : NSObject
{
    unsigned long long _outputEncoding;
    NSString *_commandString;
    NSData *_standardOutput;
    NSData *_standardError;
    NSNumber *_errorCode;
    NSError *_error;
}

+ (id)resultWithTask:(id)arg1;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSNumber *errorCode; // @synthesize errorCode=_errorCode;
@property(retain, nonatomic) NSData *standardError; // @synthesize standardError=_standardError;
@property(retain, nonatomic) NSData *standardOutput; // @synthesize standardOutput=_standardOutput;
@property(retain, nonatomic) NSString *commandString; // @synthesize commandString=_commandString;
@property(nonatomic) unsigned long long outputEncoding; // @synthesize outputEncoding=_outputEncoding;
- (id)describeAsPlist;
- (id)errorCodeString;
- (id)standardErrorString;
- (id)standardOutputString;
- (void)dealloc;
- (id)initWithTask:(id)arg1;

@end

@interface MZIconSizeRange : NSObject
{
    unsigned long long _widthMin;
    unsigned long long _widthMax;
    unsigned long long _heightMin;
    unsigned long long _heightMax;
}

- (id)description;
- (BOOL)containsWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;
- (void)setHeightMax:(unsigned long long)arg1;
- (unsigned long long)heightMax;
- (void)setHeightMin:(unsigned long long)arg1;
- (unsigned long long)heightMin;
- (void)setWidthMax:(unsigned long long)arg1;
- (unsigned long long)widthMax;
- (void)setWidthMin:(unsigned long long)arg1;
- (unsigned long long)widthMin;
- (void)dealloc;
- (id)initWithString:(id)arg1;
- (id)init;

@end

@interface MZDateFormatter : NSDateFormatter
{
}

+ (id)parseAndFormatDate:(id)arg1 error:(id *)arg2;
+ (id)parseAndFormatDate:(id)arg1;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (id)editingStringForObjectValue:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (BOOL)getObjectValue:(id *)arg1 forString:(id)arg2 range:(inout struct _NSRange *)arg3 error:(id *)arg4;
- (BOOL)isDateStringValidWithSeparators:(id)arg1;
- (BOOL)isDateStringAllDecimalsAndLessThanEightInLength:(id)arg1;

@end

@interface MZDateTransformer : NSValueTransformer
{
    NSString *_dateFormat;
}

+ (id)defaultDateOutputFormat;
+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ITunesTransporterRepairEpubAssetWorker : ITunesTransporterWorker
{
    NSString *_sourcePath;
    NSString *_destination;
    NSArray *_repairProblems;
}

+ (void)initialize;
- (void)transporterCompleted;
- (id)parseResultsFromString:(id)arg1;
- (void)transporterWillStart;
- (void)dealloc;
- (id)initWithEpubPath:(id)arg1 destination:(id)arg2;
- (id)destination;
- (id)sourcePath;

@end

@interface MZJSONDeserializer : NSObject
{
    unsigned long long _encoding;
    char *_readBuffer;
    unsigned long long _allocated;
    unsigned long long _index;
}

+ (id)deserializer;
- (id)deserializeJSONData:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONStream:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONStringReader:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONStringReader:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (id)deserializeJSONNullWithStringReader:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONNumberWithStringReader:(id)arg1 initialCharacter:(unsigned short)arg2 error:(id *)arg3;
- (id)deserializeJSONBooleanWithStringReader:(id)arg1 initialCharacter:(unsigned short)arg2 error:(id *)arg3;
- (id)deserializeJSONStringWithStringReader:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONDictionaryWithStringReader:(id)arg1 error:(id *)arg2;
- (id)deserializeJSONArrayWithStringReader:(id)arg1 error:(id *)arg2;
- (unsigned long long)encoding;
- (void)dealloc;
- (id)init;

@end

@interface MZJSONSerializer : NSObject
{
    unsigned long long _encoding;
    CDUnknownFunctionPointerType _UTF8Encoder;
    CDUnknownFunctionPointerType _characterEncoder;
}

+ (id)serializer;
- (id)serializeToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeNullToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeNumberToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeDictionaryToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeArrayToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeStringToJSON:(id)arg1 stream:(id)arg2;
- (id)serializeToJSON:(id)arg1 error:(id *)arg2;
- (void)setEncoding:(unsigned long long)arg1;
- (unsigned long long)encoding;
- (id)init;

@end

@interface MZStringStreamReader : NSObject
{
    unsigned long long _encoding;
    unsigned int _cfencoding;
    NSInputStream *_stream;
    void *_private1;
    unsigned long long _index;
    BOOL _atEnd;
}

- (BOOL)isAtEnd;
- (void)pushCharacter:(unsigned short)arg1;
- (unsigned long long)position;
- (BOOL)getNextCharacter:(unsigned short *)arg1 error:(id *)arg2;
- (void)pushBytes:(char *)arg1 length:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithEncoding:(unsigned long long)arg1 stream:(id)arg2;

@end

@interface MZSecurityKeychain : NSObject
{
    struct OpaqueSecKeychainRef *_keychain;
    NSString *_path;
}

+ (id)defaultKeychain;
- (id)allGenericPasswordEntriesWithError:(id *)arg1;
- (id)removeGenericPasswordForServiceName:(id)arg1 accountName:(id)arg2;
- (id)removeGenericPasswordForServiceName:(id)arg1;
- (id)setGenericPassword:(id)arg1 forServiceName:(id)arg2 accountName:(id)arg3;
- (id)genericPasswordForServiceName:(id)arg1 accountName:(id)arg2 error:(id *)arg3;
- (id)setGenericPassword:(id)arg1 forServiceName:(id)arg2;
- (id)genericPasswordForServiceName:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1 error:(id *)arg2;
- (id)initWithKeychain:(struct OpaqueSecKeychainRef *)arg1;

@end

@interface MZSecurityKeychainEntry : NSObject
{
    NSString *_serviceName;
    NSString *_username;
    NSDate *_creationDate;
    NSDate *_modificationDate;
}

@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)dealloc;

@end

@interface MZBase64EncodingUtilities : NSObject
{
    unsigned long long _encoding;
    BOOL _compressing;
}

+ (id)utilities;
+ (unsigned long long)defaultEncoding;
+ (id)defaultUtilities;
- (id)encodeDatas:(id)arg1 error:(id *)arg2;
- (id)encodedFilesAtPaths:(id)arg1 error:(id *)arg2;
- (id)decodedData:(id)arg1 error:(id *)arg2;
- (id)encodedData:(id)arg1 error:(id *)arg2;
- (id)encodedFileAtPath:(id)arg1 error:(id *)arg2;
- (void)setCompressing:(BOOL)arg1;
- (BOOL)isCompressing;
- (void)setEncoding:(unsigned long long)arg1;
- (unsigned long long)encoding;
- (id)init;

@end

@interface MZCompressionUtilities : NSObject
{
}

+ (id)defaultUtilities;
- (id)gzipInflate:(id)arg1 error:(id *)arg2;
- (id)gzipDeflate:(id)arg1 error:(id *)arg2;

@end

@interface MZJSONServiceClient : NSObject
{
    NSDictionary *_result;
    NSMutableData *_jsonReceivedData;
    NSURLResponse *_response;
    BOOL _cancelled;
    NSString *_method;
    NSString *_endpoint;
    long long _expectedResponseLength;
    unsigned long long _requestLength;
    unsigned long long _requestBytesWritten;
}

+ (void)initialize;
- (void)didReceiveResponse;
- (void)willReceiveResponse;
- (void)didSendRequest;
- (void)willSendRequest;
- (void)seriesCompleted;
- (unsigned long long)requestBytesWritten;
- (unsigned long long)requestLength;
- (unsigned long long)responseBytesRead;
- (long long)expectedResponseLength;
- (id)_idForRequest;
- (void)_setResult:(id)arg1;
- (id)_createErrorResponseWithError:(id)arg1;
- (id)_createErrorResponseWithErrorMessage:(id)arg1 error:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (id)generateArguments;
- (id)generateArgumentsWithError:(id *)arg1;
- (void)processApplicationSettings:(id)arg1;
- (id)createRequestWithError:(id *)arg1;
- (void)reset;
- (id)responseDictionary;
- (id)getResultDictionary;
- (BOOL)shouldSkipRequest;
- (id)endpoint;
- (void)setEndpoint:(id)arg1;
- (id)method;
- (void)setMethod:(id)arg1;
- (BOOL)isCancelled;
- (void)cancel;
- (BOOL)isComplete;
- (void)dealloc;
- (id)initWithMethod:(id)arg1 endpoint:(id)arg2;

@end

@interface MZITunesProducerServiceClient : MZLabelServiceClient
{
}

+ (void)initialize;
- (id)init;

@end

@interface MZLabelServiceClient : MZJSONServiceClient <MZWebServiceOperation>
{
    NSString *_username;
    NSString *_password;
    id <MZWebServiceOperationDelegate> _nonretainedDelegate;
    BOOL _delegateRespondsToStatusUpdate;
    NSMutableArray *_warnings;
    NSData *_token;
}

+ (id)workItem;
+ (id)worker;
+ (BOOL)isErrorResponse:(id)arg1;
+ (id)errorCodeFromResponse:(id)arg1;
+ (id)warningMessagesFromResponse:(id)arg1;
+ (id)errorMessagesFromResponse:(id)arg1;
+ (id)errorMessageFromResponse:(id)arg1;
+ (id)errorFromString:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (void)didReceiveResponse;
- (void)willReceiveResponse;
- (void)didSendRequest;
- (void)willSendRequest;
- (id)workItem;
- (id)worker;
- (void)operationDidFinish;
- (void)operationWillStart;
- (id)operationMethod;
- (id)invokeSOAPCall;
- (id)processResult:(id)arg1 message:(id *)arg2;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)completedMessage;
- (id)cancelledMessage;
- (id)runningMessage;
- (id)initialMessage;
- (void)addWarning:(id)arg1;
- (id)warningMessages;
- (id)errorMessages;
- (id)errorMessage;
- (id)generateArguments;
- (id)frameworkVersions;
- (id)application;
- (id)version;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setUsername:(id)arg1;
- (id)username;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceLookupSoftwareApplications : MZITunesProducerServiceClient
{
    NSArray *_applications;
}

- (id)applications;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceAuthenticatePurpleProvider : MZITunesProducerServiceClient
{
    NSString *_provider;
}

- (id)provider;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceAuthenticateWithArguments : MZITunesProducerServiceClient
{
    NSString *_provider;
    NSString *_providerLongName;
    NSString *_providerLegalName;
    NSString *_postSigninWelcomeMessage;
    NSDictionary *_allowedPackageTypes;
}

- (id)allowedPackageTypes;
- (id)postSigninWelcomeMessage;
- (id)providerLegalName;
- (id)providerLongName;
- (id)provider;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceCompleteUploadStatusForVendorID : MZITunesProducerServiceClient
{
    NSString *_vendorId;
    NSArray *_uploads;
}

- (id)uploads;
- (id)vendorId;
- (void)setVendorId:(id)arg1;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceFetchAuthenticatedManifest : MZITunesProducerServiceClient
{
    NSString *_provider;
    NSString *_providerLongName;
    NSString *_providerLegalName;
    NSDictionary *_allowedPackageTypes;
    NSDictionary *_updatedXMLFilesManifest;
    NSDictionary *_messageOfTheDay;
    BOOL _terminateAfterMessageOfTheDay;
    NSDictionary *_faqURLs;
}

- (id)tvFaqURL;
- (id)filmFaqURL;
- (id)softwareFaqURL;
- (id)musicFaqURL;
- (id)publicationFaqURL;
- (id)_faqURLWithKey:(id)arg1;
- (id)faqURLs;
- (BOOL)terminateAfterMessageOfTheDay;
- (id)messageOfTheDay;
- (id)updatedXMLFilesManifest;
- (id)allowedPackageTypes;
- (id)providerLegalName;
- (id)providerLongName;
- (id)provider;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceFetchUpdatedXMLContents : MZITunesProducerServiceClient
{
    NSDictionary *_requestedFiles;
    NSDictionary *_updatedXMLFileContents;
}

- (id)updatedXMLFileContents;
- (id)requestedFiles;
- (void)setRequestedFiles:(id)arg1;
- (id)generateArguments;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)processResult:(id)arg1 message:(id *)arg2;
- (id)responseDictionary;
- (id)invokeSOAPCall;
- (void)operationWillStart;
- (id)reconcileContents:(id)arg1 expectedChecksums:(id)arg2 actualChecksums:(id)arg3;
- (id)uncompressFileContents:(id)arg1 checksums:(id *)arg2 error:(id *)arg3;
- (id)decodeEncodedFileContents:(id)arg1 checksums:(id *)arg2 error:(id *)arg3;
- (id)decodeEncodedString:(id)arg1 file:(id)arg2 checksum:(id *)arg3 error:(id *)arg4;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceLookupMetadata : MZITunesProducerServiceClient
{
    NSString *_vendorId;
    NSString *_appleId;
    NSString *_genericId;
    NSArray *_knownVersions;
    BOOL _encodingMetadata;
    MZLookupMetadataSubItemInfo *_subItemInfo;
    NSString *_metadata;
    BOOL _coverArtFixDisabled;
}

+ (int)maxNumberOfIapsAllowedForLookup;
+ (void)initialize;
- (BOOL)hasTooManySubItemsErrorMessage;
- (BOOL)isCoverArtFixDisabled;
- (id)metadata;
- (id)subItemInfo;
- (void)setSubItemInfo:(id)arg1;
- (BOOL)isEncodingMetadata;
- (void)setEncodingMetadata:(BOOL)arg1;
- (id)knownVersions;
- (void)setKnownVersions:(id)arg1;
- (id)vendorId;
- (void)setVendorId:(id)arg1;
- (id)appleId;
- (void)setAppleId:(id)arg1;
- (id)genericId;
- (void)setGenericId:(id)arg1;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)decodeMetadata:(id)arg1 error:(id *)arg2;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceReportUploadFailureToApple : MZITunesProducerServiceClient
{
    NSString *_failureLog;
    NSString *_userNote;
}

- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)userNote;
- (void)setUserNote:(id)arg1;
- (id)failureLog;
- (void)setFailureLog:(id)arg1;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceUploadStatusForVendorID : MZITunesProducerServiceClient
{
    NSString *_vendorId;
    NSArray *_uploads;
}

- (id)uploads;
- (id)vendorId;
- (void)setVendorId:(id)arg1;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceLookupAllowedPods : MZLabelServiceClient
{
    NSString *_transport;
    NSString *_providerShortName;
    NSArray *_transports;
    NSDictionary *_transportPodsMap;
}

- (id)podsForTransport:(id)arg1;
- (id)transports;
- (void)cacheTransportAndPodsMap;
- (id)generateArguments;
- (void)setProviderShortName:(id)arg1;
- (id)providerShortName;
- (void)setTransport:(id)arg1;
- (id)transport;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceLookupVideo : MZLabelServiceClient
{
    NSString *_providerShortName;
    NSString *_vendorIdentifier;
    BOOL _resultsCached;
    NSString *_videoAirDate;
    NSString *_videoReleaseDate;
    NSString *_videoTitle;
    NSString *_videoType;
}

- (id)videoReleaseDate;
- (id)videoAirDate;
- (id)videoType;
- (id)videoTitle;
- (void)setVendorIdentifier:(id)arg1;
- (id)vendorIdentifier;
- (void)setProviderShortName:(id)arg1;
- (id)providerShortName;
- (void)cacheResults;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceOperationRequestResponseWorker : MZWebServiceOperationWorker
{
    BOOL _operationRespondsToAllMethods;
    double _responseAsPercentOfTotal;
}

- (double)percentComplete;
- (void)setResponseAsPercentOfTotal:(double)arg1;
- (double)responseAsPercentOfTotal;
- (id)initWithOperation:(id)arg1;
- (double)defaultResponseAsPercentOfTotal;

@end

@interface MZWebServiceOperationWorker : MZWebServiceWorker <MZWebServiceOperationDelegate>
{
    id <MZWebServiceOperation> _operation;
}

- (void)seriesCompleted;
- (void)operation:(id)arg1 didUpdateStatus:(id)arg2;
- (void)execute;
- (void)addErrors;
- (void)addErrorIfAbsent:(id)arg1;
- (void)addWarnings;
- (id)operation;
- (void)operationDidFinish;
- (void)operationWillStart;
- (void)dealloc;
- (id)initWithOperation:(id)arg1;

@end

@interface MZWebServiceWorker : MZAbstractWorker
{
}

- (void)run;
- (void)cancel;
- (void)execute;
- (id)operation;
- (void)operationDidFinish;
- (void)operationWillStart;

@end

@interface MZWebServiceLookupProvider : MZLabelServiceClient
{
    NSArray *_providerNames;
    NSDictionary *_providerShortNameMap;
}

- (id)providerShortNameMap;
- (id)providerNames;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceGeneratePublicationVendorId : MZITunesProducerServiceClient
{
    NSString *_title;
    NSString *_bookType;
    NSString *_vendorId;
}

- (id)vendorId;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)bookType;
- (void)setBookType:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface MZWebServiceEncodingHouseMetadataLookup : MZWebServiceLookupMetadata
{
    NSString *_providerShortName;
}

- (id)providerShortName;
- (void)setProviderShortName:(id)arg1;
- (id)generateArguments;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceRecommendPricing : MZITunesProducerServiceClient
{
    NSString *_vendorId;
    NSString *_baseCurrency;
    NSString *_physicalListPrice;
    NSString *_suggestedIBookstorePrice;
    NSString *_contentType;
    NSString *_pricingType;
    NSString *_salesStartDate;
    NSArray *_territoryPricingInfo;
    NSString *_maxForeignExchangeRateDate;
}

- (id)maxForeignExchangeRateDate;
- (id)territoryPricingInfo;
- (id)salesStartDate;
- (void)setSalesStartDate:(id)arg1;
- (id)pricingType;
- (void)setPricingType:(id)arg1;
- (id)contentType;
- (void)setContentType:(id)arg1;
- (id)suggestedIBookstorePrice;
- (void)setSuggestedIBookstorePrice:(id)arg1;
- (id)physicalListPrice;
- (void)setPhysicalListPrice:(id)arg1;
- (id)baseCurrency;
- (void)setBaseCurrency:(id)arg1;
- (id)vendorId;
- (void)setVendorId:(id)arg1;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceGenerateVendorID : MZITunesProducerServiceClient
{
    NSString *_vendorId;
}

- (id)vendorId;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZMD5Context : NSObject
{
    int _state;
    struct CC_MD5state_st _context;
    NSString *_md5;
    NSError *_error;
}

+ (id)context;
- (id)md5WithError:(id *)arg1;
- (int)state;
- (id)close;
- (id)updateWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
- (id)open;
- (void)setError:(id)arg1;
- (id)error;
- (void)dealloc;
- (id)init;

@end

@interface MZMD5InputStream : NSInputStream
{
    NSInputStream *_stream;
    MZMD5Context *_context;
    NSError *_error;
}

+ (id)streamWithInputStream:(id)arg1;
- (id)md5WithError:(id *)arg1;
- (BOOL)hasBytesAvailable;
- (BOOL)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1;

@end

@interface MZMD5OutputStream : NSOutputStream
{
    NSOutputStream *_stream;
    MZMD5Context *_context;
    NSError *_error;
}

+ (id)streamWithOutputStream:(id)arg1;
- (id)md5WithError:(id *)arg1;
- (BOOL)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1;

@end

@interface MZBufferedOutputStream : NSOutputStream
{
    NSOutputStream *_output;
    void *_opaque;
    NSError *_error;
}

- (BOOL)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (id)_flushByteQueue;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1 bufferSize:(unsigned long long)arg2;
- (id)initWithOutputStream:(id)arg1;

@end

@interface MZMemoryOutputStream : NSOutputStream
{
    char *_memory;
    unsigned long long _length;
    unsigned long long _capacity;
    unsigned long long _growby;
    NSError *_error;
    id <NSStreamDelegate> _nonretainedDelegate;
    unsigned long long _status;
}

- (BOOL)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (BOOL)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (unsigned long long)length;
- (id)dataByResettingMemoryStream;
- (id)data;
- (const char *)memory;
- (void)dealloc;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface MZWebServiceLookupArtworkForContent : MZITunesProducerServiceClient
{
    NSNumber *_adamId;
    NSString *_entityName;
    NSDictionary *_results;
}

@property(retain) NSDictionary *results; // @synthesize results=_results;
@property(retain) NSString *entityName; // @synthesize entityName=_entityName;
@property(retain) NSNumber *adamId; // @synthesize adamId=_adamId;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZLookupMetadataSubItemInfo : NSObject
{
    int _subItemType;
    NSArray *_subItemIds;
}

+ (id)subItemInfoWithSubItemType:(int)arg1 subItemIds:(id)arg2;
- (BOOL)isSubItemTypeGameCenterLeaderboard;
- (BOOL)isSubItemTypeGameCenterAchievement;
- (BOOL)isSubItemTypeInAppPurchase;
- (id)subItemIds;
- (void)setSubItemIds:(id)arg1;
- (int)subItemType;
- (void)setSubItemType:(int)arg1;
- (void)dealloc;
- (id)initWithSubItemType:(int)arg1 subItemIds:(id)arg2;

@end

@interface MZWebServiceSearch : MZITunesProducerServiceClient
{
    NSString *_contentType;
    NSArray *_searchFields;
    NSString *_keywords;
    NSArray *_results;
}

- (id)results;
- (void)setKeywords:(id)arg1;
- (id)keywords;
- (void)setSearchFields:(id)arg1;
- (id)searchFields;
- (void)setContentType:(id)arg1;
- (id)contentType;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (int)numberOfMatchesInResults;
- (id)runningMessage;
- (id)initialMessage;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface NSFileManager (ITunesConnectFoundationExtensions)
- (BOOL)createSymbolicLinkAtPath:(id)arg1 destinationPath:(id)arg2 error:(id *)arg3;
- (BOOL)setFileAttributes:(id)arg1 ofItemAtPath:(id)arg2 error:(id *)arg3;
- (id)fileSizeOfItemAtPath:(id)arg1 error:(id *)arg2;
- (id)computeFileSize:(id)arg1;
- (id)uniquePathWithPrototype:(id)arg1;
@end

@interface NSString (ITunesConnectFoundationExtensions)
+ (id)substituteKeyValueTokens:(id)arg1 inString:(id)arg2 separator:(id)arg3;
+ (BOOL)isNilOrEmpty:(id)arg1;
- (long long)caseAndDiacriticInsensitiveCompare:(id)arg1;
- (id)stringBySubstitutingKeyValueTokens:(id)arg1;
- (id)stringBySubstitutingKeyValueTokens:(id)arg1 separator:(id)arg2;
- (BOOL)hasAllDecimalDigits;
- (id)trim;
- (id)trimStartOfCharactersInSet:(id)arg1;
@end

@interface NSObject (MZDeepCopying)
- (id)deepCopy;
- (id)deepMutableCopy;
@end

@interface NSArray (MZDeepCopying)
- (id)deepMutableCopyWithZone:(struct _NSZone *)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
@end

@interface NSDictionary (MZDeepCopying)
- (id)deepMutableCopyWithZone:(struct _NSZone *)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
@end

@interface NSSet (MZDeepCopying)
- (id)deepMutableCopyWithZone:(struct _NSZone *)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
@end

@interface NSScanner (ITunesConnectFoundationExtensions)
- (BOOL)tryScanningUpToString:(id)arg1 intoString:(id *)arg2;
@end

@interface NSUserDefaults (ITunesConnectFoundationExtensions)
+ (void)configurePriorityRegistrationExtensions;
- (void)removeRegisteredDefaultsForKeys:(id)arg1;
- (void)synchronizeRegistrationDomains;
- (void)registerPriorityDefaults:(id)arg1;
- (void)registerDefaultsOverAllDomains:(id)arg1;
- (void)registerDefaultsOverRegistrationDomainRespectingCommandLineOverrides:(id)arg1;
- (void)REPLACEMENT_setVolatileDomain:(id)arg1 forName:(id)arg2;
- (void)REPLACEMENT_registerDefaults:(id)arg1;
@end

@interface NSProcessInfo (ITunesConnectFoundationExtensions)
+ (id)applicationName;
@end

