//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    CDStruct_b2fbf00d _field1;
    CDStruct_b2fbf00d _field2;
    float _field3[2];
};

union _GLKVector4 {
    CDStruct_818bb265 _field1;
    CDStruct_818bb265 _field2;
    CDStruct_818bb265 _field3;
    float _field4[4];
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/FitnessUI.framework/FitnessUI
// UUID: FA55A0E3-D792-3E66-BC26-74DE7B2DB070
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 362.10.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol FIUIAchievementsModelDelegate <NSObject>
- (void)achievementsDidChangeInModel:(FIUIAchievementsModel *)arg1;
@end

@protocol FIUIRingGroupAnimationStatusDelegate
- (void)ringGroupDidBeginAnimations:(FIUIRingGroupController *)arg1;
@end

@protocol FUAxisDescriptor <NSObject>
@property(nonatomic) _Bool hideClippedLabels;
@property(nonatomic) double subAxisDescriptorPadding;
@property(nonatomic) double axisDescriptorPadding;
@property(retain, nonatomic) UIColor *unhighlightedSubLabelColor;
@property(retain, nonatomic) UIColor *highlightedSubLabelColor;
@property(retain, nonatomic) UIColor *selectedLabelColor;
@property(retain, nonatomic) UIColor *unhighlightedLabelColor;
@property(retain, nonatomic) UIColor *highlightedLabelColor;
@property(retain, nonatomic) UIFont *subLabelFont;
@property(retain, nonatomic) UIFont *labelFont;
@property(nonatomic) unsigned long long labelAlignment;
@property(retain, nonatomic) id maxValue;
@property(retain, nonatomic) id minValue;
- (Class)expectedDataType;
- (NSArray *)axisLabels;

@optional
- (void)selectLabel:(_Bool)arg1 atIndex:(unsigned long long)arg2;
- (NSString *)textForSubLabelAtIndex:(unsigned long long)arg1;
- (id)positionForSubLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)numSubLabels;
- (NSArray *)axisSubLabels;
- (NSArray *)xAxisLabelStringArray;
- (NSString *)textForLabelAtIndex:(unsigned long long)arg1;
- (id)positionForLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)numLabels;
@end

@protocol FUChartDataGroupDataSource <NSObject>
- (id <FUChartPoint>)dataGroup:(FUChartDataGroup *)arg1 pointForSetAtIndex:(unsigned long long)arg2 pointIndex:(unsigned long long)arg3;
- (unsigned long long)dataGroup:(FUChartDataGroup *)arg1 numberOfPointsInSetAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfDataSetsInGroup:(FUChartDataGroup *)arg1;

@optional
- (NSArray *)dataGroup:(FUChartDataGroup *)arg1 labelsForSetAtIndex:(unsigned long long)arg2;
- (NSArray *)dataGroup:(FUChartDataGroup *)arg1 dataPointsForSetAtIndex:(unsigned long long)arg2;
@end

@protocol FUChartDataSetDataSource <NSObject>
- (id <FUChartPoint>)dataSet:(FUChartDataSet *)arg1 chartPointForIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfDataPointsForDataSet:(FUChartDataSet *)arg1;

@optional
- (NSArray *)labelsForSet:(FUChartDataSet *)arg1;
- (NSArray *)dataPointsForSet:(FUChartDataSet *)arg1;
@end

@protocol FUChartPoint <NSObject>
@property(retain, nonatomic) id yValue;
@property(retain, nonatomic) NSDate *xValue;
- (float)yValueFloatRepresentation;
- (NSArray *)allYValues;
- (NSNumber *)yValueForKey:(NSString *)arg1;
@end

@protocol FUChartSeriesDataSource <NSObject>
- (id)maxYValueForChartSeries:(FUChartSeries *)arg1;
- (id)minYValueForChartSeries:(FUChartSeries *)arg1;
- (id)maxXValueForChartSeries:(FUChartSeries *)arg1;
- (id)minXValueForChartSeries:(FUChartSeries *)arg1;

@optional
- (NSArray *)labelsAtIndex:(unsigned long long)arg1 forSeriesAtIndex:(unsigned long long)arg2;
@end

@protocol FUCrossFadeZoomTransitionAnimatorSupport <NSObject>
- (void)setUpForZoomTransitionAnimator:(FUCrossFadeZoomTransitionAnimator *)arg1;
@end

@protocol FUScrollWheelDataSource <NSObject>
- (NSString *)scrollWheel:(FUScrollWheel *)arg1 titleForItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfRowsInScrollWheel:(FUScrollWheel *)arg1;
@end

@protocol FUScrollWheelDelegate <NSObject>

@optional
- (_Bool)scrollWheelShouldBecomeFirstResponder:(FUScrollWheel *)arg1;
- (void)tappedScrollWheel:(FUScrollWheel *)arg1;
- (void)scrollWheel:(FUScrollWheel *)arg1 didChangeCurrentIndexTo:(unsigned long long)arg2;
@end

@protocol FUViewControllerAnimatedTransitioning <UIViewControllerAnimatedTransitioning>
- (void)completeTransitionImmediately;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@interface _FIUIFakeStatistics : NSObject
{
    HKQuantity *_sumQuantity;
}

@property(retain, nonatomic) HKQuantity *sumQuantity; // @synthesize sumQuantity=_sumQuantity;
- (void).cxx_destruct;
- (id)description;

@end

@interface _FIUIFakeStatisticsCollection : NSObject
{
    NSMutableArray *_buckets;
    NSCalendar *_calendar;
}

- (void).cxx_destruct;
- (id)statisticsForDate:(id)arg1;
- (void)setThirtyMinuteBuckets:(id)arg1 withUnit:(id)arg2;

@end

@interface FIUIModel : NSObject <FIUIAchievementsModelDelegate>
{
    HKHealthStore *_healthStore;
    FIUIWeeklyGoalModel *_weeklyGoalModel;
    FIUIAchievementsModel *_achievementsModel;
    NSHashTable *_observers;
    NSMutableDictionary *_currentActivityQueryClients;
    HKCurrentActivityCacheQuery *_queue_currentActivityCacheQuery;
    long long _queue_activityCacheQueryRetries;
    HKActivityCache *_queue_currentActivityCacheForClients;
    NSObject<OS_dispatch_queue> *_activityCacheQueryClientQueue;
    NSPredicate *_sourcesPredicate;
    NSObject<OS_dispatch_queue> *_sourcesQueue;
}

+ (id)activeAndIdleAndGoalHoursSampleQueryFromDate:(id)arg1 toDate:(id)arg2 predicate:(id)arg3 needsHourlyChartInfo:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;
+ (id)activeAndIdleAndGoalHoursSampleQueryForDate:(id)arg1 predicate:(id)arg2 needsHourlyChartInfo:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;
+ (id)activeAndIdleHoursObserverQueryFromDate:(id)arg1 toDate:(id)arg2 predicate:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
+ (id)activeAndIdleHoursObserverQueryForDate:(id)arg1 predicate:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
+ (void)_fakeActiveAndGoalHoursDataWithCompletion:(CDUnknownBlockType)arg1;
+ (id)_fakeCollectionForUnit:(id)arg1;
+ (id)_statisticsCollectionQueryFromDate:(id)arg1 toDate:(id)arg2 intervalSize:(id)arg3 dataType:(id)arg4 predicate:(id)arg5 sendUpdates:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;
+ (id)statisticsCollectionQueryFromDate:(id)arg1 toDate:(id)arg2 intervalSize:(id)arg3 dataType:(id)arg4 predicate:(id)arg5 sendUpdates:(_Bool)arg6 handler:(CDUnknownBlockType)arg7;
+ (id)statisticsCollectionQueryForDate:(id)arg1 intervalSize:(id)arg2 dataType:(id)arg3 predicate:(id)arg4 sendUpdates:(_Bool)arg5 handler:(CDUnknownBlockType)arg6;
+ (id)_dailyTotalsQueryFromDate:(id)arg1 toDate:(id)arg2 dataType:(id)arg3 predicate:(id)arg4 sendUpdates:(_Bool)arg5 handler:(CDUnknownBlockType)arg6;
+ (id)dailyTotalsQueryFromDate:(id)arg1 toDate:(id)arg2 dataType:(id)arg3 predicate:(id)arg4 sendUpdates:(_Bool)arg5 handler:(CDUnknownBlockType)arg6;
+ (id)dailyTotalQueryForDate:(id)arg1 dataType:(id)arg2 predicate:(id)arg3 sendUpdates:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
+ (id)stepQuantityType;
+ (id)stepUnit;
+ (id)distanceQuantityType;
+ (id)distanceUnit;
+ (id)activeHourQuantityType;
+ (id)activeHourUnit;
+ (id)briskActivityQuantityType;
+ (id)briskActivityUnit;
+ (id)calorieQuantityType;
+ (id)calorieUnit;
+ (id)_unitForDataType:(id)arg1;
- (void).cxx_destruct;
- (id)_createCurrentActivityCacheQuery;
- (void)_queue_restartCurrentActivityCacheQueryAfterError;
- (void)stopCurrentActivityCacheQueryForClientToken:(id)arg1;
- (id)startCurrentActivityCacheQueryWithHandler:(CDUnknownBlockType)arg1;
- (void)stopQuery:(id)arg1;
- (void)executeQuery:(id)arg1;
- (void)achievementsDidChangeInModel:(id)arg1;
- (void)_sendMessageToObservers:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (void)_sendMessageToObservers:(SEL)arg1 withObject:(id)arg2;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
@property(readonly, nonatomic) FIUIAchievementsModel *achievementsModel;
- (void)_printUpdatedStatistics:(id)arg1;
- (void)_printStatisticsCollection:(id)arg1;
@property(readonly, nonatomic) FIUIWeeklyGoalModel *weeklyGoalModel;
@property(readonly, nonatomic) double arcPercentPerHour;
@property(readonly, nonatomic) NSPredicate *sourcesPredicate;
- (void)_setKnownSources:(id)arg1;
- (id)initWithHealthStore:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIUIMetricColors : NSObject
{
    UIColor *_gradientLightColor;
    UIColor *_gradientDarkColor;
    UIColor *_adjustmentButtonBackgroundColor;
    UIColor *_nonGradientTextColor;
    UIColor *_buttonTextColor;
    UIColor *_buttonDisabledTextColor;
    UIColor *_valueDisplayColor;
}

+ (id)keyColors;
+ (id)clockColors;
+ (id)heartRateColors;
+ (id)paceColors;
+ (id)elapsedTimeColors;
+ (id)noMetricColors;
+ (id)distanceColors;
+ (id)sedentaryColors;
+ (id)briskColors;
+ (id)calorieColors;
+ (struct CGGradient *)newGradientForStartColor:(id)arg1 endColor:(id)arg2;
+ (id)metricColorsForGoalTypeIdentifier:(unsigned long long)arg1;
+ (id)systemGrayTextColor;
@property(retain, nonatomic) UIColor *valueDisplayColor; // @synthesize valueDisplayColor=_valueDisplayColor;
@property(retain, nonatomic) UIColor *buttonDisabledTextColor; // @synthesize buttonDisabledTextColor=_buttonDisabledTextColor;
@property(retain, nonatomic) UIColor *buttonTextColor; // @synthesize buttonTextColor=_buttonTextColor;
@property(retain, nonatomic) UIColor *nonGradientTextColor; // @synthesize nonGradientTextColor=_nonGradientTextColor;
@property(retain, nonatomic) UIColor *adjustmentButtonBackgroundColor; // @synthesize adjustmentButtonBackgroundColor=_adjustmentButtonBackgroundColor;
@property(retain, nonatomic) UIColor *gradientDarkColor; // @synthesize gradientDarkColor=_gradientDarkColor;
@property(retain, nonatomic) UIColor *gradientLightColor; // @synthesize gradientLightColor=_gradientLightColor;
- (void).cxx_destruct;

@end

@interface NLThreeRingView : UIView
{
    double _outerDiameter;
    double _interspacing;
    double _lineThickness;
    NLArcView *_calorieArcView;
    NLArcView *_briskArcView;
    NLArcView *_sedentaryArcView;
    UIImageView *_fadedView;
}

@property(retain, nonatomic) UIImageView *fadedView; // @synthesize fadedView=_fadedView;
@property(retain, nonatomic) NLArcView *sedentaryArcView; // @synthesize sedentaryArcView=_sedentaryArcView;
@property(retain, nonatomic) NLArcView *briskArcView; // @synthesize briskArcView=_briskArcView;
@property(retain, nonatomic) NLArcView *calorieArcView; // @synthesize calorieArcView=_calorieArcView;
@property(nonatomic) double lineThickness; // @synthesize lineThickness=_lineThickness;
@property(nonatomic) double interspacing; // @synthesize interspacing=_interspacing;
@property(nonatomic) double outerDiameter; // @synthesize outerDiameter=_outerDiameter;
- (void).cxx_destruct;
- (id)image;
- (void)setRingsCalorieAlpha:(double)arg1 briskAlpha:(double)arg2 sedentaryAlpha:(double)arg3;
- (void)setFaded:(_Bool)arg1;
- (void)setSedentaryPercentage:(double)arg1 animated:(_Bool)arg2;
- (void)setBriskPercentage:(double)arg1 animated:(_Bool)arg2;
- (void)setShowExpectedDot:(_Bool)arg1;
- (void)setCalorieExpectedPercentage:(double)arg1;
- (void)setCaloriePercentage:(double)arg1 animated:(_Bool)arg2;
- (id)initWithDiameter:(double)arg1 interspacing:(double)arg2 thickness:(double)arg3 delegate:(id)arg4;
- (id)fadedRingImageForDiameter:(double)arg1 interspacing:(double)arg2 thickness:(double)arg3;
- (id)_generateSedentaryArc;
- (id)_generateBriskArc;
- (id)_generateCalorieArc;
- (id)_generateArcWithNesting:(int)arg1 fromColor:(id)arg2 toColor:(id)arg3;

@end

@interface _FIUIIcon : FIUIAnimatableObject
{
    double _size;
    UIColor *_color;
    double _coloration;
    double _alpha;
    long long _frameColumns;
    long long _frameCount;
    long long _currentFrameIndex;
    struct CGPoint _position;
    struct CGPoint _firstFrameOrigin;
    struct CGSize _frameSize;
}

@property(nonatomic) long long currentFrameIndex; // @synthesize currentFrameIndex=_currentFrameIndex;
@property(nonatomic) long long frameCount; // @synthesize frameCount=_frameCount;
@property(nonatomic) long long frameColumns; // @synthesize frameColumns=_frameColumns;
@property(nonatomic) struct CGSize frameSize; // @synthesize frameSize=_frameSize;
@property(nonatomic) struct CGPoint firstFrameOrigin; // @synthesize firstFrameOrigin=_firstFrameOrigin;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) double coloration; // @synthesize coloration=_coloration;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic) double size; // @synthesize size=_size;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
- (void).cxx_destruct;
- (id)_newAnimatablePropertyForType:(unsigned long long)arg1;
- (void)addAnimation:(id)arg1 forRingGroupPropertyType:(unsigned long long)arg2;
- (_Bool)isDrawable;
- (id)init;

@end

@interface FUDatePicker : UIView <FUScrollWheelDataSource, FUScrollWheelDelegate>
{
    unsigned long long _monthOffset;
    unsigned long long _dateOffset;
    long long _yearOrder;
    long long _monthOrder;
    long long _dayOrder;
    unsigned long long _numRowsMonth;
    unsigned long long _numRowsDate;
    unsigned long long _numRowsYear;
    NSArray *_monthNames;
    NSMutableArray *_yearsWithNames;
    UILabel *_dayLabel;
    UILabel *_yearLabel;
    UILabel *_monthLabel;
    NSDateFormatter *_dateFormatter;
    _Bool _firstResponderShouldChange;
    _Bool _displayEra;
    id <FUDatePickerDelegate> _delegate;
    NSDate *_date;
    FUScrollWheel *_monthWheel;
    FUScrollWheel *_dateWheel;
    FUScrollWheel *_yearWheel;
}

@property(retain, nonatomic) FUScrollWheel *yearWheel; // @synthesize yearWheel=_yearWheel;
@property(retain, nonatomic) FUScrollWheel *dateWheel; // @synthesize dateWheel=_dateWheel;
@property(retain, nonatomic) FUScrollWheel *monthWheel; // @synthesize monthWheel=_monthWheel;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(nonatomic) __weak id <FUDatePickerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)scrollWheelShouldBecomeFirstResponder:(id)arg1;
- (void)scrollWheel:(id)arg1 didChangeCurrentIndexTo:(unsigned long long)arg2;
- (void)tappedScrollWheel:(id)arg1;
- (unsigned long long)numberOfRowsInScrollWheel:(id)arg1;
- (id)scrollWheel:(id)arg1 titleForItemAtIndex:(unsigned long long)arg2;
- (void)_updateDateRange:(_Bool)arg1;
- (void)_updateSpinners;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIUIAnimatableObject : NSObject
{
    NSMutableDictionary *_animatableProperties;
}

- (void).cxx_destruct;
- (id)_newAnimatablePropertyForType:(unsigned long long)arg1;
- (id)endingValueForPropertyType:(unsigned long long)arg1;
- (id)_animatablePropertyForType:(unsigned long long)arg1;
- (_Bool)areAnimationsInProgress;
- (void)removeAllAnimationsForPropertyType:(unsigned long long)arg1;
- (void)addAnimation:(id)arg1 forPropertyType:(unsigned long long)arg2;
- (void)update:(double)arg1;

@end

@interface FUChart : UIView <FUChartDataGroupDataSource, FUChartSeriesDataSource>
{
    FUChartDataGroup *_dataGroup;
    NSArray *_xAxisLabels;
    NSArray *_xAxisSubLabels;
    NSArray *_chartSeries;
    _Bool _needsAnimation;
    _Bool _labelsInsetChartBackground;
    id <FUChartDataSource> _dataSource;
    FUTimeAxisDescriptor *_xAxisDescriptor;
    FUChartBackgroundView *_backgroundView;
    double _yAxisEdgeInset;
    double _xAxisToLabelPadding;
    double _animationDuration;
    NSDate *_minXValue;
    NSDate *_maxXValue;
    NSNumber *_minYValue;
    NSNumber *_maxYValue;
    UIScrollView *_scrollView;
}

@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) NSNumber *maxYValue; // @synthesize maxYValue=_maxYValue;
@property(retain, nonatomic) NSNumber *minYValue; // @synthesize minYValue=_minYValue;
@property(retain, nonatomic) NSDate *maxXValue; // @synthesize maxXValue=_maxXValue;
@property(retain, nonatomic) NSDate *minXValue; // @synthesize minXValue=_minXValue;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(nonatomic) _Bool labelsInsetChartBackground; // @synthesize labelsInsetChartBackground=_labelsInsetChartBackground;
@property(nonatomic) double xAxisToLabelPadding; // @synthesize xAxisToLabelPadding=_xAxisToLabelPadding;
@property(nonatomic) double yAxisEdgeInset; // @synthesize yAxisEdgeInset=_yAxisEdgeInset;
@property(retain, nonatomic) FUChartBackgroundView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) FUTimeAxisDescriptor *xAxisDescriptor; // @synthesize xAxisDescriptor=_xAxisDescriptor;
@property(nonatomic) __weak id <FUChartDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)maxYValueForChartSeries:(id)arg1;
- (id)minYValueForChartSeries:(id)arg1;
- (id)maxXValueForChartSeries:(id)arg1;
- (id)minXValueForChartSeries:(id)arg1;
- (id)dataGroup:(id)arg1 labelsForSetAtIndex:(unsigned long long)arg2;
- (id)dataGroup:(id)arg1 dataPointsForSetAtIndex:(unsigned long long)arg2;
- (id)dataGroup:(id)arg1 pointForSetAtIndex:(unsigned long long)arg2 pointIndex:(unsigned long long)arg3;
- (unsigned long long)dataGroup:(id)arg1 numberOfPointsInSetAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfDataSetsInGroup:(id)arg1;
- (id)_getLabelsForSeriesAtIndex:(unsigned long long)arg1;
- (id)_getDataPointsForSeriesAtIndex:(unsigned long long)arg1;
- (id)_getDataPointAtIndex:(unsigned long long)arg1 forSeriesAtIndex:(unsigned long long)arg2;
- (unsigned long long)_getNumberOfDataPointsForSeriesAtIndex:(unsigned long long)arg1;
- (id)_getSeriesAtIndex:(unsigned long long)arg1;
- (unsigned long long)_getNumberOfSeries;
- (float)_relativePositionForYPlaneValue:(id)arg1;
- (float)_relativePositionForXPlaneValue:(id)arg1;
- (double)_absolutePositionForYPlaneValue:(id)arg1;
- (double)_absolutePositionForXPlaneValue:(id)arg1;
- (struct CGRect)_chartRect;
- (double)_yAxisLabelPadding;
- (double)_xAxisLabelPaddingForBackground:(_Bool)arg1;
- (void)_layoutChartSeries;
- (void)_layoutXAxisLabels;
- (void)_layoutAxisLabels;
- (void)_layoutScrollView;
- (void)layoutSubviews;
- (void)_adjustMinMaxValues;
- (void)_updateDataSeries;
- (void)_reloadDataSeries;
- (void)_updateBackgroundView;
- (void)_animateSeries;
- (void)selectAxisPoint:(long long)arg1 selected:(_Bool)arg2;
- (void)animate;
- (void)refreshViewAnimated:(_Bool)arg1;
- (void)refreshView;
- (void)reloadDataAnimated:(_Bool)arg1;
- (void)reloadData;
- (id)initWithMinDate:(id)arg1 maxDate:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FUDashedBackgroundView : FUChartBackgroundView
{
    NSArray *_linePositions;
    unsigned long long _numLines;
    UIColor *_color;
    long long _direction;
    long long _lineType;
}

@property(nonatomic) long long lineType; // @synthesize lineType=_lineType;
@property(nonatomic) long long direction; // @synthesize direction=_direction;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic) unsigned long long numLines; // @synthesize numLines=_numLines;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawLine:(id)arg1 rect:(struct CGRect)arg2 context:(struct CGContext *)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FUMultiDashedBackgroundView : FUChartBackgroundView
{
    unsigned long long _numSubLines;
    UIColor *_lineColor;
    UIColor *_subLineColor;
    UIView *_lastLineView;
    _Bool _backgroundIsTransparent;
    double _lineWidth;
    double _lineSpacing;
    double _subLineHeight;
}

@property(nonatomic) _Bool backgroundIsTransparent; // @synthesize backgroundIsTransparent=_backgroundIsTransparent;
@property(nonatomic) double subLineHeight; // @synthesize subLineHeight=_subLineHeight;
@property(nonatomic) double lineSpacing; // @synthesize lineSpacing=_lineSpacing;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
- (void).cxx_destruct;
- (id)_linesPatternColor;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FUChartDataSet : NSObject
{
    NSArray *_data;
    NSArray *_labels;
    id <FUChartDataSetDataSource> _dataSource;
    long long _tag;
}

@property(nonatomic) long long tag; // @synthesize tag=_tag;
@property(nonatomic) __weak id <FUChartDataSetDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_getLabels;
- (id)_getPoints;
- (id)_getPointAtIndex:(unsigned long long)arg1;
- (unsigned long long)_getNumberOfDataPoints;
- (id)_getChartPoints;
- (id)_getChartPointAtIndex:(unsigned long long)arg1;
- (void)removeDataPointAtIndex:(unsigned long long)arg1;
- (void)addDataPointWithXValue:(id)arg1 yValue:(id)arg2;
- (void)reloadDataPointAtIndex:(unsigned long long)arg1;
- (void)reloadData;
- (void)normalizeDataWithMinYValue:(id)arg1 maxYValue:(id)arg2 minXValue:(id)arg3 maxXValue:(id)arg4;
- (void)normalizeData;
- (id)labelsForSet;
- (id)labelsForPointAtIndex:(unsigned long long)arg1;
- (id)xValueForPointAtIndex:(unsigned long long)arg1;
- (id)yValueForPointAtIndex:(unsigned long long)arg1 key:(id)arg2;
- (id)yValueForPointAtIndex:(unsigned long long)arg1;
- (id)pointAtIndex:(unsigned long long)arg1;
- (unsigned long long)numDataPoints;
- (id)minXValue;
- (id)maxXValue;
- (id)minYValue;
- (id)maxYValue;
- (id)description;

@end

@interface FUAchievementsView : UIView <UIScrollViewDelegate>
{
    UILabel *_achievementTitleLabel;
    UILabel *_achievementDetailLabel;
    UIPageControl *_pageControl;
    UIScrollView *_scrollView;
    NSMutableArray *_achievementViews;
    _Bool _needsSubviewRebuild;
    _Bool _pagingEnabled;
    _Bool _showsAchievementTitles;
    NSArray *_achievements;
    long long _sizeClass;
    id <FUAchievementsViewDelegate> _delegate;
    struct UIEdgeInsets _scrollViewContentInset;
}

@property(nonatomic) __weak id <FUAchievementsViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct UIEdgeInsets scrollViewContentInset; // @synthesize scrollViewContentInset=_scrollViewContentInset;
@property(nonatomic) long long sizeClass; // @synthesize sizeClass=_sizeClass;
@property(nonatomic) _Bool showsAchievementTitles; // @synthesize showsAchievementTitles=_showsAchievementTitles;
@property(nonatomic) _Bool pagingEnabled; // @synthesize pagingEnabled=_pagingEnabled;
@property(copy, nonatomic) NSArray *achievements; // @synthesize achievements=_achievements;
- (void).cxx_destruct;
- (id)achievementAtPoint:(struct CGPoint)arg1;
- (void)layoutSubviews;
- (id)_detailLabelColor;
- (id)_detailLabelFont;
- (id)_titleLabelFont;
- (void)_updateCurrentPageDetails;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_getPageWidth:(double *)arg1 nearestPageIndex:(unsigned long long *)arg2 forScrollViewContentOffsetX:(double)arg3;
- (void)_scrollViewTapped:(id)arg1;
- (id)_achievementAtScrollViewPoint:(struct CGPoint)arg1;
- (void)_rebuildAchievementViews;
- (void)_hidePageControl;
- (void)_showPageControl;
- (void)_hideAchievementTitleLabel;
- (void)_showAchievementTitleLabel;
- (void)_rebuildSubviewsIfNeeded;
- (void)_setNeedsSubviewRebuild;
- (void)scrollToAchievement:(id)arg1;
- (id)viewForAchievement:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FUAchievementView : UIView
{
    UIImageView *_iconView;
    HKAchievement *_achievement;
    long long _sizeClass;
}

@property(nonatomic) long long sizeClass; // @synthesize sizeClass=_sizeClass;
@property(retain, nonatomic) HKAchievement *achievement; // @synthesize achievement=_achievement;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FUUniformBarSeries : FUChartSeries
{
    NSDate *_minDate;
    double _barWidth;
    double _barHeight;
    double _roundedCornerRadius;
    struct CGGradient *_barGradient;
    NSArray *_plotPoints;
}

@property(retain, nonatomic) NSArray *plotPoints; // @synthesize plotPoints=_plotPoints;
@property(nonatomic) struct CGGradient *barGradient; // @synthesize barGradient=_barGradient;
@property(nonatomic) double roundedCornerRadius; // @synthesize roundedCornerRadius=_roundedCornerRadius;
@property(nonatomic) double barHeight; // @synthesize barHeight=_barHeight;
@property(nonatomic) double barWidth; // @synthesize barWidth=_barWidth;
@property(nonatomic) NSDate *minDate; // @synthesize minDate=_minDate;
- (void).cxx_destruct;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (double)_getYValueForPointFromChartPoint:(id)arg1;
- (double)_getXValueForPointFromChartPoint:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FIUIPushyLabelCharacter : NSObject
{
    NSAttributedString *_sourceText;
    UIView *_renderedView;
}

@property(retain) UIView *renderedView; // @synthesize renderedView=_renderedView;
@property(retain) NSAttributedString *sourceText; // @synthesize sourceText=_sourceText;
- (void).cxx_destruct;

@end

@interface FIUIPushyLabelView : UIView
{
    NSArray *_currentSnapshotCharacters;
    NSArray *_incomingSnapshotCharacters;
    NSAttributedString *_currentAttributedText;
    id _pendingAttributedString;
    unsigned long long _pendingDirection;
    _Bool _pendingPushPerCharacter;
    double _currentAnimationFinishTime;
}

- (void).cxx_destruct;
- (id)_snapshotCharactersFromAttributedText:(id)arg1 perCharacter:(_Bool)arg2;
- (void)_layoutViewsAtIndex:(unsigned long long)arg1 forPushEndWithDirection:(unsigned long long)arg2;
- (void)_layoutForPushStartWithDirection:(unsigned long long)arg1;
- (void)_swapCurrentSnapshotCharacters:(id)arg1 forIncomingCharacters:(id)arg2;
- (void)_setIncomingSnapshotCharacters:(id)arg1;
- (void)_setCurrentSnapshotCharacters:(id)arg1;
- (id)currentAttributedText;
- (void)_processPendingStringIfNeeded;
- (void)pushToAttributedText:(id)arg1 direction:(unsigned long long)arg2 perCharacter:(_Bool)arg3;
- (void)setAttributedTextUnanimated:(id)arg1;
- (void)sizeToFitAttributedText:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FIUIPropertyAnimation : NSObject
{
    double _currentAnimationTime;
    double _duration;
    CAMediaTimingFunction *_animationTimingFunction;
    CDUnknownBlockType _completionHandler;
}

+ (id)animationWithDuration:(double)arg1 timingFunction:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(readonly, nonatomic) CAMediaTimingFunction *animationTimingFunction; // @synthesize animationTimingFunction=_animationTimingFunction;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
- (void).cxx_destruct;
- (void)callAndReleaseCompletionHandler;
- (id)valueByAddingCurrentValueToValue:(id)arg1;
- (_Bool)isFinishedAnimating;
- (void)_updateWithProgress:(float)arg1;
- (void)update:(double)arg1;
- (void)_setCurrentValue:(id)arg1;
- (void)_setEndValue:(id)arg1;
- (void)_setStartValue:(id)arg1;
- (id)_currentValue;
- (id)_endValue;
- (id)_startValue;

@end

@interface FIUIFloatPropertyAnimation : FIUIPropertyAnimation
{
    float _startValue;
    float _endValue;
    float _currentValue;
}

+ (id)animationWithEndingFloatValue:(float)arg1 duration:(double)arg2 timingFunction:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) float currentValue; // @synthesize currentValue=_currentValue;
@property(readonly, nonatomic) float endValue; // @synthesize endValue=_endValue;
@property(readonly, nonatomic) float startValue; // @synthesize startValue=_startValue;
- (id)valueByAddingCurrentValueToValue:(id)arg1;
- (void)_updateWithProgress:(float)arg1;
- (id)_currentValue;
- (id)_endValue;
- (id)_startValue;
- (void)_setCurrentValue:(id)arg1;
- (void)_setEndValue:(id)arg1;
- (void)_setStartValue:(id)arg1;

@end

@interface FIUICGPointPropertyAnimation : FIUIPropertyAnimation
{
    struct CGPoint _startValue;
    struct CGPoint _endValue;
    struct CGPoint _currentValue;
}

+ (id)animationWithEndingCGPointValue:(struct CGPoint)arg1 duration:(double)arg2 timingFunction:(id)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) struct CGPoint currentValue; // @synthesize currentValue=_currentValue;
@property(readonly, nonatomic) struct CGPoint endValue; // @synthesize endValue=_endValue;
@property(readonly, nonatomic) struct CGPoint startValue; // @synthesize startValue=_startValue;
- (id)valueByAddingCurrentValueToValue:(id)arg1;
- (void)_updateWithProgress:(float)arg1;
- (void)_setCurrentValue:(id)arg1;
- (void)_setEndValue:(id)arg1;
- (void)_setStartValue:(id)arg1;
- (id)_currentValue;
- (id)_endValue;
- (id)_startValue;

@end

@interface FUShapeView : UIView
{
}

+ (Class)layerClass;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (id)shapeLayer;
- (void)setStrokeEnd:(double)arg1;
- (void)setLineWidth:(double)arg1;
- (void)setStrokeColor:(id)arg1;
- (void)setFillColor:(id)arg1;
- (void)setPath:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FUChartBackgroundView : UIView
{
    NSNumber *_maxValue;
    NSNumber *_minValue;
    struct UIEdgeInsets _lineInsets;
}

@property(nonatomic) struct UIEdgeInsets lineInsets; // @synthesize lineInsets=_lineInsets;
@property(retain, nonatomic) NSNumber *minValue; // @synthesize minValue=_minValue;
@property(retain, nonatomic) NSNumber *maxValue; // @synthesize maxValue=_maxValue;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FIUIAchievementsModel : NSObject
{
    HKExtendedHealthStore *_extendedHealthStore;
    NSObject<OS_dispatch_queue> *_achievementsLock;
    _Bool _loadingAchievements;
    NSArray *_achievements;
    id <FIUIAchievementsModelDelegate> _delegate;
}

@property(nonatomic) __weak id <FIUIAchievementsModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)fetchAchievementsOnDay:(id)arg1 inCalendar:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)achievements;
- (id)init;

@end

@interface FUGradientView : UIView
{
    FUShapeView *_maskView;
}

+ (Class)layerClass;
- (void).cxx_destruct;
- (id)gradientLayer;
- (void)setLocations:(id)arg1;
- (void)setColors:(id)arg1;
- (void)setMask:(id)arg1;
- (void)layoutSubviews;
- (id)init;

@end

@interface StocksTapDragGestureRecognizer : UIGestureRecognizer
{
    NSTimer *_touchDelayTimer;
    NSMutableSet *_touches;
    double _requiredPressDelay;
    unsigned long long _minimumNumberOfTouches;
    unsigned long long _maximumNumberOfTouches;
    struct CGRect _touchableBounds;
}

@property(nonatomic) struct CGRect touchableBounds; // @synthesize touchableBounds=_touchableBounds;
@property(nonatomic) unsigned long long maximumNumberOfTouches; // @synthesize maximumNumberOfTouches=_maximumNumberOfTouches;
@property(nonatomic) unsigned long long minimumNumberOfTouches; // @synthesize minimumNumberOfTouches=_minimumNumberOfTouches;
@property(nonatomic) double requiredPressDelay; // @synthesize requiredPressDelay=_requiredPressDelay;
@property(readonly, nonatomic) NSSet *touches; // @synthesize touches=_touches;
- (void).cxx_destruct;
- (void)reset;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchDelayTimerFired:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface FUChartColor : NSObject
{
    struct CGGradient *_gradient;
    struct CGColor *_color;
    double _chartYValue;
    double _threshold;
}

@property(nonatomic) double threshold; // @synthesize threshold=_threshold;
- (void)drawInRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)initWithThreshold:(double)arg1 color:(id)arg2;
- (id)initWithThreshold:(double)arg1 startColor:(id)arg2 endColor:(id)arg3;
@property(nonatomic) double chartYValue;

@end

@interface FUBaselinedBarSeries : FUChartSeries
{
    _Bool _hideBarsBelowThreshold;
    double _barWidth;
    UIColor *_barColor;
    double _baselineValue;
    double _baselineGraphHeightPercent;
    NSArray *_plotPoints;
    NSArray *_barViews;
    NSNumber *_baselineAbsoluteYPos;
}

@property(retain, nonatomic) NSNumber *baselineAbsoluteYPos; // @synthesize baselineAbsoluteYPos=_baselineAbsoluteYPos;
@property(retain, nonatomic) NSArray *barViews; // @synthesize barViews=_barViews;
@property(retain, nonatomic) NSArray *plotPoints; // @synthesize plotPoints=_plotPoints;
@property(nonatomic) _Bool hideBarsBelowThreshold; // @synthesize hideBarsBelowThreshold=_hideBarsBelowThreshold;
@property(nonatomic) double baselineGraphHeightPercent; // @synthesize baselineGraphHeightPercent=_baselineGraphHeightPercent;
@property(nonatomic) double baselineValue; // @synthesize baselineValue=_baselineValue;
@property(retain, nonatomic) UIColor *barColor; // @synthesize barColor=_barColor;
@property(nonatomic) double barWidth; // @synthesize barWidth=_barWidth;
- (void).cxx_destruct;
- (struct CGRect)_baselinedRectBoundsForYValue:(double)arg1;
- (double)_getBaselinedMaxYValueForYPlaneValue:(double)arg1;
- (double)_getBaselinedMinYValueForYPlaneValue:(double)arg1;
- (double)_getYValueForPointFromChartPointValue:(id)arg1;
- (id)_getAbsoluteBaselineYPosition;
- (double)_getBarHeightForPointValue:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)layoutSubviews;
- (id)init;

@end

@interface FUChartDataGroup : NSObject <FUChartDataSetDataSource>
{
    id <FUChartDataGroupDataSource> _dataSource;
    NSArray *_dataSets;
}

@property(retain, nonatomic) NSArray *dataSets; // @synthesize dataSets=_dataSets;
@property(nonatomic) __weak id <FUChartDataGroupDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_getLabelsForSetAtIndex:(unsigned long long)arg1;
- (id)_getPointsForSetAtIndex:(unsigned long long)arg1;
- (id)_getPointForSetAtIndex:(unsigned long long)arg1 pointIndex:(unsigned long long)arg2;
- (unsigned long long)_getNumberOfDataPointsInSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)_getNumberOfDataSets;
- (id)labelsForSet:(id)arg1;
- (id)dataPointsForSet:(id)arg1;
- (id)dataSet:(id)arg1 chartPointForIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfDataPointsForDataSet:(id)arg1;
- (id)_dataSetAtIndexCreateIfNecessary:(unsigned long long)arg1;
- (void)_reloadDataSet:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)removeDataPointFromSetAtIndex:(unsigned long long)arg1 pointIndex:(unsigned long long)arg2;
- (void)addDataPointWithXValue:(float)arg1 yValue:(float)arg2 setIndex:(unsigned long long)arg3;
- (void)reloadDataPointInSetAtIndex:(unsigned long long)arg1 pointIndex:(unsigned long long)arg2;
- (void)reloadDataInSetAtIndex:(unsigned long long)arg1;
- (void)reloadData;
- (id)dataSetAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfDataSets;
- (id)maxXValue;
- (id)minXValue;
- (id)maxYValue;
- (id)minYValue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIUIHeartRateStatusView : UIView
{
    unsigned long long _state;
    double _heartRate;
    _Bool _delayedStartMeasuringAnimation;
    UIImageView *_fullHeartImageView;
    UIImageView *_animatingImageView;
    UIImageView *_reloadOutlineView;
    UIImageView *_reloadArrowView;
}

@property(retain, nonatomic) UIImageView *reloadArrowView; // @synthesize reloadArrowView=_reloadArrowView;
@property(retain, nonatomic) UIImageView *reloadOutlineView; // @synthesize reloadOutlineView=_reloadOutlineView;
@property(retain, nonatomic) UIImageView *animatingImageView; // @synthesize animatingImageView=_animatingImageView;
@property(retain, nonatomic) UIImageView *fullHeartImageView; // @synthesize fullHeartImageView=_fullHeartImageView;
- (void).cxx_destruct;
- (void)_startMeasuringAnimation;
- (void)_finishedHeartBeat;
- (void)_beatFullHeartOnce;
- (void)setHeartRate:(double)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setReloadArrowImage:(id)arg1;
- (void)setReloadHeartOutlineImage:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)appDidBecomeActive:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 heartImageNameFormat:(id)arg2 frameRateDivider:(int)arg3 resourceBundle:(id)arg4;

@end

@interface _FIUIAnimatableProperty : NSObject
{
    CDUnknownBlockType _getter;
    CDUnknownBlockType _setter;
    NSMutableArray *_animations;
    id _currentValue;
    id _startValue;
    id _endValue;
}

@property(retain, nonatomic) id currentValue; // @synthesize currentValue=_currentValue;
@property(retain, nonatomic) id endValue; // @synthesize endValue=_endValue;
@property(retain, nonatomic) id startValue; // @synthesize startValue=_startValue;
- (void).cxx_destruct;
- (_Bool)isFinishedAnimating;
- (void)update:(double)arg1;
- (void)removeAllPropertyAnimations;
- (void)addPropertyAnimation:(id)arg1;
- (id)initWithGetter:(CDUnknownBlockType)arg1 setter:(CDUnknownBlockType)arg2;

@end

@interface FUBarSeries : FUChartSeries
{
    _Bool _fadeZeroBars;
    double _barWidth;
    double _barSpacing;
    double _roundedCornerRadius;
    UIColor *_strokeColor;
    double _strokeWidth;
    UIColor *_backgroundStrokeColor;
    double _backgroundStrokeWidth;
    NSArray *_barColors;
    struct CGGradient *_barGradient;
    UIColor *_barColor;
    UIColor *_fadedBarColor;
    NSArray *_labelAttributes;
    NSArray *_plotPoints;
    NSArray *_barLabels;
}

@property(retain, nonatomic) NSArray *barLabels; // @synthesize barLabels=_barLabels;
@property(retain, nonatomic) NSArray *plotPoints; // @synthesize plotPoints=_plotPoints;
@property(retain, nonatomic) NSArray *labelAttributes; // @synthesize labelAttributes=_labelAttributes;
@property(retain, nonatomic) UIColor *fadedBarColor; // @synthesize fadedBarColor=_fadedBarColor;
@property(nonatomic) _Bool fadeZeroBars; // @synthesize fadeZeroBars=_fadeZeroBars;
@property(retain, nonatomic) UIColor *barColor; // @synthesize barColor=_barColor;
@property(nonatomic) struct CGGradient *barGradient; // @synthesize barGradient=_barGradient;
@property(retain, nonatomic) NSArray *barColors; // @synthesize barColors=_barColors;
@property(nonatomic) double backgroundStrokeWidth; // @synthesize backgroundStrokeWidth=_backgroundStrokeWidth;
@property(retain, nonatomic) UIColor *backgroundStrokeColor; // @synthesize backgroundStrokeColor=_backgroundStrokeColor;
@property(nonatomic) double strokeWidth; // @synthesize strokeWidth=_strokeWidth;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) double roundedCornerRadius; // @synthesize roundedCornerRadius=_roundedCornerRadius;
@property(nonatomic) double barSpacing; // @synthesize barSpacing=_barSpacing;
@property(nonatomic) double barWidth; // @synthesize barWidth=_barWidth;
- (void).cxx_destruct;
- (void)_translateColorThresholds;
- (void)_strokeRect:(struct CGRect)arg1 context:(struct CGContext *)arg2 color:(struct CGColor *)arg3 width:(double)arg4;
- (id)_chartColorForChartYValue:(double)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)init;

@end

@interface FUCrossFadeZoomTransitionAnimator : NSObject <FUViewControllerAnimatedTransitioning>
{
    CDUnknownBlockType _animationCompletionBlock;
    _Bool _transitionCompleted;
    _Bool _zoomingUp;
    id _context;
    UIView *_smallView;
    UIView *_largeView;
}

@property(nonatomic) _Bool zoomingUp; // @synthesize zoomingUp=_zoomingUp;
@property(retain, nonatomic) UIView *largeView; // @synthesize largeView=_largeView;
@property(retain, nonatomic) UIView *smallView; // @synthesize smallView=_smallView;
@property(retain, nonatomic) id context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)completeTransitionImmediately;
- (void)animationEnded:(_Bool)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NLArcMaskLayer : CAShapeLayer
{
    double _arcStart;
    double _radius;
    struct CGPoint _center;
}

+ (_Bool)needsDisplayForKey:(id)arg1;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double arcStart; // @synthesize arcStart=_arcStart;
- (id)actionForKey:(id)arg1;
- (void)animatePathCenter:(struct CGPoint)arg1 radius:(double)arg2 lineWidth:(double)arg3 duration:(double)arg4;
- (void)_regeneratePath;
- (void)setBounds:(struct CGRect)arg1;
- (id)init;

@end

@interface FIUIRingGroupController : FIUIAnimatableObject
{
    _Bool _ringStartingStateIsDirty;
    long long *_iconAnimationFrameNumbers;
    long long _numberOfRings;
    double _ringDiameter;
    double _ringInterspacing;
    double _ringThickness;
    double _ringIconSize;
    double _ringScale;
    double _backingOrigin;
    double _additionalSpacingAtIndex;
    id <FIUIRingGroupAnimationStatusDelegate> _animationStatusDelegate;
    NSArray *_rings;
    struct CGPoint _center;
}

+ (id)animationTimingFunction;
+ (double)defaultAnimationDuration;
@property(retain, nonatomic) NSArray *rings; // @synthesize rings=_rings;
@property(nonatomic) __weak id <FIUIRingGroupAnimationStatusDelegate> animationStatusDelegate; // @synthesize animationStatusDelegate=_animationStatusDelegate;
@property(nonatomic) double additionalSpacingAtIndex; // @synthesize additionalSpacingAtIndex=_additionalSpacingAtIndex;
@property(nonatomic) double backingOrigin; // @synthesize backingOrigin=_backingOrigin;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
@property(nonatomic) double ringScale; // @synthesize ringScale=_ringScale;
@property(nonatomic) double ringIconSize; // @synthesize ringIconSize=_ringIconSize;
@property(nonatomic) double ringThickness; // @synthesize ringThickness=_ringThickness;
@property(nonatomic) double ringInterspacing; // @synthesize ringInterspacing=_ringInterspacing;
@property(nonatomic) double ringDiameter; // @synthesize ringDiameter=_ringDiameter;
@property(readonly, nonatomic) long long numberOfRings; // @synthesize numberOfRings=_numberOfRings;
- (void).cxx_destruct;
- (long long)indexOfRingAtPoint:(struct CGPoint)arg1;
- (_Bool)_setCenter:(struct CGPoint)arg1;
- (double)_adjustedDurationForRingWithIndex:(long long)arg1 startPercentage:(double)arg2 targetPercentage:(double)arg3 defaultDuration:(double)arg4;
- (void)setDotPercentage:(double)arg1 ofRingAtIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)setPercentage:(double)arg1 ofRingAtIndex:(long long)arg2 animated:(_Bool)arg3 duration:(double)arg4 timingFunction:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)setPercentage:(double)arg1 ofRingAtIndex:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setPercentage:(double)arg1 ofRingAtIndex:(long long)arg2 animated:(_Bool)arg3;
- (_Bool)ringsAreEmpty;
- (_Bool)areAnimationsInProgress;
- (void)update:(double)arg1;
- (void)setIconDotTextureOrigin:(struct CGPoint)arg1 ofRingAtIndex:(long long)arg2;
- (void)setIconFirstFrameOrigin:(struct CGPoint)arg1 frameSize:(struct CGSize)arg2 frameCount:(long long)arg3 columns:(long long)arg4 ofRingAtIndex:(long long)arg5;
- (void)addOpacityAnimation:(id)arg1 forRingAtIndex:(long long)arg2;
- (void)setOpacity:(float)arg1 ofRingAtIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)setTopColor:(id)arg1 bottomColor:(id)arg2 ofRingAtIndex:(long long)arg3;
- (id)_newAnimatablePropertyForType:(unsigned long long)arg1;
- (void)addAnimation:(id)arg1 forRingGroupPropertyType:(unsigned long long)arg2;
- (double)_scaledRingIconSize;
- (double)_scaledRingThickness;
- (double)_scaledRingInterspacing;
- (double)_scaledRingDiameter;
- (double)_diameterForRingAtIndex:(unsigned long long)arg1;
- (void)_updateRingIconProperties;
- (void)_updateRingThicknesses;
- (void)_updateRingDiameters;
- (void)_markRingStartingStateDirty;
- (void)dealloc;
- (id)initWithNumberOfRings:(long long)arg1;

@end

@interface FUTimeAxisDescriptor : NSObject <FUAxisDescriptor>
{
    NSArray *_cachedAxisLabels;
    NSArray *_cachedAxisSubLabels;
    NSMutableArray *_cachedAxisLabelColors;
    NSMutableDictionary *_hourFormatters;
    NSMutableDictionary *_weekdayFormatters;
    NSMutableDictionary *_dayFormatters;
    NSMutableDictionary *_monthFormatters;
    NSMutableDictionary *_yearFormatters;
    _Bool _hideClippedLabels;
    _Bool _generateSubAxisDescriptorOnlyForNoonMidnight;
    _Bool _subAxisCapitalize;
    id _minValue;
    id _maxValue;
    unsigned long long _labelAlignment;
    UIFont *_labelFont;
    UIColor *_highlightedLabelColor;
    UIColor *_unhighlightedLabelColor;
    UIColor *_selectedLabelColor;
    double _axisDescriptorPadding;
    double _subAxisDescriptorPadding;
    UIFont *_subLabelFont;
    UIColor *_highlightedSubLabelColor;
    UIColor *_unhighlightedSubLabelColor;
    unsigned long long _textStyle;
    NSDateComponents *_axisSpacing;
    FUDateAnchorRule *_anchorRule;
    unsigned long long _timeInterval;
    unsigned long long _subTextStyle;
    NSDateComponents *_subAxisSpacing;
    FUDateAnchorRule *_subAnchorRule;
    unsigned long long _subTimeInterval;
    double _subAxisVerticalPadding;
}

+ (unsigned long long)_getSpacingInterval:(id)arg1;
@property(nonatomic) double subAxisVerticalPadding; // @synthesize subAxisVerticalPadding=_subAxisVerticalPadding;
@property(nonatomic) _Bool subAxisCapitalize; // @synthesize subAxisCapitalize=_subAxisCapitalize;
@property(nonatomic) _Bool generateSubAxisDescriptorOnlyForNoonMidnight; // @synthesize generateSubAxisDescriptorOnlyForNoonMidnight=_generateSubAxisDescriptorOnlyForNoonMidnight;
@property(nonatomic) unsigned long long subTimeInterval; // @synthesize subTimeInterval=_subTimeInterval;
@property(retain, nonatomic) FUDateAnchorRule *subAnchorRule; // @synthesize subAnchorRule=_subAnchorRule;
@property(retain, nonatomic) NSDateComponents *subAxisSpacing; // @synthesize subAxisSpacing=_subAxisSpacing;
@property(nonatomic) unsigned long long subTextStyle; // @synthesize subTextStyle=_subTextStyle;
@property(nonatomic) unsigned long long timeInterval; // @synthesize timeInterval=_timeInterval;
@property(retain, nonatomic) FUDateAnchorRule *anchorRule; // @synthesize anchorRule=_anchorRule;
@property(retain, nonatomic) NSDateComponents *axisSpacing; // @synthesize axisSpacing=_axisSpacing;
@property(nonatomic) unsigned long long textStyle; // @synthesize textStyle=_textStyle;
@property(retain, nonatomic) UIColor *unhighlightedSubLabelColor; // @synthesize unhighlightedSubLabelColor=_unhighlightedSubLabelColor;
@property(retain, nonatomic) UIColor *highlightedSubLabelColor; // @synthesize highlightedSubLabelColor=_highlightedSubLabelColor;
@property(retain, nonatomic) UIFont *subLabelFont; // @synthesize subLabelFont=_subLabelFont;
@property(nonatomic) _Bool hideClippedLabels; // @synthesize hideClippedLabels=_hideClippedLabels;
@property(nonatomic) double subAxisDescriptorPadding; // @synthesize subAxisDescriptorPadding=_subAxisDescriptorPadding;
@property(nonatomic) double axisDescriptorPadding; // @synthesize axisDescriptorPadding=_axisDescriptorPadding;
@property(retain, nonatomic) UIColor *selectedLabelColor; // @synthesize selectedLabelColor=_selectedLabelColor;
@property(retain, nonatomic) UIColor *unhighlightedLabelColor; // @synthesize unhighlightedLabelColor=_unhighlightedLabelColor;
@property(retain, nonatomic) UIColor *highlightedLabelColor; // @synthesize highlightedLabelColor=_highlightedLabelColor;
@property(retain, nonatomic) UIFont *labelFont; // @synthesize labelFont=_labelFont;
@property(nonatomic) unsigned long long labelAlignment; // @synthesize labelAlignment=_labelAlignment;
@property(retain, nonatomic) id maxValue; // @synthesize maxValue=_maxValue;
@property(retain, nonatomic) id minValue; // @synthesize minValue=_minValue;
- (void).cxx_destruct;
- (Class)expectedDataType;
- (id)textForSubLabelAtIndex:(unsigned long long)arg1;
- (id)positionForSubLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)numSubLabels;
- (id)axisSubLabels;
- (id)_subLabelAtIndex:(unsigned long long)arg1;
- (void)selectLabel:(_Bool)arg1 atIndex:(unsigned long long)arg2;
- (id)textForLabelAtIndex:(unsigned long long)arg1;
- (id)positionForLabelAtIndex:(unsigned long long)arg1;
- (unsigned long long)numLabels;
- (id)axisLabels;
- (id)_labelAtIndex:(unsigned long long)arg1;
- (id)_stringFromDate:(id)arg1 withTimeInterval:(unsigned long long)arg2 textStyle:(unsigned long long)arg3;
- (id)_getStartDateFromTimeInterval:(unsigned long long)arg1;
- (id)_getSubLabelsForSpacingInterval:(unsigned long long)arg1 withSpacing:(id)arg2 textStyle:(unsigned long long)arg3;
- (id)_newSubLabelFromDate:(id)arg1 withTimeInterval:(unsigned long long)arg2 textStyle:(unsigned long long)arg3;
- (long long)_hourComponentFromDate:(id)arg1;
- (id)_getLabelsForSpacingInterval:(unsigned long long)arg1 withSpacing:(id)arg2 textStyle:(unsigned long long)arg3;
- (_Bool)_assertPropertiesValid;
- (void)_generateAxisSubLabels;
- (void)_generateAxisLabels;
- (void)_clearCache;
- (id)yearFormatter:(unsigned long long)arg1;
- (id)monthFormatter:(unsigned long long)arg1;
- (id)weekdayFormatter:(unsigned long long)arg1;
- (id)dayFormatter:(unsigned long long)arg1;
- (id)hourFormatter:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NLArcView : UIView
{
    NLArcLayer *_baseRing;
    NLArcSegmentLayer *_segmentLayer;
    CALayer *_iconLayer;
    CAGradientLayer *_gradientLayer;
    NLArcMaskLayer *_arcMaskLayer;
    CALayer *_whiteDotIndicatorLayer;
    CALayer *_coloredDotIndicatorLayer;
    _Bool _shouldDrawIndicator;
    _Bool _shouldDrawSegmented;
    _Bool _shouldShowIcon;
    double _arcStart;
    double _radius;
    UIImage *_icon;
    long long _numberOfSegments;
    double _indicatorPercentage;
}

@property(nonatomic) double indicatorPercentage; // @synthesize indicatorPercentage=_indicatorPercentage;
@property(nonatomic) long long numberOfSegments; // @synthesize numberOfSegments=_numberOfSegments;
@property(nonatomic) _Bool shouldShowIcon; // @synthesize shouldShowIcon=_shouldShowIcon;
@property(nonatomic) _Bool shouldDrawSegmented; // @synthesize shouldDrawSegmented=_shouldDrawSegmented;
@property(nonatomic) _Bool shouldDrawIndicator; // @synthesize shouldDrawIndicator=_shouldDrawIndicator;
@property(retain, nonatomic) UIImage *icon; // @synthesize icon=_icon;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double arcStart; // @synthesize arcStart=_arcStart;
- (void).cxx_destruct;
- (void)setGradientColors:(id)arg1;
- (void)setBaseColor:(id)arg1;
- (void)animateToCenter:(struct CGPoint)arg1 radius:(double)arg2 lineWidth:(double)arg3 duration:(double)arg4;
- (void)layoutSubviews;
@property(nonatomic) double lineWidth;
- (void)_positionIndicator;
- (void)setNumberOfSegments:(long long)arg1 animated:(_Bool)arg2;
- (void)setPercentageUnfull:(double)arg1 animatedWithDuration:(double)arg2;
- (void)setPercentageFull:(double)arg1 animatedWithDuration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setPercentageFull:(double)arg1 animatedWithDuration:(double)arg2;
- (void)setPercentageFull:(double)arg1 animated:(_Bool)arg2;
- (void)setPercentageFull:(double)arg1;
- (double)percentageFull;
- (void)setRadius:(double)arg1 animated:(_Bool)arg2;
- (void)_showIndicatorIfNecessary;
- (void)_showSegmentsIfNecessary;
- (id)_coloredDotIndicatorLayer;
- (id)_whiteDotIndicatorLayer;
- (id)_segmentLayer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FUAxisLabel : NSObject
{
    NSString *_text;
    id _location;
    UIColor *_labelColor;
}

@property(retain, nonatomic) UIColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain, nonatomic) id location; // @synthesize location=_location;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)description;

@end

@interface NLArcLayer : CAShapeLayer
{
    _Bool _needsRegeneration;
    double _arcStart;
    double _radius;
    struct CGPoint _center;
}

@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
@property(nonatomic) double radius; // @synthesize radius=_radius;
- (id)actionForKey:(id)arg1;
- (void)animatePathCenter:(struct CGPoint)arg1 radius:(double)arg2 lineWidth:(double)arg3 duration:(double)arg4;
- (void)_regeneratePath;
- (void)setNeedsRegeneration;
- (void)setBounds:(struct CGRect)arg1;
- (void)setLineWidth:(double)arg1;
- (void)layoutSublayers;
- (id)init;

@end

@interface FUChartPointNumeric : NSObject <FUChartPoint>
{
    NSDate *_xValue;
    NSNumber *_yValue;
}

+ (id)chartPointWithXValue:(id)arg1 yValue:(id)arg2;
@property(retain, nonatomic) NSNumber *yValue; // @synthesize yValue=_yValue;
@property(retain, nonatomic) NSDate *xValue; // @synthesize xValue=_xValue;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (float)yValueFloatRepresentation;
- (id)allYValues;
- (id)yValueForKey:(id)arg1;
- (id)initWithXValue:(id)arg1 yValue:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIUIWeeklyGoalModel : NSObject
{
    HKHealthStore *_healthStore;
    _Bool _showFakeData;
}

- (void).cxx_destruct;
- (void)saveNewWeeklyCalorieGoal:(double)arg1 forDate:(id)arg2;
- (void)fetchMostRecentWeeklyGoalWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithHealthStore:(id)arg1;
- (id)init;

@end

@interface FULineSeries : FUChartSeries
{
    NSArray *_plotPoints;
    NSArray *_pointViews;
    UIView *_highlightClipView;
    FUShapeView *_lineView;
    FUShapeView *_highlightedLineView;
    FUGradientView *_fillView;
    FUGradientView *_highlightedFillView;
    struct _NSRange _selectedPointRange;
    double _previousLeftPointX;
    UIImageView *_leftHighlightIndicator;
    UIImageView *_rightHighlightIndicator;
    _Bool _snapToPoint;
    int _waveForm;
    int _pointOccurrence;
    int _pointStyle;
    float _pointRadius;
    float _sineWaveSmoothingFactor;
    UIView *_highlightView;
    double _lineWidth;
    UIColor *_lineColor;
    UIColor *_selectedLineColor;
    FUGradientObject *_fillGradient;
    FUGradientObject *_selectedFillGradient;
    UIColor *_pointColor;
    UIColor *_selectedPointColor;
    struct CGGradient *_highlightIndicatorGradient;
    UIColor *_highlightIndicatorColor;
    NSArray *_barViews;
}

@property(retain, nonatomic) NSArray *barViews; // @synthesize barViews=_barViews;
@property(retain, nonatomic) NSArray *plotPoints; // @synthesize plotPoints=_plotPoints;
@property(nonatomic) float sineWaveSmoothingFactor; // @synthesize sineWaveSmoothingFactor=_sineWaveSmoothingFactor;
@property(retain, nonatomic) UIColor *highlightIndicatorColor; // @synthesize highlightIndicatorColor=_highlightIndicatorColor;
@property(nonatomic) struct CGGradient *highlightIndicatorGradient; // @synthesize highlightIndicatorGradient=_highlightIndicatorGradient;
@property(nonatomic) _Bool snapToPoint; // @synthesize snapToPoint=_snapToPoint;
@property(nonatomic) float pointRadius; // @synthesize pointRadius=_pointRadius;
@property(nonatomic) int pointStyle; // @synthesize pointStyle=_pointStyle;
@property(retain, nonatomic) UIColor *selectedPointColor; // @synthesize selectedPointColor=_selectedPointColor;
@property(retain, nonatomic) UIColor *pointColor; // @synthesize pointColor=_pointColor;
@property(retain, nonatomic) FUGradientObject *selectedFillGradient; // @synthesize selectedFillGradient=_selectedFillGradient;
@property(retain, nonatomic) FUGradientObject *fillGradient; // @synthesize fillGradient=_fillGradient;
@property(retain, nonatomic) UIColor *selectedLineColor; // @synthesize selectedLineColor=_selectedLineColor;
@property(retain, nonatomic) UIColor *lineColor; // @synthesize lineColor=_lineColor;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(retain, nonatomic) UIView *highlightView; // @synthesize highlightView=_highlightView;
@property(nonatomic) int pointOccurrence; // @synthesize pointOccurrence=_pointOccurrence;
@property(nonatomic) int waveForm; // @synthesize waveForm=_waveForm;
- (void).cxx_destruct;
- (struct CGRect)_getClipRectFromPoints:(id)arg1;
- (id)_getPointValuesAtIndexes:(id)arg1;
- (struct _NSRange)_getRangeFromSelectedPoints:(id)arg1;
- (void)_updateHighlightIndicatorsWithPoints:(id)arg1 forIndexes:(id)arg2 selectionPoints:(id)arg3;
- (void)_clipHighlightLayerWithPoints:(id)arg1;
- (void)_updatePointViewsWithSelectedPointIndexes:(id)arg1;
- (id)_squarePathForData:(id)arg1;
- (id)_sineWavePathForData:(id)arg1;
- (id)_sawToothPathForData:(id)arg1;
- (id)_pathForData:(id)arg1 waveForm:(int)arg2;
- (id)_fillPathForData:(id)arg1 waveForm:(int)arg2;
- (id)_fillPathForData:(id)arg1;
- (id)_pathForData:(id)arg1;
- (void)_layoutPointViews;
- (void)_layoutFillView:(id)arg1 withGradient:(id)arg2 path:(id)arg3;
- (void)_layoutFillViews;
- (void)_layoutLine;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)layoutSubviews;
- (void)selectedPointIndexesUpdated:(id)arg1 selectionPoints:(id)arg2;
- (id)_imageForGradient:(struct CGGradient *)arg1 size:(struct CGSize)arg2;
- (void)_setHighlightGradient;
- (id)init;

@end

@interface FIUIRingsViewController : GLKViewController <FIUIRingGroupAnimationStatusDelegate>
{
    int _numRingsPerGroup;
    _Bool _dirtiedProjectionMatrix;
    _Bool _ringVAOinit;
    _Bool _iconVAOinit;
    _Bool _buffersCreated;
    _Bool _prevRingsAreEmpty;
    _Bool _didSetup;
    struct {
        union _GLKVector4 _field1;
        union _GLKVector4 _field2;
        union _GLKVector4 _field3;
        union _GLKVector2 _field4;
        union _GLKVector2 _field5;
    } *_ringVertices;
    union _GLKVector2 *_ringVertexCoordinates;
    union _GLKVector2 *_ringVertexPositions;
    struct {
        union _GLKVector2 _field1;
        float _field2;
        float _field3;
        union _GLKVector4 _field4;
        union _GLKVector2 _field5;
    } *_iconSpriteVertices;
    GLKTextureInfo *_iconSpriteTexture;
    union _GLKMatrix4 _projectionMatrix;
    unsigned int _ringProgram;
    unsigned int _ringStartProgram;
    unsigned int _ringEmptyProgram;
    unsigned int _iconSpriteProgram;
    unsigned int _coordinateBuffer;
    unsigned int _positionBuffer;
    unsigned int _coordPercentBuffer;
    unsigned int _iconSpriteVertexBuffer;
    unsigned int _ringsVAO;
    unsigned int _iconsVAO;
    unsigned int _transformUniform;
    unsigned int _iconSpriteTransformUniform;
    unsigned int _iconSpriteSamplerUniform;
    unsigned int _iconSpriteIconsPerDimensionUniform;
    unsigned int _positionAttribute;
    unsigned int _color1Attribute;
    unsigned int _color2Attribute;
    unsigned int _sizesAttribute;
    unsigned int _percentagesAttribute;
    unsigned int _coordinateAttribute;
    unsigned int _coordPercentAttribute;
    unsigned int _trigResultsAttribute;
    unsigned int _iconSpritePositionAttribute;
    unsigned int _iconSpriteSizeAttribute;
    unsigned int _iconSpriteColorAttribute;
    unsigned int _iconSpriteTextureOffsetAttribute;
    double _screenScale;
    double _cachedPointSize[3];
    double _cachedThickness[3];
    struct CGPoint _cachedPosition[3];
    struct CGPoint _cachedGroupCenter;
    _Bool _displayLinkRemovedFromOldRunLoop;
    _Bool _displayLinkInstalledInNewRunLoop;
    _Bool _viewIsVisible;
    int _ringGroupsPerRow;
    NSArray *_ringGroups;
    double _ringSpacing;
    UIImage *_iconSpriteImage;
    unsigned long long _iconTextureRows;
    unsigned long long _iconTextureColumns;
}

+ (id)_iconSpriteImage;
+ (id)_ringsViewControllerConfiguredForCompanionWithNumberOfRings:(long long)arg1 ringType:(long long)arg2;
+ (id)ringsViewControllerConfiguredForOneRingOnCompanionOfType:(long long)arg1;
+ (id)ringsViewControllerConfiguredForThreeRingsOnCompanion;
@property(nonatomic) unsigned long long iconTextureColumns; // @synthesize iconTextureColumns=_iconTextureColumns;
@property(nonatomic) unsigned long long iconTextureRows; // @synthesize iconTextureRows=_iconTextureRows;
@property(retain, nonatomic) UIImage *iconSpriteImage; // @synthesize iconSpriteImage=_iconSpriteImage;
@property(nonatomic) double ringSpacing; // @synthesize ringSpacing=_ringSpacing;
@property(nonatomic) int ringGroupsPerRow; // @synthesize ringGroupsPerRow=_ringGroupsPerRow;
@property(readonly, nonatomic) NSArray *ringGroups; // @synthesize ringGroups=_ringGroups;
- (void).cxx_destruct;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_context_loadVertexShader:(id)arg1 fragmentShader:(id)arg2 forProgram:(unsigned int *)arg3;
- (void)dealloc;
- (void)_destroyBuffers;
- (void)ringGroupDidBeginAnimations:(id)arg1;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)update;
- (void)_context_prepareForIconDraw;
- (void)_context_prepareForRingDraw:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)_updateProjectionMatrix;
- (void)_context_loadRingEmptyProgramIfNeeded;
- (void)_context_loadUniformsAndAttributes;
- (void)_context_createBuffers;
- (void)_setupIfNecessary;
- (void)_loadIconDataForGroupAtIndex:(long long)arg1;
- (void)_context_loadRingDataForGroupAtIndex:(long long)arg1;
- (void)_setRingGroups:(id)arg1;
- (id)snapshot;
- (void)hack_forceUnpauseRings;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_installNewDisplayLinkIfAppIsActive;
- (void)_appBecameActive:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;
- (void)viewDidLoad;
- (id)initWithRingGroups:(id)arg1 numberOfRingsPerGroup:(int)arg2;
- (void)setBriskPercentage:(double)arg1 animated:(_Bool)arg2;
- (void)setMovingHoursPercentage:(double)arg1 animated:(_Bool)arg2;
- (void)setCalorieDotPercentage:(double)arg1 animated:(_Bool)arg2;
- (void)setCaloriePercentage:(double)arg1 animated:(_Bool)arg2;

@end

@interface FIUIClientToken : NSObject <NSCopying>
{
    NSUUID *_UUID;
}

- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithUUID:(id)arg1;
- (id)init;

@end

@interface FUHourlySedentaryActivityInfo : NSObject <NSSecureCoding>
{
    NSDate *_startDate;
    long long _sedentaryState;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) long long sedentaryState; // @synthesize sedentaryState=_sedentaryState;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface FUGradientObject : NSObject
{
    NSArray *_colors;
    NSArray *_locations;
}

+ (id)gradientWithColors:(id)arg1 locations:(id)arg2;
+ (id)gradientWithTopColor:(id)arg1 bottomColor:(id)arg2;
@property(readonly, nonatomic) NSArray *locations; // @synthesize locations=_locations;
@property(readonly, nonatomic) NSArray *colors; // @synthesize colors=_colors;
- (void).cxx_destruct;
- (id)initWithColors:(id)arg1 locations:(id)arg2;

@end

@interface _FIUIRing : FIUIAnimatableObject
{
    float _percentage;
    float _dotPercentage;
    double _size;
    double _thickness;
    double _opacity;
    UIColor *_topColor;
    UIColor *_bottomColor;
    _FIUIIcon *_icon;
    _FIUIIcon *_dotIcon;
    double _topColorRed;
    double _topColorGreen;
    double _topColorBlue;
    double _bottomColorRed;
    double _bottomColorGreen;
    double _bottomColorBlue;
    struct CGPoint _position;
}

@property(readonly, nonatomic) double bottomColorBlue; // @synthesize bottomColorBlue=_bottomColorBlue;
@property(readonly, nonatomic) double bottomColorGreen; // @synthesize bottomColorGreen=_bottomColorGreen;
@property(readonly, nonatomic) double bottomColorRed; // @synthesize bottomColorRed=_bottomColorRed;
@property(readonly, nonatomic) double topColorBlue; // @synthesize topColorBlue=_topColorBlue;
@property(readonly, nonatomic) double topColorGreen; // @synthesize topColorGreen=_topColorGreen;
@property(readonly, nonatomic) double topColorRed; // @synthesize topColorRed=_topColorRed;
@property(retain, nonatomic) _FIUIIcon *dotIcon; // @synthesize dotIcon=_dotIcon;
@property(retain, nonatomic) _FIUIIcon *icon; // @synthesize icon=_icon;
@property(retain, nonatomic) UIColor *bottomColor; // @synthesize bottomColor=_bottomColor;
@property(retain, nonatomic) UIColor *topColor; // @synthesize topColor=_topColor;
@property(nonatomic) float dotPercentage; // @synthesize dotPercentage=_dotPercentage;
@property(nonatomic) float percentage; // @synthesize percentage=_percentage;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) double thickness; // @synthesize thickness=_thickness;
@property(nonatomic) double size; // @synthesize size=_size;
@property(nonatomic) struct CGPoint position; // @synthesize position=_position;
- (void).cxx_destruct;
- (id)_newAnimatablePropertyForType:(unsigned long long)arg1;
- (void)removeAllAnimationsForRingPropertyType:(unsigned long long)arg1;
- (void)addAnimation:(id)arg1 forRingPropertyType:(unsigned long long)arg2;
- (id)init;

@end

@interface FUDateAnchorRule : NSObject
{
    unsigned long long _calendarUnit;
    long long _roundingValue;
}

@property(nonatomic) long long roundingValue; // @synthesize roundingValue=_roundingValue;
@property(nonatomic) unsigned long long calendarUnit; // @synthesize calendarUnit=_calendarUnit;
- (_Bool)_componentsSuccessful:(id)arg1;
- (id)_anchorDiffComponents;
- (id)_floorDate:(id)arg1;
- (id)generateAnchorFromDate:(id)arg1;

@end

@interface FIUIFitnessTrackingDisabledViewController : UIViewController
{
    UITextView *_textView;
}

- (void).cxx_destruct;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithAppName:(id)arg1;

@end

@interface NLArcSegmentLayer : CAShapeLayer
{
    double _radius;
    long long _numberOfSegments;
    double _arcLineWidth;
    double _percentageFull;
}

@property(nonatomic) double percentageFull; // @synthesize percentageFull=_percentageFull;
@property(nonatomic) double arcLineWidth; // @synthesize arcLineWidth=_arcLineWidth;
@property(nonatomic) long long numberOfSegments; // @synthesize numberOfSegments=_numberOfSegments;
@property(nonatomic) double radius; // @synthesize radius=_radius;
- (id)actionForKey:(id)arg1;
- (void)_regeneratePath;
- (void)setBounds:(struct CGRect)arg1;
- (id)init;

@end

@interface FUNavigationController : UINavigationController
{
}

- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (id)initWithRootViewController:(id)arg1;

@end

@interface FIUIRingImageFactory : NSObject
{
}

+ (id)_renderRingsInViewController:(id)arg1 withDiameter:(double)arg2 thickness:(double)arg3 interspacing:(double)arg4;
+ (id)renderRingsInViewController:(id)arg1 forMovePercentage:(double)arg2 exercisePercentage:(double)arg3 standPercentage:(double)arg4 withDiameter:(double)arg5 thickness:(double)arg6 interspacing:(double)arg7;
+ (id)renderSingleRingInViewController:(id)arg1 forPercentage:(double)arg2 withDiameter:(double)arg3 thickness:(double)arg4 topColor:(id)arg5 bottomColor:(id)arg6;

@end

@interface FUScrollWheel : UIView <UIScrollViewDelegate>
{
    NSMutableArray *_reusableLabelsQueue;
    NSMutableDictionary *_usedLabels;
    struct _NSRange _previousRange;
    unsigned long long _numberOfRows;
    double _scrollWheelLabelHeight;
    UIView *_topDividerView;
    UIView *_bottomDividerView;
    UIImageView *_maskLayer;
    _Bool _shouldRegenerateOpacityMask;
    _Bool _loaded;
    _Bool _showsSelectionIndicator;
    id <FUScrollWheelDataSource> _dataSource;
    id <FUScrollWheelDelegate> _delegate;
    long long _itemTitleAligmnent;
    unsigned long long _currentIndex;
    UIFont *_font;
    UIScrollView *_scrollView;
    double _scrollWheelLabelPageSize;
}

@property(nonatomic) double scrollWheelLabelPageSize; // @synthesize scrollWheelLabelPageSize=_scrollWheelLabelPageSize;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) long long itemTitleAligmnent; // @synthesize itemTitleAligmnent=_itemTitleAligmnent;
@property(nonatomic) _Bool showsSelectionIndicator; // @synthesize showsSelectionIndicator=_showsSelectionIndicator;
@property(nonatomic) __weak id <FUScrollWheelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <FUScrollWheelDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)_alertDidChangeToCurrentIndex:(unsigned long long)arg1;
- (unsigned long long)_numberOfRows;
- (id)_titleForItemAtIndex:(unsigned long long)arg1;
- (double)_yPositionForLabelAtIndex:(unsigned long long)arg1;
- (struct CGRect)_frameForLabelAtIndex:(unsigned long long)arg1;
- (id)_dequeueLabel;
- (void)_recycleAllLabels;
- (void)_recycleLabel:(id)arg1 forKey:(id)arg2;
- (id)_textForLabelAtIndex:(unsigned long long)arg1;
- (void)_reuseLabelsWithRange:(struct _NSRange)arg1 contentOffset:(struct CGPoint)arg2;
- (double)_startingLocation;
- (void)_layoutScrollView;
- (void)_generateOpacityMask;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)reloadData;
- (void)willMoveToSuperview:(id)arg1;
- (void)layoutSubviews;
- (void)setHidden:(_Bool)arg1;
- (void)_setActiveScrollwheelIfNotActive;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FUChartSeries : UIView
{
    NSDate *_minXValue;
    NSDate *_maxXValue;
    NSArray *_dataPoints;
    float _animationDuration;
    NSNumber *_minYValue;
    NSNumber *_maxYValue;
    id <FUChartSeriesDataSource> _dataSource;
    id <FUChartSeriesDelegate> _delegate;
    FUChartDataSet *_dataSet;
    struct UIEdgeInsets _edgeInsets;
}

@property(retain, nonatomic) FUChartDataSet *dataSet; // @synthesize dataSet=_dataSet;
@property(nonatomic) __weak id <FUChartSeriesDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <FUChartSeriesDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(retain, nonatomic) NSNumber *maxYValue; // @synthesize maxYValue=_maxYValue;
@property(retain, nonatomic) NSNumber *minYValue; // @synthesize minYValue=_minYValue;
@property(nonatomic) float animationDuration; // @synthesize animationDuration=_animationDuration;
- (void).cxx_destruct;
- (id)_getMaxYValue;
- (id)_getMinYValue;
- (id)_getMaxXValue;
- (id)_getMinXValue;
- (double)_getYValueForPointFromChartPoint:(id)arg1 key:(id)arg2;
- (double)_getYValueForPointFromChartPoint:(id)arg1;
- (struct CGRect)insetBounds;
- (double)_getYValueForPointFromChartPointValue:(id)arg1;
- (double)_getXValueForPointFromChartPoint:(id)arg1;
- (float)_relativePositionForYPlaneValue:(id)arg1;
- (float)_relativePositionForXPlaneValue:(id)arg1;
- (void)_reloadMinMaxValues;
- (void)tapDragGestureRecognizerUpdated:(id)arg1;
- (id)getLabelsFromSet;
- (id)getChartPointFromDataSetAtIndex:(long long)arg1;
- (struct CGPoint)getPointFromChartPoint:(id)arg1 forKey:(id)arg2;
- (struct CGPoint)getPointFromChartPoint:(id)arg1;
- (id)getPointsFromDataSet;
- (void)refreshView;
- (void)selectedPointIndexesUpdated:(id)arg1 selectionPoints:(id)arg2;
- (void)layoutSubviews;
- (void)animate;
- (id)init;

@end

@interface FUChartPointView : UIView
{
    int _pointStyle;
    UIColor *_color;
    double _radius;
}

+ (id)pointWithColor:(id)arg1 radius:(double)arg2 style:(int)arg3;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic) int pointStyle; // @synthesize pointStyle=_pointStyle;
- (void)_drawGlowingCircleInContext:(struct CGContext *)arg1;
- (void)_drawBullseyeSquareInContext:(struct CGContext *)arg1;
- (void)_drawBullseyeCircleInContext:(struct CGContext *)arg1;
- (void)_drawHollowSquareInContext:(struct CGContext *)arg1;
- (void)_drawSolidSquareInContext:(struct CGContext *)arg1;
- (void)_drawHollowCircleInContext:(struct CGContext *)arg1;
- (void)_drawSolidCircleInContext:(struct CGContext *)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithColor:(id)arg1 radius:(double)arg2 style:(int)arg3;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface HKQuery (FUQuerySupport)
+ (id)FU_predicateForWorkoutsWithMetadataIndoor:(_Bool)arg1;
@end

@interface HKWorkout (Metrics)
+ (unsigned long long)FU_associatedMetricForGoalType:(unsigned long long)arg1;
+ (_Bool)FU_shouldTrackPaceAsSpeedForActivityType:(unsigned long long)arg1;
+ (_Bool)_isHeartRateSupportedInPowerSettingsForActivityType:(unsigned long long)arg1;
+ (_Bool)_isHeartRateSupportedInPrivacySettings;
+ (_Bool)FU_isHeartRateSupportedForActivityType:(unsigned long long)arg1 isIndoor:(_Bool)arg2;
+ (id)FU_supportedWorkoutMetricsForActivityType:(unsigned long long)arg1 isIndoor:(_Bool)arg2;
@end

@interface HKAchievement (FIUIImageLoading)
- (id)fiui_badgeMovieURL;
- (id)_fiui_URLForFullMovieName:(id)arg1 withScale:(double)arg2;
- (id)fiui_imageForSizeClass:(long long)arg1;
- (id)_fiui_assetNameForSizeClass:(long long)arg1;
@end

@interface NSDateFormatter (FUSessionTracker)
+ (id)FU_timeStringWithSpaceRemoved:(id)arg1 date:(id)arg2;
+ (_Bool)_dateStringFits:(id)arg1 font:(id)arg2 maxWidth:(double)arg3;
+ (void)_localeDidChange:(id)arg1;
+ (id)FU_stringWithLongestStyleDate:(id)arg1 font:(id)arg2 maxWidth:(double)arg3;
@end

@interface HKWorkout (Description)
- (double)FU_completionFactor;
- (id)FU_localizedKeyMetricStringWithUnitStyle:(long long)arg1;
- (id)FU_localizedOpenGoalKeyMetricStringWithUnitStyle:(long long)arg1;
- (id)FU_localizedKeyMetricDistanceStringWithUnitStyle:(long long)arg1;
- (id)FU_localizedKeyMetricCyclingStringWithUnitStyle:(long long)arg1;
- (id)FU_localizedKeyMetricDurationString;
- (id)FU_localizedKeyMetricCalorieStringWithUnitStyle:(long long)arg1;
- (id)_localizedGoalDescriptionWithActivity:(id)arg1 formattedValue:(id *)arg2 useCustomMetrics:(_Bool)arg3;
- (id)FU_localizedGoalDescription;
- (id)FU_fitnessLocalizedGoalDescriptionWithValue:(id *)arg1;
@end

@interface HKStatisticsCollection (FUUtilities)
- (id)_fakeDataWithUnit:(id)arg1;
- (id)_fakingValueForKey:(id)arg1;
- (double)totalWithUnit:(id)arg1;
@end

@interface UIFont (FUSausageFontSupport)
+ (id)fu_bodyEmphasizeFont;
+ (id)fu_bodyShortFont;
+ (id)fu_mediumFontOfSize:(double)arg1 centeredColons:(_Bool)arg2;
+ (id)fu_mediumFontOfSize:(double)arg1;
+ (id)fu_systemFontOfSize:(double)arg1 centeredColons:(_Bool)arg2;
+ (id)fu_fontByApplyingFeatureSettings:(id)arg1 toFont:(id)arg2;
+ (id)fu_alternateColonsFeatureSetting;
+ (id)_fu_sausageFontOfSize:(double)arg1 fontWeight:(double)arg2 centeredColons:(_Bool)arg3;
+ (id)_fu_sausageFontOfSize:(double)arg1 fontWeight:(double)arg2;
+ (id)fu_boldSausageFontOfSize:(double)arg1;
+ (id)fu_mediumSausageFontOfSize:(double)arg1;
+ (id)fu_lightSausageFontOfSize:(double)arg1;
+ (id)fu_sausageFontOfSize:(double)arg1 centeredColons:(_Bool)arg2;
+ (id)fu_sausageFontOfSize:(double)arg1;
@end

@interface NSNumberFormatter (FUSessionTracker)
+ (id)FU_localizedStringWithCalories:(double)arg1 unitStyle:(long long)arg2;
+ (id)FU_localizedDisplayStringForDistanceUnit:(long long)arg1;
+ (id)FU_localizedSpeedUnit;
+ (id)FU_localizedSpeedValueForDistance:(id)arg1 overTime:(double)arg2;
+ (id)FU_localizedStringWithDistance:(double)arg1 distanceUnit:(long long)arg2 unitStyle:(long long)arg3 withDecimalPrecision:(long long)arg4;
+ (id)FU_adaptiveLocalizedDistanceStringWithDistance:(double)arg1 unitStyle:(long long)arg2 usedUnit:(long long *)arg3;
+ (id)FU_localizedStringWithDistance:(double)arg1 unitStyle:(long long)arg2;
+ (double)FU_distanceInMetersForDistanceInUserUnit:(double)arg1;
+ (double)FU_distanceInDistanceUnit:(long long)arg1 forDistanceInMeters:(double)arg2;
+ (double)FU_distanceInUserDistanceUnitForDistanceInMeters:(double)arg1;
+ (id)FU_localizedShortUnitStringWithDistanceUnit:(long long)arg1;
+ (void)FU_setUserDistanceUnit:(long long)arg1;
+ (_Bool)FU_localeUsesMetricForPersonHeight;
+ (long long)FU_userDistanceUnit;
+ (long long)FU_lengthUnitForCurrentLocale;
+ (long long)_defaultPrecisionForDistanceUnit:(long long)arg1;
+ (id)_formatDoubleValue:(double)arg1 withFormatString:(id)arg2 withDecimalPrecision:(long long)arg3;
+ (id)_longStyleTitleStringWithDistanceUnit:(long long)arg1 distanceInDistanceUnit:(double)arg2 withDecimalPrecision:(long long)arg3;
+ (id)_longStyleStringWithDistanceUnit:(long long)arg1 distanceInDistanceUnit:(double)arg2 withDecimalPrecision:(long long)arg3;
+ (id)_shortStyleStringWithDistanceUnit:(long long)arg1 distanceInDistanceUnit:(double)arg2 withDecimalPrecision:(long long)arg3;
+ (id)FU_stringWithTimeInterval:(double)arg1 formatType:(unsigned long long)arg2;
+ (id)FU_stringForHeight:(long long)arg1 withUnitString:(id)arg2;
+ (id)FU_stringForHeightInInches:(long long)arg1;
+ (id)FU_percentStringWithNumber:(id)arg1;
+ (id)FU_stringWithNumber:(id)arg1 decimalPrecision:(long long)arg2;
+ (id)FU_decimalSeparator;
+ (id)_FU_doubleFractionNumberFormatter;
+ (id)_FU_singleFractionNumberFormatter;
+ (id)_FU_zeroPaddedIntegerNumberFormatter;
+ (id)_FU_integerPercentNumberFormatter;
+ (id)_FU_integerNumberFormatter;
@end

