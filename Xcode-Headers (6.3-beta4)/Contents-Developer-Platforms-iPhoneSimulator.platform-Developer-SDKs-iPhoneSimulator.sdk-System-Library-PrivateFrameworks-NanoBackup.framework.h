//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
// UUID: F4FFF131-E3EF-3FCC-BFB5-A980EFAC0601
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 22.0.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NBServerProtocol <NSObject>
- (void)deleteBackupID:(NSUUID *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)createBackupForPairingID:(NSUUID *)arg1 completionHandler:(void (^)(NBBackup *, NSError *))arg2;
- (void)restoreFromBackupID:(NSUUID *)arg1 forPairingID:(NSUUID *)arg2 pairingDataStore:(NSString *)arg3 completionHandler:(void (^)(NSError *))arg4;
- (void)listBackupsWithCompletionHandler:(void (^)(NSArray *, NSError *))arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface NBBackup : NSObject <NSSecureCoding>
{
    _Bool _locationOptInEnabled;
    _Bool _diagnosticsOptInEnabled;
    _Bool _siriOptInEnabled;
    NSUUID *_uuid;
    NSString *_name;
    NSString *_productType;
    NSString *_systemVersion;
    NSString *_systemBuildVersion;
    NSString *_marketingVersion;
    NSString *_deviceColor;
    NSString *_deviceEnclosureColor;
    NSNumber *_bottomEnclosureMaterial;
    NSNumber *_topEnclosureMaterial;
    NSNumber *_fcmMaterial;
    NSNumber *_bcmWindowMaterial;
    NSString *_watchFace;
    NSString *_watchFaceColor;
    NSDate *_lastModificationDate;
    NSNumber *_sizeInBytes;
    NSString *_model;
    NSString *_material;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic, getter=isSiriOptInEnabled) _Bool siriOptInEnabled; // @synthesize siriOptInEnabled=_siriOptInEnabled;
@property(retain, nonatomic) NSString *material; // @synthesize material=_material;
@property(retain, nonatomic) NSString *model; // @synthesize model=_model;
@property(retain, nonatomic) NSNumber *sizeInBytes; // @synthesize sizeInBytes=_sizeInBytes;
@property(retain, nonatomic) NSDate *lastModificationDate; // @synthesize lastModificationDate=_lastModificationDate;
@property(nonatomic, getter=isDiagnosticsOptInEnabled) _Bool diagnosticsOptInEnabled; // @synthesize diagnosticsOptInEnabled=_diagnosticsOptInEnabled;
@property(nonatomic, getter=isLocationOptInEnabled) _Bool locationOptInEnabled; // @synthesize locationOptInEnabled=_locationOptInEnabled;
@property(retain, nonatomic) NSString *watchFaceColor; // @synthesize watchFaceColor=_watchFaceColor;
@property(retain, nonatomic) NSString *watchFace; // @synthesize watchFace=_watchFace;
@property(retain, nonatomic) NSNumber *bcmWindowMaterial; // @synthesize bcmWindowMaterial=_bcmWindowMaterial;
@property(retain, nonatomic) NSNumber *fcmMaterial; // @synthesize fcmMaterial=_fcmMaterial;
@property(retain, nonatomic) NSNumber *topEnclosureMaterial; // @synthesize topEnclosureMaterial=_topEnclosureMaterial;
@property(retain, nonatomic) NSNumber *bottomEnclosureMaterial; // @synthesize bottomEnclosureMaterial=_bottomEnclosureMaterial;
@property(retain, nonatomic) NSString *deviceEnclosureColor; // @synthesize deviceEnclosureColor=_deviceEnclosureColor;
@property(retain, nonatomic) NSString *deviceColor; // @synthesize deviceColor=_deviceColor;
@property(retain, nonatomic) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
@property(retain, nonatomic) NSString *systemBuildVersion; // @synthesize systemBuildVersion=_systemBuildVersion;
@property(retain, nonatomic) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(retain, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;

@end

@interface NBManager : NSObject
{
    NSObject<OS_dispatch_queue> *_internalQueue;
    NSObject<OS_dispatch_queue> *_externalQueue;
    NSXPCConnection *_xpcConnection;
}

@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *externalQueue; // @synthesize externalQueue=_externalQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *internalQueue; // @synthesize internalQueue=_internalQueue;
- (void).cxx_destruct;
- (void)restoreFromPairingID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)deleteBackup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createBackupForPairingID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)restoreFromBackup:(id)arg1 forPairingID:(id)arg2 pairingDataStore:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)restoreFromBackup:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)listBackupsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)connection;
- (void)dealloc;
- (void)unsafe_invalidate;
- (id)initWithQueue:(id)arg1;
- (id)init;

@end

