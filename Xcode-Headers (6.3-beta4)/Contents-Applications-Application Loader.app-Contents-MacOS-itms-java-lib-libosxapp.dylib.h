//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/MacOS/itms/java/lib/libosxapp.dylib
// UUID: 450B0F75-C6FD-312A-A523-3F9EA31EBDE5
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//       Minimum Mac OS X version: 10.6.0
//                    SDK version: 10.6.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/.
//                               = /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/MacOS/itms/java/lib
//

@protocol NSApplicationDelegate <NSObject>

@optional
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 openTempFile:(id)arg2;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)application:(id)arg1 openFileWithoutUI:(id)arg2;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (id)applicationDockMenu:(id)arg1;
- (id)application:(id)arg1 willPresentError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillHide:(id)arg1;
- (void)applicationDidHide:(id)arg1;
- (void)applicationWillUnhide:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationWillUpdate:(id)arg1;
- (void)applicationDidUpdate:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidChangeScreenParameters:(id)arg1;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)description;

@optional
- (id)debugDescription;
@end

@interface NSApplicationAWT : NSApplication
{
    NSString *fApplicationName;
    NSWindow *eventTransparentWindow;
    double dummyEventTimestamp;
    NSConditionLock *seenDummyEventLock;
}

+ (void)runAWTLoopWithApp:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)finishLaunching;
- (void)registerWithProcessManager;
- (void)setDockIconWithEnv:(const struct JNINativeInterface_ **)arg1;
- (BOOL)usingDefaultNib;
- (void)orderFrontStandardAboutPanelWithOptions:(id)arg1;
- (id)nextEventMatchingMask:(unsigned long long)arg1 untilDate:(id)arg2 inMode:(id)arg3 dequeue:(BOOL)arg4;
- (void)sendEvent:(id)arg1;
- (void)postDummyEvent;
- (void)waitForDummyEvent;

@end

@interface QueuingApplicationDelegate : NSObject <NSApplicationDelegate>
{
    BOOL fHandlesDocumentTypes;
    BOOL fHandlesURLTypes;
    id <NSApplicationDelegate> realDelegate;
    NSMutableArray *queue;
}

+ (id)sharedDelegate;
- (id)init;
- (void)dealloc;
- (void)_handleOpenURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (void)_willFinishLaunching;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (void)_systemWillPowerOff;
- (void)_appDidActivate;
- (void)_appDidDeactivate;
- (void)_appDidHide;
- (void)_appDidUnhide;
- (void)processQueuedEventsWithTargetDelegate:(id)arg1;
@property(retain) NSMutableArray *queue; // @synthesize queue;
@property(retain) id <NSApplicationDelegate> realDelegate; // @synthesize realDelegate;

@end

@interface PropertiesUtilities : NSObject
{
}

+ (id)javaSystemPropertyForKey:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;

@end

@interface ThreadUtilities : NSObject
{
}

+ (const struct JNINativeInterface_ **)getJNIEnv;
+ (const struct JNINativeInterface_ **)getJNIEnvUncached;
+ (void)initialize;
+ (void)performOnMainThread:(SEL)arg1 onObject:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 awtMode:(BOOL)arg5;

@end

@interface CPerformer : NSObject
{
    id fTarget;
    SEL fSelector;
    id fArg;
    BOOL fWait;
}

- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 arg:(id)arg3;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 arg:(id)arg3 wait:(BOOL)arg4;
- (void)dealloc;
- (void)perform;
- (void)performCompatible;
- (void)_performCompatible:(id)arg1;

@end

@interface NSBundle (EAWTOverrides)
- (BOOL)_hasEAWTOverride:(id)arg1;
@end

