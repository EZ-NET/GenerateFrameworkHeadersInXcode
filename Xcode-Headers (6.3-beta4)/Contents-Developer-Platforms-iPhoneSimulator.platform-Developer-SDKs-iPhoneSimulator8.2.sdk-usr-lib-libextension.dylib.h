//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libextension.dylib
// UUID: 8D94B7ED-0A0E-335D-9C33-98F5A1A2DEB9
//
//                           Arch: x86_64
//                Current version: 0.0.0
//          Compatibility version: 0.0.0
//                 Source version: 51.4.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSExtensionBundleHelper
- (void)__queryPhotoServiceAuthorizationStatusForPlugInUUID:(NSUUID *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)__localizedInfoDictionaryObjectForKeys:(NSArray *)arg1 withPlugInUUID:(NSUUID *)arg2 completion:(void (^)(NSDictionary *, NSError *))arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@protocol PKModularService <NSObject>
+ (id <PKModularService>)initForPlugInKit;

@optional
- (void)communicationsFailed:(id <PKSubsystemServicePersonality>)arg1;
- (void)endUsing:(id <PKSubsystemServicePersonality>)arg1;
- (void)beginUsing:(id <PKSubsystemServicePersonality>)arg1 withBundle:(NSBundle *)arg2;
@end

@protocol _NSExtensionAuxHostingBase
- (void)___nsx_pingHost:(void (^)(void))arg1;
@end

@protocol _NSExtensionContextHosting <NSObject>
- (void)_openURL:(NSURL *)arg1 completion:(void (^)(_Bool))arg2;
- (void)_loadPreviewImageForPayload:(NSDictionary *)arg1 contextIdentifier:(NSUUID *)arg2 completionHandler:(void (^)(id, NSError *))arg3;
- (void)_loadItemForPayload:(NSDictionary *)arg1 contextIdentifier:(NSUUID *)arg2 completionHandler:(void (^)(id, NSError *))arg3;
- (void)_cancelRequestWithError:(NSError *)arg1 forExtensionContextWithUUID:(NSUUID *)arg2 completion:(void (^)(void))arg3;
- (void)_completeRequestReturningItems:(NSArray *)arg1 forExtensionContextWithUUID:(NSUUID *)arg2 completion:(void (^)(void))arg3;
@end

@protocol _NSExtensionContextVending <NSObject>
- (void)_hostDidBecomeActiveForContextUUID:(NSUUID *)arg1 completion:(void (^)(void))arg2;
- (void)_hostWillResignActiveForContextUUID:(NSUUID *)arg1 completion:(void (^)(void))arg2;
- (void)_hostWillEnterForegroundForContextUUID:(NSUUID *)arg1 completion:(void (^)(void))arg2;
- (void)_hostDidEnterBackgroundForContextUUID:(NSUUID *)arg1 completion:(void (^)(void))arg2;
- (void)_beginRequestWithExtensionItems:(NSArray *)arg1 listenerEndpoint:(NSXPCListenerEndpoint *)arg2 withContextUUID:(NSUUID *)arg3 completion:(void (^)(NSUUID *, NSError *))arg4;
@end

@protocol _NSItemProviderLoading <NSObject, NSSecureCoding>
- (void)loadPreviewImageWithCompletionHandler:(void (^)(id <NSSecureCoding>, NSError *))arg1 expectedValueClass:(Class)arg2 options:(NSDictionary *)arg3;
- (void)loadItemForTypeIdentifier:(NSString *)arg1 completionHandler:(void (^)(id <NSSecureCoding>, NSError *))arg2 expectedValueClass:(Class)arg3 options:(NSDictionary *)arg4;
@end

@interface NSItemProvider : NSObject <NSSecureCoding, NSCopying>
{
    CDUnknownBlockType __previewImageHandler;
    NSDictionary *_userInfo;
    id <_NSItemProviderLoading> __loadOperator;
    NSMutableDictionary *__loadHandlers;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSMutableDictionary *_loadHandlers; // @synthesize _loadHandlers=__loadHandlers;
@property(retain, nonatomic) id <_NSItemProviderLoading> _loadOperator; // @synthesize _loadOperator=__loadOperator;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
- (void)_loadItemOfClass:(Class)arg1 withLoadHandler:(CDUnknownBlockType)arg2 options:(id)arg3 coerceForCoding:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_loadPreviewImageOfClass:(Class)arg1 options:(id)arg2 coerceForCoding:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_loadItemOfClass:(Class)arg1 forTypeIdentifier:(id)arg2 options:(id)arg3 coerceForCoding:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)loadItemForTypeIdentifier:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, copy, nonatomic) NSArray *registeredTypeIdentifiers; // @dynamic registeredTypeIdentifiers;
- (_Bool)hasItemConformingToTypeIdentifier:(id)arg1;
- (void)registerItemForTypeIdentifier:(id)arg1 loadHandler:(CDUnknownBlockType)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithItem:(id)arg1 typeIdentifier:(id)arg2;
- (id)init;
- (void)loadPreviewImageWithOptions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType previewImageHandler; // @dynamic previewImageHandler;

@end

__attribute__((visibility("hidden")))
@interface _NSItemProviderTypeCoercion : NSObject
{
    id _value;
    Class _targetClass;
}

+ (id)coercionClassStringFromClass:(Class)arg1;
+ (SEL)selectorForCoercionFromValue:(id)arg1 toClass:(Class)arg2;
+ (id)typeCoercionForValue:(id)arg1 targetClass:(Class)arg2;
@property(copy, nonatomic) Class targetClass; // @synthesize targetClass=_targetClass;
@property(retain, nonatomic) id value; // @synthesize value=_value;
- (id)_NSItemProviderTypeCoercion_coercedNSFileWrapperValueFromNSDataValue:(id)arg1 error:(id *)arg2;
- (id)_NSItemProviderTypeCoercion_coercedNSFileWrapperValueFromNSURLValue:(id)arg1 error:(id *)arg2;
- (id)_NSItemProviderTypeCoercion_coercedNSDataValueFromNSURLValue:(id)arg1 error:(id *)arg2;
- (id)coerceValueAndReturnError:(id *)arg1;
- (_Bool)shouldCoerceForCoding;
- (void)dealloc;

@end

@interface _NSExtensionContextTransactionHolder : NSObject
{
}

- (void)dealloc;
- (id)init;

@end

@interface _NSExtensionContextVendor : NSObject <NSXPCListenerDelegate, _NSExtensionContextVending>
{
    NSMutableDictionary *__extensionServiceConnections;
    NSMutableDictionary *__extensionContexts;
    NSMutableDictionary *__extensionPrincipalObjects;
}

+ (id)_expirationConcurrentQueue;
+ (id)_completionConcurrentQueue;
+ (Class)_extensionContextClass;
+ (id)_extensionMainStoryboard;
+ (Class)_extensionPrincipalClass;
+ (id)_extensionDictionary;
+ (void)_startListening;
+ (id)_sharedExtensionContextVendor;
@property(retain, nonatomic, setter=_setExtensionPrincipalObjects:) NSMutableDictionary *_extensionPrincipalObjects; // @synthesize _extensionPrincipalObjects=__extensionPrincipalObjects;
@property(retain, nonatomic, setter=_setExtensionContexts:) NSMutableDictionary *_extensionContexts; // @synthesize _extensionContexts=__extensionContexts;
@property(retain, nonatomic, setter=_setExtensionServiceConnections:) NSMutableDictionary *_extensionServiceConnections; // @synthesize _extensionServiceConnections=__extensionServiceConnections;
- (void)_setPrincipalObject:(id)arg1 forUUID:(id)arg2;
- (id)_extensionContextForUUID:(id)arg1;
- (void)_tearDownContextWithUUID:(id)arg1;
- (void)_hostDidBecomeActiveForContextUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_hostWillResignActiveForContextUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_hostWillEnterForegroundForContextUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_hostDidEnterBackgroundForContextUUID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_beginRequestWithExtensionItems:(id)arg1 listenerEndpoint:(id)arg2 withContextUUID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)_shouldCreatePrincipalObject;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSExtensionContext : NSObject <NSSecureCoding, NSCopying, NSXPCListenerDelegate, _NSExtensionAuxHostingBase>
{
    _Bool __dummyExtension;
    NSArray *_inputItems;
    NSUUID *__UUID;
    CDUnknownBlockType __requestCleanUpBlock;
    id <_NSExtensionContextHosting> __extensionHostProxy;
    id <_NSExtensionContextVending> __extensionVendorProxy;
    NSXPCConnection *__auxiliaryConnection;
    NSXPCListener *__auxiliaryListener;
    id __principalObject;
}

+ (_Bool)supportsSecureCoding;
+ (id)_extensionAuxiliaryVendorProtocol;
+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionContextVendorProtocol;
+ (id)_extensionContextHostProtocol;
+ (id)_extensionContextHostProtocolAllowedClassesForItems;
+ (void)initialize;
+ (id)_extensionContextForIdentifier:(id)arg1;
@property(nonatomic, getter=_isDummyExtension, setter=_setDummyExtension:) _Bool _dummyExtension; // @synthesize _dummyExtension=__dummyExtension;
@property(nonatomic, setter=_setPrincipalObject:) id _principalObject; // @synthesize _principalObject=__principalObject;
@property(retain, nonatomic, setter=_setAuxiliaryListener:) NSXPCListener *_auxiliaryListener; // @synthesize _auxiliaryListener=__auxiliaryListener;
@property(retain, nonatomic, setter=_setAuxiliaryConnection:) NSXPCConnection *_auxiliaryConnection; // @synthesize _auxiliaryConnection=__auxiliaryConnection;
@property(retain, nonatomic, setter=_setExtensionVendorProxy:) id <_NSExtensionContextVending> _extensionVendorProxy; // @synthesize _extensionVendorProxy=__extensionVendorProxy;
@property(retain, nonatomic, setter=_setExtensionHostProxy:) id <_NSExtensionContextHosting> _extensionHostProxy; // @synthesize _extensionHostProxy=__extensionHostProxy;
@property(copy, nonatomic, setter=_setRequestCleanUpBlock:) CDUnknownBlockType _requestCleanUpBlock; // @synthesize _requestCleanUpBlock=__requestCleanUpBlock;
@property(copy, nonatomic) NSUUID *_UUID; // @synthesize _UUID=__UUID;
- (void)_setInputItems:(id)arg1;
@property(copy, nonatomic) NSArray *inputItems; // @synthesize inputItems=_inputItems;
- (void)didConnectToVendor:(id)arg1;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)___nsx_pingHost:(CDUnknownBlockType)arg1;
- (void)_willPerformHostCallback:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (void)_openURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_loadPreviewImageForPayload:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_loadItemForPayload:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)openURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelRequestWithError:(id)arg1;
- (void)completeRequestReturningItems:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_completeRequestReturningItemsSecondHalf:(CDUnknownBlockType)arg1;
- (_Bool)_isHost;
- (void)dealloc;
- (void)invalidate;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithInputItems:(id)arg1;
- (id)initWithInputItems:(id)arg1 contextUUID:(id)arg2;
- (id)initWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 contextUUID:(id)arg3;
- (id)_derivedExtensionAuxiliaryHostProtocol;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSExtensionItem : NSObject <NSCopying, NSSecureCoding>
{
    NSMutableDictionary *_userInfo;
}

+ (_Bool)supportsSecureCoding;
- (id)_matchingDictionaryRepresentation;
- (id)description;
@property(copy, nonatomic) NSDictionary *userInfo;
@property(copy, nonatomic) NSArray *attachments; // @dynamic attachments;
@property(copy, nonatomic) NSAttributedString *attributedContentText; // @dynamic attributedContentText;
@property(copy, nonatomic) NSAttributedString *attributedTitle; // @dynamic attributedTitle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface NSExtension : NSObject <_NSExtensionContextHosting>
{
    _Bool _observingHostAppStateChanges;
    NSString *_identifier;
    NSString *_version;
    NSDictionary *_attributes;
    NSDictionary *_infoDictionary;
    NSString *_extensionPointIdentifier;
    CDUnknownBlockType _requestCompletionBlock;
    CDUnknownBlockType _requestCancellationBlock;
    CDUnknownBlockType _requestInterruptionBlock;
    id <PKPlugIn> __plugIn;
    NSBundle *__extensionBundle;
    CDUnknownBlockType __requestPostCompletionBlock;
    CDUnknownBlockType __requestPostCompletionBlockWithItems;
    NSMutableDictionary *__extensionExpirationIdentifiers;
    NSMutableDictionary *__extensionServiceConnections;
    NSMutableDictionary *__extensionContexts;
    BKSProcessAssertion *__extensionProcessAssertion;
    long long __assertionRefCount;
    NSObject<OS_dispatch_queue> *__safePluginQueue;
}

+ (void)endMatchingExtensions:(id)arg1;
+ (id)beginMatchingExtensionsWithAttributes:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)extensionWithIdentifier:(id)arg1 error:(id *)arg2;
+ (void)extensionsWithMatchingAttributes:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)extensionsWithMatchingAttributes:(id)arg1 error:(id *)arg2;
+ (_Bool)_shouldLogExtensionDiscovery;
+ (void)initialize;
+ (id)predicateForActivationRule:(id)arg1;
+ (_Bool)evaluateActivationRule:(id)arg1 withExtensionItemsRepresentation:(id)arg2;
+ (void)initializeFiltering;
@property(nonatomic) NSObject<OS_dispatch_queue> *_safePluginQueue; // @synthesize _safePluginQueue=__safePluginQueue;
@property(nonatomic, getter=_isObservingHostAppStateChanges, setter=_setObservingHostAppStateChanges:) _Bool observingHostAppStateChanges; // @synthesize observingHostAppStateChanges=_observingHostAppStateChanges;
@property(nonatomic, setter=_setAssertionRefCount:) long long _assertionRefCount; // @synthesize _assertionRefCount=__assertionRefCount;
@property(retain, nonatomic, setter=_setExtensionProcessAssertion:) BKSProcessAssertion *_extensionProcessAssertion; // @synthesize _extensionProcessAssertion=__extensionProcessAssertion;
@property(retain, nonatomic, setter=_setExtensionContexts:) NSMutableDictionary *_extensionContexts; // @synthesize _extensionContexts=__extensionContexts;
@property(retain, nonatomic, setter=_setExtensionServiceConnections:) NSMutableDictionary *_extensionServiceConnections; // @synthesize _extensionServiceConnections=__extensionServiceConnections;
@property(retain, nonatomic, setter=_setExtensionExpirationsIdentifiers:) NSMutableDictionary *_extensionExpirationIdentifiers; // @synthesize _extensionExpirationIdentifiers=__extensionExpirationIdentifiers;
@property(copy, nonatomic) CDUnknownBlockType _requestPostCompletionBlockWithItems; // @synthesize _requestPostCompletionBlockWithItems=__requestPostCompletionBlockWithItems;
@property(copy, nonatomic) CDUnknownBlockType _requestPostCompletionBlock; // @synthesize _requestPostCompletionBlock=__requestPostCompletionBlock;
@property(retain, nonatomic, setter=_setExtensionBundle:) NSBundle *_extensionBundle; // @synthesize _extensionBundle=__extensionBundle;
@property(retain, nonatomic, setter=_setPlugIn:) id <PKPlugIn> _plugIn; // @synthesize _plugIn=__plugIn;
@property(copy, nonatomic) CDUnknownBlockType requestInterruptionBlock; // @synthesize requestInterruptionBlock=_requestInterruptionBlock;
@property(copy, nonatomic) CDUnknownBlockType requestCancellationBlock; // @synthesize requestCancellationBlock=_requestCancellationBlock;
@property(copy, nonatomic) CDUnknownBlockType requestCompletionBlock; // @synthesize requestCompletionBlock=_requestCompletionBlock;
@property(copy, nonatomic) NSString *extensionPointIdentifier; // @synthesize extensionPointIdentifier=_extensionPointIdentifier;
@property(copy, nonatomic) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
@property(copy, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)_hostDidBecomeActiveNote:(id)arg1;
- (void)_hostWillResignActiveNote:(id)arg1;
- (void)_hostDidEnterBackgroundNote:(id)arg1;
- (void)_hostWillEnterForegroundNote:(id)arg1;
- (void)_kill:(int)arg1;
- (void)_safelyEndUsing:(CDUnknownBlockType)arg1;
- (void)_safelyBeginUsing:(CDUnknownBlockType)arg1;
- (int)_plugInProcessIdentifier;
- (_Bool)_isSystemExtension;
- (void)_openURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_loadPreviewImageForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_loadItemForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_cancelRequestWithError:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_completeRequestReturningItems:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_isPhotoServiceAccessGranted;
- (id)_itemProviderForPayload:(id)arg1 extensionContext:(id)arg2;
- (id)_extensionContextForUUID:(id)arg1;
@property(copy, nonatomic) NSArray *icons; // @dynamic icons;
- (id)objectForInfoDictionaryKey:(id)arg1;
- (void)_didCreateExtensionContext:(id)arg1;
- (int)pidForRequestIdentifier:(id)arg1;
- (void)cancelExtensionRequestWithIdentifier:(id)arg1;
- (void)beginExtensionRequestWithInputItems:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)beginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_reallyBeginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)_bareExtensionServiceConnection;
- (_Bool)attemptOptOut:(id *)arg1;
- (_Bool)attemptOptIn:(id *)arg1;
@property(readonly, nonatomic) _Bool optedIn;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)init;
- (id)_initWithPKPlugin:(id)arg1;
- (void)_resetExtensionState;
- (void)_didShowNewExtensionIndicator;
- (void)_didShowExtensionManagementInterface;
@property(readonly, nonatomic, getter=_isMarkedNew) _Bool _markedNew;
@property(copy, nonatomic, getter=_extensionState, setter=_setExtensionState:) NSDictionary *_extensionState; // @dynamic _extensionState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface UIKit_PKSubsystem : NSObject <PKModularService>
{
    _Bool _initialized;
    _Bool _plugInKitProcess;
    NSDictionary *_infoDictionary;
}

+ (id)initForPlugInKit;
+ (id)sharedInstance;
@property(nonatomic, getter=isPlugInKitProcess) _Bool plugInKitProcess; // @synthesize plugInKitProcess=_plugInKitProcess;
@property(copy, nonatomic) NSDictionary *infoDictionary; // @synthesize infoDictionary=_infoDictionary;
- (void)endUsing:(id)arg1;
- (void)beginUsing:(id)arg1 withBundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _NSItemProviderExtensionVendorLoadOperator : NSObject <_NSItemProviderLoading>
{
    NSUUID *_identifier;
    NSUUID *_extensionContextIdentifier;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSUUID *extensionContextIdentifier; // @synthesize extensionContextIdentifier=_extensionContextIdentifier;
@property(copy, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
- (void)loadPreviewImageWithCompletionHandler:(CDUnknownBlockType)arg1 expectedValueClass:(Class)arg2 options:(id)arg3;
- (void)loadItemForTypeIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 expectedValueClass:(Class)arg3 options:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithExtensionContextIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _NSItemProviderCopyingLoadOperator : NSObject <_NSItemProviderLoading>
{
    NSItemProvider *_itemProvider;
    NSDictionary *_loadedItems;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSDictionary *loadedItems; // @synthesize loadedItems=_loadedItems;
@property(nonatomic) NSItemProvider *itemProvider; // @synthesize itemProvider=_itemProvider;
- (id)_sandboxedResourceForItemIfNeeded:(id)arg1 error:(id *)arg2;
- (id)_loadItemsForTypeIdentifiers:(id)arg1 itemProvider:(id)arg2;
- (void)loadPreviewImageWithCompletionHandler:(CDUnknownBlockType)arg1 expectedValueClass:(Class)arg2 options:(id)arg3;
- (void)loadItemForTypeIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2 expectedValueClass:(Class)arg3 options:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithItemProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _NSItemProviderSandboxedResource : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _accessingSecurityScopedResource;
    NSURL *_resourceURL;
    NSData *_sandboxExtensionToken;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic, getter=isAccessingSecurityScopedResource) _Bool accessingSecurityScopedResource; // @synthesize accessingSecurityScopedResource=_accessingSecurityScopedResource;
@property(copy, nonatomic) NSData *sandboxExtensionToken; // @synthesize sandboxExtensionToken=_sandboxExtensionToken;
@property(copy, nonatomic) NSURL *resourceURL; // @synthesize resourceURL=_resourceURL;
- (id)resolveURLAndReturnError:(id *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithContentsOfURL:(id)arg1 error:(id *)arg2;

@end

