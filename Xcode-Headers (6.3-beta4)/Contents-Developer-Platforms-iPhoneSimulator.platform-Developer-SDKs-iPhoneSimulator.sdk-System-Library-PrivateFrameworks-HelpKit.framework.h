//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct in_addr {
    unsigned int _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/HelpKit.framework/HelpKit
// UUID: 593664A2-8E22-30BC-8847-40A4A9103AF8
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 10.0.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol APDDataManagerDelegate <NSObject>
- (void)dataManagerRequestFailed:(APDDataManager *)arg1;
@end

@protocol APDGlossaryViewControllerDelegate <NSObject>
- (void)dismissViewController:(UIViewController *)arg1;
@end

@protocol APDNavigationTableViewControllerDelegate <NSObject>
- (void)navigationViewController:(APDNavigationTableViewController *)arg1 showNavigationTopic:(APDNavigationTopic *)arg2;
- (void)navigationTableViewControllerOnSameTopicSelected:(APDNavigationTableViewController *)arg1;
@end

@protocol APDSearchViewControllerDelegate <NSObject, APDNavigationTableViewControllerDelegate>
- (void)searchViewControllerSearchHidden:(APDSearchViewController *)arg1;
- (void)searchViewControllerSearchWillHide:(APDSearchViewController *)arg1;
- (void)searchViewControllerSearchBarShown:(APDSearchViewController *)arg1;
@end

@protocol APDTOCViewControllerDelegate <NSObject, APDNavigationTableViewControllerDelegate>
- (void)navigationViewController:(APDNavigationTableViewController *)arg1 showNavigationTopic:(APDNavigationTopic *)arg2;
@end

@protocol APDTopicViewControllerDelegate <NSObject>

@optional
- (void)topicViewControllerWebViewDidFinishLoading:(APDTopicViewController *)arg1;
- (void)topicViewControllerLoadTopicFailed:(APDTopicViewController *)arg1;
- (void)topicViewControllerLoadTopic:(APDTopicViewController *)arg1;
- (void)topicViewController:(APDTopicViewController *)arg1 loadMovieURL:(NSURL *)arg2;
- (void)topicViewControllerSelectedTopicIDChanged:(APDTopicViewController *)arg1;
- (NSNumber *)topicViewController:(APDTopicViewController *)arg1 lastScrollPositionForTopic:(APDNavigationTopic *)arg2;
- (_Bool)topicViewController:(APDTopicViewController *)arg1 loadNavigationItem:(APDNavigationItem *)arg2 request:(NSURLRequest *)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIToolbarDelegate <UIBarPositioningDelegate>
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@interface APDNavigationItemCell : UITableViewCell
{
    long long _indentLevel;
    APDURLSession *_imageUrlSession;
    _Bool _RTL;
    _Bool _showFulLSeparator;
    _Bool _shouldIndent;
    _Bool _closed;
    _Bool _indentWithSectionImage;
    APDNavigationItem *_navigationItem;
    APDDataManager *_dataManager;
    UILabel *_nameLabel;
    UIImageView *_arrowImageView;
    UIImageView *_accessoryImageView;
    UIImageView *_sectionImageView;
}

@property(retain, nonatomic) UIImageView *sectionImageView; // @synthesize sectionImageView=_sectionImageView;
@property(retain, nonatomic) UIImageView *accessoryImageView; // @synthesize accessoryImageView=_accessoryImageView;
@property(retain, nonatomic) UIImageView *arrowImageView; // @synthesize arrowImageView=_arrowImageView;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) APDDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) APDNavigationItem *navigationItem; // @synthesize navigationItem=_navigationItem;
@property(nonatomic) _Bool indentWithSectionImage; // @synthesize indentWithSectionImage=_indentWithSectionImage;
@property(nonatomic) _Bool closed; // @synthesize closed=_closed;
@property(nonatomic) _Bool shouldIndent; // @synthesize shouldIndent=_shouldIndent;
@property(nonatomic) _Bool showFulLSeparator; // @synthesize showFulLSeparator=_showFulLSeparator;
@property(nonatomic, getter=isRTL) _Bool RTL; // @synthesize RTL=_RTL;
- (void).cxx_destruct;
- (id)accessibilityLabel;
- (id)accessibilityHint;
- (void)layoutSubviews;
- (void)toggle;
- (void)updateFonts;
@property(retain, nonatomic) UIColor *cellHighlightedColor; // @dynamic cellHighlightedColor;
- (void)updateToggleImageAnimated:(_Bool)arg1;
- (void)setShouldIdent:(_Bool)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)prepareForReuse;
- (void)cancelSectionImageRequest;
- (void)dealloc;

@end

@interface APDSearchBar : UISearchBar
{
    double _searchBarCancelButtonOffset;
    double _searchBarTextFieldDefaultOrigin;
    _Bool _RTL;
    UIButton *_searchBarCancelButton;
    NSString *_searchBarCancelText;
    UIView *_searchGlassView;
    UIView *_clearButtonView;
    UITextField *_searchBarTextField;
}

@property(nonatomic) __weak UITextField *searchBarTextField; // @synthesize searchBarTextField=_searchBarTextField;
@property(nonatomic) __weak UIView *clearButtonView; // @synthesize clearButtonView=_clearButtonView;
@property(nonatomic) __weak UIView *searchGlassView; // @synthesize searchGlassView=_searchGlassView;
@property(retain, nonatomic) NSString *searchBarCancelText; // @synthesize searchBarCancelText=_searchBarCancelText;
@property(nonatomic) __weak UIButton *searchBarCancelButton; // @synthesize searchBarCancelButton=_searchBarCancelButton;
@property(nonatomic) _Bool RTL; // @synthesize RTL=_RTL;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)updateSearchBarCancelButton;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

@interface APDLearnMoreViewController : UIViewController <UIGestureRecognizerDelegate, APDDataManagerDelegate, UIAlertViewDelegate, APDTOCViewControllerDelegate, APDTopicViewControllerDelegate, APDSearchViewControllerDelegate, APDGlossaryViewControllerDelegate, UIToolbarDelegate>
{
    _Bool _reloadTopicPending;
    _Bool _viewDidAppeared;
    _Bool _useDefaultToolbarColor;
    _Bool _displayAsPopover;
    _Bool _dismissTopicViewWhenLoded;
    _Bool _panning;
    _Bool _panningPending;
    _Bool _topicWebViewAnimating;
    struct CGSize _popoverSize;
    double _topicContainerOriginX;
    double _topicContainerStartingY;
    UITapGestureRecognizer *_topicWebViewTapGestureRecognizer;
    UINavigationController *_glossaryNavigationController;
    APDTopicViewController *_topicViewController;
    APDDataManager *_dataManager;
    APDGlossaryViewController *_glossaryViewController;
    _Bool _showDoneButton;
    _Bool _RTL;
    int _mode;
    UIView *_topicView;
    id <APDLearnMoreViewControllerDelegate> _delegate;
    UIColor *_toolbarTintColor;
    UIColor *_searchBarTintColor;
    NSString *_selectedTopicName;
    UIToolbar *_toolbar;
    UIView *_toolbarBottomStrokeView;
    UIImageView *_topicViewLeftShadow;
    UIBarButtonItem *_tocToolbarButton;
    UIBarButtonItem *_searchToolbarButton;
    UIBarButtonItem *_backToolbarButton;
    UIBarButtonItem *_forwardToolbarButton;
    UIBarButtonItem *_doneToolbarButton;
    NSArray *_viewInterfaceOrientations;
    APDKVOManager *_KVOManager;
    APDTOCViewController *_TOCViewController;
    APDSearchViewController *_searchViewController;
}

+ (id)version;
+ (id)learnMoreViewControllerWithTopicTitle:(id)arg1;
+ (id)learnMoreViewControllerWithAPDID:(id)arg1;
+ (id)learnMoreViewController;
@property(retain, nonatomic) APDSearchViewController *searchViewController; // @synthesize searchViewController=_searchViewController;
@property(retain, nonatomic) APDTOCViewController *TOCViewController; // @synthesize TOCViewController=_TOCViewController;
@property(retain, nonatomic) APDKVOManager *KVOManager; // @synthesize KVOManager=_KVOManager;
@property(copy, nonatomic) NSArray *viewInterfaceOrientations; // @synthesize viewInterfaceOrientations=_viewInterfaceOrientations;
@property(nonatomic) _Bool RTL; // @synthesize RTL=_RTL;
@property(nonatomic) __weak UIBarButtonItem *doneToolbarButton; // @synthesize doneToolbarButton=_doneToolbarButton;
@property(nonatomic) __weak UIBarButtonItem *forwardToolbarButton; // @synthesize forwardToolbarButton=_forwardToolbarButton;
@property(nonatomic) __weak UIBarButtonItem *backToolbarButton; // @synthesize backToolbarButton=_backToolbarButton;
@property(nonatomic) __weak UIBarButtonItem *searchToolbarButton; // @synthesize searchToolbarButton=_searchToolbarButton;
@property(nonatomic) __weak UIBarButtonItem *tocToolbarButton; // @synthesize tocToolbarButton=_tocToolbarButton;
@property(nonatomic) __weak UIImageView *topicViewLeftShadow; // @synthesize topicViewLeftShadow=_topicViewLeftShadow;
@property(nonatomic) __weak UIView *toolbarBottomStrokeView; // @synthesize toolbarBottomStrokeView=_toolbarBottomStrokeView;
@property(nonatomic) __weak UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(copy, nonatomic) NSString *selectedTopicName; // @synthesize selectedTopicName=_selectedTopicName;
@property(copy, nonatomic) UIColor *searchBarTintColor; // @synthesize searchBarTintColor=_searchBarTintColor;
@property(copy, nonatomic) UIColor *toolbarTintColor; // @synthesize toolbarTintColor=_toolbarTintColor;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) _Bool showDoneButton; // @synthesize showDoneButton=_showDoneButton;
@property(nonatomic) __weak id <APDLearnMoreViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIView *topicView; // @synthesize topicView=_topicView;
- (void).cxx_destruct;
- (void)dataManagerRequestFailed:(id)arg1;
- (void)navigationTableViewControllerOnSameTopicSelected:(id)arg1;
- (void)navigationViewController:(id)arg1 showNavigationTopic:(id)arg2;
- (void)searchViewControllerSearchHidden:(id)arg1;
- (void)searchViewControllerSearchWillHide:(id)arg1;
- (void)searchViewControllerSearchBarShown:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)onDoneTapped:(id)arg1;
- (void)onSearchButtonTapped:(id)arg1;
- (void)onTocButtonTapped:(id)arg1;
- (void)onForwardButtonTapped:(id)arg1;
- (void)onBackButtonTapped:(id)arg1;
- (id)topicViewController:(id)arg1 lastScrollPositionForTopic:(id)arg2;
- (_Bool)topicViewController:(id)arg1 loadNavigationItem:(id)arg2 request:(id)arg3;
- (void)showGlossaryTopic:(id)arg1;
- (void)dismissViewController:(id)arg1;
- (void)presentViewController:(id)arg1;
- (void)topicViewControllerWebViewDidFinishLoading:(id)arg1;
- (void)topicViewControllerLoadTopicFailed:(id)arg1;
- (void)topicViewControllerLoadTopic:(id)arg1;
- (void)topicViewController:(id)arg1 loadMovieURL:(id)arg2;
- (void)topicViewControllerSelectedTopicIDChanged:(id)arg1;
- (_Bool)disablesAutomaticKeyboardDismissal;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dismissTopicWebViewWithDuration:(double)arg1 animated:(_Bool)arg2;
- (void)dismissTopicWebView;
- (void)showWebViewWithTopic:(id)arg1 animated:(_Bool)arg2;
- (void)showTopicWebViewAnimated:(_Bool)arg1 duration:(double)arg2;
- (void)showTopicWebView;
- (void)panned:(id)arg1;
- (void)updateToolbarButtons;
- (_Bool)topicWebViewCanGoForward;
- (_Bool)topicWebViewCanGoBack;
- (void)onSectionListChanged:(id)arg1;
- (_Bool)isPortrait;
- (void)onLocalizationsListChanged:(id)arg1;
- (void)onRemoteHelpURLChanged:(id)arg1;
- (void)updateLocalizationModel;
- (void)updateLocalizedStrings;
- (void)updateTOCToolbarAccessibilityHint;
- (void)updateViewLayout;
- (void)updateScrollToTop;
- (void)onLocaleChanged:(id)arg1;
- (void)setSupportPortrait:(_Bool)arg1 upsideDown:(_Bool)arg2 landscapeLeft:(_Bool)arg3 landscapeRight:(_Bool)arg4;
- (void)setBaseURL:(id)arg1 appName:(id)arg2 deviceType:(id)arg3 helpVersion:(id)arg4;
- (long long)positionForBar:(id)arg1;
@property(copy, nonatomic) UIColor *cellHighlightedColor; // @dynamic cellHighlightedColor;
@property(copy, nonatomic) UIColor *searchBarBarTintColor; // @dynamic searchBarBarTintColor;
@property(copy, nonatomic) UIColor *toolbarBarTintColor; // @dynamic toolbarBarTintColor;
@property(copy, nonatomic) NSString *configServerTargetedReleaseVersion; // @dynamic configServerTargetedReleaseVersion;
@property(copy, nonatomic) NSString *configServerAppIdentifier; // @dynamic configServerAppIdentifier;
@property(copy, nonatomic) NSURL *configServerURL; // @dynamic configServerURL;
@property(copy, nonatomic) NSString *selectedISOCode; // @dynamic selectedISOCode;
@property(copy, nonatomic) NSString *selectedTopicID; // @dynamic selectedTopicID;
@property(copy, nonatomic) NSString *deviceType; // @dynamic deviceType;
@property(copy, nonatomic) NSString *helpVersion; // @dynamic helpVersion;
@property(copy, nonatomic) NSString *appName; // @dynamic appName;
@property(copy, nonatomic) NSURL *localResourceBundleURL; // @dynamic localResourceBundleURL;
@property(copy, nonatomic) NSURL *remoteHelpURL; // @dynamic remoteHelpURL;
@property(copy, nonatomic) NSURL *baseURL; // @dynamic baseURL;
@property(nonatomic) _Bool enableContextMenu;
@property(nonatomic) _Bool translucentBar; // @dynamic translucentBar;
@property(nonatomic) _Bool showGlossaryLinks;
@property(nonatomic) _Bool useRemoteAssetsForLocalHelp; // @dynamic useRemoteAssetsForLocalHelp;
- (struct CGSize)contentSizeForViewInPopover;
- (void)setContentSizeForViewInPopover:(struct CGSize)arg1;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (struct CGSize)preferredContentSize;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;
- (void)viewDidUnload;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDTopicViewController : UIViewController <UIWebViewDelegate>
{
    _Bool _webViewLoaded;
    _Bool _webViewStartedLoading;
    _Bool _hasLoaded;
    _Bool _loading;
    long long _pendingWebViewDisplayIndex;
    NSMutableArray *_topicHistory;
    NSMutableArray *_topicHistoryScrollMap;
    APDAsyncURLConnection *_topicWebViewURLConnection;
    _Bool _showWithManualInset;
    _Bool _displayAsPopover;
    _Bool _updateDataManagerWithCurrentTopic;
    id <APDTopicViewControllerDelegate> _delegate;
    UIWebView *_topicWebView;
    UIActivityIndicatorView *_activityIndicatorView;
    UILabel *_errorTitleLabel;
    UILabel *_errorMessageLabel;
    UIImageView *_errorImageView;
    UIView *_errorView;
    long long _topicWebViewDisplayIndex;
    APDDataManager *_dataManager;
    APDKVOManager *_KVOManager;
}

@property(retain, nonatomic) APDKVOManager *KVOManager; // @synthesize KVOManager=_KVOManager;
@property(retain, nonatomic) APDDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(nonatomic) long long topicWebViewDisplayIndex; // @synthesize topicWebViewDisplayIndex=_topicWebViewDisplayIndex;
@property(nonatomic) _Bool updateDataManagerWithCurrentTopic; // @synthesize updateDataManagerWithCurrentTopic=_updateDataManagerWithCurrentTopic;
@property(nonatomic) _Bool displayAsPopover; // @synthesize displayAsPopover=_displayAsPopover;
@property(nonatomic) _Bool showWithManualInset; // @synthesize showWithManualInset=_showWithManualInset;
@property(retain, nonatomic) UIView *errorView; // @synthesize errorView=_errorView;
@property(nonatomic) __weak UIImageView *errorImageView; // @synthesize errorImageView=_errorImageView;
@property(nonatomic) __weak UILabel *errorMessageLabel; // @synthesize errorMessageLabel=_errorMessageLabel;
@property(nonatomic) __weak UILabel *errorTitleLabel; // @synthesize errorTitleLabel=_errorTitleLabel;
@property(nonatomic) __weak UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(nonatomic) __weak UIWebView *topicWebView; // @synthesize topicWebView=_topicWebView;
@property(nonatomic) __weak id <APDTopicViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)showWebViewIfNeeded;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)highlightSearchTerms:(_Bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)stopLoading;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (id)onGoForward;
- (id)onGoBack;
- (void)onConnectionChanged:(id)arg1;
- (void)updateErrorMessageViewLayout;
- (void)showErrorView:(_Bool)arg1 animated:(_Bool)arg2;
- (void)loadTopic:(id)arg1;
- (void)loadTopic:(id)arg1 data:(id)arg2 useLocalResource:(_Bool)arg3;
- (void)updateWebViewMaps;
- (void)recordScrollPositionForCurrentTopic;
- (void)updateTopicWebViewScrollPosition;
- (void)initializeTopicHistoryScrollMapWithScrollPosition:(id)arg1;
- (void)clearHistory;
- (void)hideGradientBackground:(id)arg1;
- (id)navigationItemFromURLString:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDLocalizationModel : APDGenericModel
{
    NSArray *_localizations;
}

@property(copy, nonatomic) NSArray *localizations; // @synthesize localizations=_localizations;
- (void).cxx_destruct;
- (id)localeList;
- (id)localeForLocaleString:(id)arg1;
- (void)processRequestData:(id)arg1;
- (_Bool)processLocalDataFromLocalResource;
- (void)processLocalizationJSONArray:(id)arg1;
- (void)startRequest;

@end

@interface APDSearchModel : APDGenericModel
{
    NSDictionary *_searchIndex;
    NSArray *_currentSearchResults;
    NSString *_copyrightTopicId;
    NSString *_searchText;
    NSArray *_searchTerms;
}

@property(retain, nonatomic) NSArray *searchTerms; // @synthesize searchTerms=_searchTerms;
@property(retain, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(retain, nonatomic) NSString *copyrightTopicId; // @synthesize copyrightTopicId=_copyrightTopicId;
@property(retain, nonatomic) NSArray *currentSearchResults; // @synthesize currentSearchResults=_currentSearchResults;
@property(retain, nonatomic) NSDictionary *searchIndex; // @synthesize searchIndex=_searchIndex;
- (void).cxx_destruct;
- (void)updateResultsForSearch:(id)arg1 forLocale:(struct __CFLocale *)arg2 withRoots:(_Bool)arg3;
- (id)indexTermsForSearchTermRoot:(id)arg1;
- (void)processRequestData:(id)arg1;
- (_Bool)processLocalDataFromLocalResource;
- (void)processSearchJSONData:(id)arg1;
- (void)clearData;

@end

@interface APDNavigationTableViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    NSMutableArray *_tableViewDataArray;
    _Bool _RTL;
    id <APDNavigationTableViewControllerDelegate> _delegate;
    UITableView *_tableView;
    APDDataManager *_dataManager;
    UIView *_tableFooterView;
}

@property(retain, nonatomic) UIView *tableFooterView; // @synthesize tableFooterView=_tableFooterView;
@property(retain, nonatomic) APDDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(nonatomic) _Bool RTL; // @synthesize RTL=_RTL;
@property(nonatomic) __weak UITableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak id <APDNavigationTableViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 willDeselectRowAtIndexPath:(id)arg2;
- (_Bool)updateCellSelectionWithScollPosition:(long long)arg1 topic:(id)arg2 animated:(_Bool)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)updateLocalizedStrings;
- (void)updateFooterView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDAsyncURLConnection : NSURLConnection <UIAlertViewDelegate>
{
    NSMutableData *mData;
    CDUnknownBlockType mCompleteBlock;
    CDUnknownBlockType mErrorBlock;
    NSURLResponse *_URLResponse;
    NSURLAuthenticationChallenge *_requestChanllenge;
}

+ (id)requestURL:(id)arg1 postData:(id)arg2 cachePolicy:(unsigned long long)arg3 completeBlock:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;
+ (id)requestURL:(id)arg1 postData:(id)arg2 completeBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
+ (id)requestURL:(id)arg1 cachePolicy:(unsigned long long)arg2 completeBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
+ (id)requestURL:(id)arg1 completeBlock:(CDUnknownBlockType)arg2 errorBlock:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)initWithRequestURL:(id)arg1 postData:(id)arg2 cachePolicy:(unsigned long long)arg3 completeBlock:(CDUnknownBlockType)arg4 errorBlock:(CDUnknownBlockType)arg5;
- (id)initWithRequestURL:(id)arg1 postData:(id)arg2 completeBlock:(CDUnknownBlockType)arg3 errorBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDNavigationModel : APDGenericModel
{
    NSMutableDictionary *_itemMap;
    _Bool _showFeedbackLinks;
    _Bool _hasSectionIcon;
    NSString *_version;
    NSString *_sourceSchema;
    NSString *_framework;
    NSString *_copyrightText;
    NSString *_copyrightTopicId;
    NSString *_title;
    NSString *_landingTopicID;
    NSArray *_sections;
}

@property(copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(copy, nonatomic) NSString *landingTopicID; // @synthesize landingTopicID=_landingTopicID;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *copyrightTopicId; // @synthesize copyrightTopicId=_copyrightTopicId;
@property(copy, nonatomic) NSString *copyrightText; // @synthesize copyrightText=_copyrightText;
@property(copy, nonatomic) NSString *framework; // @synthesize framework=_framework;
@property(copy, nonatomic) NSString *sourceSchema; // @synthesize sourceSchema=_sourceSchema;
@property(copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(nonatomic) _Bool hasSectionIcon; // @synthesize hasSectionIcon=_hasSectionIcon;
@property(nonatomic) _Bool showFeedbackLinks; // @synthesize showFeedbackLinks=_showFeedbackLinks;
- (void).cxx_destruct;
- (id)sectionWithIdentifier:(id)arg1;
- (id)topicWithTopicName:(id)arg1;
- (id)topicWithIdentifier:(id)arg1;
- (void)processRequestData:(id)arg1;
- (_Bool)processLocalDataFromLocalResource;
- (void)startRequest;
- (void)processNavigationJSONData:(id)arg1;
- (id)sectionsForChildrenIdentifiers:(id)arg1 level:(long long)arg2 parent:(id)arg3 sectionsInfo:(id)arg4 topicsInfo:(id)arg5;
@property(readonly, copy, nonatomic) APDNavigationTopic *copyrightTopic; // @dynamic copyrightTopic;

@end

@interface APDGlossaryViewController : UIViewController <UIToolbarDelegate>
{
    APDTopicViewController *_topicViewController;
    _Bool _displayAsModal;
    id <APDGlossaryViewControllerDelegate> _delegate;
    UIView *_bottomSeparator;
    UIButton *_doneButton;
    UIView *_webViewContainer;
    NSArray *_viewInterfaceOrientations;
    APDDataManager *_dataManager;
    APDNavigationTopic *_navigationTopic;
}

@property(retain, nonatomic) APDNavigationTopic *navigationTopic; // @synthesize navigationTopic=_navigationTopic;
@property(retain, nonatomic) APDDataManager *dataManager; // @synthesize dataManager=_dataManager;
@property(retain, nonatomic) NSArray *viewInterfaceOrientations; // @synthesize viewInterfaceOrientations=_viewInterfaceOrientations;
@property(nonatomic) __weak UIView *webViewContainer; // @synthesize webViewContainer=_webViewContainer;
@property(nonatomic) __weak UIButton *doneButton; // @synthesize doneButton=_doneButton;
@property(nonatomic) __weak UIView *bottomSeparator; // @synthesize bottomSeparator=_bottomSeparator;
@property(nonatomic) __weak id <APDGlossaryViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool displayAsModal; // @synthesize displayAsModal=_displayAsModal;
- (void).cxx_destruct;
- (void)onDone:(id)arg1;
- (long long)positionForBar:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDSearchResultItem : APDGenericData <NSCopying>
{
    long long _weight;
    long long _matchCount;
    NSString *_identifier;
}

@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) long long matchCount; // @synthesize matchCount=_matchCount;
@property(nonatomic) long long weight; // @synthesize weight=_weight;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

@interface APDLocale : APDGenericData
{
    _Bool _RTL;
    _Bool _cache;
    NSString *_cacheHTML;
    NSString *_folder;
    NSString *_name;
    NSString *_isoName;
    NSArray *_isoCodes;
}

@property(copy, nonatomic) NSArray *isoCodes; // @synthesize isoCodes=_isoCodes;
@property(copy, nonatomic) NSString *isoName; // @synthesize isoName=_isoName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *folder; // @synthesize folder=_folder;
@property(copy, nonatomic) NSString *cacheHTML; // @synthesize cacheHTML=_cacheHTML;
@property(nonatomic) _Bool cache; // @synthesize cache=_cache;
@property(nonatomic, getter=isRTL) _Bool RTL; // @synthesize RTL=_RTL;
- (void).cxx_destruct;
- (id)description;
- (id)simplifiedChineseFontFamilyName;
@property(readonly, nonatomic) _Bool isSimplifiedChinese; // @dynamic isSimplifiedChinese;
- (id)initWithDictionary:(id)arg1;

@end

@interface APDDataCache : NSObject <NSCopying, NSCoding>
{
    unsigned long long _cacheType;
    long long _maxAge;
    unsigned long long _fileSize;
    NSString *_identifier;
    NSString *_lastModified;
    NSString *_locale;
    NSDate *_updatedDate;
}

@property(retain, nonatomic) NSDate *updatedDate; // @synthesize updatedDate=_updatedDate;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) NSString *lastModified; // @synthesize lastModified=_lastModified;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(nonatomic) long long maxAge; // @synthesize maxAge=_maxAge;
@property(nonatomic) unsigned long long cacheType; // @synthesize cacheType=_cacheType;
- (void).cxx_destruct;
- (id)debugDescription;
@property(readonly, nonatomic) _Bool expired; // @dynamic expired;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface APDImageCacheController : APDDataCacheController
{
}

+ (id)sharedInstance;
- (id)newDataCache;

@end

@interface APDLanguageCell : UITableViewCell
{
    _Bool _RTL;
}

@property(nonatomic) _Bool RTL; // @synthesize RTL=_RTL;
- (void)layoutSubviews;

@end

@interface APDFeedbackCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

@interface APDReachability : NSObject
{
    _Bool localWiFiRef;
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (int)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (int)networkStatusForFlags:(unsigned int)arg1;
- (int)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;
- (void)stopNotifier;
- (_Bool)startNotifier;

@end

@interface APDURLSession : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate>
{
    NSMutableData *_data;
    long long _dataType;
    NSURLRequest *_request;
    NSString *_lastModified;
    id _completionHandler;
    NSURLSessionDataTask *_dataTask;
}

+ (id)urlSessionWithRequest:(id)arg1 dataType:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)defaultOperationQueue;
+ (id)defaultURLSessionConfiguration;
@property(retain, nonatomic) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(retain, nonatomic) id completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSString *lastModified; // @synthesize lastModified=_lastModified;
@property(retain, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)notifyWithFormattedData:(id)arg1 response:(id)arg2 error:(id)arg3 cacheData:(_Bool)arg4;
- (void)cancel;
- (void)resume;
@property(readonly, nonatomic) NSURLSessionTask *sessionTask; // @dynamic sessionTask;
- (id)initWithRequest:(id)arg1 dataType:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDKVOManager : NSObject
{
    id _observer;
    struct __CFDictionary *_KVODictionary;
}

@property(nonatomic) struct __CFDictionary *KVODictionary; // @synthesize KVODictionary=_KVODictionary;
@property(nonatomic) id observer; // @synthesize observer=_observer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)mainThreadObserveValueForKeyPath:(id)arg1;
- (void)removeAllKVOObjects;
- (void)removeKVOForObject:(id)arg1;
- (void)removeKVOObject:(id)arg1 forKeyPath:(id)arg2;
- (void)addKVOObject:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithObserver:(id)arg1;

@end

@interface APDNavigationItem : APDGenericData <NSCopying>
{
    _Bool _hasRead;
    APDNavigationItem *_parent;
    long long _level;
    NSString *_identifier;
    NSString *_name;
    NSString *_icon;
}

@property(copy, nonatomic) NSString *icon; // @synthesize icon=_icon;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) long long level; // @synthesize level=_level;
@property(nonatomic) _Bool hasRead; // @synthesize hasRead=_hasRead;
@property(nonatomic) __weak APDNavigationItem *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface APDNavigationSection : APDNavigationItem
{
    NSArray *_children;
}

@property(copy, nonatomic) NSArray *children; // @synthesize children=_children;
- (void).cxx_destruct;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

@interface APDNavigationTopic : APDNavigationItem
{
    NSString *_href;
    NSArray *_categories;
}

@property(retain, nonatomic) NSArray *categories; // @synthesize categories=_categories;
@property(copy, nonatomic) NSString *href; // @synthesize href=_href;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic, getter=isCopyright) _Bool copyright; // @dynamic copyright;
@property(readonly, nonatomic, getter=isGlossary) _Bool glossary; // @dynamic glossary;
- (id)initWithDictionary:(id)arg1;

@end

@interface APDCardinalEncryptionUtils : NSObject
{
}

+ (id)doCipher:(id)arg1 key:(id)arg2 CCOperation:(unsigned int)arg3;
+ (id)md5ForString:(id)arg1;
+ (id)decryptData:(id)arg1 key:(id)arg2;
+ (id)encryptData:(id)arg1 key:(id)arg2;
+ (id)decryptData:(id)arg1;
+ (id)decryptDataAsData:(id)arg1;
+ (id)encryptString:(id)arg1;
+ (id)crypotgraphyKey;
+ (id)md5HashForAppIdentifer:(id)arg1 appVersion:(id)arg2;

@end

@interface APDGenericModel : NSObject
{
    APDAsyncURLConnection *_URLConnection;
    _Bool _loading;
    _Bool _hasLoaded;
    APDDataManager *_dataManager;
    NSURL *_requestURL;
    NSURL *_localResourceURL;
    NSOperationQueue *_localResourceOperationQueue;
    APDKVOManager *_KVOManager;
}

@property(retain, nonatomic) APDKVOManager *KVOManager; // @synthesize KVOManager=_KVOManager;
@property(retain, nonatomic) NSOperationQueue *localResourceOperationQueue; // @synthesize localResourceOperationQueue=_localResourceOperationQueue;
@property(copy, nonatomic) NSURL *localResourceURL; // @synthesize localResourceURL=_localResourceURL;
@property(copy, nonatomic) NSURL *requestURL; // @synthesize requestURL=_requestURL;
@property(nonatomic) _Bool hasLoaded; // @synthesize hasLoaded=_hasLoaded;
@property(nonatomic) _Bool loading; // @synthesize loading=_loading;
@property(nonatomic) __weak APDDataManager *dataManager; // @synthesize dataManager=_dataManager;
- (void).cxx_destruct;
- (void)onConnectionChanged:(id)arg1;
- (void)processRequestData:(id)arg1;
- (_Bool)processLocalDataFromLocalResource;
- (void)startRequest;
- (void)clearData;
- (id)init;
- (void)commonInit;
- (void)dealloc;

@end

@interface APDSearchViewController : APDNavigationTableViewController <UISearchBarDelegate>
{
    _Bool _showSearchBarPending;
    _Bool _viewDidAppeared;
    _Bool _shouldHighlighViewingTopic;
    APDSearchModel *_searchModel;
    _Bool _searching;
    APDSearchBar *_searchBar;
    UILabel *_footerViewLabel;
    UIView *_footerView;
    UIView *_toolbarTopOverlapView;
    UIView *_topbarBottomStrokeView;
    NSTimer *_axSearchTimer;
}

@property(retain, nonatomic) NSTimer *axSearchTimer; // @synthesize axSearchTimer=_axSearchTimer;
@property(nonatomic) __weak UIView *topbarBottomStrokeView; // @synthesize topbarBottomStrokeView=_topbarBottomStrokeView;
@property(nonatomic) __weak UIView *toolbarTopOverlapView; // @synthesize toolbarTopOverlapView=_toolbarTopOverlapView;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(nonatomic, getter=isSearching) _Bool searching; // @synthesize searching=_searching;
@property(nonatomic) __weak UILabel *footerViewLabel; // @synthesize footerViewLabel=_footerViewLabel;
@property(nonatomic) __weak APDSearchBar *searchBar; // @synthesize searchBar=_searchBar;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)positionForBar:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)dismissKeyboard;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (void)announceResults;
- (void)hide;
- (void)show;
- (void)updateTableViewData;
- (void)updateFooterLabel;
- (void)endSearch;
- (void)enableSearchBarCancelButton:(id)arg1;
- (void)updateLocalizedStrings;
- (void)updateViewLayout;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <APDSearchViewControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDURLSessionRequest : NSObject
{
    NSMutableArray *_completionHandlers;
    NSURLSessionTask *_sessionTask;
}

+ (id)urlSessionRequestWithSessionTask:(id)arg1 completionHandler:(id)arg2;
@property(retain, nonatomic) NSURLSessionTask *sessionTask; // @synthesize sessionTask=_sessionTask;
@property(retain, nonatomic) NSMutableArray *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
- (void).cxx_destruct;
- (id)initWithSessionTask:(id)arg1 completionHandler:(id)arg2;
- (void)dealloc;

@end

@interface APDDataCacheController : NSObject
{
    unsigned long long _maxDataCacheSize;
    unsigned long long _cacheSize;
    NSString *_identifier;
    NSString *_cacheDirectory;
    long long _URLSessionDataType;
    NSMutableDictionary *_dataCacheMap;
    NSString *_locale;
    NSMutableArray *_dataCacheArray;
}

+ (void)removeInstance;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *dataCacheArray; // @synthesize dataCacheArray=_dataCacheArray;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
- (void).cxx_destruct;
- (id)dataCacheForPath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)updateDataCacheForURL:(id)arg1 data:(id)arg2 lastModified:(id)arg3;
- (id)newDataCache;
- (void)removeDataCache:(id)arg1 updateCache:(_Bool)arg2;
- (void)removeDataCache:(id)arg1;
- (void)removeAllDataCache;
- (void)moveCacheToEnd:(id)arg1;
- (void)addDataCache:(id)arg1;
- (void)updateCacheDelay;
- (void)updateCache;
- (id)cacheFileURLForDataCache:(id)arg1;
- (_Bool)cacheValidForPath:(id)arg1;
- (id)dataCacheForPath:(id)arg1;
- (id)initWithIdentifier:(id)arg1 directoryName:(id)arg2 maxCacheSize:(unsigned long long)arg3 URLSessionDataType:(long long)arg4;
- (void)dealloc;

@end

@interface APDDataManager : NSObject <UIAlertViewDelegate>
{
    _Bool _hasRequestedConfig;
    _Bool _showingAlert;
    _Bool _loadingConfigConfig;
    NSString *_localizedStringTableName;
    APDKVOManager *_KVOManager;
    APDLocale *_tempPreviousLocale;
    APDAsyncURLConnection *_configServerConnection;
    _Bool _darkMode;
    _Bool _dismissed;
    _Bool _shouldLog;
    _Bool _searchTermsShouldBeHighlighted;
    _Bool _showGlossaryLinks;
    _Bool _translucentBar;
    _Bool _useRemoteAssetsForLocalHelp;
    _Bool _enableContextMenu;
    int _displayType;
    int _configServerDeviceType;
    double _topContentInset;
    id <APDDataManagerDelegate> _delegate;
    UIColor *_toolbarBarTintColor;
    UIColor *_searchBarBarTintColor;
    UIColor *_cellHighlightedColor;
    NSURL *_baseURL;
    NSURL *_remoteHelpURL;
    NSURL *_localResourceBundleURL;
    NSURL *_configServerURL;
    NSString *_configServerAppIdentifier;
    NSString *_configServerTargetedReleaseVersion;
    NSString *_deviceType;
    NSString *_appName;
    NSString *_helpVersion;
    NSString *_selectedTopicName;
    NSString *_selectedTopicID;
    NSString *_selectedISOCode;
    APDNavigationTopic *_currentTopic;
    APDConnectionManager *_connectionManager;
    APDLocale *_locale;
    APDLocalizationModel *_localizationModel;
    APDNavigationModel *_navigationModel;
    APDSearchModel *_searchModel;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) APDSearchModel *searchModel; // @synthesize searchModel=_searchModel;
@property(retain, nonatomic) APDNavigationModel *navigationModel; // @synthesize navigationModel=_navigationModel;
@property(retain, nonatomic) APDLocalizationModel *localizationModel; // @synthesize localizationModel=_localizationModel;
@property(retain, nonatomic) APDLocale *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) APDConnectionManager *connectionManager; // @synthesize connectionManager=_connectionManager;
@property(retain, nonatomic) APDNavigationTopic *currentTopic; // @synthesize currentTopic=_currentTopic;
@property(retain, nonatomic) NSString *selectedISOCode; // @synthesize selectedISOCode=_selectedISOCode;
@property(retain, nonatomic) NSString *selectedTopicID; // @synthesize selectedTopicID=_selectedTopicID;
@property(retain, nonatomic) NSString *selectedTopicName; // @synthesize selectedTopicName=_selectedTopicName;
@property(retain, nonatomic) NSString *helpVersion; // @synthesize helpVersion=_helpVersion;
@property(retain, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(retain, nonatomic) NSString *deviceType; // @synthesize deviceType=_deviceType;
@property(retain, nonatomic) NSString *configServerTargetedReleaseVersion; // @synthesize configServerTargetedReleaseVersion=_configServerTargetedReleaseVersion;
@property(retain, nonatomic) NSString *configServerAppIdentifier; // @synthesize configServerAppIdentifier=_configServerAppIdentifier;
@property(retain, nonatomic) NSURL *configServerURL; // @synthesize configServerURL=_configServerURL;
@property(retain, nonatomic) NSURL *localResourceBundleURL; // @synthesize localResourceBundleURL=_localResourceBundleURL;
@property(retain, nonatomic) NSURL *remoteHelpURL; // @synthesize remoteHelpURL=_remoteHelpURL;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(retain, nonatomic) UIColor *cellHighlightedColor; // @synthesize cellHighlightedColor=_cellHighlightedColor;
@property(retain, nonatomic) UIColor *searchBarBarTintColor; // @synthesize searchBarBarTintColor=_searchBarBarTintColor;
@property(retain, nonatomic) UIColor *toolbarBarTintColor; // @synthesize toolbarBarTintColor=_toolbarBarTintColor;
@property(nonatomic) __weak id <APDDataManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int configServerDeviceType; // @synthesize configServerDeviceType=_configServerDeviceType;
@property(nonatomic) int displayType; // @synthesize displayType=_displayType;
@property(nonatomic) double topContentInset; // @synthesize topContentInset=_topContentInset;
@property(nonatomic) _Bool enableContextMenu; // @synthesize enableContextMenu=_enableContextMenu;
@property(nonatomic) _Bool useRemoteAssetsForLocalHelp; // @synthesize useRemoteAssetsForLocalHelp=_useRemoteAssetsForLocalHelp;
@property(nonatomic) _Bool translucentBar; // @synthesize translucentBar=_translucentBar;
@property(nonatomic) _Bool showGlossaryLinks; // @synthesize showGlossaryLinks=_showGlossaryLinks;
@property(nonatomic) _Bool searchTermsShouldBeHighlighted; // @synthesize searchTermsShouldBeHighlighted=_searchTermsShouldBeHighlighted;
@property(nonatomic) _Bool shouldLog; // @synthesize shouldLog=_shouldLog;
@property(nonatomic) _Bool dismissed; // @synthesize dismissed=_dismissed;
@property(nonatomic) _Bool darkMode; // @synthesize darkMode=_darkMode;
- (void).cxx_destruct;
- (id)normalizedHTMLStringFromHTMLString:(id)arg1 topic:(id)arg2 useLocalResource:(_Bool)arg3;
- (id)searchJSONURLWithLocalResource:(_Bool)arg1;
- (id)navigationJSONURLWithLocalResource:(_Bool)arg1;
- (id)localizedURLForRemoteFile:(id)arg1 useLocalResource:(_Bool)arg2;
- (void)getHelpURLFromConfigurationServerDisplayError:(_Bool)arg1;
@property(retain, nonatomic) UIColor *defaultDarkModeHighlightColor; // @dynamic defaultDarkModeHighlightColor;
@property(retain, nonatomic) UIColor *defaultDarkModeSeparatorColor; // @dynamic defaultDarkModeSeparatorColor;
@property(retain, nonatomic) UIColor *defaultDarkModeTextColor; // @dynamic defaultDarkModeTextColor;
@property(retain, nonatomic) UIColor *defaultDarkModeBackgroundColor; // @dynamic defaultDarkModeBackgroundColor;
@property(retain, nonatomic) UIColor *defaultDarkModeViewBackgroundColor; // @dynamic defaultDarkModeViewBackgroundColor;
@property(retain, nonatomic) UIColor *defaultDarkModeViewNavigationSeparatorColor; // @dynamic defaultDarkModeViewNavigationSeparatorColor;
@property(readonly, nonatomic) NSURL *fullLocalizedLocalBaseURL; // @dynamic fullLocalizedLocalBaseURL;
@property(readonly, nonatomic) NSURL *fullLocalizedBaseURL; // @dynamic fullLocalizedBaseURL;
@property(readonly, nonatomic) _Bool connected; // @dynamic connected;
- (id)fullBaseURLString;
- (void)syncSelectedTopicId;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertURLRequestProblem;
@property(nonatomic, getter=isOnline) _Bool online; // @dynamic online;
- (void)onConnectionChanged:(id)arg1;
- (void)onModelLoadFailed:(id)arg1 error:(id)arg2;
- (void)onModelLoadSucceeded:(id)arg1;
- (void)updateLocalizedStringTableNameForiSOCodes:(id)arg1;
@property(nonatomic) double statusBarHeight; // @dynamic statusBarHeight;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSURL *fullBaseURL; // @dynamic fullBaseURL;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDConnectionManager : NSObject
{
    _Bool _hostActive;
    APDReachability *_internetReachability;
    APDReachability *_hostReachability;
    _Bool _reachabilityInitialized;
    _Bool _connected;
    _Bool _internetActive;
}

@property(nonatomic) _Bool internetActive; // @synthesize internetActive=_internetActive;
@property(nonatomic, getter=connected) _Bool connected; // @synthesize connected=_connected;
@property(nonatomic) _Bool reachabilityInitialized; // @synthesize reachabilityInitialized=_reachabilityInitialized;
- (void).cxx_destruct;
- (void)onReachabilityChanged:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface APDTOCViewController : APDNavigationTableViewController <UIGestureRecognizerDelegate>
{
    _Bool _showingHelpInfo;
    NSMutableArray *_openedSections;
    APDKVOManager *_KVOManager;
    UIView *_loadingView;
    UIView *_footerViewSeparatorView;
    UIButton *_copyrightFooterButton;
    UIActivityIndicatorView *_loadingIndicator;
    APDNavigationItem *_pendingOpenItem;
}

@property(retain, nonatomic) APDNavigationItem *pendingOpenItem; // @synthesize pendingOpenItem=_pendingOpenItem;
@property(nonatomic) __weak UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator=_loadingIndicator;
@property(nonatomic) __weak UIButton *copyrightFooterButton; // @synthesize copyrightFooterButton=_copyrightFooterButton;
@property(nonatomic) __weak UIView *footerViewSeparatorView; // @synthesize footerViewSeparatorView=_footerViewSeparatorView;
@property(nonatomic) __weak UIView *loadingView; // @synthesize loadingView=_loadingView;
- (void).cxx_destruct;
- (void)showCopyrightTopic:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)closeNavigationItem:(id)arg1;
- (void)openNavigationItem:(id)arg1 insertRowsToTableView:(_Bool)arg2;
- (long long)numberOfVisibleCellsForNavigationItem:(id)arg1;
- (void)onSectionListChanged:(id)arg1;
- (void)onLoadingChanged:(id)arg1;
- (void)updateTableViewData;
- (void)appendOpenedChildrenForItem:(id)arg1;
- (void)ensureContentInTOC;
- (void)dismissCellHighlight;
- (void)showHighlightOnLastSelectedTopic;
- (void)onFooterViewLongPress:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)updateFooterView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <APDTOCViewControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface APDGenericData : NSObject
{
}

- (id)initWithDictionary:(id)arg1;

@end

@interface UIWebView (APDAdditions)
- (void)removeAllHighlights;
- (long long)highlightAllOccurencesOfString:(id)arg1;
@end

@interface NSBundle (APDCardinalAdditions)
+ (id)APDLocalizedString:(id)arg1 valueIfMissing:(id)arg2 table:(id)arg3 bundle:(id)arg4;
+ (id)APDLocalizedString:(id)arg1 valueIfMissing:(id)arg2 table:(id)arg3;
+ (id)APDCoachingTipsAPDIDForKey:(id)arg1 valueIfMissing:(id)arg2;
+ (id)APDCoachingTipsAPDIDForKey:(id)arg1;
+ (id)APDCoachingTipsGestureGraphicValueForKey:(id)arg1 valueIfMissing:(id)arg2;
+ (id)APDCoachingTipsLocalizedString:(id)arg1;
+ (id)APDBundleVersion;
+ (id)APDCoachingTipsLocalizedFont;
+ (id)APDResourcesBundle;
+ (id)APDResourcesBundleURL;
+ (void)updateCoachingTipsStringsBundlesWithBundlePaths:(id)arg1;
@end

@interface UIColor (APDAdditions)
+ (id)colorWithCSSString:(id)arg1;
+ (id)colorWithR:(long long)arg1 G:(long long)arg2 B:(long long)arg3 alpha:(float)arg4;
- (id)initWithR:(long long)arg1 G:(long long)arg2 B:(long long)arg3 alpha:(float)arg4;
@end

@interface NSObject (APDEffectAdditions)
- (void)APDHandleWillMoveToWindow:(id)arg1 takeSelector:(SEL)arg2;
@end

@interface UIImage (APDCardinalAdditions)
+ (id)APDStretchyImageNamed:(id)arg1 hStretch:(_Bool)arg2 vStretch:(_Bool)arg3;
+ (id)APDImageNamed:(id)arg1;
+ (id)APDStretchyVersionH:(_Bool)arg1 V:(_Bool)arg2 forImage:(id)arg3;
+ (void)saveToStretchyCache:(id)arg1 forKey:(id)arg2;
- (id)APDStretchyVersion;
- (id)APDStretchyVVersion;
- (id)APDStretchyHVersion;
- (id)stretchyVersionH:(_Bool)arg1 V:(_Bool)arg2;
@end

