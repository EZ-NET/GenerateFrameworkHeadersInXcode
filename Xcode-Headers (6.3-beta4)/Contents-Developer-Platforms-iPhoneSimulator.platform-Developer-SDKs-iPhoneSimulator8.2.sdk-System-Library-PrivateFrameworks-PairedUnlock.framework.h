//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
// UUID: 2DA9F26F-4F48-3603-BA18-2BEFAFE8BD72
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 111.0.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IDSServiceDelegate <NSObject>

@optional
- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;
- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;
- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol PUUnlockClient <NSObject>
- (void)didGetRemoteDeviceHasPasscode:(_Bool)arg1 isLocked:(_Bool)arg2 isUnlockOnly:(_Bool)arg3 error:(NSError *)arg4;
- (void)remoteDeviceDidRemoveLockout:(_Bool)arg1 error:(NSError *)arg2;
- (void)remoteDeviceDidUnlock;
- (void)remoteDeviceDidCompletePasscodeAction:(_Bool)arg1 error:(NSError *)arg2;
- (void)didDisableOnlyRemoteUnlock:(_Bool)arg1 error:(NSError *)arg2;
- (void)didEnableOnlyRemoteUnlock:(_Bool)arg1 error:(NSError *)arg2;
- (void)didUnpairForUnlock:(_Bool)arg1 error:(NSError *)arg2;
- (void)didPairForUnlock:(_Bool)arg1 error:(NSError *)arg2;
@end

@protocol PUUnlockServer <NSObject>
- (void)getRemoteDeviceState;
- (void)didCompletePasscodeAction:(_Bool)arg1 error:(NSError *)arg2;
- (void)requestRemoteDeviceRemoveLockout;
- (void)requestRemoteDeviceUnlockNotification;
- (void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2;
- (void)disableOnlyRemoteUnlock;
- (void)enableOnlyRemoteUnlockWithPasscode:(NSString *)arg1;
- (void)unpairForUnlock;
- (void)pairForUnlockWithPasscode:(NSString *)arg1;
- (void)checkIn;
@end

@interface PUPeer : NSObject <IDSServiceDelegate>
{
    IDSService *_service;
    NSObject<OS_dispatch_queue> *_idsQueue;
    _Bool _unlockEnabled;
    id <PUPeerDelegate> _delegate;
    PUKeyStore *_keyStore;
    NSMutableDictionary *_responseHandlers;
}

@property(retain, nonatomic) NSMutableDictionary *responseHandlers; // @synthesize responseHandlers=_responseHandlers;
@property(retain, nonatomic) PUKeyStore *keyStore; // @synthesize keyStore=_keyStore;
@property(nonatomic, getter=isUnlockEnabled) _Bool unlockEnabled; // @synthesize unlockEnabled=_unlockEnabled;
@property(nonatomic) id <PUPeerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_notifyPairResult:(_Bool)arg1 error:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)getPasscodeState:(id)arg1;
- (void)didGetPasscodeState:(id)arg1;
- (void)setShouldNotifyNextUnlock:(id)arg1;
- (void)didUnlock:(id)arg1;
- (void)removeLockout:(id)arg1;
- (void)disableOnlyRemoteUnlock:(id)arg1;
- (void)startPasscodeAction:(id)arg1;
- (_Bool)isUnlockOnly;
- (_Bool)_isCurrentlyLocked;
- (void)notifyThisDeviceDidUnlock;
- (void)disableOnlyRemoteUnlockWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_notifyStateHasPasscode:(_Bool)arg1 isLocked:(_Bool)arg2 isOnlyRemoteUnlock:(_Bool)arg3 reliably:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)_retrieveUnlockOnlyPasscode;
- (void)enableOnlyRemoteUnlockWithPasscode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_createAndStoreNewPasscodeWithCurrentPasscode:(id)arg1;
- (void)notifyCurrentState;
- (void)getRemoteDeviceState:(CDUnknownBlockType)arg1;
- (void)unpairForUnlockWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)requestRemoteDeviceRemoveLockout:(CDUnknownBlockType)arg1;
- (void)requestRemoteDeviceDisableOnlyRemoteUnlock;
- (void)requestRemoteDeviceUnlockNotification;
- (void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)pairForUnlockWithPasscode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)didCompleteRequest:(id)arg1;
- (id)_sendProtobuf:(id)arg1 reliably:(_Bool)arg2 expectsResponse:(_Bool)arg3 responseIdentifier:(id)arg4;
- (void)_sendResponse:(unsigned short)arg1 toRequestID:(id)arg2 data:(id)arg3;
- (id)_sendRequest:(unsigned short)arg1 data:(id)arg2 reliably:(_Bool)arg3 expectResponse:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)_sendResultOfMessage:(unsigned short)arg1 requestID:(id)arg2 success:(_Bool)arg3 error:(id)arg4;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PUProtoDidUnlock : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUProtoGetPasscodeState : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUProtoDidGetPasscodeState : PBCodable <NSCopying>
{
    _Bool _hasPasscode;
    _Bool _isLocked;
    _Bool _isUnlockOnly;
}

@property(nonatomic) _Bool isUnlockOnly; // @synthesize isUnlockOnly=_isUnlockOnly;
@property(nonatomic) _Bool isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) _Bool hasPasscode; // @synthesize hasPasscode=_hasPasscode;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUProtoStartPasscodeAction : PBCodable <NSCopying>
{
    unsigned int _actionID;
    unsigned int _passcodeType;
    struct {
        unsigned int passcodeType:1;
    } _has;
}

@property(nonatomic) unsigned int passcodeType; // @synthesize passcodeType=_passcodeType;
@property(nonatomic) unsigned int actionID; // @synthesize actionID=_actionID;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasPasscodeType;

@end

@interface PUProtoRemoveLockout : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUKeyStore : NSObject
{
}

- (id)getEncryptionKeyWithLabel:(id)arg1;
- (void)deletePasscodeBlobWithLabel:(id)arg1;
- (id)getPasscodeBlobWithLabel:(id)arg1;
- (_Bool)storePasscodeBlob:(id)arg1 withLabel:(id)arg2;
- (id)_attributesForPasscodeBlobWithLabel:(id)arg1;
- (id)encryptBlob:(id)arg1 withKeyLabel:(id)arg2;
- (id)decryptBlob:(id)arg1 withKeyLabel:(id)arg2;
- (void)deleteKeyWithLabel:(id)arg1;
- (_Bool)hasKeyWithLabel:(id)arg1 isPublic:(_Bool)arg2;
- (void)storeEncryptionKey:(id)arg1 withLabel:(id)arg2 allowAccessWhenLocked:(_Bool)arg3;
- (id)newKeyWithLabel:(id)arg1 allowAccessWhenLocked:(_Bool)arg2;

@end

@interface PUProtoSetShouldNotifyNextUnlock : PBCodable <NSCopying>
{
    _Bool _shouldNotify;
}

@property(nonatomic) _Bool shouldNotify; // @synthesize shouldNotify=_shouldNotify;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUConnection : NSObject <PUUnlockClient>
{
    CDUnknownBlockType _getRemoteDevicePasscodeStateHandler;
    CDUnknownBlockType _remoteDeviceRemoveLockoutHandler;
    id <PUConnectionDelegate> _delegate;
    NSXPCConnection *_connection;
}

@property(readonly, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) __weak id <PUConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)remoteDeviceDidRemoveLockout:(_Bool)arg1 error:(id)arg2;
- (void)didGetRemoteDeviceHasPasscode:(_Bool)arg1 isLocked:(_Bool)arg2 isUnlockOnly:(_Bool)arg3 error:(id)arg4;
- (void)remoteDeviceDidUnlock;
- (void)remoteDeviceDidCompletePasscodeAction:(_Bool)arg1 error:(id)arg2;
- (void)didDisableOnlyRemoteUnlock:(_Bool)arg1 error:(id)arg2;
- (void)didEnableOnlyRemoteUnlock:(_Bool)arg1 error:(id)arg2;
- (void)didUnpairForUnlock:(_Bool)arg1 error:(id)arg2;
- (void)didPairForUnlock:(_Bool)arg1 error:(id)arg2;
- (void)getRemoteDeviceState:(CDUnknownBlockType)arg1;
- (void)requestRemoteDeviceRemoveLockout:(CDUnknownBlockType)arg1;
- (void)requestRemoteDeviceUnlockNotification;
- (void)requestRemoteDevicePasscodeAction:(long long)arg1 type:(long long)arg2;
- (void)disableOnlyRemoteUnlock;
- (void)enableOnlyRemoteUnlockWithPasscode:(id)arg1;
- (void)unpairForUnlock;
- (void)pairForUnlockWithPasscode:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PUProtoRequestDisableOnlyRemoteUnlock : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface PUProtoRequestCompleted : PBCodable <NSCopying>
{
    NSData *_errorData;
    unsigned int _messageID;
    _Bool _success;
}

@property(retain, nonatomic) NSData *errorData; // @synthesize errorData=_errorData;
@property(nonatomic) _Bool success; // @synthesize success=_success;
@property(nonatomic) unsigned int messageID; // @synthesize messageID=_messageID;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasErrorData;

@end

