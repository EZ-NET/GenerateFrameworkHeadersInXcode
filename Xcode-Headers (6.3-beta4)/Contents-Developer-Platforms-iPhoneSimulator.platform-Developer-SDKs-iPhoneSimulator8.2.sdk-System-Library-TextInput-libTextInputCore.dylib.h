//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AlignedBuffer<264, 8> {
    char _field1[264];
};

struct ByteString {
    union {
        struct {
            unsigned short _field1;
            char *_field2;
        } _field1;
        struct {
            unsigned short _field1;
            unsigned char _field2[14];
        } _field2;
    } _field1;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct Candidate {
    struct Vector<KB::Word, 3> _field1;
    float _field2;
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct LanguageModelContext _field6;
    struct String _field7;
    struct ByteString _field8;
    _Bool _field9;
};

struct DictionaryContainer;

struct Input;

struct KeyboardLayout;

struct LanguageModel;

struct LanguageModelContext {
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field1;
    unsigned long long _field2;
};

struct RefPtr<KB::DictionaryContainer> {
    struct DictionaryContainer *_field1;
};

struct RefPtr<TI::Favonius::KeyboardLayout> {
    struct KeyboardLayout *_field1;
};

struct RefPtr<TI::Favonius::LayoutKey>;

struct StaticDictionary;

struct String {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4;
    char *_field5;
    char _field6[16];
};

struct StrokeBuildManager;

struct TIInputManagerZephyr {
    CDUnknownFunctionPointerType *_field1;
    struct vector<KB::Input, std::__1::allocator<KB::Input>> _field2;
    struct String _field3;
    struct String _field4;
    unsigned int _field5;
    unsigned int _field6;
    _Bool _field7;
    _Bool _field8;
    struct __CFString *_field9;
    struct __CFLocale *_field10;
    struct RefPtr<KB::DictionaryContainer> _field11;
    _Bool _field12;
    struct StrokeBuildManager *_field13;
    struct String _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    shared_ptr_e9f752ce _field19;
    struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field20;
    struct RefPtr<TI::Favonius::KeyboardLayout> _field21;
    struct String _field22;
    struct LanguageModelContext _field23;
    struct shared_ptr<KB::TypologyLogger> _field24;
};

struct TypologyLogger;

struct Vector<KB::Word, 3> {
    unsigned long long _field1;
    struct VectorBuffer<KB::Word, 3> _field2;
};

struct Vector<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
    unsigned long long _field1;
    struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> _field2;
};

struct VectorBuffer<KB::Word, 3> {
    struct Word *_field1;
    unsigned long long _field2;
    struct AlignedBuffer<264, 8> _field3;
};

struct VectorBuffer<WTF::RefPtr<TI::Favonius::LayoutKey>, 0> {
    struct RefPtr<TI::Favonius::LayoutKey> *_field1;
    unsigned long long _field2;
};

struct Word;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _TIRevisionHistoryTokenIterator {
    unsigned long long tokenIndex;
    unsigned long long documentLocation;
};

struct __shared_weak_count;

struct shared_ptr<KB::LanguageModel> {
    struct LanguageModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<KB::StaticDictionary> {
    struct StaticDictionary *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<KB::TypologyLogger> {
    struct TypologyLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct vector<KB::Candidate, std::__1::allocator<KB::Candidate>> {
    struct Candidate *_field1;
    struct Candidate *_field2;
    struct __compressed_pair<KB::Candidate *, std::__1::allocator<KB::Candidate>> {
        struct Candidate *_field1;
    } _field3;
};

struct vector<KB::Input, std::__1::allocator<KB::Input>> {
    struct Input *_field1;
    struct Input *_field2;
    struct __compressed_pair<KB::Input *, std::__1::allocator<KB::Input>> {
        struct Input *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<KB::LanguageModel> {
    struct LanguageModel *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e9f752ce;

typedef struct shared_ptr<KB::StaticDictionary> {
    struct StaticDictionary *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8ca63670;

typedef struct vector<KB::Candidate, std::__1::allocator<KB::Candidate>> {
    struct Candidate *_field1;
    struct Candidate *_field2;
    struct __compressed_pair<KB::Candidate *, std::__1::allocator<KB::Candidate>> {
        struct Candidate *_field1;
    } _field3;
} vector_566bf209;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/TextInput/libTextInputCore.dylib
// UUID: E9A4436C-8B7E-3514-A53F-217A7CEBB7FA
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1693.17.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSKeyedArchiverDelegate <NSObject>

@optional
- (void)archiverDidFinish:(NSKeyedArchiver *)arg1;
- (void)archiverWillFinish:(NSKeyedArchiver *)arg1;
- (void)archiver:(NSKeyedArchiver *)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (void)archiver:(NSKeyedArchiver *)arg1 didEncodeObject:(id)arg2;
- (id)archiver:(NSKeyedArchiver *)arg1 willEncodeObject:(id)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@protocol TIKeyboardInputManagerLogging <NSObject>
- (void)logReceivedLastAcceptedCandidateCorrected;
- (void)logReceivedCandidateRejected:(TIKeyboardCandidate *)arg1;
- (void)logReceivedTextAccepted:(TIKeyboardCandidate *)arg1;
- (void)logReceivedSetOriginalInput:(NSString *)arg1;
- (void)logKeyboardConfig:(TIKeyboardConfiguration *)arg1 forAdjustedPhraseBoundaryInForwardDirection:(_Bool)arg2;
- (void)logReceivedSkipHitTestForTouchEvent:(TIKeyboardTouchEvent *)arg1;
- (void)logHitKeyCode:(long long)arg1 forTouchEvent:(TIKeyboardTouchEvent *)arg2;
- (void)logRefinements:(TIAutocorrectionList *)arg1 forCandidate:(TIKeyboardCandidate *)arg2;
- (void)logReplacements:(NSArray *)arg1 forString:(NSString *)arg2 keyLayout:(TIKeyboardLayout *)arg3;
- (void)logKeyboardConfig:(TIKeyboardConfiguration *)arg1 textToCommit:(NSString *)arg2 forAcceptedCandidate:(TIKeyboardCandidate *)arg3;
- (void)logCandidateResultSet:(TIKeyboardCandidateResultSet *)arg1;
- (void)logAutocorrections:(TIAutocorrectionList *)arg1 forKeyboardState:(TIKeyboardState *)arg2;
- (void)logKeyboardOutput:(TIKeyboardOutput *)arg1 keyboardConfiguration:(TIKeyboardConfiguration *)arg2 forKeyboardInput:(TIKeyboardInput *)arg3;
- (void)logKeyboardConfig:(TIKeyboardConfiguration *)arg1 forSyncToKeyboardState:(TIKeyboardState *)arg2;
- (void)logToHumanReadableTrace:(NSString *)arg1;
- (NSURL *)writeToFile;
- (void)setConfig:(NSDictionary *)arg1;
@end

@protocol TIRevisionHistoryDelegate <NSObject>
- (unsigned int)tokenIDForWord:(NSString *)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3 createIfNecessary:(_Bool)arg4;
- (void)decrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)incrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)incrementUsageTrackingKeyForAutocorrectionStatistic:(NSString *)arg1 autocorrectionTypes:(unsigned int)arg2;
- (void)decrementUnigramCount:(NSString *)arg1 usageFlags:(unsigned int)arg2;
- (void)incrementUnigramCount:(NSString *)arg1 usageFlags:(unsigned int)arg2;
@end

@protocol TIUserDictionaryEntry <NSObject>
@property(retain, nonatomic) NSNumber *timestamp;
@property(copy, nonatomic) NSString *shortcut;
@property(copy, nonatomic) NSString *phrase;
@end

@protocol TIUserDictionaryServer <NSObject>
- (void)performTransaction:(TIUserDictionaryTransaction *)arg1 completionHandler:(void (^)(long long))arg2;
- (void)requestPersistentStoreURLWithCompletionHandler:(void (^)(NSURL *))arg1;
@end

@interface TIWordSearchOperationClearDynamicLanguageModelCache : TIWordSearchOperation
{
    TIMecabraWrapper *_mecabraWrapper;
}

@property(retain, nonatomic) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)perform;
- (void)dealloc;
- (id)initWithMecabraWrapper:(id)arg1;

@end

@interface TICompiledCollatorFile : NSObject
{
    int m_descriptor;
    char *m_mappedFile;
    long long m_length;
    NSString *m_path;
}

+ (struct UCollator *)createCollatorWithType:(int)arg1;
+ (id)sharedCollatorFile;
- (struct UCollator *)createCollatorWithType:(int)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 error:(unsigned int *)arg2;

@end

@interface TIInputMode : NSObject <NSCopying>
{
    NSString *_languageWithRegion;
    NSString *_variant;
    NSLocale *_locale;
    Class _inputManagerClass;
    NSString *_normalizedIdentifier;
}

+ (id)inputModeWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSString *normalizedIdentifier; // @synthesize normalizedIdentifier=_normalizedIdentifier;
@property(readonly, nonatomic) _Bool spaceAutocorrectionEnabled;
@property(readonly, nonatomic) Class inputManagerClass;
@property(readonly, nonatomic) NSLocale *locale;
@property(readonly, nonatomic) NSString *variant;
@property(readonly, nonatomic) NSString *languageWithRegion;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNormalizedIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface TIKeyboardInputManagerWrapper : TIKeyboardInputManagerStub
{
    TIKeyboardInputManagerBase *_inputManager;
    id <TIKeyboardInputManagerLogging> _logger;
}

@property(retain, nonatomic) id <TIKeyboardInputManagerLogging> logger; // @synthesize logger=_logger;
@property(retain, nonatomic) TIKeyboardInputManagerBase *inputManager; // @synthesize inputManager=_inputManager;
- (void)writeTypologyLogWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)lastAcceptedCandidateCorrected;
- (void)candidateRejected:(id)arg1;
- (void)textAccepted:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (void)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2 continuation:(CDUnknownBlockType)arg3;
- (void)generateRefinementsForCandidate:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2 continuation:(CDUnknownBlockType)arg3;
- (void)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateAutocorrectionsWithKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleKeyboardInput:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)syncToKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleKeyboardState:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface TIKeyboardInputManager_zh_ja : TIKeyboardInputManagerZephyr
{
    TIWordSearch *_wordSearch;
    NSTimer *_mecabraDynamicLearningCacheTimer;
}

@property(retain, nonatomic) NSTimer *mecabraDynamicLearningCacheTimer; // @synthesize mecabraDynamicLearningCacheTimer=_mecabraDynamicLearningCacheTimer;
@property(readonly, nonatomic) TIWordSearch *wordSearch; // @synthesize wordSearch=_wordSearch;
- (void)resume;
- (void)suspend;
- (void)dealloc;
- (void)mecabraDynamicLearningCacheTimerFired;

@end

@interface TIWordSearchOperationAdaptContext : TIWordSearchOperation
{
    TIMecabraWrapper *_mecabraWrapper;
    NSArray *_candidateContext;
    NSString *_stringContext;
}

@property(copy, nonatomic) NSString *stringContext; // @synthesize stringContext=_stringContext;
@property(copy, nonatomic) NSArray *candidateContext; // @synthesize candidateContext=_candidateContext;
@property(retain, nonatomic) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)perform;
- (void)cancel;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1 candidateContext:(id)arg2 stringContext:(id)arg3;

@end

@interface TICandidateCommitHistory : NSObject
{
    NSMutableArray *_mutableCommittedCandidates;
    unsigned long long _maxCommittedCandidateCount;
    NSString *_contextString;
}

+ (id)dummyCandidate;
@property(readonly, nonatomic) NSString *contextString; // @synthesize contextString=_contextString;
@property(nonatomic) unsigned long long maxCommittedCandidateCount; // @synthesize maxCommittedCandidateCount=_maxCommittedCandidateCount;
@property(retain, nonatomic) NSMutableArray *mutableCommittedCandidates; // @synthesize mutableCommittedCandidates=_mutableCommittedCandidates;
- (void)deleteCandidatesWithIndexes:(id)arg1;
- (void)addCandidates:(id)arg1;
- (void)addCandidate:(id)arg1;
- (_Bool)isEmpty;
- (void)clear;
@property(readonly, nonatomic) NSArray *committedCandidates;
- (void)dealloc;
- (id)initWithMaxCommittedCandidateCount:(unsigned long long)arg1;

@end

@interface TIMecabraContext : NSObject
{
    NSString *_contextBeforeInput;
    NSString *_currentStringContext;
    TIWordSearch *_wordSearch;
    void *_analysisContext;
}

+ (id)stringContextUpToLastPunctuationOrWhitespace:(id)arg1;
@property(nonatomic) void *analysisContext; // @synthesize analysisContext=_analysisContext;
@property(retain, nonatomic) TIWordSearch *wordSearch; // @synthesize wordSearch=_wordSearch;
@property(copy, nonatomic) NSString *currentStringContext; // @synthesize currentStringContext=_currentStringContext;
@property(copy, nonatomic) NSString *contextBeforeInput; // @synthesize contextBeforeInput=_contextBeforeInput;
@property(readonly, nonatomic) _Bool candidateContextIsFull;
@property(readonly, nonatomic) NSArray *candidateContext;
@property(readonly, nonatomic) NSString *stringContext;
- (void)reset;
- (void)adapt;
- (void)addCandidate:(void *)arg1;
- (void)adjust;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1;

@end

@interface TITextCheckerExemptionsImpl : NSObject
{
    CDUnknownBlockType _addressBookObserver;
    id _userDictionaryObserver;
    unsigned long long _observerAssertionCount;
    NSSet *_addressBookTokens;
    NSSet *_userDictionaryTokens;
}

+ (id)sharedTextCheckerExemptionsImpl;
@property(retain) NSSet *userDictionaryTokens; // @synthesize userDictionaryTokens=_userDictionaryTokens;
@property(retain) NSSet *addressBookTokens; // @synthesize addressBookTokens=_addressBookTokens;
- (void)removeObserverAssertion;
- (void)addObserverAssertion;
- (_Bool)stringIsExemptFromChecker:(id)arg1;
- (void)dealloc;

@end

@interface TITextCheckerExemptions : NSObject
{
    _Bool _assertsObservers;
}

- (_Bool)stringIsExemptFromChecker:(id)arg1;
@property(nonatomic) _Bool assertsObservers;
- (void)dealloc;

@end

@interface TILanguageModelLoaderClientRecord : NSObject
{
    CPLRUDictionary *_recipientSpecificModels;
    shared_ptr_e9f752ce _recipientAgnosticModel;
}

@property(readonly, nonatomic) shared_ptr_e9f752ce recipientAgnosticModel; // @synthesize recipientAgnosticModel=_recipientAgnosticModel;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)clearDynamicLearningCaches;
- (void)setModel:(CDUnknownBlockType)arg1 forRecipient:(id)arg2;
- (CDUnknownBlockType)modelForRecipient:(id)arg1;
- (id)initWithRecipientAgnosticModel:(shared_ptr_e9f752ce)arg1;
- (void)dealloc;

@end

@interface TILanguageModelLoader : NSObject
{
    CPLRUDictionary *_clientRecords;
    TIInputMode *_inputMode;
    NSString *_dynamicResourcePath;
}

+ (void)performMaintenance;
+ (void)clearDynamicLearningCaches;
+ (void)clearDynamicResourcesAtPath:(id)arg1;
+ (id)sharedLanguageModelLoaderForInputMode:(id)arg1 dynamicResourcePath:(id)arg2;
+ (shared_ptr_e9f752ce)modelForLocale:(id)arg1 appContext:(id)arg2 dynamicResourcePath:(id)arg3;
@property(readonly, nonatomic) NSString *dynamicResourcePath; // @synthesize dynamicResourcePath=_dynamicResourcePath;
@property(readonly, nonatomic) TIInputMode *inputMode; // @synthesize inputMode=_inputMode;
- (shared_ptr_e9f752ce)languageModelForAppContext:(id)arg1;
- (shared_ptr_e9f752ce)sharedLanguageModelForClient:(id)arg1 withRecipient:(id)arg2;
- (CDUnknownBlockType)modelGetterForClient:(id)arg1 withRecipient:(id)arg2;
- (id)recordForClient:(id)arg1;
- (void)performLearningIfNecessaryForClient:(id)arg1 withModel:(shared_ptr_e9f752ce)arg2;
- (void)clearDynamicLearningCaches;
- (id)initWithInputMode:(id)arg1 dynamicResourcePath:(id)arg2;
- (void)dealloc;

@end

@interface TIRevisionHistoryToken : NSObject
{
    _Bool _accepted;
    unsigned int _tokenID;
    unsigned int _usageLearningMask;
    unsigned int _usageTrackingMask;
    NSString *_tokenString;
    unsigned long long _offset;
    NSString *_userTyping;
}

@property(nonatomic, getter=isAccepted) _Bool accepted; // @synthesize accepted=_accepted;
@property(nonatomic) unsigned int usageTrackingMask; // @synthesize usageTrackingMask=_usageTrackingMask;
@property(nonatomic) unsigned int usageLearningMask; // @synthesize usageLearningMask=_usageLearningMask;
@property(copy, nonatomic) NSString *userTyping; // @synthesize userTyping=_userTyping;
@property(nonatomic) unsigned int tokenID; // @synthesize tokenID=_tokenID;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(copy, nonatomic) NSString *tokenString; // @synthesize tokenString=_tokenString;
- (id)description;
- (void)dealloc;

@end

@interface TITokenizationRevision : NSObject
{
    unsigned long long _revisedDocumentLocation;
    unsigned long long _branchedTokenIndex;
    unsigned long long _mergedTokenIndex;
    NSMutableArray *_branchTokens;
    struct _NSRange _originalSelectedTokenRange;
    struct _TIRevisionHistoryTokenIterator _originalIterator;
}

@property(readonly, nonatomic) NSMutableArray *branchTokens; // @synthesize branchTokens=_branchTokens;
@property(nonatomic) unsigned long long mergedTokenIndex; // @synthesize mergedTokenIndex=_mergedTokenIndex;
@property(nonatomic) unsigned long long branchedTokenIndex; // @synthesize branchedTokenIndex=_branchedTokenIndex;
@property(nonatomic) unsigned long long revisedDocumentLocation; // @synthesize revisedDocumentLocation=_revisedDocumentLocation;
@property(nonatomic) struct _TIRevisionHistoryTokenIterator originalIterator; // @synthesize originalIterator=_originalIterator;
@property(nonatomic) struct _NSRange originalSelectedTokenRange; // @synthesize originalSelectedTokenRange=_originalSelectedTokenRange;
- (id)initWithTokenIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (id)init;
- (void)dealloc;

@end

@interface TIRevisionHistory : NSObject
{
    id <TIRevisionHistoryDelegate> _delegate;
    CPLRUDictionary *_recentAutocorrections;
    NSString *_documentText;
    NSMutableArray *_tokenization;
    void *_tokenizer;
    struct _NSRange _selectedRange;
    struct _TIRevisionHistoryTokenIterator _currentTokenIterator;
}

@property(readonly, nonatomic) void *tokenizer; // @synthesize tokenizer=_tokenizer;
@property(nonatomic) struct _TIRevisionHistoryTokenIterator currentTokenIterator; // @synthesize currentTokenIterator=_currentTokenIterator;
@property(readonly, nonatomic) NSMutableArray *tokenization; // @synthesize tokenization=_tokenization;
@property(nonatomic) struct _NSRange selectedRange; // @synthesize selectedRange=_selectedRange;
@property(copy, nonatomic) NSString *documentText; // @synthesize documentText=_documentText;
@property(retain, nonatomic) CPLRUDictionary *recentAutocorrections; // @synthesize recentAutocorrections=_recentAutocorrections;
@property(nonatomic) id <TIRevisionHistoryDelegate> delegate; // @synthesize delegate=_delegate;
- (id)currentUserTyping;
- (id)currentWord;
- (void)enumerateSentenceStemUsingBlock:(CDUnknownBlockType)arg1;
- (void)syncToDocumentState:(id)arg1;
- (_Bool)matchesDocumentState:(id)arg1;
- (_Bool)matchesContextAfterSelection:(id)arg1;
- (_Bool)matchesSelectedText:(id)arg1;
- (_Bool)matchesContextBeforeSelection:(id)arg1;
- (void)acceptCurrentSentence;
- (void)acceptText:(id)arg1 isAutoshifted:(_Bool)arg2;
- (struct _NSRange)inputRangeForReplacement:(id)arg1;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (id)wordTokenContainingSelection;
- (_Bool)isWordToken:(struct _TIRevisionHistoryTokenIterator)arg1;
- (_Bool)isSelectionContainedByToken:(struct _TIRevisionHistoryTokenIterator)arg1;
- (void)enumerateSentenceStemUsingIteratorBlock:(CDUnknownBlockType)arg1;
- (struct _TIRevisionHistoryTokenIterator)iteratorUpperBoundForSelectionStart;
- (void)resetToDocumentState:(id)arg1;
- (void)annotateTokensCreatedFromDocumentState;
- (void)replaceSelectionWithText:(id)arg1 selectedTokenReplacementHandler:(CDUnknownBlockType)arg2;
- (void)mergeTokenizationsForRevision:(id)arg1;
- (void)pushSelectedTextToTokenizerForRevision:(id)arg1;
- (void)handleRevisedTokenString:(id)arg1 withTokenID:(unsigned int)arg2 forRevision:(id)arg3;
- (void)addRevisedTokenString:(id)arg1 withTokenID:(unsigned int)arg2 inDocumentRange:(struct _NSRange)arg3 toRevision:(id)arg4;
- (_Bool)validateTokenizationForRevisedDocumentRange:(struct _NSRange)arg1 andTokenID:(unsigned int)arg2 forRevision:(id)arg3;
- (struct _TIRevisionHistoryTokenIterator)resetTokenAtIterator:(struct _TIRevisionHistoryTokenIterator)arg1 withRange:(struct _NSRange)arg2 fromDocumentLocation:(unsigned long long)arg3;
- (_Bool)shouldValidateOriginalIterator:(struct _TIRevisionHistoryTokenIterator)arg1 withRevisedDocumentRange:(struct _NSRange)arg2 forRevision:(id)arg3;
- (_Bool)originalIterator:(struct _TIRevisionHistoryTokenIterator)arg1 matchesRevisedDocumentRange:(struct _NSRange)arg2 andTokenID:(unsigned int)arg3;
- (void)adjustTokenOffsetAfterDeletedTokenRange:(struct _NSRange)arg1 withDeletedCharacterCount:(unsigned long long)arg2;
- (unsigned long long)tokenizeDocumentTextInRange:(struct _NSRange)arg1 withTokenHandler:(CDUnknownBlockType)arg2;
- (struct _TIRevisionHistoryTokenIterator)popSelectedTextFromTokenizer;
- (id)nonEmptyTokensInRange:(struct _NSRange)arg1;
- (struct _NSRange)selectedTokenRangeWithIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (struct _TIRevisionHistoryTokenIterator)previousTokenIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (struct _TIRevisionHistoryTokenIterator)nextTokenIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (struct _NSRange)documentRangeOfTokenAtIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (id)tokenAtIterator:(struct _TIRevisionHistoryTokenIterator)arg1;
- (void)migrateUserTypingFromDeletedTokens:(id)arg1 toInsertedTokens:(id)arg2 withUsageLearningMask:(unsigned int)arg3 usageTrackingMask:(unsigned int)arg4;
- (void)rejectTokensInRange:(struct _NSRange)arg1;
- (void)acceptTokensInRange:(struct _NSRange)arg1;
- (unsigned long long)fillTokenBuffer:(unsigned int *)arg1 withContextForTokenAtIndex:(unsigned long long)arg2;
- (void)rejectToken:(id)arg1 withContext:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)acceptToken:(id)arg1 withContext:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (id)initWithLocale:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface TIWordSearch : NSObject
{
    id _userDictionaryObserver;
    _Bool _autoCorrects;
    _Bool _shouldLearnAcceptedCandidate;
    TIInputMode *_inputMode;
    TIMecabraWrapper *_mecabraWrapper;
    NSOperationQueue *_operationQueue;
    TIWordSearchOperationGetCandidates *_operation;
    NSCache *_candidatesCache;
}

@property(retain, nonatomic) NSCache *candidatesCache; // @synthesize candidatesCache=_candidatesCache;
@property _Bool shouldLearnAcceptedCandidate; // @synthesize shouldLearnAcceptedCandidate=_shouldLearnAcceptedCandidate;
@property _Bool autoCorrects; // @synthesize autoCorrects=_autoCorrects;
@property(retain) TIWordSearchOperationGetCandidates *operation; // @synthesize operation=_operation;
@property(readonly) TIInputMode *inputMode; // @synthesize inputMode=_inputMode;
- (void)updateUserWordEntries;
- (id)geometryModelDataFromZephyr:(struct TIInputManagerZephyr *)arg1;
- (void)setLanguageModelContextWithClientIdentifier:(id)arg1 recipientIdentifier:(id)arg2;
- (void)adaptToCandidateContext:(id)arg1 andStringContext:(id)arg2;
- (void)dynamicDictionariesRemoved:(id)arg1;
- (void)clearObservers;
- (void)saveLearningDictionary;
- (void)completeOperationsInQueue;
- (void)lastAcceptedCandidateCorrected;
- (void)performOperationAsync:(id)arg1;
- (void)resetPreviousWord;
- (_Bool)isCancelled;
- (void)cancel;
- (void)performAccept:(void *)arg1 isPartial:(_Bool)arg2;
- (id)facemarkCandiates;
- (id)cachedCandidatesForOperation:(id)arg1;
- (id)uncachedCandidatesForOperation:(id)arg1;
- (id)candidatesForOperation:(id)arg1;
- (id)candidatesCacheKeyForOperation:(id)arg1;
- (void)dealloc;
- (id)initTIWordSearchWithInputMode:(id)arg1;
@property(readonly) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (unsigned long long)mecabraCreationOptions;
- (struct __CFURL *)createMecabraLearningDictionaryDirectory;
- (int)mecabraInputMethodType;
@property(readonly) struct __Mecabra *mecabra;
@property(readonly) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)clearLearningDictionary;
- (void)updateMecabraState;
- (void)clearCache;
- (void)endInputSession;

@end

@interface TINoncancellableBlockOperation : NSBlockOperation
{
}

- (void)cancel;

@end

@interface TIWordSearchOperationSetLanguageModelApplicationContext : TIWordSearchOperation
{
    TIMecabraWrapper *_mecabraWrapper;
    NSString *_context;
}

@property(copy, nonatomic) NSString *context; // @synthesize context=_context;
@property(retain, nonatomic) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)perform;
- (void)cancel;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1 context:(id)arg2;

@end

@interface TIKeyboardInputManagerZephyr : TIKeyboardInputManager <TIRevisionHistoryDelegate>
{
    struct TIInputManagerZephyr *m_impl;
    NSMutableString *m_composedText;
    unsigned long long m_initialSelectedIndex;
    struct shared_ptr<KB::TypologyLogger> m_typology_recorder;
    _Bool _isEditingWordPrefix;
    _Bool _wordLearningEnabled;
    TIKeyboardInputManagerConfig *_config;
    CPLRUDictionary *_autocorrectionHistory;
    CPLRUDictionary *_rejectedAutocorrections;
    CPLRUDictionary *_autocorrectionsSuggestedForCurrentInput;
    TITextCheckerExemptions *_textCheckerExemptions;
    struct USet *_acceptableCharacterSet;
    TIRevisionHistory *_revisionHistory;
    TIAutoshiftRegularExpressionLoader *_autoshiftRegexLoader;
}

@property(retain, nonatomic) TIAutoshiftRegularExpressionLoader *autoshiftRegexLoader; // @synthesize autoshiftRegexLoader=_autoshiftRegexLoader;
@property(nonatomic, getter=isWordLearningEnabled) _Bool wordLearningEnabled; // @synthesize wordLearningEnabled=_wordLearningEnabled;
@property(readonly, nonatomic) TIRevisionHistory *revisionHistory; // @synthesize revisionHistory=_revisionHistory;
@property(readonly, nonatomic) struct USet *acceptableCharacterSet; // @synthesize acceptableCharacterSet=_acceptableCharacterSet;
@property(readonly, nonatomic) TITextCheckerExemptions *textCheckerExemptions; // @synthesize textCheckerExemptions=_textCheckerExemptions;
@property(nonatomic) _Bool isEditingWordPrefix; // @synthesize isEditingWordPrefix=_isEditingWordPrefix;
@property(readonly, nonatomic) CPLRUDictionary *autocorrectionsSuggestedForCurrentInput; // @synthesize autocorrectionsSuggestedForCurrentInput=_autocorrectionsSuggestedForCurrentInput;
@property(readonly, nonatomic) CPLRUDictionary *rejectedAutocorrections; // @synthesize rejectedAutocorrections=_rejectedAutocorrections;
@property(readonly, nonatomic) CPLRUDictionary *autocorrectionHistory; // @synthesize autocorrectionHistory=_autocorrectionHistory;
@property(readonly, nonatomic) TIKeyboardInputManagerConfig *config; // @synthesize config=_config;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)installTypologyTraceLogger;
- (_Bool)acceptsRange:(struct _NSRange)arg1 inString:(id)arg2;
- (_Bool)acceptsCharacter:(unsigned int)arg1;
- (struct USet *)createAcceptableCharacterSet;
- (long long)keyHitTest:(id)arg1;
- (void)registerKeyArea:(struct CGRect)arg1 keyCode:(short)arg2 keyString:(const char *)arg3;
- (void)clearKeyAreas;
- (_Bool)needsKeyHitTestResults;
- (_Bool)canHandleKeyHitTest;
- (unsigned long long)initialSelectedIndex;
- (id)candidateResultSet;
- (id)autocorrectionList;
- (id)extendedAutocorrection:(id)arg1 spanningInputsForCandidates:(id)arg2;
- (id)topCandidate;
- (id)completionCandidates;
- (id)autocorrectionListForEmptyInputWithDesiredCandidateCount:(unsigned long long)arg1;
- (id)indexesOfDuplicatesInCandidates:(id)arg1;
- (id)predictionCandidates;
- (_Bool)shouldAutocapitalizePredictionAfterSpace;
- (_Bool)shouldGenerateSuggestionsForSelectedText;
- (void)reconcileCandidates:(vector_566bf209 *)arg1 forTypedString:(struct String *)arg2 withPhraseCandidate:(struct Candidate *)arg3 replacing:(const struct String *)arg4;
- (id)autocorrectionListForSelectedText;
- (id)cannedResponseCandidatesForString:(id)arg1;
- (id)cannedResponsesToString:(id)arg1;
- (_Bool)shouldAllowContextTokenID:(unsigned int)arg1;
- (_Bool)shouldDropInputStem;
- (_Bool)suggestionBlacklistMatchesStrings:(id)arg1;
- (id)candidatesForString:(id)arg1;
- (_Bool)usesRetrocorrection;
- (_Bool)usesCandidateSelection;
- (id)shortcutConversionForInput:(id)arg1 andExistingString:(id)arg2 existingStringStartsInMiddleOfWord:(_Bool)arg3;
- (id)shortcutConversionForString:(id)arg1 stringStartsInMiddleOfWord:(_Bool)arg2;
- (id)shortcutConversionForDocumentState:(id)arg1;
- (id)shortcutCompletionsForDocumentState:(id)arg1;
- (struct _NSRange)shortcutSearchRangeForString:(id)arg1;
- (_Bool)shouldSkipShortcutConversionForDocumentState:(id)arg1;
- (void)enumerateWordSuffixesOfString:(id)arg1 inRange:(struct _NSRange)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)maximumShortcutLengthAllowed;
- (_Bool)supportsShortcutConversion;
- (id)terminatorsPrecedingAutospace;
- (id)terminatorsDeletingAutospace;
- (id)terminatorsPreventingAutocorrection;
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const struct Candidate *)arg2 insertingSpace:(_Bool)arg3 sharedPrefixLength:(unsigned long long)arg4;
- (id)autocorrectionCandidateForInput:(id)arg1 withCandidate:(const struct Candidate *)arg2;
- (id)autocorrection;
- (_Bool)isEditingExistingWord;
- (id)phraseCandidateCompletedByWord:(const struct String *)arg1 allowNoSuggest:(_Bool)arg2;
- (unsigned long long)prefixLengthOfInput:(id)arg1 sharedWithCandidates:(const vector_566bf209 *)arg2;
- (unsigned long long)prefixLengthOfInput:(id)arg1 sharedWithCandidate:(const struct Candidate *)arg2;
- (void)checkAutocorrectionDictionaries;
- (void)setAutoshiftFromInputContext;
- (_Bool)canStartSentenceAfterString:(id)arg1;
- (_Bool)spaceAndNextInputWouldStartSentence;
- (_Bool)nextInputWouldStartSentence;
- (_Bool)nextInputWouldStartSentenceAfterInput:(id)arg1;
- (id)sentenceTrailingCharacters;
- (id)sentenceDelimitingCharacters;
- (id)sentencePrefixingCharacters;
- (id)wordCharacters;
- (id)nonstopPunctuationCharacters;
- (_Bool)shouldAddModifierSymbolsToWordCharacters;
- (id)shadowTyping;
- (void)updateForRevisitedString:(id)arg1;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)recordRejectedAutocorrectionForAcceptedText:(id)arg1;
- (void)recordAcceptedAutocorrection:(id)arg1;
- (void)recordSuggestedAutocorrection:(id)arg1;
- (void)candidateRejected:(id)arg1;
- (_Bool)shouldExpectSentenceBoundaryAfterContext:(const unsigned int *)arg1 contextLength:(unsigned long long)arg2;
- (unsigned int)tokenIDForWordSeparator:(unsigned short)arg1;
- (unsigned int)tokenIDForWord:(id)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3 createIfNecessary:(_Bool)arg4;
- (void)decrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)incrementLanguageModelCount:(unsigned int)arg1 context:(const unsigned int *)arg2 contextLength:(unsigned long long)arg3;
- (void)decrementUnigramCount:(id)arg1 usageFlags:(unsigned int)arg2;
- (void)incrementUnigramCount:(id)arg1 usageFlags:(unsigned int)arg2;
- (void)textAccepted:(id)arg1;
- (_Bool)shouldAllowCorrectionOfAcceptedCandidate:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (id)defaultCandidate;
- (id)inputStem;
- (id)inputString;
- (unsigned int)inputCount;
- (unsigned int)inputIndex;
- (void)setInputIndex:(unsigned int)arg1;
- (void)updateInputContext;
- (id)internalInputContext;
- (id)inputContext;
- (void)acceptInput;
- (void)clearInput;
- (id)deleteFromInput:(unsigned long long *)arg1;
- (unsigned long long)deleteLengthForString:(id)arg1;
- (void)setInput:(id)arg1;
- (void)dropInput;
- (void)dropInputPrefix:(unsigned int)arg1;
- (void)trimInput;
- (_Bool)canRetrocorrectInputAtIndex:(unsigned int)arg1;
- (_Bool)canTrimInputAtIndex:(unsigned int)arg1;
- (unsigned long long)internalIndexOfInputStemSuffix:(id)arg1;
- (id)trimmedInputStem;
- (struct LanguageModelContext)sentenceContextForInputStem:(id)arg1;
- (_Bool)canComputeSentenceContextForInputStem:(id)arg1;
- (void)setInputStringFromDocumentState:(id)arg1;
- (struct _NSRange)inputStringRangeFromRevisionHistory;
- (struct _NSRange)acceptableRangeFromRange:(struct _NSRange)arg1 inText:(id)arg2 withSelectionLocation:(unsigned long long)arg3;
- (struct _NSRange)legacyInputRangeForTokenRange:(struct _NSRange)arg1;
- (unsigned int)simulateAutoshiftIfNecessaryForFlags:(unsigned int)arg1;
- (_Bool)hasLegacyInputString;
- (_Bool)hasLegacyInputStem;
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint)arg3 firstDelete:(unsigned long long *)arg4 fromVariantKey:(_Bool)arg5;
- (void)releaseDynamicLanguageModel;
- (void)clearDynamicDictionary;
- (_Bool)inHardwareKeyboardMode;
- (void)setInHardwareKeyboardMode:(_Bool)arg1;
- (void)setKeyboardEventsLagging:(_Bool)arg1;
- (void)setLearnsCorrection:(_Bool)arg1;
- (void)setCollatorLocale;
- (void)deltaPathsChanged:(id)arg1;
- (void)loadFavoniusLanguageModel;
- (_Bool)updateLanguageModelForKeyboardState;
- (id)pathToDeltaStaticDictionary;
- (void)loadDictionaries;
- (struct TIInputManagerZephyr *)initImplementation;
- (id)dictionaryStringForExternalString:(id)arg1;
- (_Bool)dictionaryUsesExternalEncoding;
- (unsigned int)externalIndexToInternal:(unsigned int)arg1;
- (unsigned int)internalIndexToExternal:(unsigned int)arg1;
- (id)internalStringToExternal:(id)arg1;
- (id)externalStringToInternal:(id)arg1;
- (void)updateComposedText;
- (_Bool)doesComposeText;
- (void)refreshInputManagerState;
- (void)syncToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)resume;
- (void)suspend;
- (void)dealloc;
- (id)initWithInputMode:(id)arg1;
- (id)initWithConfig:(id)arg1;
- (id)configurationPropertyList;
- (void)logToTypologyRecorderWithString:(id)arg1;
- (_Bool)isTypologyEnabled;
- (void)storeLanguageModelDynamicDataIncludingCache;
- (void)clearHumanReadableTrace;
- (id)humanReadableTrace;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIKeyboardInputManagerBase : NSObject
{
    TIInputMode *_inputMode;
}

@property(readonly, nonatomic) TIInputMode *inputMode; // @synthesize inputMode=_inputMode;
- (void)lastAcceptedCandidateCorrected;
- (void)candidateRejected:(id)arg1;
- (void)textAccepted:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1;
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (long long)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (id)generateRefinementsForCandidate:(id)arg1;
- (id)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2;
- (id)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2;
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)generateAutocorrectionsWithKeyboardState:(id)arg1;
- (id)handleKeyboardInput:(id)arg1;
- (id)keyboardConfiguration;
- (void)syncToKeyboardState:(id)arg1;
- (void)resume;
- (void)suspend;
- (id)initWithInputMode:(id)arg1;
- (id)init;
- (void)dealloc;
- (id)configurationPropertyList;
- (void)storeLanguageModelDynamicDataIncludingCache;
- (void)clearHumanReadableTrace;
- (id)humanReadableTrace;
- (void)addSynthesizedTouchToInput:(id)arg1;
- (_Bool)isHardwareKeyboardAutocorrectionEnabled;

@end

@interface TIDebugValue : NSObject
{
    float defaultValue;
    float sweepValue;
    float sweepMin;
    float sweepMax;
    float stepSize;
}

@property(nonatomic) float stepSize; // @synthesize stepSize;
@property(nonatomic) float sweepMax; // @synthesize sweepMax;
@property(nonatomic) float sweepMin; // @synthesize sweepMin;
@property(nonatomic) float sweepValue; // @synthesize sweepValue;
@property(nonatomic) float defaultValue; // @synthesize defaultValue;

@end

@interface TISweepSource : NSObject
{
    NSMutableDictionary *debugValues;
    int stepCount;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSMutableDictionary *debugValues; // @synthesize debugValues;
@property(nonatomic) int stepCount;
- (_Bool)finished;
- (void)advanceSweep;
- (id)sweepStateValues;
- (id)sweepStateHeader;
- (void)addValue:(id)arg1 withValue:(float)arg2;
- (void)addValue:(id)arg1 withMin:(float)arg2 withMax:(float)arg3;
- (void)dealloc;

@end

@interface TITypologyLogArchiverDelegate : NSObject <NSKeyedArchiverDelegate>
{
    NSMutableSet *_objects;
}

@property(readonly, nonatomic) NSMutableSet *objects; // @synthesize objects=_objects;
- (id)archiver:(id)arg1 willEncodeObject:(id)arg2;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TITypologyLog : NSObject <NSCopying, TIKeyboardInputManagerLogging>
{
    NSUUID *_uuid;
    NSDate *_date;
    NSString *_systemVersion;
    NSString *_buildVersion;
    NSString *_clientIdentifier;
    NSDictionary *_config;
    NSMutableArray *_records;
    NSMutableString *_humanReadableTrace;
}

+ (_Bool)isFilenameHumanReadableTrace:(id)arg1;
+ (_Bool)isFilenameTypologyLog:(id)arg1;
+ (void)pruneTypologyLogsSatisfyingPredicate:(CDUnknownBlockType)arg1;
+ (id)writePropertyList:(id)arg1 withFilename:(id)arg2;
+ (id)typologyDirectoryURL;
@property(readonly, nonatomic) NSMutableString *humanReadableTrace; // @synthesize humanReadableTrace=_humanReadableTrace;
@property(readonly, nonatomic) NSMutableArray *records; // @synthesize records=_records;
@property(retain, nonatomic) NSDictionary *config; // @synthesize config=_config;
@property(copy, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
@property(readonly, nonatomic) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(readonly, nonatomic) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void)logReceivedLastAcceptedCandidateCorrected;
- (void)logReceivedCandidateRejected:(id)arg1;
- (void)logReceivedTextAccepted:(id)arg1;
- (void)logReceivedSetOriginalInput:(id)arg1;
- (void)logKeyboardConfig:(id)arg1 forAdjustedPhraseBoundaryInForwardDirection:(_Bool)arg2;
- (void)logReceivedSkipHitTestForTouchEvent:(id)arg1;
- (void)logHitKeyCode:(long long)arg1 forTouchEvent:(id)arg2;
- (void)logRefinements:(id)arg1 forCandidate:(id)arg2;
- (void)logReplacements:(id)arg1 forString:(id)arg2 keyLayout:(id)arg3;
- (void)logKeyboardConfig:(id)arg1 textToCommit:(id)arg2 forAcceptedCandidate:(id)arg3;
- (void)logCandidateResultSet:(id)arg1;
- (void)logAutocorrections:(id)arg1 forKeyboardState:(id)arg2;
- (void)logKeyboardOutput:(id)arg1 keyboardConfiguration:(id)arg2 forKeyboardInput:(id)arg3;
- (void)logKeyboardConfig:(id)arg1 forSyncToKeyboardState:(id)arg2;
- (_Bool)shouldSubmitStructuredDataReport;
- (id)generateStructuredDataReport;
- (id)writeToFile;
- (void)writeHumanReadableTrace;
- (void)submitStructuredDataReport;
- (void)backgroundWriteLogsAndSubmitReport;
- (void)logToHumanReadableTrace:(id)arg1;
- (id)textSummary;
- (id)filenameForHumanReadableTrace;
- (id)filename;
- (id)timestamp;
- (id)propertyList;
- (id)initWithPropertyList:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTypologyLog:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIUserDictionaryServer : NSObject <NSXPCListenerDelegate, TIUserDictionaryServer>
{
    NSXPCListener *_listener;
    _Bool _suspendedForAccountChange;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSManagedObjectContext *_managedObjectContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSArray *_cachedPhraseShortcutPairs;
    NSMutableArray *_observers;
    long long _recentClientCount;
}

+ (id)basePersistentStoreURL;
+ (id)legacyStorePath;
+ (id)legacyImportWordKeyPairsFromFiles:(id)arg1;
+ (id)legacyImportFilePaths;
+ (id)sharedInstance;
@property(nonatomic) long long recentClientCount; // @synthesize recentClientCount=_recentClientCount;
@property(readonly, nonatomic) NSMutableArray *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSArray *cachedPhraseShortcutPairs; // @synthesize cachedPhraseShortcutPairs=_cachedPhraseShortcutPairs;
@property(nonatomic, getter=isSuspendedForAccountChange) _Bool suspendedForAccountChange; // @synthesize suspendedForAccountChange=_suspendedForAccountChange;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(readonly, nonatomic) NSManagedObjectContext *managedObjectContext; // @synthesize managedObjectContext=_managedObjectContext;
@property(readonly, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
- (void)closeLibrarianConnection;
- (void)handleIdleTimeout;
- (void)decrementRecentClientCountAfterDelay;
- (void)incrementRecentClientCount;
- (void)assertCoreDataQueue;
- (void)persistentStoreCoordinatorStoresDidChange:(id)arg1;
- (void)persistentStoreCoordinatorStoresWillChange:(id)arg1;
- (void)unloadPersistentStore;
- (void)loadPersistentStoreIfNecessary;
@property(readonly, nonatomic) NSPersistentStore *persistentStore;
- (void)migrateSundanceData;
- (void)migrateTellurideData;
- (void)importLegacyEntries;
- (void)didMergeEntriesForNewUbiquityIdentity:(id)arg1;
- (_Bool)mergeEntriesForUbiquityIdentityChangeIfNecessary;
- (void)didMergeEntriesForOtherLocalPeers:(id)arg1;
- (_Bool)mergeEntriesForOtherLocalPeersIfNecessary:(id)arg1;
- (_Bool)mergeEntriesForUbiquityIdentityChangeFromURL:(id)arg1 firstDelete:(_Bool)arg2;
- (id)storeURLForMergeAfterUbiquityIdentityChangeFromToken:(id)arg1 toToken:(id)arg2 withLastKnownToken:(id)arg3 shouldDeleteFirst:(_Bool *)arg4;
- (_Bool)migrateEntriesFromStoreAtURL:(id)arg1;
- (_Bool)mergeShortcutsFromContext:(id)arg1;
- (long long)compareEntry:(id)arg1 toEntry:(id)arg2 withSortDescriptors:(id)arg3;
- (void)importSampleShortcuts;
- (id)appleLanguagesPreference;
- (void)didImportSampleShortcuts;
- (void)importSampleShortcutsIfNecessary;
- (_Bool)needsSampleShortcutsPreference;
- (void)buddySetupDidFinish;
- (void)persistentStoreDidImportUbiquitousContentChanges:(id)arg1;
- (void)notifyObservers;
- (void)getPhraseShortcutPairs:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (id)addObserver:(CDUnknownBlockType)arg1;
- (id)fetchPhraseShortcutPairs;
- (id)entriesUsingSortDescriptors:(id)arg1;
- (id)entriesMatchingPredicate:(id)arg1;
- (id)entriesMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2;
- (id)entriesForValidationOfTransaction:(id)arg1;
- (id)entriesToDeleteForTransaction:(id)arg1;
- (_Bool)save;
- (void)deleteAllEntries;
- (id)insertEntryWithPhrase:(id)arg1 shortcut:(id)arg2;
- (id)insertEntryWithValue:(id)arg1 initializedFromObject:(id)arg2;
- (id)entityDescription;
- (void)performTransaction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)requestPersistentStoreURLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)initializePersistentStoreIfNecessary;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIKeyboardInputManagerLogger : NSObject <TIKeyboardInputManagerLogging>
{
    TITypologyLog *_typologyLog;
}

@property(retain, nonatomic) TITypologyLog *typologyLog; // @synthesize typologyLog=_typologyLog;
- (void)logReceivedLastAcceptedCandidateCorrected;
- (void)logReceivedCandidateRejected:(id)arg1;
- (void)logReceivedTextAccepted:(id)arg1;
- (void)logReceivedSetOriginalInput:(id)arg1;
- (void)logKeyboardConfig:(id)arg1 forAdjustedPhraseBoundaryInForwardDirection:(_Bool)arg2;
- (void)logReceivedSkipHitTestForTouchEvent:(id)arg1;
- (void)logHitKeyCode:(long long)arg1 forTouchEvent:(id)arg2;
- (void)logRefinements:(id)arg1 forCandidate:(id)arg2;
- (void)logReplacements:(id)arg1 forString:(id)arg2 keyLayout:(id)arg3;
- (void)logKeyboardConfig:(id)arg1 textToCommit:(id)arg2 forAcceptedCandidate:(id)arg3;
- (void)logCandidateResultSet:(id)arg1;
- (void)logAutocorrections:(id)arg1 forKeyboardState:(id)arg2;
- (void)logKeyboardOutput:(id)arg1 keyboardConfiguration:(id)arg2 forKeyboardInput:(id)arg3;
- (void)logKeyboardConfig:(id)arg1 forSyncToKeyboardState:(id)arg2;
- (void)logToHumanReadableTrace:(id)arg1;
- (void)setConfig:(id)arg1;
- (id)writeToFile;
- (_Bool)shouldDisableTypologyLogForKeyboardState:(id)arg1;
- (_Bool)shouldWriteToSyslog;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TILanguageModelOfflineLearningHandle : NSObject
{
    _Bool _valid;
    TIInputMode *_inputMode;
    NSDate *_lastAdaptationDate;
    NSString *_currentAppContext;
    shared_ptr_8ca63670 _dictionary;
    shared_ptr_e9f752ce _currentModel;
}

@property(copy, nonatomic) NSString *currentAppContext; // @synthesize currentAppContext=_currentAppContext;
@property(nonatomic) shared_ptr_e9f752ce currentModel; // @synthesize currentModel=_currentModel;
@property(copy, nonatomic) NSDate *lastAdaptationDate; // @synthesize lastAdaptationDate=_lastAdaptationDate;
@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(readonly, nonatomic) shared_ptr_8ca63670 dictionary; // @synthesize dictionary=_dictionary;
@property(readonly, nonatomic) TIInputMode *inputMode; // @synthesize inputMode=_inputMode;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithInputMode:(id)arg1;
- (void)dealloc;

@end

@interface TILanguageModelOfflineLearningTask : NSObject
{
    _Bool _cancelled;
    NSString *_clientIdentifier;
    NSMutableDictionary *_handles;
}

@property(readonly, nonatomic) NSMutableDictionary *handles; // @synthesize handles=_handles;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(readonly, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
- (void)didFinishLearning;
- (_Bool)incrementUsageCountsForMessages:(id)arg1 forLanguage:(id)arg2 appContext:(id)arg3;
- (void)setAppContext:(id)arg1 onHandle:(id)arg2;
- (id)handleForLanguage:(id)arg1;
@property(readonly, nonatomic) NSSet *forwardedMessageSeparators;
@property(readonly, nonatomic) NSCharacterSet *linePaddingCharacters;
@property(readonly, nonatomic) id <TILinguisticDataSource> dataSource;
- (id)initWithClientIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface TILanguageModelOfflineLearningTaskMail : TILanguageModelOfflineLearningTask
{
    NSCharacterSet *_linePaddingCharacters;
    NSSet *_forwardedMessageSeparators;
    id <TILinguisticDataSource> _dataSource;
}

- (id)dataSource;
- (id)forwardedMessageSeparators;
- (id)linePaddingCharacters;
- (id)initWithClientIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface TILanguageModelOfflineLearningTaskMessages : TILanguageModelOfflineLearningTask
{
    id <TILinguisticDataSource> _dataSource;
}

- (id)dataSource;
- (id)initWithClientIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface TIDictionaryUpdateManager : NSObject
{
    _Bool _assetDownloadingEnabled;
    void *_mobileAssetFrameworkFileHandle;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSDictionary *_inputModeAssets;
    TIMobileAssetTimer *_timer;
}

+ (id)sharedDictionaryUpdateManager;
@property(retain, nonatomic) TIMobileAssetTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSDictionary *inputModeAssets; // @synthesize inputModeAssets=_inputModeAssets;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (oneway void)fetchSpellCheckAssetsWithContinuation:(CDUnknownBlockType)arg1;
- (id)assetQueryForSpellChecker;
- (oneway void)handleUninstalledAsset:(id)arg1 withError:(id)arg2 continuation:(CDUnknownBlockType)arg3;
- (oneway void)fetchAssetsForQueryResults:(id)arg1 withError:(id)arg2 updatingArray:(id)arg3 continuation:(CDUnknownBlockType)arg4;
- (oneway void)fetchAssetsWithName:(id)arg1 continuation:(CDUnknownBlockType)arg2;
- (oneway void)fetchAssetsWithNames:(id)arg1 forInputModes:(id)arg2 updatingDictionary:(id)arg3 continuation:(CDUnknownBlockType)arg4;
- (void)fetchAssets;
- (void)didFetchAssets;
- (id)assetQueryForType:(id)arg1;
- (id)versionString;
- (id)mobileAssetConstant:(const char *)arg1;
- (void)unloadMobileAssetLibrary;
- (_Bool)loadMobileAssetLibrary;
- (void)appleKeyboardsInternalSettingsChanged:(id)arg1;
- (void)scheduleDownload;
@property(nonatomic) _Bool assetDownloadingEnabled;
- (id)dictionaryUpdatePathsForInputMode:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TIKeyboardInputManagerConfig : NSObject
{
    _Bool _allowsSpaceCorrections;
    _Bool _usesTextChecker;
    _Bool _usesRetrocorrection;
    _Bool _usesWordNgramModel;
    _Bool _usesWordNgramModelAdaptation;
    _Bool _completionsShouldSharePrefix;
    _Bool _testing;
    TIInputMode *_inputMode;
    NSString *_staticDictionaryPath;
    NSString *_dynamicDictionaryPath;
    NSString *_ngramModelPath;
    unsigned long long _maxWordsPerPrediction;
}

+ (id)configurationForInputMode:(id)arg1;
@property(nonatomic, getter=isTesting) _Bool testing; // @synthesize testing=_testing;
@property(nonatomic) _Bool completionsShouldSharePrefix; // @synthesize completionsShouldSharePrefix=_completionsShouldSharePrefix;
@property(nonatomic) unsigned long long maxWordsPerPrediction; // @synthesize maxWordsPerPrediction=_maxWordsPerPrediction;
@property(nonatomic) _Bool usesWordNgramModelAdaptation; // @synthesize usesWordNgramModelAdaptation=_usesWordNgramModelAdaptation;
@property(nonatomic) _Bool usesWordNgramModel; // @synthesize usesWordNgramModel=_usesWordNgramModel;
@property(nonatomic) _Bool usesRetrocorrection; // @synthesize usesRetrocorrection=_usesRetrocorrection;
@property(nonatomic) _Bool usesTextChecker; // @synthesize usesTextChecker=_usesTextChecker;
@property(nonatomic) _Bool allowsSpaceCorrections; // @synthesize allowsSpaceCorrections=_allowsSpaceCorrections;
@property(copy, nonatomic) NSString *ngramModelPath; // @synthesize ngramModelPath=_ngramModelPath;
@property(copy, nonatomic) NSString *dynamicDictionaryPath; // @synthesize dynamicDictionaryPath=_dynamicDictionaryPath;
@property(copy, nonatomic) NSString *staticDictionaryPath; // @synthesize staticDictionaryPath=_staticDictionaryPath;
@property(retain, nonatomic) TIInputMode *inputMode; // @synthesize inputMode=_inputMode;
- (id)propertyList;
- (void)dealloc;

@end

@interface TILanguageModelMaintainer : NSObject
{
    NSDate *_nextEligibleMaintenanceDate;
    NSTimer *_timer;
    NSTimer *_dynamicLearningCacheTimer;
}

+ (id)sharedLanguageModelMaintainer;
@property(retain, nonatomic) NSTimer *dynamicLearningCacheTimer; // @synthesize dynamicLearningCacheTimer=_dynamicLearningCacheTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSDate *nextEligibleMaintenanceDate; // @synthesize nextEligibleMaintenanceDate=_nextEligibleMaintenanceDate;
- (void)dynamicLearningCacheTimerFired:(id)arg1;
- (void)timerFired:(id)arg1;
- (void)keyboardAssertionsDidChange:(id)arg1;
- (void)touchDynamicLearningCacheTimer;
- (void)touchTimer;
- (id)init;
- (void)dealloc;

@end

@interface TIAutoshiftRegularExpressionLoader : NSObject
{
    NSRegularExpression *_regex;
    NSString *_sentenceDelimitingCharacters;
    NSString *_sentenceTrailingCharacters;
    NSString *_nextSentencePrefixCharacters;
}

+ (id)loaderWithSentenceDelimiters:(id)arg1 trailingChars:(id)arg2 prefixChars:(id)arg3;
@property(readonly, nonatomic) NSString *nextSentencePrefixCharacters; // @synthesize nextSentencePrefixCharacters=_nextSentencePrefixCharacters;
@property(readonly, nonatomic) NSString *sentenceTrailingCharacters; // @synthesize sentenceTrailingCharacters=_sentenceTrailingCharacters;
@property(readonly, nonatomic) NSString *sentenceDelimitingCharacters; // @synthesize sentenceDelimitingCharacters=_sentenceDelimitingCharacters;
@property(retain, nonatomic) NSRegularExpression *regex; // @synthesize regex=_regex;
- (void)startBackgroundLoad;
- (id)initWithSentenceDelimiters:(id)arg1 trailingChars:(id)arg2 prefixChars:(id)arg3;
- (void)dealloc;

@end

@interface TIPersistentQueue : NSObject
{
    NSURL *_presentedItemURL;
}

- (void)dequeueObjects:(CDUnknownBlockType)arg1;
- (void)enqueueObjects:(CDUnknownBlockType)arg1;
- (void)readObjects:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface TITypologyStatistic : NSObject
{
}

+ (id)statistic;
@property(readonly, nonatomic) NSDictionary *structuredReport;
- (void)finalizeComputation;
- (void)prepareForComputation;
- (void)visitRecordLastAcceptedCandidateCorrected:(id)arg1;
- (void)visitRecordCandidateRejected:(id)arg1;
- (void)visitRecordTextAccepted:(id)arg1;
- (void)visitRecordSetOriginalInput:(id)arg1;
- (void)visitRecordPhraseBoundaryAdjustment:(id)arg1;
- (void)visitRecordSkipHitTest:(id)arg1;
- (void)visitRecordHitTest:(id)arg1;
- (void)visitRecordRefinements:(id)arg1;
- (void)visitRecordReplacements:(id)arg1;
- (void)visitRecordAcceptedCandidate:(id)arg1;
- (void)visitRecordCandidateResultSet:(id)arg1;
- (void)visitRecordAutocorrections:(id)arg1;
- (void)visitRecordKeyboardInput:(id)arg1;
- (void)visitRecordSync:(id)arg1;
- (void)visitTypologyRecord:(id)arg1;
- (void)visitTypologyRecords:(id)arg1;

@end

@interface TITypologyStatisticBasicCounts : TITypologyStatisticCurrentAutocorrections
{
    long long _touchCount;
    long long _characterCount;
    long long _predictedCharacterCount;
    long long _backspaceCount;
    long long _autocorrectionCount;
    long long _rejectedCandidateCount;
    long long _backspaceIntoAutocorrectionCount;
    NSMutableString *_recentText;
    NSMutableArray *_recentAutocorrectionLocations;
}

@property(readonly, nonatomic) NSMutableArray *recentAutocorrectionLocations; // @synthesize recentAutocorrectionLocations=_recentAutocorrectionLocations;
@property(readonly, nonatomic) NSMutableString *recentText; // @synthesize recentText=_recentText;
@property(readonly, nonatomic) long long backspaceIntoAutocorrectionCount; // @synthesize backspaceIntoAutocorrectionCount=_backspaceIntoAutocorrectionCount;
@property(readonly, nonatomic) long long rejectedCandidateCount; // @synthesize rejectedCandidateCount=_rejectedCandidateCount;
@property(readonly, nonatomic) long long autocorrectionCount; // @synthesize autocorrectionCount=_autocorrectionCount;
@property(readonly, nonatomic) long long backspaceCount; // @synthesize backspaceCount=_backspaceCount;
@property(readonly, nonatomic) long long predictedCharacterCount; // @synthesize predictedCharacterCount=_predictedCharacterCount;
@property(readonly, nonatomic) long long characterCount; // @synthesize characterCount=_characterCount;
@property(readonly, nonatomic) long long touchCount; // @synthesize touchCount=_touchCount;
- (void)visitRecordCandidateRejected:(id)arg1;
- (void)visitRecordTextAccepted:(id)arg1;
- (void)visitRecordSkipHitTest:(id)arg1;
- (void)visitRecordHitTest:(id)arg1;
- (void)visitRecordKeyboardInput:(id)arg1;
- (void)visitRecordSync:(id)arg1;
- (void)updateTextWithAcceptedCandidate:(id)arg1;
- (void)handleTouch:(id)arg1;
- (id)structuredReport;
- (void)dealloc;
- (id)init;

@end

@interface TITypologyStatisticCurrentAutocorrections : TITypologyStatistic
{
    TIAutocorrectionList *_autocorrections;
}

@property(retain, nonatomic) TIAutocorrectionList *autocorrections; // @synthesize autocorrections=_autocorrections;
- (void)visitRecordAutocorrections:(id)arg1;
- (void)dealloc;

@end

@interface TITypologyStatisticRankCandidatesAccepted : TITypologyStatisticCurrentAutocorrections
{
    NSMutableDictionary *_histogram;
    long long _lengthOfSelectedCandidates;
    long long _lengthOfSelectedPredictions;
}

@property(readonly, nonatomic) long long lengthOfSelectedPredictions; // @synthesize lengthOfSelectedPredictions=_lengthOfSelectedPredictions;
@property(readonly, nonatomic) long long lengthOfSelectedCandidates; // @synthesize lengthOfSelectedCandidates=_lengthOfSelectedCandidates;
@property(readonly, nonatomic) NSDictionary *histogram; // @synthesize histogram=_histogram;
- (void)visitRecordKeyboardInput:(id)arg1;
- (void)rankAndCountSelectedCandidate:(id)arg1;
- (void)countSelectedCandidate:(id)arg1 withRank:(unsigned long long)arg2;
- (void)countSelectedPrediction:(id)arg1 withRank:(unsigned long long)arg2;
- (_Bool)isCandidatePrediction:(id)arg1;
- (void)countSelectedInputStringToRejectAutocorrection;
- (void)countSelectedInputString;
- (void)countSelectedAutocorrection:(id)arg1;
- (void)addLengthOfSelectedPrediction:(id)arg1;
- (void)addLengthOfSelectedCandidate:(id)arg1;
- (unsigned long long)rankOfCandidate:(id)arg1;
- (id)structuredReport;
- (void)dealloc;
- (id)init;

@end

@interface TITypologyTimer : NSObject
{
    _Bool _foundFirstInput;
    double _elapsedTime;
    double _mostRecentTimestamp;
    double _maxTimeIntervalBetweenInputs;
}

@property(nonatomic) _Bool foundFirstInput; // @synthesize foundFirstInput=_foundFirstInput;
@property(nonatomic) double maxTimeIntervalBetweenInputs; // @synthesize maxTimeIntervalBetweenInputs=_maxTimeIntervalBetweenInputs;
@property(nonatomic) double mostRecentTimestamp; // @synthesize mostRecentTimestamp=_mostRecentTimestamp;
@property(nonatomic) double elapsedTime; // @synthesize elapsedTime=_elapsedTime;
- (void)addInputEventWithTimestamp:(double)arg1;

@end

@interface TITypologyStatisticTimeElapsed : TITypologyStatistic
{
    TITypologyTimer *_timer;
    TITypologyTimer *_adjustedTimer;
}

@property(retain, nonatomic) TITypologyTimer *adjustedTimer; // @synthesize adjustedTimer=_adjustedTimer;
@property(retain, nonatomic) TITypologyTimer *timer; // @synthesize timer=_timer;
- (void)visitRecordKeyboardInput:(id)arg1;
@property(readonly, nonatomic) double adjustedElapsedTime;
@property(readonly, nonatomic) double elapsedTime;
- (id)structuredReport;
- (void)dealloc;
- (id)init;

@end

@interface TITypologyStatisticAutocorrectionListUI : TITypologyStatistic
{
    _Bool _didSetListUIDisplayed;
    _Bool _listUIDisplayed;
    long long _inputsWhileHidden;
    long long _inputsWhileDisplayed;
    long long _hiddenToDisplayed;
    long long _displayedToHidden;
}

@property(readonly, nonatomic) long long displayedToHidden; // @synthesize displayedToHidden=_displayedToHidden;
@property(readonly, nonatomic) long long hiddenToDisplayed; // @synthesize hiddenToDisplayed=_hiddenToDisplayed;
@property(readonly, nonatomic) long long inputsWhileDisplayed; // @synthesize inputsWhileDisplayed=_inputsWhileDisplayed;
@property(readonly, nonatomic) long long inputsWhileHidden; // @synthesize inputsWhileHidden=_inputsWhileHidden;
- (void)visitRecordAutocorrections:(id)arg1;
- (void)visitRecordKeyboardInput:(id)arg1;
- (void)visitRecordSync:(id)arg1;
- (void)setListUIDisplayed:(_Bool)arg1;
- (void)addInputCount;
- (id)structuredReport;

@end

@interface TIWordSearchOperationGetCandidates : TIWordSearchOperation
{
    _Bool _predictionEnabled;
    _Bool _reanalysisMode;
    NSString *_inputString;
    TIWordSearchCandidateResultSet *_results;
    id _target;
    NSArray *_geometryModelData;
    SEL _action;
    TIWordSearch *_wordSearch;
    unsigned long long _autocapitalizationType;
    NSArray *_candidateContext;
    NSString *_stringContext;
}

@property(readonly, nonatomic) NSString *stringContext; // @synthesize stringContext=_stringContext;
@property(readonly, nonatomic) NSArray *candidateContext; // @synthesize candidateContext=_candidateContext;
@property(readonly, nonatomic) unsigned long long autocapitalizationType; // @synthesize autocapitalizationType=_autocapitalizationType;
@property(retain) TIWordSearch *wordSearch; // @synthesize wordSearch=_wordSearch;
@property(readonly, nonatomic) _Bool reanalysisMode; // @synthesize reanalysisMode=_reanalysisMode;
@property(readonly, nonatomic) _Bool predictionEnabled; // @synthesize predictionEnabled=_predictionEnabled;
@property(readonly, nonatomic) SEL action; // @synthesize action=_action;
@property(readonly, nonatomic) NSArray *geometryModelData; // @synthesize geometryModelData=_geometryModelData;
@property(readonly, nonatomic) id target; // @synthesize target=_target;
@property(retain, nonatomic) TIWordSearchCandidateResultSet *results; // @synthesize results=_results;
@property(readonly, nonatomic) NSString *inputString; // @synthesize inputString=_inputString;
- (void)completeSearchOnMainThreadWithResults:(id)arg1;
- (void)perform;
- (void)checkForCachedResults;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1 inputString:(id)arg2 predictionEnabled:(_Bool)arg3 reanalysisMode:(_Bool)arg4 autocapitalizationType:(unsigned long long)arg5 target:(id)arg6 action:(SEL)arg7 geometryModelData:(id)arg8 candidateContext:(id)arg9 stringContext:(id)arg10;

@end

@interface TIWordSearchOperation : NSOperation
{
}

- (void)main;
- (void)perform;

@end

@interface TIKeyboardAssertionManager : NSObject
{
    _Bool _hasAssertions;
    _Bool _pendingUpdate;
    NSHashTable *_assertions;
}

+ (id)sharedAssertionManager;
@property(readonly, nonatomic) NSHashTable *assertions; // @synthesize assertions=_assertions;
@property(nonatomic) _Bool pendingUpdate; // @synthesize pendingUpdate=_pendingUpdate;
@property(nonatomic) _Bool hasAssertions; // @synthesize hasAssertions=_hasAssertions;
- (void)removeAssertionForObject:(id)arg1;
- (void)addAssertionForObject:(id)arg1;
- (void)performUpdate;
- (void)scheduleUpdate;
- (id)init;
- (void)dealloc;

@end

@interface TIWordSearchOperationAcceptCandidate : TIWordSearchOperation
{
    void *_mecabraCandidate;
    _Bool _partialCandidate;
    TIMecabraWrapper *_mecabraWrapper;
}

@property(nonatomic, getter=isPartialCandidate) _Bool partialCandidate; // @synthesize partialCandidate=_partialCandidate;
@property(retain, nonatomic) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)perform;
- (void)cancel;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1 mecabraCandidate:(void *)arg2 isPartial:(_Bool)arg3;

@end

@interface TIWordSearchOperationCancelLastAcceptedCandidate : TIWordSearchOperation
{
    TIMecabraWrapper *_mecabraWrapper;
}

@property(retain, nonatomic) TIMecabraWrapper *mecabraWrapper; // @synthesize mecabraWrapper=_mecabraWrapper;
- (void)perform;
- (void)cancel;
- (void)dealloc;
- (id)initWithWordSearch:(id)arg1;

@end

@interface TIMecabraWrapper : NSObject
{
    struct __Mecabra *_mecabraRef;
}

@property(readonly) struct __Mecabra *mecabraRef; // @synthesize mecabraRef=_mecabraRef;
- (void)dealloc;
- (id)initWithMecabraRef:(struct __Mecabra *)arg1;

@end

@interface TIKeyboardInputManagerKeyboardContext : NSObject
{
    TIKeyboardOutput *_output;
    TIKeyboardState *_currentState;
    TIRevisionHistory *_revisionHistory;
}

@property(retain, nonatomic) TIRevisionHistory *revisionHistory; // @synthesize revisionHistory=_revisionHistory;
@property(readonly, nonatomic) TIKeyboardState *currentState; // @synthesize currentState=_currentState;
@property(readonly, nonatomic) TIKeyboardOutput *output; // @synthesize output=_output;
- (void)deleteHandwritingStrokes:(id)arg1;
- (void)acceptCandidate:(id)arg1;
- (void)unmarkText:(id)arg1;
- (void)deleteForward:(unsigned long long)arg1;
- (void)deleteBackward:(unsigned long long)arg1;
- (void)insertTextAfterSelection:(id)arg1;
- (void)insertText:(id)arg1;
- (void)clearInputForMarkedText;
- (id)initWithKeyboardState:(id)arg1;
- (void)dealloc;

@end

@interface TIKeyboardInputManager : TIKeyboardInputManagerBase
{
    TIKeyboardLayout *_keyLayout;
    TIKeyboardLayoutState *_layoutState;
    TIKeyboardInputManagerState *_currentState;
    TIKeyboardState *_keyboardState;
    unsigned long long _maxCandidateCount;
    CDUnknownBlockType _candidateGenerationCompletionHandler;
    struct _NSRange _candidateRange;
}

+ (void)removeAllDynamicDictionaries;
+ (void)removeDynamicDictionaryForInputMode:(id)arg1;
+ (id)dynamicDictionaryFilePathForInputMode:(id)arg1;
+ (id)userDictionaryWordKeyPairsFilePath;
+ (id)keyboardUserDirectory;
@property(copy, nonatomic) CDUnknownBlockType candidateGenerationCompletionHandler; // @synthesize candidateGenerationCompletionHandler=_candidateGenerationCompletionHandler;
@property(nonatomic) unsigned long long maxCandidateCount; // @synthesize maxCandidateCount=_maxCandidateCount;
@property(nonatomic) struct _NSRange candidateRange; // @synthesize candidateRange=_candidateRange;
@property(retain, nonatomic) TIKeyboardState *keyboardState; // @synthesize keyboardState=_keyboardState;
- (id).cxx_construct;
- (_Bool)acceptInputString:(id)arg1;
- (_Bool)acceptsCharacter:(unsigned int)arg1;
- (_Bool)stringEndsWord:(id)arg1;
- (id)remainingInput;
- (id)candidateResultSet;
- (id)didAcceptCandidate:(id)arg1;
- (id)internalStringToExternal:(id)arg1;
- (id)externalStringToInternal:(id)arg1;
- (unsigned int)inputCount;
- (unsigned int)inputIndex;
- (id)internalInputContext;
- (id)inputContext;
- (id)inputString;
- (void)clearInputContext;
- (_Bool)removeSuffixOfInputContext:(id)arg1;
- (void)appendToInputContext:(id)arg1;
- (void)inputLocationChanged;
- (void)trimInput;
- (void)dropInput;
- (void)clearInput;
- (void)acceptInput;
- (void)setInputStringFromDocumentState:(id)arg1;
- (id)deleteFromInput:(unsigned long long *)arg1;
- (id)addInput:(id)arg1 flags:(unsigned int)arg2 point:(struct CGPoint)arg3 firstDelete:(unsigned long long *)arg4 fromVariantKey:(_Bool)arg5;
- (id)deletedSuffixOfInputContext:(id)arg1 whenDeletingFromInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 deletionCount:(unsigned long long)arg4;
- (id)suffixOfDesiredString:(id)arg1 toAppendToInputString:(id)arg2 withInputIndex:(unsigned long long)arg3 afterDeletionCount:(unsigned long long *)arg4;
- (void)removeAllDynamicDictionaries;
- (void)lastAcceptedCandidateCorrected;
- (void)candidateRejected:(id)arg1;
- (void)textAccepted:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1;
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (long long)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
@property(retain, nonatomic) TIKeyboardLayout *keyLayout;
- (id)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2;
- (id)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2;
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)generateAutocorrectionsWithKeyboardState:(id)arg1;
- (void)deleteFromInputWithContext:(id)arg1;
- (_Bool)hasLegacyInputString;
- (_Bool)hasLegacyInputStem;
- (id)revisionHistory;
- (void)addInput:(id)arg1 withContext:(id)arg2;
- (id)handleKeyboardInput:(id)arg1;
- (id)keyboardConfiguration;
- (void)syncToKeyboardState:(id)arg1;
- (void)resume;
- (void)suspend;
- (void)acceptCurrentCandidateIfSelectedWithContext:(id)arg1;
- (void)acceptCurrentCandidateWithContext:(id)arg1;
- (id)candidateResultSetFromCandidates:(id)arg1;
- (id)sortMethodsShowExtensionCandidates;
- (id)sortMethodIndexes;
- (id)sortMethodsGroupsForCandidates:(id)arg1;
- (id)sortMethodTitles;
- (_Bool)shouldSkipCandidateSelection;
- (id)markedText;
- (void)setMarkedText;
- (void)setPhraseBoundaryIfNecessary;
- (id)contextBeforeWithDesiredLength:(unsigned long long)arg1;
- (id)inputStringFromDocumentState:(id)arg1;
- (id)inputsToReject;
- (id)wordCharacters;
- (_Bool)shouldAddModifierSymbolsToWordCharacters;
- (id)keyboardBehaviors;
- (id)rawInputString;
- (_Bool)shouldCommitInputString;
- (_Bool)keyboardConfigurationAssertDefaultKeyPlane;
- (id)keyboardConfigurationAccentKeyString;
- (id)keyboardConfigurationLayoutTag;
- (void)syncToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)syncInputStringToKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)syncMarkedTextForKeyboardState:(id)arg1 afterContextChange:(_Bool)arg2;
- (void)syncToLayoutState:(id)arg1;
- (void)incrementUsageTrackingKeyForAutocorrectionStatistic:(id)arg1 autocorrectionTypes:(unsigned int)arg2;
- (id)usageTrackingKeyForStatistic:(id)arg1;
- (void)closeCandidateGenerationContextWithResults:(id)arg1;
- (void)openCandidateGenerationContextWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshInputManagerState;
@property(readonly, nonatomic) TIKeyboardInputManagerState *currentState;
- (id)newInputManagerState;
- (id)initWithInputMode:(id)arg1;
- (void)dealloc;
- (_Bool)supportsNumberKeySelection;
- (id)indexTitlesForGroupTitles:(id)arg1 sortingMethod:(id)arg2;
- (void)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)groupedCandidatesFromCandidates:(id)arg1 usingSortingMethod:(id)arg2;
- (_Bool)alwaysShowExtensionCandidatesForSortingMethod:(id)arg1;
- (id)titleForSortingMethod:(id)arg1;
- (id)sortingMethods;
- (id)terminatorsPrecedingAutospace;
- (id)terminatorsDeletingAutospace;
- (id)terminatorsPreventingAutocorrection;
- (_Bool)nextInputWouldStartSentence;
- (id)wordSeparator;
- (id)replacementForDoubleSpace;
- (_Bool)suppressCompletionsForFieldEditor;
- (_Bool)suppliesCompletions;
- (id)searchStringForMarkedText;
- (id)shadowTyping;
- (unsigned long long)initialCandidateBatchCount;
- (unsigned long long)initialSelectedIndex;
- (id)defaultCandidate;
- (_Bool)suppressPlaceholderCandidate;
- (_Bool)usesAutoDeleteWord;
- (_Bool)commitsAcceptedCandidate;
- (_Bool)usesCandidateSelection;
- (_Bool)supportsSetPhraseBoundary;
- (unsigned long long)phraseBoundary;
- (void)setPhraseBoundary:(unsigned long long)arg1;
- (id)candidatesForString:(id)arg1;
- (id)candidates;
- (id)autocorrectionList;
- (id)autocorrection;
- (void)setLearnsCorrection:(_Bool)arg1;
- (void)setInSplitKeyboardMode:(_Bool)arg1;
- (void)setInHardwareKeyboardMode:(_Bool)arg1;
- (void)setKeyboardEventsLagging:(_Bool)arg1;
- (void)setAutocapitalizationType:(unsigned long long)arg1;
- (void)setAutocapitalizationEnabled:(_Bool)arg1;
- (void)setAutoCorrects:(_Bool)arg1;
- (_Bool)ignoresDeadKeys;
- (_Bool)shouldExtendPriorWord;
- (void)dynamicDictionariesRemoved:(id)arg1;
- (void)releaseDynamicLanguageModel;
- (void)clearDynamicDictionary;
- (id)keyEventMap;
- (long long)keyHitTest:(id)arg1;
- (void)registerKeyArea:(struct CGRect)arg1 keyCode:(short)arg2 keyString:(const char *)arg3;
- (void)clearKeyAreas;
- (_Bool)needsKeyHitTestResults;
- (_Bool)canHandleKeyHitTest;
- (id)shortcutConversionForDocumentState:(id)arg1;
- (id)shortcutCompletionsForDocumentState:(id)arg1;
- (unsigned long long)maximumShortcutLengthAllowed;
- (void)addSynthesizedTouchToInput:(id)arg1;
- (_Bool)isHardwareKeyboardAutocorrectionEnabled;

@end

@interface TIWordSearchCandidateResultSet : NSObject <NSCopying>
{
    NSMutableArray *_mutableCandidates;
    NSMutableDictionary *_mutableCandidateRefsDictionary;
    NSArray *_initiallyHiddenCandidates;
    unsigned long long _selectedHiddenCandidateIndex;
    NSArray *_autoconvertedCandidates;
    NSString *_autoconvertedCandidateString;
    NSString *_autoconvertedInputString;
}

+ (id)emptySet;
@property(retain, nonatomic) NSString *autoconvertedInputString; // @synthesize autoconvertedInputString=_autoconvertedInputString;
@property(retain, nonatomic) NSString *autoconvertedCandidateString; // @synthesize autoconvertedCandidateString=_autoconvertedCandidateString;
@property(copy, nonatomic) NSArray *autoconvertedCandidates; // @synthesize autoconvertedCandidates=_autoconvertedCandidates;
@property(nonatomic) unsigned long long selectedHiddenCandidateIndex; // @synthesize selectedHiddenCandidateIndex=_selectedHiddenCandidateIndex;
@property(copy, nonatomic) NSArray *initiallyHiddenCandidates; // @synthesize initiallyHiddenCandidates=_initiallyHiddenCandidates;
@property(retain, nonatomic) NSMutableDictionary *mutableCandidateRefsDictionary; // @synthesize mutableCandidateRefsDictionary=_mutableCandidateRefsDictionary;
@property(retain, nonatomic) NSMutableArray *mutableCandidates; // @synthesize mutableCandidates=_mutableCandidates;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)moveCandidate:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)setAutoconvertedMecabraCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
- (void)insertMecabraCandidate:(id)arg1 mecabraCandidateRef:(void *)arg2 atIndex:(unsigned long long)arg3;
- (void)addMecabraCandidate:(id)arg1 mecabraCandidateRef:(void *)arg2;
- (void)insertSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)addSyntheticMecabraCandidateWithSurface:(id)arg1 input:(id)arg2;
- (void)addCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
@property(readonly, retain, nonatomic) NSDictionary *candidateRefsDictionary;
@property(readonly, retain, nonatomic) NSArray *candidates;
- (void)dealloc;
- (id)initWithCandidates:(id)arg1 candidateRefsDictionary:(id)arg2;
- (id)initWithCandidates:(id)arg1 candidateRefsDictionary:(id)arg2 initiallyHiddenCandidates:(id)arg3 selectedHiddenCandidateIndex:(unsigned long long)arg4;
- (id)init;

@end

@interface TILanguageModelOfflineLearningAgent : NSObject
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSDictionary *_learningTaskClasses;
    NSMutableSet *_handledClients;
    TILanguageModelOfflineLearningTask *_currentLearningTask;
}

+ (id)filterMessages:(id)arg1;
+ (id)sharedLearningAgent;
@property(retain, nonatomic) TILanguageModelOfflineLearningTask *currentLearningTask; // @synthesize currentLearningTask=_currentLearningTask;
@property(readonly, nonatomic) NSMutableSet *handledClients; // @synthesize handledClients=_handledClients;
@property(readonly, nonatomic) NSDictionary *learningTaskClasses; // @synthesize learningTaskClasses=_learningTaskClasses;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void)handleRemovalOfLearnedModels;
- (void)performLearningIfNecessaryForClient:(id)arg1 withLastAdaptationTime:(double)arg2;
- (_Bool)continueLearningTask;
- (_Bool)learnMessages:(id)arg1 withRecipientNames:(id)arg2;
- (_Bool)incrementUsageCountsForMessages:(id)arg1 withAppContext:(id)arg2;
- (id)identifyLanguagesForMessages:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface TICryptographer : NSObject
{
    NSData *_deviceSalt;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSString *_cachedRecipientName;
    NSString *_cachedRecipientDigest;
}

+ (id)sharedCryptographer;
@property(copy, nonatomic) NSString *cachedRecipientDigest; // @synthesize cachedRecipientDigest=_cachedRecipientDigest;
@property(copy, nonatomic) NSString *cachedRecipientName; // @synthesize cachedRecipientName=_cachedRecipientName;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (id)appContextForClient:(id)arg1 andRecipientContactInfo:(id)arg2;
- (id)appContextForClient:(id)arg1 andRecipientName:(id)arg2;
- (id)stringDigestForName:(id)arg1;
@property(readonly, nonatomic) NSData *deviceSalt;
- (id)init;
- (void)dealloc;

@end

@interface TIMecabraIMLogger : NSObject
{
    NSMutableString *_loggedMessage;
}

+ (_Bool)isLoggingEnabled;
@property(retain, nonatomic) NSMutableString *loggedMessage; // @synthesize loggedMessage=_loggedMessage;
- (void)dealloc;
- (void)writeLogToFile;
- (void)endLoggingForInput:(id)arg1 atFinalTimeMark:(unsigned long long)arg2;
- (id)logFilePath;
- (void)markTime:(unsigned long long)arg1;
- (void)beginLogging;

@end

@interface TITypologyRecord : NSObject <NSCoding>
{
    double _timestamp;
}

@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (id)textSummaryForAutocorrection:(id)arg1;
- (id)textSummary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordSync : TITypologyRecord
{
    TIKeyboardState *_keyboardState;
    TIKeyboardConfiguration *_keyboardConfig;
}

@property(retain, nonatomic) TIKeyboardConfiguration *keyboardConfig; // @synthesize keyboardConfig=_keyboardConfig;
@property(retain, nonatomic) TIKeyboardState *keyboardState; // @synthesize keyboardState=_keyboardState;
- (id)textSummary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordKeyboardInput : TITypologyRecord
{
    TIKeyboardInput *_input;
    TIKeyboardOutput *_output;
    TIKeyboardConfiguration *_keyboardConfig;
}

@property(retain, nonatomic) TIKeyboardConfiguration *keyboardConfig; // @synthesize keyboardConfig=_keyboardConfig;
@property(retain, nonatomic) TIKeyboardOutput *output; // @synthesize output=_output;
@property(retain, nonatomic) TIKeyboardInput *input; // @synthesize input=_input;
- (id)textSummary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordAutocorrections : TITypologyRecord
{
    _Bool _listUIDisplayed;
    TIAutocorrectionList *_autocorrections;
}

@property(nonatomic) _Bool listUIDisplayed; // @synthesize listUIDisplayed=_listUIDisplayed;
@property(retain, nonatomic) TIAutocorrectionList *autocorrections; // @synthesize autocorrections=_autocorrections;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordCandidateResultSet : TITypologyRecord
{
    TIKeyboardCandidateResultSet *_resultSet;
}

@property(retain, nonatomic) TIKeyboardCandidateResultSet *resultSet; // @synthesize resultSet=_resultSet;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordAcceptedCandidate : TITypologyRecord
{
    TIKeyboardCandidate *_candidate;
    TIKeyboardConfiguration *_keyboardConfig;
    NSString *_textToCommit;
}

@property(copy, nonatomic) NSString *textToCommit; // @synthesize textToCommit=_textToCommit;
@property(retain, nonatomic) TIKeyboardConfiguration *keyboardConfig; // @synthesize keyboardConfig=_keyboardConfig;
@property(retain, nonatomic) TIKeyboardCandidate *candidate; // @synthesize candidate=_candidate;
- (id)textSummary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordReplacements : TITypologyRecord
{
    NSString *_string;
    TIKeyboardLayout *_keyLayout;
    NSArray *_candidates;
}

@property(retain, nonatomic) NSArray *candidates; // @synthesize candidates=_candidates;
@property(retain, nonatomic) TIKeyboardLayout *keyLayout; // @synthesize keyLayout=_keyLayout;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordRefinements : TITypologyRecord
{
    TIKeyboardCandidate *_candidate;
    TIAutocorrectionList *_refinements;
}

@property(retain, nonatomic) TIAutocorrectionList *refinements; // @synthesize refinements=_refinements;
@property(retain, nonatomic) TIKeyboardCandidate *candidate; // @synthesize candidate=_candidate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordHitTest : TITypologyRecord
{
    TIKeyboardTouchEvent *_touchEvent;
    TIKeyboardLayout *_keyLayout;
    long long _keyCode;
}

@property(nonatomic) long long keyCode; // @synthesize keyCode=_keyCode;
@property(retain, nonatomic) TIKeyboardLayout *keyLayout; // @synthesize keyLayout=_keyLayout;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEvent; // @synthesize touchEvent=_touchEvent;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordSkipHitTest : TITypologyRecord
{
    TIKeyboardTouchEvent *_touchEvent;
    TIKeyboardLayout *_keyLayout;
}

@property(retain, nonatomic) TIKeyboardLayout *keyLayout; // @synthesize keyLayout=_keyLayout;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEvent; // @synthesize touchEvent=_touchEvent;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordPhraseBoundaryAdjustment : TITypologyRecord
{
    _Bool _forwardAdjustment;
    TIKeyboardConfiguration *_keyboardConfig;
}

@property(retain, nonatomic) TIKeyboardConfiguration *keyboardConfig; // @synthesize keyboardConfig=_keyboardConfig;
@property(nonatomic) _Bool forwardAdjustment; // @synthesize forwardAdjustment=_forwardAdjustment;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordSetOriginalInput : TITypologyRecord
{
    NSString *_originalInput;
}

@property(copy, nonatomic) NSString *originalInput; // @synthesize originalInput=_originalInput;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordTextAccepted : TITypologyRecord
{
    TIKeyboardCandidate *_candidate;
}

@property(retain, nonatomic) TIKeyboardCandidate *candidate; // @synthesize candidate=_candidate;
- (id)textSummary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordCandidateRejected : TITypologyRecord
{
    TIKeyboardCandidate *_candidate;
}

@property(retain, nonatomic) TIKeyboardCandidate *candidate; // @synthesize candidate=_candidate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)applyToStatistic:(id)arg1;

@end

@interface TITypologyRecordLastAcceptedCandidateCorrected : TITypologyRecord
{
}

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)applyToStatistic:(id)arg1;

@end

@interface TIAddressBook : NSObject
{
    void *_addressBook;
    NSMutableArray *_observers;
}

- (void)addressBookChanged;
- (void)receiveTransientObserver:(CDUnknownBlockType)arg1;
- (void)removeObserver:(CDUnknownBlockType)arg1;
- (void)addObserver:(CDUnknownBlockType)arg1;
- (_Bool)hasObservers;
- (id)init;
- (void)dealloc;

@end

@interface TIKBDLogging : NSObject
{
}

+ (_Bool)canLogMessageAtLevel:(int)arg1;

@end

@interface TIAddressBookMecabraCache : NSObject
{
    _Bool _valid;
    NSArray *_nameReadingPairs;
}

@property(copy, nonatomic) NSArray *nameReadingPairs; // @synthesize nameReadingPairs=_nameReadingPairs;
@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
- (void)dealloc;

@end

@interface TIAddressBookMecabra : NSObject
{
    CDUnknownBlockType _addressBook;
    TIAddressBookMecabraCache *_cache;
    NSMutableArray *_observers;
}

+ (void)removeObserver:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)addObserver:(CDUnknownBlockType)arg1;
- (void)removeObserver:(CDUnknownBlockType)arg1;
- (void)addObserver:(CDUnknownBlockType)arg1;
- (_Bool)hasObservers;
- (id)init;
- (void)dealloc;

@end

@interface TIMobileAssetTimerImpl : NSObject
{
    CDUnknownBlockType _expirationHandler;
    NSTimer *_assetTimer;
}

+ (id)nextFireDateForDate:(id)arg1;
- (void)updateAssetTimer;
- (void)assetTimerFired;
- (void)invalidate;
- (void)dealloc;
- (id)initWithExpirationHandler:(CDUnknownBlockType)arg1;

@end

@interface TIMobileAssetTimer : NSObject
{
    TIMobileAssetTimerImpl *_impl;
}

+ (id)nextFireDateForDate:(id)arg1;
+ (id)scheduledTimerWithExpirationHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithExpirationHandler:(CDUnknownBlockType)arg1;

@end

@interface TIMecabraCandidate (TextInputCore)
+ (id)mecabraCandidateWithCandidateRef:(const void *)arg1 autoconvertedCandidates:(id)arg2;
+ (id)displayReadingFromMecabraCandidate:(void *)arg1;
+ (id)convertedInputFromMecabraCandidate:(void *)arg1;
- (id)initWithMecabraCandidate:(const void *)arg1;
@end

@interface TICompositeMecabraCandidate (TextInputCore)
- (id)initWithMecabraCandidate:(const void *)arg1 autoconvertedCandidates:(id)arg2;
@end

@interface NSManagedObject (TIUserDictionaryWordServer) <TIUserDictionaryEntry>
- (void)_copyAttributeValuesFromObject:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) NSString *phrase; // @dynamic phrase;
@property(copy, nonatomic) NSString *shortcut; // @dynamic shortcut;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSNumber *timestamp; // @dynamic timestamp;
@end

@interface NSCharacterSet (TextInputAdditions)
+ (id)punctuationAndWhitespaceCharacterSet;
@end

