//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct CGSize {
    double width;
    double height;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateBool _field1;
};

struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> {
    struct StateEnum _field1;
};

struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> {
    long long _field1;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
};

struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> {
    unsigned long long _field1;
};

struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _field1;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field2;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field3;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field4;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field5;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field6;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field7;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field8;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field9;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field10;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field11;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field12;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field13;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field14;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field15;
    unsigned long long _field16;
    struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> *_field17;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _field18;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _field1;
};

struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct StateBool {
    int _field1;
};

struct StateEnum {
    long long _field1;
};

struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _field1;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _field4;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field5;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field6;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field7;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field8;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _field9;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _field10;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _field11;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field12;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field13;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field14;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field15;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _field16;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _field17;
    _Bool _field18;
    _Bool _field19;
};

struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<unsigned long long, void *>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>;

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *_field1;
    struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *_field2;
    struct __compressed_pair<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> {
        struct TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes> *_field1;
    } _field3;
};

struct vector<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>> {
    struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field1;
    struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field2;
    struct __compressed_pair<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>**, std::__1::allocator<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>> {
        struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field1;
    } _field3;
};

struct vector<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>, std::__1::allocator<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>>> {
    struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field1;
    struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field2;
    struct __compressed_pair<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>*, std::__1::allocator<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>>> {
        struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct Device<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _field1;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandQueue<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field2;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Buffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field3;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field4;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field5;
    struct ObjectTrackingMap<GPUTools::SM::MTL::DepthStencilState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field6;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Library<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field7;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderPipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field8;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputePipelineState<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field9;
    struct ObjectTrackingMap<GPUTools::SM::MTL::CommandBuffer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field10;
    struct ObjectTrackingMap<GPUTools::SM::MTL::BlitCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field11;
    struct ObjectTrackingMap<GPUTools::SM::MTL::RenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field12;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ComputeCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field13;
    struct ObjectTrackingMap<GPUTools::SM::MTL::ParallelRenderCommandEncoder<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field14;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Function<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _field15;
    unsigned long long _field16;
    struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> *_field17;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _field18;
} Device_0c2dcd3a;

typedef struct Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    unsigned long long _field1;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field2;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field3;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::SM::MTL::StateBaseDefault> _field4;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field5;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field6;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field7;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field8;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _field9;
    struct DYStateElement<GPUTools::SM::MTL::StateBool, GPUTools::SM::MTL::StateBaseDefault> _field10;
    struct DYStateElement<long long, GPUTools::SM::MTL::StateBaseDefault> _field11;
    struct DYStateElement<GPUTools::SM::MTL::StateEnum, GPUTools::SM::MTL::StateBaseDefault> _field12;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field13;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field14;
    struct DYStateElement<unsigned long long, GPUTools::SM::MTL::StateBaseDefault> _field15;
    struct vector<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::allocator<GPUTools::SM::MTL::TextureSlice<GPUTools::SM::MTL::DefaultBaseObjectTypes>>> _field16;
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _field17;
    _Bool _field18;
    _Bool _field19;
} Texture_c52c606f;

typedef struct vector<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, std::__1::allocator<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>> {
    struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field1;
    struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field2;
    struct __compressed_pair<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>**, std::__1::allocator<const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>> {
        struct Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes> **_field1;
    } _field3;
} vector_9de75850;

typedef struct vector<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>, std::__1::allocator<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>>> {
    struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field1;
    struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field2;
    struct __compressed_pair<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>*, std::__1::allocator<std::__1::pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*>>> {
        struct pair<const GPUTools::SM::MTL::Texture<GPUTools::SM::MTL::DefaultBaseObjectTypes>*, const GPUTools::SM::MTL::Sampler<GPUTools::SM::MTL::DefaultBaseObjectTypes>*> *_field1;
    } _field3;
} vector_35abffad;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/GPUTools/PlugIns/MTLToolsAnalysisHeuristics.gtplugin/Contents/MacOS/MTLToolsAnalysisHeuristics
// UUID: F82DA480-3D5E-3FC3-8827-20FF854EA41F
//
//                           Arch: x86_64
//                 Source version: 16739.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../../PrivateFrameworks
//                               = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/PrivateFrameworks
//

@interface DYMTLAnalyzerHeuristic_Attachments : DYMTLAnalyzerHeuristic
{
    struct CGSize _screenSize;
    BOOL _initializedScreenSize;
}

+ (id)identifier;
- (id).cxx_construct;
- (void)_emitAttachmentSizeWarning:(const struct Function *)arg1 forTexture:(unsigned long long)arg2;
- (void)_checkDrawableAttachmentSizes:(const struct Function *)arg1;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (struct CGSize)_screenSize;
- (id)init;

@end

@interface DYMTLAnalyzerHeuristic_FrameStatistics : DYMTLAnalyzerHeuristic
{
    int numDrawCallsCurrFrame;
    DYAnalyzerFinding *currFinding;
}

+ (id)identifier;
- (void).cxx_destruct;
- (void)outputStreamStatistics;
- (void)resetStreamStatistics;
- (void)endBlock:(int)arg1;
- (void)startBlock:(int)arg1;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (id)init;

@end

@interface DYMTLAnalyzerHeuristic_DeltaGen : DYMTLAnalyzerHeuristic
{
    struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> _texturesWithLoadActionLoad;
}

+ (id)identifier;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_reportUnrestoredTextureForFunction:(const struct Function *)arg1 texture:(unsigned long long)arg2;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (id)init;

@end

@interface DYMTLAnalyzerHeuristic_Texture : DYMTLAnalyzerHeuristic
{
    NSMutableSet *texturesUsedForDrawing;
    NSMutableSet *nonMipmapTexturesUsedForDrawing;
}

+ (id)identifier;
- (void).cxx_destruct;
- (void)_recommendMipmapping:(const struct Function *)arg1 texture:(unsigned long long)arg2;
- (void)_reportMipmapsAvailableWithoutMipFilter:(const struct Function *)arg1 texture:(unsigned long long)arg2;
- (void)_reportEnableMipmappingOnUnitSizeTexture:(const struct Function *)arg1 texture:(unsigned long long)arg2 textureType:(unsigned long long)arg3;
- (void)_reportTextureFormatIsNotTextureFilterable:(const struct Function *)arg1 texture:(unsigned long long)arg2 pixelFormat:(unsigned long long)arg3;
- (void)_recommendCompactTextureFormat:(const struct Function *)arg1 texture:(unsigned long long)arg2;
- (void)_mentionNoAnisoFiltering:(const struct Function *)arg1;
- (void)_mentionBilinearFiltering:(const struct Function *)arg1;
- (id)_generateTextureFindingWithKind:(id)arg1 warningLevel:(int)arg2 classifications:(unsigned int)arg3 details:(id)arg4 url:(id)arg5 texture:(unsigned long long)arg6;
- (BOOL)_isTextureMipWorthy:(const Texture_c52c606f *)arg1;
- (BOOL)_isPixelFormatTextureFilterable:(unsigned long long)arg1;
- (void)_checkTextureSamplerUsesForFunc:(const struct Function *)arg1 smTextureSamplerUses:(vector_35abffad *)arg2;
- (void)_checkSamplersForFunc:(const struct Function *)arg1 smSamplers:(vector_9de75850 *)arg2;
- (void)_getBoundTextureSamplerUses:(vector_35abffad *)arg1 forSMDevice:(Device_0c2dcd3a *)arg2 forFunc:(const struct Function *)arg3;
- (void)_getBoundSamplers:(vector_9de75850 *)arg1 forSMDevice:(Device_0c2dcd3a *)arg2 forFunc:(const struct Function *)arg3;
- (void)notifyCompletion;
- (void)processFunction:(const struct Function *)arg1 stateMirrorRetCode:(unsigned int)arg2;
- (id)init;

@end

@interface DYMTLAnalyzerEngineFactory : DYAnalyzerEngineFactory
{
}

- (unsigned int)_supportedGraphicsAPI;
- (id)newAnalyzerEngine;

@end

