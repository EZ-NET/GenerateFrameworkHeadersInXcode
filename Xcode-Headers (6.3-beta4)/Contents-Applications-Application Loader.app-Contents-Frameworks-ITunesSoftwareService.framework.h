//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/ITunesSoftwareService
// UUID: 3ACB965D-BD59-3EA5-826F-9999F920332D
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 300.20.0.0.0
//       Minimum Mac OS X version: 10.8.0
//                    SDK version: 10.8.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../..
//                               = /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/Frameworks
//

@protocol BundleDescriberContext <NSObject>
- (void)addWarnings:(NSArray *)arg1;
- (void)addWarning:(NSError *)arg1;
- (NSArray *)warnings;
- (void)addErrors:(NSArray *)arg1;
- (void)addError:(NSError *)arg1;
- (NSArray *)errors;
- (NSArray *)bundles;
- (void)addBundle:(id <BundleDescriberContext>)arg1;
@end

@protocol ITunesApplicationSPIExtractorWorkerDelegate <NSObject>

@optional
- (void)workerDidExtractFiles:(ITunesApplicationSPIExtractorWorker *)arg1;
@end

@protocol ITunesFirenzeSoftwareValidationConfiguration <NSObject>
- (NSArray *)productFilesToSendOverride;
- (NSArray *)supportedProductArchitectures;
- (NSString *)productMetadataTemplate;
- (BOOL)validateFirenzeSPIUsage;
- (BOOL)validateProductRequiredArchitectures;
- (BOOL)validateProductSupportedArchitectures;
- (BOOL)validateProductBundleArchitectures;
- (BOOL)validateProductArchitectures;
- (BOOL)validateProductSymlinkResolvesLocally;
- (BOOL)validateProductSymlinkExists;
- (BOOL)validateProductMetadataServerSide;
- (BOOL)validateProductErrors;
- (BOOL)validateProductSignature;
@end

@protocol ITunesPurpleSoftwareValidationConfiguration <NSObject>
- (NSString *)metadataTemplate;
- (NSArray *)filesToSendOverride;
- (NSArray *)disallowedPaths;
- (NSArray *)deviceFamilyOverrides;
- (NSArray *)supportedArchitectures;
- (BOOL)validatePurpleSPIUsage;
- (BOOL)validateSymlinkResolvesLocally;
- (BOOL)validateSymlinkExists;
- (BOOL)validateCodesignEntitlements;
- (BOOL)validateRequiredArchitectures;
- (BOOL)validateSupportedArchitectures;
- (BOOL)validateFatArchitecturesBasedOnMinimumOSVersion;
- (BOOL)serverSideVerification;
- (BOOL)validateCodeResources;
- (BOOL)requireDeviceFamily;
- (BOOL)validateDeviceFamily;
- (BOOL)validateBundleResource;
- (BOOL)validateIconSize;
- (BOOL)validatePayload;
- (BOOL)validateIcon;
- (BOOL)validateZip;
@end

@protocol ITunesSoftwareApplicationDescription <ITunesSoftwareBundleDescription>
- (NSString *)alertMessage;
- (NSString *)positiveOperatingSystemQualificationQuestionVersion;
- (NSString *)operatingSystemQualificationQuestion;
- (NSString *)appleId;
- (NSDictionary *)attributes;
@end

@protocol ITunesSoftwareBundleDescription <NSObject>
- (int)applicationType;
- (NSString *)existingBundleIdentifier;
- (NSString *)displayableDescription;
@end

@protocol ITunesSoftwareCodesignApplication <NSObject>
- (NSString *)filename;
- (NSString *)bundleIdentifier;
@end

@protocol ITunesSoftwareCodesignParameter <NSObject>
- (NSString *)signingIdentifier;
- (NSString *)designatedRequirement;
- (id <ITunesSoftwareCodesignApplication>)application;
@end

@protocol ITunesSoftwareExtensionVersionDescription <ITunesSoftwareVersionDescription>
@end

@protocol ITunesSoftwareService <ITunesSoftwareServiceDeprecated>
- (id <ITunesSoftwareServiceSymbolURLResponse>)symbolURLsForApplicationVersion:(id <ITunesSoftwareApplicationVersionDescription>)arg1 authenticationServiceResponse:(NSData *)arg2;
- (id <ITunesSoftwareServiceApplicationVersionsResponse>)applicationVersionsOfApplication:(id <ITunesSoftwareApplicationDescription>)arg1 authenticationServiceResponse:(NSData *)arg2;
- (id <ITunesSoftwareServiceApplicationsResponse>)allApplicationsWithAuthenticationServiceResponse:(NSData *)arg1;
- (id <ITunesSoftwareServiceApplicationsResponse>)contentHostedInAppPurchasesForApplication:(id <ITunesSoftwareApplicationDescription>)arg1 authenticationServiceResponse:(NSData *)arg2;
- (id <ITunesSoftwareServiceApplicationsResponse>)applicationsWithContentHostedInAppPurchasesWithAuthenticationServiceResponse:(NSData *)arg1;
- (id <ITunesSoftwareServiceUploadResponse>)uploadApplicationArchiveAtPath:(NSString *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 delegate:(id <ITunesSoftwareServiceUploadDelegate>)arg4 userInfo:(NSDictionary *)arg5;
- (id <ITunesSoftwareServiceConnectedValidationResponse>)validateApplicationArchiveAtPath:(NSString *)arg1 authenticationServiceResponse:(NSData *)arg2;
- (id <ITunesSoftwareServiceSPIUsageResponse>)validateSPIUsageWithBinaryContentsAtPath:(NSString *)arg1 authenticationServiceResponse:(NSData *)arg2 type:(int)arg3 delegate:(id <ITunesSoftwareServiceSPIDelegate>)arg4;
- (NSArray *)validateApplicationArchiveAtPath:(NSString *)arg1 type:(int)arg2;
- (NSArray *)validateApplicationAtPath:(NSString *)arg1 type:(int)arg2;
@end

@protocol ITunesSoftwareServiceApplicationVersionsResponse <ITunesSoftwareServiceResponse>
- (NSString *)alertMessage;
- (NSArray *)applicationVersions;
@end

@protocol ITunesSoftwareServiceApplicationsResponse <ITunesSoftwareServiceResponse>
- (NSString *)alertMessage;
- (NSArray *)applications;
@end

@protocol ITunesSoftwareServiceCodesignParametersResponse <ITunesSoftwareServiceResponse>
- (NSArray *)parameters;
@end

@protocol ITunesSoftwareServiceConnectedValidationResponse <ITunesSoftwareServiceSPIUsageResponse>
@end

@protocol ITunesSoftwareServiceDeprecated <NSObject>
- (id <ITunesSoftwareServiceUploadResponse>)uploadApplicationArchiveAtPath:(NSString *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 application:(id <ITunesSoftwareApplicationDescription>)arg4 delegate:(id <ITunesSoftwareServiceUploadDelegate>)arg5 userInfo:(NSDictionary *)arg6;
- (id <ITunesSoftwareServiceApplicationsResponse>)contentHostedInAppPurchasesForApplication:(id <ITunesSoftwareApplicationDescription>)arg1 username:(NSString *)arg2 password:(NSString *)arg3;
- (id <ITunesSoftwareServiceApplicationsResponse>)applicationsWithContentHostedInAppPurchasesForUsername:(NSString *)arg1 password:(NSString *)arg2;
- (id <ITunesSoftwareServiceApplicationsResponse>)applicationsEligibleForUploadForUsername:(NSString *)arg1 password:(NSString *)arg2;
- (id <ITunesSoftwareServiceConnectedValidationResponse>)validateApplicationArchiveAtPath:(NSString *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 application:(id <ITunesSoftwareApplicationDescription>)arg4;
- (id <ITunesSoftwareServiceSPIUsageResponse>)validateSPIUsageWithBinaryContentsAtPath:(NSString *)arg1 username:(NSString *)arg2 password:(NSString *)arg3 type:(int)arg4 delegate:(id <ITunesSoftwareServiceSPIDelegate>)arg5;
- (NSArray *)validateApplicationArchiveAtPath:(NSString *)arg1;
- (NSArray *)validateApplicationAtPath:(NSString *)arg1;
@end

@protocol ITunesSoftwareServiceResponse <NSObject>
- (NSArray *)infoMessages;
- (NSArray *)warnings;
- (NSArray *)errors;
- (BOOL)isCancelled;
- (BOOL)isSuccessful;
@end

@protocol ITunesSoftwareServiceSPIUsageResponse <ITunesSoftwareServiceResponse>
- (NSData *)clientInfoFileContents;
@end

@protocol ITunesSoftwareServiceSymbolURLResponse <ITunesSoftwareServiceResponse>
- (NSDictionary *)urls;
@end

@protocol ITunesSoftwareServiceUploadResponse <ITunesSoftwareServiceConnectedValidationResponse>
- (NSError *)sendUploadFailureToApple;
- (BOOL)isUploadFailure;
@end

@protocol ITunesSoftwareServiceValidationConfiguration <ITunesPurpleSoftwareValidationConfiguration, ITunesFirenzeSoftwareValidationConfiguration>
@end

@protocol ITunesSoftwareVersionDescription <ITunesSoftwareBundleDescription>
- (NSDictionary *)binaryUUIDs;
- (NSString *)version;
- (NSString *)shortVersion;
- (NSString *)marketingVersion;
@end

@protocol ITunesSoftwareXPCServiceVersionDescription <ITunesSoftwareVersionDescription>
@end

@protocol NSObject
- (NSString *)description;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (struct _NSZone *)zone;
- (id)self;
- (Class)class;
- (Class)superclass;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@optional
- (NSString *)debugDescription;
@end

@interface ITunesSoftwareService : NSObject
{
}

+ (id)service;

@end

@interface ITunesSoftwareApplicationDescription : ITunesSoftwareBundleDescription <ITunesSoftwareApplicationDescription>
{
    NSDictionary *_attributes;
    NSDictionary *_fullAttributes;
    NSString *_appleId;
    NSString *_alertMessage;
    NSMutableDictionary *_userInfo;
}

- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)userInfo;
- (id)positiveOperatingSystemQualificationQuestionVersion;
- (id)operatingSystemQualificationQuestion;
- (void)setAlertMessage:(id)arg1;
- (id)alertMessage;
- (void)setAppleId:(id)arg1;
- (id)appleId;
- (void)setFullAttributes:(id)arg1;
- (id)fullAttributes;
- (void)setAttributes:(id)arg1;
- (id)attributes;
- (void)dealloc;
- (id)init;

@end

@interface ITunesSoftwareServiceImpl : NSObject <ITunesSoftwareService>
{
    NSRecursiveLock *_lock;
}

+ (id)loadValidationConfiguration;
+ (id)validationConfigurationFromFile:(id)arg1;
+ (id)validationConfigurationFromData:(id)arg1;
+ (id)configurationPaths;
+ (void)registerValidationConfiguration:(id)arg1;
+ (id)persistValidationConfiguration:(id)arg1;
+ (id)persistValidationConfigurationDictionary:(id)arg1;
+ (id)persistValidationConfigurationData:(id)arg1;
+ (id)validationConfigurationPersistentFile;
+ (id)validationConfigurationFilename;
+ (id)validationConfigurationPersistentVersionedDirectory;
+ (id)validationConfigurationPersistentDirectory;
+ (id)createDirectories:(id)arg1;
+ (void)initialize;
+ (void)setupITunesSoftwareServiceConfigurationPath;
+ (id)verifyTransporterEmbeddedJavaIsPresentIfRequired;
+ (void)setupTransporterLocationIfAvailable;
+ (id)overridenTransporterPath;
+ (id)transporterPaths;
+ (id)relativeTransporterPath;
+ (id)applicationLoaderTransporterPath;
+ (id)applicationLoaderResourcesPath;
+ (id)applicationLoaderBinariesPath;
+ (id)applicationLoaderBundle;
+ (BOOL)isExecutableAtPath:(id)arg1;
- (id)validateApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 application:(id)arg4;
- (id)validateApplicationArchiveAtPath:(id)arg1 authenticationServiceResponse:(id)arg2;
- (id)validateSPIUsageWithBinaryContentsAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 type:(int)arg4 delegate:(id)arg5;
- (id)contentHostedInAppPurchasesForApplication:(id)arg1 username:(id)arg2 password:(id)arg3;
- (id)applicationsWithContentHostedInAppPurchasesForUsername:(id)arg1 password:(id)arg2;
- (id)applicationsEligibleForUploadForUsername:(id)arg1 password:(id)arg2 operation:(id *)arg3 workSeries:(id *)arg4;
- (id)applicationWithAttributesWorker:(id)arg1 operationPtr:(id *)arg2 workSeriesPtr:(id *)arg3;
- (id)applicationForBundleIdentifier:(id)arg1 username:(id)arg2 password:(id)arg3 operation:(id *)arg4 workSeries:(id *)arg5;
- (id)applicationForBundleIdentifier:(id)arg1 authenticationServiceResponse:(id)arg2 operation:(id *)arg3 workSeries:(id *)arg4;
- (id)applicationForBundleIdentifier:(id)arg1 authenticationServiceResponse:(id)arg2;
- (id)codesignParametersForUsername:(id)arg1 password:(id)arg2 type:(int)arg3 mainApplication:(id)arg4 otherApplications:(id)arg5;
- (id)applicationsEligibleForUploadForUsername:(id)arg1 password:(id)arg2 error:(id *)arg3 operation:(id *)arg4 workSeries:(id *)arg5;
- (id)applicationsEligibleForUploadForUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4 delegate:(id)arg5 userInfo:(id)arg6;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4 delegate:(id)arg5;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4 delegate:(id)arg5 userInfo:(id)arg6 workSeries:(id *)arg7;
- (id)validateApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 description:(id)arg4;
- (id)validateApplicationArchiveAtPath:(id)arg1;
- (id)validateApplicationAtPath:(id)arg1;
- (id)extractProductIdentifierAndVersionInfoFromArchiveAtPath:(id)arg1 errors:(id *)arg2;
- (id)applicationsWithContentHostedInAppPurchasesWithAuthenticationServiceResponse:(id)arg1;
- (id)inAppPurchasesForApplication:(id)arg1 username:(id)arg2 password:(id)arg3;
- (id)applicationsWithInAppPurchasesForUsername:(id)arg1 password:(id)arg2;
- (id)applicationsEligibleForUploadForUsername:(id)arg1 password:(id)arg2;
- (id)contentHostedInAppPurchasesForApplication:(id)arg1 authenticationServiceResponse:(id)arg2 operation:(id *)arg3 workSeries:(id *)arg4;
- (id)contentHostedInAppPurchasesForApplication:(id)arg1 authenticationServiceResponse:(id)arg2;
- (id)applicationsWithContentHostedInAppPurchasesWithAuthenticationServiceResponse:(id)arg1 operation:(id *)arg2 workSeries:(id *)arg3;
- (id)symbolURLsForApplicationVersion:(id)arg1 authenticationServiceResponse:(id)arg2;
- (id)applicationVersionsOfApplication:(id)arg1 authenticationServiceResponse:(id)arg2;
- (id)allApplicationsWithAuthenticationServiceResponse:(id)arg1 error:(id *)arg2 operation:(id *)arg3 workSeries:(id *)arg4;
- (id)allApplicationsWithAuthenticationServiceResponse:(id)arg1;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 delegate:(id)arg4 userInfo:(id)arg5;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 application:(id)arg4 delegate:(id)arg5 userInfo:(id)arg6 workSeries:(id *)arg7;
- (id)uploadApplicationArchiveAtPath:(id)arg1 username:(id)arg2 password:(id)arg3 application:(id)arg4 delegate:(id)arg5 userInfo:(id)arg6;
- (id)validateApplicationArchiveAtPath:(id)arg1 authenticationServiceResponse:(id)arg2 application:(id)arg3;
- (id)bundleIdentifierForArchiveAtPath:(id)arg1 error:(id *)arg2;
- (id)validateSPIUsageWithBinaryContentsAtPath:(id)arg1 authenticationServiceResponse:(id)arg2 type:(int)arg3 delegate:(id)arg4;
- (id)convertResultsToDescriptions:(id)arg1;
- (id)descriptionAtIndex:(unsigned long long)arg1 operation:(id)arg2;
- (id)validateApplicationArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3;
- (id)authorizationTokenForDefaultHostnameAndAppIdKeyWithUsername:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (id)validateApplicationArchiveAtPath:(id)arg1 type:(int)arg2;
- (id)validateIAPHostedContentArchiveAtPath:(id)arg1;
- (id)validateFirenzeApplicationArchiveAtPath:(id)arg1;
- (id)validatePurpleApplicationArchiveAtPath:(id)arg1;
- (id)validateApplicationAtPath:(id)arg1 type:(int)arg2;
- (id)validateFirenzeApplicationAtPath:(id)arg1;
- (id)validatePurpleApplicationAtPath:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PNGInfo : NSObject
{
    unsigned long long _width;
    unsigned long long _height;
    BOOL _isDevicePNG;
    NSError *_error;
}

- (id)description;
- (void)setError:(id)arg1;
- (id)error;
- (void)setDevicePNG:(BOOL)arg1;
- (BOOL)isDevicePNG;
- (void)setHeight:(unsigned long long)arg1;
- (unsigned long long)height;
- (void)setWidth:(unsigned long long)arg1;
- (unsigned long long)width;
- (void)dealloc;
- (id)init;

@end

@interface SIPSPNGAnalyzer : MZAbstractToolExecutor
{
    NSString *_file;
    PNGInfo *_info;
    BOOL _cleanupFile;
}

+ (id)analyzerWithData:(id)arg1;
+ (id)analyzerWithFile:(id)arg1;
- (id)analyze;
- (id)executeSIPS;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (id)parseOutput:(id)arg1;
- (void)dealloc;
- (void)cleanupFile;
- (id)initWithData:(id)arg1;
- (id)writeDataToTemporaryFile:(id)arg1;
- (id)initWithFile:(id)arg1;

@end

@interface XarCommandExecutor : MZAbstractToolExecutor
{
    NSString *_path;
}

+ (void)initialize;
+ (id)xarExecutablePath;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (Class)executorResultClass;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

@interface XarCommandExecutorResult : MZToolExecutorResult
{
}

- (id)describeAsPlist;

@end

@interface AbstractDeviceValidationContext : NSObject
{
    NSDictionary *_infoPlist;
}

+ (void)initialize;
+ (void)setSupportedArchitectures:(id)arg1;
+ (id)supportedArchitectures;
+ (id)defaultSupportedArchitectures;
- (id)requiredArchitectures;
- (id)supportedArchitectures;
- (id)preferredDefaultIconName;
- (id)defaultIconNames;
- (id)allowedIconSizeRanges;
- (id)typeSafeRequiredDeviceCapabilities;
- (id)requiredDeviceCapabilities;
- (id)minimumOSVersionWithFallback;
- (id)minimumOSVersion;
- (id)iconNamesWithError:(id *)arg1;
- (id)plistObjectForKey:(id)arg1 actualKey:(id *)arg2;
- (id)plistObjectForKey:(id)arg1 actualKey:(id *)arg2 searchDictionary:(id)arg3;
- (id)plistObjectForKey:(id)arg1;
- (id)deviceName;
- (id)deviceFamilyKey;
- (id)operatingSystemKey;
- (id)deviceKey;
- (id)infoPlist;
- (void)dealloc;
- (id)initWithInfoPlist:(id)arg1;

@end

@interface CodesignEntitlementAnalyzer : MZAbstractToolExecutor
{
    NSString *_executablePath;
    NSString *_rawEntitlements;
    NSDictionary *_entitlements;
}

+ (id)analyzerWithExecutablePath:(id)arg1;
+ (void)initialize;
+ (id)codesignExecutablePath;
- (id)entitlements;
- (id)rawEntitlements;
- (id)analyze;
- (void)processExitCode:(id)arg1;
- (id)junkAwareStandardOutputString:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (id)parseOutput:(id)arg1;
- (id)parseXMLString:(id)arg1;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;

@end

@interface DeviceContextIPad : AbstractDeviceValidationContext
{
}

- (id)requiredArchitectures;
- (id)allowedIconSizeRanges;
- (id)preferredDefaultIconName;
- (id)defaultIconNames;
- (id)minimumOSVersionWithFallback;
- (id)deviceName;
- (id)deviceFamilyKey;
- (id)operatingSystemKey;
- (id)deviceKey;

@end

@interface DeviceContextIPhone : AbstractDeviceValidationContext
{
}

- (id)deviceName;
- (id)deviceFamilyKey;
- (id)operatingSystemKey;
- (id)deviceKey;

@end

@interface DeviceContextIPodTouch : AbstractDeviceValidationContext
{
}

- (id)deviceName;
- (id)deviceFamilyKey;
- (id)operatingSystemKey;
- (id)deviceKey;

@end

@interface ITunesSoftwareServiceApplicationVersionsResponse : ITunesSoftwareServiceResponse <ITunesSoftwareServiceApplicationVersionsResponse>
{
    NSArray *_applicationVersions;
    NSString *_alertMessage;
}

@property(retain, nonatomic) NSString *alertMessage; // @synthesize alertMessage=_alertMessage;
@property(retain, nonatomic) NSArray *applicationVersions; // @synthesize applicationVersions=_applicationVersions;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;

@end

@interface DeviceValidationContextFactory : NSObject
{
}

+ (id)factory;
- (id)deviceContextsWithInfoPlist:(id)arg1 error:(id *)arg2;
- (id)buildDeviceContextsWithDeviceFamilies:(id)arg1 infoPlist:(id)arg2 error:(id *)arg3;
- (BOOL)shouldUseIPodTouchContextWithInfoPlist:(id)arg1 error:(id *)arg2;
- (id)processDeviceFamilies:(id)arg1 error:(id *)arg2;
- (id)convertDeviceFamilyArray:(id)arg1 error:(id *)arg2;
- (id)convertDeviceFamilyNumber:(id)arg1 error:(id *)arg2;

@end

@interface MachDwarfdumpAnalyzer : MachDwarfdumpExecutor
{
    NSMutableArray *_architectures;
}

- (id)uuids;
- (id)uuidForArchitecture:(int)arg1;
- (id)uuidForArchitectureString:(id)arg1;
- (BOOL)containsArchitectureString:(id)arg1;
- (BOOL)containsArchitecture:(int)arg1;
- (unsigned int)architecturesMask;
- (id)allArchitectures;
- (id)analyze;
- (void)processExitCode:(id)arg1;
- (id)parseOutput:(id)arg1;
- (id)parseOutputLine:(id)arg1;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;

@end

@interface MachDwarfdumpAnalyzerEntry : NSObject
{
    NSString *_uuid;
    NSString *_architecture;
}

- (id)architecture;
- (id)uuid;
- (void)dealloc;
- (id)initWithUUID:(id)arg1 architecture:(id)arg2;

@end

@interface ITunesPurpleSoftwarePackageBuilderWorker : ITunesPackageBuilder
{
    NSDictionary *_attributes;
    NSString *_metadataTemplate;
    MZMD5Worker *_md5Worker;
    MZFileCopyOperation *_copy;
    unsigned long long _size;
    NSString *_file;
    NSString *_packageDirectory;
    id _nonretainedDelegate;
}

- (double)percentComplete;
- (void)run;
- (id)packagePath;
- (id)createPackage;
- (BOOL)deleteDirectoryIfExisting:(id)arg1;
- (id)createPackageAtDirectory:(id)arg1 forSourceFile:(id)arg2 md5:(id)arg3;
- (void)generateMetadataXMLForSourceFile:(id)arg1 md5:(id)arg2 size:(id)arg3 inDirectory:(id)arg4;
- (id)generateMetadataWithAttributes:(id)arg1;
- (id)substituteOptionalKeyValueTokens:(id)arg1 inString:(id)arg2;
- (id)substituteKeyValueTokens:(id)arg1 inString:(id)arg2 error:(id *)arg3;
- (id)metadataTemplate;
- (id)loadBundleMetadataTemplate;
- (id)metadataTemplateName;
- (void)cancel;
- (id)fileCopy:(id)arg1 toPath:(id)arg2 error:(id *)arg3;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithFile:(id)arg1 packageDirectory:(id)arg2 md5Worker:(id)arg3 attributes:(id)arg4 metadataTemplate:(id)arg5;

@end

@interface ITunesSoftwareDeviceDescription : NSObject
{
    NSString *_marketingName;
    NSString *_internalName;
}

@property(readonly) NSString *internalName; // @synthesize internalName=_internalName;
@property(readonly) NSString *marketingName; // @synthesize marketingName=_marketingName;
- (void)dealloc;
- (id)initWithDeviceDictionary:(id)arg1;

@end

@interface ITunesFirenzeSoftwarePackageBuilderWorker : ITunesPurpleSoftwarePackageBuilderWorker
{
}

- (id)metadataTemplateName;

@end

@interface ITunesSoftwareXPCServiceVersionDescription : ITunesSoftwareVersionDescription <ITunesSoftwareXPCServiceVersionDescription>
{
}

@end

@interface FirenzeApplicationVerifier : ITunesAbstractVerifier
{
    ITunesSymlinkAnalyzer *_symlinkAnalyzer;
    BOOL _validateProductArchitectures;
    BOOL _validateProductBundleArchitectures;
    BOOL _validateProductSupportedArchitectures;
    BOOL _validateProductRequiredArchitectures;
    NSArray *_supportedProductArchitectures;
}

- (void)takeValuesFromConfiguration:(id)arg1;
- (id)validate;
- (BOOL)verifySymlinks;
- (BOOL)verifyProductArchitectures;
- (BOOL)verifyProductBundle:(id)arg1;
- (BOOL)validateArchitecturesWithAnalyzer:(id)arg1;
- (BOOL)validateArchitecturesRequiredArePresentWithAnalyzer:(id)arg1;
- (id)requiredProductArchitectures;
- (BOOL)validateArchitecturesAreSupportedWithAnalyzer:(id)arg1;
- (id)supportedProductArchitecturesWithFallback;
- (id)defaultSupportedProductArchitectures;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface FirenzeApplicationArchiveVerifier : ITunesAbstractVerifier
{
    BOOL _validateProductSignature;
    BOOL _validateProductErrors;
    BOOL _validateProductBundles;
    NSDictionary *_archiveOutput;
    NSString *_extractionPath;
    NSArray *_productFilesToSendOverride;
    id <ITunesFirenzeSoftwareValidationConfiguration> _config;
    FirenzeArchiveExpander *_expander;
}

- (void)takeValuesFromConfiguration:(id)arg1;
- (id)getProductFilePathsToSendInMainBundle:(id *)arg1;
- (id)mainBundlePathWithError:(id *)arg1;
- (id)findFileDirectlyUnderApplicationNamed:(id)arg1 error:(id *)arg2;
- (id)mainBundleInOutputWithRelativePath:(id *)arg1 error:(id *)arg2;
- (id)findFilesWithNameIgnoringCase:(id)arg1 atPath:(id)arg2;
- (id)filesAtPath:(id)arg1;
- (id)productFilesToSend;
- (id)extractionPath;
- (void)cleanupExtractionDirectory;
- (id)validate;
- (BOOL)analyzeExpanderOutput:(id)arg1;
- (BOOL)validatePackageEntry:(id)arg1;
- (BOOL)validatePackageBundle:(id)arg1 payloadPath:(id)arg2;
- (BOOL)validatePackageBundleAtPath:(id)arg1;
- (void)convertProductErrorsToNSErrors:(id)arg1;
- (id)productFilesToSendOverride;
- (void)setProductFilesToSendOverride:(id)arg1;
- (id)archiveOutput;
- (void)setValidateProductErrors:(BOOL)arg1;
- (BOOL)validateProductErrors;
- (void)setValidateProductSignature:(BOOL)arg1;
- (BOOL)validateProductSignature;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface ITunesAbstractVerifier : NSObject
{
    NSString *_path;
    id _nonretainedDelegate;
    NSMutableArray *_validationErrors;
}

- (id)validationErrors;
- (void)addErrors:(id)arg1;
- (void)addError:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setPath:(id)arg1;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)init;
- (id)validate;

@end

@interface FirenzeArchiveExpander : MZAbstractToolExecutor
{
    NSString *_path;
    NSString *_extractionPath;
    NSString *_rawOutput;
    NSDictionary *_output;
}

+ (void)initialize;
- (id)archivePath;
- (id)output;
- (void)processExitCode:(id)arg1;
- (id)parseOutput:(id)arg1;
- (id)parseXMLString:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (id)destinationDirectoryWithError:(id *)arg1;
- (void)dealloc;
- (void)cleanupDestinationDirectory;
- (id)extractionPath;
- (id)initWithArchivePath:(id)arg1;

@end

@interface ITunesSoftwareServiceValidationConfiguration : NSObject <ITunesSoftwareServiceValidationConfiguration>
{
    BOOL _serverSideVerification;
    BOOL _validateZip;
    BOOL _validateIcon;
    BOOL _validatePayload;
    BOOL _validateIconSize;
    BOOL _validateBundleResource;
    BOOL _validateDeviceFamily;
    BOOL _validateCodeResources;
    BOOL _requireDeviceFamily;
    BOOL _validateFatArchitecturesBasedOnMinimumOSVersion;
    BOOL _validateSupportedArchitectures;
    BOOL _validateRequiredArchitectures;
    BOOL _validateCodesignEntitlements;
    BOOL _validateSymlinkExists;
    BOOL _validateSymlinkResolvesLocally;
    BOOL _validatePurpleSPIUsage;
    NSArray *_supportedArchitectures;
    NSArray *_deviceFamilyOverrides;
    NSArray *_disallowedPaths;
    NSArray *_filesToSendOverride;
    NSString *_metadataTemplate;
    BOOL _validateProductSignature;
    BOOL _validateProductErrors;
    BOOL _validateProductMetadataServerSide;
    BOOL _validateProductSymlinkExists;
    BOOL _validateProductSymlinkResolvesLocally;
    BOOL _validateProductArchitectures;
    BOOL _validateProductBundleArchitectures;
    BOOL _validateProductSupportedArchitectures;
    BOOL _validateProductRequiredArchitectures;
    BOOL _validateFirenzeSPIUsage;
    NSString *_productMetadataTemplate;
    NSArray *_supportedProductArchitectures;
    NSArray *_productFilesToSendOverride;
}

+ (id)convertSizesToRanges:(id)arg1;
+ (id)configurationToDictionary:(id)arg1;
+ (id)dictionaryToConfiguration:(id)arg1;
+ (id)defaultConfigurationValueForNilKey:(id)arg1;
+ (id)publicConfigurationKeys;
+ (id)publicFirenzeConfigurationKeys;
+ (id)publicPurpleConfigurationKeys;
- (id)productFilesToSendOverride;
- (void)setProductFilesToSendOverride:(id)arg1;
- (id)productMetadataTemplate;
- (void)setProductMetadataTemplate:(id)arg1;
- (void)setSupportedProductArchitectures:(id)arg1;
- (id)supportedProductArchitectures;
- (BOOL)validateFirenzeSPIUsage;
- (void)setValidateFirenzeSPIUsage:(BOOL)arg1;
- (void)setValidateProductRequiredArchitectures:(BOOL)arg1;
- (BOOL)validateProductRequiredArchitectures;
- (void)setValidateProductSupportedArchitectures:(BOOL)arg1;
- (BOOL)validateProductSupportedArchitectures;
- (void)setValidateProductBundleArchitectures:(BOOL)arg1;
- (BOOL)validateProductBundleArchitectures;
- (void)setValidateProductArchitectures:(BOOL)arg1;
- (BOOL)validateProductArchitectures;
- (void)setValidateProductSymlinkResolvesLocally:(BOOL)arg1;
- (BOOL)validateProductSymlinkResolvesLocally;
- (void)setValidateProductSymlinkExists:(BOOL)arg1;
- (BOOL)validateProductSymlinkExists;
- (void)setValidateProductMetadataServerSide:(BOOL)arg1;
- (BOOL)validateProductMetadataServerSide;
- (void)setValidateProductErrors:(BOOL)arg1;
- (BOOL)validateProductErrors;
- (void)setValidateProductSignature:(BOOL)arg1;
- (BOOL)validateProductSignature;
- (id)metadataTemplate;
- (void)setMetadataTemplate:(id)arg1;
- (id)filesToSendOverride;
- (void)setFilesToSendOverride:(id)arg1;
- (id)disallowedPaths;
- (void)setDisallowedPaths:(id)arg1;
- (id)deviceFamilyOverrides;
- (void)setDeviceFamilyOverrides:(id)arg1;
- (id)supportedArchitectures;
- (void)setSupportedArchitectures:(id)arg1;
- (BOOL)validatePurpleSPIUsage;
- (void)setValidatePurpleSPIUsage:(BOOL)arg1;
- (void)setValidateSymlinkResolvesLocally:(BOOL)arg1;
- (BOOL)validateSymlinkResolvesLocally;
- (void)setValidateSymlinkExists:(BOOL)arg1;
- (BOOL)validateSymlinkExists;
- (BOOL)validateCodesignEntitlements;
- (void)setValidateCodesignEntitlements:(BOOL)arg1;
- (BOOL)validateRequiredArchitectures;
- (void)setValidateRequiredArchitectures:(BOOL)arg1;
- (BOOL)validateSupportedArchitectures;
- (void)setValidateSupportedArchitectures:(BOOL)arg1;
- (BOOL)validateFatArchitecturesBasedOnMinimumOSVersion;
- (void)setValidateFatArchitecturesBasedOnMinimumOSVersion:(BOOL)arg1;
- (BOOL)validateCodeResources;
- (void)setValidateCodeResources:(BOOL)arg1;
- (BOOL)requireDeviceFamily;
- (void)setRequireDeviceFamily:(BOOL)arg1;
- (BOOL)validateDeviceFamily;
- (void)setValidateDeviceFamily:(BOOL)arg1;
- (BOOL)validateBundleResource;
- (void)setValidateBundleResource:(BOOL)arg1;
- (BOOL)validateIconSize;
- (void)setValidateIconSize:(BOOL)arg1;
- (BOOL)validatePayload;
- (void)setValidatePayload:(BOOL)arg1;
- (BOOL)validateIcon;
- (void)setValidateIcon:(BOOL)arg1;
- (BOOL)validateZip;
- (void)setValidateZip:(BOOL)arg1;
- (BOOL)serverSideVerification;
- (void)setServerSideVerification:(BOOL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ITunesSoftwareVersionDescription : ITunesSoftwareBundleDescription <ITunesSoftwareVersionDescription>
{
    NSString *_marketingVersion;
    NSString *_shortVersion;
    NSString *_version;
    NSDictionary *_binaryUUIDs;
}

@property(retain, nonatomic) NSDictionary *binaryUUIDs; // @synthesize binaryUUIDs=_binaryUUIDs;
@property(retain, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *shortVersion; // @synthesize shortVersion=_shortVersion;
@property(retain, nonatomic) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
- (void)parseInitializationDictionary:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface ITunesSymlinkAnalyzer : NSObject
{
    NSString *_path;
    NSString *_basePath;
    BOOL _validateSymlinkExists;
    BOOL _validateSymlinkResolvesLocally;
}

+ (id)analyzeSymbolicLinkAtPath:(id)arg1 basePath:(id)arg2;
- (id)analyze;
- (id)analyzeFile;
- (void)analyzePath:(id)arg1 errors:(id)arg2;
- (BOOL)analyzeFileAtPath:(id)arg1 errors:(id)arg2;
- (void)analyzeSymbolicLink:(id)arg1 atPath:(id)arg2 basePath:(id)arg3 errors:(id)arg4;
- (void)setValidateSymlinkResolvesLocally:(BOOL)arg1;
- (BOOL)validateSymlinkResolvesLocally;
- (void)setValidateSymlinkExists:(BOOL)arg1;
- (BOOL)validateSymlinkExists;
- (void)setBasePath:(id)arg1;
- (id)basePath;
- (void)setPath:(id)arg1;
- (id)path;
- (void)dealloc;
- (id)initWithBasePath:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

@interface PurpleApplicationArchiveExpander : MZAbstractToolExecutor
{
    NSString *_archivePath;
    NSString *_extractionPath;
}

+ (id)expanderWithArchivePath:(id)arg1;
+ (void)initialize;
- (void)cleanupDestinationDirectory;
- (id)extractionPath;
- (id)taskWithError:(id *)arg1;
- (void)processExitCode:(id)arg1;
- (BOOL)expectsStandardOutputWithSuccessfulExit;
- (id)parseOutput:(id)arg1;
- (id)expandToPath:(id)arg1;
- (id)archivePath;
- (void)dealloc;
- (id)initWithArchivePath:(id)arg1;

@end

@interface MZWebServiceLookupSoftwareVersionsForApplication : MZWebServiceLookupSoftwareVersions
{
    id <ITunesSoftwareApplicationDescription> _application;
    NSArray *_applicationVersions;
}

@property(retain, nonatomic) NSArray *applicationVersions; // @synthesize applicationVersions=_applicationVersions;
@property(retain, nonatomic) id <ITunesSoftwareApplicationDescription> application; // @synthesize application=_application;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)generateArguments;
- (id)operationMethod;
- (void)dealloc;

@end

@interface ITunesSoftwareExtensionVersionDescription : ITunesSoftwareVersionDescription <ITunesSoftwareExtensionVersionDescription>
{
}

@end

@interface ITunesCodesignAllocateExecutor : MZAbstractToolExecutor
{
    NSString *_executablePath;
    NSArray *_architectures;
    NSString *_uniqueTemporaryOutputPath;
}

+ (void)initialize;
+ (id)codesignAllocateExecutablePath;
@property(retain, nonatomic) NSString *uniqueTemporaryOutputPath; // @synthesize uniqueTemporaryOutputPath=_uniqueTemporaryOutputPath;
@property(retain, nonatomic) NSArray *architectures; // @synthesize architectures=_architectures;
@property(retain, nonatomic) NSString *executablePath; // @synthesize executablePath=_executablePath;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (BOOL)expectsStandardOutputWithSuccessfulExit;
- (id)fullPath;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;

@end

@interface ITunesSoftwareServiceApplicationsResponse : ITunesSoftwareServiceResponse <ITunesSoftwareServiceApplicationsResponse>
{
    NSArray *_applications;
    NSString *_alertMessage;
}

- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)setAlertMessage:(id)arg1;
- (id)alertMessage;
- (void)setApplications:(id)arg1;
- (id)applications;
- (void)dealloc;

@end

@interface ITunesSoftwareServiceResponse : NSObject <ITunesSoftwareServiceResponse>
{
    NSArray *_errors;
    NSArray *_warnings;
    BOOL _cancelled;
    NSArray *_infoMessages;
}

+ (id)cancelledResponse;
+ (id)response;
+ (id)responseWithError:(id)arg1;
+ (id)responseWithErrors:(id)arg1;
+ (id)responseWithSeries:(id)arg1;
@property(retain, nonatomic) NSArray *infoMessages; // @synthesize infoMessages=_infoMessages;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)takeValuesFromSeries:(id)arg1;
- (void)setError:(id)arg1;
- (void)setWarnings:(id)arg1;
- (id)warnings;
- (void)setErrors:(id)arg1;
- (id)errors;
- (void)setCancelled:(BOOL)arg1;
- (BOOL)isCancelled;
- (BOOL)isSuccessful;
- (void)dealloc;

@end

@interface ITunesSoftwareServiceUploadResponse : ITunesSoftwareServiceConnectedValidationResponse <ITunesSoftwareServiceUploadResponse>
{
    BOOL _uploadFailure;
    NSString *_username;
    NSString *_password;
    NSString *_failureLog;
}

- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)sendUploadFailureToApple;
- (void)setFailureLog:(id)arg1;
- (id)failureLog;
- (void)setPassword:(id)arg1;
- (id)password;
- (void)setUsername:(id)arg1;
- (id)username;
- (void)setUploadFailure:(BOOL)arg1;
- (BOOL)isUploadFailure;
- (void)dealloc;

@end

@interface ITunesSoftwareServiceWorkSeriesFactory : NSObject
{
    id <ITunesSoftwareApplicationDescription> _application;
}

+ (int)itunesSoftwareApplicationTypeForPackageAtPath:(id)arg1;
+ (id)factory;
+ (id)factoryWithApplication:(id)arg1;
- (id)verifyIconSizeAtPath:(id)arg1 ranges:(id)arg2;
- (id)uploadSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 userInfo:(id)arg3 uploader:(id *)arg4 error:(id *)arg5;
- (id)validateSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 error:(id *)arg3;
- (id)buildIAPHostedContentUploadSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3 userInfo:(id)arg4 uploader:(id *)arg5;
- (id)buildPurpleUploadSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3 userInfo:(id)arg4 uploader:(id *)arg5;
- (id)buildFirenzeUploadSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3 userInfo:(id)arg4 uploader:(id *)arg5;
- (id)buildIAPHostedContentValidationSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3;
- (id)buildPurpleValidationSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3;
- (id)buildFirenzeValidationSeriesWithArchiveAtPath:(id)arg1 packageSource:(id)arg2 application:(id)arg3;
- (id)validateSPIUsageSeriesWithBinaryContentsAtPath:(id)arg1 packageSource:(id)arg2 softwareTypeEnum:(id)arg3 error:(id *)arg4;
- (void)dealloc;
- (id)init;
- (id)initWithApplication:(id)arg1;

@end

@interface ITunesSoftwareServiceFactoryDelegate : NSObject
{
    ITunesSoftwareServiceWorkSeriesFactory *_nonretainedFactory;
    MZWebServiceValidatePurpleSoftwareAttributes *_nonretainedValidator;
    MZWebServiceValidateFirenzeProductAttributes *_nonretainedFirenzeValidator;
    ITunesFirenzeSoftwareValidationWorker *_nonretainedFirenzeValidationWorker;
    ITunesApplicationSPIExtractorWorker *_nonretainedExtractorWorker;
}

- (void)validationWorker:(id)arg1 didProduceOutput:(id)arg2;
- (void)dealloc;
- (id)initWithFactory:(id)arg1 firenzeServerValidator:(id)arg2 validator:(id)arg3 extractor:(id)arg4;
- (id)initWithFactory:(id)arg1 serverValidator:(id)arg2 extractor:(id)arg3;

@end

@interface ITunesSoftwareBundleDescription : NSObject <ITunesSoftwareBundleDescription>
{
    int _applicationType;
    NSString *_displayableDescription;
    NSString *_existingBundleIdentifier;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (int)applicationTypeWithString:(id)arg1;
+ (id)stringWithApplicationType:(int)arg1;
@property(nonatomic) int applicationType; // @synthesize applicationType=_applicationType;
@property(retain, nonatomic) NSString *existingBundleIdentifier; // @synthesize existingBundleIdentifier=_existingBundleIdentifier;
@property(retain, nonatomic) NSString *displayableDescription; // @synthesize displayableDescription=_displayableDescription;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;

@end

@interface ITunesSoftwareServiceSPIUsageResponse : ITunesSoftwareServiceResponse <ITunesSoftwareServiceSPIUsageResponse>
{
    NSData *_clientInfoFileContents;
}

- (void)takeValuesFromSeries:(id)arg1;
- (void)setClientInfoFileContents:(id)arg1;
- (id)clientInfoFileContents;
- (void)dealloc;

@end

@interface ITunesApplicationSPIExtractor : MZAbstractToolExecutor
{
    NSString *_inputDirectory;
    NSString *_outputFilePath;
    NSDictionary *_output;
}

+ (void)initialize;
+ (id)toolPath;
- (void)processExitCode:(id)arg1;
- (id)parseOutput:(id)arg1;
- (id)parseXMLString:(id)arg1;
- (id)errors;
- (id)extractErrorMessageFromOutput:(id)arg1;
- (id)extractErrorMessagesFromOutput:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (BOOL)expectsStandardOutputWithSuccessfulExit;
- (id)cleanupOutputFile;
- (id)output;
- (id)outputFilePath;
- (id)inputDirectory;
- (void)dealloc;
- (id)initWithInputDirectory:(id)arg1 outputFilePath:(id)arg2;

@end

@interface ITunesApplicationSPIExtractorWorker : MZAbstractWorker
{
    ITunesApplicationSPIExtractor *_extractor;
    NSString *_inputDirectory;
    NSString *_outputFilePath;
    id <ITunesApplicationSPIExtractorWorkerDelegate> _nonretainedDelegate;
}

- (void)seriesCompleted;
- (id)cleanupOutputFile;
- (void)run;
- (id)outputFileContents;
- (id)outputFilePath;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)setInputDirectory:(id)arg1;
- (id)inputDirectory;
- (void)dealloc;
- (id)initWithInputDirectory:(id)arg1;
- (id)init;

@end

@interface ITunesSoftwareServiceConnectedValidationResponse : ITunesSoftwareServiceSPIUsageResponse <ITunesSoftwareServiceConnectedValidationResponse>
{
}

@end

@interface MachFileCommandExecutor : MZAbstractToolExecutor
{
    NSString *_filePath;
}

+ (void)initialize;
+ (id)determineFileExecutablePath;
- (id)executeWithError:(id *)arg1;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (void)setFilePath:(id)arg1;
- (id)filePath;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1;
- (id)init;

@end

@interface ITunesSoftwareServicePathUtilities : NSObject
{
}

@end

@interface AbstractValidateSoftwareAttributes : MZAbstractWebServiceFileSender
{
    NSDictionary *_applicationAttributes;
    NSString *_appleId;
    BOOL _validationOnly;
    NSString *_bundleId;
}

@property(retain, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
- (void)setValidationOnly:(BOOL)arg1;
- (BOOL)validationOnly;
- (void)setAppleId:(id)arg1;
- (id)appleId;
- (void)setApplicationAttributes:(id)arg1;
- (id)applicationAttributes;
- (id)errorMessages;
- (id)errorMessage;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)processResult:(id)arg1 message:(id *)arg2;
- (id)skipProcessingMessage;
- (id)applicationAttributesFilename;
- (id)getResultDictionary;
- (void)dealloc;

@end

@interface ITunesFirenzeSoftwareValidationWorker : MZAbstractWorker
{
    id <ITunesFirenzeSoftwareValidationConfiguration> _config;
    FirenzeApplicationArchiveVerifier *_verifier;
    NSString *_file;
    id _nonretainedDelegate;
    NSDictionary *_archiveOutput;
}

- (id)getProductFilePathsToSendInMainBundle:(id *)arg1;
- (id)mainBundlePathWithError:(id *)arg1;
- (id)extractionPath;
- (id)archiveOutput;
- (void)seriesCompleted;
- (void)run;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 delegate:(id)arg2 file:(id)arg3;

@end

@interface MZAbstractWebServiceFileSender : MZITunesProducerServiceClient
{
    NSArray *_filePathsToSend;
    NSDictionary *_filePathsContents;
    NSError *_filePathsError;
}

- (id)setFilePathsToSendCachingImmediately:(id)arg1;
- (void)setFilePathsToSend:(id)arg1;
- (id)filePathsToSend;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)filePathsAsEncodedDictionaryWithError:(id *)arg1;
- (id)encodedFileAtPath:(id)arg1 error:(id *)arg2;
- (void)dealloc;

@end

@interface MZWebServiceValidateSoftwareSPIUsage : MZAbstractWebServiceFileSender <ITunesApplicationSPIExtractorWorkerDelegate>
{
    NSString *_appleId;
    NSString *_softwareTypeEnum;
    NSData *_clientInfoFileContents;
    NSString *_runningMessage;
    BOOL _skipSending;
    BOOL _validationOnly;
    NSString *_bundleId;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
- (void)didReceiveResponse;
- (void)willReceiveResponse;
- (void)didSendRequest;
- (void)willSendRequest;
- (void)setRunningMessage:(id)arg1;
- (id)worker;
- (void)workerDidExtractFiles:(id)arg1;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)clientInfoFileContents;
- (void)setValidationOnly:(BOOL)arg1;
- (BOOL)validationOnly;
- (void)setSoftwareTypeEnum:(id)arg1;
- (id)softwareTypeEnum;
- (void)setAppleId:(id)arg1;
- (id)appleId;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)processResult:(id)arg1 message:(id *)arg2;
- (BOOL)shouldSkipRequest;
- (id)skipProcessingMessage;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;
- (id)init;

@end

@interface MZWebServiceLookupSoftwareVersions : MZITunesProducerServiceClient <ITunesSoftwareServiceValidationConfiguration>
{
    NSArray *_applications;
    NSDictionary *_applicationMapping;
    NSArray *_applicationAttributes;
    NSArray *_displayableKeys;
    NSString *_metadataTemplate;
    NSString *_transportOverride;
    NSArray *_disallowedPaths;
    NSString *_overallAlertMessage;
    NSDictionary *_applicationAlertMessages;
    BOOL _disableSigniantTCP;
    BOOL _enableValidation;
    BOOL _iconVerification;
    BOOL _requirePayloadDirectory;
    BOOL _zipIntegrity;
    BOOL _serverSideVerification;
    BOOL _iconSizeVerification;
    BOOL _bundleResourceVerification;
    BOOL _zipFilenameVerification;
    BOOL _validateDeviceFamily;
    BOOL _requireDeviceFamily;
    BOOL _validateCodeResources;
    BOOL _validateFatArchitecturesBasedOnMinimumOSVersion;
    BOOL _validateSupportedArchitectures;
    BOOL _validateRequiredArchitectures;
    BOOL _validateCodesignEnitlements;
    BOOL _validateSymlinkExists;
    BOOL _validateSymlinkResolvesLocally;
    BOOL _validatePurpleSPIUsage;
    NSArray *_supportedArchitectures;
    NSArray *_deviceFamilyOverrides;
    NSArray *_filesToSendOverride;
    BOOL _validateProductSignature;
    BOOL _validateProductErrors;
    BOOL _validateProductMetadataServerSide;
    BOOL _validateProductSymlinkExists;
    BOOL _validateProductSymlinkResolvesLocally;
    BOOL _validateProductArchitectures;
    BOOL _validateProductBundleArchitectures;
    BOOL _validateProductSupportedArchitectures;
    BOOL _validateProductRequiredArchitectures;
    BOOL _validateFirenzeSPIUsage;
    NSArray *_supportedProductArchitectures;
    NSString *_productMetadataTemplate;
    NSArray *_productFilesToSendOverride;
}

- (id)productFilesToSendOverride;
- (id)supportedProductArchitectures;
- (BOOL)validateFirenzeSPIUsage;
- (BOOL)validateProductRequiredArchitectures;
- (BOOL)validateProductSupportedArchitectures;
- (BOOL)validateProductBundleArchitectures;
- (BOOL)validateProductArchitectures;
- (id)productMetadataTemplate;
- (void)setValidateProductSymlinkResolvesLocally:(BOOL)arg1;
- (BOOL)validateProductSymlinkResolvesLocally;
- (void)setValidateProductSymlinkExists:(BOOL)arg1;
- (BOOL)validateProductSymlinkExists;
- (BOOL)validateProductMetadataServerSide;
- (BOOL)validateProductErrors;
- (BOOL)validateProductSignature;
- (id)filesToSendOverride;
- (id)applicationAlertMessages;
- (id)overallAlertMessage;
- (id)disallowedPaths;
- (id)deviceFamilyOverrides;
- (id)supportedArchitectures;
- (BOOL)validatePurpleSPIUsage;
- (void)setValidateSymlinkResolvesLocally:(BOOL)arg1;
- (BOOL)validateSymlinkResolvesLocally;
- (void)setValidateSymlinkExists:(BOOL)arg1;
- (BOOL)validateSymlinkExists;
- (BOOL)validateCodesignEntitlements;
- (BOOL)validateRequiredArchitectures;
- (BOOL)validateSupportedArchitectures;
- (BOOL)validateFatArchitecturesBasedOnMinimumOSVersion;
- (BOOL)validateCodeResources;
- (BOOL)requireDeviceFamily;
- (BOOL)validateDeviceFamily;
- (BOOL)validateBundleResource;
- (BOOL)validateIconSize;
- (BOOL)serverSideVerification;
- (BOOL)validateZip;
- (BOOL)validatePayload;
- (BOOL)validateIcon;
- (BOOL)enableValidation;
- (id)transportOverride;
- (BOOL)disableSigniantTCP;
- (id)metadataTemplate;
- (id)displayableKeys;
- (id)applicationAttributes;
- (id)applicationMapping;
- (id)applications;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)convertDeviceFamilyOverrides:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceValidateFirenzeProductAttributes : MZWebServiceValidatePurpleSoftwareAttributes
{
}

- (id)skipProcessingMessage;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceValidatePurpleSoftwareAttributes : AbstractValidateSoftwareAttributes
{
    NSString *_path;
}

@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)skipProcessingMessage;
- (id)applicationAttributesFilename;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface ITunesPurpleSoftwareInfoPlistLoader : NSObject
{
    NSString *_path;
}

+ (id)loaderWithPath:(id)arg1;
- (id)loadInfoPlistWithError:(id *)arg1;
- (id)readInfoPlistWithError:(id *)arg1;
- (id)findInfoPlist;
- (id)findFileDirectlyUnderPathNamed:(id)arg1;
- (void)setPath:(id)arg1;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

@interface ITunesPurpleSoftwareSigningDescriber : NSObject
{
    ITunesPurpleSoftwareDescriberContext *_context;
}

+ (id)describerWithContext:(id)arg1;
- (BOOL)execute;
- (id)context;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface ITunesSigningAnalyzer : NSObject
{
    NSString *_path;
}

- (id)analyzeExecutableAtPathWithError:(id *)arg1;
- (id)analyzeWithError:(id *)arg1;
- (id)analyzeExecutableAtPath:(id)arg1 error:(id *)arg2;
- (void)validateCodeSigningAtPathWithError:(id *)arg1;
- (struct __SecCode *)staticCodeWithPath:(id)arg1 error:(id *)arg2;
- (id)executablePath;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface ITunesSigningAnalyzerResult : NSObject
{
    NSArray *_certificates;
    NSDictionary *_entitlements;
    NSData *_entitlementsData;
    NSString *_signingIdentifier;
    NSString *_signingTeamIdentifier;
}

+ (id)resultWithDictionary:(id)arg1;
@property(retain, nonatomic) NSString *signingTeamIdentifier; // @synthesize signingTeamIdentifier=_signingTeamIdentifier;
@property(retain, nonatomic) NSString *signingIdentifier; // @synthesize signingIdentifier=_signingIdentifier;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)describeAsPlist;
- (BOOL)hasData;
- (id)entitlementsData;
- (id)entitlements;
- (id)certificates;
- (void)dealloc;
- (id)initWithCertificates:(id)arg1 entitlements:(id)arg2 entitlementsData:(id)arg3 signingIdentifier:(id)arg4 signingTeamIdentifier:(id)arg5;

@end

@interface ITunesIconAnalyzer : NSObject
{
    NSString *_path;
}

- (id)analyzeWithError:(id *)arg1;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface ITunesIconAnalyzerResult : NSObject
{
    NSString *_path;
    NSString *_type;
    NSArray *_sizes;
}

+ (id)resultWithDictionary:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)describeAsPlist;
- (void)setPath:(id)arg1;
- (id)path;
- (id)type;
- (id)sizes;
- (void)dealloc;
- (id)initWithType:(id)arg1 sizes:(id)arg2;

@end

@interface ITunesPurpleSoftwareArchitectureDescriber : NSObject
{
    ITunesPurpleBundleDescriberContext *_context;
}

+ (id)describerWithContext:(id)arg1;
- (BOOL)execute;
- (id)context;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface MachFileCommandArchitectureAnalyzer : MachFileCommandExecutor
{
    NSMutableArray *_architectures;
}

+ (id)architectureExpressionWithError:(id *)arg1;
+ (id)analyzerWithExecutablePath:(id)arg1;
+ (id)analyzerWithAppWrapperPath:(id)arg1;
+ (id)executablePathFromAppWrapperPath:(id)arg1;
- (BOOL)containsArchitectureString:(id)arg1;
- (BOOL)containsArchitecture:(int)arg1;
- (unsigned long long)architecturesMask;
- (id)allArchitectures;
- (id)analyze;
- (id)parseOutput:(id)arg1;
- (id)parseOutputLine:(id)arg1;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;
- (id)initWithAppWrapperPath:(id)arg1;

@end

@interface MachFileCommandArchitectureAnalyzerEntry : NSObject
{
    NSString *_architecture;
    NSString *_family;
}

- (id)family;
- (id)architecture;
- (void)dealloc;
- (id)initWithArchitecture:(id)arg1 family:(id)arg2;

@end

@interface MZWebServiceLookupSoftwareForBundleId : MZWebServiceLookupSoftwareVersions
{
    NSString *_bundleId;
}

@property(retain, nonatomic) NSString *bundleId; // @synthesize bundleId=_bundleId;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MachLipoArchitectureAnalyzer : MZAbstractToolExecutor
{
    NSString *_executablePath;
    NSMutableArray *_architectures;
}

+ (id)undefinedArchitectureExpressionWithError:(id *)arg1;
+ (id)unknownArchitectureExpressionWithError:(id *)arg1;
+ (id)architectureSeparatorExpressionWithError:(id *)arg1;
+ (id)architectureExpressionWithError:(id *)arg1;
+ (id)analyzerWithExecutablePath:(id)arg1;
+ (id)analyzerWithAppWrapperPath:(id)arg1;
+ (id)executablePathFromAppWrapperPath:(id)arg1;
+ (void)initialize;
+ (id)lipoExecutablePath;
- (BOOL)isAnyArchitectureStandardizedOrUnknown;
- (BOOL)containsArchitectureString:(id)arg1;
- (BOOL)containsArchitecture:(int)arg1;
- (unsigned long long)architecturesMask;
- (id)allStandardizedArchitectures;
- (id)allArchitectures;
- (id)analyze;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (id)parseOutput:(id)arg1;
- (id)parseUnprocessedArchitectures:(id)arg1;
- (void)setPath:(id)arg1;
- (void)setExecutablePath:(id)arg1;
- (id)path;
- (id)executablePath;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;
- (id)initWithAppWrapperPath:(id)arg1;

@end

@interface MachLipoArchitectureAnalyzerEntry : NSObject
{
    NSString *_architecture;
    BOOL _wasStandardized;
}

@property(nonatomic) BOOL wasStandardized; // @synthesize wasStandardized=_wasStandardized;
- (id)standardizedArchitecture;
- (int)machArchitecture;
- (id)architecture;
- (void)dealloc;
- (id)initWithArchitecture:(id)arg1;

@end

@interface ITunesSoftwareServiceCodesignParametersResponse : ITunesSoftwareServiceResponse <ITunesSoftwareServiceCodesignParametersResponse>
{
    NSArray *_parameters;
}

- (void)setParameters:(id)arg1;
- (id)parameters;
- (void)takeValuesFromSeries:(id)arg1;
- (void)dealloc;

@end

@interface ITunesSoftwareCodesignApplication : NSObject <ITunesSoftwareCodesignApplication>
{
    NSString *_bundleIdentifier;
    NSString *_filename;
}

+ (id)applicationWithDictionary:(id)arg1;
+ (id)applicationWithApplication:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)webServiceDescription;
- (void)setFilename:(id)arg1;
- (id)filename;
- (void)setBundleIdentifier:(id)arg1;
- (id)bundleIdentifier;
- (void)dealloc;
- (id)initWithApplication:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface ITunesSoftwareCodesignParameter : NSObject <ITunesSoftwareCodesignParameter>
{
    id <ITunesSoftwareCodesignApplication> _application;
    NSString *_designatedRequirement;
    NSString *_signingIdentifier;
    NSDictionary *_parametersFromServer;
}

+ (id)parameterWithDictionary:(id)arg1;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)setSigningIdentifier:(id)arg1;
- (id)signingIdentifier;
- (void)setDesignatedRequirement:(id)arg1;
- (id)designatedRequirement;
- (void)setApplication:(id)arg1;
- (id)application;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface MZWebServiceSoftwareCodesignParameters : MZITunesProducerServiceClient
{
    int _type;
    id <ITunesSoftwareCodesignApplication> _application;
    NSArray *_otherApplications;
    NSArray *_parameters;
}

- (id)parameters;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)buildParameters:(id *)arg1 withResponse:(id)arg2;
- (void)setOtherApplications:(id)arg1;
- (id)otherApplications;
- (void)setApplication:(id)arg1;
- (id)application;
- (void)setType:(int)arg1;
- (int)type;
- (void)operationWillStart;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (id)generateArguments;
- (void)dealloc;

@end

@interface PNGAnalyzer : NSObject
{
    NSString *_file;
}

+ (id)analyzerWithFile:(id)arg1;
- (id)analyzeData:(id)arg1 file:(id)arg2;
- (id)analyze;
- (void)dealloc;
- (id)initWithFile:(id)arg1;

@end

@interface MZWebServiceValidateHostedContentIAPPackage : MZAbstractWebServiceFileSender
{
    NSString *_appleId;
    NSString *_packagePath;
    NSString *_productId;
}

+ (void)initialize;
- (void)setProductId:(id)arg1;
- (id)productId;
- (void)setPackagePath:(id)arg1;
- (id)packagePath;
- (void)setAppleId:(id)arg1;
- (id)appleId;
- (id)generateArgumentsWithError:(id *)arg1;
- (id)skipProcessingMessage;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;
- (id)init;

@end

@interface OtoolCommandExecutor : MZAbstractToolExecutor
{
    BOOL _mainBundleExecutable;
    NSString *_path;
}

+ (void)initialize;
+ (id)otoolExecutablePath;
@property(nonatomic, getter=isMainBundleExecutable) BOOL mainBundleExecutable; // @synthesize mainBundleExecutable=_mainBundleExecutable;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (Class)executorResultClass;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

@interface OtoolCommandExecutorResult : MZToolExecutorResult
{
}

- (id)describeAsPlist;

@end

@interface MZWebServiceLookupHostedContentInAppPurchasesForSoftware : MZITunesProducerServiceClient
{
    NSArray *_inAppPurchases;
    NSString *_appleId;
    NSArray *_displayableKeys;
}

- (id)displayableKeys;
- (void)setAppleId:(id)arg1;
- (id)appleId;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (id)generateArgumentsWithError:(id *)arg1;
- (void)operationWillStart;
- (id)inAppPurchases;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface MZWebServiceLookupSoftwareWithHostedContent : MZITunesProducerServiceClient
{
    NSArray *_applications;
    NSArray *_applicationAttributes;
    NSArray *_displayableKeys;
}

- (id)displayableKeys;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)applicationAttributes;
- (id)applications;
- (id)completedMessage;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface ITunesSoftwareServiceSymbolURLResponse : ITunesSoftwareServiceResponse <ITunesSoftwareServiceSymbolURLResponse>
{
    NSDictionary *_urls;
}

@property(retain, nonatomic) NSDictionary *urls; // @synthesize urls=_urls;

@end

@interface ITunesInAppPurchasePackageBuilderWorker : ITunesPurpleSoftwarePackageBuilderWorker
{
}

- (id)metadataTemplateName;

@end

@interface MZWebServiceLookupSymbolURLsForSoftwareVersion : MZITunesProducerServiceClient
{
    NSDictionary *_symbolURLs;
    NSArray *_symbolUUIDs;
}

@property(retain, nonatomic) NSArray *symbolUUIDs; // @synthesize symbolUUIDs=_symbolUUIDs;
@property(retain, nonatomic) NSDictionary *symbolURLs; // @synthesize symbolURLs=_symbolURLs;
- (id)processUncancelledSuccessfulResult:(id)arg1;
- (void)operationWillStart;
- (id)completedMessage;
- (id)generateArguments;
- (id)runningMessage;
- (id)initialMessage;
- (id)operationMethod;
- (void)dealloc;

@end

@interface ITunesPurplePackageDescriberContext : ITunesAbstractPurpleSoftwareDescriberContext
{
    NSMutableArray *_files;
    NSMutableArray *_unbundledPaths;
    NSDictionary *_productutilOutput;
    NSArray *_payloadPaths;
}

+ (id)contextWithPath:(id)arg1;
@property(retain, nonatomic) NSArray *payloadPaths; // @synthesize payloadPaths=_payloadPaths;
- (id)describeAsPlist;
- (id)describeAllWarnings;
- (id)describeAllErrors;
- (void)addUnbundledPath:(id)arg1;
- (id)unbundledPaths;
- (void)addFile:(id)arg1;
- (id)files;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface ITunesPurpleBundleDescriberContext : ITunesAbstractPurpleSoftwareDescriberContext
{
    NSString *_bundleIdentifier;
    NSString *_bundlePath;
    NSObject *_CFBundleShortVersionString;
    NSObject *_CFBundleVersion;
    NSDictionary *_infoPlist;
    NSString *_infoPlistPath;
    NSMutableArray *_iconAnalysisResults;
    NSMutableArray *_launchImageAnalysisResults;
    NSMutableArray *_archs;
    NSNumber *_hasMASReceipt;
    ITunesSigningAnalyzerResult *_signingAnalyzerResult;
    ITunesAbstractPurpleSoftwareDescriberContext *_nonretainedParentContext;
}

+ (id)deviceAndOperatingSystemSuffixPermutations;
+ (id)deviceKeyVariants;
+ (id)operatingSystemKeyVariants;
+ (id)contextWithInfoPlist:(id)arg1;
- (id)description;
- (id)describeAsPlist;
- (BOOL)isInfoPlistUTF8Compliant;
- (id)coerceURL:(id)arg1;
- (id)describeAllWarnings;
- (id)describeAllErrors;
- (void)setParentContext:(id)arg1;
- (id)parentContext;
- (BOOL)isFramework;
- (void)addArchs:(id)arg1;
- (id)archs;
- (void)setSigningAnalyzerResult:(id)arg1;
- (id)signingAnalyzerResult;
- (void)setHasMASReceipt:(BOOL)arg1;
- (BOOL)hasMASReceipt;
- (id)infoPlistKeyVariantsForKey:(id)arg1 keySuffixes:(id)arg2;
- (id)infoPlistKeyVariantsForKey:(id)arg1;
- (void)addLaunchImageAnalysisResults:(id)arg1;
- (id)launchImageAnalysisResults;
- (void)addIconAnalysisResults:(id)arg1;
- (id)iconAnalysisResults;
- (void)setInfoPlistPath:(id)arg1;
- (id)infoPlistPath;
- (id)infoPlist;
- (id)CFBundleVersion;
- (id)CFBundleShortVersionString;
- (id)fullBundlePath;
- (void)setBundlePath:(id)arg1;
- (id)bundlePath;
- (void)setBundleIdentifier:(id)arg1;
- (id)bundleIdentifier;
- (void)dealloc;
- (id)initWithInfoPlist:(id)arg1;

@end

@interface ITunesPurpleProductMetadataDescriberContext : ITunesAbstractPurpleSoftwareDescriberContext
{
    NSNumber *_archiveBytes;
    NSString *_fileName;
    NSMutableArray *_packages;
    NSDictionary *_productutilOutput;
    MZToolExecutorResult *_xarCommandResult;
}

+ (id)uniqueErrorCodes;
+ (id)context;
+ (void)initialize;
+ (id)defaultCodesToUnique;
@property(retain, nonatomic) MZToolExecutorResult *xarCommandResult; // @synthesize xarCommandResult=_xarCommandResult;
- (id)describeAsPlist;
- (id)describeVersionAsPlist;
- (id)describeXarResultAsPlist:(id)arg1;
- (void)mergeFromDictionary:(id)arg1 intoDictionary:(id *)arg2;
- (id)describeAllWarnings;
- (id)describeAllErrors;
- (id)uniqueErrors:(id)arg1;
- (void)mergeFromArray:(id)arg1 intoArray:(id *)arg2;
- (void)addPackage:(id)arg1;
- (id)packages;
- (void)setProductutilOutput:(id)arg1;
- (id)productutilOutput;
- (void)setFileName:(id)arg1;
- (id)fileName;
- (void)setArchiveBytes:(id)arg1;
- (id)archiveBytes;
- (id)xcodeVersions;
- (id)xcodeVersionDictionaryWithVersion:(id)arg1 path:(id)arg2;
- (id)versionPathWithBundlePath:(id)arg1;
- (id)versionDictionaryWithPath:(id)arg1;
- (id)osVersion;
- (id)toolVersion;
- (void)dealloc;
- (id)init;

@end

@interface ITunesSoftwareApplicationVersionDescription : ITunesSoftwareApplicationDescription <ITunesSoftwareVersionDescription, ITunesSoftwareApplicationDescription>
{
    BOOL _wasApprovedForPrereleaseDistribution;
    BOOL _wasApprovedForSaleDistribution;
    NSURL *_imageURL;
    NSArray *_extensions;
    NSArray *_XPCServices;
    NSArray *_childApplications;
    NSArray *_supportedDevices;
    NSArray *_supportedOSVersions;
    NSString *_marketingVersion;
    NSString *_shortVersion;
    NSString *_version;
    NSDictionary *_binaryUUIDs;
}

@property(retain, nonatomic) NSDictionary *binaryUUIDs; // @synthesize binaryUUIDs=_binaryUUIDs;
@property(retain, nonatomic) NSString *version; // @synthesize version=_version;
@property(retain, nonatomic) NSString *shortVersion; // @synthesize shortVersion=_shortVersion;
@property(retain, nonatomic) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
@property(readonly) NSArray *supportedOSVersions; // @synthesize supportedOSVersions=_supportedOSVersions;
@property(nonatomic) BOOL wasApprovedForSaleDistribution; // @synthesize wasApprovedForSaleDistribution=_wasApprovedForSaleDistribution;
@property(nonatomic) BOOL wasApprovedForPrereleaseDistribution; // @synthesize wasApprovedForPrereleaseDistribution=_wasApprovedForPrereleaseDistribution;
@property(retain, nonatomic) NSArray *supportedDevices; // @synthesize supportedDevices=_supportedDevices;
@property(retain, nonatomic) NSArray *childApplications; // @synthesize childApplications=_childApplications;
@property(retain, nonatomic) NSArray *XPCServices; // @synthesize XPCServices=_XPCServices;
@property(retain, nonatomic) NSArray *extensions; // @synthesize extensions=_extensions;
@property(retain, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (void)extractApplicationType:(id)arg1;
- (void)extractSupportedOSVersions:(id)arg1;
- (void)extractSupportedDevices:(id)arg1;
- (void)extractXPCServices:(id)arg1;
- (void)extractExtensions:(id)arg1;
- (void)extractChildApplications:(id)arg1;
- (void)extractBaseProperties:(id)arg1;
- (void)extractApplicationVersionMetadata:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (void)dealloc;

@end

@interface MachDwarfdumpExecutor : MZAbstractToolExecutor
{
    NSString *_executablePath;
}

+ (id)executablePathFromAppWrapperPath:(id)arg1;
+ (void)initialize;
+ (id)dwarfdumpExecutablePath;
- (id)executeWithError:(id *)arg1;
- (void)processExitCode:(id)arg1;
- (id)taskWithError:(id *)arg1;
- (void)setPath:(id)arg1;
- (void)setExecutablePath:(id)arg1;
- (id)path;
- (id)executablePath;
- (void)dealloc;
- (id)initWithExecutablePath:(id)arg1;
- (id)initWithAppWrapperPath:(id)arg1;

@end

@interface ITunesPurpleProductMetadataDescriber : NSObject
{
    PurpleApplicationArchiveExpander *_expander;
    FirenzeArchiveExpander *_macExpander;
    NSMutableArray *_iconFiles;
    NSMutableArray *_resourceSpecifications;
    NSString *_path;
    NSString *_extractionPath;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *extractionPath; // @synthesize extractionPath=_extractionPath;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (id)describeArchiveWithErrors:(id *)arg1;
- (id)describeVersionAsPlist;
- (id)describePurpleArchiveWithErrors:(id *)arg1;
- (id)describeFirenzeArchiveWithErrors:(id *)arg1;
- (id)describeWithErrors:(id *)arg1;
- (id)describeProductMetadataAtPath:(id)arg1 productutilOutput:(id)arg2;
- (id)describePackageAtPath:(id)arg1 payloadPaths:(id)arg2;
- (void)describeBundlesAtPath:(id)arg1 context:(id)arg2;
- (id)createBundleAndAddExecutable:(id)arg1 parentContext:(id)arg2;
- (void)determineBundlePayloadPath:(id)arg1 parentContext:(id)arg2;
- (void)determinePayloadPath:(id)arg1 parentContext:(id)arg2;
- (id)describeBundle:(id)arg1 context:(id)arg2;
- (id)signingAnalysis:(id)arg1 withError:(id *)arg2;
- (void)describeFilesAtPath:(id)arg1 context:(id)arg2;
- (void)determineIfFileOfInterest:(id)arg1 context:(id)arg2 isDirectory:(BOOL)arg3 bundleExecutables:(id)arg4;
- (void)checkBundleExecutable:(id)arg1 bundleExecutables:(id)arg2 context:(id)arg3;
- (BOOL)foundPath:(id)arg1 inBundleExecutables:(id)arg2;
- (void)checkFrameworkFilesOnFile:(id)arg1;
- (void)determineIfWeShouldIncludeFileData:(id)arg1;
- (void)checkFileIsExecutable:(id)arg1;
- (void)checkExternalAttributesOnFile:(id)arg1;
- (void)checkHasExtendedAttributesOnFile:(id)arg1;
- (void)checkHasResourceForkOnFile:(id)arg1;
- (void)checkHasACLOnFile:(id)arg1;
- (void)checkResourceSpecifications:(id)arg1 context:(id)arg2;
- (void)checkIncludedImagesOnFile:(id)arg1;
- (void)checkFilenameOnFile:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)init;

@end

@interface ITunesPurpleBundleIconDescriber : NSObject
{
    ITunesPurpleBundleDescriberContext *_context;
}

+ (id)defaultImageNames;
+ (id)allowedIconExtensions;
+ (id)describerWithContext:(id)arg1;
+ (void)initialize;
- (BOOL)execute;
- (id)findAllImagesUsingImagesAsPrefixName:(id)arg1;
- (id)allIconsNamesRemovingAllowedIconExtensions:(id)arg1;
- (id)addDefaultImages:(id)arg1;
- (BOOL)describeIconsNamed:(id)arg1 errorIfAbsent:(BOOL)arg2;
- (id)describeIconNamed:(id)arg1 required:(BOOL)arg2 error:(id *)arg3;
- (id)findIconDirectlyUnderPathNamed:(id)arg1;
- (id)allReferencedIconNamesRegardlessOfOSVersionWithError:(id *)arg1;
- (id)findAllIconsWithPrefixNames:(id)arg1 inDirectory:(id)arg2;
- (id)context;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface ITunesAbstractPurpleSoftwareDescriberContext : NSObject <BundleDescriberContext>
{
    NSMutableArray *_errors;
    NSMutableArray *_warnings;
    NSMutableArray *_bundles;
    NSMutableArray *_frameworkFiles;
    NSString *_path;
    NSString *_fullPath;
    NSString *_relativePath;
    NSMutableArray *_bundleExecutables;
    NSString *_mainBundleExecutablePath;
}

@property(retain, nonatomic) NSString *mainBundleExecutablePath; // @synthesize mainBundleExecutablePath=_mainBundleExecutablePath;
- (void)addBundleExecutable:(id)arg1;
- (id)bundleExecutables;
- (void)addFrameworkFiles:(id)arg1;
- (void)addFrameworkFile:(id)arg1;
- (id)frameworkFiles;
- (void)setRelativePath:(id)arg1;
- (id)relativePath;
- (void)setFullPath:(id)arg1;
- (id)fullPath;
- (void)setPath:(id)arg1;
- (id)path;
- (void)addBundle:(id)arg1;
- (id)bundles;
- (void)addWarnings:(id)arg1;
- (void)addWarning:(id)arg1;
- (id)warnings;
- (void)addErrors:(id)arg1;
- (void)addError:(id)arg1;
- (id)describeWarnings;
- (id)describeErrors;
- (id)errors;
- (void)dealloc;
- (id)init;

@end

@interface ITunesPurpleFileOfInterest : NSObject
{
    NSMutableArray *_reasons;
    NSNumber *_hasResourceFork;
    NSNumber *_hasFinderInfo;
    NSNumber *_hasExtendedAttributes;
    NSNumber *_hasACL;
    ITunesPurplePackageDescriberContext *_nonretainedContext;
    BOOL _isConsideredExecutable;
    BOOL _machOExecutable;
    BOOL _executableScript;
    BOOL _bundleExecutable;
    BOOL _mainBundleExecutable;
    BOOL _isSymlink;
    BOOL _isDirectory;
    NSString *_fullPath;
    NSNumber *_posixValue;
    MZToolExecutorResult *_fileCommandOutput;
    MZToolExecutorResult *_otoolCommandOutput;
    MZToolExecutorResult *_lipoCommandOutput;
    MZToolExecutorResult *_dwarfdumpCommandOutput;
    MZToolExecutorResult *_codesignAllocateResult;
    NSString *_uti;
    NSString *_type;
    NSNumber *_size;
    NSString *_symlinkTarget;
    NSData *_fileData;
    ITunesSigningAnalyzerResult *_signingAnalyzerResult;
    ITunesSigningAnalyzerArchBoundResult *_archBoundSigningAnalyzerResult;
    NSData *_infoPlistStrings;
}

+ (id)fileOfInterestWithPath:(id)arg1 context:(id)arg2;
+ (void)initialize;
@property(retain, nonatomic) NSData *infoPlistStrings; // @synthesize infoPlistStrings=_infoPlistStrings;
@property(retain, nonatomic) ITunesSigningAnalyzerArchBoundResult *archBoundSigningAnalyzerResult; // @synthesize archBoundSigningAnalyzerResult=_archBoundSigningAnalyzerResult;
@property(retain, nonatomic) ITunesSigningAnalyzerResult *signingAnalyzerResult; // @synthesize signingAnalyzerResult=_signingAnalyzerResult;
@property(nonatomic) BOOL isDirectory; // @synthesize isDirectory=_isDirectory;
@property(retain, nonatomic) NSData *fileData; // @synthesize fileData=_fileData;
@property(nonatomic) BOOL isSymlink; // @synthesize isSymlink=_isSymlink;
@property(retain, nonatomic) NSString *symlinkTarget; // @synthesize symlinkTarget=_symlinkTarget;
@property(retain, nonatomic) NSNumber *size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *uti; // @synthesize uti=_uti;
@property(retain, nonatomic) MZToolExecutorResult *codesignAllocateResult; // @synthesize codesignAllocateResult=_codesignAllocateResult;
@property(retain, nonatomic) MZToolExecutorResult *dwarfdumpCommandOutput; // @synthesize dwarfdumpCommandOutput=_dwarfdumpCommandOutput;
@property(retain, nonatomic) MZToolExecutorResult *lipoCommandOutput; // @synthesize lipoCommandOutput=_lipoCommandOutput;
@property(retain, nonatomic) MZToolExecutorResult *otoolCommandOutput; // @synthesize otoolCommandOutput=_otoolCommandOutput;
@property(retain, nonatomic) MZToolExecutorResult *fileCommandOutput; // @synthesize fileCommandOutput=_fileCommandOutput;
@property(retain, nonatomic) NSNumber *posixValue; // @synthesize posixValue=_posixValue;
@property(retain, nonatomic) NSString *fullPath; // @synthesize fullPath=_fullPath;
@property(nonatomic, getter=isMainBundleExecutable) BOOL mainBundleExecutable; // @synthesize mainBundleExecutable=_mainBundleExecutable;
@property(nonatomic, getter=isBundleExecutable) BOOL bundleExecutable; // @synthesize bundleExecutable=_bundleExecutable;
@property(nonatomic, getter=isExecutableScript) BOOL executableScript; // @synthesize executableScript=_executableScript;
@property(nonatomic, getter=isMachOExecutable) BOOL machOExecutable; // @synthesize machOExecutable=_machOExecutable;
- (id)describeAsPlist;
- (void)execute;
- (void)checkInfoPlistStringsFile;
- (void)checkFileSize;
- (void)checkFileUti;
- (void)checkDwarfdumpCommand;
- (void)checkCerts;
- (void)checkCodeSigningisValid;
- (void)checkLipoCommand;
- (void)checkCodesignAllocate:(id)arg1;
- (BOOL)shouldIncludeLipoErrorExtractingArchitectureInfo:(id)arg1;
- (void)checkOtoolCommand;
- (void)checkFileCommand;
- (BOOL)skipSymlinkDescription;
@property(nonatomic, getter=isConsideredExecutable) BOOL consideredExecutable;
- (BOOL)isFileOfInterest;
- (void)setHasACL:(BOOL)arg1;
- (BOOL)hasACL;
- (void)setHasExtendedAttributes:(BOOL)arg1;
- (BOOL)hasExtendedAttributes;
- (void)setHasFinderInfo:(BOOL)arg1;
- (BOOL)hasFinderInfo;
- (void)setHasResourceFork:(BOOL)arg1;
- (BOOL)hasResourceFork;
- (id)fileName;
- (id)path;
- (void)addReasonCode:(long long)arg1;
- (id)context;
- (void)dealloc;
- (id)initWithPath:(id)arg1 context:(id)arg2;

@end

@interface ITunesPurpleBundleLaunchImageDescriber : ITunesPurpleBundleIconDescriber
{
}

+ (id)defaultImageNames;
- (BOOL)execute;
- (BOOL)describeLaunchImagesNamed:(id)arg1 errorIfAbsent:(BOOL)arg2;
- (id)allReferencedLaunchImageNamesRegardlessOfOSVersionWithErrors:(id *)arg1;

@end

@interface MZWebServicePurpleArchiveExtractorWorker : MZAbstractWorker
{
    PurpleApplicationArchiveExpander *_expander;
    NSString *_archivePath;
    NSString *_extractionPath;
    id _delegate;
}

@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *extractionPath; // @synthesize extractionPath=_extractionPath;
@property(retain, nonatomic) NSString *archivePath; // @synthesize archivePath=_archivePath;
@property(retain, nonatomic) PurpleApplicationArchiveExpander *expander; // @synthesize expander=_expander;
- (void)seriesCompleted;
- (void)run;
- (id)initWithArchivePath:(id)arg1;

@end

@interface MZWebServiceFirenzeArchiveExtractorWorker : MZAbstractWorker
{
    FirenzeArchiveExpander *_expander;
    NSString *_archivePath;
    NSString *_extractionPath;
    id _delegate;
}

@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *extractionPath; // @synthesize extractionPath=_extractionPath;
@property(retain, nonatomic) NSString *archivePath; // @synthesize archivePath=_archivePath;
@property(retain, nonatomic) FirenzeArchiveExpander *expander; // @synthesize expander=_expander;
- (void)cleanupDestinationDirectory;
- (void)run;
- (id)mainBundlePathWithData:(id)arg1 error:(id *)arg2;
- (id)initWithArchivePath:(id)arg1;

@end

@interface ITunesContextualError : NSError
{
    int _osStatus;
    NSString *_path;
}

+ (id)errorWithError:(id)arg1;
@property(nonatomic) int osStatus; // @synthesize osStatus=_osStatus;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (id)describeAsPlist;
- (void)dealloc;
- (id)initWithError:(id)arg1;

@end

@interface ITunesSigningAnalyzerArchBound : NSObject
{
    NSString *_path;
    NSArray *_architectures;
}

@property(retain, nonatomic) NSArray *architectures; // @synthesize architectures=_architectures;
- (id)analyzeExecutableAtPathWithError:(id *)arg1;
- (id)analyzeWithError:(id *)arg1;
- (id)analyzeExecutableAtPath:(id)arg1 error:(id *)arg2;
- (id)extractResultForURL:(id)arg1 attributes:(id)arg2 error:(id *)arg3;
- (id)extractArchitecturesForURL:(id)arg1 error:(id *)arg2;
- (id)cleanFormatString:(id)arg1;
- (id)executablePath;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface ITunesSigningAnalyzerArchBoundResult : NSObject
{
    NSDictionary *_archDataBoundData;
}

+ (id)resultWithArchBoundData:(id)arg1;
+ (id)signingAnalysisWithCertificates:(id)arg1 entitlements:(id)arg2 entitlementsData:(id)arg3 signingIdentifier:(id)arg4 signingTeamIdentifier:(id)arg5;
@property(retain, nonatomic) NSDictionary *archDataBoundData; // @synthesize archDataBoundData=_archDataBoundData;
- (id)description;
- (id)descriptionWithLocale:(id)arg1 indent:(unsigned long long)arg2;
- (id)describeAsPlist;
- (BOOL)hasData;
- (void)dealloc;
- (id)initWithArchBoundData:(id)arg1;

@end

@interface ITunesPackageSource (ITunesSoftwareServiceExtensions)
- (void)packageBuilderDidComplete:(id)arg1;
@end

@interface NSError (ITunesSoftwareServiceExtensions)
- (id)describeAsPlist;
@end

