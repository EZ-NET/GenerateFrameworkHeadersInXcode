//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct HDSyncAnchorRange {
    long long _field1;
    long long _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct map<long long, _HDDiscreteStats, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDDiscreteStats>>> {
    struct __tree<std::__1::__value_type<long long, _HDDiscreteStats>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDDiscreteStats>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, _HDDiscreteStats>>> {
        struct __tree_node<std::__1::__value_type<long long, _HDDiscreteStats>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, _HDDiscreteStats>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, _HDDiscreteStats>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>> {
    struct __tree<std::__1::__value_type<long long, double>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, double>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, double>>> {
        struct __tree_node<std::__1::__value_type<long long, double>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, double>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, double>, std::__1::less<long long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

#pragma mark Typedef'd Structures

typedef struct {
    double avg;
    double max;
    double min;
    unsigned long long count;
} CDStruct_23c51cd0;

typedef struct {
    double _field1;
    double _field2;
    long long _field3;
    long long _field4;
    double _field5;
} CDStruct_dd92d3d0;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
// UUID: 3A517B16-F2D0-3947-B718-DA60D5AC14A7
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 451.7.0.0.0
//            Minimum iOS version: 8.2.0
//                    SDK version: 8.2.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol HDCoding <NSObject>
+ (id)createWithCodable:(PBCodable *)arg1;
- (PBCodable *)codableRepresentationForSync;
@end

@protocol HDDataEntity <HDSQLiteEntity>
+ (NSArray *)codableObjectsFromObjectCollection:(HDCodableObjectCollection *)arg1;
+ (NSArray *)deleteStatementsForRelatedEntitiesInDatabase:(HDSQLiteDatabase *)arg1;
+ (NSArray *)entitiesToDeleteBeforeInsertingObject:(HKObject *)arg1 sourceEntity:(HDSourceEntity *)arg2 database:(HDSQLiteDatabase *)arg3;
+ (_Bool)acceptsObject:(HKObject *)arg1;
+ (Class)propertyApplierClass;
+ (HDDataPropertyApplier *)propertyApplierWithProperties:(NSArray *)arg1 propertySetters:(NSDictionary *)arg2 authorizationFilter:(NSArray * (^)(NSArray *))arg3 database:(HDSQLiteDatabase *)arg4;
+ (_Bool)isBackedByTable;
+ (long long)preferredEntityType;
+ (NSString *)columnNameForSortIdentifier:(NSString *)arg1;
+ (NSArray *)codableObjectCollectionsWithExcludedSyncStore:(id <HDSyncStore>)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 limit:(unsigned long long)arg4 healthDaemon:(id <HDHealthDaemon>)arg5 error:(id *)arg6;
+ (_Bool)addCodableObjectsToCollections:(NSMutableDictionary *)arg1 excludedSyncStore:(id <HDSyncStore>)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3 lastSyncAnchor:(long long *)arg4 predicate:(HDSQLitePredicate *)arg5 limit:(unsigned long long)arg6 healthDaemon:(id <HDHealthDaemon>)arg7 error:(id *)arg8;
+ (HKObject *)objectWithUUID:(NSUUID *)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 error:(id *)arg3;
+ (long long)countOfObjectsOfType:(long long)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 predicate:(HDSQLitePredicate *)arg3 withError:(id *)arg4;
+ (NSArray *)sourceIDsForObjectsOfType:(long long)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 predicate:(HDSQLitePredicate *)arg3 error:(id *)arg4;
+ (void)enumerateObjectsOfType:(long long)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 predicate:(HDSQLitePredicate *)arg3 sourceIdentifier:(NSNumber *)arg4 authorizationFilter:(NSArray * (^)(NSArray *))arg5 limit:(unsigned long long)arg6 anchor:(id *)arg7 handler:(void (^)(HKObject *, long long, _Bool *, NSError *))arg8;
+ (void)enumerateObjectsOfType:(long long)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 predicate:(HDSQLitePredicate *)arg3 sourceIdentifier:(NSNumber *)arg4 authorizationFilter:(NSArray * (^)(NSArray *))arg5 orderBy:(NSArray *)arg6 directions:(NSArray *)arg7 limit:(unsigned long long)arg8 handler:(void (^)(HKObject *, long long, _Bool *, NSError *))arg9;
+ (void)enumerateObjectsWithHealthDaemon:(id <HDHealthDaemon>)arg1 predicate:(HDSQLitePredicate *)arg2 sourceIdentifier:(NSNumber *)arg3 authorizationFilter:(NSArray * (^)(NSArray *))arg4 orderBy:(NSArray *)arg5 directions:(NSArray *)arg6 limit:(unsigned long long)arg7 handler:(void (^)(HKObject *, long long, _Bool *, NSError *))arg8;
+ (id)dataEntityForObject:(HKObject *)arg1 healthDaemon:(id <HDHealthDaemon>)arg2 error:(id *)arg3;
+ (_Bool)deleteDataObjects:(NSArray *)arg1 sourceEntity:(HDSourceEntity *)arg2 failIfNotFound:(_Bool)arg3 healthDaemon:(id <HDHealthDaemon>)arg4 error:(id *)arg5;
+ (_Bool)deleteDataObjects:(NSArray *)arg1 sourceEntity:(HDSourceEntity *)arg2 healthDaemon:(id <HDHealthDaemon>)arg3 error:(id *)arg4;
+ (void)insertDataObjects:(NSArray *)arg1 withProvenance:(long long)arg2 sourceEntity:(HDSourceEntity *)arg3 creationDate:(NSDate *)arg4 healthDaemon:(id <HDHealthDaemon>)arg5 completionHandler:(void (^)(_Bool, _Bool, HDDataEntity *, NSError *))arg6;
+ (id)insertDataObject:(HKObject *)arg1 withProvenance:(long long)arg2 sourceEntity:(HDSourceEntity *)arg3 creationDate:(NSDate *)arg4 healthDaemon:(id <HDHealthDaemon>)arg5 error:(id *)arg6;
- (NSNumber *)dataAnchor;
@end

@protocol HDDataObserver <NSObject>
- (void)samplesAdded:(NSArray *)arg1 anchor:(NSNumber *)arg2;

@optional
- (void)samplesOfTypeWereRemoved:(HKSampleType *)arg1;
- (void)samplesJournaled:(NSArray *)arg1 type:(HKSampleType *)arg2;
@end

@protocol HDDatabaseProtectedDataObserver <NSObject>
- (void)database:(id <HDHealthDatabase>)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
@end

@protocol HDDiagnosticObject <NSObject>
- (NSString *)diagnosticDescription;
@end

@protocol HDHealthDaemon <NSObject>
@property(readonly) HDProcessStateManager *processStateManager;
@property(readonly) HDBackgroundTaskScheduler *backgroundTaskScheduler;
@property(readonly) HDContentProtectionManager *contentProtectionManager;
@property(readonly) HDUserCharacteristicsManager *userCharacteristicsManager;
@property(readonly) id <HDDaemonDeviceManager> healthDeviceManager;
@property(readonly) id <HDHealthMetadataManager> healthMetadataManager;
@property(readonly) id <HDHealthSourceManager> healthSourceManager;
@property(readonly) id <HDSyncEngine> syncEngine;
@property(readonly) id <HDHealthDataManager> healthDataManager;
@property(readonly) id <HDHealthDataCollectionManager> healthDataCollectionManager;
@property(readonly) id <HDHealthDatabase> healthDatabase;
@property(readonly) NSString *homeDirectoryPath;
- (void)pauseActiveWorkoutsWithCompletion:(void (^)(void))arg1;
- (_Bool)containsActiveWorkouts;
- (void)terminate;
- (void)performBlockWithPowerAssertionIdentifier:(NSString *)arg1 transactionName:(NSString *)arg2 powerAssertionInterval:(double)arg3 block:(void (^)(void))arg4;
- (void)invalidateActivityAlertSuppressionForBundleIdentifier:(NSString *)arg1;
- (void)suppressActivityAlertsForBundleIdentifier:(NSString *)arg1 reason:(long long)arg2;
- (void)setDataCollectionOptions:(NSDictionary *)arg1 forKey:(NSString *)arg2 type:(HKSampleType *)arg3 clientUUID:(NSUUID *)arg4;
- (void)unregisterForLaunchNotification:(const char *)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (_Bool)persistAndNotifyDataObject:(HKObject *)arg1 error:(id *)arg2;
- (void)endTransaction:(NSString *)arg1;
- (void)beginTransaction:(NSString *)arg1;
- (void)setPairedWatchBundleIdentifierProvider:(id <HDPairedWatchBundleIdentifierProvider>)arg1;
- (void)registerForDaemonReady:(id <HDHealthDaemonReadyObserver>)arg1;
@end

@protocol HDHealthDaemonReadyObserver <NSObject>
- (void)daemonReady:(id <HDHealthDaemon>)arg1;
@end

@protocol HDHealthDataCollector <NSObject>
@property _Bool disabled;
- (NSString *)dataCollectorDiagnosticDescription;
- (void)updateHistoricalData;
- (void)collectionStoppedForType:(HKObjectType *)arg1;
- (void)updateCollectionInterval:(double)arg1 forType:(HKObjectType *)arg2;
- (void)collectionStartedForType:(HKObjectType *)arg1 collectionInterval:(double)arg2;
@end

@protocol HDIDSMessageCenterDelegate <NSObject>

@optional
- (void)messageCenter:(HDIDSMessageCenter *)arg1 didResolveIDSIdentifierForResponse:(HDIDSOutgoingResponse *)arg2;
- (void)messageCenter:(HDIDSMessageCenter *)arg1 didResolveIDSIdentifierForRequest:(HDIDSOutgoingRequest *)arg2;
- (void)messageCenter:(HDIDSMessageCenter *)arg1 didReceiveUnknownRequest:(HDIDSIncomingRequest *)arg2;
@end

@protocol HDNanoSyncDescription <NSObject>
- (NSString *)nanoSyncDescription;
@end

@protocol HDNanoSyncEntity
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (long long)finalAnchorForNanoSyncRestoreWithStore:(id <HDSyncStore>)arg1 deviceSourceIdentifier:(NSString *)arg2 nowDate:(NSDate *)arg3 healthDaemon:(id <HDHealthDaemon>)arg4 error:(id *)arg5;
+ (NSArray *)objectsForNanoSyncRestoreWithStore:(id <HDSyncStore>)arg1 deviceSourceIdentifier:(NSString *)arg2 nowDate:(NSDate *)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 lastSyncAnchor:(long long *)arg5 healthDaemon:(id <HDHealthDaemon>)arg6 error:(id *)arg7;
+ (int)nanoSyncObjectType;
@end

@protocol HDNanoSyncPersistentUserInfoCopying <NSObject>
+ (NSString *)persistentUserInfoKey;
+ (id)retreiveFromPersistentUserInfo:(NSDictionary *)arg1;
- (PBCodable *)copyForPersistentUserInfo;
- (void)addToPersistentUserInfo:(NSMutableDictionary *)arg1;
- (id)initWithData:(NSData *)arg1;
@end

@protocol HDPairedWatchBundleIdentifierProvider <NSObject>
- (NSString *)pairedWatchSourceBundleIdentifier;
@end

@protocol HDProcessStateObserver <NSObject>

@optional
- (void)processDidEnterForeground:(NSString *)arg1;
- (void)processDidEnterBackground:(NSString *)arg1;
- (void)processResumed:(NSString *)arg1;
- (void)processSuspended:(NSString *)arg1;
@end

@protocol HDSQLiteEntity <NSObject>
+ (void)applyPropertySetters:(NSDictionary *)arg1 toObject:(id)arg2 withProperties:(NSArray *)arg3 values:(id *)arg4;
+ (NSString *)associationPropertyForEntityClass:(Class)arg1;
+ (NSString *)databasePropertyToSetClientProperty:(NSString *)arg1;
+ (NSString *)databasePropertyToGetClientProperty:(NSString *)arg1;
+ (NSMutableDictionary *)copyDatabaseDictionaryToSetClientDictionary:(NSDictionary *)arg1;
+ (NSString *)disambiguatedSQLForProperty:(NSString *)arg1;
+ (NSSet *)foreignDatabaseTablesToDelete;
+ (NSString *)foreignKeyColumnForTable:(NSString *)arg1;
+ (NSString *)foreignDatabaseTableForProperty:(NSString *)arg1;
+ (NSString *)foreignDatabaseColumnForProperty:(NSString *)arg1;
+ (NSString *)joinClauseForProperty:(NSString *)arg1;
+ (NSString *)disambiguatedDatabaseTable;
+ (NSString *)databaseTable;
+ (NSString *)databaseName;
+ (id)databaseValueForProperty:(NSString *)arg1 clientValue:(id)arg2;
+ (HDSQLiteStatement *)deleteStatementWithProperty:(NSString *)arg1 database:(HDSQLiteDatabase *)arg2;
- (_Bool)getValuesForProperties:(NSArray *)arg1 withDatabase:(HDSQLiteDatabase *)arg2 applier:(void (^)(NSArray *, id *))arg3;
- (_Bool)deleteFromDatabase:(HDSQLiteDatabase *)arg1 error:(id *)arg2;
- (_Bool)deleteFromDatabase:(HDSQLiteDatabase *)arg1;
- (id)valueForExternalProperty:(NSString *)arg1;
- (void)setExternalValuesWithDictionary:(NSDictionary *)arg1;
- (_Bool)setValuesWithDictionary:(NSDictionary *)arg1 database:(HDSQLiteDatabase *)arg2;
- (_Bool)setValue:(id)arg1 forProperty:(NSString *)arg2 database:(HDSQLiteDatabase *)arg3;
- (_Bool)getValues:(id *)arg1 forProperties:(id *)arg2 count:(unsigned long long)arg3 database:(HDSQLiteDatabase *)arg4;
- (id)valueForProperty:(NSString *)arg1 database:(HDSQLiteDatabase *)arg2;

@optional
+ (NSString *)columnNameForSortIdentifier:(NSString *)arg1;
@end

@protocol HDSyncAnchorMap <NSObject>
- (unsigned long long)anchorCount;
- (void)enumerateAnchorsAndSyncEntitiesWithBlock:(void (^)(Class, long long, _Bool *))arg1;
- (long long)anchorForSyncEntityClass:(Class)arg1;
- (void)setAnchor:(long long)arg1 forSyncEntity:(Class)arg2;
@end

@protocol HDSyncChange <HDSyncObjectCollection>
- (struct HDSyncAnchorRange)syncAnchorRange;
- (void)setObjects:(NSArray *)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2;
@end

@protocol HDSyncCodable <NSObject>
- (NSData *)data;
- (id)initWithData:(NSData *)arg1;
@end

@protocol HDSyncEntity <NSObject>
+ (_Bool)receiveSyncObjects:(NSArray *)arg1 syncStore:(id <HDSyncStore>)arg2 healthDaemon:(id <HDHealthDaemon>)arg3 error:(id *)arg4;
+ (id <HDSyncCodable>)decodeSyncObjectWithData:(NSData *)arg1;
+ (long long)nextSyncAnchorWithStore:(id <HDSyncStore>)arg1 startSyncAnchor:(long long)arg2 healthDaemon:(id <HDHealthDaemon>)arg3 error:(id *)arg4;
+ (NSArray *)syncObjectsWithStore:(id <HDSyncStore>)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 healthDaemon:(id <HDHealthDaemon>)arg4 error:(id *)arg5;
+ (long long)syncEntityType;
@end

@protocol HDSyncObjectCollection <NSObject>
- (NSArray *)decodedObjects;
- (Class)syncEntityClass;
@end

@protocol HDSyncStore <NSObject>
@property(readonly, nonatomic) NSString *syncStoreIdentifier;
@property(readonly, nonatomic) long long provenance;
- (NSArray *)syncEntities;
- (unsigned long long)syncObjectLimitForEntityClass:(Class)arg1;
- (void)sendChange:(id <HDSyncChange>)arg1 withContext:(id)arg2 completion:(void (^)(_Bool, NSError *))arg3;
- (id <HDSyncChange>)newChangeWithSyncEntityClass:(Class)arg1;

@optional
- (void)syncDidFinishWithContext:(id)arg1 success:(_Bool)arg2 error:(NSError *)arg3;
- (void)syncWillBeginWithContext:(id)arg1;
@end

@protocol HKQueryServer <NSObject>
- (void)resumeServer;
- (void)pauseServerValidateWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)pauseServer;
- (void)deactivateServer;
@end

@protocol IDSServiceDelegate <NSObject>

@optional
- (void)serviceAllowedTrafficClassifiersDidReset:(IDSService *)arg1;
- (void)serviceSpaceDidBecomeAvailable:(IDSService *)arg1;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;
- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 metadata:(NSDictionary *)arg4 fromID:(NSString *)arg5 context:(IDSMessageContext *)arg6;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingResourceAtURL:(NSURL *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface HDAchievementEntity : HDHealthEntity <HDNanoSyncEntity, HDSyncEntity>
{
}

+ (id)_tableValuesFromAchievement:(id)arg1 provenance:(long long)arg2;
+ (id)_propertySettersForAchievement;
+ (id)_predicateForProvenance:(long long)arg1;
+ (id)_predicateForSyncAnchor:(id)arg1;
+ (_Bool)receiveSyncObjects:(id)arg1 syncStore:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)decodeSyncObjectWithData:(id)arg1;
+ (long long)nextSyncAnchorWithStore:(id)arg1 startSyncAnchor:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)syncObjectsWithStore:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)propertyForSyncProvenance;
+ (long long)syncEntityType;
+ (_Bool)markAchievement:(id)arg1 viewedInHealthDatabase:(id)arg2 error:(id *)arg3;
+ (long long)numberOfUnviewedAchievementsInHealthDatabase:(id)arg1;
+ (_Bool)markAchievement:(id)arg1 alertedInHealthDatabase:(id)arg2 error:(id *)arg3;
+ (_Bool)_enumerateAchievementsWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3 usingBlock:(CDUnknownBlockType)arg4;
+ (id)achievementsWithPredicate:(id)arg1 inHealthDatabase:(id)arg2 error:(id *)arg3;
+ (id)_achievementWithProperties:(id)arg1 values:(id *)arg2 propertySetters:(id)arg3;
+ (id)unalertedAchievementsInHealthDatabase:(id)arg1;
+ (long long)countOfUnalertedAchievementsInHealthDatabase:(id)arg1;
+ (id)_unalertedAchievementsPredicate;
+ (id)_insertAchievement:(id)arg1 provenance:(long long)arg2 database:(id)arg3 error:(id *)arg4;
+ (_Bool)_insertAchievements:(id)arg1 provenance:(long long)arg2 healthDatabase:(id)arg3 error:(id *)arg4;
+ (_Bool)insertAchievements:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (_Bool)insertAchievement:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (long long)finalAnchorForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)objectsForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 lastSyncAnchor:(long long *)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (int)nanoSyncObjectType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _HDAchievementInsertionJournalEntry : HDJournalEntry
{
    HKAchievement *_achievement;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) HKAchievement *achievement; // @synthesize achievement=_achievement;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAchievement:(id)arg1;

@end

@interface HDAchievementProgressSyncEntity : HDKeyValueSyncEntity
{
}

+ (long long)syncEntityType;
+ (long long)category;
+ (int)nanoSyncObjectType;

@end

@interface HDDataSyncEntity : NSObject <HDSyncEntity>
{
}

+ (id)_objectsFromCodableObjectsInCollection:(id)arg1;
+ (_Bool)_insertObjectsFromCodableObjectCollection:(id)arg1 syncStore:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (_Bool)receiveSyncObjects:(id)arg1 syncStore:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)decodeSyncObjectWithData:(id)arg1;
+ (long long)nextSyncAnchorWithStore:(id)arg1 startSyncAnchor:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)syncObjectsWithStore:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDSampleSyncEntity : HDDataSyncEntity
{
}

+ (id)sampleTypesByAgeInDaysForNanoSyncRestore;
+ (id)_predicateWithDeviceSourceIdentifier:(id)arg1 nowDate:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (long long)finalAnchorForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)objectsForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 lastSyncAnchor:(long long *)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (int)nanoSyncObjectType;

@end

@interface HDActivityCacheSyncEntity : HDSampleSyncEntity
{
}

+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (id)sampleTypesByAgeInDaysForNanoSyncRestore;
+ (int)nanoSyncObjectType;

@end

@interface HDCategorySampleSyncEntity : HDSampleSyncEntity
{
}

+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (id)sampleTypesByAgeInDaysForNanoSyncRestore;
+ (int)nanoSyncObjectType;

@end

@interface HDCorrelationSampleSyncEntity : HDSampleSyncEntity
{
}

+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;

@end

@interface HDQuantitySampleSyncEntity : HDSampleSyncEntity
{
}

+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (id)sampleTypesByAgeInDaysForNanoSyncRestore;
+ (int)nanoSyncObjectType;

@end

@interface HDWorkoutSyncEntity : HDSampleSyncEntity
{
}

+ (id)_objectWithCodable:(id)arg1;
+ (Class)healthEntityClass;
+ (long long)syncEntityType;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (id)sampleTypesByAgeInDaysForNanoSyncRestore;
+ (int)nanoSyncObjectType;

@end

@interface _HDDiscreteStatsWrapper : NSObject
{
    CDStruct_23c51cd0 stats;
}

- (id).cxx_construct;
- (id)description;
- (id)initWithStats:(const CDStruct_23c51cd0 *)arg1;

@end

@interface HDDiscreteCollectionCalculator : NSObject
{
    CDStruct_23c51cd0 _currentStats;
    struct map<long long, _HDDiscreteStats, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, _HDDiscreteStats>>> _bySource;
    _Bool _detailBySource;
}

@property(nonatomic) _Bool detailBySource; // @synthesize detailBySource=_detailBySource;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (long long)dataCount;
- (_Bool)hasData;
- (id)statsBySource;
- (void)getCurrentBucketStats:(CDStruct_23c51cd0 *)arg1;
- (void)advanceBucket;
- (void)addCurrentValue:(double)arg1 sourceId:(long long)arg2;
- (id)init;

@end

@interface HDIDSMessageCenter : NSObject <IDSServiceDelegate>
{
    NSString *_serviceIdentifier;
    NSString *_launchNotification;
    IDSService *_service;
    NSMutableDictionary *_requestHandlers;
    NSMutableDictionary *_errorHandlers;
    NSMutableDictionary *_responseHandlers;
    NSMutableDictionary *_pbMapping;
    HDIDSPersistentDictionary *_persistentContextStore;
    NSDate *_nextExpireTimerFireDate;
    NSObject<OS_dispatch_source> *_expireTimer;
    NSString *_cacheDirectoryPath;
    id <HDIDSMessageCenterDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <HDIDSMessageCenterDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *cacheDirectoryPath; // @synthesize cacheDirectoryPath=_cacheDirectoryPath;
- (void).cxx_destruct;
- (id)_queue;
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;
- (void)_handleError:(id)arg1 context:(id)arg2;
- (void)_sendResponse:(id)arg1;
- (void)sendRequest:(id)arg1;
- (void)dropExtantMessages;
@property(readonly, nonatomic) IDSService *idsService; // @dynamic idsService;
- (void)resume;
- (void)_updateExpireTimerWithDate:(id)arg1;
- (void)_expireMessages;
- (id)_pbMappingForMessageID:(unsigned short)arg1;
- (void)mapPBRequest:(Class)arg1 toResponse:(Class)arg2 messageID:(unsigned short)arg3;
- (void)addResponseHandler:(SEL)arg1 forMessageID:(unsigned short)arg2;
- (void)addErrorHandler:(SEL)arg1 forMessageID:(unsigned short)arg2;
- (void)addRequestHandler:(SEL)arg1 forMessageID:(unsigned short)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithIDSServiceIdentifier:(id)arg1 launchOnDemandNotification:(id)arg2 cacheDirectoryPath:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDIDSOutgoingRequest : NSObject <HDNanoSyncDescription>
{
    _Bool _doNotCompress;
    _Bool _queueOnly1;
    _Bool _forceLocalDelivery;
    unsigned short _messageID;
    NSData *_data;
    NSString *_idsIdentifier;
    unsigned long long _priority;
    double _sendTimeout;
    double _responseTimeout;
    NSDictionary *_persistentUserInfo;
    HDIDSMessageCenter *_messageCenter;
    id _pbRequest;
}

+ (id)requestWithMessageID:(unsigned short)arg1;
+ (id)changeRequestWithChanges:(id)arg1 status:(id)arg2 pairingInfo:(id)arg3;
+ (id)activationRequestWithRestore:(id)arg1 pairingInfo:(id)arg2;
@property(retain, nonatomic) id pbRequest; // @synthesize pbRequest=_pbRequest;
@property(nonatomic) __weak HDIDSMessageCenter *messageCenter; // @synthesize messageCenter=_messageCenter;
@property(nonatomic) _Bool forceLocalDelivery; // @synthesize forceLocalDelivery=_forceLocalDelivery;
@property(nonatomic) _Bool queueOnly1; // @synthesize queueOnly1=_queueOnly1;
@property(nonatomic) _Bool doNotCompress; // @synthesize doNotCompress=_doNotCompress;
@property(retain, nonatomic) NSDictionary *persistentUserInfo; // @synthesize persistentUserInfo=_persistentUserInfo;
@property(nonatomic) double responseTimeout; // @synthesize responseTimeout=_responseTimeout;
@property(nonatomic) double sendTimeout; // @synthesize sendTimeout=_sendTimeout;
@property(nonatomic) unsigned long long priority; // @synthesize priority=_priority;
@property(copy, nonatomic) NSString *idsIdentifier; // @synthesize idsIdentifier=_idsIdentifier;
@property(nonatomic) unsigned short messageID; // @synthesize messageID=_messageID;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)nanoSyncDescription;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDIDSIncomingRequest : NSObject
{
    _Bool _expectsResponse;
    unsigned short _messageID;
    HDIDSMessageCenter *_messageCenter;
    NSString *_idsIdentifier;
    NSData *_data;
    unsigned long long _priority;
    HDIDSOutgoingResponse *_response;
    id _pbRequest;
}

@property(retain, nonatomic) id pbRequest; // @synthesize pbRequest=_pbRequest;
@property(retain, nonatomic) HDIDSOutgoingResponse *response; // @synthesize response=_response;
@property(nonatomic) _Bool expectsResponse; // @synthesize expectsResponse=_expectsResponse;
@property(nonatomic) unsigned long long priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *idsIdentifier; // @synthesize idsIdentifier=_idsIdentifier;
@property(nonatomic) unsigned short messageID; // @synthesize messageID=_messageID;
@property(nonatomic) __weak HDIDSMessageCenter *messageCenter; // @synthesize messageCenter=_messageCenter;
- (void).cxx_destruct;
- (void)configureResponse;
- (void)dealloc;
- (id)description;

@end

@interface HDIDSIncomingResponse : NSObject
{
    unsigned short _messageID;
    NSData *_data;
    NSString *_idsIdentifier;
    NSString *_requestIDSIdentifier;
    NSDate *_requestSent;
    NSDictionary *_requestPersistentUserInfo;
    id _pbResponse;
}

@property(retain, nonatomic) id pbResponse; // @synthesize pbResponse=_pbResponse;
@property(retain, nonatomic) NSDictionary *requestPersistentUserInfo; // @synthesize requestPersistentUserInfo=_requestPersistentUserInfo;
@property(retain, nonatomic) NSDate *requestSent; // @synthesize requestSent=_requestSent;
@property(copy, nonatomic) NSString *requestIDSIdentifier; // @synthesize requestIDSIdentifier=_requestIDSIdentifier;
@property(copy, nonatomic) NSString *idsIdentifier; // @synthesize idsIdentifier=_idsIdentifier;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) unsigned short messageID; // @synthesize messageID=_messageID;
- (void).cxx_destruct;
- (id)description;

@end

@interface HDIDSOutgoingResponse : NSObject <HDNanoSyncDescription>
{
    _Bool _doNotCompress;
    _Bool _forceLocalDelivery;
    _Bool _sent;
    unsigned short _messageID;
    HDIDSIncomingRequest *_request;
    NSString *_idsIdentifier;
    NSData *_data;
    unsigned long long _priority;
    double _sendTimeout;
    NSDictionary *_persistentUserInfo;
    id _pbResponse;
}

@property(retain, nonatomic) id pbResponse; // @synthesize pbResponse=_pbResponse;
@property(getter=isSent) _Bool sent; // @synthesize sent=_sent;
@property(nonatomic) _Bool forceLocalDelivery; // @synthesize forceLocalDelivery=_forceLocalDelivery;
@property(nonatomic) _Bool doNotCompress; // @synthesize doNotCompress=_doNotCompress;
@property(retain, nonatomic) NSDictionary *persistentUserInfo; // @synthesize persistentUserInfo=_persistentUserInfo;
@property(nonatomic) double sendTimeout; // @synthesize sendTimeout=_sendTimeout;
@property(nonatomic) unsigned long long priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *idsIdentifier; // @synthesize idsIdentifier=_idsIdentifier;
@property(nonatomic) unsigned short messageID; // @synthesize messageID=_messageID;
@property(nonatomic) __weak HDIDSIncomingRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (void)send;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)nanoSyncDescription;
- (void)configureWithStatus:(id)arg1 pairingInfo:(id)arg2;
- (void)configureWithActivationRestore:(id)arg1 pairingInfo:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDIDSPBMapping : NSObject
{
    Class _requestClass;
    Class _responseClass;
}

@property(retain, nonatomic) Class responseClass; // @synthesize responseClass=_responseClass;
@property(retain, nonatomic) Class requestClass; // @synthesize requestClass=_requestClass;
- (void).cxx_destruct;

@end

@interface HDIDSMessagePersistentContext : NSObject <NSSecureCoding>
{
    _Bool _fromRequest;
    unsigned short _messageID;
    NSString *_idsIdentifier;
    NSDictionary *_userInfo;
    NSDate *_date;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic, getter=isFromRequest) _Bool fromRequest; // @synthesize fromRequest=_fromRequest;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSString *idsIdentifier; // @synthesize idsIdentifier=_idsIdentifier;
@property(nonatomic) unsigned short messageID; // @synthesize messageID=_messageID;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface HDNanoSyncManager : NSObject <HDDiagnosticObject, HDHealthDaemonReadyObserver, HDDatabaseProtectedDataObserver, HDDataObserver, HDIDSMessageCenterDelegate, HDSyncStore, HDPairedWatchBundleIdentifierProvider, HDProcessStateObserver>
{
    _Bool _isMaster;
    _Bool _isPairingActivated;
    _Bool _restoreDidAbort;
    _Bool _needsActivationOnUnlock;
    NSString *_pairedWatchSourceBundleIdentifier;
    id <HDHealthDaemon> _healthDaemon;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_syncQueue;
    HDIDSMessageCenter *_messageCenter;
    long long _state;
    HDNanoPairingPersistentInfo *_pairingInfo;
    HDNanoPairingRecord *_activePairingRecord;
    NSUUID *_restoreUUID;
    long long _restoreSequenceNumber;
    NSMutableArray *_activationCompletions;
    NSObject<OS_dispatch_source> *_activationTimer;
    NSObject<OS_dispatch_source> *_periodicSyncTimer;
    NSDate *_lastPeriodicSyncDate;
}

+ (id)_watchSyncEntityClasses;
+ (id)_companionSyncEntityClasses;
@property(nonatomic) _Bool needsActivationOnUnlock; // @synthesize needsActivationOnUnlock=_needsActivationOnUnlock;
@property(retain, nonatomic) NSDate *lastPeriodicSyncDate; // @synthesize lastPeriodicSyncDate=_lastPeriodicSyncDate;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *periodicSyncTimer; // @synthesize periodicSyncTimer=_periodicSyncTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *activationTimer; // @synthesize activationTimer=_activationTimer;
@property(retain, nonatomic) NSMutableArray *activationCompletions; // @synthesize activationCompletions=_activationCompletions;
@property(nonatomic) long long restoreSequenceNumber; // @synthesize restoreSequenceNumber=_restoreSequenceNumber;
@property(nonatomic) _Bool restoreDidAbort; // @synthesize restoreDidAbort=_restoreDidAbort;
@property(retain, nonatomic) NSUUID *restoreUUID; // @synthesize restoreUUID=_restoreUUID;
@property(retain, nonatomic) HDNanoPairingRecord *activePairingRecord; // @synthesize activePairingRecord=_activePairingRecord;
@property(retain, nonatomic) HDNanoPairingPersistentInfo *pairingInfo; // @synthesize pairingInfo=_pairingInfo;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) HDIDSMessageCenter *messageCenter; // @synthesize messageCenter=_messageCenter;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *syncQueue; // @synthesize syncQueue=_syncQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(retain) NSString *pairedWatchSourceBundleIdentifier; // @synthesize pairedWatchSourceBundleIdentifier=_pairedWatchSourceBundleIdentifier;
- (void)_setPairingActivated:(_Bool)arg1;
@property _Bool isPairingActivated; // @synthesize isPairingActivated=_isPairingActivated;
- (void).cxx_destruct;
- (void)processDidEnterForeground:(id)arg1;
- (void)processDidEnterBackground:(id)arg1;
- (id)_stateString;
- (void)_didSendChangeRequest;
- (void)_didReceiveChangeRequest;
- (id)diagnosticDescription;
- (void)_queue_setState:(long long)arg1;
- (id)syncEntities;
- (unsigned long long)syncObjectLimitForEntityClass:(Class)arg1;
- (void)syncDidFinishWithContext:(id)arg1 success:(_Bool)arg2 error:(id)arg3;
- (void)sendChange:(id)arg1 withContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)newChangeWithSyncEntityClass:(Class)arg1;
@property(readonly, nonatomic) NSString *syncStoreIdentifier;
@property(readonly, nonatomic) long long provenance;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)_workoutSamplesWereAssociated:(id)arg1;
- (void)_achievementsWereAdded:(id)arg1;
- (void)_userCharacteristicsDidChange:(id)arg1;
- (void)_unregisterForSyncTriggers;
- (void)_registerForSyncTriggers;
- (void)_resetSyncAnchors;
- (void)_syncImmediatelyWithReason:(id)arg1 pullRequest:(_Bool)arg2;
- (void)_syncImmediatelyWithReason:(id)arg1;
- (void)_queue_syncImmediatelyWithReason:(id)arg1 pullRequest:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_queue_isReadyForSyncWithError:(id *)arg1;
- (void)_queue_cancelPeriodicSyncTimer;
- (void)_queue_startPeriodicSyncTimerIfNecessary;
- (void)_queue_periodicSyncTimerFired;
- (void)_queue_receiveChangeResponse:(id)arg1;
- (void)_queue_changeRequestDidFailToSendWithError:(id)arg1;
- (void)_queue_receiveChangeRequest:(id)arg1;
- (void)_queue_sendChange:(id)arg1 withStatus:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_queue_abortRestoreWithUUID:(id)arg1;
- (void)_queue_resetRestoreAttemptWithUUID:(id)arg1;
- (_Bool)_syncQueue_applyActivationRestore:(id)arg1 request:(id)arg2 error:(id *)arg3;
- (void)_queue_handleActivationRestoreResponse:(id)arg1;
- (void)_queue_handleActivationRestoreRequest:(id)arg1;
- (void)_queue_sendActivationRestoreMessageWithRestoreUUID:(id)arg1 restores:(id)arg2 deviceSourceIdentifier:(id)arg3 sequenceNumber:(long long)arg4 statusCode:(int)arg5;
- (void)_queue_beginRestoreWithDeviceSourceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_createPairingRecordWithPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2 didReplace:(_Bool *)arg3;
- (id)_getPairingRecordWithPersistentPairingUUID:(id)arg1;
- (id)_queue_persistentPairingUUIDWithRegistryPairingUUID:(id)arg1 deviceSourceIdentifier:(id *)arg2;
- (id)_getRegistryPairingUUIDAndStoragePath:(id *)arg1;
- (void)_deviceDidUnpair:(id)arg1;
- (void)_deviceDidPair:(id)arg1;
- (_Bool)_queue_isReadyForPairingWithError:(id *)arg1;
- (void)_queue_resetPairingWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_cancelActivationTimer;
- (void)_queue_startActivationTimerWithTimeout:(double)arg1;
- (void)_queue_drainActivationCompletionsWithDidActivate:(_Bool)arg1 error:(id)arg2;
- (void)_queue_addActivationCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_activationTimedOut;
- (void)_queue_transitionToPreparingForActivationWithPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2 deviceSourceIdentifier:(id)arg3 activationSentHandler:(CDUnknownBlockType)arg4;
- (void)_queue_transitionToActivatedWithPairingRecord:(id)arg1;
- (void)_queue_transitionToDeactivatedWithError:(id)arg1;
- (void)_showFitnessAppIfNeeded;
- (void)_queue_updatePairingWithOptions:(unsigned long long)arg1 activationSentHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_queue_pairingDidChange;
- (void)messageCenterChangesError:(id)arg1;
- (void)messageCenterActivationError:(id)arg1;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifierForResponse:(id)arg2;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifierForRequest:(id)arg2;
- (void)messageCenterDidReceiveChangesResponse:(id)arg1;
- (void)messageCenterDidReceiveChangesRequest:(id)arg1;
- (void)messageCenterDidReceiveActivationResponse:(id)arg1;
- (void)messageCenterDidReceiveActivationRequest:(id)arg1;
- (void)_queue_sendResponse:(id)arg1;
- (void)_queue_sendRequest:(id)arg1;
- (void)_queue_setUpMessageCenterIfNecessaryWithPairedStoragePath:(id)arg1;
- (_Bool)_queue_finishInitializationAfterFirstUnlockIfNecessaryWithError:(id *)arg1;
- (void)resetPairingWithCompletion:(CDUnknownBlockType)arg1;
- (void)syncHealthDataWithPullRequest:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)activatePairingWithActivationSentHandler:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)daemonReady:(id)arg1;
@property(readonly) _Bool isMaster;
- (void)dealloc;
- (id)initWithHealthDaemon:(id)arg1 isMaster:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDNanoSyncRequestContext : NSObject
{
    _Bool _pullRequest;
    CDUnknownBlockType _completion;
}

+ (id)requestContextWithCompletion:(CDUnknownBlockType)arg1 pullRequest:(_Bool)arg2;
@property(readonly, nonatomic, getter=isPullRequest) _Bool pullRequest; // @synthesize pullRequest=_pullRequest;
@property(readonly, copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;

@end

@interface HDCodableAchievement : PBCodable <NSCopying>
{
    long long _achievementType;
    double _completedDate;
    double _doubleValue;
    long long _intValue;
    NSData *_extraData;
    NSData *_uuid;
    struct {
        unsigned int achievementType:1;
        unsigned int completedDate:1;
        unsigned int doubleValue:1;
        unsigned int intValue:1;
    } _has;
}

@property(retain, nonatomic) NSData *extraData; // @synthesize extraData=_extraData;
@property(nonatomic) long long intValue; // @synthesize intValue=_intValue;
@property(nonatomic) double doubleValue; // @synthesize doubleValue=_doubleValue;
@property(nonatomic) double completedDate; // @synthesize completedDate=_completedDate;
@property(nonatomic) long long achievementType; // @synthesize achievementType=_achievementType;
@property(retain, nonatomic) NSData *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasExtraData;
@property(nonatomic) _Bool hasIntValue;
@property(nonatomic) _Bool hasDoubleValue;
@property(nonatomic) _Bool hasCompletedDate;
@property(nonatomic) _Bool hasAchievementType;
@property(readonly, nonatomic) _Bool hasUuid;
- (id)decodedValue;
- (id)decodedCreatedDate;
- (id)decodedUUID;

@end

@interface HDNanoPairingPersistentInfo : NSObject
{
    _Bool _activationFinished;
    NSUUID *_registryPairingUUID;
    NSUUID *_persistentPairingUUID;
    NSUUID *_healthPairingUUID;
    NSString *_pairedStoragePath;
    NSDate *_lastActivationAttempt;
    id <HDHealthDaemon> _healthDaemon;
}

+ (id)_activePairingValuesWithHealthDaemon:(id)arg1 error:(id *)arg2;
+ (id)nanoPairingPersistentInfoWithHealthDaemon:(id)arg1;
@property(nonatomic) __weak id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(readonly, nonatomic, getter=isActivationFinished) _Bool activationFinished; // @synthesize activationFinished=_activationFinished;
@property(readonly, nonatomic) NSDate *lastActivationAttempt; // @synthesize lastActivationAttempt=_lastActivationAttempt;
@property(readonly, copy, nonatomic) NSString *pairedStoragePath; // @synthesize pairedStoragePath=_pairedStoragePath;
@property(readonly, nonatomic) NSUUID *healthPairingUUID; // @synthesize healthPairingUUID=_healthPairingUUID;
@property(readonly, nonatomic) NSUUID *persistentPairingUUID; // @synthesize persistentPairingUUID=_persistentPairingUUID;
@property(readonly, nonatomic) NSUUID *registryPairingUUID; // @synthesize registryPairingUUID=_registryPairingUUID;
- (void).cxx_destruct;
- (void)_persistValues;
- (void)setActivationFinished:(_Bool)arg1;
- (void)setPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2 lastActivationAttempt:(id)arg3;
- (void)resetWithRegistryPairingUUID:(id)arg1 persistentPairingUUID:(id)arg2 pairedStoragePath:(id)arg3;

@end

@interface HDNanoPairingEntity : HDHealthEntity
{
}

+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;
+ (id)_predicateWithPersistentPairingUUID:(id)arg1;
+ (id)_nanoPairingRecordPropertySetters;
+ (_Bool)_insertNanoPairingRecord:(id)arg1 replaceExisting:(_Bool)arg2 database:(id)arg3 error:(id *)arg4;
+ (id)_nanoPairingRecordWithPersistentPairingUUID:(id)arg1 database:(id)arg2;
+ (_Bool)resetNanoPairingRecordWithPersistentPairingUUID:(id)arg1 newHealthPairingUUID:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;
+ (id)nanoPairingRecordWithPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2 didReplaceExisting:(_Bool *)arg3 healthDatabase:(id)arg4 error:(id *)arg5;
+ (id)nanoPairingRecordWithPersistentPairingUUID:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;

@end

@interface HDNanoPairingRecord : NSObject
{
    NSUUID *_persistentPairingUUID;
    NSUUID *_healthPairingUUID;
    NSDate *_creationDate;
}

+ (id)pairingRecordWithPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2 creationDate:(id)arg3;
@property(retain, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) NSUUID *healthPairingUUID; // @synthesize healthPairingUUID=_healthPairingUUID;
@property(retain, nonatomic) NSUUID *persistentPairingUUID; // @synthesize persistentPairingUUID=_persistentPairingUUID;
- (void).cxx_destruct;
- (id)_init;

@end

@interface HDWorkoutEventEntity : HDHealthEntity
{
}

+ (id)workoutEventsWithWorkoutID:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)deleteStatementForWorkoutEventsWithDatabase:(id)arg1;
+ (id)workoutEventsWithWorkoutID:(id)arg1 database:(id)arg2;
+ (_Bool)insertWorkoutEventsFromWorkout:(id)arg1 entity:(id)arg2 database:(id)arg3;
+ (id)insertWorkoutEventWithWorkoutID:(id)arg1 date:(id)arg2 eventType:(long long)arg3 database:(id)arg4;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;

@end

@interface HDCodableSample : PBCodable <NSCopying>
{
    long long _dataType;
    double _endDate;
    double _startDate;
    HDCodableObject *_object;
    struct {
        unsigned int dataType:1;
        unsigned int endDate:1;
        unsigned int startDate:1;
    } _has;
}

@property(nonatomic) double endDate; // @synthesize endDate=_endDate;
@property(nonatomic) double startDate; // @synthesize startDate=_startDate;
@property(nonatomic) long long dataType; // @synthesize dataType=_dataType;
@property(retain, nonatomic) HDCodableObject *object; // @synthesize object=_object;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasEndDate;
@property(nonatomic) _Bool hasStartDate;
@property(nonatomic) _Bool hasDataType;
@property(readonly, nonatomic) _Bool hasObject;
- (id)decodedCorrelationType;
- (id)decodedWorkoutType;
- (id)decodedCategoryType;
- (id)decodedQuantityType;
- (id)_decodedObjectTypeOfClass:(Class)arg1;
- (id)decodedEndDate;
- (id)decodedStartDate;

@end

@interface HDDatabaseMigrator : NSObject
{
    HDSQLiteDatabase *_database;
}

@property(readonly, nonatomic) HDSQLiteDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (long long)fatalStatusForVersion:(long long)arg1 errorMessage:(id)arg2 error:(id *)arg3;
- (long long)statusForUnhandledVersion:(long long)arg1 error:(id *)arg2;
- (long long)migrateProtectedDatabaseFromVersion:(long long)arg1 toVersion:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
- (long long)migrateUnprotectedDatabaseFromVersion:(long long)arg1 toVersion:(long long)arg2 error:(id *)arg3;
- (_Bool)executeSQL:(id)arg1 argument:(id)arg2 error:(id *)arg3;
- (_Bool)executeSQLStatements:(id)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (id)initWithDatabase:(id)arg1;
- (id)init;

@end

@interface HDSQLiteQuery : NSObject
{
    HDSQLiteDatabase *_database;
    HDSQLiteQueryDescriptor *_descriptor;
}

@property(readonly) HDSQLiteQueryDescriptor *queryDescriptor;
- (void)enumeratePersistentIDsAndPropertiesAsDoubles:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)enumeratePersistentIDsAndProperties:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumeratePersistentIDsAndProperties:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateEntitiesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumeratePersistentIDsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)deleteAllEntities;
- (_Bool)setValuesForAllEntitiesWithDictionary:(id)arg1;
@property(readonly) HDSQLiteDatabase *database;
- (_Bool)createTemporaryTableWithName:(id)arg1 properties:(id)arg2;
@property(readonly) long long countOfEntities;
- (id)copySelectSQLWithProperties:(id)arg1;
- (id)copyEntityIdentifiers;
- (void)bindToSelectStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (void)dealloc;
- (id)initWithDatabase:(id)arg1 descriptor:(id)arg2;

@end

@interface HDSQLiteQueryDescriptor : NSObject <NSCopying>
{
    _Bool _returnsDistinctEntities;
    Class _entityClass;
    long long _limitCount;
    NSArray *_orderingDirections;
    NSArray *_orderingProperties;
    HDSQLitePredicate *_predicate;
    NSString *_groupBy;
}

@property(copy, nonatomic) NSString *groupBy; // @synthesize groupBy=_groupBy;
@property(copy, nonatomic) HDSQLitePredicate *predicate; // @synthesize predicate=_predicate;
@property(nonatomic) _Bool returnsDistinctEntities; // @synthesize returnsDistinctEntities=_returnsDistinctEntities;
@property(copy, nonatomic) NSArray *orderingProperties; // @synthesize orderingProperties=_orderingProperties;
@property(copy, nonatomic) NSArray *orderingDirections; // @synthesize orderingDirections=_orderingDirections;
@property(nonatomic) long long limitCount; // @synthesize limitCount=_limitCount;
@property(nonatomic) Class entityClass; // @synthesize entityClass=_entityClass;
- (id)_newSelectSQLWithProperties:(id)arg1 columns:(id)arg2;
- (id)_newSelectSQLWithProperties:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface _HDSourceMapWrapper : NSObject
{
    struct map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>> map;
}

- (id).cxx_construct;
- (void).cxx_destruct;

@end

@interface HDLastIntervalInfo : NSObject
{
    long long _lastInterval;
    double _startTimeInBucket;
    NSMutableDictionary *_sumsBySource;
    NSArray *_orderedSourceIds;
}

@property(retain, nonatomic) NSArray *orderedSourceIds; // @synthesize orderedSourceIds=_orderedSourceIds;
@property(retain, nonatomic) NSMutableDictionary *sumsBySource; // @synthesize sumsBySource=_sumsBySource;
@property(nonatomic) double startTimeInBucket; // @synthesize startTimeInBucket=_startTimeInBucket;
@property(nonatomic) long long lastInterval; // @synthesize lastInterval=_lastInterval;
- (void).cxx_destruct;
- (id)initWithSources:(id)arg1;

@end

@interface HDCumulativeCollectionCalculator : NSObject
{
    struct map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>> _currentInterval;
    struct map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>> _lastIntervalSources;
    HDLastIntervalInfo *_lastIntervalInfo;
    struct map<long long, double, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, double>>> _bySource;
    _Bool _detailBySource;
    _Bool _lastBucket;
    unsigned long long _dataCount;
    id <HDHealthDaemon> _daemon;
    NSArray *_orderedSourceIds;
    NSArray *_bucketPeriods;
    unsigned long long _mergeStrategy;
    NSMutableArray *_futureIntervals;
    NSMutableArray *_futureBuckets;
    NSMutableArray *_futureCounts;
    long long _currentAligned;
    unsigned long long _currPeriod;
    unsigned long long _bucketIndex;
}

@property(nonatomic) _Bool lastBucket; // @synthesize lastBucket=_lastBucket;
@property(nonatomic) unsigned long long bucketIndex; // @synthesize bucketIndex=_bucketIndex;
@property(nonatomic) unsigned long long currPeriod; // @synthesize currPeriod=_currPeriod;
@property(nonatomic) long long currentAligned; // @synthesize currentAligned=_currentAligned;
@property(retain, nonatomic) NSMutableArray *futureCounts; // @synthesize futureCounts=_futureCounts;
@property(retain, nonatomic) NSMutableArray *futureBuckets; // @synthesize futureBuckets=_futureBuckets;
@property(retain, nonatomic) NSMutableArray *futureIntervals; // @synthesize futureIntervals=_futureIntervals;
@property(nonatomic) unsigned long long mergeStrategy; // @synthesize mergeStrategy=_mergeStrategy;
@property(retain, nonatomic) NSArray *bucketPeriods; // @synthesize bucketPeriods=_bucketPeriods;
@property(retain, nonatomic) NSArray *orderedSourceIds; // @synthesize orderedSourceIds=_orderedSourceIds;
@property(retain, nonatomic) id <HDHealthDaemon> daemon; // @synthesize daemon=_daemon;
@property(nonatomic) _Bool detailBySource; // @synthesize detailBySource=_detailBySource;
@property(nonatomic) unsigned long long dataCount; // @synthesize dataCount=_dataCount;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;
- (_Bool)hasFutureBuckets;
- (_Bool)hasData;
- (void)addSumsBySource:(id)arg1 lastInterval:(id)arg2 currentAligned:(long long)arg3 unit:(id)arg4;
- (void)addCurrentValue:(double)arg1 sourceId:(long long)arg2;
- (void)splitValue:(double)arg1 perSecond:(double)arg2 sourceId:(long long)arg3 sampleInfo:(CDStruct_dd92d3d0)arg4 sampleEndTime:(double)arg5;
- (double)_putInFutureBucketsValue:(double)arg1 timeAfterEnd:(double)arg2 valuePerSecond:(double)arg3 sampleEndTime:(double)arg4 sourceId:(unsigned long long)arg5;
- (double)addCurrentBucket;
@property(readonly, nonatomic) NSDictionary *sumsBySource;
@property(readonly, nonatomic) HDLastIntervalInfo *lastIntervalInfo;
- (double)advanceUntilInterval:(long long)arg1;
- (void)advanceBucket;
- (id)initWithDaemon:(id)arg1 orderedSourceIds:(id)arg2 bucketPeriods:(id)arg3 mergeStrategy:(unsigned long long)arg4;

@end

@interface HDSQLiteStatement : NSObject
{
    HDSQLiteDatabase *_database;
    struct sqlite3_stmt *_stmt;
    _Bool _didCache;
}

@property(readonly, nonatomic) HDSQLiteDatabase *database; // @synthesize database=_database;
- (void)finish;
- (_Bool)performStatementWithError:(id *)arg1 bindingHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithSQL:(id)arg1 database:(id)arg2 cache:(_Bool)arg3;

@end

@interface HDSQLiteQueryStatement : HDSQLiteStatement
{
    HDSQLiteQueryDescriptor *_descriptor;
    NSArray *_properties;
}

- (id)anyEntityWithPredicate:(id)arg1;
- (void)enumerateEntitiesWithPredicate:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithDescriptor:(id)arg1 properties:(id)arg2 database:(id)arg3 cache:(_Bool)arg4;

@end

@interface HDCodableNanoSyncRestore : PBCodable <HDSyncObjectCollection, HDNanoSyncDescription, NSCopying>
{
    NSMutableArray *_objectDatas;
    int _objectType;
    struct {
        unsigned int objectType:1;
    } _has;
}

+ (id)restoreWithNanoSyncEntityClass:(Class)arg1;
@property(retain, nonatomic) NSMutableArray *objectDatas; // @synthesize objectDatas=_objectDatas;
@property(nonatomic) int objectType; // @synthesize objectType=_objectType;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)objectDataAtIndex:(unsigned long long)arg1;
- (unsigned long long)objectDatasCount;
- (void)addObjectData:(id)arg1;
- (void)clearObjectDatas;
@property(nonatomic) _Bool hasObjectType;
- (id)nanoSyncDescription;
- (void)setObjects:(id)arg1;
- (id)decodedObjects;
- (Class)syncEntityClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDActivityCacheEntity : HDSampleEntity
{
}

+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)entitiesToDeleteBeforeInsertingObject:(id)arg1 sourceEntity:(id)arg2 database:(id)arg3;
+ (id)activityCachesInRangeStart:(id)arg1 end:(id)arg2 inHealthDaemon:(id)arg3 error:(id *)arg4;
+ (id)activityCacheForIndex:(long long)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (Class)_associatedDataObjectClass;
+ (id)_columnsSQL;
+ (id)_databaseTable;

@end

@interface _HDActivityCacheUpdateJournalEntry : HDJournalEntry
{
    HKActivityCache *_activityCache;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) HKActivityCache *activityCache; // @synthesize activityCache=_activityCache;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithActivityCache:(id)arg1;

@end

@interface HDCodableObjectAssociations : PBCodable <NSCopying>
{
    NSData *_associationUuid;
    NSData *_objectUuids;
}

@property(retain, nonatomic) NSData *objectUuids; // @synthesize objectUuids=_objectUuids;
@property(retain, nonatomic) NSData *associationUuid; // @synthesize associationUuid=_associationUuid;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasObjectUuids;
@property(readonly, nonatomic) _Bool hasAssociationUuid;
- (id)decodedAssociationUUID;
- (id)initWithAssociationUUID:(id)arg1;

@end

@interface HDCodableCategoryDomainDictionary : PBCodable <HDSyncCodable, NSCopying>
{
    long long _category;
    NSString *_domain;
    NSMutableArray *_keyValuePairs;
    struct {
        unsigned int category:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *keyValuePairs; // @synthesize keyValuePairs=_keyValuePairs;
@property(retain, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(nonatomic) long long category; // @synthesize category=_category;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)keyValuePairsAtIndex:(unsigned long long)arg1;
- (unsigned long long)keyValuePairsCount;
- (void)addKeyValuePairs:(id)arg1;
- (void)clearKeyValuePairs;
@property(readonly, nonatomic) _Bool hasDomain;
@property(nonatomic) _Bool hasCategory;
- (_Bool)_validateForInsertionWithError:(id *)arg1;
- (long long)decodedCategory;
- (id)initWithCategory:(long long)arg1 domain:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDCodableMetadataDictionary : PBCodable <NSCopying>
{
    NSMutableArray *_keyValuePairs;
}

@property(retain, nonatomic) NSMutableArray *keyValuePairs; // @synthesize keyValuePairs=_keyValuePairs;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)keyValuePairsAtIndex:(unsigned long long)arg1;
- (unsigned long long)keyValuePairsCount;
- (void)addKeyValuePairs:(id)arg1;
- (void)clearKeyValuePairs;

@end

@interface HDCodableNanoSyncActivationRestore : PBCodable <HDNanoSyncDescription, HDNanoSyncPersistentUserInfoCopying, NSCopying>
{
    long long _sequenceNumber;
    NSString *_deviceSourceIdentifier;
    NSData *_restoreIdentifier;
    NSMutableArray *_restores;
    int _statusCode;
    struct {
        unsigned int sequenceNumber:1;
        unsigned int statusCode:1;
    } _has;
}

+ (id)activationRestoreWithRestoreUUID:(id)arg1 sequenceNumber:(long long)arg2 statusCode:(int)arg3;
+ (id)persistentUserInfoKey;
+ (id)retreiveFromPersistentUserInfo:(id)arg1;
@property(retain, nonatomic) NSMutableArray *restores; // @synthesize restores=_restores;
@property(retain, nonatomic) NSString *deviceSourceIdentifier; // @synthesize deviceSourceIdentifier=_deviceSourceIdentifier;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
@property(nonatomic) long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) NSData *restoreIdentifier; // @synthesize restoreIdentifier=_restoreIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)restoresAtIndex:(unsigned long long)arg1;
- (unsigned long long)restoresCount;
- (void)addRestores:(id)arg1;
- (void)clearRestores;
@property(readonly, nonatomic) _Bool hasDeviceSourceIdentifier;
@property(nonatomic) _Bool hasStatusCode;
@property(nonatomic) _Bool hasSequenceNumber;
@property(readonly, nonatomic) _Bool hasRestoreIdentifier;
- (id)nanoSyncDescription;
- (id)decodedRestoreUUID;
- (_Bool)hasRequiredFields;
- (id)copyForPersistentUserInfo;
- (void)addToPersistentUserInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDSQLiteDatabase : NSObject
{
    struct sqlite3 *_db;
    _Bool _isInTransaction;
    long long _transactionType;
    struct __CFDictionary *_statementCache;
    NSMutableDictionary *_attachedDatabaseURLsByName;
    NSURL *_fileURL;
}

+ (_Bool)deleteDatabaseAtPath:(id)arg1;
+ (_Bool)_stepStatement:(struct sqlite3_stmt *)arg1 hasRow:(_Bool *)arg2 resultCode:(int *)arg3 error:(id *)arg4;
+ (id)virtualFilesystemModule;
+ (void)resetStatement:(struct sqlite3_stmt *)arg1 finalize:(_Bool)arg2;
+ (_Bool)statementHasRowAfterStepping:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
+ (_Bool)statementHasRowAfterStepping:(struct sqlite3_stmt *)arg1 resultCode:(int *)arg2 error:(id *)arg3;
+ (_Bool)statementDidFinishAfterStepping:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
+ (_Bool)statementDidFinishAfterStepping:(struct sqlite3_stmt *)arg1 resultCode:(int *)arg2 error:(id *)arg3;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (void).cxx_destruct;
- (struct sqlite3_stmt *)_statementForSQL:(id)arg1 cache:(_Bool)arg2 error:(id *)arg3;
- (_Bool)isDatabaseWithNameAttached:(id)arg1;
- (void)detachDatabaseWithName:(id)arg1;
- (_Bool)attachDatabaseWithName:(id)arg1 fileURL:(id)arg2 error:(id *)arg3;
- (_Bool)insertColumns:(id)arg1 fromTableNamed:(id)arg2 toTableNamed:(id)arg3;
- (_Bool)renameTable:(id)arg1 newName:(id)arg2;
- (_Bool)dropTable:(id)arg1;
- (_Bool)alterTable:(id)arg1 removeColumns:(id)arg2 renameColumns:(id)arg3;
- (_Bool)renameColumnInTable:(id)arg1 oldName:(id)arg2 newName:(id)arg3;
- (_Bool)removeColumnInTable:(id)arg1 name:(id)arg2;
- (_Bool)addColumnInTable:(id)arg1 columnSQL:(id)arg2;
- (long long)_integerValueForPragma:(id)arg1 databaseName:(id)arg2;
- (_Bool)_setPragma:(id)arg1 integerValue:(long long)arg2 withDatabaseName:(id)arg3;
- (long long)schemaVersionWithDatabaseName:(id)arg1;
- (_Bool)setSchemaVersion:(long long)arg1 withDatabaseName:(id)arg2;
- (long long)userVersionWithDatabaseName:(id)arg1;
- (_Bool)setUserVersion:(long long)arg1 withDatabaseName:(id)arg2;
- (_Bool)prepareStatementForSQL:(id)arg1 cache:(_Bool)arg2 error:(id *)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (struct sqlite3_stmt *)preparedStatementForSQL:(id)arg1 cache:(_Bool)arg2 error:(id *)arg3;
- (_Bool)performTransactionWithType:(long long)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)performTransactionWithType:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)getLastErrorWithResultCode:(int)arg1;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2 retryIfBusy:(_Bool)arg3;
- (_Bool)executeSQL:(id)arg1 argument:(id)arg2 error:(id *)arg3;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1;
- (void)accessDatabaseUsingBlock:(CDUnknownBlockType)arg1;
- (int)_openWithPath:(id)arg1;
- (int)open;
- (void)dealloc;
- (id)initWithDatabaseURL:(id)arg1;

@end

@interface HDKeyValueEntity : HDHealthEntity
{
}

+ (id)propertyForSyncProvenance;
+ (id)createTableSQL;
+ (id)databaseTable;
+ (_Bool)_validateEntityClassForCategory:(long long)arg1;
+ (Class)_entityClassForKeyValueCategory:(long long)arg1;
+ (id)_predicateForProvenance:(id)arg1;
+ (id)_predicateForCategory:(id)arg1;
+ (id)_predicateForDomain:(id)arg1;
+ (id)_predicateForKeys:(id)arg1;
+ (id)_predicateForKey:(id)arg1;
+ (id)_predicateForKey:(id)arg1 domain:(id)arg2 category:(id)arg3 provenance:(id)arg4;
+ (id)_propertySettersForCodable;
+ (id)_propertyValuesForValue:(id)arg1 key:(id)arg2 domain:(id)arg3 category:(id)arg4 provenance:(id)arg5 modificationDate:(id)arg6;
+ (_Bool)_insertValues:(id)arg1 forKeys:(id)arg2 modificationDates:(id)arg3 domain:(id)arg4 category:(id)arg5 provenance:(id)arg6 healthDaemon:(id)arg7 error:(id *)arg8;
+ (_Bool)_doInsertValues:(id)arg1 forKeys:(id)arg2 modificationDates:(id)arg3 domain:(id)arg4 category:(id)arg5 provenance:(id)arg6 database:(id)arg7 error:(id *)arg8;
+ (_Bool)_insertCodableCategoryDomainDictionary:(id)arg1 provenance:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (_Bool)_insertKeysAndValues:(id)arg1 modificationDate:(id)arg2 domain:(id)arg3 category:(id)arg4 provenance:(id)arg5 database:(id)arg6 error:(id *)arg7;
+ (_Bool)_insertKeysAndValues:(id)arg1 modificationDate:(id)arg2 domain:(id)arg3 category:(id)arg4 provenance:(id)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (_Bool)_setRawKeysAndValues:(id)arg1 domain:(id)arg2 category:(long long)arg3 database:(id)arg4 error:(id *)arg5;
+ (_Bool)_setRawKeysAndValues:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (_Bool)_enumerateMergedKeyValueEntitiesInCategory:(long long)arg1 withPredicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4 usingBlock:(CDUnknownBlockType)arg5;
+ (_Bool)_readRawValuesInCategory:(long long)arg1 withPredicate:(id)arg2 withDatabase:(id)arg3 error:(id *)arg4 usingBlock:(CDUnknownBlockType)arg5;
+ (id)_valuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5 handler:(CDUnknownBlockType)arg6;
+ (id)_rawValuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)_rawValuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 database:(id)arg4 error:(id *)arg5;
+ (id)_rawValueForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 entity:(id *)arg5 error:(id *)arg6;
+ (_Bool)setValuesWithDictionary:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (_Bool)setString:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (_Bool)setNumber:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (_Bool)setQuantity:(id)arg1 unit:(id)arg2 forKey:(id)arg3 domain:(id)arg4 category:(long long)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (_Bool)setDate:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (_Bool)setData:(id)arg1 forKey:(id)arg2 domain:(id)arg3 category:(long long)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (id)modificationDatesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)allValuesForDomain:(id)arg1 category:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)valuesForKeys:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)stringForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 entity:(id *)arg5 error:(id *)arg6;
+ (id)numberForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 entity:(id *)arg5 error:(id *)arg6;
+ (id)quantityForKey:(id)arg1 unit:(id)arg2 domain:(id)arg3 category:(long long)arg4 healthDaemon:(id)arg5 entity:(id *)arg6 error:(id *)arg7;
+ (id)dateForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 entity:(id *)arg5 error:(id *)arg6;
+ (id)dataForKey:(id)arg1 domain:(id)arg2 category:(long long)arg3 healthDaemon:(id)arg4 entity:(id *)arg5 error:(id *)arg6;
+ (long long)_deviceLocalCategory;
+ (id)okemoZursObjectAnchorWithHealthDaemon:(id)arg1 error:(id *)arg2;
+ (_Bool)setOkemoZursObjectAnchor:(long long)arg1 database:(id)arg2 error:(id *)arg3;
+ (id)retrieveDatabaseIdentifierFromDatabase:(id)arg1 error:(id *)arg2;
+ (_Bool)persistDatabaseIdentifier:(id)arg1 database:(id)arg2 error:(id *)arg3;
+ (id)retrieveDatabaseIdentifierFromHealthDaemon:(id)arg1 error:(id *)arg2;
+ (_Bool)persistDatabaseIdentifier:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)generateNewDatabaseIdentifier;

@end

@interface HDProtectedKeyValueEntity : HDKeyValueEntity
{
}

+ (long long)_deviceLocalCategory;
+ (long long)protectionClass;
+ (id)databaseTable;
+ (id)achievementValueForKey:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (_Bool)setAchievementValuesWithDictionary:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)_keyForDataType:(id)arg1 error:(id *)arg2;
+ (id)keyForUserCharacteristicType:(id)arg1;
+ (_Bool)setUserCharacteristic:(id)arg1 forType:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)modificationDateForCharacteristicWithType:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)userCharacteristicForType:(id)arg1 healthDaemon:(id)arg2 entity:(id *)arg3 error:(id *)arg4;
+ (_Bool)removeUserDefaultForKey:(id)arg1 bundleIdentifier:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (_Bool)setUserDefaultValue:(id)arg1 forKey:(id)arg2 bundleIdentifier:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)userDefaultForKey:(id)arg1 bundleIdentifier:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;

@end

@interface HDUnprotectedKeyValueEntity : HDKeyValueEntity
{
}

+ (long long)protectionClass;
+ (id)databaseTable;

@end

@interface HDKeyValueSyncEntity : NSObject <HDNanoSyncEntity, HDSyncEntity>
{
}

+ (void)didReceiveKeysAndValuesWithHealthDaemon:(id)arg1;
+ (_Bool)receiveSyncObjects:(id)arg1 syncStore:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)decodeSyncObjectWithData:(id)arg1;
+ (long long)nextSyncAnchorWithStore:(id)arg1 startSyncAnchor:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)syncObjectsWithStore:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (long long)syncEntityType;
+ (long long)category;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (long long)finalAnchorForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)objectsForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 lastSyncAnchor:(long long *)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (int)nanoSyncObjectType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _HDKeyValueJournalEntry : HDJournalEntry
{
    id <NSSecureCoding> _value;
    NSString *_key;
    NSString *_domain;
    long long _category;
    long long _provenance;
    NSDate *_modificationDate;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(readonly, nonatomic) long long provenance; // @synthesize provenance=_provenance;
@property(readonly, nonatomic) long long category; // @synthesize category=_category;
@property(readonly, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(readonly, nonatomic) NSString *key; // @synthesize key=_key;
@property(readonly, nonatomic) id <NSSecureCoding> value; // @synthesize value=_value;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithValue:(id)arg1 key:(id)arg2 domain:(id)arg3 category:(long long)arg4 provenance:(long long)arg5 modificationDate:(id)arg6;

@end

@interface HDContentProtectionManager : NSObject <HDDiagnosticObject>
{
    int _contentProtectionState;
    int _unlockedSinceBoot;
    int _notifyToken;
    NSObject<OS_dispatch_queue> *_observationQueue;
    NSMapTable *_observers;
    double _beganObservingTime;
    double _lastNotificationTime;
}

+ (_Bool)isProtectedDataAvailableWithState:(long long)arg1;
- (void).cxx_destruct;
- (void)_notifyObserversWithContentProtectionState:(long long)arg1;
- (id)diagnosticDescription;
- (void)setContentProtectionState:(long long)arg1;
- (_Bool)deviceUnlockedSinceBoot;
- (_Bool)isProtectedDataAvailable;
- (long long)observedState;
- (void)removeContentProtectionObserver:(id)arg1;
- (void)addContentProtectionObserver:(id)arg1 withQueue:(id)arg2;
- (void)dealloc;
- (id)initWithNotifications:(_Bool)arg1 initialState:(long long)arg2 unlockedSinceBoot:(_Bool)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _HDContentProtectionObserverWrapper : NSObject
{
    id <HDContentProtectionObserver> _observer;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) __weak id <HDContentProtectionObserver> observer; // @synthesize observer=_observer;
- (void).cxx_destruct;
- (id)initWithObserver:(id)arg1 queue:(id)arg2;

@end

@interface HDSQLitePredicate : NSObject <NSCopying>
{
}

+ (id)compoundPredicateWithPredicate:(id)arg1 otherPredicate:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)SQLJoinClausesForEntityClass:(Class)arg1;
- (id)SQLForEntityClass:(Class)arg1;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLitePropertyPredicate : HDSQLitePredicate <NSCopying>
{
    NSString *_property;
}

@property(readonly, nonatomic) NSString *property; // @synthesize property=_property;
- (void).cxx_destruct;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)SQLJoinClausesForEntityClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLiteComparisonPredicate : HDSQLitePropertyPredicate <NSCopying>
{
    long long _comparisonType;
    id _value;
}

+ (id)predicateWithProperty:(id)arg1 value:(id)arg2 comparisonType:(long long)arg3;
+ (id)predicateWithProperty:(id)arg1 lessThanValue:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 greaterThanValue:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 lessThanOrEqualToValue:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 greaterThanOrEqualToValue:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 notEqualToValue:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 equalToValue:(id)arg2;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) long long comparisonType; // @synthesize comparisonType=_comparisonType;
- (void).cxx_destruct;
- (id)_comparisonTypeString;
- (id)description;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)SQLForEntityClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLiteContainsPredicate : HDSQLitePropertyPredicate <NSCopying>
{
    _Bool _negative;
    HDSQLiteQuery *_query;
    NSString *_queryProperty;
    id _values;
}

+ (id)doesNotContainPredicateWithProperty:(id)arg1 values:(id)arg2;
+ (id)containsPredicateWithProperty:(id)arg1 query:(id)arg2 queryProperty:(id)arg3;
+ (id)containsPredicateWithProperty:(id)arg1 values:(id)arg2;
@property(readonly, nonatomic) NSArray *values; // @synthesize values=_values;
@property(readonly, nonatomic) NSString *queryProperty; // @synthesize queryProperty=_queryProperty;
@property(readonly, nonatomic) HDSQLiteQuery *query; // @synthesize query=_query;
@property(readonly, nonatomic, getter=isNegative) _Bool negative; // @synthesize negative=_negative;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)SQLForEntityClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLiteNullPredicate : HDSQLitePropertyPredicate <NSCopying>
{
    _Bool _matchesNull;
}

+ (id)isNullPredicateWithProperty:(id)arg1;
+ (id)isNotNullPredicateWithProperty:(id)arg1;
@property(readonly, nonatomic) _Bool matchesNull; // @synthesize matchesNull=_matchesNull;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)description;
- (id)SQLForEntityClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLiteCompoundPredicate : HDSQLitePredicate <NSCopying>
{
    _Bool _unary;
    _Bool _trueIfNoPredicates;
    NSString *_combinationOperation;
    NSArray *_predicates;
}

+ (id)predicateWithProperty:(id)arg1 notEqualToValues:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 equalToValues:(id)arg2;
+ (id)predicateWithProperty:(id)arg1 values:(id)arg2 comparisonType:(long long)arg3;
+ (id)negatedPredicate:(id)arg1;
+ (id)predicateMatchingAnyPredicates:(id)arg1;
+ (id)predicateMatchingAllPredicates:(id)arg1;
@property(readonly, nonatomic) NSArray *predicates; // @synthesize predicates=_predicates;
- (void).cxx_destruct;
- (id)description;
- (_Bool)isCompatibleWithPredicate:(id)arg1;
- (id)SQLJoinClausesForEntityClass:(Class)arg1;
- (id)SQLForEntityClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface HDSQLiteHasAssociatedEntityPredicate : HDSQLitePredicate <NSCopying>
{
    Class _associatedEntityClass;
    HDSQLitePredicate *_associatedPredicate;
    _Bool _inverted;
}

+ (id)predicateWithAssociatedEntityClass:(Class)arg1 associatedPredicate:(id)arg2 inverted:(_Bool)arg3;
+ (id)predicateWithAssociatedEntityClass:(Class)arg1;
- (void).cxx_destruct;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)SQLForEntityClass:(Class)arg1;

@end

@interface HDSQLitePropertyComparisonPredicate : HDSQLitePredicate <NSCopying>
{
    NSString *_lhObjectPropertyName;
    NSString *_rhObjectPropertyName;
    long long _comparisonType;
}

+ (id)predicateWithLeftHandObjectPropertyName:(id)arg1 rightHandObjectPropertyName:(id)arg2 comparisonType:(long long)arg3;
@property(readonly, nonatomic) long long comparisonType; // @synthesize comparisonType=_comparisonType;
@property(readonly, nonatomic) NSString *rhObjectPropertyName; // @synthesize rhObjectPropertyName=_rhObjectPropertyName;
@property(readonly, nonatomic) NSString *lhObjectPropertyName; // @synthesize lhObjectPropertyName=_lhObjectPropertyName;
- (void).cxx_destruct;
- (id)description;
- (id)SQLForEntityClass:(Class)arg1;
- (id)_comparisonOperator;

@end

@interface HDCumulativeStatisticsBuilder : HDStatisticsBuilder
{
    HDCumulativeCollectionCalculator *_collectionCalculator;
    double _bucketStartTime;
    double _bucketEndTime;
    double _bucketLength;
    double _sum;
    long long _anchor;
    HDLastIntervalInfo *_lastIntervalInfo;
    HKStatistics *_lastStatistics;
}

@property(retain, nonatomic) HKStatistics *lastStatistics; // @synthesize lastStatistics=_lastStatistics;
@property(retain, nonatomic) HDLastIntervalInfo *lastIntervalInfo; // @synthesize lastIntervalInfo=_lastIntervalInfo;
- (void).cxx_destruct;
- (void)_addValue:(double)arg1 startDate:(double)arg2 endDate:(double)arg3 valuePerSecond:(double)arg4 seconds:(double)arg5 sourceId:(long long)arg6;
- (void)_setupStatistics:(id)arg1 withSum:(double)arg2 unit:(id)arg3 collectionCalculator:(id)arg4 sourceManager:(id)arg5;
- (id)_sumQuantityBySourceFromIdsAndValues:(id)arg1 unit:(id)arg2 sourceManager:(id)arg3;
- (_Bool)_isTimeIntervalTooLong:(long long)arg1 sampleStartTime:(double)arg2 sampleEndTime:(double)arg3 seconds:(double)arg4;
- (id)_mergedSumsForStartDate:(id)arg1 endDate:(id)arg2 predicate:(id)arg3 orderedSourceIds:(id)arg4 unit:(id)arg5 bySource:(id)arg6 dataCount:(unsigned long long *)arg7 shouldStopProcessing:(CDUnknownBlockType)arg8 database:(id)arg9;
- (id)_orderedSourceIDsFromSources:(id)arg1 sourceManager:(id)arg2;
- (id)_statisticsWithTimePeriod:(id)arg1 samples:(id)arg2 lastPeriod:(_Bool)arg3 error:(id *)arg4;
- (id)_addToLastBucket:(id)arg1 error:(id *)arg2;
- (id)_newStatisticsWithTimePeriod:(id)arg1 samples:(id)arg2 error:(id *)arg3;
- (id)_statisticsArrayWithStartDate:(id)arg1 endDate:(id)arg2 timePeriods:(id)arg3 shouldStopProcessing:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)_statisticsForStartDate:(id)arg1 endDate:(id)arg2 predicate:(id)arg3 shouldStopProcessing:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)updateStatistics:(id)arg1 withSamples:(id)arg2 error:(id *)arg3;
- (id)updateStatisticsCollection:(id)arg1 withSamples:(id)arg2 anchor:(id)arg3 error:(id *)arg4;
- (id)_initialStatisticsForCollection:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 sampleCount:(long long)arg4 shouldStopProcessing:(CDUnknownBlockType)arg5 error:(id *)arg6;
- (id)_initialStatisticsForStartDate:(id)arg1 endDate:(id)arg2 shouldStopProcessing:(CDUnknownBlockType)arg3 error:(id *)arg4;

@end

@interface HDSampleEntity : HDDataEntity
{
}

+ (id)_predicateWithSampleType:(id)arg1 sourceIdentifier:(id)arg2 predicate:(id)arg3;
+ (id)_predicateWithSampleType:(id)arg1 predicate:(id)arg2;
+ (void)_columnNamesAndSortOrderingsForDataType:(id)arg1 sortDescriptors:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (long long)preferredEntityType;
+ (id)anySampleOfType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id *)arg4;
+ (id)samplesTypesForSamplesMatchingPredicate:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)sampleCountAndDatesOfType:(id)arg1 healthDaemon:(id)arg2 matchingPredicate:(id)arg3 cancellationBlock:(CDUnknownBlockType)arg4;
+ (long long)countOfSamplesWithType:(id)arg1 healthDaemon:(id)arg2 matchingPredicate:(id)arg3 withError:(id *)arg4;
+ (long long)countOfSamplesWithType:(id)arg1 healthDaemon:(id)arg2 matchingFilter:(id)arg3 withError:(id *)arg4;
+ (id)sourceIDsForSamplesWithType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id *)arg4;
+ (void)enumerateSamplesWithType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5 orderBy:(id)arg6 directions:(id)arg7 limit:(unsigned long long)arg8 handler:(CDUnknownBlockType)arg9;
+ (void)enumerateSamplesWithType:(id)arg1 healthDaemon:(id)arg2 filter:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5 sortDescriptors:(id)arg6 limit:(unsigned long long)arg7 handler:(CDUnknownBlockType)arg8;
+ (void)enumerateUUIDsOfSamplesWithType:(id)arg1 healthDaemon:(id)arg2 matchingFilter:(id)arg3 limit:(unsigned long long)arg4 withHandler:(CDUnknownBlockType)arg5;
+ (void)enumerateSamplesWithType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5 limit:(unsigned long long)arg6 anchor:(id *)arg7 withHandler:(CDUnknownBlockType)arg8;
+ (id)samplesWithType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 limit:(unsigned long long)arg4 anchor:(id *)arg5 error:(id *)arg6;
+ (_Bool)deleteSamplesWithPredicate:(id)arg1 limit:(unsigned long long)arg2 deletedSampleCount:(unsigned long long *)arg3 deletedSampleTypes:(id)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (_Bool)deleteSamplesWithTypes:(id)arg1 sourceIdentifier:(id)arg2 deletedSampleTypes:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)mostRecentSampleWithType:(id)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id *)arg4;
+ (void)enumerateDatesOfSamplesWithType:(id)arg1 healthDaemon:(id)arg2 matchingPredicate:(id)arg3 limit:(unsigned long long)arg4 withHandler:(CDUnknownBlockType)arg5;
+ (id)columnNameForSortIdentifier:(id)arg1;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (Class)_associatedDataObjectClass;
+ (id)_columnsSQL;
+ (id)_databaseTable;
- (id)_sampleTypeInDatabase:(id)arg1;

@end

@interface HDDataTypeSourceOrderEntity : HDHealthEntity
{
}

+ (id)_predicateForSourceID:(id)arg1;
+ (_Bool)removeSourceID:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)orderedSourceIDsForType:(id)arg1 userOrdered:(_Bool *)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (_Bool)saveOrderedSourceIDs:(id)arg1 type:(id)arg2 userOrdered:(_Bool)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;

@end

@interface HDBackgroundTask : NSObject
{
    NSObject<OS_xpc_object> *_job;
}

- (void).cxx_destruct;
- (_Bool)taskExpired;
- (_Bool)taskSatisfied;
- (_Bool)taskValid;
- (id)description;
@property(retain, nonatomic) NSDictionary *userContext;
@property(retain, nonatomic) NSDate *endDate;
@property(retain, nonatomic) NSDate *startDate;
- (id)_job;
- (id)_initWithJob:(id)arg1;
- (id)init;

@end

@interface HDBackgroundTaskClient : NSObject
{
    CDUnknownBlockType _taskHandler;
}

- (void).cxx_destruct;
- (void)deliverTask:(id)arg1 taskName:(id)arg2 onQueue:(id)arg3;
- (id)initWithTaskHandler:(CDUnknownBlockType)arg1;

@end

@interface HDBackgroundTaskScheduler : NSObject
{
    NSMutableDictionary *_clients;
    NSMutableDictionary *_tasksQueuedForDelivery;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_queue> *_clientQueue;
}

- (void).cxx_destruct;
- (void)_queue_deliverJob:(id)arg1 withName:(const char *)arg2;
- (id)_queue_taskWithName:(id)arg1 forClientNamed:(id)arg2;
- (void)_queue_removeTaskWithName:(id)arg1 forClientNamed:(id)arg2;
- (void)_queue_addTask:(id)arg1 withName:(id)arg2 forClientNamed:(id)arg3;
- (void)_queue_registerClientWithName:(id)arg1 taskHandler:(CDUnknownBlockType)arg2;
- (id)taskWithName:(id)arg1 forClientNamed:(id)arg2;
- (void)removeTaskWithName:(id)arg1 forClientNamed:(id)arg2;
- (void)addTask:(id)arg1 withName:(id)arg2 forClientNamed:(id)arg3;
- (void)unregisterClientWithName:(id)arg1;
- (void)registerClientWithName:(id)arg1 taskHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface HDCodableCategorySample : PBCodable <NSCopying>
{
    long long _value;
    HDCodableSample *_sample;
    struct {
        unsigned int value:1;
    } _has;
}

@property(nonatomic) long long value; // @synthesize value=_value;
@property(retain, nonatomic) HDCodableSample *sample; // @synthesize sample=_sample;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasSample;

@end

@interface HDCodableNanoSyncChangeSet : PBCodable <HDNanoSyncDescription, HDNanoSyncPersistentUserInfoCopying, NSCopying>
{
    NSMutableArray *_changes;
}

+ (id)changeSetWithChanges:(id)arg1;
+ (id)persistentUserInfoKey;
+ (id)retreiveFromPersistentUserInfo:(id)arg1;
@property(retain, nonatomic) NSMutableArray *changes; // @synthesize changes=_changes;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)changesAtIndex:(unsigned long long)arg1;
- (unsigned long long)changesCount;
- (void)addChanges:(id)arg1;
- (void)clearChanges;
- (id)nanoSyncDescription;
- (id)copyForPersistentUserInfo;
- (void)addToPersistentUserInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDAssociationEntity : HDHealthEntity
{
}

+ (_Bool)_shouldJoinWithProperty:(id)arg1 joinProperty:(id)arg2;
+ (id)_propertyForForeignProperty:(id)arg1 joinProperty:(id)arg2;
+ (_Bool)_enumerateAssociationsWithPredicate:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3 lastSyncAnchor:(long long *)arg4 healthDatabase:(id)arg5 error:(id *)arg6 block:(CDUnknownBlockType)arg7;
+ (void)_enumerateObjectIDsWithPredicate:(id)arg1 database:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (id)_insertAssociationEntryWithAssociation:(id)arg1 object:(id)arg2 provenance:(long long)arg3 database:(id)arg4 error:(id *)arg5;
+ (id)deleteStatementForObjectAssociationsWithDatabase:(id)arg1;
+ (id)deleteStatementForAssociationWithDatabase:(id)arg1;
+ (id)objectIDsForAssociationEntity:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (id)journalEntryForAssociation:(id)arg1 objects:(id)arg2;
+ (_Bool)_insertEntriesWithAssociationUUID:(id)arg1 objectUUIDsData:(id)arg2 provenance:(long long)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (_Bool)insertEntriesWithAssociationUUID:(id)arg1 objectUUIDsData:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (_Bool)insertEntriesWithAssociation:(id)arg1 objects:(id)arg2 enforceSameSource:(_Bool)arg3 database:(id)arg4 error:(id *)arg5;
+ (_Bool)insertEntriesWithAssociation:(id)arg1 objects:(id)arg2 enforceSameSource:(_Bool)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)joinClauseForProperty:(id)arg1;
+ (id)associationPropertyForEntityClass:(Class)arg1;
+ (id)propertyForSyncProvenance;
+ (long long)protectionClass;
+ (id)_propertySettersForDataObject;
+ (id)createNonUniqueIndicesForColumns;
+ (id)createTableSQL;
+ (id)databaseTable;

@end

@interface _HDCorrelationInsertionJournalEntry : HDJournalEntry
{
    NSUUID *_correlationUUID;
    NSData *_objectUUIDsData;
    long long _provenance;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) long long provenance; // @synthesize provenance=_provenance;
@property(readonly, nonatomic) NSData *objectUUIDsData; // @synthesize objectUUIDsData=_objectUUIDsData;
@property(readonly, nonatomic) NSUUID *correlationUUID; // @synthesize correlationUUID=_correlationUUID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithCorrelationUUID:(id)arg1 objectUUIDsData:(id)arg2 provenance:(long long)arg3;

@end

@interface HDAssociationSyncEntity : NSObject <HDSyncEntity>
{
}

+ (_Bool)receiveSyncObjects:(id)arg1 syncStore:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)decodeSyncObjectWithData:(id)arg1;
+ (long long)nextSyncAnchorWithStore:(id)arg1 startSyncAnchor:(long long)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)syncObjectsWithStore:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (long long)syncEntityType;
+ (unsigned long long)syncObjectLimitForNanoSyncMessage;
+ (long long)finalAnchorForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (id)objectsForNanoSyncRestoreWithStore:(id)arg1 deviceSourceIdentifier:(id)arg2 nowDate:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 lastSyncAnchor:(long long *)arg5 healthDaemon:(id)arg6 error:(id *)arg7;
+ (int)nanoSyncObjectType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDJournalEntry : NSObject <NSSecureCoding>
{
}

+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
+ (_Bool)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface HDDiscreteStatisticsBuilder : HDStatisticsBuilder
{
    HDDiscreteCollectionCalculator *_collectionCalculator;
    long long _anchor;
}

- (void).cxx_destruct;
- (void)_setDataCount:(long long)arg1 inStatistics:(id)arg2 forSource:(id)arg3;
- (void)_addSample:(id)arg1 toStatistics:(id)arg2;
- (id)_getQuantitiesBySourceForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 unit:(id)arg4 healthDaemon:(id)arg5 database:(id)arg6;
- (id)_statisticsForPredicate:(id)arg1 shouldStopProcessing:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)updateStatistics:(id)arg1 withSamples:(id)arg2 error:(id *)arg3;
- (id)updateStatisticsCollection:(id)arg1 withSamples:(id)arg2 anchor:(id)arg3 error:(id *)arg4;
- (void)_setupStatistics:(id)arg1 withStats:(const CDStruct_23c51cd0 *)arg2 unit:(id)arg3 collectionCalculator:(id)arg4 sourceManager:(id)arg5;
- (id)_statQuantityBySourceFromIdsAndStats:(id)arg1 unit:(id)arg2 sourceManager:(id)arg3;
- (id)_statisticsArrayWithStartDate:(id)arg1 endDate:(id)arg2 timePeriods:(id)arg3 shouldStopProcessing:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)_initialStatisticsForCollection:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 sampleCount:(long long)arg4 shouldStopProcessing:(CDUnknownBlockType)arg5 error:(id *)arg6;
- (id)_initialStatisticsForStartDate:(id)arg1 endDate:(id)arg2 shouldStopProcessing:(CDUnknownBlockType)arg3 error:(id *)arg4;

@end

@interface HDCodableNanoSyncMessage : PBCodable <HDNanoSyncDescription, NSCopying>
{
    HDCodableNanoSyncActivationRestore *_activationRestore;
    HDCodableNanoSyncChangeSet *_changeSet;
    NSData *_healthPairingUUID;
    NSData *_persistentPairingUUID;
    HDCodableNanoSyncStatus *_status;
    int _version;
    struct {
        unsigned int version:1;
    } _has;
}

+ (id)messageWithPersistentPairingUUID:(id)arg1 healthPairingUUID:(id)arg2;
+ (id)messageFromPersistentUserInfo:(id)arg1;
@property(retain, nonatomic) HDCodableNanoSyncActivationRestore *activationRestore; // @synthesize activationRestore=_activationRestore;
@property(retain, nonatomic) HDCodableNanoSyncStatus *status; // @synthesize status=_status;
@property(retain, nonatomic) HDCodableNanoSyncChangeSet *changeSet; // @synthesize changeSet=_changeSet;
@property(retain, nonatomic) NSData *healthPairingUUID; // @synthesize healthPairingUUID=_healthPairingUUID;
@property(retain, nonatomic) NSData *persistentPairingUUID; // @synthesize persistentPairingUUID=_persistentPairingUUID;
@property(nonatomic) int version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool hasActivationRestore;
@property(readonly, nonatomic) _Bool hasStatus;
@property(readonly, nonatomic) _Bool hasChangeSet;
@property(readonly, nonatomic) _Bool hasHealthPairingUUID;
@property(readonly, nonatomic) _Bool hasPersistentPairingUUID;
@property(nonatomic) _Bool hasVersion;
- (id)nanoSyncDescription;
- (id)decodedHealthPairingUUID;
- (id)decodedPersistentPairingUUID;
- (_Bool)hasMinimumVersion;
- (id)copyPersistentUserInfo;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDIDSPersistentDictionary : NSObject
{
    Class _objectClass;
    NSString *_path;
    struct sqlite3 *_db;
    struct sqlite3_stmt *_fetch;
    struct sqlite3_stmt *_insert;
    struct sqlite3_stmt *_remove;
    struct sqlite3_stmt *_removeAll;
    struct sqlite3_stmt *_byDate;
}

- (void).cxx_destruct;
- (void)enumerateObjectsSortedByExpirationDate:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)_dataFromObj:(id)arg1;
- (id)_objectFromData:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 expires:(id)arg3;
- (void)_openDBForceRecreate:(_Bool)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 objectClass:(Class)arg2;

@end

@interface HDDataEntity : HDHealthEntity <HDDataEntity>
{
}

+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1;
+ (id)entitiesToDeleteBeforeInsertingObject:(id)arg1 sourceEntity:(id)arg2 database:(id)arg3;
+ (_Bool)acceptsObject:(id)arg1;
+ (Class)propertyApplierClass;
+ (id)propertyApplierWithProperties:(id)arg1 propertySetters:(id)arg2 authorizationFilter:(CDUnknownBlockType)arg3 database:(id)arg4;
+ (_Bool)isBackedByTable;
+ (long long)preferredEntityType;
+ (id)_dataObjectWithEntity:(id)arg1 type:(long long)arg2 propertyApplier:(id)arg3 values:(id *)arg4 healthDaemon:(id)arg5;
+ (id)_propertiesForFetchingDataObjectsWithAssociations:(id)arg1;
+ (Class)_ancestorWithProperty:(id)arg1;
+ (id)_aggregatedPropertySettersForDataObjectWithOrderedProperties:(id *)arg1;
+ (_Bool)_deleteDataObjectWithUUID:(id)arg1 sourceEntity:(id)arg2 failIfNotFound:(_Bool)arg3 deletionContext:(id)arg4 error:(id *)arg5;
+ (_Bool)_deleteDataEntityWithPredicate:(id)arg1 failIfNotFound:(_Bool)arg2 deletionContext:(id)arg3 error:(id *)arg4;
+ (void)_removeObjectWithPersistentID:(long long)arg1 database:(id)arg2;
+ (id)_insertDataObject:(id)arg1 withProvenance:(long long)arg2 sourceEntity:(id)arg3 inDatabase:(id)arg4 error:(id *)arg5;
+ (id)columnNameForSortIdentifier:(id)arg1;
+ (id)associationPropertyForEntityClass:(Class)arg1;
+ (Class)_associatedDataObjectClass;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (id)_columnsSQL;
+ (id)_databaseTable;
+ (id)propertyForSyncProvenance;
+ (long long)protectionClass;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)joinClauseForProperty:(id)arg1;
+ (id)databaseTable;
+ (id)createTableSQL;
+ (_Bool)_addCodableObjectsToCollections:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3 queryHandler:(CDUnknownBlockType)arg4;
+ (id)codableObjectCollectionsWithExcludedSyncStore:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2 lastSyncAnchor:(long long *)arg3 limit:(unsigned long long)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
+ (_Bool)addCodableObjectsToCollections:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3 lastSyncAnchor:(long long *)arg4 predicate:(id)arg5 limit:(unsigned long long)arg6 healthDaemon:(id)arg7 error:(id *)arg8;
+ (id)objectWithUUID:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (long long)countOfObjectsOfType:(long long)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 withError:(id *)arg4;
+ (id)sourceIDsForObjectsOfType:(long long)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 error:(id *)arg4;
+ (void)enumerateObjectsOfType:(long long)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5 limit:(unsigned long long)arg6 anchor:(id *)arg7 handler:(CDUnknownBlockType)arg8;
+ (void)enumerateObjectsOfType:(long long)arg1 healthDaemon:(id)arg2 predicate:(id)arg3 sourceIdentifier:(id)arg4 authorizationFilter:(CDUnknownBlockType)arg5 orderBy:(id)arg6 directions:(id)arg7 limit:(unsigned long long)arg8 handler:(CDUnknownBlockType)arg9;
+ (void)enumerateObjectsWithHealthDaemon:(id)arg1 predicate:(id)arg2 sourceIdentifier:(id)arg3 authorizationFilter:(CDUnknownBlockType)arg4 orderBy:(id)arg5 directions:(id)arg6 limit:(unsigned long long)arg7 handler:(CDUnknownBlockType)arg8;
+ (id)dataEntityForObject:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
+ (_Bool)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 failIfNotFound:(_Bool)arg3 healthDaemon:(id)arg4 error:(id *)arg5;
+ (_Bool)deleteDataObjects:(id)arg1 sourceEntity:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (void)insertDataObjects:(id)arg1 withProvenance:(long long)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
+ (id)insertDataObject:(id)arg1 withProvenance:(long long)arg2 sourceEntity:(id)arg3 creationDate:(id)arg4 healthDaemon:(id)arg5 error:(id *)arg6;
- (id)_dataID;
- (id)dataAnchor;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDDataPropertyApplier : NSObject
{
    NSArray *_propertyOrder;
    NSDictionary *_propertySetters;
    CDUnknownBlockType _authorizationFilter;
    HDSQLiteDatabase *_database;
    NSMutableDictionary *_sourceByPersistentIDCache;
    unsigned long long _sourcePropertyIndex;
    HDMetadataValueStatement *_metadataValueStatement;
}

@property(retain, nonatomic) HDMetadataValueStatement *metadataValueStatement; // @synthesize metadataValueStatement=_metadataValueStatement;
@property(nonatomic) unsigned long long sourcePropertyIndex; // @synthesize sourcePropertyIndex=_sourcePropertyIndex;
@property(retain, nonatomic) NSMutableDictionary *sourceByPersistentIDCache; // @synthesize sourceByPersistentIDCache=_sourceByPersistentIDCache;
@property(readonly, nonatomic) HDSQLiteDatabase *database; // @synthesize database=_database;
@property(readonly, copy, nonatomic) CDUnknownBlockType authorizationFilter; // @synthesize authorizationFilter=_authorizationFilter;
@property(readonly, copy, nonatomic) NSDictionary *propertySetters; // @synthesize propertySetters=_propertySetters;
@property(readonly, copy, nonatomic) NSArray *propertyOrder; // @synthesize propertyOrder=_propertyOrder;
- (void).cxx_destruct;
- (id)_sourceForPersistentID:(id)arg1 healthDaemon:(id)arg2 error:(id *)arg3;
- (void)applyPropertiesToObject:(id)arg1 entity:(id)arg2 values:(id *)arg3 healthDaemon:(id)arg4;
- (void)finish;
- (id)initWithPropertyOrder:(id)arg1 propertySetters:(id)arg2 authorizationFilter:(CDUnknownBlockType)arg3 database:(id)arg4;

@end

@interface HDDataDeletionContext : NSObject
{
    HDSQLiteDatabase *_database;
    NSMutableDictionary *_deleteStatementsByClassName;
}

@property(retain, nonatomic) NSMutableDictionary *deleteStatementsByClassName; // @synthesize deleteStatementsByClassName=_deleteStatementsByClassName;
@property(readonly, nonatomic) HDSQLiteDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)finish;
- (_Bool)deleteObjectWithPersistentID:(long long)arg1 entityClass:(Class)arg2 error:(id *)arg3;
- (id)initWithDatabase:(id)arg1;

@end

@interface _HDDataInsertionJournalEntry : HDJournalEntry
{
    HKObject *_dataObject;
    long long _provenance;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) long long provenance; // @synthesize provenance=_provenance;
@property(readonly, nonatomic) HKObject *dataObject; // @synthesize dataObject=_dataObject;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithDataObject:(id)arg1 provenance:(long long)arg2;

@end

@interface _HDDataBatchInsertionJournalEntry : HDJournalEntry
{
    HDCodableObjectCollection *_collection;
    long long _provenance;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) long long provenance; // @synthesize provenance=_provenance;
@property(readonly, nonatomic) HDCodableObjectCollection *collection; // @synthesize collection=_collection;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithCodableObjectCollection:(id)arg1 provenance:(long long)arg2;

@end

@interface _HDDataDeletionJournalEntry : HDJournalEntry
{
    _Bool _restrictSource;
    HKObject *_dataObject;
}

+ (_Bool)supportsSecureCoding;
+ (void)applyEntries:(id)arg1 withDaemon:(id)arg2;
+ (long long)behavior;
@property(readonly, nonatomic) _Bool restrictSource; // @synthesize restrictSource=_restrictSource;
@property(readonly, nonatomic) HKObject *dataObject; // @synthesize dataObject=_dataObject;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDataObject:(id)arg1 restrictSource:(_Bool)arg2;

@end

@interface HDSourceEntity : HDHealthEntity
{
}

+ (id)_propertySettersForSource;
+ (id)_predicateForSourceRepresentingCurrentDevice;
+ (id)_predicateForSourceWithBundleIdentifier:(id)arg1;
+ (id)_sourceRepresentingCurrentDeviceWithDatabase:(id)arg1;
+ (id)_sourceWithBundleIdentifier:(id)arg1 database:(id)arg2;
+ (id)_insertSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 options:(unsigned long long)arg3 isCurrentDevice:(_Bool)arg4 productType:(id)arg5 provenance:(long long)arg6 syncAnchor:(id)arg7 database:(id)arg8;
+ (id)allSourcePersistentIDsWithHealthDatabase:(id)arg1 error:(id *)arg2;
+ (id)sourceRepresentingCurrentDeviceWithHealthDatabase:(id)arg1 error:(id *)arg2;
+ (id)sourceWithBundleIdentifier:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)insertSourceWithBundleIdentifier:(id)arg1 name:(id)arg2 options:(unsigned long long)arg3 isCurrentDevice:(_Bool)arg4 productType:(id)arg5 provenance:(long long)arg6 healthDatabase:(id)arg7 error:(id *)arg8;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;
- (_Bool)setBundleIdentifier:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
- (_Bool)setName:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
- (id)sourceBundleIdentifierInHealthDatabase:(id)arg1 error:(id *)arg2;
- (id)sourceInHealthDatabase:(id)arg1 error:(id *)arg2;

@end

@interface HDMockDaemon : NSObject <HDHealthDaemon>
{
    HDProcessStateManager *processStateManager;
    id <HDHealthDatabase> _healthDatabase;
    id <HDHealthDataCollectionManager> _healthDataCollectionManager;
    id <HDHealthDataManager> _healthDataManager;
    id <HDSyncEngine> _syncEngine;
    id <HDHealthSourceManager> _healthSourceManager;
    id <HDHealthMetadataManager> _healthMetadataManager;
    id <HDDaemonDeviceManager> _healthDeviceManager;
    HDUserCharacteristicsManager *_userCharacteristicsManager;
    HDContentProtectionManager *_contentProtectionManager;
    HDBackgroundTaskScheduler *_backgroundTaskScheduler;
}

@property(retain) HDBackgroundTaskScheduler *backgroundTaskScheduler; // @synthesize backgroundTaskScheduler=_backgroundTaskScheduler;
@property(retain) HDContentProtectionManager *contentProtectionManager; // @synthesize contentProtectionManager=_contentProtectionManager;
@property(retain) HDUserCharacteristicsManager *userCharacteristicsManager; // @synthesize userCharacteristicsManager=_userCharacteristicsManager;
@property(retain) id <HDDaemonDeviceManager> healthDeviceManager; // @synthesize healthDeviceManager=_healthDeviceManager;
@property(retain) id <HDHealthMetadataManager> healthMetadataManager; // @synthesize healthMetadataManager=_healthMetadataManager;
@property(retain) id <HDHealthSourceManager> healthSourceManager; // @synthesize healthSourceManager=_healthSourceManager;
@property(retain) id <HDSyncEngine> syncEngine; // @synthesize syncEngine=_syncEngine;
@property(retain) id <HDHealthDataManager> healthDataManager; // @synthesize healthDataManager=_healthDataManager;
@property(retain) id <HDHealthDataCollectionManager> healthDataCollectionManager; // @synthesize healthDataCollectionManager=_healthDataCollectionManager;
@property(retain) id <HDHealthDatabase> healthDatabase; // @synthesize healthDatabase=_healthDatabase;
@property(readonly) HDProcessStateManager *processStateManager; // @synthesize processStateManager;
- (void).cxx_destruct;
- (void)terminate;
- (void)performBlockWithPowerAssertionIdentifier:(id)arg1 transactionName:(id)arg2 powerAssertionInterval:(double)arg3 block:(CDUnknownBlockType)arg4;
- (void)pauseActiveWorkoutsWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)containsActiveWorkouts;
- (void)invalidateActivityAlertSuppressionForBundleIdentifier:(id)arg1;
- (void)suppressActivityAlertsForBundleIdentifier:(id)arg1 reason:(long long)arg2;
- (void)setDataCollectionOptions:(id)arg1 forKey:(id)arg2 type:(id)arg3 clientUUID:(id)arg4;
- (void)unregisterForLaunchNotification:(const char *)arg1;
- (void)registerForLaunchNotification:(const char *)arg1;
- (_Bool)persistAndNotifyDataObject:(id)arg1 error:(id *)arg2;
- (void)setPairedWatchBundleIdentifierProvider:(id)arg1;
- (void)registerForDaemonReady:(id)arg1;
- (void)endTransaction:(id)arg1;
- (void)beginTransaction:(id)arg1;
@property(readonly) NSString *homeDirectoryPath;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDSQLiteTable : NSObject
{
    NSMutableArray *_columns;
    NSMutableArray *_tableConstraints;
    NSString *_tableName;
}

+ (id)SQLToRenameTable:(id)arg1 to:(id)arg2;
+ (id)SQLToDropTableNamed:(id)arg1;
+ (id)SQLToAddColumnWithSQL:(id)arg1 toTableNamed:(id)arg2;
+ (id)SQLToInsertColumnNames:(id)arg1 fromTableNamed:(id)arg2 intoTableNamed:(id)arg3;
+ (id)tableWithSQL:(id)arg1;
@property(copy, nonatomic) NSString *tableName; // @synthesize tableName=_tableName;
- (void).cxx_destruct;
- (id)_columnNamed:(id)arg1;
- (unsigned long long)_indexOfColumnNamed:(id)arg1;
- (id)_initWithTableSQL:(id)arg1;
- (id)creationSQL;
- (id)columnNames;
- (_Bool)renameColumn:(id)arg1 to:(id)arg2;
- (_Bool)removeColumn:(id)arg1;

@end

@interface HDSQLiteTableColumn : NSObject
{
    NSString *_name;
    NSString *_qualifiers;
}

@property(retain, nonatomic) NSString *qualifiers; // @synthesize qualifiers=_qualifiers;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)SQL;

@end

@interface HDWorkoutEntity : HDSampleEntity
{
}

+ (_Bool)associateSamples:(id)arg1 toWorkout:(id)arg2 healthDaemon:(id)arg3 error:(id *)arg4;
+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (Class)_associatedDataObjectClass;
+ (id)_columnsSQL;
+ (id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1;
+ (id)columnNameForSortIdentifier:(id)arg1;
+ (Class)propertyApplierClass;
+ (id)_databaseTable;

@end

@interface HDWorkoutPropertyApplier : HDDataPropertyApplier
{
}

- (void)applyPropertiesToObject:(id)arg1 entity:(id)arg2 values:(id *)arg3 healthDaemon:(id)arg4;

@end

@interface HDSQLiteEntity : NSObject <HDSQLiteEntity>
{
    long long _persistentID;
}

+ (id)_copyDeleteSQLWithTableName:(id)arg1 columnName:(id)arg2;
+ (_Bool)_insertValues:(id)arg1 intoTable:(id)arg2 withPidOrNil:(id)arg3 resultCode:(int *)arg4 database:(id)arg5;
+ (_Bool)_insertValues:(id)arg1 intoTable:(id)arg2 withPidOrNil:(id)arg3 replaceExisting:(_Bool)arg4 resultCode:(int *)arg5 database:(id)arg6;
+ (void)applyPropertySetters:(id)arg1 toObject:(id)arg2 withProperties:(id)arg3 values:(id *)arg4;
+ (id)deleteStatementWithProperty:(id)arg1 database:(id)arg2;
+ (id)joinClauseForProperty:(id)arg1;
+ (id)foreignKeyColumnForTable:(id)arg1;
+ (id)foreignDatabaseTablesToDelete;
+ (id)foreignDatabaseTableForProperty:(id)arg1;
+ (id)foreignDatabaseColumnForProperty:(id)arg1;
+ (id)disambiguatedSQLForProperty:(id)arg1;
+ (id)_generateDisambiguatedDatabaseTableName;
+ (id)disambiguatedDatabaseTable;
+ (id)databaseTable;
+ (id)databaseName;
+ (id)databaseValueForProperty:(id)arg1 clientValue:(id)arg2;
+ (id)associationPropertyForEntityClass:(Class)arg1;
+ (id)databasePropertyToSetClientProperty:(id)arg1;
+ (id)databasePropertyToGetClientProperty:(id)arg1;
+ (id)copyDatabaseDictionaryToSetClientDictionary:(id)arg1;
+ (id)entityWithPersistentID:(id)arg1;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3;
+ (id)queryWithDatabase:(id)arg1 predicate:(id)arg2;
+ (id)distinctProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id *)arg4;
+ (id)countDistinctForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;
+ (id)maxPersistentIDWithPredicate:(id)arg1 database:(id)arg2;
+ (id)countValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;
+ (id)sumValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;
+ (id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4;
+ (id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4;
+ (id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 database:(id)arg5;
+ (id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5;
+ (id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3;
+ (id)propertyValuesForAnyInDatabase:(id)arg1 properties:(id)arg2 predicate:(id)arg3;
+ (_Bool)deleteEntitiesInDatabase:(id)arg1 predicate:(id)arg2;
+ (void)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 database:(id)arg4 usingBlock:(CDUnknownBlockType)arg5;
+ (void)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (id)anyInDatabase:(id)arg1 predicate:(id)arg2;
+ (id)queryStatementWithPredicate:(id)arg1 properties:(id)arg2 database:(id)arg3;
@property(readonly, nonatomic) long long persistentID; // @synthesize persistentID=_persistentID;
- (_Bool)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2 database:(id)arg3;
- (id)_copyTableClusteredValuesWithValues:(id)arg1;
- (_Bool)getValuesForProperties:(id)arg1 withDatabase:(id)arg2 applier:(CDUnknownBlockType)arg3;
- (id)valueForProperty:(id)arg1 database:(id)arg2;
- (id)valueForExternalProperty:(id)arg1;
- (_Bool)setValuesWithDictionary:(id)arg1 database:(id)arg2;
- (_Bool)setValue:(id)arg1 forProperty:(id)arg2 database:(id)arg3;
- (void)setExternalValuesWithDictionary:(id)arg1;
- (_Bool)getValues:(id *)arg1 forProperties:(id *)arg2 count:(unsigned long long)arg3 database:(id)arg4;
- (_Bool)existsInDatabase:(id)arg1;
- (_Bool)deleteFromDatabase:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFromDatabase:(id)arg1;
- (id)initWithPropertyValues:(id)arg1 inDatabase:(id)arg2 replaceExisting:(_Bool)arg3 error:(id *)arg4;
- (id)initWithPropertyValues:(id)arg1 inDatabase:(id)arg2 replaceExisting:(_Bool)arg3;
- (id)initWithPersistentID:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDMetadataValueResult : NSObject
{
    NSNumber *_objectID;
    NSNumber *_keyID;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) NSNumber *keyID; // @synthesize keyID=_keyID;
@property(retain, nonatomic) NSNumber *objectID; // @synthesize objectID=_objectID;
- (void).cxx_destruct;

@end

@interface HDMetadataValueEntity : HDHealthEntity
{
}

+ (id)_propertySettersForResult;
+ (id)_predicateForEntityWithObjectID:(id)arg1;
+ (id)_predicateForEntityWithKeyID:(id)arg1;
+ (id)_resultsForPredicate:(id)arg1 database:(id)arg2;
+ (_Bool)_deleteMetadataValuesWithObjectID:(id)arg1 database:(id)arg2 error:(id *)arg3;
+ (id)_insertMetadataValueWithKeyID:(id)arg1 objectID:(id)arg2 value:(id)arg3 database:(id)arg4 error:(id *)arg5;
+ (id)deleteStatementForObjectMetadataWithDatabase:(id)arg1;
+ (id)resultsForObjectID:(id)arg1 database:(id)arg2;
+ (id)metadataValueStatementWithDatabase:(id)arg1;
+ (id)insertMetadataValueWithKeyID:(id)arg1 objectID:(id)arg2 value:(id)arg3 healthDatabase:(id)arg4 error:(id *)arg5;
+ (long long)protectionClass;
+ (id)createNonUniqueIndicesForColumns;
+ (id)createTableSQL;
+ (id)databaseTable;
- (id)_clientValueForProperty:(id)arg1 value:(id)arg2;
- (id)valueWithDatabase:(id)arg1;

@end

@interface HDMetadataValueStatement : HDSQLiteQueryStatement
{
    NSDictionary *_propertySetters;
}

- (void).cxx_destruct;
- (id)resultsForObjectID:(id)arg1;
- (id)initWithDatabase:(id)arg1 properties:(id)arg2 propertySetters:(id)arg3;

@end

@interface HDQueryServer : NSObject <HDDatabaseProtectedDataObserver, HKQueryServer, HDDataObserver>
{
    _Bool _didEndActivationTransaction;
    int _shouldDeactivate;
    NSUUID *_queryUUID;
    HKSampleType *_sampleType;
    _HKFilter *_filter;
    id <NSXPCProxyCreating> _clientProxy;
    id <HDHealthDaemon> _daemon;
    id <HDQueryServerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_queryQueue;
    long long _queryState;
}

@property(nonatomic) long long queryState; // @synthesize queryState=_queryState;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queryQueue; // @synthesize queryQueue=_queryQueue;
@property(readonly, nonatomic) __weak id <HDQueryServerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) __weak id <HDHealthDaemon> daemon; // @synthesize daemon=_daemon;
@property(readonly, nonatomic) id <NSXPCProxyCreating> clientProxy; // @synthesize clientProxy=_clientProxy;
@property(readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property(readonly, nonatomic) HKSampleType *sampleType; // @synthesize sampleType=_sampleType;
@property(readonly, nonatomic) NSUUID *queryUUID; // @synthesize queryUUID=_queryUUID;
- (void).cxx_destruct;
- (id)_queryStateString;
- (id)diagnosticDescription;
- (id)_predicateString;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)samplesOfTypeWereRemoved:(id)arg1;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (_Bool)_shouldExecuteWhenProtectedDataIsUnavailable;
- (_Bool)_queue_validateConfiguration:(id *)arg1;
- (void)_queue_stop;
- (void)_queue_start;
- (_Bool)_shouldListenForUpdates;
- (_Bool)_isAuthorizedToReadType:(id)arg1 withRestrictedSourceIdentifier:(id *)arg2;
- (CDUnknownBlockType)sampleAuthorizationFilter;
- (void)onQueue:(CDUnknownBlockType)arg1;
- (void)scheduleDatabaseAccessOnQueueWithBlock:(CDUnknownBlockType)arg1;
- (void)_queue_transitionToDisabledState:(long long)arg1;
- (void)_queue_transitionToPaused;
- (void)_queue_transitionToStopped;
- (void)_queue_transitionToStarted;
- (_Bool)_shouldStopProcessingQuery;
- (void)resumeServer;
- (void)_pauseServerValidate:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)pauseServerValidateWithCompletion:(CDUnknownBlockType)arg1;
- (void)pauseServer;
- (void)deactivateServerWithCompletion:(CDUnknownBlockType)arg1;
- (void)deactivateServer;
- (void)_queue_startQueryIfNecessary;
- (void)_scheduleStartQuery;
- (void)_queue_closeActivationTransactionIfNecessary;
- (void)activateServerWithCompletion:(CDUnknownBlockType)arg1;
- (id)_activationTransactionString;
- (id)initWithQueryUUID:(id)arg1 dataObject:(id)arg2 clientProxy:(id)arg3 client:(id)arg4 delegate:(id)arg5 healthDaemon:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDCodableWorkout : PBCodable <NSCopying>
{
    double _duration;
    double _goal;
    long long _goalType;
    double _totalDistanceInCanonicalUnit;
    double _totalEnergyBurnedInCanonicalUnit;
    long long _type;
    NSMutableArray *_events;
    HDCodableSample *_sample;
    struct {
        unsigned int duration:1;
        unsigned int goal:1;
        unsigned int goalType:1;
        unsigned int totalDistanceInCanonicalUnit:1;
        unsigned int totalEnergyBurnedInCanonicalUnit:1;
        unsigned int type:1;
    } _has;
}

@property(nonatomic) double goal; // @synthesize goal=_goal;
@property(nonatomic) long long goalType; // @synthesize goalType=_goalType;
@property(nonatomic) double totalDistanceInCanonicalUnit; // @synthesize totalDistanceInCanonicalUnit=_totalDistanceInCanonicalUnit;
@property(nonatomic) double totalEnergyBurnedInCanonicalUnit; // @synthesize totalEnergyBurnedInCanonicalUnit=_totalEnergyBurnedInCanonicalUnit;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) NSMutableArray *events; // @synthesize events=_events;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) HDCodableSample *sample; // @synthesize sample=_sample;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasGoal;
@property(nonatomic) _Bool hasGoalType;
@property(nonatomic) _Bool hasTotalDistanceInCanonicalUnit;
@property(nonatomic) _Bool hasTotalEnergyBurnedInCanonicalUnit;
@property(nonatomic) _Bool hasDuration;
- (id)eventsAtIndex:(unsigned long long)arg1;
- (unsigned long long)eventsCount;
- (void)addEvents:(id)arg1;
- (void)clearEvents;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasSample;
- (id)decodedGoal;
- (unsigned long long)decodedGoalType;
- (id)decodedTotalDistance;
- (id)decodedTotalEnergyBurned;
- (id)decodedWorkoutEvents;

@end

@interface HDHealthEntity : HDSQLiteEntity
{
}

+ (_Bool)_performWriteTransaction:(_Bool)arg1 withHealthDatabase:(id)arg2 error:(id *)arg3 usingBlock:(CDUnknownBlockType)arg4 inaccessibilityHandler:(CDUnknownBlockType)arg5;
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3 inaccessibilityHandler:(CDUnknownBlockType)arg4;
+ (_Bool)performWriteTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (_Bool)performReadTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3 inaccessibilityHandler:(CDUnknownBlockType)arg4;
+ (_Bool)performReadTransactionWithHealthDatabase:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
+ (_Bool)performReadTransactionWithHealthDatabase:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
+ (id)databaseName;
+ (id)createNonUniqueIndicesForColumns;
+ (id)createTableSQL;
+ (id)protectedDatabaseName;
+ (long long)protectionClass;
+ (id)predicateForSyncWithPredicate:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3;
+ (id)propertyForSyncProvenance;
+ (id)propertyForSyncAnchor;
+ (id)_syncQueryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 limit:(unsigned long long)arg5 anchorProperty:(id)arg6;
+ (id)_syncQueryDescriptorWithPredicate:(id)arg1 orderingProperties:(id)arg2 orderingDirections:(id)arg3 limit:(unsigned long long)arg4 anchorProperty:(id)arg5;
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 excludedSyncStore:(id)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 limit:(unsigned long long)arg6 healthDatabase:(id)arg7 error:(id *)arg8;
+ (long long)nextSyncAnchorWithStartAnchor:(long long)arg1 predicate:(id)arg2 excludedSyncStore:(id)arg3 healthDatabase:(id)arg4 error:(id *)arg5;
+ (_Bool)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 excludedSyncStore:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 orderingProperties:(id)arg5 orderingDirections:(id)arg6 limit:(unsigned long long)arg7 lastSyncAnchor:(long long *)arg8 healthDatabase:(id)arg9 error:(id *)arg10 block:(CDUnknownBlockType)arg11;
+ (_Bool)enumerateEntitiesForSyncWithProperties:(id)arg1 predicate:(id)arg2 excludedSyncStore:(id)arg3 syncAnchorRange:(struct HDSyncAnchorRange)arg4 limit:(unsigned long long)arg5 lastSyncAnchor:(long long *)arg6 healthDatabase:(id)arg7 error:(id *)arg8 block:(CDUnknownBlockType)arg9;
+ (_Bool)enumerateEntitiesForSyncWithPredicate:(id)arg1 excludedSyncStore:(id)arg2 syncAnchorRange:(struct HDSyncAnchorRange)arg3 limit:(unsigned long long)arg4 lastSyncAnchor:(long long *)arg5 healthDatabase:(id)arg6 error:(id *)arg7 block:(CDUnknownBlockType)arg8;
+ (id)entityWithPropertyValues:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)maxRowIDForPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)propertyValueForAnyWithProperty:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 healthDatabase:(id)arg5 error:(id *)arg6;
+ (id)propertyValueForAnyWithProperty:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;
+ (id)propertyValuesForAnyWithProperties:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;
+ (id)anyWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (_Bool)deleteEntitiesWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (_Bool)setValuesWithDictionary:(id)arg1 predicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;
+ (_Bool)enumerateProperties:(id)arg1 withPredicate:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4 usingBlock:(CDUnknownBlockType)arg5;
+ (long long)countOfObjectsWithPredicate:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
- (id)valueForProperty:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
- (_Bool)setValue:(id)arg1 forProperty:(id)arg2 healthDatabase:(id)arg3 error:(id *)arg4;

@end

@interface HDCodableActivityCache : PBCodable <NSCopying>
{
    long long _activeEnergyBurnedAnchor;
    double _activeHours;
    long long _activeHoursAnchor;
    double _briskMinutes;
    long long _briskMinutesAnchor;
    long long _cacheIndex;
    long long _calorieGoalAnchor;
    double _energyBurned;
    double _energyBurnedGoal;
    long long _energyBurnedGoalAnchor;
    double _energyBurnedGoalDate;
    long long _stepCount;
    long long _stepCountAnchor;
    double _walkingAndRunningDistance;
    long long _walkingAndRunningDistanceAnchor;
    long long _workoutAnchor;
    HDCodableSample *_sample;
    struct {
        unsigned int activeEnergyBurnedAnchor:1;
        unsigned int activeHours:1;
        unsigned int activeHoursAnchor:1;
        unsigned int briskMinutes:1;
        unsigned int briskMinutesAnchor:1;
        unsigned int cacheIndex:1;
        unsigned int calorieGoalAnchor:1;
        unsigned int energyBurned:1;
        unsigned int energyBurnedGoal:1;
        unsigned int energyBurnedGoalAnchor:1;
        unsigned int energyBurnedGoalDate:1;
        unsigned int stepCount:1;
        unsigned int stepCountAnchor:1;
        unsigned int walkingAndRunningDistance:1;
        unsigned int walkingAndRunningDistanceAnchor:1;
        unsigned int workoutAnchor:1;
    } _has;
}

@property(nonatomic) long long energyBurnedGoalAnchor; // @synthesize energyBurnedGoalAnchor=_energyBurnedGoalAnchor;
@property(nonatomic) long long workoutAnchor; // @synthesize workoutAnchor=_workoutAnchor;
@property(nonatomic) long long walkingAndRunningDistanceAnchor; // @synthesize walkingAndRunningDistanceAnchor=_walkingAndRunningDistanceAnchor;
@property(nonatomic) long long stepCountAnchor; // @synthesize stepCountAnchor=_stepCountAnchor;
@property(nonatomic) long long calorieGoalAnchor; // @synthesize calorieGoalAnchor=_calorieGoalAnchor;
@property(nonatomic) long long briskMinutesAnchor; // @synthesize briskMinutesAnchor=_briskMinutesAnchor;
@property(nonatomic) long long activeHoursAnchor; // @synthesize activeHoursAnchor=_activeHoursAnchor;
@property(nonatomic) long long activeEnergyBurnedAnchor; // @synthesize activeEnergyBurnedAnchor=_activeEnergyBurnedAnchor;
@property(nonatomic) double energyBurnedGoalDate; // @synthesize energyBurnedGoalDate=_energyBurnedGoalDate;
@property(nonatomic) double walkingAndRunningDistance; // @synthesize walkingAndRunningDistance=_walkingAndRunningDistance;
@property(nonatomic) double energyBurnedGoal; // @synthesize energyBurnedGoal=_energyBurnedGoal;
@property(nonatomic) long long stepCount; // @synthesize stepCount=_stepCount;
@property(nonatomic) double activeHours; // @synthesize activeHours=_activeHours;
@property(nonatomic) double briskMinutes; // @synthesize briskMinutes=_briskMinutes;
@property(nonatomic) double energyBurned; // @synthesize energyBurned=_energyBurned;
@property(nonatomic) long long cacheIndex; // @synthesize cacheIndex=_cacheIndex;
@property(retain, nonatomic) HDCodableSample *sample; // @synthesize sample=_sample;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasEnergyBurnedGoalAnchor;
@property(nonatomic) _Bool hasWorkoutAnchor;
@property(nonatomic) _Bool hasWalkingAndRunningDistanceAnchor;
@property(nonatomic) _Bool hasStepCountAnchor;
@property(nonatomic) _Bool hasCalorieGoalAnchor;
@property(nonatomic) _Bool hasBriskMinutesAnchor;
@property(nonatomic) _Bool hasActiveHoursAnchor;
@property(nonatomic) _Bool hasActiveEnergyBurnedAnchor;
@property(nonatomic) _Bool hasEnergyBurnedGoalDate;
@property(nonatomic) _Bool hasWalkingAndRunningDistance;
@property(nonatomic) _Bool hasEnergyBurnedGoal;
@property(nonatomic) _Bool hasStepCount;
@property(nonatomic) _Bool hasActiveHours;
@property(nonatomic) _Bool hasBriskMinutes;
@property(nonatomic) _Bool hasEnergyBurned;
@property(nonatomic) _Bool hasCacheIndex;
@property(readonly, nonatomic) _Bool hasSample;
- (id)decodedWalkingAndRunningDistanceQuantity;
- (id)decodedEnergyBurnedGoalQuantity;
- (id)decodedEnergyBurnedQuantity;

@end

@interface HDCategorySampleEntity : HDSampleEntity
{
}

+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (Class)_associatedDataObjectClass;
+ (id)_columnsSQL;
+ (id)_databaseTable;

@end

@interface HDSQLiteMetadataPredicate : HDSQLitePredicate <NSCopying>
{
    HDSQLitePredicate *_keyPredicate;
    HDSQLitePredicate *_valuePredicate;
    _Bool _includeNullPredicate;
}

+ (id)predicateWithMetadataKey:(id)arg1 value:(id)arg2 operatorType:(unsigned long long)arg3;
+ (id)predicateWithMetadataKey:(id)arg1 allowedValues:(id)arg2;
- (void).cxx_destruct;
- (id)_valuePredicateForValue:(id)arg1 operatorType:(unsigned long long)arg2;
- (void)bindToStatement:(struct sqlite3_stmt *)arg1 bindingIndex:(inout int *)arg2;
- (id)SQLForEntityClass:(Class)arg1;

@end

@interface HDCodableNanoSyncChange : PBCodable <HDSyncChange, HDNanoSyncDescription, NSCopying>
{
    long long _endAnchor;
    long long _startAnchor;
    NSMutableArray *_objectDatas;
    int _objectType;
    struct {
        unsigned int endAnchor:1;
        unsigned int startAnchor:1;
        unsigned int objectType:1;
    } _has;
}

+ (id)changeWithNanoSyncEntityClass:(Class)arg1;
@property(retain, nonatomic) NSMutableArray *objectDatas; // @synthesize objectDatas=_objectDatas;
@property(nonatomic) long long endAnchor; // @synthesize endAnchor=_endAnchor;
@property(nonatomic) long long startAnchor; // @synthesize startAnchor=_startAnchor;
@property(nonatomic) int objectType; // @synthesize objectType=_objectType;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)objectDataAtIndex:(unsigned long long)arg1;
- (unsigned long long)objectDatasCount;
- (void)addObjectData:(id)arg1;
- (void)clearObjectDatas;
@property(nonatomic) _Bool hasEndAnchor;
@property(nonatomic) _Bool hasStartAnchor;
@property(nonatomic) _Bool hasObjectType;
- (id)nanoSyncDescription;
- (id)decodedObjects;
- (struct HDSyncAnchorRange)syncAnchorRange;
- (void)setObjects:(id)arg1 syncAnchorRange:(struct HDSyncAnchorRange)arg2;
- (Class)syncEntityClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDClient : NSObject
{
    NSXPCConnection *_connection;
    _HKEntitlements *_entitlements;
    NSString *_name;
    NSString *_applicationIdentifier;
    NSString *_sourceBundleIdentifier;
}

@property(readonly) NSString *sourceBundleIdentifier; // @synthesize sourceBundleIdentifier=_sourceBundleIdentifier;
@property(readonly) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) _HKEntitlements *entitlements; // @synthesize entitlements=_entitlements;
@property(readonly) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (id)description;
- (id)valueForEntitlement:(id)arg1;
- (_Bool)hasEntitlement:(id)arg1 withError:(id *)arg2;
@property(readonly) int processIdentifier;
- (id)_initWithConnection:(id)arg1 entitlements:(id)arg2;
- (id)initWithEntitlements:(id)arg1;
- (id)initWithConnection:(id)arg1 entitlements:(id)arg2;
- (id)initWithConnection:(id)arg1;

@end

@interface HDDataCollector : NSObject <HDHealthDataCollector>
{
    id <HDHealthDaemon> _healthDaemon;
    NSObject<OS_dispatch_queue> *_queue;
    HKObjectType *_observedType;
    HDSourceEntity *_sourceEntity;
    long long _state;
    double _collectionInterval;
    long long _failureRetryCount;
    _Bool _disabled;
}

+ (id)secondaryContextClasses;
+ (Class)sensorDatumClass;
+ (id)domain;
+ (id)observedType;
- (void).cxx_destruct;
- (void)_queue_retryFromFailure;
- (_Bool)_queue_shouldRetryFromFailure;
- (void)_queue_incrementFailureRetryCounter;
- (void)_queue_resetFailureRetryCounter;
@property(readonly) HDSourceEntity *sourceEntity;
- (void)stopPerformingUpdatesWithErrorEncountered:(_Bool)arg1;
- (id)dataCollectorDiagnosticDescription;
- (void)updateHistoricalData;
- (void)collectionStoppedForType:(id)arg1;
- (void)updateCollectionInterval:(double)arg1 forType:(id)arg2;
- (void)collectionStartedForType:(id)arg1 collectionInterval:(double)arg2;
- (void)_queue_updateCollectionInterval:(double)arg1;
- (void)_queue_transitionToIdle;
- (void)_queue_transitionToStreaming;
- (void)_queue_transitionToFailure;
- (void)_queue_beginStreaming;
- (void)_queue_beginStreamingIfNecessary;
- (id)_queue_sourceEntity;
- (_Bool)_queue_streaming;
@property _Bool disabled;
- (void)setCollectionInterval:(double)arg1;
- (double)collectionInterval;
- (_Bool)_queue_disabled;
- (void)_queue_receivedData;
- (id)_dictionaryFromContext:(id)arg1;
- (id)_sensorDatumFromContext:(id)arg1;
- (id)_contextFromDictionary:(id)arg1;
- (id)_contextFromSensorDatum:(id)arg1;
- (id)_retrieveSecondaryContext;
- (id)_retrievePrimaryContext;
- (_Bool)_persistSecondaryContext:(id)arg1;
- (_Bool)_persistPrimaryContext:(id)arg1;
- (id)_retrieveContextForKey:(id)arg1;
- (_Bool)_persistContext:(id)arg1 forKey:(id)arg2;
- (void)_performSync:(CDUnknownBlockType)arg1;
- (void)_performAsync:(CDUnknownBlockType)arg1;
- (id)initWithHealthDaemon:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDLiveDataCollector : HDDataCollector
{
}

- (id)hkObjectsFromSensorDatum:(id)arg1;
- (void)beginUpdatesWithHandler:(CDUnknownBlockType)arg1;
- (void)_queue_handleSensorDatum:(id)arg1;
- (void)_queue_beginStreaming;

@end

@interface HDAggregateDataCollector : HDDataCollector
{
    _HKDelayedOperation *_historicalFetchOperation;
    id <HDSensorDatum> _lastReceivedSensorDatum;
    _Bool _didReceiveSensorDatum;
    NSDictionary *_lastReceivedSecondaryContext;
    _Bool _fetchingHistoricalData;
    _Bool _needsHistoricalFetch;
    double _maxDatumDuration;
}

- (void).cxx_destruct;
- (id)hkObjectsFromSensorData:(id)arg1 baseSensorDatum:(id)arg2 startDate:(id)arg3 endDate:(id)arg4;
- (void)fetchHistoricalSensorDataSinceDatum:(id)arg1 databaseIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)beginUpdatesFromDatum:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)updateHistoricalDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateHistoricalData;
- (id)_queue_processSensorDataBatched:(id)arg1 firstDatum:(id)arg2 lastSensorDatum:(id *)arg3;
- (void)_queue_processSensorData:(id)arg1 lastSensorDatum:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_queue_fetchHistoricalDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_handleUpdatingHistoricalDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)_queue_handleCMDatabaseReset;
- (void)_queue_updateLastReceivedSecondaryContext:(id)arg1;
- (void)_queue_updateLastReceivedSensorDatum:(id)arg1;
- (id)_queue_lastReceivedSecondaryContext;
- (id)_queue_lastReceivedSensorDatum;
- (void)_queue_beginUpdates;
- (void)_queue_beginStreaming;
- (double)_queue_maxDatumDuration;
@property double maxDatumDuration;
- (double)_queue_aggregationInterval;
- (id)initWithHealthDaemon:(id)arg1;

@end

@interface HDCodableSource : PBCodable <NSCopying>
{
    long long _options;
    NSString *_bundleIdentifier;
    NSString *_name;
    NSString *_productType;
    struct {
        unsigned int options:1;
    } _has;
}

@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasOptions;
@property(readonly, nonatomic) _Bool hasProductType;
@property(readonly, nonatomic) _Bool hasBundleIdentifier;
@property(readonly, nonatomic) _Bool hasName;

@end

@interface HDMetadataKeyResult : NSObject
{
    NSString *_key;
}

@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;

@end

@interface HDMetadataKeyEntity : HDHealthEntity
{
}

+ (id)_propertySettersForResult;
+ (id)_keyForPersistentID:(id)arg1 database:(id)arg2;
+ (id)_insertEntityWithKey:(id)arg1 database:(id)arg2;
+ (id)_entityForKey:(id)arg1 database:(id)arg2;
+ (id)resultForKeyID:(id)arg1 healthDatabase:(id)arg2;
+ (id)insertEntityWithKey:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)entityForKey:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;
- (id)resultWithDatabase:(id)arg1;

@end

@interface HDCodableMetadataKeyValuePair : PBCodable <NSCopying>
{
    double _dateValue;
    double _numberDoubleValue;
    long long _numberIntValue;
    NSString *_key;
    NSString *_stringValue;
    struct {
        unsigned int dateValue:1;
        unsigned int numberDoubleValue:1;
        unsigned int numberIntValue:1;
    } _has;
}

@property(nonatomic) double numberDoubleValue; // @synthesize numberDoubleValue=_numberDoubleValue;
@property(nonatomic) long long numberIntValue; // @synthesize numberIntValue=_numberIntValue;
@property(nonatomic) double dateValue; // @synthesize dateValue=_dateValue;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasNumberDoubleValue;
@property(nonatomic) _Bool hasNumberIntValue;
@property(nonatomic) _Bool hasDateValue;
@property(readonly, nonatomic) _Bool hasStringValue;
@property(readonly, nonatomic) _Bool hasKey;

@end

@interface HDDiagnosticManager : NSObject
{
    NSHashTable *_objects;
    int _lock;
}

+ (id)sharedDiagnosticManager;
- (void).cxx_destruct;
- (id)_diagnosticsOverview;
- (id)_diagnosticsForKey:(id)arg1 shouldLog:(_Bool)arg2;
- (id)diagnosticsForKey:(id)arg1;
- (void)logAllDiagnostics;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)init;

@end

@interface HDCodableObjectCollection : PBCodable <NSCopying>
{
    NSMutableArray *_activityCaches;
    NSMutableArray *_categorySamples;
    NSMutableArray *_correlations;
    NSMutableArray *_quantitySamples;
    HDCodableSource *_source;
    NSString *_sourceBundleIdentifier;
    NSMutableArray *_workouts;
}

@property(retain, nonatomic) NSMutableArray *activityCaches; // @synthesize activityCaches=_activityCaches;
@property(retain, nonatomic) NSMutableArray *correlations; // @synthesize correlations=_correlations;
@property(retain, nonatomic) NSMutableArray *workouts; // @synthesize workouts=_workouts;
@property(retain, nonatomic) NSMutableArray *quantitySamples; // @synthesize quantitySamples=_quantitySamples;
@property(retain, nonatomic) NSMutableArray *categorySamples; // @synthesize categorySamples=_categorySamples;
@property(retain, nonatomic) HDCodableSource *source; // @synthesize source=_source;
@property(retain, nonatomic) NSString *sourceBundleIdentifier; // @synthesize sourceBundleIdentifier=_sourceBundleIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)activityCachesAtIndex:(unsigned long long)arg1;
- (unsigned long long)activityCachesCount;
- (void)addActivityCaches:(id)arg1;
- (void)clearActivityCaches;
- (id)correlationsAtIndex:(unsigned long long)arg1;
- (unsigned long long)correlationsCount;
- (void)addCorrelations:(id)arg1;
- (void)clearCorrelations;
- (id)workoutsAtIndex:(unsigned long long)arg1;
- (unsigned long long)workoutsCount;
- (void)addWorkouts:(id)arg1;
- (void)clearWorkouts;
- (id)quantitySamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)quantitySamplesCount;
- (void)addQuantitySamples:(id)arg1;
- (void)clearQuantitySamples;
- (id)categorySamplesAtIndex:(unsigned long long)arg1;
- (unsigned long long)categorySamplesCount;
- (void)addCategorySamples:(id)arg1;
- (void)clearCategorySamples;
@property(readonly, nonatomic) _Bool hasSource;
@property(readonly, nonatomic) _Bool hasSourceBundleIdentifier;
- (id)decodedObjects;
- (unsigned long long)count;
- (_Bool)isEquivalentToObjectCollection:(id)arg1;

@end

@interface HDCodableNanoSyncAnchor : PBCodable <NSCopying>
{
    long long _anchor;
    int _objectType;
    struct {
        unsigned int anchor:1;
        unsigned int objectType:1;
    } _has;
}

@property(nonatomic) long long anchor; // @synthesize anchor=_anchor;
@property(nonatomic) int objectType; // @synthesize objectType=_objectType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasAnchor;
@property(nonatomic) _Bool hasObjectType;
- (id)nanoSyncDescription;

@end

@interface HDCodableTimestampedKeyValuePair : PBCodable <NSCopying>
{
    double _numberDoubleValue;
    long long _numberIntValue;
    double _timestamp;
    NSData *_bytesValue;
    NSString *_key;
    NSString *_stringValue;
    struct {
        unsigned int numberDoubleValue:1;
        unsigned int numberIntValue:1;
        unsigned int timestamp:1;
    } _has;
}

@property(retain, nonatomic) NSData *bytesValue; // @synthesize bytesValue=_bytesValue;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(nonatomic) double numberDoubleValue; // @synthesize numberDoubleValue=_numberDoubleValue;
@property(nonatomic) long long numberIntValue; // @synthesize numberIntValue=_numberIntValue;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasBytesValue;
@property(readonly, nonatomic) _Bool hasStringValue;
@property(nonatomic) _Bool hasNumberDoubleValue;
@property(nonatomic) _Bool hasNumberIntValue;
@property(nonatomic) _Bool hasTimestamp;
@property(readonly, nonatomic) _Bool hasKey;
- (id)decodedTimestamp;
- (id)decodedValue;
- (void)setTimestampWithDate:(id)arg1;
- (void)setValue:(id)arg1;
- (id)initWithKey:(id)arg1 value:(id)arg2 timestamp:(id)arg3;

@end

@interface HDCodableQuantitySample : PBCodable <NSCopying>
{
    double _valueInCanonicalUnit;
    HDCodableSample *_sample;
    struct {
        unsigned int valueInCanonicalUnit:1;
    } _has;
}

@property(nonatomic) double valueInCanonicalUnit; // @synthesize valueInCanonicalUnit=_valueInCanonicalUnit;
@property(retain, nonatomic) HDCodableSample *sample; // @synthesize sample=_sample;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasValueInCanonicalUnit;
@property(readonly, nonatomic) _Bool hasSample;

@end

@interface HDCodableObject : PBCodable <NSCopying>
{
    double _creationDate;
    HDCodableMetadataDictionary *_metadataDictionary;
    NSString *_sourceBundleIdentifier;
    NSData *_uuid;
    struct {
        unsigned int creationDate:1;
    } _has;
}

@property(nonatomic) double creationDate; // @synthesize creationDate=_creationDate;
@property(retain, nonatomic) NSString *sourceBundleIdentifier; // @synthesize sourceBundleIdentifier=_sourceBundleIdentifier;
@property(retain, nonatomic) HDCodableMetadataDictionary *metadataDictionary; // @synthesize metadataDictionary=_metadataDictionary;
@property(retain, nonatomic) NSData *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCreationDate;
@property(readonly, nonatomic) _Bool hasSourceBundleIdentifier;
@property(readonly, nonatomic) _Bool hasMetadataDictionary;
@property(readonly, nonatomic) _Bool hasUuid;
- (id)decodedCreationDate;
- (id)decodedMetadata;
- (id)decodedUUID;

@end

@interface HDCodableWorkoutEvent : PBCodable <NSCopying>
{
    double _date;
    long long _type;
    struct {
        unsigned int date:1;
        unsigned int type:1;
    } _has;
}

@property(nonatomic) double date; // @synthesize date=_date;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasDate;
@property(nonatomic) _Bool hasType;
- (id)decodedDate;

@end

@interface HDQuantitySampleEntity : HDSampleEntity
{
}

+ (id)sumOfSamplesWithDataType:(id)arg1 inDatabase:(id)arg2 predicate:(id)arg3;
+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (id)_propertySettersForDataObject;
+ (Class)_associatedDataObjectClass;
+ (id)_columnsSQL;
+ (id)_databaseTable;

@end

@interface HDKnownDeviceEntity : HDHealthEntity
{
}

+ (id)_tableValuesFromService:(id)arg1;
+ (id)_propertySettersForService;
+ (id)_servicesInDatabase:(id)arg1 removals:(id *)arg2;
+ (_Bool)setHealthUpdatesEnabled:(_Bool)arg1 forDevice:(id)arg2 inDatabase:(id)arg3 error:(id *)arg4;
+ (_Bool)healthUpdatesEnabledForDevice:(id)arg1 inDatabase:(id)arg2 error:(id *)arg3;
+ (id)allServicesFromHealthDatabase:(id)arg1 error:(id *)arg2;
+ (_Bool)deleteDevice:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)insertOrUpdateDevice:(id)arg1 healthDatabase:(id)arg2 error:(id *)arg3;
+ (id)_servicePredicate:(id)arg1;
+ (long long)protectionClass;
+ (id)createTableSQL;
+ (id)databaseTable;

@end

@interface HDSQLiteHealthDatabase : HDSQLiteDatabase
{
    NSString *_homeDirectoryPath;
}

+ (id)virtualFilesystemModule;
+ (void)_removeDatabases:(id)arg1 withHomeDirectoryPath:(id)arg2;
+ (void)removeProtectedDatabaseWithHomeDirectoryPath:(id)arg1;
+ (void)removeAllDatabasesWithHomeDirectoryPath:(id)arg1;
@property(copy, nonatomic) NSString *homeDirectoryPath; // @synthesize homeDirectoryPath=_homeDirectoryPath;
- (void).cxx_destruct;
- (_Bool)isProtectedDatabaseAttached;
- (void)detachProtectedDatabase;
- (_Bool)attachProtectedDatabaseWithError:(id *)arg1;
- (id)initWithHomeDirectoryPath:(id)arg1;
- (id)initWithDatabaseURL:(id)arg1;

@end

@interface HDSQLiteMetaEntity : HDSQLiteEntity
{
}

+ (id)_tableNamePredicate:(id)arg1;
+ (id)_namePredicate:(id)arg1;
+ (id)_typePredicate:(id)arg1;
+ (id)queryWithDatabase:(id)arg1 types:(id)arg2 tableName:(id)arg3;
+ (id)queryWithDatabase:(id)arg1 type:(id)arg2 tableName:(id)arg3;
+ (id)queryWithDatabase:(id)arg1 type:(id)arg2;
+ (id)anyInDatabase:(id)arg1 withType:(id)arg2 tableName:(id)arg3;
+ (id)anyInDatabase:(id)arg1 withType:(id)arg2 name:(id)arg3;
+ (id)databaseTable;
- (id)SQLWithDatabase:(id)arg1;
- (id)tableNameWithDatabase:(id)arg1;
- (id)nameWithDatabase:(id)arg1;
- (id)typeWithDatabase:(id)arg1;

@end

@interface HDStatisticsBuilder : NSObject
{
    HKQuantityType *_quantityType;
    _HKFilter *_filter;
    HDSQLitePredicate *_predicate;
    unsigned long long _statisticsOptions;
    unsigned long long _mergeStrategy;
    NSNumber *_restrictedSourceIdentifier;
    id <HDHealthDaemon> _healthDaemon;
    NSArray *_orderedSources;
}

+ (id)_predicateWithSampleType:(id)arg1 sourceIdentifier:(id)arg2 predicate:(id)arg3;
+ (id)statisticsBuilderWithQuantityType:(id)arg1 filter:(id)arg2 statisticsOptions:(unsigned long long)arg3 mergeStrategy:(unsigned long long)arg4 restrictedSourceIdentifier:(id)arg5 healthDaemon:(id)arg6;
@property(readonly, nonatomic) NSArray *orderedSources; // @synthesize orderedSources=_orderedSources;
@property(readonly, nonatomic) id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(readonly, nonatomic) NSNumber *restrictedSourceIdentifier; // @synthesize restrictedSourceIdentifier=_restrictedSourceIdentifier;
@property(readonly, nonatomic) unsigned long long mergeStrategy; // @synthesize mergeStrategy=_mergeStrategy;
@property(readonly, nonatomic) unsigned long long statisticsOptions; // @synthesize statisticsOptions=_statisticsOptions;
@property(readonly, nonatomic) HDSQLitePredicate *predicate; // @synthesize predicate=_predicate;
@property(readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property(readonly, nonatomic) HKQuantityType *quantityType; // @synthesize quantityType=_quantityType;
- (void).cxx_destruct;
- (id)_initialStatisticsForStartDate:(id)arg1 endDate:(id)arg2 shouldStopProcessing:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (id)_initialStatisticsForCollection:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 sampleCount:(long long)arg4 shouldStopProcessing:(CDUnknownBlockType)arg5 error:(id *)arg6;
- (void)_setupOrderedSources;
- (void)_enumerateSamplesWithType:(id)arg1 predicate:(id)arg2 database:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)updateStatistics:(id)arg1 withSamples:(id)arg2 error:(id *)arg3;
- (id)updateStatisticsCollection:(id)arg1 withSamples:(id)arg2 anchor:(id)arg3 error:(id *)arg4;
- (id)initialStatisticsShouldStopProcessing:(CDUnknownBlockType)arg1 error:(id *)arg2;
- (id)initialStatisticsForCollection:(id)arg1 shouldStopProcessing:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)initWithQuantityType:(id)arg1 filter:(id)arg2 statisticsOptions:(unsigned long long)arg3 mergeStrategy:(unsigned long long)arg4 restrictedSourceIdentifier:(id)arg5 healthDaemon:(id)arg6;

@end

@interface HDCorrelationSampleEntity : HDSampleEntity
{
}

+ (id)codableObjectsFromObjectCollection:(id)arg1;
+ (id)_objectsWithIDs:(id)arg1 healthDaemon:(id)arg2;
+ (id)deleteStatementsForRelatedEntitiesInDatabase:(id)arg1;
+ (_Bool)acceptsObject:(id)arg1;
+ (Class)propertyApplierClass;
+ (id)createTableSQL;
+ (_Bool)isBackedByTable;
+ (id)_tableValuesFromDataObject:(id)arg1;
+ (Class)_associatedDataObjectClass;
- (_Bool)deleteFromDatabase:(id)arg1 error:(id *)arg2;

@end

@interface HDCorrelationSamplePropertyApplier : HDDataPropertyApplier
{
}

- (void)applyPropertiesToObject:(id)arg1 entity:(id)arg2 values:(id *)arg3 healthDaemon:(id)arg4;

@end

@interface HDCodableNanoSyncStatus : PBCodable <HDSyncAnchorMap, HDNanoSyncDescription, HDNanoSyncPersistentUserInfoCopying, NSCopying>
{
    NSMutableArray *_anchors;
    int _statusCode;
    struct {
        unsigned int statusCode:1;
    } _has;
}

+ (id)statusWithStatusCode:(int)arg1;
+ (id)persistentUserInfoKey;
+ (id)retreiveFromPersistentUserInfo:(id)arg1;
@property(retain, nonatomic) NSMutableArray *anchors; // @synthesize anchors=_anchors;
@property(nonatomic) int statusCode; // @synthesize statusCode=_statusCode;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)anchorsAtIndex:(unsigned long long)arg1;
- (unsigned long long)anchorsCount;
- (void)addAnchors:(id)arg1;
- (void)clearAnchors;
@property(nonatomic) _Bool hasStatusCode;
- (id)nanoSyncDescription;
- (unsigned long long)anchorCount;
- (void)enumerateAnchorsAndSyncEntitiesWithBlock:(CDUnknownBlockType)arg1;
- (long long)anchorForSyncEntityClass:(Class)arg1;
- (void)setAnchor:(long long)arg1 forSyncEntity:(Class)arg2;
- (id)copyForPersistentUserInfo;
- (void)addToPersistentUserInfo:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface HDCodableCorrelation : PBCodable <NSCopying>
{
    HDCodableSample *_sample;
}

@property(retain, nonatomic) HDCodableSample *sample; // @synthesize sample=_sample;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSample;

@end

@interface HDUserCharacteristicsManager : NSObject <HDHealthDaemonReadyObserver, HDDatabaseProtectedDataObserver, HDDataObserver, HDDiagnosticObject>
{
    _Bool _shouldUpdateQuantityCharacteristics;
    _Bool _shouldUpdateUserProfile;
    _Bool _needsUpdateAfterUnlock;
    id <HDHealthDaemon> _healthDaemon;
    NSObject<OS_dispatch_queue> *_queue;
    NSDate *_userProfileLastUpdated;
    NSDictionary *_lastUserProfile;
}

@property(nonatomic) _Bool needsUpdateAfterUnlock; // @synthesize needsUpdateAfterUnlock=_needsUpdateAfterUnlock;
@property(copy, nonatomic) NSDictionary *lastUserProfile; // @synthesize lastUserProfile=_lastUserProfile;
@property(retain, nonatomic) NSDate *userProfileLastUpdated; // @synthesize userProfileLastUpdated=_userProfileLastUpdated;
@property(readonly, nonatomic) _Bool shouldUpdateUserProfile; // @synthesize shouldUpdateUserProfile=_shouldUpdateUserProfile;
@property(readonly, nonatomic) _Bool shouldUpdateQuantityCharacteristics; // @synthesize shouldUpdateQuantityCharacteristics=_shouldUpdateQuantityCharacteristics;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
- (void).cxx_destruct;
- (id)diagnosticDescription;
- (void)samplesOfTypeWereRemoved:(id)arg1;
- (void)samplesAdded:(id)arg1 anchor:(id)arg2;
- (void)database:(id)arg1 protectedDataDidBecomeAvailable:(_Bool)arg2;
- (void)daemonReady:(id)arg1;
- (id)_mostRecentSampleOfType:(id)arg1 error:(id *)arg2;
- (void)_queue_updateQuantityCharacteristics;
- (void)_queue_updateUserProfile;
- (void)_queue_updateQuantityCharacteristicsAndUserProfileIfNeeded;
- (void)_updateQuantityCharacteristicsAndUserProfile;
- (void)_userCharacteristicsDidChangeShouldUpdateUserProfile:(_Bool)arg1 shouldSync:(_Bool)arg2;
- (_Bool)_setUserCharacteristic:(id)arg1 forType:(id)arg2 shouldInsertSample:(_Bool)arg3 error:(id *)arg4;
- (_Bool)setUserCharacteristic:(id)arg1 forType:(id)arg2 error:(id *)arg3;
- (id)_userCharacteristicForType:(id)arg1 entity:(id *)arg2 error:(id *)arg3;
- (id)userCharacteristicForType:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithHealthDaemon:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HDUserCharacteristicSyncEntity : HDKeyValueSyncEntity
{
}

+ (void)didReceiveKeysAndValuesWithHealthDaemon:(id)arg1;
+ (long long)syncEntityType;
+ (long long)category;
+ (int)nanoSyncObjectType;

@end

@interface NSError (HDIDSError)
@property(readonly, nonatomic, getter=hd_isFromRequest) _Bool hd_fromRequest;
@property(readonly, nonatomic) NSDictionary *hd_persistentUserInfo;
@property(readonly, nonatomic) NSString *hd_messageIDSIdentifier;
@property(readonly, nonatomic) NSDate *hd_messageSent;
@property(readonly, nonatomic) unsigned short hd_messageID;
@end

@interface _HKActivityCacheIndexFilter (ExtendedSQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface NSError (HDNanoSyncSupport)
- (id)hd_persistentMessage;
@end

@interface HKQuery (HDQueryServerExtensions)
+ (Class)hd_queryServerClass;
@end

@interface HKObject (HDDataEntity)
- (_Bool)hd_insertRelatedDataWithHealthDaemon:(id)arg1 database:(id)arg2 entity:(id)arg3 error:(id *)arg4;
- (id)hd_relatedJournalEntries;
- (long long)entityType;
@end

@interface HKSample (HDDataEntity)
- (long long)entityType;
@end

@interface HKCorrelation (HDDataEntity)
- (void)hd_cleanupBeforeJournalInsertion;
- (id)hd_relatedJournalEntries;
- (_Bool)hd_insertRelatedDataWithHealthDaemon:(id)arg1 database:(id)arg2 entity:(id)arg3 error:(id *)arg4;
@end

@interface HKWorkout (HDDataEntity)
- (_Bool)hd_insertRelatedDataWithHealthDaemon:(id)arg1 database:(id)arg2 entity:(id)arg3 error:(id *)arg4;
@end

@interface NSScanner (SQLiteSQLParsingAdditions)
+ (id)SQLParsingScannerWithSQL:(id)arg1;
- (_Bool)_scanThroughQuoteWithDelimiter:(id)arg1 appendToString:(id)arg2;
- (_Bool)_scanBalancedSubstringFromCharacter:(unsigned short)arg1 appendToString:(id)arg2;
- (_Bool)_scanUpToTopLevelDelimiters:(id)arg1 intoString:(id *)arg2;
- (_Bool)_scanSQLiteIdentifierCharactersIntoString:(id *)arg1;
- (_Bool)_scanSQLiteIdentifierIntoString:(id *)arg1;
- (_Bool)_scanTableSQLConstraint:(id *)arg1;
- (_Bool)_scanTableSQLColumn:(id *)arg1;
- (_Bool)scanTableSQLColumns:(id *)arg1 constraints:(id *)arg2;
- (_Bool)scanTableSQLPreambleAndTableName:(id *)arg1;
@end

@interface NSDictionary (HDCodingSupport)
+ (id)hk_dictionaryWithCodableMetadata:(id)arg1;
- (id)hk_codableMetadata;
@end

@interface HKAchievement (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKObject (HDCodingSupport)
- (_Bool)addCodableRepresentationToCollectionForSync:(id)arg1;
- (_Bool)addCodableRepresentationToCollectionForJournal:(id)arg1;
- (_Bool)addCodableRepresentationToCollection:(id)arg1;
- (id)codableRepresentationForSync;
@end

@interface HKSample (HDCodingSupport)
- (id)codableRepresentationForSync;
@end

@interface HKActivityCache (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (_Bool)addCodableRepresentationToCollectionForSync:(id)arg1;
- (_Bool)addCodableRepresentationToCollectionForJournal:(id)arg1;
- (id)codableRepresentationForJournal;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKCategorySample (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (_Bool)addCodableRepresentationToCollection:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKQuantitySample (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (_Bool)addCodableRepresentationToCollection:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKWorkout (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (id)codableWorkoutEvents;
- (_Bool)addCodableRepresentationToCollection:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKWorkoutEvent (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKCorrelation (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (_Bool)addCodableRepresentationToCollection:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface HKSource (HDCodingSupport) <HDCoding>
+ (id)createWithCodable:(id)arg1;
- (id)codableRepresentationForSync;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSNumber (HDCodingSupport)
- (_Bool)hk_hasFloatingPointValue;
@end

@interface _HKFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKMetadataFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKContainsMetadataFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKComparisonMetadataFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKStartDateFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKEndDateFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKSourceFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
- (id)_sourceIdentifiersWithHealthDaemon:(id)arg1;
@end

@interface _HKQuantityFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKCategoryValueFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKCompoundFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKUUIDFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKCorrelationFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKPropertyComparisonFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutActivityTypeFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutDurationFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutTotalDistanceFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutTotalEnergyBurnedFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutGoalFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

@interface _HKWorkoutGoalTypeFilter (SQLitePredicate)
- (id)predicateWithHealthDaemon:(id)arg1;
@end

