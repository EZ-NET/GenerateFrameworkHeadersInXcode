//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct vImage_Buffer {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/MacOS/itms/java/lib/lwawt/liblwawt.dylib
// UUID: 26DFC552-6293-3E73-A60E-60478609B5CB
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//       Minimum Mac OS X version: 10.6.0
//                    SDK version: 10.6.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/.
//                               = /Applications/Xcode.app/Contents/Applications/Application Loader.app/Contents/MacOS/itms/java/lib/lwawt
//

@protocol JAWT_SurfaceLayers
@property(readonly) CALayer *windowLayer;
@property(retain) CALayer *layer;
@end

@protocol JavaAccessibilityAction
- (id)getDescription;
- (void)perform;
@end

@protocol NSApplicationDelegate <NSObject>

@optional
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)application:(id)arg1 openFile:(id)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (BOOL)application:(id)arg1 openTempFile:(id)arg2;
- (BOOL)applicationShouldOpenUntitledFile:(id)arg1;
- (BOOL)applicationOpenUntitledFile:(id)arg1;
- (BOOL)application:(id)arg1 openFileWithoutUI:(id)arg2;
- (BOOL)application:(id)arg1 printFile:(id)arg2;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (BOOL)applicationShouldTerminateAfterLastWindowClosed:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (id)applicationDockMenu:(id)arg1;
- (id)application:(id)arg1 willPresentError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)application:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)applicationWillFinishLaunching:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationWillHide:(id)arg1;
- (void)applicationDidHide:(id)arg1;
- (void)applicationWillUnhide:(id)arg1;
- (void)applicationDidUnhide:(id)arg1;
- (void)applicationWillBecomeActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidResignActive:(id)arg1;
- (void)applicationWillUpdate:(id)arg1;
- (void)applicationDidUpdate:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidChangeScreenParameters:(id)arg1;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (void)menuNeedsUpdate:(id)arg1;
- (long long)numberOfItemsInMenu:(id)arg1;
- (BOOL)menu:(id)arg1 updateItem:(id)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (BOOL)menuHasKeyEquivalent:(id)arg1 forEvent:(id)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (void)menuWillOpen:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)menu:(id)arg1 willHighlightItem:(id)arg2;
- (struct CGRect)confinementRectForMenu:(id)arg1 onScreen:(id)arg2;
@end

@protocol NSObject
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (Class)superclass;
- (Class)class;
- (id)self;
- (struct _NSZone *)zone;
- (id)performSelector:(SEL)arg1;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (BOOL)isProxy;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)conformsToProtocol:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)retain;
- (oneway void)release;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)description;

@optional
- (id)debugDescription;
@end

@protocol NSOpenSavePanelDelegate <NSObject>

@optional
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (BOOL)panel:(id)arg1 validateURL:(id)arg2 error:(id *)arg3;
- (void)panel:(id)arg1 didChangeToDirectoryURL:(id)arg2;
- (id)panel:(id)arg1 userEnteredFilename:(id)arg2 confirmed:(BOOL)arg3;
- (void)panel:(id)arg1 willExpand:(BOOL)arg2;
- (void)panelSelectionDidChange:(id)arg1;
@end

@protocol NSTextInputClient
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)unmarkText;
- (struct _NSRange)selectedRange;
- (struct _NSRange)markedRange;
- (BOOL)hasMarkedText;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (id)validAttributesForMarkedText;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;

@optional
- (id)attributedString;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1;
- (double)baselineDeltaForCharacterAtIndex:(unsigned long long)arg1;
- (long long)windowLevel;
- (BOOL)drawsVerticallyForCharacterAtIndex:(unsigned long long)arg1;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (BOOL)windowShouldClose:(id)arg1;
- (id)windowWillReturnFieldEditor:(id)arg1 toObject:(id)arg2;
- (struct CGSize)windowWillResize:(id)arg1 toSize:(struct CGSize)arg2;
- (struct CGRect)windowWillUseStandardFrame:(id)arg1 defaultFrame:(struct CGRect)arg2;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (id)windowWillReturnUndoManager:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (BOOL)window:(id)arg1 shouldPopUpDocumentPathMenu:(id)arg2;
- (BOOL)window:(id)arg1 shouldDragDocumentWithEvent:(id)arg2 from:(struct CGPoint)arg3 withPasteboard:(id)arg4;
- (struct CGSize)window:(id)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (unsigned long long)window:(id)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (id)customWindowsToEnterFullScreenForWindow:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (void)windowDidFailToEnterFullScreen:(id)arg1;
- (id)customWindowsToExitFullScreenForWindow:(id)arg1;
- (void)window:(id)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (void)windowDidFailToExitFullScreen:(id)arg1;
- (struct CGSize)window:(id)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)window:(id)arg1 willEncodeRestorableState:(id)arg2;
- (void)window:(id)arg1 didDecodeRestorableState:(id)arg2;
- (void)windowDidResize:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (void)windowWillMove:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (void)windowDidResignMain:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)windowWillMiniaturize:(id)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)windowDidUpdate:(id)arg1;
- (void)windowDidChangeScreen:(id)arg1;
- (void)windowDidChangeScreenProfile:(id)arg1;
- (void)windowDidChangeBackingProperties:(id)arg1;
- (void)windowWillBeginSheet:(id)arg1;
- (void)windowDidEndSheet:(id)arg1;
- (void)windowWillStartLiveResize:(id)arg1;
- (void)windowDidEndLiveResize:(id)arg1;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)windowWillEnterVersionBrowser:(id)arg1;
- (void)windowDidEnterVersionBrowser:(id)arg1;
- (void)windowWillExitVersionBrowser:(id)arg1;
- (void)windowDidExitVersionBrowser:(id)arg1;
@end

@interface AWTStarter : NSObject
{
}

+ (BOOL)isConnectedToWindowServer;
+ (BOOL)markAppAsDaemon;
+ (void)appKitIsRunning:(id)arg1;
+ (void)start:(BOOL)arg1 swtMode:(BOOL)arg2 swtModeForWebStart:(BOOL)arg3;
- (void)starter:(id)arg1;

@end

@interface ApplicationDelegate : NSObject <NSApplicationDelegate>
{
    NSMenuItem *fPreferencesMenu;
    NSMenuItem *fAboutMenu;
    NSMenu *fDockMenu;
    CMenuBar *fDefaultMenuBar;
    BOOL fHandlesDocumentTypes;
    BOOL fHandlesURLTypes;
}

+ (id)sharedDelegate;
+ (void)_notifyJava:(int)arg1;
+ (void)_willFinishLaunching;
+ (void)_systemWillPowerOff;
+ (void)_appDidActivate;
+ (void)_appDidDeactivate;
+ (void)_appDidHide;
+ (void)_appDidUnhide;
+ (void)_sessionDidActivate;
+ (void)_sessionDidDeactivate;
+ (void)_screenDidSleep;
+ (void)_screenDidWake;
+ (void)_systemDidSleep;
+ (void)_systemDidWake;
+ (void)_registerForNotification:(id)arg1;
+ (void)_setDockIconImage:(id)arg1;
+ (id)_dockIconImage;
- (void)_updatePreferencesMenu:(BOOL)arg1 enabled:(BOOL)arg2;
- (void)_updateAboutMenu:(BOOL)arg1 enabled:(BOOL)arg2;
- (id)init;
- (void)dealloc;
- (void)_handleOpenURLEvent:(id)arg1 withReplyEvent:(id)arg2;
- (struct _jobject *)_createFilePathArrayFrom:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;
- (void)application:(id)arg1 openFiles:(id)arg2;
- (unsigned long long)application:(id)arg1 printFiles:(id)arg2 withSettings:(id)arg3 showPrintPanels:(BOOL)arg4;
- (void)_aboutMenuHandler;
- (void)_preferencesMenuHandler;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (id)applicationDockMenu:(id)arg1;
- (id)defaultMenuBar;
@property(retain, nonatomic) CMenuBar *fDefaultMenuBar; // @synthesize fDefaultMenuBar;
@property(retain, nonatomic) NSMenu *fDockMenu; // @synthesize fDockMenu;
@property(retain, nonatomic) NSMenuItem *fAboutMenu; // @synthesize fAboutMenu;
@property(retain, nonatomic) NSMenuItem *fPreferencesMenu; // @synthesize fPreferencesMenu;

@end

@interface JavaAWTAppDelegateLoader : NSObject
{
}

+ (id)awtAppDelegate;

@end

@interface GraphicsConfigUtil : NSObject
{
}

+ (void)_getCGLConfigInfo:(id)arg1;

@end

@interface CGLLayer : CAOpenGLLayer
{
    JNFJObjectWrapper *javaLayer;
    unsigned int textureID;
    unsigned int target;
    float textureWidth;
    float textureHeight;
}

- (id)initWithJavaLayer:(id)arg1;
- (void)dealloc;
- (struct _CGLPixelFormatObject *)copyCGLPixelFormatForDisplayMask:(unsigned int)arg1;
- (struct _CGLContextObject *)copyCGLContextForPixelFormat:(struct _CGLPixelFormatObject *)arg1;
- (void)blitTexture;
- (void)drawInCGLContext:(struct _CGLContextObject *)arg1 pixelFormat:(struct _CGLPixelFormatObject *)arg2 forLayerTime:(double)arg3 displayTime:(const CDStruct_e50ab651 *)arg4;
@property float textureHeight; // @synthesize textureHeight;
@property float textureWidth; // @synthesize textureWidth;
@property unsigned int target; // @synthesize target;
@property unsigned int textureID; // @synthesize textureID;
@property(retain, nonatomic) JNFJObjectWrapper *javaLayer; // @synthesize javaLayer;

@end

@interface CSystemColors : NSObject
{
}

+ (void)initialize;
+ (void)systemColorsDidChange:(id)arg1;
+ (void)reloadColors;
+ (id)getColor:(unsigned long long)arg1 useAppleColor:(BOOL)arg2;

@end

@interface AWTFont : NSObject
{
    NSFont *fFont;
    struct CGFont *fNativeCGFont;
    BOOL fIsFakeItalic;
}

+ (id)awtFontForName:(id)arg1 style:(int)arg2 isFakeItalic:(BOOL)arg3;
+ (id)nsFontForJavaFont:(struct _jobject *)arg1 env:(const struct JNINativeInterface_ **)arg2;
- (id)initWithFont:(id)arg1 isFakeItalic:(BOOL)arg2;
- (void)dealloc;
- (void)finalize;

@end

@interface CGGI_GlyphCanvas : NSObject
{
    struct CGContext *context;
    struct vImage_Buffer *image;
}

@end

@interface AWTStrike : NSObject
{
    AWTFont *fAWTFont;
    double fSize;
    unsigned int fStyle;
    int fAAStyle;
    struct CGAffineTransform fTx;
    struct CGAffineTransform fAltTx;
    struct CGAffineTransform fFontTx;
}

+ (id)awtStrikeForFont:(id)arg1 tx:(struct CGAffineTransform)arg2 invDevTx:(struct CGAffineTransform)arg3 style:(unsigned int)arg4 aaStyle:(int)arg5;
- (id)initWithFont:(id)arg1 tx:(struct CGAffineTransform)arg2 invDevTx:(struct CGAffineTransform)arg3 style:(unsigned int)arg4 aaStyle:(int)arg5;
- (void)dealloc;

@end

@interface AWTView : NSView <NSTextInputClient>
{
    struct _jobject *m_cPlatformView;
    long long rolloverTrackingRectTag;
    CDragSource *_dragSource;
    CDropTarget *_dropTarget;
    struct _jobject *fInputMethodLOCKABLE;
    BOOL fKeyEventsNeeded;
    BOOL fProcessingKeystroke;
    BOOL fEnablePressAndHold;
    BOOL fInPressAndHold;
    BOOL fPAHNeedsToSelect;
    id cglLayer;
    BOOL mouseIsOver;
}

- (id)initWithRect:(struct CGRect)arg1 platformView:(struct _jobject *)arg2 windowLayer:(id)arg3;
- (void)dealloc;
- (void)viewDidMoveToWindow;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)preservesContentDuringLiveResize;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)otherMouseDragged:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)deliverJavaMouseEvent:(id)arg1;
- (void)clearTrackingRect;
- (void)resetTrackingRect;
- (void)updateTrackingAreas;
- (void)resetCursorRects;
- (void)deliverJavaKeyEventHelper:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct _jobject *)awtComponent:(const struct JNINativeInterface_ **)arg1;
- (id)getAxData:(const struct JNINativeInterface_ **)arg1;
- (id)accessibilityAttributeNames;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibleSelectedText;
- (id)accessibleSelectedTextAsRTFD;
- (BOOL)replaceAccessibleTextSelection:(id)arg1;
- (id)validRequestorForSendType:(id)arg1 returnType:(id)arg2;
- (BOOL)writeSelectionToPasteboard:(id)arg1 types:(id)arg2;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)setDragSource:(id)arg1;
- (void)setDropTarget:(id)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (id)namesOfPromisedFilesDroppedAtDestination:(id)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;
- (void)insertText:(id)arg1 replacementRange:(struct _NSRange)arg2;
- (void)doCommandBySelector:(SEL)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)unmarkText;
- (BOOL)hasMarkedText;
- (long long)conversationIdentifier;
- (id)attributedSubstringForProposedRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (struct _NSRange)markedRange;
- (struct _NSRange)selectedRange;
- (struct CGRect)firstRectForCharacterRange:(struct _NSRange)arg1 actualRange:(struct _NSRange *)arg2;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1;
- (id)validAttributesForMarkedText;
- (void)setInputMethod:(struct _jobject *)arg1;
- (void)abandonInput;
@property(nonatomic) BOOL mouseIsOver; // @synthesize mouseIsOver;
@property(retain, nonatomic) id cglLayer; // @synthesize cglLayer;
@property(retain) CDragSource *_dragSource; // @synthesize _dragSource;
@property(retain) CDropTarget *_dropTarget; // @synthesize _dropTarget;

@end

@interface AWTWindow : NSObject <NSWindowDelegate>
{
    JNFWeakJObjectWrapper *javaPlatformWindow;
    CMenuBar *javaMenuBar;
    NSWindow *growBoxWindow;
    struct CGSize javaMinSize;
    struct CGSize javaMaxSize;
    int styleBits;
    BOOL isEnabled;
    NSWindow *nsWindow;
}

+ (unsigned long long)styleMaskForStyleBits:(int)arg1;
+ (id)getNSWindowDisplayID_AppKitThread:(id)arg1;
- (void)updateMinMaxSize:(BOOL)arg1;
- (void)setPropertiesForStyleBits:(int)arg1 mask:(int)arg2;
- (BOOL)shouldShowGrowBox;
- (id)createGrowBoxImage;
- (id)initWithPlatformWindow:(id)arg1 styleBits:(int)arg2 frameRect:(struct CGRect)arg3 contentView:(id)arg4;
- (BOOL)isTopmostWindowUnderMouse;
- (void)synthesizeMouseEnteredExitedEvents;
- (void)dealloc;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)worksWhenModal;
- (void)postGesture:(id)arg1 as:(int)arg2 a:(double)arg3 b:(double)arg4;
- (void)beginGestureWithEvent:(id)arg1;
- (void)endGestureWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)swipeWithEvent:(id)arg1;
- (void)adjustGrowBoxWindow;
- (void)_deliverMoveResizeEvent;
- (void)windowDidMove:(id)arg1;
- (void)windowDidResize:(id)arg1;
- (void)windowDidExpose:(id)arg1;
- (BOOL)windowShouldZoom:(id)arg1 toFrame:(struct CGRect)arg2;
- (void)_deliverIconify:(BOOL)arg1;
- (void)windowDidMiniaturize:(id)arg1;
- (void)windowDidDeminiaturize:(id)arg1;
- (void)_deliverWindowFocusEvent:(BOOL)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeMain:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (void)_notifyFullScreenOp:(int)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;
- (void)windowWillEnterFullScreen:(id)arg1;
- (void)windowDidEnterFullScreen:(id)arg1;
- (void)windowWillExitFullScreen:(id)arg1;
- (void)windowDidExitFullScreen:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)constrainSize:(struct CGSize *)arg1;
- (void)setEnabled:(BOOL)arg1;
@property(nonatomic) BOOL isEnabled; // @synthesize isEnabled;
@property(nonatomic) int styleBits; // @synthesize styleBits;
@property(nonatomic) struct CGSize javaMaxSize; // @synthesize javaMaxSize;
@property(nonatomic) struct CGSize javaMinSize; // @synthesize javaMinSize;
@property(retain, nonatomic) NSWindow *growBoxWindow; // @synthesize growBoxWindow;
@property(retain, nonatomic) CMenuBar *javaMenuBar; // @synthesize javaMenuBar;
@property(retain, nonatomic) JNFWeakJObjectWrapper *javaPlatformWindow; // @synthesize javaPlatformWindow;
@property(retain, nonatomic) NSWindow *nsWindow; // @synthesize nsWindow;

@end

@interface AWTWindow_Panel : NSPanel
{
}

- (id)initWithDelegate:(id)arg1 frameRect:(struct CGRect)arg2 styleMask:(unsigned long long)arg3 contentView:(id)arg4;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)worksWhenModal;
- (void)sendEvent:(id)arg1;

@end

@interface AWTWindow_Normal : NSWindow
{
}

- (id)initWithDelegate:(id)arg1 frameRect:(struct CGRect)arg2 styleMask:(unsigned long long)arg3 contentView:(id)arg4;
- (BOOL)canBecomeKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)worksWhenModal;
- (void)sendEvent:(id)arg1;

@end

@interface JavaResizeGrowBoxOverlayWindow : NSWindow
{
}

- (BOOL)accessibilityIsIgnored;
- (id)accessibilityChildrenAttribute;

@end

@interface AWTSurfaceLayers : NSObject <JAWT_SurfaceLayers>
{
    CALayer *layer;
    CALayer *windowLayer;
}

+ (void)repaintLayersRecursively:(id)arg1;
- (id)initWithWindowLayer:(id)arg1;
@property(retain) CALayer *layer;
- (void)setBounds:(struct CGRect)arg1;
@property(readonly) CALayer *windowLayer; // @synthesize windowLayer;

@end

@interface CClipboard : NSObject
{
    struct _jobject *fClipboardOwner;
    long long fChangeCount;
}

+ (id)sharedClipboard;
- (id)init;
- (void)javaDeclareTypes:(id)arg1 withOwner:(struct _jobject *)arg2 jniEnv:(const struct JNINativeInterface_ **)arg3;
- (void)_nativeDeclareTypes:(id)arg1;
- (id)javaGetTypes;
- (void)_nativeGetTypes:(id)arg1;
- (void)javaSetData:(id)arg1 forType:(id)arg2;
- (void)_nativeSetData:(id)arg1;
- (id)javaGetDataForType:(id)arg1;
- (void)_nativeGetDataForType:(id)arg1;
- (void)checkPasteboard:(id)arg1;
- (void)pasteboardChangedOwner:(id)arg1;

@end

@interface CClipboardUpdate : NSObject
{
    NSData *fData;
    NSString *fFormat;
}

- (id)initWithData:(id)arg1 withFormat:(id)arg2;
- (void)dealloc;
- (id)data;
- (id)format;

@end

@interface CDragSource : NSObject
{
    NSView *fView;
    struct _jobject *fComponent;
    struct _jobject *fComponentPeer;
    struct _jobject *fDragSourceContextPeer;
    struct _jobject *fTransferable;
    struct _jobject *fTriggerEvent;
    long long fTriggerEventTimeStamp;
    struct CGPoint fDragPos;
    int fClickCount;
    int fModifiers;
    struct _jobject *fCursor;
    NSImage *fDragImage;
    struct CGPoint fDragImageOffset;
    int fSourceActions;
    struct _jobject *fFormats;
    struct _jobject *fFormatMap;
    int fDragKeyModifiers;
    int fDragMouseModifiers;
}

+ (id)currentDragSource;
- (id)init:(struct _jobject *)arg1 component:(struct _jobject *)arg2 peer:(struct _jobject *)arg3 control:(id)arg4 transferable:(struct _jobject *)arg5 triggerEvent:(struct _jobject *)arg6 dragPosX:(int)arg7 dragPosY:(int)arg8 modifiers:(int)arg9 clickCount:(int)arg10 timeStamp:(long long)arg11 cursor:(struct _jobject *)arg12 dragImage:(struct _jobject *)arg13 dragImageOffsetX:(int)arg14 dragImageOffsetY:(int)arg15 sourceActions:(int)arg16 formats:(struct _jobject *)arg17 formatMap:(struct _jobject *)arg18;
- (void)removeFromView:(const struct JNINativeInterface_ **)arg1;
- (void)dealloc;
- (struct _jobject *)dataTransferer:(const struct JNINativeInterface_ **)arg1;
- (struct _jobject *)convertData:(long long)arg1;
- (id)getFileList:(char *)arg1 dataLength:(int)arg2;
- (BOOL)declareTypesToPasteboard:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;
- (void)pasteboard:(id)arg1 provideDataForType:(id)arg2;
- (void)validateDragImage;
- (id)nsDragEvent:(BOOL)arg1;
- (void)doDrag;
- (void)drag;
- (void)draggingOperationChanged:(unsigned long long)arg1;
- (unsigned long long)draggingSourceOperationMaskForLocal:(BOOL)arg1;
- (void)draggedImage:(id)arg1 beganAt:(struct CGPoint)arg2;
- (void)draggedImage:(id)arg1 endedAt:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggedImage:(id)arg1 movedTo:(struct CGPoint)arg2;
- (BOOL)ignoreModifierKeysWhileDragging;
- (void)postDragEnter;
- (void)postDragExit;
- (struct CGPoint)mapNSScreenPointToJavaWithOffset:(struct CGPoint)arg1;

@end

@interface CDropTarget : NSObject
{
    NSView *fView;
    struct _jobject *fComponent;
    struct _jobject *fDropTarget;
    struct _jobject *fDropTargetContextPeer;
}

+ (id)currentDropTarget;
- (id)init:(struct _jobject *)arg1 component:(struct _jobject *)arg2 peer:(struct _jobject *)arg3 control:(id)arg4;
- (void)controlModelControlValid;
- (void)releaseDraggingData;
- (void)removeFromView:(const struct JNINativeInterface_ **)arg1;
- (void)dealloc;
- (long long)getDraggingSequenceNumber;
- (void)dumpPasteboard:(id)arg1;
- (BOOL)copyDraggingTypes:(id)arg1;
- (BOOL)copyDraggingData:(id)arg1;
- (id)getDraggingDataForURL:(id)arg1;
- (struct _jobject *)copyDraggingDataForFormat:(long long)arg1;
- (void)safeReleaseDraggingData:(id)arg1;
- (void)javaDraggingEnded:(long long)arg1 success:(BOOL)arg2 action:(int)arg3;
- (int)currentJavaActions;
- (void)calculateCurrentSourceActions:(int *)arg1 dropAction:(int *)arg2;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (void)concludeDragOperation:(id)arg1;
- (void)draggingEnded:(id)arg1;

@end

@interface CInputMethod : NSObject
{
}

+ (void)setKeyboardLayout:(id)arg1;
+ (void)_nativeNotifyPeerWithView:(id)arg1 inputMethod:(id)arg2;
+ (void)_nativeEndComposition:(id)arg1;

@end

@interface DnDUtilities : NSObject
{
}

+ (id)javaPboardType;
+ (int)mapNSDragOperationToJava:(unsigned long long)arg1;
+ (int)mapNSDragOperationMaskToJava:(unsigned long long)arg1;
+ (int)narrowJavaDropActions:(int)arg1;
+ (unsigned long long)mapJavaDragOperationToNS:(int)arg1;
+ (unsigned long long)mapJavaExtModifiersToNSMouseDownButtons:(int)arg1;
+ (unsigned long long)mapJavaExtModifiersToNSMouseUpButtons:(int)arg1;
+ (int)extractJavaExtKeyModifiersFromJavaExtModifiers:(int)arg1;
+ (int)extractJavaExtMouseModifiersFromJavaExtModifiers:(int)arg1;
+ (unsigned long long)nsDragOperationForModifiers:(unsigned long long)arg1;
+ (int)javaKeyModifiersForNSDragOperation:(unsigned long long)arg1;

@end

@interface CFileDialog : NSObject <NSOpenSavePanelDelegate>
{
    unsigned char fHasFileFilter;
    struct _jobject *fFileDialog;
    long long fPanelResult;
    NSString *fTitle;
    NSString *fDirectory;
    NSString *fFile;
    int fMode;
    BOOL fMultipleMode;
    BOOL fNavigateApps;
    BOOL fChooseDirectories;
    NSArray *fURLs;
}

- (id)initWithFilter:(unsigned char)arg1 fileDialog:(struct _jobject *)arg2 title:(id)arg3 directory:(id)arg4 file:(id)arg5 mode:(int)arg6 multipleMode:(BOOL)arg7 shouldNavigate:(BOOL)arg8 canChooseDirectories:(BOOL)arg9 withEnv:(const struct JNINativeInterface_ **)arg10;
- (void)disposer;
- (void)dealloc;
- (void)safeSaveOrLoad;
- (BOOL)askFilenameFilter:(id)arg1;
- (BOOL)panel:(id)arg1 shouldEnableURL:(id)arg2;
- (BOOL)userClickedOK;
- (id)URLs;

@end

@interface CMenu : CMenuItem
{
    NSMenu *fMenu;
}

- (id)initWithPeer:(struct _jobject *)arg1;
- (void)dealloc;
- (void)addJavaSubmenu:(id)arg1;
- (void)addJavaMenuItem:(id)arg1;
- (void)addNativeItem_OnAppKitThread:(id)arg1;
- (void)setJavaMenuTitle:(id)arg1;
- (void)setNativeMenuTitle_OnAppKitThread:(id)arg1;
- (void)addSeparator;
- (void)deleteJavaItem:(int)arg1;
- (void)deleteNativeJavaItem_OnAppKitThread:(id)arg1;
- (void)addNSMenuItemToMenu:(id)arg1;
- (id)menu;
- (void)setNativeEnabled_OnAppKitThread:(id)arg1;
- (id)description;

@end

@interface CMenuBar : CMenuComponent
{
    NSMutableArray *fMenuList;
    CMenu *fHelpMenu;
    BOOL fModallyDisabled;
}

+ (void)clearMenuBarExcludingAppleMenu_OnAppKitThread:(BOOL)arg1;
+ (BOOL)isActiveMenuBar:(id)arg1;
+ (void)activate:(id)arg1 modallyDisabled:(BOOL)arg2;
+ (void)addDefaultHelpMenu;
- (id)initWithPeer:(struct _jobject *)arg1;
- (void)dealloc;
- (void)deactivate;
- (void)javaAddMenu:(id)arg1;
- (void)javaAddMenu:(id)arg1 atIndex:(int)arg2;
- (long long)javaIndexToNSMenuIndex_OnAppKitThread:(int)arg1;
- (void)nativeAddMenuAtIndex_OnAppKitThread:(id)arg1;
- (void)javaDeleteMenu:(int)arg1;
- (void)nativeDeleteMenu_OnAppKitThread:(id)arg1;
- (void)javaSetHelpMenu:(id)arg1;

@end

@interface CMenuComponent : NSObject
{
    struct _jobject *fPeer;
}

- (id)initWithPeer:(struct _jobject *)arg1;
- (void)cleanup;
- (void)disposer;
- (void)_create_OnAppKitThread:(id)arg1;

@end

@interface CMenuItem : CMenuComponent
{
    NSMenuItem *fMenuItem;
    BOOL fIsCheckbox;
    BOOL fIsEnabled;
}

- (id)initWithPeer:(struct _jobject *)arg1 asSeparator:(id)arg2;
- (BOOL)worksWhenModal;
- (void)handleAction:(id)arg1;
- (void)setJavaLabel:(id)arg1 shortcut:(id)arg2 modifierMask:(int)arg3;
- (void)setJavaImage:(id)arg1;
- (void)setJavaToolTipText:(id)arg1;
- (void)setJavaEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
- (void)setJavaState:(BOOL)arg1;
- (void)cleanup;
- (void)dealloc;
- (void)addNSMenuItemToMenu:(id)arg1;
- (id)menuItem;
- (void)setIsCheckbox;
- (void)_createMenuItem_OnAppKitThread:(id)arg1;
- (id)description;

@end

@interface CPopupMenu : CMenu
{
}

- (id)initWithPeer:(struct _jobject *)arg1;
- (id)description;

@end

@interface AWTTrayIconView : NSView <NSMenuDelegate>
{
    AWTTrayIcon *trayIcon;
    NSImage *image;
    BOOL isHighlighted;
}

- (id)initWithTrayIcon:(id)arg1;
- (void)dealloc;
- (void)setHighlighted:(BOOL)arg1;
- (void)setImage:(id)arg1;
- (void)setTrayIcon:(id)arg1;
- (void)menuWillOpen:(id)arg1;
- (void)menuDidClose:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)otherMouseDown:(id)arg1;
- (void)otherMouseUp:(id)arg1;
- (void)otherMouseDragged:(id)arg1;

@end

@interface AWTTrayIcon : NSObject
{
    struct _jobject *peer;
    AWTTrayIconView *view;
    NSStatusItem *theItem;
}

- (id)initWithPeer:(struct _jobject *)arg1;
- (void)dealloc;
- (void)setTooltip:(id)arg1;
- (id)theItem;
- (struct _jobject *)peer;
- (void)setImage:(id)arg1 sizing:(BOOL)arg2;
- (struct CGPoint)getLocationOnScreen;
- (void)deliverJavaMouseEvent:(id)arg1;

@end

@interface TabGroupAction : NSObject <JavaAccessibilityAction>
{
    struct _jobject *fTabGroup;
    int fIndex;
    struct _jobject *fComponent;
}

- (id)initWithEnv:(const struct JNINativeInterface_ **)arg1 withTabGroup:(struct _jobject *)arg2 withIndex:(int)arg3 withComponent:(struct _jobject *)arg4;
- (void)dealloc;
- (void)finalize;
- (id)getDescription;
- (void)perform;

@end

@interface JavaAxAction : NSObject <JavaAccessibilityAction>
{
    struct _jobject *fAccessibleAction;
    int fIndex;
    struct _jobject *fComponent;
}

- (id)initWithEnv:(const struct JNINativeInterface_ **)arg1 withAccessibleAction:(struct _jobject *)arg2 withIndex:(int)arg3 withComponent:(struct _jobject *)arg4;
- (void)dealloc;
- (void)finalize;
- (id)getDescription;
- (void)perform;

@end

@interface ScrollAreaAccessibility : JavaComponentAccessibility
{
}

- (id)initializeAttributeNamesWithEnv:(const struct JNINativeInterface_ **)arg1;
- (id)accessibilityHorizontalScrollBarAttribute;
- (BOOL)accessibilityIsHorizontalScrollBarAttributeSettable;
- (id)accessibilityVerticalScrollBarAttribute;
- (BOOL)accessibilityIsVerticalScrollBarAttributeSettable;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;

@end

@interface TabGroupControlAccessibility : JavaComponentAccessibility
{
    struct _jobject *fTabGroupAxContext;
}

- (id)initWithParent:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withAccessible:(struct _jobject *)arg3 withIndex:(int)arg4 withTabGroup:(struct _jobject *)arg5 withView:(id)arg6 withJavaRole:(id)arg7;
- (void)dealloc;
- (void)finalize;
- (id)accessibilityValueAttribute;
- (void)getActionsWithEnv:(const struct JNINativeInterface_ **)arg1;
- (struct _jobject *)tabGroup;

@end

@interface TabGroupAccessibility : JavaComponentAccessibility
{
    long long _numTabs;
}

- (id)initWithParent:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withAccessible:(struct _jobject *)arg3 withIndex:(int)arg4 withView:(id)arg5 withJavaRole:(id)arg6;
- (id)initializeAttributeNamesWithEnv:(const struct JNINativeInterface_ **)arg1;
- (id)currentTabWithEnv:(const struct JNINativeInterface_ **)arg1 withAxContext:(struct _jobject *)arg2;
- (id)tabControlsWithEnv:(const struct JNINativeInterface_ **)arg1 withTabGroupAxContext:(struct _jobject *)arg2 withTabCode:(long long)arg3 allowIgnored:(BOOL)arg4;
- (id)contentsWithEnv:(const struct JNINativeInterface_ **)arg1 withTabGroupAxContext:(struct _jobject *)arg2 withTabCode:(long long)arg3 allowIgnored:(BOOL)arg4;
- (id)accessibilityTabsAttribute;
- (BOOL)accessibilityIsTabsAttributeSettable;
- (long long)numTabs;
- (id)accessibilityContentsAttribute;
- (BOOL)accessibilityIsContentsAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityChildrenAttribute;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;

@end

@interface JavaComponentAccessibility : NSObject
{
    NSView *fView;
    NSObject *fParent;
    NSString *fNSRole;
    NSString *fJavaRole;
    int fIndex;
    struct _jobject *fAccessible;
    struct _jobject *fComponent;
    NSMutableDictionary *fActions;
    NSObject *fActionsLOCK;
}

+ (void)initialize;
+ (void)postFocusChanged:(id)arg1;
+ (struct _jobject *)getCAccessible:(struct _jobject *)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;
+ (id)childrenOfParent:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withChildrenCode:(long long)arg3 allowIgnored:(BOOL)arg4;
+ (id)createWithAccessible:(struct _jobject *)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withView:(id)arg3;
+ (id)createWithAccessible:(struct _jobject *)arg1 role:(id)arg2 index:(int)arg3 withEnv:(const struct JNINativeInterface_ **)arg4 withView:(id)arg5;
+ (id)createWithParent:(id)arg1 accessible:(struct _jobject *)arg2 role:(id)arg3 index:(int)arg4 withEnv:(const struct JNINativeInterface_ **)arg5 withView:(id)arg6;
- (id)description;
- (id)initWithParent:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withAccessible:(struct _jobject *)arg3 withIndex:(int)arg4 withView:(id)arg5 withJavaRole:(id)arg6;
- (void)unregisterFromCocoaAXSystem;
- (void)dealloc;
- (void)finalize;
- (void)postValueChanged;
- (void)postSelectionChanged;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isAccessibleWithEnv:(const struct JNINativeInterface_ **)arg1 forAccessible:(struct _jobject *)arg2;
- (id)initializeAttributeNamesWithEnv:(const struct JNINativeInterface_ **)arg1;
- (id)getActions:(const struct JNINativeInterface_ **)arg1;
- (void)getActionsWithEnv:(const struct JNINativeInterface_ **)arg1;
- (struct _jobject *)axContextWithEnv:(const struct JNINativeInterface_ **)arg1;
- (id)parent;
- (id)view;
- (id)window;
- (id)javaRole;
- (BOOL)isMenu;
- (BOOL)isSelected:(const struct JNINativeInterface_ **)arg1;
- (BOOL)isVisible:(const struct JNINativeInterface_ **)arg1;
- (id)accessibilityAttributeNames;
- (BOOL)accessibilityShouldUseUniqueId;
- (BOOL)accessibilitySupportsOverriddenAttributes;
- (id)accessibilityAttributeValue:(id)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (void)accessibilitySetValue:(id)arg1 forAttribute:(id)arg2;
- (id)accessibilityChildrenAttribute;
- (BOOL)accessibilityIsChildrenAttributeSettable;
- (unsigned long long)accessibilityIndexOfChild:(id)arg1;
- (id)accessibilityArrayAttributeValues:(id)arg1 index:(unsigned long long)arg2 maxCount:(unsigned long long)arg3;
- (id)accessibilityEnabledAttribute;
- (BOOL)accessibilityIsEnabledAttributeSettable;
- (id)accessibilityFocusedAttribute;
- (BOOL)accessibilityIsFocusedAttributeSettable;
- (void)accessibilitySetFocusedAttribute:(id)arg1;
- (id)accessibilityHelpAttribute;
- (BOOL)accessibilityIsHelpAttributeSettable;
- (id)accessibilityMaxValueAttribute;
- (BOOL)accessibilityIsMaxValueAttributeSettable;
- (id)accessibilityMinValueAttribute;
- (BOOL)accessibilityIsMinValueAttributeSettable;
- (id)accessibilityOrientationAttribute;
- (BOOL)accessibilityIsOrientationAttributeSettable;
- (id)accessibilityParentAttribute;
- (BOOL)accessibilityIsParentAttributeSettable;
- (id)accessibilityPositionAttribute;
- (BOOL)accessibilityIsPositionAttributeSettable;
- (id)accessibilityRoleAttribute;
- (BOOL)accessibilityIsRoleAttributeSettable;
- (id)accessibilityRoleDescriptionAttribute;
- (BOOL)accessibilityIsRoleDescriptionAttributeSettable;
- (id)accessibilitySelectedChildrenAttribute;
- (BOOL)accessibilityIsSelectedChildrenAttributeSettable;
- (id)accessibilitySizeAttribute;
- (BOOL)accessibilityIsSizeAttributeSettable;
- (id)accessibilitySubroleAttribute;
- (BOOL)accessibilityIsSubroleAttributeSettable;
- (id)accessibilityTitleAttribute;
- (BOOL)accessibilityIsTitleAttributeSettable;
- (id)accessibilityTopLevelUIElementAttribute;
- (BOOL)accessibilityIsTopLevelUIElementAttributeSettable;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilityVisibleChildrenAttribute;
- (BOOL)accessibilityIsVisibleChildrenAttributeSettable;
- (id)accessibilityWindowAttribute;
- (BOOL)accessibilityIsWindowAttributeSettable;
- (id)accessibilityActionNames;
- (id)accessibilityActionDescription:(id)arg1;
- (void)accessibilityPerformAction:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityHitTest:(struct CGPoint)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;
- (id)accessibilityFocusedUIElement;

@end

@interface JavaTextAccessibility : JavaComponentAccessibility
{
}

- (id)initializeAttributeNamesWithEnv:(const struct JNINativeInterface_ **)arg1;
- (id)accessibilityParameterizedAttributeNames;
- (id)accessibilityValueAttribute;
- (BOOL)accessibilityIsValueAttributeSettable;
- (void)accessibilitySetValueAttribute:(id)arg1;
- (id)accessibilitySelectedTextAttribute;
- (BOOL)accessibilityIsSelectedTextAttributeSettable;
- (void)accessibilitySetSelectedTextAttribute:(id)arg1;
- (id)accessibilitySelectedTextRangeAttribute;
- (BOOL)accessibilityIsSelectedTextRangeAttributeSettable;
- (void)accessibilitySetSelectedTextRangeAttribute:(id)arg1;
- (id)accessibilityNumberOfCharactersAttribute;
- (BOOL)accessibilityIsNumberOfCharactersAttributeSettable;
- (id)accessibilityVisibleCharacterRangeAttribute;
- (BOOL)accessibilityIsVisibleCharacterRangeAttributeSettable;
- (id)accessibilityInsertionPointLineNumberAttribute;
- (BOOL)accessibilityIsInsertionPointLineNumberAttributeSettable;
- (id)accessibilityBoundsForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityLineForIndexAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForLineAttributeForParameter:(id)arg1;
- (id)accessibilityStringForRangeAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForPositionAttributeForParameter:(id)arg1;
- (id)accessibilityRangeForIndexAttributeForParameter:(id)arg1;
- (id)getActions:(const struct JNINativeInterface_ **)arg1;

@end

@interface AWTRunLoopObject : NSObject
{
    BOOL _shouldEndRunLoop;
}

- (id)init;
- (BOOL)shouldEndRunLoop;
- (void)endRunLoop;

@end

@interface AWTToolkit : NSObject
{
}

+ (long long)getEventCount;
+ (void)eventCountPlusPlus;

@end

@interface PrintModel : NSObject
{
    NSPrintInfo *fPrintInfo;
}

- (id)initWithPrintInfo:(id)arg1;
- (void)dealloc;
- (BOOL)runPageSetup;
- (BOOL)runJobSetup;
- (BOOL)runPrintLoopWithView:(id)arg1 waitUntilDone:(BOOL)arg2 withEnv:(const struct JNINativeInterface_ **)arg3;
- (BOOL)safePrintLoop:(id)arg1 withEnv:(const struct JNINativeInterface_ **)arg2;

@end

@interface PrinterView : NSView
{
    struct _jobject *fPrinterJob;
    struct _jobject *fCurPageFormat;
    struct _jobject *fCurPainter;
    struct _jobject *fCurPeekGraphics;
    int fFirstPage;
    int fLastPage;
}

- (id)initWithFrame:(struct CGRect)arg1 withEnv:(const struct JNINativeInterface_ **)arg2 withPrinterJob:(struct _jobject *)arg3;
- (void)releaseReferences:(const struct JNINativeInterface_ **)arg1;
- (void)setFirstPage:(int)arg1 lastPage:(int)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)printJobTitle;
- (BOOL)knowsPageRange:(struct _NSRange *)arg1;
- (struct CGRect)rectForPage:(long long)arg1;
- (BOOL)cancelCheck:(const struct JNINativeInterface_ **)arg1;
- (void)complete:(const struct JNINativeInterface_ **)arg1;
- (BOOL)isFlipped;

@end

@interface NSBundle (EAWTOverrides)
- (BOOL)_hasEAWTOverride:(id)arg1;
@end

@interface NSEvent (AWTAdditions)
+ (void)javaDraggingBegin;
+ (void)javaDraggingEnd;
@end

